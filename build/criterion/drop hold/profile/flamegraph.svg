<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1237.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="1241"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0806%" y="805" width="0.0806%" height="15" fill="rgb(210,229,51)" fg:x="1" fg:w="1"/><text x="0.3306%" y="815.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="0.3223%" y="741" width="0.2417%" height="15" fill="rgb(242,13,9)" fg:x="4" fg:w="3"/><text x="0.5723%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.4029%" y="725" width="0.1612%" height="15" fill="rgb(252,71,50)" fg:x="5" fg:w="2"/><text x="0.6529%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.8058%" y="709" width="0.1612%" height="15" fill="rgb(218,225,6)" fg:x="10" fg:w="2"/><text x="1.0558%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="0.6446%" y="725" width="0.4835%" height="15" fill="rgb(219,27,35)" fg:x="8" fg:w="6"/><text x="0.8946%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.9670%" y="709" width="0.1612%" height="15" fill="rgb(226,30,1)" fg:x="12" fg:w="2"/><text x="1.2170%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1281%" y="725" width="0.0806%" height="15" fill="rgb(227,164,34)" fg:x="14" fg:w="1"/><text x="1.3781%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="1.2087%" y="725" width="0.4029%" height="15" fill="rgb(206,103,4)" fg:x="15" fg:w="5"/><text x="1.4587%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.4504%" y="709" width="0.1612%" height="15" fill="rgb(214,166,19)" fg:x="18" fg:w="2"/><text x="1.7004%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.6922%" y="709" width="0.0806%" height="15" fill="rgb(240,56,20)" fg:x="21" fg:w="1"/><text x="1.9422%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6922%" y="693" width="0.0806%" height="15" fill="rgb(224,25,3)" fg:x="21" fg:w="1"/><text x="1.9422%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.7728%" y="693" width="0.1612%" height="15" fill="rgb(216,206,54)" fg:x="22" fg:w="2"/><text x="2.0228%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.9339%" y="693" width="0.1612%" height="15" fill="rgb(225,142,10)" fg:x="24" fg:w="2"/><text x="2.1839%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0145%" y="677" width="0.0806%" height="15" fill="rgb(246,9,18)" fg:x="25" fg:w="1"/><text x="2.2645%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 2.01%)</title><rect x="0.1612%" y="757" width="2.0145%" height="15" fill="rgb(247,140,18)" fg:x="2" fg:w="25"/><text x="0.4112%" y="767.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.61%)</title><rect x="0.5641%" y="741" width="1.6116%" height="15" fill="rgb(239,184,22)" fg:x="7" fg:w="20"/><text x="0.8141%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="1.6116%" y="725" width="0.5641%" height="15" fill="rgb(227,94,44)" fg:x="20" fg:w="7"/><text x="1.8616%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="1.7728%" y="709" width="0.4029%" height="15" fill="rgb(219,43,3)" fg:x="22" fg:w="5"/><text x="2.0228%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="2.0951%" y="693" width="0.0806%" height="15" fill="rgb(210,76,31)" fg:x="26" fg:w="1"/><text x="2.3451%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.0951%" y="677" width="0.0806%" height="15" fill="rgb(225,85,12)" fg:x="26" fg:w="1"/><text x="2.3451%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 2.34%)</title><rect x="0.0806%" y="821" width="2.3368%" height="15" fill="rgb(214,191,28)" fg:x="1" fg:w="29"/><text x="0.3306%" y="831.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (28 samples, 2.26%)</title><rect x="0.1612%" y="805" width="2.2562%" height="15" fill="rgb(214,43,14)" fg:x="2" fg:w="28"/><text x="0.4112%" y="815.50">c..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 2.26%)</title><rect x="0.1612%" y="789" width="2.2562%" height="15" fill="rgb(253,117,5)" fg:x="2" fg:w="28"/><text x="0.4112%" y="799.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 2.26%)</title><rect x="0.1612%" y="773" width="2.2562%" height="15" fill="rgb(208,124,26)" fg:x="2" fg:w="28"/><text x="0.4112%" y="783.50">&lt;..</text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.1757%" y="757" width="0.2417%" height="15" fill="rgb(228,208,39)" fg:x="27" fg:w="3"/><text x="2.4257%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 2.58%)</title><rect x="0.0000%" y="853" width="2.5786%" height="15" fill="rgb(206,180,39)" fg:x="0" fg:w="32"/><text x="0.2500%" y="863.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (31 samples, 2.50%)</title><rect x="0.0806%" y="837" width="2.4980%" height="15" fill="rgb(205,111,37)" fg:x="1" fg:w="31"/><text x="0.3306%" y="847.50">co..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.4174%" y="821" width="0.1612%" height="15" fill="rgb(208,121,24)" fg:x="30" fg:w="2"/><text x="2.6674%" y="831.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="2.5786%" y="805" width="0.0806%" height="15" fill="rgb(218,215,32)" fg:x="32" fg:w="1"/><text x="2.8286%" y="815.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="2.5786%" y="789" width="0.0806%" height="15" fill="rgb(244,168,53)" fg:x="32" fg:w="1"/><text x="2.8286%" y="799.50"></text></g><g><title>&lt;kernel::session::SetSession as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="2.6591%" y="789" width="0.0806%" height="15" fill="rgb(214,9,36)" fg:x="33" fg:w="1"/><text x="2.9091%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.7397%" y="757" width="0.0806%" height="15" fill="rgb(231,4,34)" fg:x="34" fg:w="1"/><text x="2.9897%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.7397%" y="741" width="0.0806%" height="15" fill="rgb(210,83,51)" fg:x="34" fg:w="1"/><text x="2.9897%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.7397%" y="725" width="0.0806%" height="15" fill="rgb(224,112,1)" fg:x="34" fg:w="1"/><text x="2.9897%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="2.7397%" y="709" width="0.0806%" height="15" fill="rgb(216,33,41)" fg:x="34" fg:w="1"/><text x="2.9897%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.7397%" y="693" width="0.0806%" height="15" fill="rgb(215,179,42)" fg:x="34" fg:w="1"/><text x="2.9897%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.7397%" y="677" width="0.0806%" height="15" fill="rgb(205,81,48)" fg:x="34" fg:w="1"/><text x="2.9897%" y="687.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="2.7397%" y="661" width="0.0806%" height="15" fill="rgb(246,17,30)" fg:x="34" fg:w="1"/><text x="2.9897%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.7397%" y="645" width="0.0806%" height="15" fill="rgb(226,19,16)" fg:x="34" fg:w="1"/><text x="2.9897%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.7397%" y="629" width="0.0806%" height="15" fill="rgb(207,3,14)" fg:x="34" fg:w="1"/><text x="2.9897%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.7397%" y="613" width="0.0806%" height="15" fill="rgb(226,77,12)" fg:x="34" fg:w="1"/><text x="2.9897%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.7397%" y="597" width="0.0806%" height="15" fill="rgb(226,76,25)" fg:x="34" fg:w="1"/><text x="2.9897%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.7397%" y="581" width="0.0806%" height="15" fill="rgb(217,216,25)" fg:x="34" fg:w="1"/><text x="2.9897%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.7397%" y="565" width="0.0806%" height="15" fill="rgb(247,127,42)" fg:x="34" fg:w="1"/><text x="2.9897%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="2.7397%" y="549" width="0.0806%" height="15" fill="rgb(226,10,34)" fg:x="34" fg:w="1"/><text x="2.9897%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.7397%" y="533" width="0.0806%" height="15" fill="rgb(249,78,0)" fg:x="34" fg:w="1"/><text x="2.9897%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="2.7397%" y="517" width="0.0806%" height="15" fill="rgb(226,218,38)" fg:x="34" fg:w="1"/><text x="2.9897%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="2.7397%" y="501" width="0.0806%" height="15" fill="rgb(240,92,1)" fg:x="34" fg:w="1"/><text x="2.9897%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="2.7397%" y="485" width="0.0806%" height="15" fill="rgb(237,224,33)" fg:x="34" fg:w="1"/><text x="2.9897%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.7397%" y="469" width="0.0806%" height="15" fill="rgb(211,46,1)" fg:x="34" fg:w="1"/><text x="2.9897%" y="479.50"></text></g><g><title>anyhow::error::object_drop (1 samples, 0.08%)</title><rect x="2.8203%" y="757" width="0.0806%" height="15" fill="rgb(239,190,4)" fg:x="35" fg:w="1"/><text x="3.0703%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;libloading::error::Error&gt; (1 samples, 0.08%)</title><rect x="2.8203%" y="741" width="0.0806%" height="15" fill="rgb(221,50,22)" fg:x="35" fg:w="1"/><text x="3.0703%" y="751.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="2.9009%" y="757" width="0.0806%" height="15" fill="rgb(207,176,8)" fg:x="36" fg:w="1"/><text x="3.1509%" y="767.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="2.9009%" y="741" width="0.0806%" height="15" fill="rgb(244,114,50)" fg:x="36" fg:w="1"/><text x="3.1509%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.9009%" y="725" width="0.0806%" height="15" fill="rgb(226,206,19)" fg:x="36" fg:w="1"/><text x="3.1509%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.9009%" y="709" width="0.0806%" height="15" fill="rgb(208,199,16)" fg:x="36" fg:w="1"/><text x="3.1509%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.9009%" y="693" width="0.0806%" height="15" fill="rgb(208,38,14)" fg:x="36" fg:w="1"/><text x="3.1509%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.9009%" y="677" width="0.0806%" height="15" fill="rgb(221,211,49)" fg:x="36" fg:w="1"/><text x="3.1509%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.9009%" y="661" width="0.0806%" height="15" fill="rgb(227,214,34)" fg:x="36" fg:w="1"/><text x="3.1509%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="2.9009%" y="645" width="0.0806%" height="15" fill="rgb(234,5,54)" fg:x="36" fg:w="1"/><text x="3.1509%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.08%)</title><rect x="2.9009%" y="629" width="0.0806%" height="15" fill="rgb(236,215,22)" fg:x="36" fg:w="1"/><text x="3.1509%" y="639.50"></text></g><g><title>dlerror (3 samples, 0.24%)</title><rect x="2.9815%" y="741" width="0.2417%" height="15" fill="rgb(244,0,11)" fg:x="37" fg:w="3"/><text x="3.2315%" y="751.50"></text></g><g><title>__asprintf (3 samples, 0.24%)</title><rect x="2.9815%" y="725" width="0.2417%" height="15" fill="rgb(212,140,16)" fg:x="37" fg:w="3"/><text x="3.2315%" y="735.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="3.1426%" y="709" width="0.0806%" height="15" fill="rgb(238,101,37)" fg:x="39" fg:w="1"/><text x="3.3926%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.2232%" y="725" width="0.0806%" height="15" fill="rgb(247,46,3)" fg:x="40" fg:w="1"/><text x="3.4732%" y="735.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="3.3038%" y="693" width="0.0806%" height="15" fill="rgb(208,106,19)" fg:x="41" fg:w="1"/><text x="3.5538%" y="703.50"></text></g><g><title>dlopen (12 samples, 0.97%)</title><rect x="3.2232%" y="741" width="0.9670%" height="15" fill="rgb(240,227,15)" fg:x="40" fg:w="12"/><text x="3.4732%" y="751.50"></text></g><g><title>_dl_catch_error (11 samples, 0.89%)</title><rect x="3.3038%" y="725" width="0.8864%" height="15" fill="rgb(226,173,6)" fg:x="41" fg:w="11"/><text x="3.5538%" y="735.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.89%)</title><rect x="3.3038%" y="709" width="0.8864%" height="15" fill="rgb(213,191,1)" fg:x="41" fg:w="11"/><text x="3.5538%" y="719.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.81%)</title><rect x="3.3844%" y="693" width="0.8058%" height="15" fill="rgb(246,51,36)" fg:x="42" fg:w="10"/><text x="3.6344%" y="703.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.81%)</title><rect x="3.3844%" y="677" width="0.8058%" height="15" fill="rgb(238,40,32)" fg:x="42" fg:w="10"/><text x="3.6344%" y="687.50"></text></g><g><title>libloading::safe::Library::new (16 samples, 1.29%)</title><rect x="2.9815%" y="757" width="1.2893%" height="15" fill="rgb(208,126,27)" fg:x="37" fg:w="16"/><text x="3.2315%" y="767.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="4.1902%" y="741" width="0.0806%" height="15" fill="rgb(227,117,38)" fg:x="52" fg:w="1"/><text x="4.4402%" y="751.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="4.1902%" y="725" width="0.0806%" height="15" fill="rgb(232,16,1)" fg:x="52" fg:w="1"/><text x="4.4402%" y="735.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="4.1902%" y="709" width="0.0806%" height="15" fill="rgb(212,111,31)" fg:x="52" fg:w="1"/><text x="4.4402%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="4.1902%" y="693" width="0.0806%" height="15" fill="rgb(253,227,2)" fg:x="52" fg:w="1"/><text x="4.4402%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.1902%" y="677" width="0.0806%" height="15" fill="rgb(216,122,17)" fg:x="52" fg:w="1"/><text x="4.4402%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.1902%" y="661" width="0.0806%" height="15" fill="rgb(227,37,2)" fg:x="52" fg:w="1"/><text x="4.4402%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.1902%" y="645" width="0.0806%" height="15" fill="rgb(244,113,40)" fg:x="52" fg:w="1"/><text x="4.4402%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.1902%" y="629" width="0.0806%" height="15" fill="rgb(217,193,34)" fg:x="52" fg:w="1"/><text x="4.4402%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.1902%" y="613" width="0.0806%" height="15" fill="rgb(212,223,15)" fg:x="52" fg:w="1"/><text x="4.4402%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.1902%" y="597" width="0.0806%" height="15" fill="rgb(238,143,18)" fg:x="52" fg:w="1"/><text x="4.4402%" y="607.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (20 samples, 1.61%)</title><rect x="2.7397%" y="773" width="1.6116%" height="15" fill="rgb(231,18,49)" fg:x="34" fg:w="20"/><text x="2.9897%" y="783.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="4.2707%" y="757" width="0.0806%" height="15" fill="rgb(249,122,4)" fg:x="53" fg:w="1"/><text x="4.5207%" y="767.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (21 samples, 1.69%)</title><rect x="2.7397%" y="789" width="1.6922%" height="15" fill="rgb(245,138,54)" fg:x="34" fg:w="21"/><text x="2.9897%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="4.3513%" y="773" width="0.0806%" height="15" fill="rgb(218,130,18)" fg:x="54" fg:w="1"/><text x="4.6013%" y="783.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="4.3513%" y="757" width="0.0806%" height="15" fill="rgb(235,94,13)" fg:x="54" fg:w="1"/><text x="4.6013%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.4319%" y="757" width="0.0806%" height="15" fill="rgb(247,143,5)" fg:x="55" fg:w="1"/><text x="4.6819%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.4319%" y="741" width="0.0806%" height="15" fill="rgb(212,59,54)" fg:x="55" fg:w="1"/><text x="4.6819%" y="751.50"></text></g><g><title>engine::session::Session::initialize (25 samples, 2.01%)</title><rect x="2.6591%" y="805" width="2.0145%" height="15" fill="rgb(206,121,24)" fg:x="33" fg:w="25"/><text x="2.9091%" y="815.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (3 samples, 0.24%)</title><rect x="4.4319%" y="789" width="0.2417%" height="15" fill="rgb(235,38,8)" fg:x="55" fg:w="3"/><text x="4.6819%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="4.4319%" y="773" width="0.2417%" height="15" fill="rgb(227,102,26)" fg:x="55" fg:w="3"/><text x="4.6819%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="4.5125%" y="757" width="0.1612%" height="15" fill="rgb(240,183,46)" fg:x="56" fg:w="2"/><text x="4.7625%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="4.5125%" y="741" width="0.1612%" height="15" fill="rgb(208,177,23)" fg:x="56" fg:w="2"/><text x="4.7625%" y="751.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="4.5125%" y="725" width="0.1612%" height="15" fill="rgb(216,152,5)" fg:x="56" fg:w="2"/><text x="4.7625%" y="735.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (27 samples, 2.18%)</title><rect x="2.5786%" y="853" width="2.1757%" height="15" fill="rgb(238,199,2)" fg:x="32" fg:w="27"/><text x="2.8286%" y="863.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (27 samples, 2.18%)</title><rect x="2.5786%" y="837" width="2.1757%" height="15" fill="rgb(235,142,28)" fg:x="32" fg:w="27"/><text x="2.8286%" y="847.50">e..</text></g><g><title>engine::session::Session::new (27 samples, 2.18%)</title><rect x="2.5786%" y="821" width="2.1757%" height="15" fill="rgb(225,97,25)" fg:x="32" fg:w="27"/><text x="2.8286%" y="831.50">e..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="4.6737%" y="805" width="0.0806%" height="15" fill="rgb(208,75,46)" fg:x="58" fg:w="1"/><text x="4.9237%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.6737%" y="789" width="0.0806%" height="15" fill="rgb(240,136,15)" fg:x="58" fg:w="1"/><text x="4.9237%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="4.8348%" y="837" width="0.0806%" height="15" fill="rgb(235,36,27)" fg:x="60" fg:w="1"/><text x="5.0848%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="4.8348%" y="821" width="0.0806%" height="15" fill="rgb(231,132,23)" fg:x="60" fg:w="1"/><text x="5.0848%" y="831.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.8348%" y="805" width="0.0806%" height="15" fill="rgb(205,208,20)" fg:x="60" fg:w="1"/><text x="5.0848%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.9154%" y="725" width="0.0806%" height="15" fill="rgb(215,26,40)" fg:x="61" fg:w="1"/><text x="5.1654%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.9154%" y="709" width="0.0806%" height="15" fill="rgb(238,183,34)" fg:x="61" fg:w="1"/><text x="5.1654%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.9154%" y="693" width="0.0806%" height="15" fill="rgb(207,96,10)" fg:x="61" fg:w="1"/><text x="5.1654%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.9154%" y="677" width="0.0806%" height="15" fill="rgb(218,88,6)" fg:x="61" fg:w="1"/><text x="5.1654%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.9154%" y="661" width="0.0806%" height="15" fill="rgb(217,22,49)" fg:x="61" fg:w="1"/><text x="5.1654%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.9154%" y="645" width="0.0806%" height="15" fill="rgb(240,195,14)" fg:x="61" fg:w="1"/><text x="5.1654%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.9154%" y="629" width="0.0806%" height="15" fill="rgb(229,48,27)" fg:x="61" fg:w="1"/><text x="5.1654%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="4.9154%" y="821" width="0.1612%" height="15" fill="rgb(220,194,45)" fg:x="61" fg:w="2"/><text x="5.1654%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="4.9154%" y="805" width="0.1612%" height="15" fill="rgb(252,60,20)" fg:x="61" fg:w="2"/><text x="5.1654%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="4.9154%" y="789" width="0.1612%" height="15" fill="rgb(244,169,33)" fg:x="61" fg:w="2"/><text x="5.1654%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="4.9154%" y="773" width="0.1612%" height="15" fill="rgb(234,141,34)" fg:x="61" fg:w="2"/><text x="5.1654%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="4.9154%" y="757" width="0.1612%" height="15" fill="rgb(241,141,9)" fg:x="61" fg:w="2"/><text x="5.1654%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="4.9154%" y="741" width="0.1612%" height="15" fill="rgb(246,27,36)" fg:x="61" fg:w="2"/><text x="5.1654%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="4.9960%" y="725" width="0.0806%" height="15" fill="rgb(216,188,42)" fg:x="62" fg:w="1"/><text x="5.2460%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="4.9960%" y="709" width="0.0806%" height="15" fill="rgb(234,205,22)" fg:x="62" fg:w="1"/><text x="5.2460%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.1571%" y="757" width="0.0806%" height="15" fill="rgb(210,202,32)" fg:x="64" fg:w="1"/><text x="5.4071%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.1571%" y="741" width="0.0806%" height="15" fill="rgb(217,0,48)" fg:x="64" fg:w="1"/><text x="5.4071%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.1571%" y="725" width="0.0806%" height="15" fill="rgb(207,115,37)" fg:x="64" fg:w="1"/><text x="5.4071%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.1571%" y="709" width="0.0806%" height="15" fill="rgb(237,221,44)" fg:x="64" fg:w="1"/><text x="5.4071%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.1571%" y="693" width="0.0806%" height="15" fill="rgb(249,78,2)" fg:x="64" fg:w="1"/><text x="5.4071%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.1571%" y="677" width="0.0806%" height="15" fill="rgb(211,169,23)" fg:x="64" fg:w="1"/><text x="5.4071%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.1571%" y="661" width="0.0806%" height="15" fill="rgb(207,116,29)" fg:x="64" fg:w="1"/><text x="5.4071%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.1571%" y="645" width="0.0806%" height="15" fill="rgb(240,84,33)" fg:x="64" fg:w="1"/><text x="5.4071%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.1571%" y="629" width="0.0806%" height="15" fill="rgb(229,224,31)" fg:x="64" fg:w="1"/><text x="5.4071%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.1571%" y="613" width="0.0806%" height="15" fill="rgb(227,90,31)" fg:x="64" fg:w="1"/><text x="5.4071%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.1571%" y="597" width="0.0806%" height="15" fill="rgb(249,22,41)" fg:x="64" fg:w="1"/><text x="5.4071%" y="607.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="5.1571%" y="581" width="0.0806%" height="15" fill="rgb(239,65,11)" fg:x="64" fg:w="1"/><text x="5.4071%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="5.2377%" y="757" width="0.0806%" height="15" fill="rgb(205,5,23)" fg:x="65" fg:w="1"/><text x="5.4877%" y="767.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="5.2377%" y="741" width="0.0806%" height="15" fill="rgb(254,78,52)" fg:x="65" fg:w="1"/><text x="5.4877%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="5.2377%" y="725" width="0.0806%" height="15" fill="rgb(214,156,33)" fg:x="65" fg:w="1"/><text x="5.4877%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="5.2377%" y="709" width="0.0806%" height="15" fill="rgb(208,20,30)" fg:x="65" fg:w="1"/><text x="5.4877%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.2377%" y="693" width="0.0806%" height="15" fill="rgb(223,133,18)" fg:x="65" fg:w="1"/><text x="5.4877%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.2377%" y="677" width="0.0806%" height="15" fill="rgb(222,91,41)" fg:x="65" fg:w="1"/><text x="5.4877%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.2377%" y="661" width="0.0806%" height="15" fill="rgb(247,137,48)" fg:x="65" fg:w="1"/><text x="5.4877%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="5.3183%" y="725" width="0.3223%" height="15" fill="rgb(239,156,11)" fg:x="66" fg:w="4"/><text x="5.5683%" y="735.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="5.3183%" y="709" width="0.3223%" height="15" fill="rgb(244,56,26)" fg:x="66" fg:w="4"/><text x="5.5683%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="5.3989%" y="693" width="0.2417%" height="15" fill="rgb(205,131,49)" fg:x="67" fg:w="3"/><text x="5.6489%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.4795%" y="677" width="0.1612%" height="15" fill="rgb(224,0,2)" fg:x="68" fg:w="2"/><text x="5.7295%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="5.3183%" y="741" width="0.4835%" height="15" fill="rgb(247,59,36)" fg:x="66" fg:w="6"/><text x="5.5683%" y="751.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.6406%" y="725" width="0.1612%" height="15" fill="rgb(215,4,47)" fg:x="70" fg:w="2"/><text x="5.8906%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.7212%" y="709" width="0.0806%" height="15" fill="rgb(242,72,42)" fg:x="71" fg:w="1"/><text x="5.9712%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="5.8018%" y="725" width="0.4029%" height="15" fill="rgb(232,145,44)" fg:x="72" fg:w="5"/><text x="6.0518%" y="735.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.9629%" y="709" width="0.2417%" height="15" fill="rgb(205,108,43)" fg:x="74" fg:w="3"/><text x="6.2129%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.1241%" y="693" width="0.0806%" height="15" fill="rgb(215,190,17)" fg:x="76" fg:w="1"/><text x="6.3741%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.1241%" y="677" width="0.0806%" height="15" fill="rgb(223,90,34)" fg:x="76" fg:w="1"/><text x="6.3741%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.2047%" y="677" width="0.0806%" height="15" fill="rgb(216,25,0)" fg:x="77" fg:w="1"/><text x="6.4547%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.2047%" y="661" width="0.0806%" height="15" fill="rgb(223,51,28)" fg:x="77" fg:w="1"/><text x="6.4547%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.2047%" y="645" width="0.0806%" height="15" fill="rgb(227,131,7)" fg:x="77" fg:w="1"/><text x="6.4547%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="6.2047%" y="709" width="0.2417%" height="15" fill="rgb(216,72,36)" fg:x="77" fg:w="3"/><text x="6.4547%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="6.2047%" y="693" width="0.2417%" height="15" fill="rgb(243,158,40)" fg:x="77" fg:w="3"/><text x="6.4547%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="6.2853%" y="677" width="0.1612%" height="15" fill="rgb(218,60,54)" fg:x="78" fg:w="2"/><text x="6.5353%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.2853%" y="661" width="0.1612%" height="15" fill="rgb(230,15,46)" fg:x="78" fg:w="2"/><text x="6.5353%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.2853%" y="645" width="0.1612%" height="15" fill="rgb(250,22,26)" fg:x="78" fg:w="2"/><text x="6.5353%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.3658%" y="629" width="0.0806%" height="15" fill="rgb(239,194,40)" fg:x="79" fg:w="1"/><text x="6.6158%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.4464%" y="709" width="0.1612%" height="15" fill="rgb(219,62,9)" fg:x="80" fg:w="2"/><text x="6.6964%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.4464%" y="693" width="0.1612%" height="15" fill="rgb(228,45,21)" fg:x="80" fg:w="2"/><text x="6.6964%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.4464%" y="677" width="0.1612%" height="15" fill="rgb(242,56,44)" fg:x="80" fg:w="2"/><text x="6.6964%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="6.4464%" y="661" width="0.1612%" height="15" fill="rgb(239,170,14)" fg:x="80" fg:w="2"/><text x="6.6964%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.5270%" y="645" width="0.0806%" height="15" fill="rgb(236,150,13)" fg:x="81" fg:w="1"/><text x="6.7770%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.5270%" y="629" width="0.0806%" height="15" fill="rgb(228,15,30)" fg:x="81" fg:w="1"/><text x="6.7770%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.5270%" y="613" width="0.0806%" height="15" fill="rgb(217,43,28)" fg:x="81" fg:w="1"/><text x="6.7770%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.6076%" y="693" width="0.0806%" height="15" fill="rgb(246,223,1)" fg:x="82" fg:w="1"/><text x="6.8576%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.6882%" y="661" width="0.0806%" height="15" fill="rgb(247,103,7)" fg:x="83" fg:w="1"/><text x="6.9382%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.6882%" y="645" width="0.0806%" height="15" fill="rgb(205,105,39)" fg:x="83" fg:w="1"/><text x="6.9382%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.6882%" y="629" width="0.0806%" height="15" fill="rgb(216,134,18)" fg:x="83" fg:w="1"/><text x="6.9382%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.6882%" y="613" width="0.0806%" height="15" fill="rgb(226,139,50)" fg:x="83" fg:w="1"/><text x="6.9382%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.7687%" y="645" width="0.1612%" height="15" fill="rgb(251,152,38)" fg:x="84" fg:w="2"/><text x="7.0187%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.8493%" y="629" width="0.0806%" height="15" fill="rgb(222,63,15)" fg:x="85" fg:w="1"/><text x="7.0993%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.8493%" y="613" width="0.0806%" height="15" fill="rgb(212,198,28)" fg:x="85" fg:w="1"/><text x="7.0993%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.8493%" y="597" width="0.0806%" height="15" fill="rgb(216,93,38)" fg:x="85" fg:w="1"/><text x="7.0993%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.8493%" y="581" width="0.0806%" height="15" fill="rgb(247,202,44)" fg:x="85" fg:w="1"/><text x="7.0993%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="6.6882%" y="693" width="0.3223%" height="15" fill="rgb(237,204,46)" fg:x="83" fg:w="4"/><text x="6.9382%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="6.6882%" y="677" width="0.3223%" height="15" fill="rgb(224,98,48)" fg:x="83" fg:w="4"/><text x="6.9382%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="6.7687%" y="661" width="0.2417%" height="15" fill="rgb(247,105,21)" fg:x="84" fg:w="3"/><text x="7.0187%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.9299%" y="645" width="0.0806%" height="15" fill="rgb(212,137,52)" fg:x="86" fg:w="1"/><text x="7.1799%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.9299%" y="629" width="0.0806%" height="15" fill="rgb(223,76,33)" fg:x="86" fg:w="1"/><text x="7.1799%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="6.2047%" y="725" width="0.9670%" height="15" fill="rgb(209,156,27)" fg:x="77" fg:w="12"/><text x="6.4547%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="6.6076%" y="709" width="0.5641%" height="15" fill="rgb(249,81,54)" fg:x="82" fg:w="7"/><text x="6.8576%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.0105%" y="693" width="0.1612%" height="15" fill="rgb(241,46,29)" fg:x="87" fg:w="2"/><text x="7.2605%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.0911%" y="677" width="0.0806%" height="15" fill="rgb(213,193,39)" fg:x="88" fg:w="1"/><text x="7.3411%" y="687.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (28 samples, 2.26%)</title><rect x="5.3183%" y="757" width="2.2562%" height="15" fill="rgb(214,85,16)" fg:x="66" fg:w="28"/><text x="5.5683%" y="767.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.77%)</title><rect x="5.8018%" y="741" width="1.7728%" height="15" fill="rgb(216,184,17)" fg:x="72" fg:w="22"/><text x="6.0518%" y="751.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="7.1716%" y="725" width="0.4029%" height="15" fill="rgb(254,219,29)" fg:x="89" fg:w="5"/><text x="7.4216%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="7.3328%" y="709" width="0.2417%" height="15" fill="rgb(209,148,34)" fg:x="91" fg:w="3"/><text x="7.5828%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="7.3328%" y="693" width="0.2417%" height="15" fill="rgb(253,215,11)" fg:x="91" fg:w="3"/><text x="7.5828%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.4940%" y="677" width="0.0806%" height="15" fill="rgb(232,126,20)" fg:x="93" fg:w="1"/><text x="7.7440%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.4940%" y="661" width="0.0806%" height="15" fill="rgb(248,118,51)" fg:x="93" fg:w="1"/><text x="7.7440%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.4940%" y="645" width="0.0806%" height="15" fill="rgb(226,121,21)" fg:x="93" fg:w="1"/><text x="7.7440%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.5745%" y="725" width="0.0806%" height="15" fill="rgb(216,128,16)" fg:x="94" fg:w="1"/><text x="7.8245%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="7.6551%" y="725" width="0.1612%" height="15" fill="rgb(205,17,9)" fg:x="95" fg:w="2"/><text x="7.9051%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.7357%" y="709" width="0.0806%" height="15" fill="rgb(206,197,21)" fg:x="96" fg:w="1"/><text x="7.9857%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.8969%" y="709" width="0.0806%" height="15" fill="rgb(212,202,9)" fg:x="98" fg:w="1"/><text x="8.1469%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.8969%" y="693" width="0.0806%" height="15" fill="rgb(241,131,50)" fg:x="98" fg:w="1"/><text x="8.1469%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.0580%" y="693" width="0.0806%" height="15" fill="rgb(228,115,51)" fg:x="100" fg:w="1"/><text x="8.3080%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.0580%" y="677" width="0.0806%" height="15" fill="rgb(237,209,8)" fg:x="100" fg:w="1"/><text x="8.3080%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.1386%" y="661" width="0.0806%" height="15" fill="rgb(241,121,28)" fg:x="101" fg:w="1"/><text x="8.3886%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="7.5745%" y="757" width="0.7252%" height="15" fill="rgb(238,194,51)" fg:x="94" fg:w="9"/><text x="7.8245%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.73%)</title><rect x="7.5745%" y="741" width="0.7252%" height="15" fill="rgb(208,41,39)" fg:x="94" fg:w="9"/><text x="7.8245%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="7.8163%" y="725" width="0.4835%" height="15" fill="rgb(223,95,44)" fg:x="97" fg:w="6"/><text x="8.0663%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="7.9774%" y="709" width="0.3223%" height="15" fill="rgb(253,98,40)" fg:x="99" fg:w="4"/><text x="8.2274%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="8.1386%" y="693" width="0.1612%" height="15" fill="rgb(210,5,12)" fg:x="101" fg:w="2"/><text x="8.3886%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="8.1386%" y="677" width="0.1612%" height="15" fill="rgb(233,201,23)" fg:x="101" fg:w="2"/><text x="8.3886%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.2192%" y="661" width="0.0806%" height="15" fill="rgb(251,68,15)" fg:x="102" fg:w="1"/><text x="8.4692%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.2192%" y="645" width="0.0806%" height="15" fill="rgb(243,10,46)" fg:x="102" fg:w="1"/><text x="8.4692%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.2192%" y="629" width="0.0806%" height="15" fill="rgb(253,130,44)" fg:x="102" fg:w="1"/><text x="8.4692%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.2192%" y="613" width="0.0806%" height="15" fill="rgb(244,5,26)" fg:x="102" fg:w="1"/><text x="8.4692%" y="623.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="8.2998%" y="741" width="0.0806%" height="15" fill="rgb(220,126,20)" fg:x="103" fg:w="1"/><text x="8.5498%" y="751.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="8.2998%" y="725" width="0.0806%" height="15" fill="rgb(212,188,29)" fg:x="103" fg:w="1"/><text x="8.5498%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="8.2998%" y="709" width="0.0806%" height="15" fill="rgb(227,194,48)" fg:x="103" fg:w="1"/><text x="8.5498%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.2998%" y="693" width="0.0806%" height="15" fill="rgb(245,64,28)" fg:x="103" fg:w="1"/><text x="8.5498%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.2998%" y="677" width="0.0806%" height="15" fill="rgb(205,44,7)" fg:x="103" fg:w="1"/><text x="8.5498%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="8.3803%" y="741" width="0.0806%" height="15" fill="rgb(213,193,11)" fg:x="104" fg:w="1"/><text x="8.6303%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.3803%" y="725" width="0.0806%" height="15" fill="rgb(238,157,6)" fg:x="104" fg:w="1"/><text x="8.6303%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.5415%" y="709" width="0.0806%" height="15" fill="rgb(222,73,7)" fg:x="106" fg:w="1"/><text x="8.7915%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.6221%" y="709" width="0.0806%" height="15" fill="rgb(224,78,15)" fg:x="107" fg:w="1"/><text x="8.8721%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.6221%" y="693" width="0.0806%" height="15" fill="rgb(218,149,46)" fg:x="107" fg:w="1"/><text x="8.8721%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="8.6221%" y="677" width="0.0806%" height="15" fill="rgb(218,175,44)" fg:x="107" fg:w="1"/><text x="8.8721%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.7027%" y="677" width="0.0806%" height="15" fill="rgb(215,183,45)" fg:x="108" fg:w="1"/><text x="8.9527%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="8.7027%" y="709" width="0.1612%" height="15" fill="rgb(226,116,37)" fg:x="108" fg:w="2"/><text x="8.9527%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="8.7027%" y="693" width="0.1612%" height="15" fill="rgb(252,224,12)" fg:x="108" fg:w="2"/><text x="8.9527%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.7832%" y="677" width="0.0806%" height="15" fill="rgb(232,212,21)" fg:x="109" fg:w="1"/><text x="9.0332%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="9.0250%" y="661" width="0.2417%" height="15" fill="rgb(226,191,16)" fg:x="112" fg:w="3"/><text x="9.2750%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.1056%" y="645" width="0.1612%" height="15" fill="rgb(231,156,11)" fg:x="113" fg:w="2"/><text x="9.3556%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.1861%" y="629" width="0.0806%" height="15" fill="rgb(225,134,49)" fg:x="114" fg:w="1"/><text x="9.4361%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="9.2667%" y="661" width="0.2417%" height="15" fill="rgb(254,55,32)" fg:x="115" fg:w="3"/><text x="9.5167%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="9.2667%" y="645" width="0.2417%" height="15" fill="rgb(242,195,29)" fg:x="115" fg:w="3"/><text x="9.5167%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="9.3473%" y="629" width="0.1612%" height="15" fill="rgb(210,155,20)" fg:x="116" fg:w="2"/><text x="9.5973%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.4279%" y="613" width="0.0806%" height="15" fill="rgb(243,170,23)" fg:x="117" fg:w="1"/><text x="9.6779%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.5085%" y="645" width="0.0806%" height="15" fill="rgb(242,197,51)" fg:x="118" fg:w="1"/><text x="9.7585%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.5890%" y="629" width="0.1612%" height="15" fill="rgb(248,48,13)" fg:x="119" fg:w="2"/><text x="9.8390%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.6696%" y="613" width="0.0806%" height="15" fill="rgb(221,185,15)" fg:x="120" fg:w="1"/><text x="9.9196%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.6696%" y="597" width="0.0806%" height="15" fill="rgb(244,49,7)" fg:x="120" fg:w="1"/><text x="9.9196%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.7502%" y="597" width="0.0806%" height="15" fill="rgb(213,182,52)" fg:x="121" fg:w="1"/><text x="10.0002%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.8308%" y="565" width="0.0806%" height="15" fill="rgb(209,15,45)" fg:x="122" fg:w="1"/><text x="10.0808%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.8308%" y="549" width="0.0806%" height="15" fill="rgb(233,23,44)" fg:x="122" fg:w="1"/><text x="10.0808%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.9114%" y="533" width="0.0806%" height="15" fill="rgb(220,182,30)" fg:x="123" fg:w="1"/><text x="10.1614%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.9114%" y="517" width="0.0806%" height="15" fill="rgb(219,116,33)" fg:x="123" fg:w="1"/><text x="10.1614%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.9114%" y="501" width="0.0806%" height="15" fill="rgb(231,15,21)" fg:x="123" fg:w="1"/><text x="10.1614%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="9.9114%" y="549" width="0.1612%" height="15" fill="rgb(238,119,25)" fg:x="123" fg:w="2"/><text x="10.1614%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.9919%" y="533" width="0.0806%" height="15" fill="rgb(232,30,39)" fg:x="124" fg:w="1"/><text x="10.2419%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="9.8308%" y="581" width="0.3223%" height="15" fill="rgb(241,26,30)" fg:x="122" fg:w="4"/><text x="10.0808%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="9.9114%" y="565" width="0.2417%" height="15" fill="rgb(234,154,4)" fg:x="123" fg:w="3"/><text x="10.1614%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.0725%" y="549" width="0.0806%" height="15" fill="rgb(229,199,39)" fg:x="125" fg:w="1"/><text x="10.3225%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="9.7502%" y="613" width="0.4835%" height="15" fill="rgb(236,213,10)" fg:x="121" fg:w="6"/><text x="10.0002%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="9.8308%" y="597" width="0.4029%" height="15" fill="rgb(247,28,19)" fg:x="122" fg:w="5"/><text x="10.0808%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.1531%" y="581" width="0.0806%" height="15" fill="rgb(239,199,24)" fg:x="126" fg:w="1"/><text x="10.4031%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.45%)</title><rect x="8.9444%" y="677" width="1.4504%" height="15" fill="rgb(246,122,13)" fg:x="111" fg:w="18"/><text x="9.1944%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.89%)</title><rect x="9.5085%" y="661" width="0.8864%" height="15" fill="rgb(210,203,29)" fg:x="118" fg:w="11"/><text x="9.7585%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="9.5890%" y="645" width="0.8058%" height="15" fill="rgb(218,4,50)" fg:x="119" fg:w="10"/><text x="9.8390%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="9.7502%" y="629" width="0.6446%" height="15" fill="rgb(236,142,48)" fg:x="121" fg:w="8"/><text x="10.0002%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="10.2337%" y="613" width="0.1612%" height="15" fill="rgb(245,173,2)" fg:x="127" fg:w="2"/><text x="10.4837%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (20 samples, 1.61%)</title><rect x="8.8638%" y="693" width="1.6116%" height="15" fill="rgb(244,196,18)" fg:x="110" fg:w="20"/><text x="9.1138%" y="703.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="10.3948%" y="677" width="0.0806%" height="15" fill="rgb(221,27,33)" fg:x="129" fg:w="1"/><text x="10.6448%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.3948%" y="661" width="0.0806%" height="15" fill="rgb(210,206,16)" fg:x="129" fg:w="1"/><text x="10.6448%" y="671.50"></text></g><g><title>engine::session::Session::flush (71 samples, 5.72%)</title><rect x="4.9154%" y="837" width="5.7212%" height="15" fill="rgb(238,161,34)" fg:x="61" fg:w="71"/><text x="5.1654%" y="847.50">engine:..</text></g><g><title>engine::session::state::State::close (69 samples, 5.56%)</title><rect x="5.0766%" y="821" width="5.5600%" height="15" fill="rgb(243,118,39)" fg:x="63" fg:w="69"/><text x="5.3266%" y="831.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (69 samples, 5.56%)</title><rect x="5.0766%" y="805" width="5.5600%" height="15" fill="rgb(234,126,9)" fg:x="63" fg:w="69"/><text x="5.3266%" y="815.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (69 samples, 5.56%)</title><rect x="5.0766%" y="789" width="5.5600%" height="15" fill="rgb(234,167,42)" fg:x="63" fg:w="69"/><text x="5.3266%" y="799.50">engine:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (69 samples, 5.56%)</title><rect x="5.0766%" y="773" width="5.5600%" height="15" fill="rgb(238,54,48)" fg:x="63" fg:w="69"/><text x="5.3266%" y="783.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (29 samples, 2.34%)</title><rect x="8.2998%" y="757" width="2.3368%" height="15" fill="rgb(226,105,2)" fg:x="103" fg:w="29"/><text x="8.5498%" y="767.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (27 samples, 2.18%)</title><rect x="8.4609%" y="741" width="2.1757%" height="15" fill="rgb(223,95,23)" fg:x="105" fg:w="27"/><text x="8.7109%" y="751.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 2.18%)</title><rect x="8.4609%" y="725" width="2.1757%" height="15" fill="rgb(249,212,19)" fg:x="105" fg:w="27"/><text x="8.7109%" y="735.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (22 samples, 1.77%)</title><rect x="8.8638%" y="709" width="1.7728%" height="15" fill="rgb(234,158,54)" fg:x="110" fg:w="22"/><text x="9.1138%" y="719.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="10.4754%" y="693" width="0.1612%" height="15" fill="rgb(247,114,32)" fg:x="130" fg:w="2"/><text x="10.7254%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.5560%" y="677" width="0.0806%" height="15" fill="rgb(250,68,44)" fg:x="131" fg:w="1"/><text x="10.8060%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="10.5560%" y="661" width="0.0806%" height="15" fill="rgb(242,3,15)" fg:x="131" fg:w="1"/><text x="10.8060%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="10.6366%" y="805" width="0.0806%" height="15" fill="rgb(223,110,32)" fg:x="132" fg:w="1"/><text x="10.8866%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="10.6366%" y="789" width="0.0806%" height="15" fill="rgb(216,26,54)" fg:x="132" fg:w="1"/><text x="10.8866%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.6366%" y="773" width="0.0806%" height="15" fill="rgb(209,145,42)" fg:x="132" fg:w="1"/><text x="10.8866%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.6366%" y="757" width="0.0806%" height="15" fill="rgb(240,111,53)" fg:x="132" fg:w="1"/><text x="10.8866%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="10.6366%" y="741" width="0.0806%" height="15" fill="rgb(209,101,4)" fg:x="132" fg:w="1"/><text x="10.8866%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="10.6366%" y="725" width="0.0806%" height="15" fill="rgb(231,74,29)" fg:x="132" fg:w="1"/><text x="10.8866%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="10.6366%" y="709" width="0.0806%" height="15" fill="rgb(223,12,12)" fg:x="132" fg:w="1"/><text x="10.8866%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.6366%" y="693" width="0.0806%" height="15" fill="rgb(207,162,2)" fg:x="132" fg:w="1"/><text x="10.8866%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.6366%" y="677" width="0.0806%" height="15" fill="rgb(230,152,0)" fg:x="132" fg:w="1"/><text x="10.8866%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="10.6366%" y="661" width="0.0806%" height="15" fill="rgb(254,156,19)" fg:x="132" fg:w="1"/><text x="10.8866%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="10.6366%" y="645" width="0.0806%" height="15" fill="rgb(250,28,0)" fg:x="132" fg:w="1"/><text x="10.8866%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="10.6366%" y="629" width="0.0806%" height="15" fill="rgb(253,27,5)" fg:x="132" fg:w="1"/><text x="10.8866%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="10.6366%" y="613" width="0.0806%" height="15" fill="rgb(244,154,7)" fg:x="132" fg:w="1"/><text x="10.8866%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.6366%" y="597" width="0.0806%" height="15" fill="rgb(242,108,21)" fg:x="132" fg:w="1"/><text x="10.8866%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="10.7172%" y="805" width="0.0806%" height="15" fill="rgb(254,200,38)" fg:x="133" fg:w="1"/><text x="10.9672%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="10.7172%" y="789" width="0.0806%" height="15" fill="rgb(250,145,41)" fg:x="133" fg:w="1"/><text x="10.9672%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.7172%" y="773" width="0.0806%" height="15" fill="rgb(235,136,31)" fg:x="133" fg:w="1"/><text x="10.9672%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="10.7977%" y="789" width="0.0806%" height="15" fill="rgb(215,13,18)" fg:x="134" fg:w="1"/><text x="11.0477%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.7977%" y="773" width="0.0806%" height="15" fill="rgb(238,199,12)" fg:x="134" fg:w="1"/><text x="11.0477%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="10.7977%" y="757" width="0.0806%" height="15" fill="rgb(242,179,49)" fg:x="134" fg:w="1"/><text x="11.0477%" y="767.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="10.7977%" y="805" width="0.2417%" height="15" fill="rgb(214,10,44)" fg:x="134" fg:w="3"/><text x="11.0477%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="10.8783%" y="789" width="0.1612%" height="15" fill="rgb(229,181,11)" fg:x="135" fg:w="2"/><text x="11.1283%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="10.9589%" y="773" width="0.0806%" height="15" fill="rgb(244,155,10)" fg:x="136" fg:w="1"/><text x="11.2089%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.9589%" y="757" width="0.0806%" height="15" fill="rgb(254,13,48)" fg:x="136" fg:w="1"/><text x="11.2089%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.9589%" y="741" width="0.0806%" height="15" fill="rgb(210,164,6)" fg:x="136" fg:w="1"/><text x="11.2089%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.9589%" y="725" width="0.0806%" height="15" fill="rgb(216,187,40)" fg:x="136" fg:w="1"/><text x="11.2089%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="11.0395%" y="789" width="0.0806%" height="15" fill="rgb(208,143,21)" fg:x="137" fg:w="1"/><text x="11.2895%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="11.0395%" y="773" width="0.0806%" height="15" fill="rgb(211,73,41)" fg:x="137" fg:w="1"/><text x="11.2895%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="11.0395%" y="757" width="0.0806%" height="15" fill="rgb(244,69,21)" fg:x="137" fg:w="1"/><text x="11.2895%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="11.0395%" y="741" width="0.0806%" height="15" fill="rgb(230,152,32)" fg:x="137" fg:w="1"/><text x="11.2895%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.0395%" y="725" width="0.0806%" height="15" fill="rgb(208,110,18)" fg:x="137" fg:w="1"/><text x="11.2895%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.0395%" y="709" width="0.0806%" height="15" fill="rgb(214,201,49)" fg:x="137" fg:w="1"/><text x="11.2895%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.0395%" y="693" width="0.0806%" height="15" fill="rgb(253,153,27)" fg:x="137" fg:w="1"/><text x="11.2895%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.0395%" y="677" width="0.0806%" height="15" fill="rgb(238,61,11)" fg:x="137" fg:w="1"/><text x="11.2895%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.0395%" y="661" width="0.0806%" height="15" fill="rgb(227,84,2)" fg:x="137" fg:w="1"/><text x="11.2895%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.0395%" y="645" width="0.0806%" height="15" fill="rgb(233,52,8)" fg:x="137" fg:w="1"/><text x="11.2895%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.0395%" y="629" width="0.0806%" height="15" fill="rgb(209,136,13)" fg:x="137" fg:w="1"/><text x="11.2895%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.73%)</title><rect x="10.6366%" y="821" width="0.7252%" height="15" fill="rgb(229,86,25)" fg:x="132" fg:w="9"/><text x="10.8866%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="11.0395%" y="805" width="0.3223%" height="15" fill="rgb(235,47,16)" fg:x="137" fg:w="4"/><text x="11.2895%" y="815.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="11.1201%" y="789" width="0.2417%" height="15" fill="rgb(231,186,4)" fg:x="138" fg:w="3"/><text x="11.3701%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="11.1201%" y="773" width="0.2417%" height="15" fill="rgb(209,213,23)" fg:x="138" fg:w="3"/><text x="11.3701%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="11.1201%" y="757" width="0.2417%" height="15" fill="rgb(212,142,47)" fg:x="138" fg:w="3"/><text x="11.3701%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="11.1201%" y="741" width="0.2417%" height="15" fill="rgb(251,86,24)" fg:x="138" fg:w="3"/><text x="11.3701%" y="751.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="11.1201%" y="725" width="0.2417%" height="15" fill="rgb(206,217,17)" fg:x="138" fg:w="3"/><text x="11.3701%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="11.3618%" y="821" width="0.0806%" height="15" fill="rgb(248,92,38)" fg:x="141" fg:w="1"/><text x="11.6118%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="11.3618%" y="805" width="0.0806%" height="15" fill="rgb(214,25,29)" fg:x="141" fg:w="1"/><text x="11.6118%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.3618%" y="789" width="0.0806%" height="15" fill="rgb(245,117,13)" fg:x="141" fg:w="1"/><text x="11.6118%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.4424%" y="725" width="0.0806%" height="15" fill="rgb(205,169,9)" fg:x="142" fg:w="1"/><text x="11.6924%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.4424%" y="709" width="0.0806%" height="15" fill="rgb(223,134,38)" fg:x="142" fg:w="1"/><text x="11.6924%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.4424%" y="693" width="0.0806%" height="15" fill="rgb(249,129,49)" fg:x="142" fg:w="1"/><text x="11.6924%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.4424%" y="677" width="0.0806%" height="15" fill="rgb(229,157,45)" fg:x="142" fg:w="1"/><text x="11.6924%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.4424%" y="661" width="0.0806%" height="15" fill="rgb(232,159,11)" fg:x="142" fg:w="1"/><text x="11.6924%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.4424%" y="645" width="0.0806%" height="15" fill="rgb(230,134,26)" fg:x="142" fg:w="1"/><text x="11.6924%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.4424%" y="629" width="0.0806%" height="15" fill="rgb(234,149,40)" fg:x="142" fg:w="1"/><text x="11.6924%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.4424%" y="613" width="0.0806%" height="15" fill="rgb(221,122,15)" fg:x="142" fg:w="1"/><text x="11.6924%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.4424%" y="597" width="0.0806%" height="15" fill="rgb(228,127,0)" fg:x="142" fg:w="1"/><text x="11.6924%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.4424%" y="581" width="0.0806%" height="15" fill="rgb(248,37,7)" fg:x="142" fg:w="1"/><text x="11.6924%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.4424%" y="565" width="0.0806%" height="15" fill="rgb(215,140,49)" fg:x="142" fg:w="1"/><text x="11.6924%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.4424%" y="549" width="0.0806%" height="15" fill="rgb(236,65,39)" fg:x="142" fg:w="1"/><text x="11.6924%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.4424%" y="533" width="0.0806%" height="15" fill="rgb(253,102,38)" fg:x="142" fg:w="1"/><text x="11.6924%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.4424%" y="517" width="0.0806%" height="15" fill="rgb(244,100,34)" fg:x="142" fg:w="1"/><text x="11.6924%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.4424%" y="501" width="0.0806%" height="15" fill="rgb(210,179,47)" fg:x="142" fg:w="1"/><text x="11.6924%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.4424%" y="485" width="0.0806%" height="15" fill="rgb(231,41,37)" fg:x="142" fg:w="1"/><text x="11.6924%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.4424%" y="469" width="0.0806%" height="15" fill="rgb(226,209,17)" fg:x="142" fg:w="1"/><text x="11.6924%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.5230%" y="597" width="0.0806%" height="15" fill="rgb(231,154,20)" fg:x="143" fg:w="1"/><text x="11.7730%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="11.4424%" y="773" width="0.3223%" height="15" fill="rgb(216,134,24)" fg:x="142" fg:w="4"/><text x="11.6924%" y="783.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="11.4424%" y="757" width="0.3223%" height="15" fill="rgb(224,71,42)" fg:x="142" fg:w="4"/><text x="11.6924%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="11.4424%" y="741" width="0.3223%" height="15" fill="rgb(250,65,23)" fg:x="142" fg:w="4"/><text x="11.6924%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="11.5230%" y="725" width="0.2417%" height="15" fill="rgb(209,160,35)" fg:x="143" fg:w="3"/><text x="11.7730%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="11.5230%" y="709" width="0.2417%" height="15" fill="rgb(215,8,11)" fg:x="143" fg:w="3"/><text x="11.7730%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="11.5230%" y="693" width="0.2417%" height="15" fill="rgb(227,27,12)" fg:x="143" fg:w="3"/><text x="11.7730%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="11.5230%" y="677" width="0.2417%" height="15" fill="rgb(226,111,41)" fg:x="143" fg:w="3"/><text x="11.7730%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="11.5230%" y="661" width="0.2417%" height="15" fill="rgb(212,195,15)" fg:x="143" fg:w="3"/><text x="11.7730%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="11.5230%" y="645" width="0.2417%" height="15" fill="rgb(216,191,17)" fg:x="143" fg:w="3"/><text x="11.7730%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="11.5230%" y="629" width="0.2417%" height="15" fill="rgb(215,57,44)" fg:x="143" fg:w="3"/><text x="11.7730%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="11.5230%" y="613" width="0.2417%" height="15" fill="rgb(209,38,4)" fg:x="143" fg:w="3"/><text x="11.7730%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="11.6035%" y="597" width="0.1612%" height="15" fill="rgb(238,49,31)" fg:x="144" fg:w="2"/><text x="11.8535%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="11.6035%" y="581" width="0.1612%" height="15" fill="rgb(219,48,39)" fg:x="144" fg:w="2"/><text x="11.8535%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.6841%" y="565" width="0.0806%" height="15" fill="rgb(252,223,43)" fg:x="145" fg:w="1"/><text x="11.9341%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.6841%" y="549" width="0.0806%" height="15" fill="rgb(247,205,46)" fg:x="145" fg:w="1"/><text x="11.9341%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7647%" y="725" width="0.0806%" height="15" fill="rgb(231,16,40)" fg:x="146" fg:w="1"/><text x="12.0147%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7647%" y="709" width="0.0806%" height="15" fill="rgb(231,115,5)" fg:x="146" fg:w="1"/><text x="12.0147%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7647%" y="693" width="0.0806%" height="15" fill="rgb(206,127,43)" fg:x="146" fg:w="1"/><text x="12.0147%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.7647%" y="677" width="0.0806%" height="15" fill="rgb(218,101,9)" fg:x="146" fg:w="1"/><text x="12.0147%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.8453%" y="725" width="0.0806%" height="15" fill="rgb(235,138,50)" fg:x="147" fg:w="1"/><text x="12.0953%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="11.4424%" y="805" width="0.5641%" height="15" fill="rgb(214,197,52)" fg:x="142" fg:w="7"/><text x="11.6924%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="11.4424%" y="789" width="0.5641%" height="15" fill="rgb(230,80,19)" fg:x="142" fg:w="7"/><text x="11.6924%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="11.7647%" y="773" width="0.2417%" height="15" fill="rgb(224,77,16)" fg:x="146" fg:w="3"/><text x="12.0147%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="11.7647%" y="757" width="0.2417%" height="15" fill="rgb(246,4,13)" fg:x="146" fg:w="3"/><text x="12.0147%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="11.7647%" y="741" width="0.2417%" height="15" fill="rgb(220,177,26)" fg:x="146" fg:w="3"/><text x="12.0147%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.9259%" y="725" width="0.0806%" height="15" fill="rgb(215,114,45)" fg:x="148" fg:w="1"/><text x="12.1759%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9259%" y="709" width="0.0806%" height="15" fill="rgb(215,71,54)" fg:x="148" fg:w="1"/><text x="12.1759%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.9259%" y="693" width="0.0806%" height="15" fill="rgb(211,155,22)" fg:x="148" fg:w="1"/><text x="12.1759%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9259%" y="677" width="0.0806%" height="15" fill="rgb(245,206,18)" fg:x="148" fg:w="1"/><text x="12.1759%" y="687.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="11.9259%" y="661" width="0.0806%" height="15" fill="rgb(248,216,48)" fg:x="148" fg:w="1"/><text x="12.1759%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="12.0064%" y="805" width="0.0806%" height="15" fill="rgb(244,84,45)" fg:x="149" fg:w="1"/><text x="12.2564%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.0064%" y="789" width="0.0806%" height="15" fill="rgb(245,13,45)" fg:x="149" fg:w="1"/><text x="12.2564%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="12.0870%" y="789" width="0.0806%" height="15" fill="rgb(247,163,2)" fg:x="150" fg:w="1"/><text x="12.3370%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="12.0870%" y="773" width="0.0806%" height="15" fill="rgb(211,175,10)" fg:x="150" fg:w="1"/><text x="12.3370%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0870%" y="757" width="0.0806%" height="15" fill="rgb(215,186,31)" fg:x="150" fg:w="1"/><text x="12.3370%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="12.1676%" y="757" width="0.0806%" height="15" fill="rgb(207,42,11)" fg:x="151" fg:w="1"/><text x="12.4176%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="12.1676%" y="741" width="0.0806%" height="15" fill="rgb(224,197,20)" fg:x="151" fg:w="1"/><text x="12.4176%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.1676%" y="725" width="0.0806%" height="15" fill="rgb(244,119,36)" fg:x="151" fg:w="1"/><text x="12.4176%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.1676%" y="709" width="0.0806%" height="15" fill="rgb(250,60,27)" fg:x="151" fg:w="1"/><text x="12.4176%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.1676%" y="693" width="0.0806%" height="15" fill="rgb(252,202,1)" fg:x="151" fg:w="1"/><text x="12.4176%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.2482%" y="709" width="0.0806%" height="15" fill="rgb(206,53,25)" fg:x="152" fg:w="1"/><text x="12.4982%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.2482%" y="693" width="0.0806%" height="15" fill="rgb(210,88,4)" fg:x="152" fg:w="1"/><text x="12.4982%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.2482%" y="677" width="0.0806%" height="15" fill="rgb(211,144,28)" fg:x="152" fg:w="1"/><text x="12.4982%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.2482%" y="661" width="0.0806%" height="15" fill="rgb(247,81,32)" fg:x="152" fg:w="1"/><text x="12.4982%" y="671.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="12.0870%" y="805" width="0.3223%" height="15" fill="rgb(225,192,11)" fg:x="150" fg:w="4"/><text x="12.3370%" y="815.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="12.1676%" y="789" width="0.2417%" height="15" fill="rgb(232,212,27)" fg:x="151" fg:w="3"/><text x="12.4176%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="12.1676%" y="773" width="0.2417%" height="15" fill="rgb(239,3,29)" fg:x="151" fg:w="3"/><text x="12.4176%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="12.2482%" y="757" width="0.1612%" height="15" fill="rgb(252,225,29)" fg:x="152" fg:w="2"/><text x="12.4982%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="12.2482%" y="741" width="0.1612%" height="15" fill="rgb(205,151,9)" fg:x="152" fg:w="2"/><text x="12.4982%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.2482%" y="725" width="0.1612%" height="15" fill="rgb(216,171,47)" fg:x="152" fg:w="2"/><text x="12.4982%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.3288%" y="709" width="0.0806%" height="15" fill="rgb(206,181,1)" fg:x="153" fg:w="1"/><text x="12.5788%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.3288%" y="693" width="0.0806%" height="15" fill="rgb(232,218,10)" fg:x="153" fg:w="1"/><text x="12.5788%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.3288%" y="677" width="0.0806%" height="15" fill="rgb(244,222,51)" fg:x="153" fg:w="1"/><text x="12.5788%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.3288%" y="661" width="0.0806%" height="15" fill="rgb(252,215,16)" fg:x="153" fg:w="1"/><text x="12.5788%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.4093%" y="757" width="0.0806%" height="15" fill="rgb(212,130,13)" fg:x="154" fg:w="1"/><text x="12.6593%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.4093%" y="773" width="0.1612%" height="15" fill="rgb(227,103,37)" fg:x="154" fg:w="2"/><text x="12.6593%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.4899%" y="757" width="0.0806%" height="15" fill="rgb(249,48,15)" fg:x="155" fg:w="1"/><text x="12.7399%" y="767.50"></text></g><g><title>plugins_core::build::Build::holding (25 samples, 2.01%)</title><rect x="10.6366%" y="837" width="2.0145%" height="15" fill="rgb(225,96,9)" fg:x="132" fg:w="25"/><text x="10.8866%" y="847.50">p..</text></g><g><title>plugins_core::tools::set_container (15 samples, 1.21%)</title><rect x="11.4424%" y="821" width="1.2087%" height="15" fill="rgb(213,81,41)" fg:x="142" fg:w="15"/><text x="11.6924%" y="831.50"></text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="12.4093%" y="805" width="0.2417%" height="15" fill="rgb(230,15,12)" fg:x="154" fg:w="3"/><text x="12.6593%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="12.4093%" y="789" width="0.2417%" height="15" fill="rgb(218,106,37)" fg:x="154" fg:w="3"/><text x="12.6593%" y="799.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="12.5705%" y="773" width="0.0806%" height="15" fill="rgb(223,172,47)" fg:x="156" fg:w="1"/><text x="12.8205%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.5705%" y="757" width="0.0806%" height="15" fill="rgb(246,180,49)" fg:x="156" fg:w="1"/><text x="12.8205%" y="767.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="12.5705%" y="741" width="0.0806%" height="15" fill="rgb(231,63,37)" fg:x="156" fg:w="1"/><text x="12.8205%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.5705%" y="725" width="0.0806%" height="15" fill="rgb(235,70,40)" fg:x="156" fg:w="1"/><text x="12.8205%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5705%" y="709" width="0.0806%" height="15" fill="rgb(250,54,26)" fg:x="156" fg:w="1"/><text x="12.8205%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="12.6511%" y="693" width="0.2417%" height="15" fill="rgb(214,190,1)" fg:x="157" fg:w="3"/><text x="12.9011%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="12.6511%" y="677" width="0.2417%" height="15" fill="rgb(212,40,35)" fg:x="157" fg:w="3"/><text x="12.9011%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="12.6511%" y="661" width="0.2417%" height="15" fill="rgb(239,183,47)" fg:x="157" fg:w="3"/><text x="12.9011%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="12.6511%" y="645" width="0.2417%" height="15" fill="rgb(211,171,49)" fg:x="157" fg:w="3"/><text x="12.9011%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="12.6511%" y="629" width="0.2417%" height="15" fill="rgb(249,186,27)" fg:x="157" fg:w="3"/><text x="12.9011%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="12.6511%" y="613" width="0.2417%" height="15" fill="rgb(223,23,48)" fg:x="157" fg:w="3"/><text x="12.9011%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="12.6511%" y="597" width="0.2417%" height="15" fill="rgb(209,203,21)" fg:x="157" fg:w="3"/><text x="12.9011%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="12.6511%" y="581" width="0.2417%" height="15" fill="rgb(229,33,27)" fg:x="157" fg:w="3"/><text x="12.9011%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="12.6511%" y="565" width="0.2417%" height="15" fill="rgb(207,8,53)" fg:x="157" fg:w="3"/><text x="12.9011%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="12.6511%" y="549" width="0.2417%" height="15" fill="rgb(221,42,0)" fg:x="157" fg:w="3"/><text x="12.9011%" y="559.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="12.6511%" y="533" width="0.2417%" height="15" fill="rgb(223,115,3)" fg:x="157" fg:w="3"/><text x="12.9011%" y="543.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="12.6511%" y="517" width="0.2417%" height="15" fill="rgb(239,35,26)" fg:x="157" fg:w="3"/><text x="12.9011%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="12.6511%" y="725" width="0.3223%" height="15" fill="rgb(233,22,9)" fg:x="157" fg:w="4"/><text x="12.9011%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="12.6511%" y="709" width="0.3223%" height="15" fill="rgb(236,221,48)" fg:x="157" fg:w="4"/><text x="12.9011%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8928%" y="693" width="0.0806%" height="15" fill="rgb(235,52,30)" fg:x="160" fg:w="1"/><text x="13.1428%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="12.6511%" y="757" width="0.4835%" height="15" fill="rgb(238,133,51)" fg:x="157" fg:w="6"/><text x="12.9011%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="12.6511%" y="741" width="0.4835%" height="15" fill="rgb(213,122,23)" fg:x="157" fg:w="6"/><text x="12.9011%" y="751.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="12.9734%" y="725" width="0.1612%" height="15" fill="rgb(225,8,15)" fg:x="161" fg:w="2"/><text x="13.2234%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="12.6511%" y="805" width="0.5641%" height="15" fill="rgb(219,126,35)" fg:x="157" fg:w="7"/><text x="12.9011%" y="815.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="12.6511%" y="789" width="0.5641%" height="15" fill="rgb(246,113,21)" fg:x="157" fg:w="7"/><text x="12.9011%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="12.6511%" y="773" width="0.5641%" height="15" fill="rgb(241,193,32)" fg:x="157" fg:w="7"/><text x="12.9011%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.1346%" y="757" width="0.0806%" height="15" fill="rgb(218,99,18)" fg:x="163" fg:w="1"/><text x="13.3846%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.1346%" y="741" width="0.0806%" height="15" fill="rgb(225,114,4)" fg:x="163" fg:w="1"/><text x="13.3846%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.1346%" y="725" width="0.0806%" height="15" fill="rgb(235,0,15)" fg:x="163" fg:w="1"/><text x="13.3846%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.1346%" y="709" width="0.0806%" height="15" fill="rgb(247,45,27)" fg:x="163" fg:w="1"/><text x="13.3846%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.1346%" y="693" width="0.0806%" height="15" fill="rgb(249,88,53)" fg:x="163" fg:w="1"/><text x="13.3846%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.1346%" y="677" width="0.0806%" height="15" fill="rgb(207,58,45)" fg:x="163" fg:w="1"/><text x="13.3846%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.1346%" y="661" width="0.0806%" height="15" fill="rgb(216,7,11)" fg:x="163" fg:w="1"/><text x="13.3846%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.1346%" y="645" width="0.0806%" height="15" fill="rgb(230,40,33)" fg:x="163" fg:w="1"/><text x="13.3846%" y="655.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="13.2151%" y="805" width="0.0806%" height="15" fill="rgb(232,24,46)" fg:x="164" fg:w="1"/><text x="13.4651%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="13.2151%" y="789" width="0.0806%" height="15" fill="rgb(219,222,45)" fg:x="164" fg:w="1"/><text x="13.4651%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.2151%" y="773" width="0.0806%" height="15" fill="rgb(229,85,44)" fg:x="164" fg:w="1"/><text x="13.4651%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2151%" y="757" width="0.0806%" height="15" fill="rgb(243,71,36)" fg:x="164" fg:w="1"/><text x="13.4651%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2151%" y="741" width="0.0806%" height="15" fill="rgb(230,203,45)" fg:x="164" fg:w="1"/><text x="13.4651%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2151%" y="725" width="0.0806%" height="15" fill="rgb(224,77,49)" fg:x="164" fg:w="1"/><text x="13.4651%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2151%" y="709" width="0.0806%" height="15" fill="rgb(210,186,47)" fg:x="164" fg:w="1"/><text x="13.4651%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.2151%" y="693" width="0.0806%" height="15" fill="rgb(232,146,10)" fg:x="164" fg:w="1"/><text x="13.4651%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.3763%" y="693" width="0.0806%" height="15" fill="rgb(236,185,51)" fg:x="166" fg:w="1"/><text x="13.6263%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="13.2957%" y="789" width="0.2417%" height="15" fill="rgb(223,206,43)" fg:x="165" fg:w="3"/><text x="13.5457%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="13.3763%" y="773" width="0.1612%" height="15" fill="rgb(227,212,9)" fg:x="166" fg:w="2"/><text x="13.6263%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="13.3763%" y="757" width="0.1612%" height="15" fill="rgb(205,82,3)" fg:x="166" fg:w="2"/><text x="13.6263%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.3763%" y="741" width="0.1612%" height="15" fill="rgb(214,2,27)" fg:x="166" fg:w="2"/><text x="13.6263%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.3763%" y="725" width="0.1612%" height="15" fill="rgb(241,37,22)" fg:x="166" fg:w="2"/><text x="13.6263%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.3763%" y="709" width="0.1612%" height="15" fill="rgb(219,182,1)" fg:x="166" fg:w="2"/><text x="13.6263%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.4569%" y="693" width="0.0806%" height="15" fill="rgb(208,224,23)" fg:x="167" fg:w="1"/><text x="13.7069%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.4569%" y="677" width="0.0806%" height="15" fill="rgb(219,121,32)" fg:x="167" fg:w="1"/><text x="13.7069%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.4569%" y="661" width="0.0806%" height="15" fill="rgb(253,13,40)" fg:x="167" fg:w="1"/><text x="13.7069%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.4569%" y="645" width="0.0806%" height="15" fill="rgb(233,6,28)" fg:x="167" fg:w="1"/><text x="13.7069%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.4569%" y="629" width="0.0806%" height="15" fill="rgb(233,73,8)" fg:x="167" fg:w="1"/><text x="13.7069%" y="639.50"></text></g><g><title>plugins_core::build::Build::into_entry (12 samples, 0.97%)</title><rect x="12.6511%" y="837" width="0.9670%" height="15" fill="rgb(223,48,27)" fg:x="157" fg:w="12"/><text x="12.9011%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.97%)</title><rect x="12.6511%" y="821" width="0.9670%" height="15" fill="rgb(231,98,37)" fg:x="157" fg:w="12"/><text x="12.9011%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="13.2957%" y="805" width="0.3223%" height="15" fill="rgb(249,43,32)" fg:x="165" fg:w="4"/><text x="13.5457%" y="815.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="13.5375%" y="789" width="0.0806%" height="15" fill="rgb(246,184,20)" fg:x="168" fg:w="1"/><text x="13.7875%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="13.6180%" y="789" width="0.0806%" height="15" fill="rgb(251,216,0)" fg:x="169" fg:w="1"/><text x="13.8680%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.6180%" y="773" width="0.0806%" height="15" fill="rgb(238,41,42)" fg:x="169" fg:w="1"/><text x="13.8680%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.6986%" y="773" width="0.0806%" height="15" fill="rgb(227,224,50)" fg:x="170" fg:w="1"/><text x="13.9486%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.6986%" y="757" width="0.0806%" height="15" fill="rgb(237,189,18)" fg:x="170" fg:w="1"/><text x="13.9486%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.6986%" y="741" width="0.0806%" height="15" fill="rgb(238,108,6)" fg:x="170" fg:w="1"/><text x="13.9486%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.6986%" y="725" width="0.0806%" height="15" fill="rgb(214,197,53)" fg:x="170" fg:w="1"/><text x="13.9486%" y="735.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="13.6180%" y="837" width="0.2417%" height="15" fill="rgb(206,183,15)" fg:x="169" fg:w="3"/><text x="13.8680%" y="847.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="13.6180%" y="821" width="0.2417%" height="15" fill="rgb(208,130,32)" fg:x="169" fg:w="3"/><text x="13.8680%" y="831.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="13.6180%" y="805" width="0.2417%" height="15" fill="rgb(226,128,52)" fg:x="169" fg:w="3"/><text x="13.8680%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="13.6986%" y="789" width="0.1612%" height="15" fill="rgb(231,183,21)" fg:x="170" fg:w="2"/><text x="13.9486%" y="799.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="13.7792%" y="773" width="0.0806%" height="15" fill="rgb(216,8,35)" fg:x="171" fg:w="1"/><text x="14.0292%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.7792%" y="757" width="0.0806%" height="15" fill="rgb(224,221,8)" fg:x="171" fg:w="1"/><text x="14.0292%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="13.7792%" y="741" width="0.0806%" height="15" fill="rgb(210,111,33)" fg:x="171" fg:w="1"/><text x="14.0292%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.7792%" y="725" width="0.0806%" height="15" fill="rgb(232,211,38)" fg:x="171" fg:w="1"/><text x="14.0292%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="13.7792%" y="709" width="0.0806%" height="15" fill="rgb(216,190,27)" fg:x="171" fg:w="1"/><text x="14.0292%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="13.7792%" y="693" width="0.0806%" height="15" fill="rgb(237,215,27)" fg:x="171" fg:w="1"/><text x="14.0292%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.7792%" y="677" width="0.0806%" height="15" fill="rgb(251,121,39)" fg:x="171" fg:w="1"/><text x="14.0292%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="13.8598%" y="821" width="0.0806%" height="15" fill="rgb(244,21,14)" fg:x="172" fg:w="1"/><text x="14.1098%" y="831.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="13.8598%" y="805" width="0.0806%" height="15" fill="rgb(221,192,22)" fg:x="172" fg:w="1"/><text x="14.1098%" y="815.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.8598%" y="789" width="0.0806%" height="15" fill="rgb(251,190,28)" fg:x="172" fg:w="1"/><text x="14.1098%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.8598%" y="773" width="0.0806%" height="15" fill="rgb(217,4,51)" fg:x="172" fg:w="1"/><text x="14.1098%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.8598%" y="757" width="0.0806%" height="15" fill="rgb(215,183,49)" fg:x="172" fg:w="1"/><text x="14.1098%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.8598%" y="741" width="0.0806%" height="15" fill="rgb(249,28,49)" fg:x="172" fg:w="1"/><text x="14.1098%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.8598%" y="725" width="0.0806%" height="15" fill="rgb(214,42,20)" fg:x="172" fg:w="1"/><text x="14.1098%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.8598%" y="709" width="0.0806%" height="15" fill="rgb(222,77,27)" fg:x="172" fg:w="1"/><text x="14.1098%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.8598%" y="693" width="0.0806%" height="15" fill="rgb(252,198,32)" fg:x="172" fg:w="1"/><text x="14.1098%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.8598%" y="677" width="0.0806%" height="15" fill="rgb(207,140,50)" fg:x="172" fg:w="1"/><text x="14.1098%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.8598%" y="661" width="0.0806%" height="15" fill="rgb(251,170,16)" fg:x="172" fg:w="1"/><text x="14.1098%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.8598%" y="645" width="0.0806%" height="15" fill="rgb(249,111,45)" fg:x="172" fg:w="1"/><text x="14.1098%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.8598%" y="629" width="0.0806%" height="15" fill="rgb(241,99,35)" fg:x="172" fg:w="1"/><text x="14.1098%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.8598%" y="613" width="0.0806%" height="15" fill="rgb(216,188,17)" fg:x="172" fg:w="1"/><text x="14.1098%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="13.8598%" y="597" width="0.0806%" height="15" fill="rgb(254,209,53)" fg:x="172" fg:w="1"/><text x="14.1098%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="13.8598%" y="581" width="0.0806%" height="15" fill="rgb(231,105,41)" fg:x="172" fg:w="1"/><text x="14.1098%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="13.9404%" y="805" width="0.0806%" height="15" fill="rgb(242,93,23)" fg:x="173" fg:w="1"/><text x="14.1904%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="13.9404%" y="789" width="0.0806%" height="15" fill="rgb(218,159,11)" fg:x="173" fg:w="1"/><text x="14.1904%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9404%" y="773" width="0.0806%" height="15" fill="rgb(209,90,32)" fg:x="173" fg:w="1"/><text x="14.1904%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9404%" y="757" width="0.0806%" height="15" fill="rgb(253,118,46)" fg:x="173" fg:w="1"/><text x="14.1904%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.9404%" y="741" width="0.0806%" height="15" fill="rgb(219,121,2)" fg:x="173" fg:w="1"/><text x="14.1904%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.9404%" y="725" width="0.0806%" height="15" fill="rgb(207,57,47)" fg:x="173" fg:w="1"/><text x="14.1904%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.9404%" y="709" width="0.0806%" height="15" fill="rgb(235,113,43)" fg:x="173" fg:w="1"/><text x="14.1904%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9404%" y="693" width="0.0806%" height="15" fill="rgb(238,30,50)" fg:x="173" fg:w="1"/><text x="14.1904%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9404%" y="677" width="0.0806%" height="15" fill="rgb(237,47,29)" fg:x="173" fg:w="1"/><text x="14.1904%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.9404%" y="661" width="0.0806%" height="15" fill="rgb(245,102,24)" fg:x="173" fg:w="1"/><text x="14.1904%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.9404%" y="645" width="0.0806%" height="15" fill="rgb(245,152,9)" fg:x="173" fg:w="1"/><text x="14.1904%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.9404%" y="629" width="0.0806%" height="15" fill="rgb(223,213,17)" fg:x="173" fg:w="1"/><text x="14.1904%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.9404%" y="613" width="0.0806%" height="15" fill="rgb(241,164,4)" fg:x="173" fg:w="1"/><text x="14.1904%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9404%" y="597" width="0.0806%" height="15" fill="rgb(205,209,31)" fg:x="173" fg:w="1"/><text x="14.1904%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.0210%" y="757" width="0.0806%" height="15" fill="rgb(248,173,2)" fg:x="174" fg:w="1"/><text x="14.2710%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.0210%" y="741" width="0.0806%" height="15" fill="rgb(207,67,32)" fg:x="174" fg:w="1"/><text x="14.2710%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.0210%" y="725" width="0.0806%" height="15" fill="rgb(239,109,13)" fg:x="174" fg:w="1"/><text x="14.2710%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.0210%" y="709" width="0.0806%" height="15" fill="rgb(233,123,24)" fg:x="174" fg:w="1"/><text x="14.2710%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="13.9404%" y="821" width="0.2417%" height="15" fill="rgb(232,120,19)" fg:x="173" fg:w="3"/><text x="14.1904%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="14.0210%" y="805" width="0.1612%" height="15" fill="rgb(225,17,50)" fg:x="174" fg:w="2"/><text x="14.2710%" y="815.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="14.0210%" y="789" width="0.1612%" height="15" fill="rgb(239,216,13)" fg:x="174" fg:w="2"/><text x="14.2710%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.0210%" y="773" width="0.1612%" height="15" fill="rgb(232,213,26)" fg:x="174" fg:w="2"/><text x="14.2710%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.1015%" y="757" width="0.0806%" height="15" fill="rgb(244,59,39)" fg:x="175" fg:w="1"/><text x="14.3515%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.1015%" y="741" width="0.0806%" height="15" fill="rgb(234,61,35)" fg:x="175" fg:w="1"/><text x="14.3515%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.1015%" y="725" width="0.0806%" height="15" fill="rgb(245,94,24)" fg:x="175" fg:w="1"/><text x="14.3515%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.1015%" y="709" width="0.0806%" height="15" fill="rgb(238,190,44)" fg:x="175" fg:w="1"/><text x="14.3515%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.1015%" y="693" width="0.0806%" height="15" fill="rgb(205,145,25)" fg:x="175" fg:w="1"/><text x="14.3515%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.1015%" y="677" width="0.0806%" height="15" fill="rgb(229,158,41)" fg:x="175" fg:w="1"/><text x="14.3515%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.1015%" y="661" width="0.0806%" height="15" fill="rgb(224,121,5)" fg:x="175" fg:w="1"/><text x="14.3515%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.1015%" y="645" width="0.0806%" height="15" fill="rgb(238,168,35)" fg:x="175" fg:w="1"/><text x="14.3515%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="14.1821%" y="789" width="0.0806%" height="15" fill="rgb(231,11,42)" fg:x="176" fg:w="1"/><text x="14.4321%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="14.1821%" y="773" width="0.0806%" height="15" fill="rgb(241,105,19)" fg:x="176" fg:w="1"/><text x="14.4321%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.1821%" y="757" width="0.0806%" height="15" fill="rgb(253,210,20)" fg:x="176" fg:w="1"/><text x="14.4321%" y="767.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="14.1821%" y="821" width="0.1612%" height="15" fill="rgb(215,72,52)" fg:x="176" fg:w="2"/><text x="14.4321%" y="831.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="14.1821%" y="805" width="0.1612%" height="15" fill="rgb(223,225,30)" fg:x="176" fg:w="2"/><text x="14.4321%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.2627%" y="789" width="0.0806%" height="15" fill="rgb(220,138,44)" fg:x="177" fg:w="1"/><text x="14.5127%" y="799.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="14.2627%" y="773" width="0.0806%" height="15" fill="rgb(206,128,12)" fg:x="177" fg:w="1"/><text x="14.5127%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.2627%" y="757" width="0.0806%" height="15" fill="rgb(245,194,0)" fg:x="177" fg:w="1"/><text x="14.5127%" y="767.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="14.3433%" y="757" width="0.0806%" height="15" fill="rgb(235,175,41)" fg:x="178" fg:w="1"/><text x="14.5933%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.3433%" y="741" width="0.0806%" height="15" fill="rgb(216,15,48)" fg:x="178" fg:w="1"/><text x="14.5933%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="14.4239%" y="741" width="0.1612%" height="15" fill="rgb(223,179,5)" fg:x="179" fg:w="2"/><text x="14.6739%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="14.4239%" y="725" width="0.1612%" height="15" fill="rgb(220,80,15)" fg:x="179" fg:w="2"/><text x="14.6739%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.4239%" y="709" width="0.1612%" height="15" fill="rgb(228,20,30)" fg:x="179" fg:w="2"/><text x="14.6739%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.4239%" y="693" width="0.1612%" height="15" fill="rgb(229,194,27)" fg:x="179" fg:w="2"/><text x="14.6739%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.4239%" y="677" width="0.1612%" height="15" fill="rgb(238,202,32)" fg:x="179" fg:w="2"/><text x="14.6739%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.4239%" y="661" width="0.1612%" height="15" fill="rgb(207,82,27)" fg:x="179" fg:w="2"/><text x="14.6739%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.4239%" y="645" width="0.1612%" height="15" fill="rgb(246,122,46)" fg:x="179" fg:w="2"/><text x="14.6739%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="14.5044%" y="629" width="0.0806%" height="15" fill="rgb(220,101,26)" fg:x="180" fg:w="1"/><text x="14.7544%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.5044%" y="613" width="0.0806%" height="15" fill="rgb(251,63,9)" fg:x="180" fg:w="1"/><text x="14.7544%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="14.3433%" y="773" width="0.3223%" height="15" fill="rgb(235,186,5)" fg:x="178" fg:w="4"/><text x="14.5933%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="14.4239%" y="757" width="0.2417%" height="15" fill="rgb(241,139,37)" fg:x="179" fg:w="3"/><text x="14.6739%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.5850%" y="741" width="0.0806%" height="15" fill="rgb(252,177,51)" fg:x="181" fg:w="1"/><text x="14.8350%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.6656%" y="629" width="0.1612%" height="15" fill="rgb(214,131,22)" fg:x="182" fg:w="2"/><text x="14.9156%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="14.6656%" y="613" width="0.1612%" height="15" fill="rgb(246,53,19)" fg:x="182" fg:w="2"/><text x="14.9156%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="14.6656%" y="773" width="0.2417%" height="15" fill="rgb(231,158,27)" fg:x="182" fg:w="3"/><text x="14.9156%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="14.6656%" y="757" width="0.2417%" height="15" fill="rgb(226,166,46)" fg:x="182" fg:w="3"/><text x="14.9156%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="14.6656%" y="741" width="0.2417%" height="15" fill="rgb(218,178,26)" fg:x="182" fg:w="3"/><text x="14.9156%" y="751.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="14.6656%" y="725" width="0.2417%" height="15" fill="rgb(206,25,39)" fg:x="182" fg:w="3"/><text x="14.9156%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="14.6656%" y="709" width="0.2417%" height="15" fill="rgb(232,218,41)" fg:x="182" fg:w="3"/><text x="14.9156%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.6656%" y="693" width="0.2417%" height="15" fill="rgb(212,151,15)" fg:x="182" fg:w="3"/><text x="14.9156%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.6656%" y="677" width="0.2417%" height="15" fill="rgb(213,49,22)" fg:x="182" fg:w="3"/><text x="14.9156%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.6656%" y="661" width="0.2417%" height="15" fill="rgb(247,116,21)" fg:x="182" fg:w="3"/><text x="14.9156%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.6656%" y="645" width="0.2417%" height="15" fill="rgb(248,98,14)" fg:x="182" fg:w="3"/><text x="14.9156%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.8268%" y="629" width="0.0806%" height="15" fill="rgb(247,72,6)" fg:x="184" fg:w="1"/><text x="15.0768%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.8268%" y="613" width="0.0806%" height="15" fill="rgb(213,9,22)" fg:x="184" fg:w="1"/><text x="15.0768%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.8268%" y="597" width="0.0806%" height="15" fill="rgb(213,122,30)" fg:x="184" fg:w="1"/><text x="15.0768%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.8268%" y="581" width="0.0806%" height="15" fill="rgb(244,11,30)" fg:x="184" fg:w="1"/><text x="15.0768%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.8268%" y="565" width="0.0806%" height="15" fill="rgb(236,102,26)" fg:x="184" fg:w="1"/><text x="15.0768%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.8268%" y="549" width="0.0806%" height="15" fill="rgb(231,166,37)" fg:x="184" fg:w="1"/><text x="15.0768%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.8268%" y="533" width="0.0806%" height="15" fill="rgb(220,224,29)" fg:x="184" fg:w="1"/><text x="15.0768%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.8268%" y="517" width="0.0806%" height="15" fill="rgb(227,30,40)" fg:x="184" fg:w="1"/><text x="15.0768%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.8268%" y="501" width="0.0806%" height="15" fill="rgb(235,8,36)" fg:x="184" fg:w="1"/><text x="15.0768%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.8268%" y="485" width="0.0806%" height="15" fill="rgb(232,175,19)" fg:x="184" fg:w="1"/><text x="15.0768%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.8268%" y="469" width="0.0806%" height="15" fill="rgb(217,114,10)" fg:x="184" fg:w="1"/><text x="15.0768%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.8268%" y="453" width="0.0806%" height="15" fill="rgb(214,112,41)" fg:x="184" fg:w="1"/><text x="15.0768%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="14.9073%" y="741" width="0.0806%" height="15" fill="rgb(226,69,34)" fg:x="185" fg:w="1"/><text x="15.1573%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="14.9073%" y="725" width="0.0806%" height="15" fill="rgb(219,23,46)" fg:x="185" fg:w="1"/><text x="15.1573%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.9073%" y="709" width="0.0806%" height="15" fill="rgb(233,3,8)" fg:x="185" fg:w="1"/><text x="15.1573%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.9073%" y="693" width="0.0806%" height="15" fill="rgb(251,34,42)" fg:x="185" fg:w="1"/><text x="15.1573%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9073%" y="677" width="0.0806%" height="15" fill="rgb(215,84,9)" fg:x="185" fg:w="1"/><text x="15.1573%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.9073%" y="661" width="0.0806%" height="15" fill="rgb(231,75,52)" fg:x="185" fg:w="1"/><text x="15.1573%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9073%" y="645" width="0.0806%" height="15" fill="rgb(247,201,31)" fg:x="185" fg:w="1"/><text x="15.1573%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.9073%" y="629" width="0.0806%" height="15" fill="rgb(215,171,37)" fg:x="185" fg:w="1"/><text x="15.1573%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9073%" y="613" width="0.0806%" height="15" fill="rgb(208,208,44)" fg:x="185" fg:w="1"/><text x="15.1573%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.9073%" y="597" width="0.0806%" height="15" fill="rgb(247,146,54)" fg:x="185" fg:w="1"/><text x="15.1573%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9073%" y="581" width="0.0806%" height="15" fill="rgb(209,0,40)" fg:x="185" fg:w="1"/><text x="15.1573%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.9073%" y="565" width="0.0806%" height="15" fill="rgb(221,59,4)" fg:x="185" fg:w="1"/><text x="15.1573%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.9073%" y="549" width="0.0806%" height="15" fill="rgb(227,153,47)" fg:x="185" fg:w="1"/><text x="15.1573%" y="559.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="14.9879%" y="741" width="0.1612%" height="15" fill="rgb(253,225,10)" fg:x="186" fg:w="2"/><text x="15.2379%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.9879%" y="725" width="0.1612%" height="15" fill="rgb(237,201,24)" fg:x="186" fg:w="2"/><text x="15.2379%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="15.0685%" y="709" width="0.0806%" height="15" fill="rgb(238,23,27)" fg:x="187" fg:w="1"/><text x="15.3185%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.1491%" y="693" width="0.0806%" height="15" fill="rgb(236,54,50)" fg:x="188" fg:w="1"/><text x="15.3991%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.1491%" y="677" width="0.0806%" height="15" fill="rgb(216,106,0)" fg:x="188" fg:w="1"/><text x="15.3991%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.1491%" y="661" width="0.0806%" height="15" fill="rgb(234,179,35)" fg:x="188" fg:w="1"/><text x="15.3991%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.1491%" y="645" width="0.0806%" height="15" fill="rgb(210,35,8)" fg:x="188" fg:w="1"/><text x="15.3991%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.1491%" y="629" width="0.0806%" height="15" fill="rgb(238,144,16)" fg:x="188" fg:w="1"/><text x="15.3991%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.1491%" y="613" width="0.0806%" height="15" fill="rgb(244,54,7)" fg:x="188" fg:w="1"/><text x="15.3991%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.1491%" y="597" width="0.0806%" height="15" fill="rgb(233,225,40)" fg:x="188" fg:w="1"/><text x="15.3991%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="14.9073%" y="757" width="0.4029%" height="15" fill="rgb(249,227,23)" fg:x="185" fg:w="5"/><text x="15.1573%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="15.1491%" y="741" width="0.1612%" height="15" fill="rgb(215,42,44)" fg:x="188" fg:w="2"/><text x="15.3991%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="15.1491%" y="725" width="0.1612%" height="15" fill="rgb(220,145,40)" fg:x="188" fg:w="2"/><text x="15.3991%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="15.1491%" y="709" width="0.1612%" height="15" fill="rgb(228,218,40)" fg:x="188" fg:w="2"/><text x="15.3991%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="15.2297%" y="693" width="0.0806%" height="15" fill="rgb(217,52,54)" fg:x="189" fg:w="1"/><text x="15.4797%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.2297%" y="677" width="0.0806%" height="15" fill="rgb(223,90,22)" fg:x="189" fg:w="1"/><text x="15.4797%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.2297%" y="661" width="0.0806%" height="15" fill="rgb(232,114,35)" fg:x="189" fg:w="1"/><text x="15.4797%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.2297%" y="645" width="0.0806%" height="15" fill="rgb(227,223,50)" fg:x="189" fg:w="1"/><text x="15.4797%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.2297%" y="629" width="0.0806%" height="15" fill="rgb(249,175,7)" fg:x="189" fg:w="1"/><text x="15.4797%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2297%" y="613" width="0.0806%" height="15" fill="rgb(249,173,15)" fg:x="189" fg:w="1"/><text x="15.4797%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.3102%" y="709" width="0.0806%" height="15" fill="rgb(240,131,6)" fg:x="190" fg:w="1"/><text x="15.5602%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.3102%" y="693" width="0.0806%" height="15" fill="rgb(246,117,16)" fg:x="190" fg:w="1"/><text x="15.5602%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.3102%" y="677" width="0.0806%" height="15" fill="rgb(209,32,16)" fg:x="190" fg:w="1"/><text x="15.5602%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.3102%" y="661" width="0.0806%" height="15" fill="rgb(207,45,44)" fg:x="190" fg:w="1"/><text x="15.5602%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.3102%" y="645" width="0.0806%" height="15" fill="rgb(210,66,3)" fg:x="190" fg:w="1"/><text x="15.5602%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.3102%" y="629" width="0.0806%" height="15" fill="rgb(246,133,30)" fg:x="190" fg:w="1"/><text x="15.5602%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.3102%" y="613" width="0.0806%" height="15" fill="rgb(224,37,17)" fg:x="190" fg:w="1"/><text x="15.5602%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.3102%" y="597" width="0.0806%" height="15" fill="rgb(237,218,18)" fg:x="190" fg:w="1"/><text x="15.5602%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.3102%" y="581" width="0.0806%" height="15" fill="rgb(240,57,8)" fg:x="190" fg:w="1"/><text x="15.5602%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.3102%" y="565" width="0.0806%" height="15" fill="rgb(231,51,38)" fg:x="190" fg:w="1"/><text x="15.5602%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.3102%" y="549" width="0.0806%" height="15" fill="rgb(230,89,50)" fg:x="190" fg:w="1"/><text x="15.5602%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.3102%" y="533" width="0.0806%" height="15" fill="rgb(234,103,34)" fg:x="190" fg:w="1"/><text x="15.5602%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.3102%" y="517" width="0.0806%" height="15" fill="rgb(220,45,48)" fg:x="190" fg:w="1"/><text x="15.5602%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="15.3102%" y="501" width="0.0806%" height="15" fill="rgb(250,210,3)" fg:x="190" fg:w="1"/><text x="15.5602%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="15.3102%" y="485" width="0.0806%" height="15" fill="rgb(210,118,12)" fg:x="190" fg:w="1"/><text x="15.5602%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="15.3102%" y="469" width="0.0806%" height="15" fill="rgb(238,154,21)" fg:x="190" fg:w="1"/><text x="15.5602%" y="479.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="15.3908%" y="693" width="0.0806%" height="15" fill="rgb(227,220,4)" fg:x="191" fg:w="1"/><text x="15.6408%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="15.3102%" y="741" width="0.2417%" height="15" fill="rgb(207,179,27)" fg:x="190" fg:w="3"/><text x="15.5602%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="15.3102%" y="725" width="0.2417%" height="15" fill="rgb(240,111,30)" fg:x="190" fg:w="3"/><text x="15.5602%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="15.3908%" y="709" width="0.1612%" height="15" fill="rgb(251,29,1)" fg:x="191" fg:w="2"/><text x="15.6408%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.4714%" y="693" width="0.0806%" height="15" fill="rgb(224,141,39)" fg:x="192" fg:w="1"/><text x="15.7214%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.4714%" y="677" width="0.0806%" height="15" fill="rgb(207,98,26)" fg:x="192" fg:w="1"/><text x="15.7214%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.4714%" y="661" width="0.0806%" height="15" fill="rgb(221,37,6)" fg:x="192" fg:w="1"/><text x="15.7214%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.4714%" y="645" width="0.0806%" height="15" fill="rgb(217,32,44)" fg:x="192" fg:w="1"/><text x="15.7214%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.4714%" y="629" width="0.0806%" height="15" fill="rgb(253,149,2)" fg:x="192" fg:w="1"/><text x="15.7214%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.4714%" y="613" width="0.0806%" height="15" fill="rgb(220,165,39)" fg:x="192" fg:w="1"/><text x="15.7214%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.4714%" y="597" width="0.0806%" height="15" fill="rgb(235,33,48)" fg:x="192" fg:w="1"/><text x="15.7214%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.4714%" y="581" width="0.0806%" height="15" fill="rgb(221,89,6)" fg:x="192" fg:w="1"/><text x="15.7214%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.4714%" y="565" width="0.0806%" height="15" fill="rgb(215,214,6)" fg:x="192" fg:w="1"/><text x="15.7214%" y="575.50"></text></g><g><title>plugins_core::build::Build::leads_to (9 samples, 0.73%)</title><rect x="14.9073%" y="773" width="0.7252%" height="15" fill="rgb(241,1,30)" fg:x="185" fg:w="9"/><text x="15.1573%" y="783.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="15.3102%" y="757" width="0.3223%" height="15" fill="rgb(211,140,32)" fg:x="190" fg:w="4"/><text x="15.5602%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.5520%" y="741" width="0.0806%" height="15" fill="rgb(232,48,21)" fg:x="193" fg:w="1"/><text x="15.8020%" y="751.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="15.5520%" y="725" width="0.0806%" height="15" fill="rgb(252,217,9)" fg:x="193" fg:w="1"/><text x="15.8020%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.5520%" y="709" width="0.0806%" height="15" fill="rgb(206,123,34)" fg:x="193" fg:w="1"/><text x="15.8020%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="15.5520%" y="693" width="0.0806%" height="15" fill="rgb(245,161,38)" fg:x="193" fg:w="1"/><text x="15.8020%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.5520%" y="677" width="0.0806%" height="15" fill="rgb(233,205,7)" fg:x="193" fg:w="1"/><text x="15.8020%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.6326%" y="709" width="0.0806%" height="15" fill="rgb(217,119,18)" fg:x="194" fg:w="1"/><text x="15.8826%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.6326%" y="693" width="0.0806%" height="15" fill="rgb(252,126,3)" fg:x="194" fg:w="1"/><text x="15.8826%" y="703.50"></text></g><g><title>core::iter::adapters::try_process (18 samples, 1.45%)</title><rect x="14.3433%" y="821" width="1.4504%" height="15" fill="rgb(252,188,15)" fg:x="178" fg:w="18"/><text x="14.5933%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 1.45%)</title><rect x="14.3433%" y="805" width="1.4504%" height="15" fill="rgb(228,1,48)" fg:x="178" fg:w="18"/><text x="14.5933%" y="815.50"></text></g><g><title>plugins_core::build::QuickThing::make (18 samples, 1.45%)</title><rect x="14.3433%" y="789" width="1.4504%" height="15" fill="rgb(205,187,8)" fg:x="178" fg:w="18"/><text x="14.5933%" y="799.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="15.6326%" y="773" width="0.1612%" height="15" fill="rgb(205,105,50)" fg:x="194" fg:w="2"/><text x="15.8826%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="15.6326%" y="757" width="0.1612%" height="15" fill="rgb(211,31,46)" fg:x="194" fg:w="2"/><text x="15.8826%" y="767.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="15.6326%" y="741" width="0.1612%" height="15" fill="rgb(213,126,5)" fg:x="194" fg:w="2"/><text x="15.8826%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="15.6326%" y="725" width="0.1612%" height="15" fill="rgb(231,87,9)" fg:x="194" fg:w="2"/><text x="15.8826%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7131%" y="709" width="0.0806%" height="15" fill="rgb(219,224,20)" fg:x="195" fg:w="1"/><text x="15.9631%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.7131%" y="693" width="0.0806%" height="15" fill="rgb(230,84,21)" fg:x="195" fg:w="1"/><text x="15.9631%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7131%" y="677" width="0.0806%" height="15" fill="rgb(224,169,42)" fg:x="195" fg:w="1"/><text x="15.9631%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.7131%" y="661" width="0.0806%" height="15" fill="rgb(227,182,13)" fg:x="195" fg:w="1"/><text x="15.9631%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.7131%" y="645" width="0.0806%" height="15" fill="rgb(249,57,41)" fg:x="195" fg:w="1"/><text x="15.9631%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="15.7131%" y="629" width="0.0806%" height="15" fill="rgb(214,93,52)" fg:x="195" fg:w="1"/><text x="15.9631%" y="639.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="15.8743%" y="757" width="0.0806%" height="15" fill="rgb(229,161,34)" fg:x="197" fg:w="1"/><text x="16.1243%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="15.8743%" y="741" width="0.0806%" height="15" fill="rgb(227,193,17)" fg:x="197" fg:w="1"/><text x="16.1243%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="15.8743%" y="725" width="0.0806%" height="15" fill="rgb(242,164,46)" fg:x="197" fg:w="1"/><text x="16.1243%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="15.9549%" y="741" width="0.0806%" height="15" fill="rgb(242,142,47)" fg:x="198" fg:w="1"/><text x="16.2049%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.9549%" y="725" width="0.0806%" height="15" fill="rgb(208,23,18)" fg:x="198" fg:w="1"/><text x="16.2049%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.9549%" y="709" width="0.0806%" height="15" fill="rgb(219,54,38)" fg:x="198" fg:w="1"/><text x="16.2049%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="16.0355%" y="725" width="0.0806%" height="15" fill="rgb(206,97,35)" fg:x="199" fg:w="1"/><text x="16.2855%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="16.0355%" y="709" width="0.0806%" height="15" fill="rgb(208,76,8)" fg:x="199" fg:w="1"/><text x="16.2855%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.0355%" y="693" width="0.0806%" height="15" fill="rgb(220,92,28)" fg:x="199" fg:w="1"/><text x="16.2855%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.0355%" y="677" width="0.0806%" height="15" fill="rgb(209,158,39)" fg:x="199" fg:w="1"/><text x="16.2855%" y="687.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="16.0355%" y="661" width="0.0806%" height="15" fill="rgb(238,175,9)" fg:x="199" fg:w="1"/><text x="16.2855%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="16.1160%" y="693" width="0.4029%" height="15" fill="rgb(240,116,17)" fg:x="200" fg:w="5"/><text x="16.3660%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="16.2772%" y="677" width="0.2417%" height="15" fill="rgb(208,7,2)" fg:x="202" fg:w="3"/><text x="16.5272%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.4384%" y="661" width="0.0806%" height="15" fill="rgb(252,52,4)" fg:x="204" fg:w="1"/><text x="16.6884%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="16.1160%" y="709" width="0.4835%" height="15" fill="rgb(222,68,34)" fg:x="200" fg:w="6"/><text x="16.3660%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.5189%" y="693" width="0.0806%" height="15" fill="rgb(242,154,35)" fg:x="205" fg:w="1"/><text x="16.7689%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.5189%" y="677" width="0.0806%" height="15" fill="rgb(210,125,54)" fg:x="205" fg:w="1"/><text x="16.7689%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.5189%" y="661" width="0.0806%" height="15" fill="rgb(247,121,18)" fg:x="205" fg:w="1"/><text x="16.7689%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (9 samples, 0.73%)</title><rect x="16.6801%" y="693" width="0.7252%" height="15" fill="rgb(223,48,51)" fg:x="207" fg:w="9"/><text x="16.9301%" y="703.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="16.8413%" y="677" width="0.5641%" height="15" fill="rgb(211,156,48)" fg:x="209" fg:w="7"/><text x="17.0913%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="17.2442%" y="661" width="0.1612%" height="15" fill="rgb(236,56,31)" fg:x="214" fg:w="2"/><text x="17.4942%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="17.3247%" y="645" width="0.0806%" height="15" fill="rgb(247,157,52)" fg:x="215" fg:w="1"/><text x="17.5747%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="17.4859%" y="677" width="0.0806%" height="15" fill="rgb(244,121,39)" fg:x="217" fg:w="1"/><text x="17.7359%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="17.5665%" y="677" width="0.0806%" height="15" fill="rgb(239,4,40)" fg:x="218" fg:w="1"/><text x="17.8165%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="17.5665%" y="661" width="0.0806%" height="15" fill="rgb(213,204,45)" fg:x="218" fg:w="1"/><text x="17.8165%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="17.5665%" y="645" width="0.0806%" height="15" fill="rgb(242,107,0)" fg:x="218" fg:w="1"/><text x="17.8165%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.5665%" y="629" width="0.0806%" height="15" fill="rgb(215,152,25)" fg:x="218" fg:w="1"/><text x="17.8165%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.5665%" y="613" width="0.0806%" height="15" fill="rgb(233,151,6)" fg:x="218" fg:w="1"/><text x="17.8165%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="17.6471%" y="677" width="0.1612%" height="15" fill="rgb(206,126,44)" fg:x="219" fg:w="2"/><text x="17.8971%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.6471%" y="661" width="0.1612%" height="15" fill="rgb(209,145,15)" fg:x="219" fg:w="2"/><text x="17.8971%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="17.6471%" y="645" width="0.1612%" height="15" fill="rgb(235,214,8)" fg:x="219" fg:w="2"/><text x="17.8971%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="17.6471%" y="629" width="0.1612%" height="15" fill="rgb(216,140,51)" fg:x="219" fg:w="2"/><text x="17.8971%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="17.7276%" y="613" width="0.0806%" height="15" fill="rgb(213,83,34)" fg:x="220" fg:w="1"/><text x="17.9776%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.7276%" y="597" width="0.0806%" height="15" fill="rgb(218,186,44)" fg:x="220" fg:w="1"/><text x="17.9776%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="17.7276%" y="581" width="0.0806%" height="15" fill="rgb(225,147,10)" fg:x="220" fg:w="1"/><text x="17.9776%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="17.8888%" y="629" width="0.1612%" height="15" fill="rgb(209,214,20)" fg:x="222" fg:w="2"/><text x="18.1388%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.8888%" y="613" width="0.1612%" height="15" fill="rgb(252,61,32)" fg:x="222" fg:w="2"/><text x="18.1388%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.9694%" y="597" width="0.0806%" height="15" fill="rgb(237,204,10)" fg:x="223" fg:w="1"/><text x="18.2194%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="17.8888%" y="645" width="0.4029%" height="15" fill="rgb(246,118,16)" fg:x="222" fg:w="5"/><text x="18.1388%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="18.0500%" y="629" width="0.2417%" height="15" fill="rgb(214,50,9)" fg:x="224" fg:w="3"/><text x="18.3000%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="18.2111%" y="613" width="0.0806%" height="15" fill="rgb(212,41,1)" fg:x="226" fg:w="1"/><text x="18.4611%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="17.8888%" y="661" width="0.4835%" height="15" fill="rgb(228,172,32)" fg:x="222" fg:w="6"/><text x="18.1388%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.2917%" y="645" width="0.0806%" height="15" fill="rgb(231,85,38)" fg:x="227" fg:w="1"/><text x="18.5417%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="17.8082%" y="677" width="0.6446%" height="15" fill="rgb(223,120,31)" fg:x="221" fg:w="8"/><text x="18.0582%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.3723%" y="661" width="0.0806%" height="15" fill="rgb(254,174,9)" fg:x="228" fg:w="1"/><text x="18.6223%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.13%)</title><rect x="17.4053%" y="693" width="1.1281%" height="15" fill="rgb(243,197,0)" fg:x="216" fg:w="14"/><text x="17.6553%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.4529%" y="677" width="0.0806%" height="15" fill="rgb(226,186,17)" fg:x="229" fg:w="1"/><text x="18.7029%" y="687.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="18.7752%" y="613" width="0.0806%" height="15" fill="rgb(229,38,38)" fg:x="233" fg:w="1"/><text x="19.0252%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="18.7752%" y="597" width="0.0806%" height="15" fill="rgb(238,82,14)" fg:x="233" fg:w="1"/><text x="19.0252%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (36 samples, 2.90%)</title><rect x="16.1160%" y="725" width="2.9009%" height="15" fill="rgb(230,154,54)" fg:x="200" fg:w="36"/><text x="16.3660%" y="735.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.42%)</title><rect x="16.5995%" y="709" width="2.4174%" height="15" fill="rgb(243,84,17)" fg:x="206" fg:w="30"/><text x="16.8495%" y="719.50">se..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="18.5334%" y="693" width="0.4835%" height="15" fill="rgb(226,41,37)" fg:x="230" fg:w="6"/><text x="18.7834%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="18.6140%" y="677" width="0.4029%" height="15" fill="rgb(219,20,18)" fg:x="231" fg:w="5"/><text x="18.8640%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="18.6946%" y="661" width="0.3223%" height="15" fill="rgb(243,173,39)" fg:x="232" fg:w="4"/><text x="18.9446%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="18.7752%" y="645" width="0.2417%" height="15" fill="rgb(245,79,20)" fg:x="233" fg:w="3"/><text x="19.0252%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="18.7752%" y="629" width="0.2417%" height="15" fill="rgb(229,101,45)" fg:x="233" fg:w="3"/><text x="19.0252%" y="639.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="18.8558%" y="613" width="0.1612%" height="15" fill="rgb(215,123,52)" fg:x="234" fg:w="2"/><text x="19.1058%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="19.0169%" y="693" width="0.1612%" height="15" fill="rgb(215,11,33)" fg:x="236" fg:w="2"/><text x="19.2669%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="19.1781%" y="693" width="0.1612%" height="15" fill="rgb(245,105,20)" fg:x="238" fg:w="2"/><text x="19.4281%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.3392%" y="677" width="0.0806%" height="15" fill="rgb(231,132,30)" fg:x="240" fg:w="1"/><text x="19.5892%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="19.4198%" y="677" width="0.1612%" height="15" fill="rgb(224,62,21)" fg:x="241" fg:w="2"/><text x="19.6698%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="19.4198%" y="661" width="0.1612%" height="15" fill="rgb(209,221,38)" fg:x="241" fg:w="2"/><text x="19.6698%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.5810%" y="661" width="0.0806%" height="15" fill="rgb(229,200,30)" fg:x="243" fg:w="1"/><text x="19.8310%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.7421%" y="645" width="0.0806%" height="15" fill="rgb(237,142,41)" fg:x="245" fg:w="1"/><text x="19.9921%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.8227%" y="645" width="0.0806%" height="15" fill="rgb(238,37,22)" fg:x="246" fg:w="1"/><text x="20.0727%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="19.9033%" y="645" width="0.0806%" height="15" fill="rgb(234,182,17)" fg:x="247" fg:w="1"/><text x="20.1533%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.9033%" y="629" width="0.0806%" height="15" fill="rgb(237,58,48)" fg:x="247" fg:w="1"/><text x="20.1533%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9033%" y="613" width="0.0806%" height="15" fill="rgb(226,112,37)" fg:x="247" fg:w="1"/><text x="20.1533%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.05%)</title><rect x="19.0169%" y="725" width="1.0475%" height="15" fill="rgb(230,201,20)" fg:x="236" fg:w="13"/><text x="19.2669%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.05%)</title><rect x="19.0169%" y="709" width="1.0475%" height="15" fill="rgb(252,95,39)" fg:x="236" fg:w="13"/><text x="19.2669%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="19.3392%" y="693" width="0.7252%" height="15" fill="rgb(240,150,33)" fg:x="240" fg:w="9"/><text x="19.5892%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="19.5810%" y="677" width="0.4835%" height="15" fill="rgb(208,202,37)" fg:x="243" fg:w="6"/><text x="19.8310%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="19.6616%" y="661" width="0.4029%" height="15" fill="rgb(251,37,12)" fg:x="244" fg:w="5"/><text x="19.9116%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9839%" y="645" width="0.0806%" height="15" fill="rgb(247,150,26)" fg:x="248" fg:w="1"/><text x="20.2339%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9839%" y="629" width="0.0806%" height="15" fill="rgb(232,28,8)" fg:x="248" fg:w="1"/><text x="20.2339%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.9839%" y="613" width="0.0806%" height="15" fill="rgb(226,121,34)" fg:x="248" fg:w="1"/><text x="20.2339%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="20.0645%" y="693" width="0.0806%" height="15" fill="rgb(237,23,13)" fg:x="249" fg:w="1"/><text x="20.3145%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.3868%" y="677" width="0.0806%" height="15" fill="rgb(214,42,29)" fg:x="253" fg:w="1"/><text x="20.6368%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="20.4674%" y="677" width="0.3223%" height="15" fill="rgb(246,204,29)" fg:x="254" fg:w="4"/><text x="20.7174%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.6285%" y="661" width="0.1612%" height="15" fill="rgb(242,28,40)" fg:x="256" fg:w="2"/><text x="20.8785%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="20.7091%" y="645" width="0.0806%" height="15" fill="rgb(243,64,49)" fg:x="257" fg:w="1"/><text x="20.9591%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="20.7897%" y="677" width="0.0806%" height="15" fill="rgb(226,93,13)" fg:x="258" fg:w="1"/><text x="21.0397%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.7897%" y="661" width="0.0806%" height="15" fill="rgb(241,113,26)" fg:x="258" fg:w="1"/><text x="21.0397%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.1120%" y="597" width="0.1612%" height="15" fill="rgb(209,209,0)" fg:x="262" fg:w="2"/><text x="21.3620%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="21.0314%" y="629" width="0.3223%" height="15" fill="rgb(251,183,50)" fg:x="261" fg:w="4"/><text x="21.2814%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="21.1120%" y="613" width="0.2417%" height="15" fill="rgb(248,24,43)" fg:x="262" fg:w="3"/><text x="21.3620%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="21.2732%" y="597" width="0.0806%" height="15" fill="rgb(218,102,9)" fg:x="264" fg:w="1"/><text x="21.5232%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="21.5149%" y="597" width="0.0806%" height="15" fill="rgb(249,209,39)" fg:x="267" fg:w="1"/><text x="21.7649%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.5149%" y="581" width="0.0806%" height="15" fill="rgb(210,37,6)" fg:x="267" fg:w="1"/><text x="21.7649%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.5149%" y="565" width="0.0806%" height="15" fill="rgb(212,99,4)" fg:x="267" fg:w="1"/><text x="21.7649%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="21.5149%" y="549" width="0.0806%" height="15" fill="rgb(253,59,46)" fg:x="267" fg:w="1"/><text x="21.7649%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="21.3537%" y="629" width="0.3223%" height="15" fill="rgb(229,96,9)" fg:x="265" fg:w="4"/><text x="21.6037%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="21.3537%" y="613" width="0.3223%" height="15" fill="rgb(207,103,49)" fg:x="265" fg:w="4"/><text x="21.6037%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.5955%" y="597" width="0.0806%" height="15" fill="rgb(250,226,20)" fg:x="268" fg:w="1"/><text x="21.8455%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.9178%" y="613" width="0.0806%" height="15" fill="rgb(238,220,11)" fg:x="272" fg:w="1"/><text x="22.1678%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="21.9984%" y="613" width="0.0806%" height="15" fill="rgb(236,74,15)" fg:x="273" fg:w="1"/><text x="22.2484%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.0790%" y="597" width="0.1612%" height="15" fill="rgb(218,43,40)" fg:x="274" fg:w="2"/><text x="22.3290%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.0790%" y="581" width="0.1612%" height="15" fill="rgb(245,206,37)" fg:x="274" fg:w="2"/><text x="22.3290%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="22.0790%" y="565" width="0.1612%" height="15" fill="rgb(206,30,3)" fg:x="274" fg:w="2"/><text x="22.3290%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="22.2401%" y="581" width="0.0806%" height="15" fill="rgb(211,29,35)" fg:x="276" fg:w="1"/><text x="22.4901%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.4013%" y="533" width="0.0806%" height="15" fill="rgb(218,49,50)" fg:x="278" fg:w="1"/><text x="22.6513%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="22.0790%" y="613" width="0.4835%" height="15" fill="rgb(211,114,30)" fg:x="274" fg:w="6"/><text x="22.3290%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="22.2401%" y="597" width="0.3223%" height="15" fill="rgb(238,70,33)" fg:x="276" fg:w="4"/><text x="22.4901%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="22.3207%" y="581" width="0.2417%" height="15" fill="rgb(238,141,50)" fg:x="277" fg:w="3"/><text x="22.5707%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="22.3207%" y="565" width="0.2417%" height="15" fill="rgb(205,69,6)" fg:x="277" fg:w="3"/><text x="22.5707%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="22.3207%" y="549" width="0.2417%" height="15" fill="rgb(229,65,0)" fg:x="277" fg:w="3"/><text x="22.5707%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="22.4819%" y="533" width="0.0806%" height="15" fill="rgb(211,3,37)" fg:x="279" fg:w="1"/><text x="22.7319%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.4819%" y="517" width="0.0806%" height="15" fill="rgb(223,196,42)" fg:x="279" fg:w="1"/><text x="22.7319%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.4819%" y="501" width="0.0806%" height="15" fill="rgb(227,191,15)" fg:x="279" fg:w="1"/><text x="22.7319%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.4819%" y="485" width="0.0806%" height="15" fill="rgb(229,210,53)" fg:x="279" fg:w="1"/><text x="22.7319%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.4819%" y="469" width="0.0806%" height="15" fill="rgb(250,203,10)" fg:x="279" fg:w="1"/><text x="22.7319%" y="479.50"></text></g><g><title>engine::session::Session::flush (85 samples, 6.85%)</title><rect x="15.7937%" y="821" width="6.8493%" height="15" fill="rgb(247,8,37)" fg:x="196" fg:w="85"/><text x="16.0437%" y="831.50">engine::s..</text></g><g><title>engine::session::Session::save_changes (85 samples, 6.85%)</title><rect x="15.7937%" y="805" width="6.8493%" height="15" fill="rgb(240,52,9)" fg:x="196" fg:w="85"/><text x="16.0437%" y="815.50">engine::s..</text></g><g><title>engine::session::state::State::close (85 samples, 6.85%)</title><rect x="15.7937%" y="789" width="6.8493%" height="15" fill="rgb(243,100,52)" fg:x="196" fg:w="85"/><text x="16.0437%" y="799.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (84 samples, 6.77%)</title><rect x="15.8743%" y="773" width="6.7687%" height="15" fill="rgb(224,149,30)" fg:x="197" fg:w="84"/><text x="16.1243%" y="783.50">engine::s..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (83 samples, 6.69%)</title><rect x="15.9549%" y="757" width="6.6882%" height="15" fill="rgb(232,27,45)" fg:x="198" fg:w="83"/><text x="16.2049%" y="767.50">engine::s..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (82 samples, 6.61%)</title><rect x="16.0355%" y="741" width="6.6076%" height="15" fill="rgb(242,161,36)" fg:x="199" fg:w="82"/><text x="16.2855%" y="751.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (32 samples, 2.58%)</title><rect x="20.0645%" y="725" width="2.5786%" height="15" fill="rgb(235,223,32)" fg:x="249" fg:w="32"/><text x="20.3145%" y="735.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (32 samples, 2.58%)</title><rect x="20.0645%" y="709" width="2.5786%" height="15" fill="rgb(242,78,19)" fg:x="249" fg:w="32"/><text x="20.3145%" y="719.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (31 samples, 2.50%)</title><rect x="20.1450%" y="693" width="2.4980%" height="15" fill="rgb(233,157,47)" fg:x="250" fg:w="31"/><text x="20.3950%" y="703.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (22 samples, 1.77%)</title><rect x="20.8703%" y="677" width="1.7728%" height="15" fill="rgb(251,213,5)" fg:x="259" fg:w="22"/><text x="21.1203%" y="687.50">s..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (20 samples, 1.61%)</title><rect x="21.0314%" y="661" width="1.6116%" height="15" fill="rgb(215,223,5)" fg:x="261" fg:w="20"/><text x="21.2814%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.61%)</title><rect x="21.0314%" y="645" width="1.6116%" height="15" fill="rgb(230,14,7)" fg:x="261" fg:w="20"/><text x="21.2814%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.97%)</title><rect x="21.6761%" y="629" width="0.9670%" height="15" fill="rgb(249,179,20)" fg:x="269" fg:w="12"/><text x="21.9261%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.5624%" y="613" width="0.0806%" height="15" fill="rgb(230,204,44)" fg:x="280" fg:w="1"/><text x="22.8124%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="22.7236%" y="789" width="0.0806%" height="15" fill="rgb(233,229,46)" fg:x="282" fg:w="1"/><text x="22.9736%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.7236%" y="773" width="0.0806%" height="15" fill="rgb(210,154,35)" fg:x="282" fg:w="1"/><text x="22.9736%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.7236%" y="757" width="0.0806%" height="15" fill="rgb(220,178,16)" fg:x="282" fg:w="1"/><text x="22.9736%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7236%" y="741" width="0.0806%" height="15" fill="rgb(243,0,53)" fg:x="282" fg:w="1"/><text x="22.9736%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7236%" y="725" width="0.0806%" height="15" fill="rgb(223,221,47)" fg:x="282" fg:w="1"/><text x="22.9736%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.8042%" y="741" width="0.1612%" height="15" fill="rgb(233,82,15)" fg:x="283" fg:w="2"/><text x="23.0542%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="22.8042%" y="725" width="0.1612%" height="15" fill="rgb(222,8,38)" fg:x="283" fg:w="2"/><text x="23.0542%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="22.8042%" y="709" width="0.1612%" height="15" fill="rgb(241,28,48)" fg:x="283" fg:w="2"/><text x="23.0542%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="22.8042%" y="693" width="0.1612%" height="15" fill="rgb(209,227,15)" fg:x="283" fg:w="2"/><text x="23.0542%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="22.8042%" y="677" width="0.1612%" height="15" fill="rgb(234,189,48)" fg:x="283" fg:w="2"/><text x="23.0542%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="22.8042%" y="661" width="0.1612%" height="15" fill="rgb(212,27,44)" fg:x="283" fg:w="2"/><text x="23.0542%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="22.8042%" y="645" width="0.1612%" height="15" fill="rgb(249,55,42)" fg:x="283" fg:w="2"/><text x="23.0542%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="22.8042%" y="629" width="0.1612%" height="15" fill="rgb(215,211,28)" fg:x="283" fg:w="2"/><text x="23.0542%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="22.8042%" y="613" width="0.1612%" height="15" fill="rgb(221,155,16)" fg:x="283" fg:w="2"/><text x="23.0542%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="22.8042%" y="597" width="0.1612%" height="15" fill="rgb(247,106,30)" fg:x="283" fg:w="2"/><text x="23.0542%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="22.8042%" y="581" width="0.1612%" height="15" fill="rgb(230,76,31)" fg:x="283" fg:w="2"/><text x="23.0542%" y="591.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="22.8042%" y="565" width="0.1612%" height="15" fill="rgb(222,6,48)" fg:x="283" fg:w="2"/><text x="23.0542%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="22.8042%" y="549" width="0.1612%" height="15" fill="rgb(228,82,3)" fg:x="283" fg:w="2"/><text x="23.0542%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (5 samples, 0.40%)</title><rect x="22.6430%" y="821" width="0.4029%" height="15" fill="rgb(245,208,52)" fg:x="281" fg:w="5"/><text x="22.8930%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="22.7236%" y="805" width="0.3223%" height="15" fill="rgb(218,65,17)" fg:x="282" fg:w="4"/><text x="22.9736%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="22.8042%" y="789" width="0.2417%" height="15" fill="rgb(242,63,26)" fg:x="283" fg:w="3"/><text x="23.0542%" y="799.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="22.8042%" y="773" width="0.2417%" height="15" fill="rgb(224,119,39)" fg:x="283" fg:w="3"/><text x="23.0542%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="22.8042%" y="757" width="0.2417%" height="15" fill="rgb(229,106,3)" fg:x="283" fg:w="3"/><text x="23.0542%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.9654%" y="741" width="0.0806%" height="15" fill="rgb(248,6,33)" fg:x="285" fg:w="1"/><text x="23.2154%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9654%" y="725" width="0.0806%" height="15" fill="rgb(226,3,49)" fg:x="285" fg:w="1"/><text x="23.2154%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.9654%" y="709" width="0.0806%" height="15" fill="rgb(228,142,14)" fg:x="285" fg:w="1"/><text x="23.2154%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9654%" y="693" width="0.0806%" height="15" fill="rgb(241,141,54)" fg:x="285" fg:w="1"/><text x="23.2154%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.9654%" y="677" width="0.0806%" height="15" fill="rgb(252,17,50)" fg:x="285" fg:w="1"/><text x="23.2154%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="23.0459%" y="789" width="0.0806%" height="15" fill="rgb(221,120,48)" fg:x="286" fg:w="1"/><text x="23.2959%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="23.0459%" y="773" width="0.0806%" height="15" fill="rgb(229,171,33)" fg:x="286" fg:w="1"/><text x="23.2959%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="23.1265%" y="773" width="0.0806%" height="15" fill="rgb(236,207,21)" fg:x="287" fg:w="1"/><text x="23.3765%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.1265%" y="757" width="0.0806%" height="15" fill="rgb(218,93,35)" fg:x="287" fg:w="1"/><text x="23.3765%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2071%" y="677" width="0.0806%" height="15" fill="rgb(207,101,8)" fg:x="288" fg:w="1"/><text x="23.4571%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.2071%" y="661" width="0.0806%" height="15" fill="rgb(237,67,44)" fg:x="288" fg:w="1"/><text x="23.4571%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.2071%" y="645" width="0.0806%" height="15" fill="rgb(236,218,7)" fg:x="288" fg:w="1"/><text x="23.4571%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.2071%" y="629" width="0.0806%" height="15" fill="rgb(252,207,10)" fg:x="288" fg:w="1"/><text x="23.4571%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.2071%" y="613" width="0.0806%" height="15" fill="rgb(221,175,6)" fg:x="288" fg:w="1"/><text x="23.4571%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.2071%" y="597" width="0.0806%" height="15" fill="rgb(230,105,53)" fg:x="288" fg:w="1"/><text x="23.4571%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.2071%" y="581" width="0.0806%" height="15" fill="rgb(253,83,6)" fg:x="288" fg:w="1"/><text x="23.4571%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.2071%" y="565" width="0.0806%" height="15" fill="rgb(206,198,44)" fg:x="288" fg:w="1"/><text x="23.4571%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.2071%" y="549" width="0.0806%" height="15" fill="rgb(206,164,29)" fg:x="288" fg:w="1"/><text x="23.4571%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.2071%" y="533" width="0.0806%" height="15" fill="rgb(215,2,50)" fg:x="288" fg:w="1"/><text x="23.4571%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.2071%" y="517" width="0.0806%" height="15" fill="rgb(246,127,18)" fg:x="288" fg:w="1"/><text x="23.4571%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.2071%" y="501" width="0.0806%" height="15" fill="rgb(232,6,21)" fg:x="288" fg:w="1"/><text x="23.4571%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.2071%" y="485" width="0.0806%" height="15" fill="rgb(224,154,1)" fg:x="288" fg:w="1"/><text x="23.4571%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.2071%" y="741" width="0.1612%" height="15" fill="rgb(248,135,32)" fg:x="288" fg:w="2"/><text x="23.4571%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.2071%" y="725" width="0.1612%" height="15" fill="rgb(253,129,38)" fg:x="288" fg:w="2"/><text x="23.4571%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.2071%" y="709" width="0.1612%" height="15" fill="rgb(214,110,11)" fg:x="288" fg:w="2"/><text x="23.4571%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.2071%" y="693" width="0.1612%" height="15" fill="rgb(246,150,22)" fg:x="288" fg:w="2"/><text x="23.4571%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.2877%" y="677" width="0.0806%" height="15" fill="rgb(219,170,39)" fg:x="289" fg:w="1"/><text x="23.5377%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.2877%" y="661" width="0.0806%" height="15" fill="rgb(221,143,52)" fg:x="289" fg:w="1"/><text x="23.5377%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.2877%" y="645" width="0.0806%" height="15" fill="rgb(237,122,11)" fg:x="289" fg:w="1"/><text x="23.5377%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.2877%" y="629" width="0.0806%" height="15" fill="rgb(217,114,13)" fg:x="289" fg:w="1"/><text x="23.5377%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.2877%" y="613" width="0.0806%" height="15" fill="rgb(218,184,28)" fg:x="289" fg:w="1"/><text x="23.5377%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.2877%" y="597" width="0.0806%" height="15" fill="rgb(237,33,22)" fg:x="289" fg:w="1"/><text x="23.5377%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.2877%" y="581" width="0.0806%" height="15" fill="rgb(224,56,42)" fg:x="289" fg:w="1"/><text x="23.5377%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.2877%" y="565" width="0.0806%" height="15" fill="rgb(216,138,53)" fg:x="289" fg:w="1"/><text x="23.5377%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.2877%" y="549" width="0.0806%" height="15" fill="rgb(233,229,40)" fg:x="289" fg:w="1"/><text x="23.5377%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.2877%" y="533" width="0.0806%" height="15" fill="rgb(252,105,0)" fg:x="289" fg:w="1"/><text x="23.5377%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.2877%" y="517" width="0.0806%" height="15" fill="rgb(212,75,24)" fg:x="289" fg:w="1"/><text x="23.5377%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="23.1265%" y="789" width="0.4029%" height="15" fill="rgb(235,168,50)" fg:x="287" fg:w="5"/><text x="23.3765%" y="799.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="23.2071%" y="773" width="0.3223%" height="15" fill="rgb(247,204,12)" fg:x="288" fg:w="4"/><text x="23.4571%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="23.2071%" y="757" width="0.3223%" height="15" fill="rgb(250,203,27)" fg:x="288" fg:w="4"/><text x="23.4571%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.3683%" y="741" width="0.1612%" height="15" fill="rgb(221,215,2)" fg:x="290" fg:w="2"/><text x="23.6183%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.3683%" y="725" width="0.1612%" height="15" fill="rgb(242,163,47)" fg:x="290" fg:w="2"/><text x="23.6183%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.3683%" y="709" width="0.1612%" height="15" fill="rgb(237,136,50)" fg:x="290" fg:w="2"/><text x="23.6183%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.3683%" y="693" width="0.1612%" height="15" fill="rgb(217,201,47)" fg:x="290" fg:w="2"/><text x="23.6183%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="23.3683%" y="677" width="0.1612%" height="15" fill="rgb(212,38,47)" fg:x="290" fg:w="2"/><text x="23.6183%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.3683%" y="661" width="0.1612%" height="15" fill="rgb(254,113,41)" fg:x="290" fg:w="2"/><text x="23.6183%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.3683%" y="645" width="0.1612%" height="15" fill="rgb(236,7,22)" fg:x="290" fg:w="2"/><text x="23.6183%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.3683%" y="629" width="0.1612%" height="15" fill="rgb(235,81,25)" fg:x="290" fg:w="2"/><text x="23.6183%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="23.5294%" y="789" width="0.0806%" height="15" fill="rgb(216,41,31)" fg:x="292" fg:w="1"/><text x="23.7794%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="23.5294%" y="773" width="0.0806%" height="15" fill="rgb(249,219,15)" fg:x="292" fg:w="1"/><text x="23.7794%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.5294%" y="757" width="0.0806%" height="15" fill="rgb(248,201,3)" fg:x="292" fg:w="1"/><text x="23.7794%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="23.6100%" y="773" width="0.1612%" height="15" fill="rgb(249,141,18)" fg:x="293" fg:w="2"/><text x="23.8600%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.6100%" y="757" width="0.1612%" height="15" fill="rgb(222,32,39)" fg:x="293" fg:w="2"/><text x="23.8600%" y="767.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="23.6100%" y="741" width="0.1612%" height="15" fill="rgb(237,139,51)" fg:x="293" fg:w="2"/><text x="23.8600%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.6100%" y="725" width="0.1612%" height="15" fill="rgb(218,210,4)" fg:x="293" fg:w="2"/><text x="23.8600%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.6100%" y="709" width="0.1612%" height="15" fill="rgb(217,199,13)" fg:x="293" fg:w="2"/><text x="23.8600%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6906%" y="693" width="0.0806%" height="15" fill="rgb(222,118,25)" fg:x="294" fg:w="1"/><text x="23.9406%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.6906%" y="677" width="0.0806%" height="15" fill="rgb(241,70,28)" fg:x="294" fg:w="1"/><text x="23.9406%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.6906%" y="661" width="0.0806%" height="15" fill="rgb(205,51,41)" fg:x="294" fg:w="1"/><text x="23.9406%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.6906%" y="645" width="0.0806%" height="15" fill="rgb(237,165,49)" fg:x="294" fg:w="1"/><text x="23.9406%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.6906%" y="629" width="0.0806%" height="15" fill="rgb(213,10,51)" fg:x="294" fg:w="1"/><text x="23.9406%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.6906%" y="613" width="0.0806%" height="15" fill="rgb(245,89,32)" fg:x="294" fg:w="1"/><text x="23.9406%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.6906%" y="597" width="0.0806%" height="15" fill="rgb(249,81,54)" fg:x="294" fg:w="1"/><text x="23.9406%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.6906%" y="581" width="0.0806%" height="15" fill="rgb(223,134,14)" fg:x="294" fg:w="1"/><text x="23.9406%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.6906%" y="565" width="0.0806%" height="15" fill="rgb(233,62,37)" fg:x="294" fg:w="1"/><text x="23.9406%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.6906%" y="549" width="0.0806%" height="15" fill="rgb(219,117,42)" fg:x="294" fg:w="1"/><text x="23.9406%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.6906%" y="533" width="0.0806%" height="15" fill="rgb(248,40,28)" fg:x="294" fg:w="1"/><text x="23.9406%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.6906%" y="517" width="0.0806%" height="15" fill="rgb(246,66,35)" fg:x="294" fg:w="1"/><text x="23.9406%" y="527.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="23.6100%" y="789" width="0.3223%" height="15" fill="rgb(250,229,22)" fg:x="293" fg:w="4"/><text x="23.8600%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="23.7712%" y="773" width="0.1612%" height="15" fill="rgb(213,89,18)" fg:x="295" fg:w="2"/><text x="24.0212%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="23.7712%" y="757" width="0.1612%" height="15" fill="rgb(213,122,9)" fg:x="295" fg:w="2"/><text x="24.0212%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="23.7712%" y="741" width="0.1612%" height="15" fill="rgb(220,213,48)" fg:x="295" fg:w="2"/><text x="24.0212%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="23.7712%" y="725" width="0.1612%" height="15" fill="rgb(244,109,54)" fg:x="295" fg:w="2"/><text x="24.0212%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.8517%" y="709" width="0.0806%" height="15" fill="rgb(254,104,49)" fg:x="296" fg:w="1"/><text x="24.1017%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.9323%" y="693" width="0.1612%" height="15" fill="rgb(219,28,32)" fg:x="297" fg:w="2"/><text x="24.1823%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.9323%" y="677" width="0.1612%" height="15" fill="rgb(249,153,33)" fg:x="297" fg:w="2"/><text x="24.1823%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.9323%" y="661" width="0.1612%" height="15" fill="rgb(230,116,21)" fg:x="297" fg:w="2"/><text x="24.1823%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.0129%" y="645" width="0.0806%" height="15" fill="rgb(247,110,3)" fg:x="298" fg:w="1"/><text x="24.2629%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.0129%" y="629" width="0.0806%" height="15" fill="rgb(227,128,3)" fg:x="298" fg:w="1"/><text x="24.2629%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="23.9323%" y="709" width="0.2417%" height="15" fill="rgb(208,21,1)" fg:x="297" fg:w="3"/><text x="24.1823%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.0935%" y="693" width="0.0806%" height="15" fill="rgb(225,24,20)" fg:x="299" fg:w="1"/><text x="24.3435%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.21%)</title><rect x="23.0459%" y="805" width="1.2087%" height="15" fill="rgb(250,159,24)" fg:x="286" fg:w="15"/><text x="23.2959%" y="815.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="23.9323%" y="789" width="0.3223%" height="15" fill="rgb(214,30,53)" fg:x="297" fg:w="4"/><text x="24.1823%" y="799.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="23.9323%" y="773" width="0.3223%" height="15" fill="rgb(243,198,11)" fg:x="297" fg:w="4"/><text x="24.1823%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="23.9323%" y="757" width="0.3223%" height="15" fill="rgb(232,33,1)" fg:x="297" fg:w="4"/><text x="24.1823%" y="767.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="23.9323%" y="741" width="0.3223%" height="15" fill="rgb(242,60,11)" fg:x="297" fg:w="4"/><text x="24.1823%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="23.9323%" y="725" width="0.3223%" height="15" fill="rgb(241,229,34)" fg:x="297" fg:w="4"/><text x="24.1823%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="24.1741%" y="709" width="0.0806%" height="15" fill="rgb(230,92,51)" fg:x="300" fg:w="1"/><text x="24.4241%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.1741%" y="693" width="0.0806%" height="15" fill="rgb(212,209,8)" fg:x="300" fg:w="1"/><text x="24.4241%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="24.1741%" y="677" width="0.0806%" height="15" fill="rgb(241,55,35)" fg:x="300" fg:w="1"/><text x="24.4241%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.1741%" y="661" width="0.0806%" height="15" fill="rgb(208,187,52)" fg:x="300" fg:w="1"/><text x="24.4241%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="24.1741%" y="645" width="0.0806%" height="15" fill="rgb(251,110,17)" fg:x="300" fg:w="1"/><text x="24.4241%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="24.1741%" y="629" width="0.0806%" height="15" fill="rgb(246,225,54)" fg:x="300" fg:w="1"/><text x="24.4241%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="24.2546%" y="805" width="0.0806%" height="15" fill="rgb(220,109,6)" fg:x="301" fg:w="1"/><text x="24.5046%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="24.2546%" y="789" width="0.0806%" height="15" fill="rgb(228,56,50)" fg:x="301" fg:w="1"/><text x="24.5046%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3352%" y="709" width="0.0806%" height="15" fill="rgb(230,34,30)" fg:x="302" fg:w="1"/><text x="24.5852%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3352%" y="693" width="0.0806%" height="15" fill="rgb(205,28,42)" fg:x="302" fg:w="1"/><text x="24.5852%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3352%" y="677" width="0.0806%" height="15" fill="rgb(215,68,0)" fg:x="302" fg:w="1"/><text x="24.5852%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3352%" y="661" width="0.0806%" height="15" fill="rgb(206,91,47)" fg:x="302" fg:w="1"/><text x="24.5852%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.3352%" y="645" width="0.0806%" height="15" fill="rgb(241,159,43)" fg:x="302" fg:w="1"/><text x="24.5852%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="24.4158%" y="613" width="0.0806%" height="15" fill="rgb(232,191,38)" fg:x="303" fg:w="1"/><text x="24.6658%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.4158%" y="597" width="0.0806%" height="15" fill="rgb(212,180,41)" fg:x="303" fg:w="1"/><text x="24.6658%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="24.3352%" y="757" width="0.2417%" height="15" fill="rgb(236,134,49)" fg:x="302" fg:w="3"/><text x="24.5852%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="24.3352%" y="741" width="0.2417%" height="15" fill="rgb(221,83,26)" fg:x="302" fg:w="3"/><text x="24.5852%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="24.3352%" y="725" width="0.2417%" height="15" fill="rgb(215,87,39)" fg:x="302" fg:w="3"/><text x="24.5852%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.4158%" y="709" width="0.1612%" height="15" fill="rgb(242,28,29)" fg:x="303" fg:w="2"/><text x="24.6658%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.4158%" y="693" width="0.1612%" height="15" fill="rgb(212,219,47)" fg:x="303" fg:w="2"/><text x="24.6658%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.4158%" y="677" width="0.1612%" height="15" fill="rgb(221,35,20)" fg:x="303" fg:w="2"/><text x="24.6658%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.4158%" y="661" width="0.1612%" height="15" fill="rgb(234,144,13)" fg:x="303" fg:w="2"/><text x="24.6658%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="24.4158%" y="645" width="0.1612%" height="15" fill="rgb(237,41,27)" fg:x="303" fg:w="2"/><text x="24.6658%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.4158%" y="629" width="0.1612%" height="15" fill="rgb(253,175,5)" fg:x="303" fg:w="2"/><text x="24.6658%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.4964%" y="613" width="0.0806%" height="15" fill="rgb(235,210,51)" fg:x="304" fg:w="1"/><text x="24.7464%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.4964%" y="597" width="0.0806%" height="15" fill="rgb(241,180,35)" fg:x="304" fg:w="1"/><text x="24.7464%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.4964%" y="581" width="0.0806%" height="15" fill="rgb(219,45,16)" fg:x="304" fg:w="1"/><text x="24.7464%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.4964%" y="565" width="0.0806%" height="15" fill="rgb(247,212,4)" fg:x="304" fg:w="1"/><text x="24.7464%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.4964%" y="549" width="0.0806%" height="15" fill="rgb(224,211,1)" fg:x="304" fg:w="1"/><text x="24.7464%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6575%" y="645" width="0.0806%" height="15" fill="rgb(210,193,36)" fg:x="306" fg:w="1"/><text x="24.9075%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6575%" y="629" width="0.0806%" height="15" fill="rgb(215,121,20)" fg:x="306" fg:w="1"/><text x="24.9075%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="24.5770%" y="709" width="0.2417%" height="15" fill="rgb(238,146,2)" fg:x="305" fg:w="3"/><text x="24.8270%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="24.5770%" y="693" width="0.2417%" height="15" fill="rgb(254,123,45)" fg:x="305" fg:w="3"/><text x="24.8270%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="24.5770%" y="677" width="0.2417%" height="15" fill="rgb(225,126,11)" fg:x="305" fg:w="3"/><text x="24.8270%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="24.5770%" y="661" width="0.2417%" height="15" fill="rgb(239,12,5)" fg:x="305" fg:w="3"/><text x="24.8270%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.7381%" y="645" width="0.0806%" height="15" fill="rgb(241,207,14)" fg:x="307" fg:w="1"/><text x="24.9881%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.8187%" y="645" width="0.0806%" height="15" fill="rgb(227,134,33)" fg:x="308" fg:w="1"/><text x="25.0687%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.8993%" y="613" width="0.0806%" height="15" fill="rgb(221,40,52)" fg:x="309" fg:w="1"/><text x="25.1493%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.8993%" y="597" width="0.0806%" height="15" fill="rgb(206,93,8)" fg:x="309" fg:w="1"/><text x="25.1493%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="25.0604%" y="549" width="0.0806%" height="15" fill="rgb(242,160,22)" fg:x="311" fg:w="1"/><text x="25.3104%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.89%)</title><rect x="24.3352%" y="789" width="0.8864%" height="15" fill="rgb(232,204,40)" fg:x="302" fg:w="11"/><text x="24.5852%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (11 samples, 0.89%)</title><rect x="24.3352%" y="773" width="0.8864%" height="15" fill="rgb(247,210,47)" fg:x="302" fg:w="11"/><text x="24.5852%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="24.5770%" y="757" width="0.6446%" height="15" fill="rgb(211,91,7)" fg:x="305" fg:w="8"/><text x="24.8270%" y="767.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="24.5770%" y="741" width="0.6446%" height="15" fill="rgb(252,160,34)" fg:x="305" fg:w="8"/><text x="24.8270%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="24.5770%" y="725" width="0.6446%" height="15" fill="rgb(220,34,39)" fg:x="305" fg:w="8"/><text x="24.8270%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="24.8187%" y="709" width="0.4029%" height="15" fill="rgb(247,49,38)" fg:x="308" fg:w="5"/><text x="25.0687%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="24.8187%" y="693" width="0.4029%" height="15" fill="rgb(228,175,44)" fg:x="308" fg:w="5"/><text x="25.0687%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="24.8187%" y="677" width="0.4029%" height="15" fill="rgb(218,214,32)" fg:x="308" fg:w="5"/><text x="25.0687%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="24.8187%" y="661" width="0.4029%" height="15" fill="rgb(213,50,12)" fg:x="308" fg:w="5"/><text x="25.0687%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="24.8993%" y="645" width="0.3223%" height="15" fill="rgb(219,35,41)" fg:x="309" fg:w="4"/><text x="25.1493%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="24.8993%" y="629" width="0.3223%" height="15" fill="rgb(219,18,38)" fg:x="309" fg:w="4"/><text x="25.1493%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="24.9799%" y="613" width="0.2417%" height="15" fill="rgb(223,217,6)" fg:x="310" fg:w="3"/><text x="25.2299%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="24.9799%" y="597" width="0.2417%" height="15" fill="rgb(208,193,35)" fg:x="310" fg:w="3"/><text x="25.2299%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.0604%" y="581" width="0.1612%" height="15" fill="rgb(254,212,54)" fg:x="311" fg:w="2"/><text x="25.3104%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.0604%" y="565" width="0.1612%" height="15" fill="rgb(205,10,2)" fg:x="311" fg:w="2"/><text x="25.3104%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.1410%" y="549" width="0.0806%" height="15" fill="rgb(230,133,29)" fg:x="312" fg:w="1"/><text x="25.3910%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="25.2216%" y="789" width="0.0806%" height="15" fill="rgb(226,14,15)" fg:x="313" fg:w="1"/><text x="25.4716%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.2216%" y="773" width="0.0806%" height="15" fill="rgb(226,140,54)" fg:x="313" fg:w="1"/><text x="25.4716%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.2216%" y="757" width="0.0806%" height="15" fill="rgb(250,47,41)" fg:x="313" fg:w="1"/><text x="25.4716%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.3022%" y="789" width="0.0806%" height="15" fill="rgb(227,218,41)" fg:x="314" fg:w="1"/><text x="25.5522%" y="799.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="25.3022%" y="773" width="0.0806%" height="15" fill="rgb(254,183,7)" fg:x="314" fg:w="1"/><text x="25.5522%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.3022%" y="757" width="0.0806%" height="15" fill="rgb(206,84,53)" fg:x="314" fg:w="1"/><text x="25.5522%" y="767.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="25.3022%" y="741" width="0.0806%" height="15" fill="rgb(213,177,2)" fg:x="314" fg:w="1"/><text x="25.5522%" y="751.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="25.3022%" y="725" width="0.0806%" height="15" fill="rgb(234,28,29)" fg:x="314" fg:w="1"/><text x="25.5522%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.3022%" y="709" width="0.0806%" height="15" fill="rgb(248,211,38)" fg:x="314" fg:w="1"/><text x="25.5522%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.3022%" y="693" width="0.0806%" height="15" fill="rgb(246,30,0)" fg:x="314" fg:w="1"/><text x="25.5522%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.3828%" y="773" width="0.0806%" height="15" fill="rgb(244,115,24)" fg:x="315" fg:w="1"/><text x="25.6328%" y="783.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="25.4633%" y="725" width="0.0806%" height="15" fill="rgb(226,193,14)" fg:x="316" fg:w="1"/><text x="25.7133%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.4633%" y="709" width="0.0806%" height="15" fill="rgb(211,196,48)" fg:x="316" fg:w="1"/><text x="25.7133%" y="719.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.4633%" y="693" width="0.0806%" height="15" fill="rgb(235,32,20)" fg:x="316" fg:w="1"/><text x="25.7133%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6245%" y="693" width="0.0806%" height="15" fill="rgb(251,151,49)" fg:x="318" fg:w="1"/><text x="25.8745%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6245%" y="677" width="0.0806%" height="15" fill="rgb(254,141,38)" fg:x="318" fg:w="1"/><text x="25.8745%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6245%" y="661" width="0.0806%" height="15" fill="rgb(209,118,44)" fg:x="318" fg:w="1"/><text x="25.8745%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6245%" y="645" width="0.0806%" height="15" fill="rgb(205,81,4)" fg:x="318" fg:w="1"/><text x="25.8745%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.6245%" y="629" width="0.0806%" height="15" fill="rgb(241,25,6)" fg:x="318" fg:w="1"/><text x="25.8745%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.7051%" y="629" width="0.0806%" height="15" fill="rgb(212,179,29)" fg:x="319" fg:w="1"/><text x="25.9551%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="25.7051%" y="693" width="0.1612%" height="15" fill="rgb(241,40,32)" fg:x="319" fg:w="2"/><text x="25.9551%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="25.7051%" y="677" width="0.1612%" height="15" fill="rgb(223,35,2)" fg:x="319" fg:w="2"/><text x="25.9551%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="25.7051%" y="661" width="0.1612%" height="15" fill="rgb(221,125,54)" fg:x="319" fg:w="2"/><text x="25.9551%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="25.7051%" y="645" width="0.1612%" height="15" fill="rgb(230,5,49)" fg:x="319" fg:w="2"/><text x="25.9551%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.7857%" y="629" width="0.0806%" height="15" fill="rgb(221,157,7)" fg:x="320" fg:w="1"/><text x="26.0357%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.7857%" y="613" width="0.0806%" height="15" fill="rgb(242,163,10)" fg:x="320" fg:w="1"/><text x="26.0357%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.7857%" y="597" width="0.0806%" height="15" fill="rgb(232,30,2)" fg:x="320" fg:w="1"/><text x="26.0357%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="25.8662%" y="597" width="0.0806%" height="15" fill="rgb(245,102,40)" fg:x="321" fg:w="1"/><text x="26.1162%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="25.4633%" y="741" width="0.5641%" height="15" fill="rgb(242,10,41)" fg:x="316" fg:w="7"/><text x="25.7133%" y="751.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="25.5439%" y="725" width="0.4835%" height="15" fill="rgb(236,184,36)" fg:x="317" fg:w="6"/><text x="25.7939%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="25.5439%" y="709" width="0.4835%" height="15" fill="rgb(247,147,48)" fg:x="317" fg:w="6"/><text x="25.7939%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.8662%" y="693" width="0.1612%" height="15" fill="rgb(226,166,2)" fg:x="321" fg:w="2"/><text x="26.1162%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.8662%" y="677" width="0.1612%" height="15" fill="rgb(251,196,7)" fg:x="321" fg:w="2"/><text x="26.1162%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.8662%" y="661" width="0.1612%" height="15" fill="rgb(241,40,13)" fg:x="321" fg:w="2"/><text x="26.1162%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.8662%" y="645" width="0.1612%" height="15" fill="rgb(254,4,12)" fg:x="321" fg:w="2"/><text x="26.1162%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="25.8662%" y="629" width="0.1612%" height="15" fill="rgb(244,139,49)" fg:x="321" fg:w="2"/><text x="26.1162%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.8662%" y="613" width="0.1612%" height="15" fill="rgb(227,28,42)" fg:x="321" fg:w="2"/><text x="26.1162%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.9468%" y="597" width="0.0806%" height="15" fill="rgb(231,135,32)" fg:x="322" fg:w="1"/><text x="26.1968%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9468%" y="581" width="0.0806%" height="15" fill="rgb(244,182,3)" fg:x="322" fg:w="1"/><text x="26.1968%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.9468%" y="565" width="0.0806%" height="15" fill="rgb(247,46,19)" fg:x="322" fg:w="1"/><text x="26.1968%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9468%" y="549" width="0.0806%" height="15" fill="rgb(251,179,10)" fg:x="322" fg:w="1"/><text x="26.1968%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="25.9468%" y="533" width="0.0806%" height="15" fill="rgb(229,222,18)" fg:x="322" fg:w="1"/><text x="26.1968%" y="543.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="25.9468%" y="517" width="0.0806%" height="15" fill="rgb(251,107,20)" fg:x="322" fg:w="1"/><text x="26.1968%" y="527.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="25.9468%" y="501" width="0.0806%" height="15" fill="rgb(233,193,19)" fg:x="322" fg:w="1"/><text x="26.1968%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.1080%" y="677" width="0.1612%" height="15" fill="rgb(229,146,53)" fg:x="324" fg:w="2"/><text x="26.3580%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.1886%" y="661" width="0.0806%" height="15" fill="rgb(244,52,11)" fg:x="325" fg:w="1"/><text x="26.4386%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.1886%" y="645" width="0.0806%" height="15" fill="rgb(245,211,46)" fg:x="325" fg:w="1"/><text x="26.4386%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.1886%" y="629" width="0.0806%" height="15" fill="rgb(213,8,31)" fg:x="325" fg:w="1"/><text x="26.4386%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="26.0274%" y="693" width="0.3223%" height="15" fill="rgb(205,101,39)" fg:x="323" fg:w="4"/><text x="26.2774%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.2691%" y="677" width="0.0806%" height="15" fill="rgb(212,157,1)" fg:x="326" fg:w="1"/><text x="26.5191%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.2691%" y="661" width="0.0806%" height="15" fill="rgb(232,30,46)" fg:x="326" fg:w="1"/><text x="26.5191%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.2691%" y="645" width="0.0806%" height="15" fill="rgb(216,201,6)" fg:x="326" fg:w="1"/><text x="26.5191%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.2691%" y="629" width="0.0806%" height="15" fill="rgb(209,18,6)" fg:x="326" fg:w="1"/><text x="26.5191%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.2691%" y="613" width="0.0806%" height="15" fill="rgb(219,138,3)" fg:x="326" fg:w="1"/><text x="26.5191%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.2691%" y="597" width="0.0806%" height="15" fill="rgb(210,91,46)" fg:x="326" fg:w="1"/><text x="26.5191%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.2691%" y="581" width="0.0806%" height="15" fill="rgb(241,80,44)" fg:x="326" fg:w="1"/><text x="26.5191%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.2691%" y="565" width="0.0806%" height="15" fill="rgb(236,205,36)" fg:x="326" fg:w="1"/><text x="26.5191%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.2691%" y="549" width="0.0806%" height="15" fill="rgb(205,59,37)" fg:x="326" fg:w="1"/><text x="26.5191%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.2691%" y="533" width="0.0806%" height="15" fill="rgb(239,166,39)" fg:x="326" fg:w="1"/><text x="26.5191%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.2691%" y="517" width="0.0806%" height="15" fill="rgb(239,146,40)" fg:x="326" fg:w="1"/><text x="26.5191%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="26.2691%" y="501" width="0.0806%" height="15" fill="rgb(231,11,52)" fg:x="326" fg:w="1"/><text x="26.5191%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (14 samples, 1.13%)</title><rect x="25.4633%" y="773" width="1.1281%" height="15" fill="rgb(253,21,37)" fg:x="316" fg:w="14"/><text x="25.7133%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (14 samples, 1.13%)</title><rect x="25.4633%" y="757" width="1.1281%" height="15" fill="rgb(224,87,39)" fg:x="316" fg:w="14"/><text x="25.7133%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="26.0274%" y="741" width="0.5641%" height="15" fill="rgb(249,15,46)" fg:x="323" fg:w="7"/><text x="26.2774%" y="751.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="26.0274%" y="725" width="0.5641%" height="15" fill="rgb(250,37,51)" fg:x="323" fg:w="7"/><text x="26.2774%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="26.0274%" y="709" width="0.5641%" height="15" fill="rgb(205,185,43)" fg:x="323" fg:w="7"/><text x="26.2774%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="26.3497%" y="693" width="0.2417%" height="15" fill="rgb(206,65,41)" fg:x="327" fg:w="3"/><text x="26.5997%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="26.3497%" y="677" width="0.2417%" height="15" fill="rgb(236,159,32)" fg:x="327" fg:w="3"/><text x="26.5997%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="26.3497%" y="661" width="0.2417%" height="15" fill="rgb(228,199,27)" fg:x="327" fg:w="3"/><text x="26.5997%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="26.3497%" y="645" width="0.2417%" height="15" fill="rgb(212,0,37)" fg:x="327" fg:w="3"/><text x="26.5997%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="26.3497%" y="629" width="0.2417%" height="15" fill="rgb(248,50,11)" fg:x="327" fg:w="3"/><text x="26.5997%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="26.3497%" y="613" width="0.2417%" height="15" fill="rgb(231,164,25)" fg:x="327" fg:w="3"/><text x="26.5997%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="26.4303%" y="597" width="0.1612%" height="15" fill="rgb(238,38,39)" fg:x="328" fg:w="2"/><text x="26.6803%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.4303%" y="581" width="0.1612%" height="15" fill="rgb(210,15,50)" fg:x="328" fg:w="2"/><text x="26.6803%" y="591.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="26.5109%" y="565" width="0.0806%" height="15" fill="rgb(251,126,36)" fg:x="329" fg:w="1"/><text x="26.7609%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (16 samples, 1.29%)</title><rect x="25.3828%" y="789" width="1.2893%" height="15" fill="rgb(243,59,26)" fg:x="315" fg:w="16"/><text x="25.6328%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="26.5915%" y="773" width="0.0806%" height="15" fill="rgb(215,24,30)" fg:x="330" fg:w="1"/><text x="26.8415%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.5915%" y="757" width="0.0806%" height="15" fill="rgb(253,50,51)" fg:x="330" fg:w="1"/><text x="26.8415%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="26.5915%" y="741" width="0.0806%" height="15" fill="rgb(252,2,16)" fg:x="330" fg:w="1"/><text x="26.8415%" y="751.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="26.5915%" y="725" width="0.0806%" height="15" fill="rgb(209,123,36)" fg:x="330" fg:w="1"/><text x="26.8415%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="26.5915%" y="709" width="0.0806%" height="15" fill="rgb(245,60,15)" fg:x="330" fg:w="1"/><text x="26.8415%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="26.5915%" y="693" width="0.0806%" height="15" fill="rgb(246,4,13)" fg:x="330" fg:w="1"/><text x="26.8415%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.5915%" y="677" width="0.0806%" height="15" fill="rgb(210,223,46)" fg:x="330" fg:w="1"/><text x="26.8415%" y="687.50"></text></g><g><title>plugins_core::build::Build::holding (47 samples, 3.79%)</title><rect x="23.0459%" y="821" width="3.7873%" height="15" fill="rgb(248,1,9)" fg:x="286" fg:w="47"/><text x="23.2959%" y="831.50">plug..</text></g><g><title>plugins_core::tools::set_container (31 samples, 2.50%)</title><rect x="24.3352%" y="805" width="2.4980%" height="15" fill="rgb(254,2,34)" fg:x="302" fg:w="31"/><text x="24.5852%" y="815.50">pl..</text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="26.6720%" y="789" width="0.1612%" height="15" fill="rgb(239,176,1)" fg:x="331" fg:w="2"/><text x="26.9220%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="26.6720%" y="773" width="0.1612%" height="15" fill="rgb(250,25,32)" fg:x="331" fg:w="2"/><text x="26.9220%" y="783.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="26.6720%" y="757" width="0.1612%" height="15" fill="rgb(225,28,39)" fg:x="331" fg:w="2"/><text x="26.9220%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (2 samples, 0.16%)</title><rect x="26.6720%" y="741" width="0.1612%" height="15" fill="rgb(230,166,37)" fg:x="331" fg:w="2"/><text x="26.9220%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.8332%" y="741" width="0.0806%" height="15" fill="rgb(246,220,4)" fg:x="333" fg:w="1"/><text x="27.0832%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="26.8332%" y="789" width="0.1612%" height="15" fill="rgb(219,119,33)" fg:x="333" fg:w="2"/><text x="27.0832%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="26.8332%" y="773" width="0.1612%" height="15" fill="rgb(221,207,38)" fg:x="333" fg:w="2"/><text x="27.0832%" y="783.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="26.8332%" y="757" width="0.1612%" height="15" fill="rgb(214,153,5)" fg:x="333" fg:w="2"/><text x="27.0832%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="26.9138%" y="741" width="0.0806%" height="15" fill="rgb(223,50,16)" fg:x="334" fg:w="1"/><text x="27.1638%" y="751.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="26.8332%" y="821" width="0.2417%" height="15" fill="rgb(209,207,12)" fg:x="333" fg:w="3"/><text x="27.0832%" y="831.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="26.8332%" y="805" width="0.2417%" height="15" fill="rgb(207,3,46)" fg:x="333" fg:w="3"/><text x="27.0832%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="26.9944%" y="789" width="0.0806%" height="15" fill="rgb(232,45,53)" fg:x="335" fg:w="1"/><text x="27.2444%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="26.9944%" y="773" width="0.0806%" height="15" fill="rgb(206,140,15)" fg:x="335" fg:w="1"/><text x="27.2444%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.9944%" y="757" width="0.0806%" height="15" fill="rgb(245,66,17)" fg:x="335" fg:w="1"/><text x="27.2444%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9944%" y="741" width="0.0806%" height="15" fill="rgb(221,25,37)" fg:x="335" fg:w="1"/><text x="27.2444%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9944%" y="725" width="0.0806%" height="15" fill="rgb(215,99,47)" fg:x="335" fg:w="1"/><text x="27.2444%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="27.0749%" y="789" width="0.0806%" height="15" fill="rgb(219,154,44)" fg:x="336" fg:w="1"/><text x="27.3249%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.0749%" y="773" width="0.0806%" height="15" fill="rgb(210,197,36)" fg:x="336" fg:w="1"/><text x="27.3249%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.0749%" y="757" width="0.0806%" height="15" fill="rgb(217,137,10)" fg:x="336" fg:w="1"/><text x="27.3249%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.0749%" y="741" width="0.0806%" height="15" fill="rgb(240,216,26)" fg:x="336" fg:w="1"/><text x="27.3249%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.0749%" y="725" width="0.0806%" height="15" fill="rgb(242,76,17)" fg:x="336" fg:w="1"/><text x="27.3249%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.0749%" y="709" width="0.0806%" height="15" fill="rgb(243,142,51)" fg:x="336" fg:w="1"/><text x="27.3249%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="27.0749%" y="693" width="0.0806%" height="15" fill="rgb(233,109,46)" fg:x="336" fg:w="1"/><text x="27.3249%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.0749%" y="677" width="0.0806%" height="15" fill="rgb(252,45,32)" fg:x="336" fg:w="1"/><text x="27.3249%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="27.1555%" y="661" width="0.0806%" height="15" fill="rgb(210,69,52)" fg:x="337" fg:w="1"/><text x="27.4055%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="27.1555%" y="645" width="0.0806%" height="15" fill="rgb(242,30,2)" fg:x="337" fg:w="1"/><text x="27.4055%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="27.0749%" y="821" width="0.2417%" height="15" fill="rgb(246,137,1)" fg:x="336" fg:w="3"/><text x="27.3249%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="27.0749%" y="805" width="0.2417%" height="15" fill="rgb(221,205,25)" fg:x="336" fg:w="3"/><text x="27.3249%" y="815.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="27.1555%" y="789" width="0.1612%" height="15" fill="rgb(224,44,43)" fg:x="337" fg:w="2"/><text x="27.4055%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="27.1555%" y="773" width="0.1612%" height="15" fill="rgb(209,81,13)" fg:x="337" fg:w="2"/><text x="27.4055%" y="783.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="27.1555%" y="757" width="0.1612%" height="15" fill="rgb(227,88,4)" fg:x="337" fg:w="2"/><text x="27.4055%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="27.1555%" y="741" width="0.1612%" height="15" fill="rgb(228,118,49)" fg:x="337" fg:w="2"/><text x="27.4055%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="27.1555%" y="725" width="0.1612%" height="15" fill="rgb(225,215,27)" fg:x="337" fg:w="2"/><text x="27.4055%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="27.1555%" y="709" width="0.1612%" height="15" fill="rgb(235,226,1)" fg:x="337" fg:w="2"/><text x="27.4055%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="27.1555%" y="693" width="0.1612%" height="15" fill="rgb(205,107,17)" fg:x="337" fg:w="2"/><text x="27.4055%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="27.1555%" y="677" width="0.1612%" height="15" fill="rgb(247,85,8)" fg:x="337" fg:w="2"/><text x="27.4055%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.2361%" y="661" width="0.0806%" height="15" fill="rgb(230,220,20)" fg:x="338" fg:w="1"/><text x="27.4861%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="27.2361%" y="645" width="0.0806%" height="15" fill="rgb(237,22,6)" fg:x="338" fg:w="1"/><text x="27.4861%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.2361%" y="629" width="0.0806%" height="15" fill="rgb(253,39,1)" fg:x="338" fg:w="1"/><text x="27.4861%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="27.2361%" y="613" width="0.0806%" height="15" fill="rgb(251,206,50)" fg:x="338" fg:w="1"/><text x="27.4861%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="27.3167%" y="789" width="0.0806%" height="15" fill="rgb(239,162,11)" fg:x="339" fg:w="1"/><text x="27.5667%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="27.3167%" y="773" width="0.0806%" height="15" fill="rgb(234,164,6)" fg:x="339" fg:w="1"/><text x="27.5667%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="27.3973%" y="789" width="0.0806%" height="15" fill="rgb(238,112,10)" fg:x="340" fg:w="1"/><text x="27.6473%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="27.3973%" y="773" width="0.0806%" height="15" fill="rgb(232,78,29)" fg:x="340" fg:w="1"/><text x="27.6473%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.3973%" y="757" width="0.0806%" height="15" fill="rgb(232,20,13)" fg:x="340" fg:w="1"/><text x="27.6473%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.3973%" y="741" width="0.0806%" height="15" fill="rgb(222,175,9)" fg:x="340" fg:w="1"/><text x="27.6473%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.3973%" y="725" width="0.0806%" height="15" fill="rgb(233,61,14)" fg:x="340" fg:w="1"/><text x="27.6473%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.3973%" y="709" width="0.0806%" height="15" fill="rgb(224,152,29)" fg:x="340" fg:w="1"/><text x="27.6473%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.4778%" y="789" width="0.0806%" height="15" fill="rgb(232,26,6)" fg:x="341" fg:w="1"/><text x="27.7278%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="27.5584%" y="773" width="0.0806%" height="15" fill="rgb(210,116,11)" fg:x="342" fg:w="1"/><text x="27.8084%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="27.5584%" y="757" width="0.0806%" height="15" fill="rgb(238,213,15)" fg:x="342" fg:w="1"/><text x="27.8084%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.5584%" y="741" width="0.0806%" height="15" fill="rgb(236,177,32)" fg:x="342" fg:w="1"/><text x="27.8084%" y="751.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="27.5584%" y="789" width="0.2417%" height="15" fill="rgb(230,36,43)" fg:x="342" fg:w="3"/><text x="27.8084%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="27.6390%" y="773" width="0.1612%" height="15" fill="rgb(212,76,23)" fg:x="343" fg:w="2"/><text x="27.8890%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="27.6390%" y="757" width="0.1612%" height="15" fill="rgb(225,168,24)" fg:x="343" fg:w="2"/><text x="27.8890%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="27.6390%" y="741" width="0.1612%" height="15" fill="rgb(206,40,44)" fg:x="343" fg:w="2"/><text x="27.8890%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.7196%" y="725" width="0.0806%" height="15" fill="rgb(251,213,6)" fg:x="344" fg:w="1"/><text x="27.9696%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.7196%" y="709" width="0.0806%" height="15" fill="rgb(220,7,47)" fg:x="344" fg:w="1"/><text x="27.9696%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="27.8002%" y="741" width="0.1612%" height="15" fill="rgb(254,130,53)" fg:x="345" fg:w="2"/><text x="28.0502%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="27.8002%" y="725" width="0.1612%" height="15" fill="rgb(240,2,46)" fg:x="345" fg:w="2"/><text x="28.0502%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.8002%" y="709" width="0.1612%" height="15" fill="rgb(252,144,40)" fg:x="345" fg:w="2"/><text x="28.0502%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.8002%" y="693" width="0.1612%" height="15" fill="rgb(226,23,10)" fg:x="345" fg:w="2"/><text x="28.0502%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.8002%" y="677" width="0.1612%" height="15" fill="rgb(212,204,35)" fg:x="345" fg:w="2"/><text x="28.0502%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.8002%" y="661" width="0.1612%" height="15" fill="rgb(218,201,15)" fg:x="345" fg:w="2"/><text x="28.0502%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="27.8002%" y="645" width="0.1612%" height="15" fill="rgb(224,197,5)" fg:x="345" fg:w="2"/><text x="28.0502%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.81%)</title><rect x="27.3167%" y="805" width="0.8058%" height="15" fill="rgb(224,185,18)" fg:x="339" fg:w="10"/><text x="27.5667%" y="815.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="27.8002%" y="789" width="0.3223%" height="15" fill="rgb(251,71,45)" fg:x="345" fg:w="4"/><text x="28.0502%" y="799.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="27.8002%" y="773" width="0.3223%" height="15" fill="rgb(216,74,24)" fg:x="345" fg:w="4"/><text x="28.0502%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="27.8002%" y="757" width="0.3223%" height="15" fill="rgb(250,36,51)" fg:x="345" fg:w="4"/><text x="28.0502%" y="767.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="27.9613%" y="741" width="0.1612%" height="15" fill="rgb(209,224,28)" fg:x="347" fg:w="2"/><text x="28.2113%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="27.9613%" y="725" width="0.1612%" height="15" fill="rgb(228,5,10)" fg:x="347" fg:w="2"/><text x="28.2113%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="27.9613%" y="709" width="0.1612%" height="15" fill="rgb(250,57,40)" fg:x="347" fg:w="2"/><text x="28.2113%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="27.9613%" y="693" width="0.1612%" height="15" fill="rgb(228,194,41)" fg:x="347" fg:w="2"/><text x="28.2113%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="27.9613%" y="677" width="0.1612%" height="15" fill="rgb(206,68,23)" fg:x="347" fg:w="2"/><text x="28.2113%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="27.9613%" y="661" width="0.1612%" height="15" fill="rgb(230,33,29)" fg:x="347" fg:w="2"/><text x="28.2113%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="28.0419%" y="645" width="0.0806%" height="15" fill="rgb(210,39,32)" fg:x="348" fg:w="1"/><text x="28.2919%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2031%" y="709" width="0.0806%" height="15" fill="rgb(236,89,23)" fg:x="350" fg:w="1"/><text x="28.4531%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2031%" y="693" width="0.0806%" height="15" fill="rgb(218,52,52)" fg:x="350" fg:w="1"/><text x="28.4531%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2031%" y="677" width="0.0806%" height="15" fill="rgb(235,154,5)" fg:x="350" fg:w="1"/><text x="28.4531%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2031%" y="661" width="0.0806%" height="15" fill="rgb(223,168,9)" fg:x="350" fg:w="1"/><text x="28.4531%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.2031%" y="645" width="0.0806%" height="15" fill="rgb(220,8,33)" fg:x="350" fg:w="1"/><text x="28.4531%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.2836%" y="709" width="0.0806%" height="15" fill="rgb(216,176,3)" fg:x="351" fg:w="1"/><text x="28.5336%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.2836%" y="693" width="0.0806%" height="15" fill="rgb(254,150,22)" fg:x="351" fg:w="1"/><text x="28.5336%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.2836%" y="677" width="0.0806%" height="15" fill="rgb(231,61,53)" fg:x="351" fg:w="1"/><text x="28.5336%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.2836%" y="661" width="0.0806%" height="15" fill="rgb(249,177,41)" fg:x="351" fg:w="1"/><text x="28.5336%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.2836%" y="645" width="0.0806%" height="15" fill="rgb(221,122,7)" fg:x="351" fg:w="1"/><text x="28.5336%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="28.2031%" y="757" width="0.2417%" height="15" fill="rgb(215,115,7)" fg:x="350" fg:w="3"/><text x="28.4531%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="28.2031%" y="741" width="0.2417%" height="15" fill="rgb(218,108,33)" fg:x="350" fg:w="3"/><text x="28.4531%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="28.2031%" y="725" width="0.2417%" height="15" fill="rgb(221,205,39)" fg:x="350" fg:w="3"/><text x="28.4531%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.3642%" y="709" width="0.0806%" height="15" fill="rgb(220,171,18)" fg:x="352" fg:w="1"/><text x="28.6142%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.3642%" y="693" width="0.0806%" height="15" fill="rgb(236,188,29)" fg:x="352" fg:w="1"/><text x="28.6142%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.3642%" y="677" width="0.0806%" height="15" fill="rgb(239,29,5)" fg:x="352" fg:w="1"/><text x="28.6142%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.3642%" y="661" width="0.0806%" height="15" fill="rgb(236,114,44)" fg:x="352" fg:w="1"/><text x="28.6142%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.3642%" y="645" width="0.0806%" height="15" fill="rgb(239,214,48)" fg:x="352" fg:w="1"/><text x="28.6142%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.3642%" y="629" width="0.0806%" height="15" fill="rgb(241,56,8)" fg:x="352" fg:w="1"/><text x="28.6142%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.3642%" y="613" width="0.0806%" height="15" fill="rgb(228,201,0)" fg:x="352" fg:w="1"/><text x="28.6142%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.3642%" y="597" width="0.0806%" height="15" fill="rgb(226,219,34)" fg:x="352" fg:w="1"/><text x="28.6142%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.3642%" y="581" width="0.0806%" height="15" fill="rgb(209,204,54)" fg:x="352" fg:w="1"/><text x="28.6142%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.4448%" y="709" width="0.1612%" height="15" fill="rgb(251,160,17)" fg:x="353" fg:w="2"/><text x="28.6948%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.4448%" y="693" width="0.1612%" height="15" fill="rgb(235,15,25)" fg:x="353" fg:w="2"/><text x="28.6948%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.5254%" y="677" width="0.0806%" height="15" fill="rgb(216,209,28)" fg:x="354" fg:w="1"/><text x="28.7754%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.5254%" y="661" width="0.0806%" height="15" fill="rgb(248,123,21)" fg:x="354" fg:w="1"/><text x="28.7754%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.5254%" y="645" width="0.0806%" height="15" fill="rgb(226,138,44)" fg:x="354" fg:w="1"/><text x="28.7754%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.5254%" y="629" width="0.0806%" height="15" fill="rgb(211,104,54)" fg:x="354" fg:w="1"/><text x="28.7754%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.5254%" y="613" width="0.0806%" height="15" fill="rgb(241,198,15)" fg:x="354" fg:w="1"/><text x="28.7754%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.5254%" y="597" width="0.0806%" height="15" fill="rgb(227,155,54)" fg:x="354" fg:w="1"/><text x="28.7754%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.5254%" y="581" width="0.0806%" height="15" fill="rgb(225,131,31)" fg:x="354" fg:w="1"/><text x="28.7754%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.5254%" y="565" width="0.0806%" height="15" fill="rgb(242,40,17)" fg:x="354" fg:w="1"/><text x="28.7754%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.5254%" y="549" width="0.0806%" height="15" fill="rgb(254,57,35)" fg:x="354" fg:w="1"/><text x="28.7754%" y="559.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="28.5254%" y="533" width="0.0806%" height="15" fill="rgb(240,64,32)" fg:x="354" fg:w="1"/><text x="28.7754%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="28.5254%" y="517" width="0.0806%" height="15" fill="rgb(251,136,26)" fg:x="354" fg:w="1"/><text x="28.7754%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="28.2031%" y="789" width="0.4835%" height="15" fill="rgb(208,60,54)" fg:x="350" fg:w="6"/><text x="28.4531%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="28.2031%" y="773" width="0.4835%" height="15" fill="rgb(220,13,12)" fg:x="350" fg:w="6"/><text x="28.4531%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="28.4448%" y="757" width="0.2417%" height="15" fill="rgb(213,149,1)" fg:x="353" fg:w="3"/><text x="28.6948%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="28.4448%" y="741" width="0.2417%" height="15" fill="rgb(212,191,39)" fg:x="353" fg:w="3"/><text x="28.6948%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="28.4448%" y="725" width="0.2417%" height="15" fill="rgb(215,221,42)" fg:x="353" fg:w="3"/><text x="28.6948%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.6060%" y="709" width="0.0806%" height="15" fill="rgb(244,79,23)" fg:x="355" fg:w="1"/><text x="28.8560%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.6060%" y="693" width="0.0806%" height="15" fill="rgb(247,17,29)" fg:x="355" fg:w="1"/><text x="28.8560%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.6060%" y="677" width="0.0806%" height="15" fill="rgb(251,221,21)" fg:x="355" fg:w="1"/><text x="28.8560%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.6060%" y="661" width="0.0806%" height="15" fill="rgb(207,202,34)" fg:x="355" fg:w="1"/><text x="28.8560%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.6060%" y="645" width="0.0806%" height="15" fill="rgb(217,4,34)" fg:x="355" fg:w="1"/><text x="28.8560%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.6060%" y="629" width="0.0806%" height="15" fill="rgb(253,17,16)" fg:x="355" fg:w="1"/><text x="28.8560%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="28.6060%" y="613" width="0.0806%" height="15" fill="rgb(223,91,48)" fg:x="355" fg:w="1"/><text x="28.8560%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.6865%" y="773" width="0.0806%" height="15" fill="rgb(244,191,22)" fg:x="356" fg:w="1"/><text x="28.9365%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="28.6865%" y="789" width="0.2417%" height="15" fill="rgb(211,107,14)" fg:x="356" fg:w="3"/><text x="28.9365%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.7671%" y="773" width="0.1612%" height="15" fill="rgb(232,81,23)" fg:x="357" fg:w="2"/><text x="29.0171%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.8477%" y="757" width="0.0806%" height="15" fill="rgb(237,126,14)" fg:x="358" fg:w="1"/><text x="29.0977%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="28.9283%" y="789" width="0.1612%" height="15" fill="rgb(230,65,39)" fg:x="359" fg:w="2"/><text x="29.1783%" y="799.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="28.9283%" y="773" width="0.1612%" height="15" fill="rgb(208,106,41)" fg:x="359" fg:w="2"/><text x="29.1783%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.0089%" y="757" width="0.0806%" height="15" fill="rgb(206,125,25)" fg:x="360" fg:w="1"/><text x="29.2589%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.0089%" y="741" width="0.0806%" height="15" fill="rgb(250,24,29)" fg:x="360" fg:w="1"/><text x="29.2589%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="29.0894%" y="741" width="0.0806%" height="15" fill="rgb(226,49,32)" fg:x="361" fg:w="1"/><text x="29.3394%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="29.0894%" y="725" width="0.0806%" height="15" fill="rgb(217,110,16)" fg:x="361" fg:w="1"/><text x="29.3394%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.0894%" y="709" width="0.0806%" height="15" fill="rgb(252,16,53)" fg:x="361" fg:w="1"/><text x="29.3394%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.0894%" y="693" width="0.0806%" height="15" fill="rgb(238,163,11)" fg:x="361" fg:w="1"/><text x="29.3394%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.0894%" y="677" width="0.0806%" height="15" fill="rgb(206,210,1)" fg:x="361" fg:w="1"/><text x="29.3394%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.0894%" y="661" width="0.0806%" height="15" fill="rgb(229,8,25)" fg:x="361" fg:w="1"/><text x="29.3394%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.0894%" y="645" width="0.0806%" height="15" fill="rgb(247,155,23)" fg:x="361" fg:w="1"/><text x="29.3394%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.0894%" y="629" width="0.0806%" height="15" fill="rgb(207,26,7)" fg:x="361" fg:w="1"/><text x="29.3394%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.0894%" y="613" width="0.0806%" height="15" fill="rgb(215,179,12)" fg:x="361" fg:w="1"/><text x="29.3394%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.0894%" y="597" width="0.0806%" height="15" fill="rgb(238,208,11)" fg:x="361" fg:w="1"/><text x="29.3394%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.0894%" y="581" width="0.0806%" height="15" fill="rgb(238,102,42)" fg:x="361" fg:w="1"/><text x="29.3394%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.0894%" y="565" width="0.0806%" height="15" fill="rgb(239,35,9)" fg:x="361" fg:w="1"/><text x="29.3394%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.0894%" y="549" width="0.0806%" height="15" fill="rgb(244,182,30)" fg:x="361" fg:w="1"/><text x="29.3394%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="29.0894%" y="533" width="0.0806%" height="15" fill="rgb(232,181,23)" fg:x="361" fg:w="1"/><text x="29.3394%" y="543.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="29.0894%" y="517" width="0.0806%" height="15" fill="rgb(242,154,29)" fg:x="361" fg:w="1"/><text x="29.3394%" y="527.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="29.0894%" y="501" width="0.0806%" height="15" fill="rgb(219,23,2)" fg:x="361" fg:w="1"/><text x="29.3394%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.1700%" y="725" width="0.0806%" height="15" fill="rgb(234,94,43)" fg:x="362" fg:w="1"/><text x="29.4200%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.2506%" y="693" width="0.0806%" height="15" fill="rgb(223,55,45)" fg:x="363" fg:w="1"/><text x="29.5006%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.2506%" y="677" width="0.0806%" height="15" fill="rgb(241,215,54)" fg:x="363" fg:w="1"/><text x="29.5006%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.2506%" y="661" width="0.0806%" height="15" fill="rgb(247,63,53)" fg:x="363" fg:w="1"/><text x="29.5006%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.2506%" y="645" width="0.0806%" height="15" fill="rgb(220,166,7)" fg:x="363" fg:w="1"/><text x="29.5006%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="29.3312%" y="693" width="0.0806%" height="15" fill="rgb(248,53,45)" fg:x="364" fg:w="1"/><text x="29.5812%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.4118%" y="693" width="0.0806%" height="15" fill="rgb(224,207,20)" fg:x="365" fg:w="1"/><text x="29.6618%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.4118%" y="677" width="0.0806%" height="15" fill="rgb(244,185,11)" fg:x="365" fg:w="1"/><text x="29.6618%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.4118%" y="661" width="0.0806%" height="15" fill="rgb(230,13,42)" fg:x="365" fg:w="1"/><text x="29.6618%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.4118%" y="645" width="0.0806%" height="15" fill="rgb(243,191,18)" fg:x="365" fg:w="1"/><text x="29.6618%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.4118%" y="629" width="0.0806%" height="15" fill="rgb(249,135,15)" fg:x="365" fg:w="1"/><text x="29.6618%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.4118%" y="613" width="0.0806%" height="15" fill="rgb(229,26,35)" fg:x="365" fg:w="1"/><text x="29.6618%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.4118%" y="597" width="0.0806%" height="15" fill="rgb(216,191,16)" fg:x="365" fg:w="1"/><text x="29.6618%" y="607.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (195 samples, 15.71%)</title><rect x="13.8598%" y="837" width="15.7131%" height="15" fill="rgb(242,18,7)" fg:x="172" fg:w="195"/><text x="14.1098%" y="847.50">plugins_core::build::Bui..</text></g><g><title>plugins_core::build::Build::occupying (28 samples, 2.26%)</title><rect x="27.3167%" y="821" width="2.2562%" height="15" fill="rgb(205,128,17)" fg:x="339" fg:w="28"/><text x="27.5667%" y="831.50">p..</text></g><g><title>plugins_core::tools::set_occupying (18 samples, 1.45%)</title><rect x="28.1225%" y="805" width="1.4504%" height="15" fill="rgb(229,199,44)" fg:x="349" fg:w="18"/><text x="28.3725%" y="815.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (6 samples, 0.48%)</title><rect x="29.0894%" y="789" width="0.4835%" height="15" fill="rgb(234,222,3)" fg:x="361" fg:w="6"/><text x="29.3394%" y="799.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="29.0894%" y="773" width="0.4835%" height="15" fill="rgb(220,170,20)" fg:x="361" fg:w="6"/><text x="29.3394%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="29.0894%" y="757" width="0.4835%" height="15" fill="rgb(207,138,8)" fg:x="361" fg:w="6"/><text x="29.3394%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="29.1700%" y="741" width="0.4029%" height="15" fill="rgb(244,130,36)" fg:x="362" fg:w="5"/><text x="29.4200%" y="751.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="29.2506%" y="725" width="0.3223%" height="15" fill="rgb(207,197,52)" fg:x="363" fg:w="4"/><text x="29.5006%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="29.2506%" y="709" width="0.3223%" height="15" fill="rgb(206,9,21)" fg:x="363" fg:w="4"/><text x="29.5006%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.4923%" y="693" width="0.0806%" height="15" fill="rgb(250,15,47)" fg:x="366" fg:w="1"/><text x="29.7423%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.4923%" y="677" width="0.0806%" height="15" fill="rgb(235,202,14)" fg:x="366" fg:w="1"/><text x="29.7423%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.4923%" y="661" width="0.0806%" height="15" fill="rgb(211,180,47)" fg:x="366" fg:w="1"/><text x="29.7423%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.4923%" y="645" width="0.0806%" height="15" fill="rgb(209,61,11)" fg:x="366" fg:w="1"/><text x="29.7423%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.4923%" y="629" width="0.0806%" height="15" fill="rgb(243,197,29)" fg:x="366" fg:w="1"/><text x="29.7423%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.4923%" y="613" width="0.0806%" height="15" fill="rgb(216,185,16)" fg:x="366" fg:w="1"/><text x="29.7423%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.4923%" y="597" width="0.0806%" height="15" fill="rgb(248,5,15)" fg:x="366" fg:w="1"/><text x="29.7423%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.4923%" y="581" width="0.0806%" height="15" fill="rgb(240,39,41)" fg:x="366" fg:w="1"/><text x="29.7423%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.4923%" y="565" width="0.0806%" height="15" fill="rgb(224,220,43)" fg:x="366" fg:w="1"/><text x="29.7423%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.4923%" y="549" width="0.0806%" height="15" fill="rgb(215,21,24)" fg:x="366" fg:w="1"/><text x="29.7423%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="29.4923%" y="533" width="0.0806%" height="15" fill="rgb(220,102,8)" fg:x="366" fg:w="1"/><text x="29.7423%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="29.5729%" y="805" width="0.0806%" height="15" fill="rgb(225,185,10)" fg:x="367" fg:w="1"/><text x="29.8229%" y="815.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="29.5729%" y="789" width="0.0806%" height="15" fill="rgb(212,108,24)" fg:x="367" fg:w="1"/><text x="29.8229%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.5729%" y="773" width="0.0806%" height="15" fill="rgb(237,27,0)" fg:x="367" fg:w="1"/><text x="29.8229%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="29.5729%" y="757" width="0.0806%" height="15" fill="rgb(212,106,38)" fg:x="367" fg:w="1"/><text x="29.8229%" y="767.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="29.5729%" y="741" width="0.0806%" height="15" fill="rgb(210,125,30)" fg:x="367" fg:w="1"/><text x="29.8229%" y="751.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="29.5729%" y="837" width="0.1612%" height="15" fill="rgb(215,219,1)" fg:x="367" fg:w="2"/><text x="29.8229%" y="847.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="29.5729%" y="821" width="0.1612%" height="15" fill="rgb(223,10,12)" fg:x="367" fg:w="2"/><text x="29.8229%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="29.6535%" y="805" width="0.0806%" height="15" fill="rgb(245,40,34)" fg:x="368" fg:w="1"/><text x="29.9035%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="29.6535%" y="789" width="0.0806%" height="15" fill="rgb(211,185,19)" fg:x="368" fg:w="1"/><text x="29.9035%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="29.6535%" y="773" width="0.0806%" height="15" fill="rgb(243,190,43)" fg:x="368" fg:w="1"/><text x="29.9035%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.6535%" y="757" width="0.0806%" height="15" fill="rgb(232,208,29)" fg:x="368" fg:w="1"/><text x="29.9035%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6535%" y="741" width="0.0806%" height="15" fill="rgb(234,134,27)" fg:x="368" fg:w="1"/><text x="29.9035%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6535%" y="725" width="0.0806%" height="15" fill="rgb(225,41,29)" fg:x="368" fg:w="1"/><text x="29.9035%" y="735.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="29.6535%" y="709" width="0.0806%" height="15" fill="rgb(241,214,44)" fg:x="368" fg:w="1"/><text x="29.9035%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="29.6535%" y="693" width="0.0806%" height="15" fill="rgb(205,219,41)" fg:x="368" fg:w="1"/><text x="29.9035%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="29.7341%" y="789" width="0.2417%" height="15" fill="rgb(226,15,26)" fg:x="369" fg:w="3"/><text x="29.9841%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="29.7341%" y="773" width="0.2417%" height="15" fill="rgb(210,83,41)" fg:x="369" fg:w="3"/><text x="29.9841%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="29.7341%" y="757" width="0.2417%" height="15" fill="rgb(247,9,39)" fg:x="369" fg:w="3"/><text x="29.9841%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="29.7341%" y="741" width="0.2417%" height="15" fill="rgb(209,37,30)" fg:x="369" fg:w="3"/><text x="29.9841%" y="751.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="29.7341%" y="725" width="0.2417%" height="15" fill="rgb(248,170,46)" fg:x="369" fg:w="3"/><text x="29.9841%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="29.7341%" y="709" width="0.2417%" height="15" fill="rgb(237,129,44)" fg:x="369" fg:w="3"/><text x="29.9841%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="29.7341%" y="693" width="0.2417%" height="15" fill="rgb(225,117,51)" fg:x="369" fg:w="3"/><text x="29.9841%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="29.7341%" y="677" width="0.2417%" height="15" fill="rgb(212,165,2)" fg:x="369" fg:w="3"/><text x="29.9841%" y="687.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="29.7341%" y="661" width="0.2417%" height="15" fill="rgb(213,53,45)" fg:x="369" fg:w="3"/><text x="29.9841%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="29.7341%" y="645" width="0.2417%" height="15" fill="rgb(220,148,3)" fg:x="369" fg:w="3"/><text x="29.9841%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="29.7341%" y="629" width="0.2417%" height="15" fill="rgb(228,37,29)" fg:x="369" fg:w="3"/><text x="29.9841%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="29.7341%" y="613" width="0.2417%" height="15" fill="rgb(209,76,29)" fg:x="369" fg:w="3"/><text x="29.9841%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="29.8147%" y="597" width="0.1612%" height="15" fill="rgb(215,90,5)" fg:x="370" fg:w="2"/><text x="30.0647%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="29.8147%" y="581" width="0.1612%" height="15" fill="rgb(227,207,32)" fg:x="370" fg:w="2"/><text x="30.0647%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="29.8147%" y="565" width="0.1612%" height="15" fill="rgb(251,218,44)" fg:x="370" fg:w="2"/><text x="30.0647%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="29.8952%" y="549" width="0.0806%" height="15" fill="rgb(211,44,16)" fg:x="371" fg:w="1"/><text x="30.1452%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.8952%" y="533" width="0.0806%" height="15" fill="rgb(242,170,37)" fg:x="371" fg:w="1"/><text x="30.1452%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="29.8952%" y="517" width="0.0806%" height="15" fill="rgb(205,181,22)" fg:x="371" fg:w="1"/><text x="30.1452%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.8952%" y="501" width="0.0806%" height="15" fill="rgb(228,130,19)" fg:x="371" fg:w="1"/><text x="30.1452%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.8952%" y="485" width="0.0806%" height="15" fill="rgb(228,9,15)" fg:x="371" fg:w="1"/><text x="30.1452%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="29.8952%" y="469" width="0.0806%" height="15" fill="rgb(219,66,48)" fg:x="371" fg:w="1"/><text x="30.1452%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="29.8952%" y="453" width="0.0806%" height="15" fill="rgb(234,203,10)" fg:x="371" fg:w="1"/><text x="30.1452%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="29.8952%" y="437" width="0.0806%" height="15" fill="rgb(219,209,1)" fg:x="371" fg:w="1"/><text x="30.1452%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="29.8952%" y="421" width="0.0806%" height="15" fill="rgb(206,167,9)" fg:x="371" fg:w="1"/><text x="30.1452%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="29.8952%" y="405" width="0.0806%" height="15" fill="rgb(210,11,39)" fg:x="371" fg:w="1"/><text x="30.1452%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="29.8952%" y="389" width="0.0806%" height="15" fill="rgb(251,90,47)" fg:x="371" fg:w="1"/><text x="30.1452%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.8952%" y="373" width="0.0806%" height="15" fill="rgb(237,7,4)" fg:x="371" fg:w="1"/><text x="30.1452%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="29.8952%" y="357" width="0.0806%" height="15" fill="rgb(232,205,47)" fg:x="371" fg:w="1"/><text x="30.1452%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.8952%" y="341" width="0.0806%" height="15" fill="rgb(215,86,48)" fg:x="371" fg:w="1"/><text x="30.1452%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="29.8952%" y="325" width="0.0806%" height="15" fill="rgb(232,14,47)" fg:x="371" fg:w="1"/><text x="30.1452%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="29.8952%" y="309" width="0.0806%" height="15" fill="rgb(240,28,46)" fg:x="371" fg:w="1"/><text x="30.1452%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="29.8952%" y="293" width="0.0806%" height="15" fill="rgb(224,85,5)" fg:x="371" fg:w="1"/><text x="30.1452%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="29.8952%" y="277" width="0.0806%" height="15" fill="rgb(219,34,25)" fg:x="371" fg:w="1"/><text x="30.1452%" y="287.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="29.9758%" y="789" width="0.0806%" height="15" fill="rgb(247,137,45)" fg:x="372" fg:w="1"/><text x="30.2258%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="29.9758%" y="773" width="0.0806%" height="15" fill="rgb(237,121,47)" fg:x="372" fg:w="1"/><text x="30.2258%" y="783.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="29.9758%" y="757" width="0.0806%" height="15" fill="rgb(247,148,27)" fg:x="372" fg:w="1"/><text x="30.2258%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.9758%" y="741" width="0.0806%" height="15" fill="rgb(220,44,0)" fg:x="372" fg:w="1"/><text x="30.2258%" y="751.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="29.9758%" y="725" width="0.0806%" height="15" fill="rgb(236,61,29)" fg:x="372" fg:w="1"/><text x="30.2258%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="29.9758%" y="709" width="0.0806%" height="15" fill="rgb(244,180,35)" fg:x="372" fg:w="1"/><text x="30.2258%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.0564%" y="773" width="0.0806%" height="15" fill="rgb(242,14,54)" fg:x="373" fg:w="1"/><text x="30.3064%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.0564%" y="757" width="0.0806%" height="15" fill="rgb(206,24,45)" fg:x="373" fg:w="1"/><text x="30.3064%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.0564%" y="741" width="0.0806%" height="15" fill="rgb(215,211,6)" fg:x="373" fg:w="1"/><text x="30.3064%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.0564%" y="725" width="0.0806%" height="15" fill="rgb(207,56,2)" fg:x="373" fg:w="1"/><text x="30.3064%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.0564%" y="709" width="0.0806%" height="15" fill="rgb(220,135,9)" fg:x="373" fg:w="1"/><text x="30.3064%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.0564%" y="693" width="0.0806%" height="15" fill="rgb(214,145,52)" fg:x="373" fg:w="1"/><text x="30.3064%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="30.0564%" y="677" width="0.0806%" height="15" fill="rgb(241,83,53)" fg:x="373" fg:w="1"/><text x="30.3064%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="30.0564%" y="661" width="0.0806%" height="15" fill="rgb(222,66,13)" fg:x="373" fg:w="1"/><text x="30.3064%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1370%" y="709" width="0.0806%" height="15" fill="rgb(239,164,54)" fg:x="374" fg:w="1"/><text x="30.3870%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1370%" y="693" width="0.0806%" height="15" fill="rgb(216,189,13)" fg:x="374" fg:w="1"/><text x="30.3870%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1370%" y="677" width="0.0806%" height="15" fill="rgb(228,212,51)" fg:x="374" fg:w="1"/><text x="30.3870%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1370%" y="661" width="0.0806%" height="15" fill="rgb(207,190,21)" fg:x="374" fg:w="1"/><text x="30.3870%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1370%" y="645" width="0.0806%" height="15" fill="rgb(245,28,35)" fg:x="374" fg:w="1"/><text x="30.3870%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.1370%" y="629" width="0.0806%" height="15" fill="rgb(239,23,40)" fg:x="374" fg:w="1"/><text x="30.3870%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.1370%" y="613" width="0.0806%" height="15" fill="rgb(242,10,51)" fg:x="374" fg:w="1"/><text x="30.3870%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.1370%" y="597" width="0.0806%" height="15" fill="rgb(207,186,5)" fg:x="374" fg:w="1"/><text x="30.3870%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.1370%" y="581" width="0.0806%" height="15" fill="rgb(242,21,16)" fg:x="374" fg:w="1"/><text x="30.3870%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.1370%" y="565" width="0.0806%" height="15" fill="rgb(237,0,53)" fg:x="374" fg:w="1"/><text x="30.3870%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.1370%" y="549" width="0.0806%" height="15" fill="rgb(215,8,52)" fg:x="374" fg:w="1"/><text x="30.3870%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.1370%" y="533" width="0.0806%" height="15" fill="rgb(248,62,44)" fg:x="374" fg:w="1"/><text x="30.3870%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.1370%" y="517" width="0.0806%" height="15" fill="rgb(224,83,15)" fg:x="374" fg:w="1"/><text x="30.3870%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.1370%" y="501" width="0.0806%" height="15" fill="rgb(249,100,46)" fg:x="374" fg:w="1"/><text x="30.3870%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.1370%" y="485" width="0.0806%" height="15" fill="rgb(213,35,48)" fg:x="374" fg:w="1"/><text x="30.3870%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.1370%" y="469" width="0.0806%" height="15" fill="rgb(251,2,13)" fg:x="374" fg:w="1"/><text x="30.3870%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.1370%" y="453" width="0.0806%" height="15" fill="rgb(212,132,21)" fg:x="374" fg:w="1"/><text x="30.3870%" y="463.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="30.1370%" y="741" width="0.1612%" height="15" fill="rgb(247,17,21)" fg:x="374" fg:w="2"/><text x="30.3870%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.1370%" y="725" width="0.1612%" height="15" fill="rgb(220,177,38)" fg:x="374" fg:w="2"/><text x="30.3870%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.2176%" y="709" width="0.0806%" height="15" fill="rgb(233,219,21)" fg:x="375" fg:w="1"/><text x="30.4676%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.2176%" y="693" width="0.0806%" height="15" fill="rgb(246,17,7)" fg:x="375" fg:w="1"/><text x="30.4676%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.2176%" y="677" width="0.0806%" height="15" fill="rgb(212,4,22)" fg:x="375" fg:w="1"/><text x="30.4676%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.2176%" y="661" width="0.0806%" height="15" fill="rgb(243,85,21)" fg:x="375" fg:w="1"/><text x="30.4676%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.2176%" y="645" width="0.0806%" height="15" fill="rgb(232,218,2)" fg:x="375" fg:w="1"/><text x="30.4676%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.2176%" y="629" width="0.0806%" height="15" fill="rgb(253,168,47)" fg:x="375" fg:w="1"/><text x="30.4676%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.2176%" y="613" width="0.0806%" height="15" fill="rgb(238,101,25)" fg:x="375" fg:w="1"/><text x="30.4676%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.2176%" y="597" width="0.0806%" height="15" fill="rgb(251,86,12)" fg:x="375" fg:w="1"/><text x="30.4676%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.2176%" y="581" width="0.0806%" height="15" fill="rgb(241,112,44)" fg:x="375" fg:w="1"/><text x="30.4676%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.2176%" y="565" width="0.0806%" height="15" fill="rgb(224,28,25)" fg:x="375" fg:w="1"/><text x="30.4676%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.2176%" y="549" width="0.0806%" height="15" fill="rgb(209,201,1)" fg:x="375" fg:w="1"/><text x="30.4676%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.2981%" y="709" width="0.0806%" height="15" fill="rgb(231,30,22)" fg:x="376" fg:w="1"/><text x="30.5481%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.2981%" y="693" width="0.0806%" height="15" fill="rgb(247,96,31)" fg:x="376" fg:w="1"/><text x="30.5481%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="30.1370%" y="773" width="0.3223%" height="15" fill="rgb(251,100,12)" fg:x="374" fg:w="4"/><text x="30.3870%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="30.1370%" y="757" width="0.3223%" height="15" fill="rgb(224,174,7)" fg:x="374" fg:w="4"/><text x="30.3870%" y="767.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="30.2981%" y="741" width="0.1612%" height="15" fill="rgb(231,168,19)" fg:x="376" fg:w="2"/><text x="30.5481%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="30.2981%" y="725" width="0.1612%" height="15" fill="rgb(226,85,5)" fg:x="376" fg:w="2"/><text x="30.5481%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.3787%" y="709" width="0.0806%" height="15" fill="rgb(210,215,5)" fg:x="377" fg:w="1"/><text x="30.6287%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.81%)</title><rect x="29.7341%" y="805" width="0.8058%" height="15" fill="rgb(233,70,8)" fg:x="369" fg:w="10"/><text x="29.9841%" y="815.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="30.0564%" y="789" width="0.4835%" height="15" fill="rgb(229,109,53)" fg:x="373" fg:w="6"/><text x="30.3064%" y="799.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="30.4593%" y="773" width="0.0806%" height="15" fill="rgb(213,125,35)" fg:x="378" fg:w="1"/><text x="30.7093%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4593%" y="757" width="0.0806%" height="15" fill="rgb(215,12,48)" fg:x="378" fg:w="1"/><text x="30.7093%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4593%" y="741" width="0.0806%" height="15" fill="rgb(207,12,38)" fg:x="378" fg:w="1"/><text x="30.7093%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.4593%" y="725" width="0.0806%" height="15" fill="rgb(216,229,2)" fg:x="378" fg:w="1"/><text x="30.7093%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.4593%" y="709" width="0.0806%" height="15" fill="rgb(229,209,31)" fg:x="378" fg:w="1"/><text x="30.7093%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.4593%" y="693" width="0.0806%" height="15" fill="rgb(239,57,22)" fg:x="378" fg:w="1"/><text x="30.7093%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="30.4593%" y="677" width="0.0806%" height="15" fill="rgb(239,119,54)" fg:x="378" fg:w="1"/><text x="30.7093%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="30.4593%" y="661" width="0.0806%" height="15" fill="rgb(231,80,45)" fg:x="378" fg:w="1"/><text x="30.7093%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="30.5399%" y="789" width="0.0806%" height="15" fill="rgb(219,138,19)" fg:x="379" fg:w="1"/><text x="30.7899%" y="799.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="30.5399%" y="773" width="0.0806%" height="15" fill="rgb(216,53,26)" fg:x="379" fg:w="1"/><text x="30.7899%" y="783.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="30.5399%" y="757" width="0.0806%" height="15" fill="rgb(224,30,16)" fg:x="379" fg:w="1"/><text x="30.7899%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.5399%" y="741" width="0.0806%" height="15" fill="rgb(224,151,24)" fg:x="379" fg:w="1"/><text x="30.7899%" y="751.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="30.5399%" y="805" width="0.1612%" height="15" fill="rgb(236,75,7)" fg:x="379" fg:w="2"/><text x="30.7899%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="30.6205%" y="789" width="0.0806%" height="15" fill="rgb(248,106,42)" fg:x="380" fg:w="1"/><text x="30.8705%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.6205%" y="773" width="0.0806%" height="15" fill="rgb(222,217,11)" fg:x="380" fg:w="1"/><text x="30.8705%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.6205%" y="757" width="0.0806%" height="15" fill="rgb(234,143,31)" fg:x="380" fg:w="1"/><text x="30.8705%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.6205%" y="741" width="0.0806%" height="15" fill="rgb(237,148,28)" fg:x="380" fg:w="1"/><text x="30.8705%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.6205%" y="725" width="0.0806%" height="15" fill="rgb(241,151,6)" fg:x="380" fg:w="1"/><text x="30.8705%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.6205%" y="709" width="0.0806%" height="15" fill="rgb(226,55,18)" fg:x="380" fg:w="1"/><text x="30.8705%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="30.6205%" y="693" width="0.0806%" height="15" fill="rgb(226,196,6)" fg:x="380" fg:w="1"/><text x="30.8705%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="30.6205%" y="677" width="0.0806%" height="15" fill="rgb(251,228,11)" fg:x="380" fg:w="1"/><text x="30.8705%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="30.7010%" y="773" width="0.0806%" height="15" fill="rgb(219,197,15)" fg:x="381" fg:w="1"/><text x="30.9510%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.7010%" y="757" width="0.0806%" height="15" fill="rgb(243,105,44)" fg:x="381" fg:w="1"/><text x="30.9510%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.7010%" y="741" width="0.0806%" height="15" fill="rgb(205,183,40)" fg:x="381" fg:w="1"/><text x="30.9510%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.7010%" y="725" width="0.0806%" height="15" fill="rgb(232,138,46)" fg:x="381" fg:w="1"/><text x="30.9510%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.7010%" y="709" width="0.0806%" height="15" fill="rgb(234,161,14)" fg:x="381" fg:w="1"/><text x="30.9510%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.7010%" y="693" width="0.0806%" height="15" fill="rgb(238,211,18)" fg:x="381" fg:w="1"/><text x="30.9510%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.7010%" y="677" width="0.0806%" height="15" fill="rgb(217,130,2)" fg:x="381" fg:w="1"/><text x="30.9510%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.7010%" y="661" width="0.0806%" height="15" fill="rgb(251,17,29)" fg:x="381" fg:w="1"/><text x="30.9510%" y="671.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (14 samples, 1.13%)</title><rect x="29.7341%" y="837" width="1.1281%" height="15" fill="rgb(243,18,0)" fg:x="369" fg:w="14"/><text x="29.9841%" y="847.50"></text></g><g><title>plugins_core::build::QuickThing::make (14 samples, 1.13%)</title><rect x="29.7341%" y="821" width="1.1281%" height="15" fill="rgb(227,220,45)" fg:x="369" fg:w="14"/><text x="29.9841%" y="831.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="30.7010%" y="805" width="0.1612%" height="15" fill="rgb(212,34,2)" fg:x="381" fg:w="2"/><text x="30.9510%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="30.7010%" y="789" width="0.1612%" height="15" fill="rgb(236,23,8)" fg:x="381" fg:w="2"/><text x="30.9510%" y="799.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="30.7816%" y="773" width="0.0806%" height="15" fill="rgb(210,113,39)" fg:x="382" fg:w="1"/><text x="31.0316%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="30.7816%" y="757" width="0.0806%" height="15" fill="rgb(243,123,48)" fg:x="382" fg:w="1"/><text x="31.0316%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="30.7816%" y="741" width="0.0806%" height="15" fill="rgb(223,175,36)" fg:x="382" fg:w="1"/><text x="31.0316%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.7816%" y="725" width="0.0806%" height="15" fill="rgb(226,100,30)" fg:x="382" fg:w="1"/><text x="31.0316%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="30.7816%" y="709" width="0.0806%" height="15" fill="rgb(221,225,39)" fg:x="382" fg:w="1"/><text x="31.0316%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.7816%" y="693" width="0.0806%" height="15" fill="rgb(224,222,42)" fg:x="382" fg:w="1"/><text x="31.0316%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="30.7816%" y="677" width="0.0806%" height="15" fill="rgb(221,53,1)" fg:x="382" fg:w="1"/><text x="31.0316%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="30.7816%" y="661" width="0.0806%" height="15" fill="rgb(216,187,48)" fg:x="382" fg:w="1"/><text x="31.0316%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7816%" y="645" width="0.0806%" height="15" fill="rgb(220,108,2)" fg:x="382" fg:w="1"/><text x="31.0316%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="30.8622%" y="805" width="0.1612%" height="15" fill="rgb(216,13,42)" fg:x="383" fg:w="2"/><text x="31.1122%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="30.8622%" y="789" width="0.1612%" height="15" fill="rgb(205,14,29)" fg:x="383" fg:w="2"/><text x="31.1122%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="30.8622%" y="773" width="0.1612%" height="15" fill="rgb(217,168,30)" fg:x="383" fg:w="2"/><text x="31.1122%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="30.8622%" y="757" width="0.1612%" height="15" fill="rgb(246,173,54)" fg:x="383" fg:w="2"/><text x="31.1122%" y="767.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="30.8622%" y="741" width="0.1612%" height="15" fill="rgb(227,177,11)" fg:x="383" fg:w="2"/><text x="31.1122%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="30.8622%" y="725" width="0.1612%" height="15" fill="rgb(223,215,51)" fg:x="383" fg:w="2"/><text x="31.1122%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="30.8622%" y="709" width="0.1612%" height="15" fill="rgb(253,4,17)" fg:x="383" fg:w="2"/><text x="31.1122%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="30.8622%" y="693" width="0.1612%" height="15" fill="rgb(206,150,43)" fg:x="383" fg:w="2"/><text x="31.1122%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="30.8622%" y="677" width="0.1612%" height="15" fill="rgb(241,100,52)" fg:x="383" fg:w="2"/><text x="31.1122%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="30.8622%" y="661" width="0.1612%" height="15" fill="rgb(234,120,21)" fg:x="383" fg:w="2"/><text x="31.1122%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="30.8622%" y="645" width="0.1612%" height="15" fill="rgb(231,60,11)" fg:x="383" fg:w="2"/><text x="31.1122%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.9428%" y="629" width="0.0806%" height="15" fill="rgb(247,77,50)" fg:x="384" fg:w="1"/><text x="31.1928%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.9428%" y="613" width="0.0806%" height="15" fill="rgb(251,199,54)" fg:x="384" fg:w="1"/><text x="31.1928%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.9428%" y="597" width="0.0806%" height="15" fill="rgb(212,120,38)" fg:x="384" fg:w="1"/><text x="31.1928%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="31.0234%" y="805" width="0.0806%" height="15" fill="rgb(250,161,37)" fg:x="385" fg:w="1"/><text x="31.2734%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="31.0234%" y="789" width="0.0806%" height="15" fill="rgb(232,158,45)" fg:x="385" fg:w="1"/><text x="31.2734%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.0234%" y="773" width="0.0806%" height="15" fill="rgb(233,114,2)" fg:x="385" fg:w="1"/><text x="31.2734%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0234%" y="757" width="0.0806%" height="15" fill="rgb(248,139,0)" fg:x="385" fg:w="1"/><text x="31.2734%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0234%" y="741" width="0.0806%" height="15" fill="rgb(222,164,18)" fg:x="385" fg:w="1"/><text x="31.2734%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.0234%" y="725" width="0.0806%" height="15" fill="rgb(221,140,42)" fg:x="385" fg:w="1"/><text x="31.2734%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="31.1039%" y="757" width="0.1612%" height="15" fill="rgb(209,186,11)" fg:x="386" fg:w="2"/><text x="31.3539%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="31.1039%" y="741" width="0.1612%" height="15" fill="rgb(254,212,38)" fg:x="386" fg:w="2"/><text x="31.3539%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.1039%" y="725" width="0.1612%" height="15" fill="rgb(219,156,31)" fg:x="386" fg:w="2"/><text x="31.3539%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.1039%" y="709" width="0.1612%" height="15" fill="rgb(222,148,42)" fg:x="386" fg:w="2"/><text x="31.3539%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.1845%" y="693" width="0.0806%" height="15" fill="rgb(225,65,5)" fg:x="387" fg:w="1"/><text x="31.4345%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.1845%" y="677" width="0.0806%" height="15" fill="rgb(235,28,12)" fg:x="387" fg:w="1"/><text x="31.4345%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.1845%" y="661" width="0.0806%" height="15" fill="rgb(245,58,4)" fg:x="387" fg:w="1"/><text x="31.4345%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.1845%" y="645" width="0.0806%" height="15" fill="rgb(235,118,5)" fg:x="387" fg:w="1"/><text x="31.4345%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.1845%" y="629" width="0.0806%" height="15" fill="rgb(253,196,3)" fg:x="387" fg:w="1"/><text x="31.4345%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.1845%" y="613" width="0.0806%" height="15" fill="rgb(238,90,28)" fg:x="387" fg:w="1"/><text x="31.4345%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.1845%" y="597" width="0.0806%" height="15" fill="rgb(254,227,4)" fg:x="387" fg:w="1"/><text x="31.4345%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.1845%" y="581" width="0.0806%" height="15" fill="rgb(237,114,35)" fg:x="387" fg:w="1"/><text x="31.4345%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.1845%" y="565" width="0.0806%" height="15" fill="rgb(221,147,29)" fg:x="387" fg:w="1"/><text x="31.4345%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.1845%" y="549" width="0.0806%" height="15" fill="rgb(216,201,17)" fg:x="387" fg:w="1"/><text x="31.4345%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="31.1039%" y="789" width="0.2417%" height="15" fill="rgb(251,46,50)" fg:x="386" fg:w="3"/><text x="31.3539%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="31.1039%" y="773" width="0.2417%" height="15" fill="rgb(216,143,48)" fg:x="386" fg:w="3"/><text x="31.3539%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="31.2651%" y="757" width="0.0806%" height="15" fill="rgb(224,62,51)" fg:x="388" fg:w="1"/><text x="31.5151%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.2651%" y="741" width="0.0806%" height="15" fill="rgb(232,152,20)" fg:x="388" fg:w="1"/><text x="31.5151%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="31.2651%" y="725" width="0.0806%" height="15" fill="rgb(233,194,7)" fg:x="388" fg:w="1"/><text x="31.5151%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.2651%" y="709" width="0.0806%" height="15" fill="rgb(207,33,22)" fg:x="388" fg:w="1"/><text x="31.5151%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="31.2651%" y="693" width="0.0806%" height="15" fill="rgb(226,54,34)" fg:x="388" fg:w="1"/><text x="31.5151%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.2651%" y="677" width="0.0806%" height="15" fill="rgb(227,161,47)" fg:x="388" fg:w="1"/><text x="31.5151%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="31.2651%" y="661" width="0.0806%" height="15" fill="rgb(218,58,37)" fg:x="388" fg:w="1"/><text x="31.5151%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.2651%" y="645" width="0.0806%" height="15" fill="rgb(208,173,18)" fg:x="388" fg:w="1"/><text x="31.5151%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="30.8622%" y="821" width="0.5641%" height="15" fill="rgb(230,159,11)" fg:x="383" fg:w="7"/><text x="31.1122%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="31.1039%" y="805" width="0.3223%" height="15" fill="rgb(238,90,51)" fg:x="386" fg:w="4"/><text x="31.3539%" y="815.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="31.3457%" y="789" width="0.0806%" height="15" fill="rgb(225,97,36)" fg:x="389" fg:w="1"/><text x="31.5957%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.3457%" y="773" width="0.0806%" height="15" fill="rgb(211,205,42)" fg:x="389" fg:w="1"/><text x="31.5957%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.3457%" y="757" width="0.0806%" height="15" fill="rgb(219,152,7)" fg:x="389" fg:w="1"/><text x="31.5957%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="31.3457%" y="741" width="0.0806%" height="15" fill="rgb(222,79,10)" fg:x="389" fg:w="1"/><text x="31.5957%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.5874%" y="773" width="0.0806%" height="15" fill="rgb(242,13,11)" fg:x="392" fg:w="1"/><text x="31.8374%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.6680%" y="757" width="0.0806%" height="15" fill="rgb(231,143,41)" fg:x="393" fg:w="1"/><text x="31.9180%" y="767.50"></text></g><g><title>kernel::model::props::Props::set_property (5 samples, 0.40%)</title><rect x="31.4263%" y="789" width="0.4029%" height="15" fill="rgb(222,147,19)" fg:x="390" fg:w="5"/><text x="31.6763%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.6680%" y="773" width="0.1612%" height="15" fill="rgb(235,5,39)" fg:x="393" fg:w="2"/><text x="31.9180%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.7486%" y="757" width="0.0806%" height="15" fill="rgb(246,155,51)" fg:x="394" fg:w="1"/><text x="31.9986%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="31.7486%" y="741" width="0.0806%" height="15" fill="rgb(218,157,4)" fg:x="394" fg:w="1"/><text x="31.9986%" y="751.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="31.7486%" y="725" width="0.0806%" height="15" fill="rgb(226,184,4)" fg:x="394" fg:w="1"/><text x="31.9986%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="31.7486%" y="709" width="0.0806%" height="15" fill="rgb(210,103,26)" fg:x="394" fg:w="1"/><text x="31.9986%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.8292%" y="757" width="0.0806%" height="15" fill="rgb(228,23,31)" fg:x="395" fg:w="1"/><text x="32.0792%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.8292%" y="741" width="0.0806%" height="15" fill="rgb(205,176,34)" fg:x="395" fg:w="1"/><text x="32.0792%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9098%" y="677" width="0.0806%" height="15" fill="rgb(246,213,37)" fg:x="396" fg:w="1"/><text x="32.1598%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9098%" y="661" width="0.0806%" height="15" fill="rgb(213,52,45)" fg:x="396" fg:w="1"/><text x="32.1598%" y="671.50"></text></g><g><title>plugins_core::build::Build::named (8 samples, 0.64%)</title><rect x="31.4263%" y="821" width="0.6446%" height="15" fill="rgb(249,9,52)" fg:x="390" fg:w="8"/><text x="31.6763%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (8 samples, 0.64%)</title><rect x="31.4263%" y="805" width="0.6446%" height="15" fill="rgb(205,97,16)" fg:x="390" fg:w="8"/><text x="31.6763%" y="815.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="31.8292%" y="789" width="0.2417%" height="15" fill="rgb(214,11,46)" fg:x="395" fg:w="3"/><text x="32.0792%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="31.8292%" y="773" width="0.2417%" height="15" fill="rgb(221,66,18)" fg:x="395" fg:w="3"/><text x="32.0792%" y="783.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="31.9098%" y="757" width="0.1612%" height="15" fill="rgb(213,49,1)" fg:x="396" fg:w="2"/><text x="32.1598%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.9098%" y="741" width="0.1612%" height="15" fill="rgb(232,75,51)" fg:x="396" fg:w="2"/><text x="32.1598%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="31.9098%" y="725" width="0.1612%" height="15" fill="rgb(208,218,40)" fg:x="396" fg:w="2"/><text x="32.1598%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.9098%" y="709" width="0.1612%" height="15" fill="rgb(206,144,50)" fg:x="396" fg:w="2"/><text x="32.1598%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="31.9098%" y="693" width="0.1612%" height="15" fill="rgb(216,9,51)" fg:x="396" fg:w="2"/><text x="32.1598%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="31.9903%" y="677" width="0.0806%" height="15" fill="rgb(226,6,53)" fg:x="397" fg:w="1"/><text x="32.2403%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.9903%" y="661" width="0.0806%" height="15" fill="rgb(216,9,50)" fg:x="397" fg:w="1"/><text x="32.2403%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="32.0709%" y="805" width="0.0806%" height="15" fill="rgb(214,101,31)" fg:x="398" fg:w="1"/><text x="32.3209%" y="815.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="32.0709%" y="789" width="0.0806%" height="15" fill="rgb(247,85,17)" fg:x="398" fg:w="1"/><text x="32.3209%" y="799.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="32.0709%" y="773" width="0.0806%" height="15" fill="rgb(248,138,25)" fg:x="398" fg:w="1"/><text x="32.3209%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="32.0709%" y="757" width="0.0806%" height="15" fill="rgb(225,146,20)" fg:x="398" fg:w="1"/><text x="32.3209%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="32.1515%" y="789" width="0.0806%" height="15" fill="rgb(224,184,17)" fg:x="399" fg:w="1"/><text x="32.4015%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.2321%" y="661" width="0.0806%" height="15" fill="rgb(231,10,20)" fg:x="400" fg:w="1"/><text x="32.4821%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="32.2321%" y="773" width="0.1612%" height="15" fill="rgb(210,93,37)" fg:x="400" fg:w="2"/><text x="32.4821%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="32.2321%" y="757" width="0.1612%" height="15" fill="rgb(226,84,42)" fg:x="400" fg:w="2"/><text x="32.4821%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="32.2321%" y="741" width="0.1612%" height="15" fill="rgb(253,192,7)" fg:x="400" fg:w="2"/><text x="32.4821%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.2321%" y="725" width="0.1612%" height="15" fill="rgb(214,107,27)" fg:x="400" fg:w="2"/><text x="32.4821%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.2321%" y="709" width="0.1612%" height="15" fill="rgb(238,146,21)" fg:x="400" fg:w="2"/><text x="32.4821%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.2321%" y="693" width="0.1612%" height="15" fill="rgb(209,136,30)" fg:x="400" fg:w="2"/><text x="32.4821%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.2321%" y="677" width="0.1612%" height="15" fill="rgb(226,60,22)" fg:x="400" fg:w="2"/><text x="32.4821%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.3127%" y="661" width="0.0806%" height="15" fill="rgb(243,92,26)" fg:x="401" fg:w="1"/><text x="32.5627%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.3127%" y="645" width="0.0806%" height="15" fill="rgb(211,85,33)" fg:x="401" fg:w="1"/><text x="32.5627%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="32.3127%" y="629" width="0.0806%" height="15" fill="rgb(243,187,44)" fg:x="401" fg:w="1"/><text x="32.5627%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.3932%" y="709" width="0.0806%" height="15" fill="rgb(251,172,23)" fg:x="402" fg:w="1"/><text x="32.6432%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3932%" y="693" width="0.0806%" height="15" fill="rgb(254,162,50)" fg:x="402" fg:w="1"/><text x="32.6432%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3932%" y="677" width="0.0806%" height="15" fill="rgb(239,14,53)" fg:x="402" fg:w="1"/><text x="32.6432%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.3932%" y="661" width="0.0806%" height="15" fill="rgb(242,208,8)" fg:x="402" fg:w="1"/><text x="32.6432%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.3932%" y="645" width="0.0806%" height="15" fill="rgb(225,61,41)" fg:x="402" fg:w="1"/><text x="32.6432%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.3932%" y="629" width="0.0806%" height="15" fill="rgb(219,154,6)" fg:x="402" fg:w="1"/><text x="32.6432%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.3932%" y="613" width="0.0806%" height="15" fill="rgb(227,223,44)" fg:x="402" fg:w="1"/><text x="32.6432%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.3932%" y="597" width="0.0806%" height="15" fill="rgb(220,188,6)" fg:x="402" fg:w="1"/><text x="32.6432%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.3932%" y="581" width="0.0806%" height="15" fill="rgb(216,65,22)" fg:x="402" fg:w="1"/><text x="32.6432%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.3932%" y="565" width="0.0806%" height="15" fill="rgb(236,66,46)" fg:x="402" fg:w="1"/><text x="32.6432%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.3932%" y="549" width="0.0806%" height="15" fill="rgb(211,150,52)" fg:x="402" fg:w="1"/><text x="32.6432%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.3932%" y="533" width="0.0806%" height="15" fill="rgb(253,89,19)" fg:x="402" fg:w="1"/><text x="32.6432%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.3932%" y="517" width="0.0806%" height="15" fill="rgb(245,4,1)" fg:x="402" fg:w="1"/><text x="32.6432%" y="527.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (345 samples, 27.80%)</title><rect x="4.7542%" y="853" width="27.8002%" height="15" fill="rgb(230,109,16)" fg:x="59" fg:w="345"/><text x="5.0042%" y="863.50">&lt;tests::HoldingKeyInVessel as tests::WorldFix..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (21 samples, 1.69%)</title><rect x="30.8622%" y="837" width="1.6922%" height="15" fill="rgb(213,7,47)" fg:x="383" fg:w="21"/><text x="31.1122%" y="847.50"></text></g><g><title>plugins_core::build::Build::new_world (6 samples, 0.48%)</title><rect x="32.0709%" y="821" width="0.4835%" height="15" fill="rgb(242,148,14)" fg:x="398" fg:w="6"/><text x="32.3209%" y="831.50"></text></g><g><title>kernel::model::EntityPtr::new (5 samples, 0.40%)</title><rect x="32.1515%" y="805" width="0.4029%" height="15" fill="rgb(238,51,34)" fg:x="399" fg:w="5"/><text x="32.4015%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="32.2321%" y="789" width="0.3223%" height="15" fill="rgb(222,49,22)" fg:x="400" fg:w="4"/><text x="32.4821%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="32.3932%" y="773" width="0.1612%" height="15" fill="rgb(237,102,50)" fg:x="402" fg:w="2"/><text x="32.6432%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="32.3932%" y="757" width="0.1612%" height="15" fill="rgb(237,195,8)" fg:x="402" fg:w="2"/><text x="32.6432%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="32.3932%" y="741" width="0.1612%" height="15" fill="rgb(245,60,18)" fg:x="402" fg:w="2"/><text x="32.6432%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.3932%" y="725" width="0.1612%" height="15" fill="rgb(253,74,32)" fg:x="402" fg:w="2"/><text x="32.6432%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.4738%" y="709" width="0.0806%" height="15" fill="rgb(240,91,39)" fg:x="403" fg:w="1"/><text x="32.7238%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.4738%" y="693" width="0.0806%" height="15" fill="rgb(221,162,34)" fg:x="403" fg:w="1"/><text x="32.7238%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.4738%" y="677" width="0.0806%" height="15" fill="rgb(223,32,2)" fg:x="403" fg:w="1"/><text x="32.7238%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.4738%" y="661" width="0.0806%" height="15" fill="rgb(245,220,46)" fg:x="403" fg:w="1"/><text x="32.7238%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.4738%" y="645" width="0.0806%" height="15" fill="rgb(216,38,33)" fg:x="403" fg:w="1"/><text x="32.7238%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.4738%" y="629" width="0.0806%" height="15" fill="rgb(210,123,14)" fg:x="403" fg:w="1"/><text x="32.7238%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.4738%" y="613" width="0.0806%" height="15" fill="rgb(214,38,47)" fg:x="403" fg:w="1"/><text x="32.7238%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.4738%" y="597" width="0.0806%" height="15" fill="rgb(244,180,16)" fg:x="403" fg:w="1"/><text x="32.7238%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.4738%" y="581" width="0.0806%" height="15" fill="rgb(252,21,32)" fg:x="403" fg:w="1"/><text x="32.7238%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.4738%" y="565" width="0.0806%" height="15" fill="rgb(245,218,31)" fg:x="403" fg:w="1"/><text x="32.7238%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.4738%" y="549" width="0.0806%" height="15" fill="rgb(247,81,18)" fg:x="403" fg:w="1"/><text x="32.7238%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.4738%" y="533" width="0.0806%" height="15" fill="rgb(220,151,1)" fg:x="403" fg:w="1"/><text x="32.7238%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="32.5544%" y="853" width="0.0806%" height="15" fill="rgb(211,157,11)" fg:x="404" fg:w="1"/><text x="32.8044%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="32.5544%" y="837" width="0.0806%" height="15" fill="rgb(239,46,30)" fg:x="404" fg:w="1"/><text x="32.8044%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="32.5544%" y="821" width="0.0806%" height="15" fill="rgb(236,144,43)" fg:x="404" fg:w="1"/><text x="32.8044%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="32.5544%" y="805" width="0.0806%" height="15" fill="rgb(206,71,45)" fg:x="404" fg:w="1"/><text x="32.8044%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.5544%" y="789" width="0.0806%" height="15" fill="rgb(240,85,31)" fg:x="404" fg:w="1"/><text x="32.8044%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.7156%" y="741" width="0.0806%" height="15" fill="rgb(221,43,52)" fg:x="406" fg:w="1"/><text x="32.9656%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.7156%" y="725" width="0.0806%" height="15" fill="rgb(243,106,22)" fg:x="406" fg:w="1"/><text x="32.9656%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.7156%" y="709" width="0.0806%" height="15" fill="rgb(209,138,38)" fg:x="406" fg:w="1"/><text x="32.9656%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.7156%" y="693" width="0.0806%" height="15" fill="rgb(216,63,40)" fg:x="406" fg:w="1"/><text x="32.9656%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.7156%" y="677" width="0.0806%" height="15" fill="rgb(206,115,21)" fg:x="406" fg:w="1"/><text x="32.9656%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.7156%" y="661" width="0.0806%" height="15" fill="rgb(235,53,44)" fg:x="406" fg:w="1"/><text x="32.9656%" y="671.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="32.7156%" y="645" width="0.0806%" height="15" fill="rgb(244,160,14)" fg:x="406" fg:w="1"/><text x="32.9656%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.7156%" y="821" width="0.1612%" height="15" fill="rgb(223,16,19)" fg:x="406" fg:w="2"/><text x="32.9656%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.7156%" y="805" width="0.1612%" height="15" fill="rgb(242,63,42)" fg:x="406" fg:w="2"/><text x="32.9656%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="32.7156%" y="789" width="0.1612%" height="15" fill="rgb(209,66,49)" fg:x="406" fg:w="2"/><text x="32.9656%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="32.7156%" y="773" width="0.1612%" height="15" fill="rgb(207,126,46)" fg:x="406" fg:w="2"/><text x="32.9656%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="32.7156%" y="757" width="0.1612%" height="15" fill="rgb(218,160,41)" fg:x="406" fg:w="2"/><text x="32.9656%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="32.7961%" y="741" width="0.0806%" height="15" fill="rgb(234,125,46)" fg:x="407" fg:w="1"/><text x="33.0461%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="32.7961%" y="725" width="0.0806%" height="15" fill="rgb(205,66,36)" fg:x="407" fg:w="1"/><text x="33.0461%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="32.7156%" y="837" width="0.2417%" height="15" fill="rgb(220,135,16)" fg:x="406" fg:w="3"/><text x="32.9656%" y="847.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.8767%" y="821" width="0.0806%" height="15" fill="rgb(214,217,54)" fg:x="408" fg:w="1"/><text x="33.1267%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.0379%" y="501" width="0.0806%" height="15" fill="rgb(206,30,9)" fg:x="410" fg:w="1"/><text x="33.2879%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.0379%" y="485" width="0.0806%" height="15" fill="rgb(207,196,5)" fg:x="410" fg:w="1"/><text x="33.2879%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="32.9573%" y="837" width="0.2417%" height="15" fill="rgb(227,116,12)" fg:x="409" fg:w="3"/><text x="33.2073%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="32.9573%" y="821" width="0.2417%" height="15" fill="rgb(235,227,13)" fg:x="409" fg:w="3"/><text x="33.2073%" y="831.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="32.9573%" y="805" width="0.2417%" height="15" fill="rgb(238,212,29)" fg:x="409" fg:w="3"/><text x="33.2073%" y="815.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="32.9573%" y="789" width="0.2417%" height="15" fill="rgb(230,152,17)" fg:x="409" fg:w="3"/><text x="33.2073%" y="799.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="32.9573%" y="773" width="0.2417%" height="15" fill="rgb(220,197,1)" fg:x="409" fg:w="3"/><text x="33.2073%" y="783.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.24%)</title><rect x="32.9573%" y="757" width="0.2417%" height="15" fill="rgb(229,227,40)" fg:x="409" fg:w="3"/><text x="33.2073%" y="767.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="33.0379%" y="741" width="0.1612%" height="15" fill="rgb(227,179,16)" fg:x="410" fg:w="2"/><text x="33.2879%" y="751.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="33.0379%" y="725" width="0.1612%" height="15" fill="rgb(246,116,44)" fg:x="410" fg:w="2"/><text x="33.2879%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="33.0379%" y="709" width="0.1612%" height="15" fill="rgb(205,191,4)" fg:x="410" fg:w="2"/><text x="33.2879%" y="719.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.16%)</title><rect x="33.0379%" y="693" width="0.1612%" height="15" fill="rgb(245,69,19)" fg:x="410" fg:w="2"/><text x="33.2879%" y="703.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.16%)</title><rect x="33.0379%" y="677" width="0.1612%" height="15" fill="rgb(230,29,26)" fg:x="410" fg:w="2"/><text x="33.2879%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="33.0379%" y="661" width="0.1612%" height="15" fill="rgb(239,192,26)" fg:x="410" fg:w="2"/><text x="33.2879%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="33.0379%" y="645" width="0.1612%" height="15" fill="rgb(219,92,16)" fg:x="410" fg:w="2"/><text x="33.2879%" y="655.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="33.0379%" y="629" width="0.1612%" height="15" fill="rgb(246,147,43)" fg:x="410" fg:w="2"/><text x="33.2879%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="33.0379%" y="613" width="0.1612%" height="15" fill="rgb(222,147,11)" fg:x="410" fg:w="2"/><text x="33.2879%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="33.0379%" y="597" width="0.1612%" height="15" fill="rgb(243,71,8)" fg:x="410" fg:w="2"/><text x="33.2879%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="33.0379%" y="581" width="0.1612%" height="15" fill="rgb(250,36,12)" fg:x="410" fg:w="2"/><text x="33.2879%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="33.0379%" y="565" width="0.1612%" height="15" fill="rgb(207,168,14)" fg:x="410" fg:w="2"/><text x="33.2879%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="33.0379%" y="549" width="0.1612%" height="15" fill="rgb(254,210,51)" fg:x="410" fg:w="2"/><text x="33.2879%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="33.0379%" y="533" width="0.1612%" height="15" fill="rgb(236,152,38)" fg:x="410" fg:w="2"/><text x="33.2879%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="33.0379%" y="517" width="0.1612%" height="15" fill="rgb(240,164,36)" fg:x="410" fg:w="2"/><text x="33.2879%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.08%)</title><rect x="33.1185%" y="501" width="0.0806%" height="15" fill="rgb(210,171,36)" fg:x="411" fg:w="1"/><text x="33.3685%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.08%)</title><rect x="33.1185%" y="485" width="0.0806%" height="15" fill="rgb(254,156,34)" fg:x="411" fg:w="1"/><text x="33.3685%" y="495.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="33.1990%" y="837" width="0.1612%" height="15" fill="rgb(216,204,23)" fg:x="412" fg:w="2"/><text x="33.4490%" y="847.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="33.1990%" y="821" width="0.1612%" height="15" fill="rgb(230,75,38)" fg:x="412" fg:w="2"/><text x="33.4490%" y="831.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="33.1990%" y="805" width="0.1612%" height="15" fill="rgb(248,197,25)" fg:x="412" fg:w="2"/><text x="33.4490%" y="815.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="33.1990%" y="789" width="0.1612%" height="15" fill="rgb(234,121,26)" fg:x="412" fg:w="2"/><text x="33.4490%" y="799.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="33.1990%" y="773" width="0.1612%" height="15" fill="rgb(220,41,36)" fg:x="412" fg:w="2"/><text x="33.4490%" y="783.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="33.1990%" y="757" width="0.1612%" height="15" fill="rgb(227,33,32)" fg:x="412" fg:w="2"/><text x="33.4490%" y="767.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="33.1990%" y="741" width="0.1612%" height="15" fill="rgb(208,214,54)" fg:x="412" fg:w="2"/><text x="33.4490%" y="751.50"></text></g><g><title>getenv (2 samples, 0.16%)</title><rect x="33.1990%" y="725" width="0.1612%" height="15" fill="rgb(205,37,38)" fg:x="412" fg:w="2"/><text x="33.4490%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="33.5214%" y="533" width="0.0806%" height="15" fill="rgb(252,2,0)" fg:x="416" fg:w="1"/><text x="33.7714%" y="543.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="33.5214%" y="517" width="0.0806%" height="15" fill="rgb(212,171,10)" fg:x="416" fg:w="1"/><text x="33.7714%" y="527.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="33.5214%" y="501" width="0.0806%" height="15" fill="rgb(239,35,46)" fg:x="416" fg:w="1"/><text x="33.7714%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="33.5214%" y="485" width="0.0806%" height="15" fill="rgb(209,34,42)" fg:x="416" fg:w="1"/><text x="33.7714%" y="495.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.08%)</title><rect x="33.5214%" y="469" width="0.0806%" height="15" fill="rgb(237,9,4)" fg:x="416" fg:w="1"/><text x="33.7714%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="33.4408%" y="805" width="0.2417%" height="15" fill="rgb(254,55,38)" fg:x="415" fg:w="3"/><text x="33.6908%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="33.4408%" y="789" width="0.2417%" height="15" fill="rgb(222,95,29)" fg:x="415" fg:w="3"/><text x="33.6908%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="33.4408%" y="773" width="0.2417%" height="15" fill="rgb(241,218,37)" fg:x="415" fg:w="3"/><text x="33.6908%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="33.5214%" y="757" width="0.1612%" height="15" fill="rgb(225,89,28)" fg:x="416" fg:w="2"/><text x="33.7714%" y="767.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="33.5214%" y="741" width="0.1612%" height="15" fill="rgb(231,17,25)" fg:x="416" fg:w="2"/><text x="33.7714%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="33.5214%" y="725" width="0.1612%" height="15" fill="rgb(206,216,48)" fg:x="416" fg:w="2"/><text x="33.7714%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="33.5214%" y="709" width="0.1612%" height="15" fill="rgb(247,190,28)" fg:x="416" fg:w="2"/><text x="33.7714%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="33.5214%" y="693" width="0.1612%" height="15" fill="rgb(216,196,12)" fg:x="416" fg:w="2"/><text x="33.7714%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="33.5214%" y="677" width="0.1612%" height="15" fill="rgb(232,114,19)" fg:x="416" fg:w="2"/><text x="33.7714%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="33.5214%" y="661" width="0.1612%" height="15" fill="rgb(240,60,14)" fg:x="416" fg:w="2"/><text x="33.7714%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="33.5214%" y="645" width="0.1612%" height="15" fill="rgb(250,108,9)" fg:x="416" fg:w="2"/><text x="33.7714%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="33.5214%" y="629" width="0.1612%" height="15" fill="rgb(227,228,21)" fg:x="416" fg:w="2"/><text x="33.7714%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="33.5214%" y="613" width="0.1612%" height="15" fill="rgb(254,16,52)" fg:x="416" fg:w="2"/><text x="33.7714%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="33.5214%" y="597" width="0.1612%" height="15" fill="rgb(222,58,2)" fg:x="416" fg:w="2"/><text x="33.7714%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="33.5214%" y="581" width="0.1612%" height="15" fill="rgb(253,68,14)" fg:x="416" fg:w="2"/><text x="33.7714%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="33.5214%" y="565" width="0.1612%" height="15" fill="rgb(226,96,17)" fg:x="416" fg:w="2"/><text x="33.7714%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="33.5214%" y="549" width="0.1612%" height="15" fill="rgb(227,199,2)" fg:x="416" fg:w="2"/><text x="33.7714%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.08%)</title><rect x="33.6019%" y="533" width="0.0806%" height="15" fill="rgb(228,227,48)" fg:x="417" fg:w="1"/><text x="33.8519%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.08%)</title><rect x="33.6019%" y="517" width="0.0806%" height="15" fill="rgb(249,183,0)" fg:x="417" fg:w="1"/><text x="33.8519%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="33.6825%" y="789" width="0.0806%" height="15" fill="rgb(250,89,38)" fg:x="418" fg:w="1"/><text x="33.9325%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="33.7631%" y="789" width="0.0806%" height="15" fill="rgb(240,227,8)" fg:x="419" fg:w="1"/><text x="34.0131%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="33.7631%" y="773" width="0.0806%" height="15" fill="rgb(242,197,35)" fg:x="419" fg:w="1"/><text x="34.0131%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7631%" y="757" width="0.0806%" height="15" fill="rgb(224,37,41)" fg:x="419" fg:w="1"/><text x="34.0131%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.9243%" y="725" width="0.0806%" height="15" fill="rgb(236,127,7)" fg:x="421" fg:w="1"/><text x="34.1743%" y="735.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="33.8437%" y="757" width="0.4835%" height="15" fill="rgb(230,62,52)" fg:x="420" fg:w="6"/><text x="34.0937%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="33.8437%" y="741" width="0.4835%" height="15" fill="rgb(235,114,23)" fg:x="420" fg:w="6"/><text x="34.0937%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="34.0048%" y="725" width="0.3223%" height="15" fill="rgb(211,55,40)" fg:x="422" fg:w="4"/><text x="34.2548%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.0854%" y="709" width="0.2417%" height="15" fill="rgb(228,123,1)" fg:x="423" fg:w="3"/><text x="34.3354%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.1660%" y="693" width="0.1612%" height="15" fill="rgb(244,208,8)" fg:x="424" fg:w="2"/><text x="34.4160%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.1660%" y="677" width="0.1612%" height="15" fill="rgb(237,118,14)" fg:x="424" fg:w="2"/><text x="34.4160%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="34.1660%" y="661" width="0.1612%" height="15" fill="rgb(219,170,13)" fg:x="424" fg:w="2"/><text x="34.4160%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="34.1660%" y="645" width="0.1612%" height="15" fill="rgb(212,39,43)" fg:x="424" fg:w="2"/><text x="34.4160%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="34.1660%" y="629" width="0.1612%" height="15" fill="rgb(244,191,2)" fg:x="424" fg:w="2"/><text x="34.4160%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="34.1660%" y="613" width="0.1612%" height="15" fill="rgb(219,201,46)" fg:x="424" fg:w="2"/><text x="34.4160%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="34.1660%" y="597" width="0.1612%" height="15" fill="rgb(218,82,7)" fg:x="424" fg:w="2"/><text x="34.4160%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="34.1660%" y="581" width="0.1612%" height="15" fill="rgb(208,192,8)" fg:x="424" fg:w="2"/><text x="34.4160%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="34.1660%" y="565" width="0.1612%" height="15" fill="rgb(244,54,32)" fg:x="424" fg:w="2"/><text x="34.4160%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="34.1660%" y="549" width="0.1612%" height="15" fill="rgb(240,43,52)" fg:x="424" fg:w="2"/><text x="34.4160%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="34.1660%" y="533" width="0.1612%" height="15" fill="rgb(233,134,29)" fg:x="424" fg:w="2"/><text x="34.4160%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.1660%" y="517" width="0.1612%" height="15" fill="rgb(236,128,10)" fg:x="424" fg:w="2"/><text x="34.4160%" y="527.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="34.3272%" y="757" width="0.1612%" height="15" fill="rgb(207,46,54)" fg:x="426" fg:w="2"/><text x="34.5772%" y="767.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="34.3272%" y="741" width="0.1612%" height="15" fill="rgb(248,140,35)" fg:x="426" fg:w="2"/><text x="34.5772%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="34.4883%" y="725" width="0.0806%" height="15" fill="rgb(241,103,35)" fg:x="428" fg:w="1"/><text x="34.7383%" y="735.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="34.4883%" y="709" width="0.0806%" height="15" fill="rgb(223,19,48)" fg:x="428" fg:w="1"/><text x="34.7383%" y="719.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="34.4883%" y="693" width="0.0806%" height="15" fill="rgb(238,177,46)" fg:x="428" fg:w="1"/><text x="34.7383%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.4883%" y="677" width="0.0806%" height="15" fill="rgb(213,102,15)" fg:x="428" fg:w="1"/><text x="34.7383%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.4883%" y="661" width="0.0806%" height="15" fill="rgb(254,135,52)" fg:x="428" fg:w="1"/><text x="34.7383%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.4883%" y="645" width="0.0806%" height="15" fill="rgb(240,59,6)" fg:x="428" fg:w="1"/><text x="34.7383%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (15 samples, 1.21%)</title><rect x="33.4408%" y="821" width="1.2087%" height="15" fill="rgb(207,226,5)" fg:x="415" fg:w="15"/><text x="33.6908%" y="831.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (12 samples, 0.97%)</title><rect x="33.6825%" y="805" width="0.9670%" height="15" fill="rgb(208,167,17)" fg:x="418" fg:w="12"/><text x="33.9325%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.81%)</title><rect x="33.8437%" y="789" width="0.8058%" height="15" fill="rgb(254,94,10)" fg:x="420" fg:w="10"/><text x="34.0937%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.81%)</title><rect x="33.8437%" y="773" width="0.8058%" height="15" fill="rgb(229,33,11)" fg:x="420" fg:w="10"/><text x="34.0937%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.4883%" y="757" width="0.1612%" height="15" fill="rgb(249,145,48)" fg:x="428" fg:w="2"/><text x="34.7383%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.4883%" y="741" width="0.1612%" height="15" fill="rgb(253,68,54)" fg:x="428" fg:w="2"/><text x="34.7383%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.5689%" y="725" width="0.0806%" height="15" fill="rgb(223,27,42)" fg:x="429" fg:w="1"/><text x="34.8189%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.5689%" y="709" width="0.0806%" height="15" fill="rgb(235,123,13)" fg:x="429" fg:w="1"/><text x="34.8189%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Raised&gt; (1 samples, 0.08%)</title><rect x="34.6495%" y="821" width="0.0806%" height="15" fill="rgb(244,154,7)" fg:x="430" fg:w="1"/><text x="34.8995%" y="831.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.6495%" y="805" width="0.0806%" height="15" fill="rgb(214,30,25)" fg:x="430" fg:w="1"/><text x="34.8995%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="34.7301%" y="805" width="0.0806%" height="15" fill="rgb(252,189,13)" fg:x="431" fg:w="1"/><text x="34.9801%" y="815.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="34.8106%" y="805" width="0.1612%" height="15" fill="rgb(234,27,40)" fg:x="432" fg:w="2"/><text x="35.0606%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="34.8106%" y="789" width="0.1612%" height="15" fill="rgb(252,199,25)" fg:x="432" fg:w="2"/><text x="35.0606%" y="799.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="34.8912%" y="773" width="0.0806%" height="15" fill="rgb(234,207,20)" fg:x="433" fg:w="1"/><text x="35.1412%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8912%" y="757" width="0.0806%" height="15" fill="rgb(244,220,10)" fg:x="433" fg:w="1"/><text x="35.1412%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8912%" y="741" width="0.0806%" height="15" fill="rgb(247,68,23)" fg:x="433" fg:w="1"/><text x="35.1412%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.8912%" y="725" width="0.0806%" height="15" fill="rgb(254,61,4)" fg:x="433" fg:w="1"/><text x="35.1412%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.8912%" y="709" width="0.0806%" height="15" fill="rgb(245,208,35)" fg:x="433" fg:w="1"/><text x="35.1412%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.8912%" y="693" width="0.0806%" height="15" fill="rgb(235,90,11)" fg:x="433" fg:w="1"/><text x="35.1412%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="34.8912%" y="677" width="0.0806%" height="15" fill="rgb(239,139,43)" fg:x="433" fg:w="1"/><text x="35.1412%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="34.8912%" y="661" width="0.0806%" height="15" fill="rgb(209,187,9)" fg:x="433" fg:w="1"/><text x="35.1412%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="35.2135%" y="741" width="0.1612%" height="15" fill="rgb(241,30,6)" fg:x="437" fg:w="2"/><text x="35.4635%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.2941%" y="725" width="0.0806%" height="15" fill="rgb(216,104,1)" fg:x="438" fg:w="1"/><text x="35.5441%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.2941%" y="709" width="0.0806%" height="15" fill="rgb(238,55,39)" fg:x="438" fg:w="1"/><text x="35.5441%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.2941%" y="693" width="0.0806%" height="15" fill="rgb(226,151,41)" fg:x="438" fg:w="1"/><text x="35.5441%" y="703.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="35.1330%" y="757" width="0.4029%" height="15" fill="rgb(228,73,40)" fg:x="436" fg:w="5"/><text x="35.3830%" y="767.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="35.3747%" y="741" width="0.1612%" height="15" fill="rgb(215,81,0)" fg:x="439" fg:w="2"/><text x="35.6247%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="35.3747%" y="725" width="0.1612%" height="15" fill="rgb(209,52,39)" fg:x="439" fg:w="2"/><text x="35.6247%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="35.3747%" y="709" width="0.1612%" height="15" fill="rgb(221,127,5)" fg:x="439" fg:w="2"/><text x="35.6247%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="35.5359%" y="741" width="0.4029%" height="15" fill="rgb(213,215,6)" fg:x="441" fg:w="5"/><text x="35.7859%" y="751.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="35.6164%" y="725" width="0.3223%" height="15" fill="rgb(214,118,13)" fg:x="442" fg:w="4"/><text x="35.8664%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="35.6970%" y="709" width="0.2417%" height="15" fill="rgb(207,205,41)" fg:x="443" fg:w="3"/><text x="35.9470%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="35.7776%" y="693" width="0.1612%" height="15" fill="rgb(218,208,45)" fg:x="444" fg:w="2"/><text x="36.0276%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.8582%" y="677" width="0.0806%" height="15" fill="rgb(244,81,54)" fg:x="445" fg:w="1"/><text x="36.1082%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.8582%" y="661" width="0.0806%" height="15" fill="rgb(244,175,1)" fg:x="445" fg:w="1"/><text x="36.1082%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="35.8582%" y="645" width="0.0806%" height="15" fill="rgb(232,128,28)" fg:x="445" fg:w="1"/><text x="36.1082%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="36.0193%" y="693" width="0.1612%" height="15" fill="rgb(234,83,13)" fg:x="447" fg:w="2"/><text x="36.2693%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.0999%" y="677" width="0.0806%" height="15" fill="rgb(233,222,35)" fg:x="448" fg:w="1"/><text x="36.3499%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.0999%" y="661" width="0.0806%" height="15" fill="rgb(244,204,21)" fg:x="448" fg:w="1"/><text x="36.3499%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.0999%" y="645" width="0.0806%" height="15" fill="rgb(225,121,40)" fg:x="448" fg:w="1"/><text x="36.3499%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="36.0999%" y="629" width="0.0806%" height="15" fill="rgb(231,89,18)" fg:x="448" fg:w="1"/><text x="36.3499%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="36.0999%" y="613" width="0.0806%" height="15" fill="rgb(205,41,50)" fg:x="448" fg:w="1"/><text x="36.3499%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="36.0999%" y="597" width="0.0806%" height="15" fill="rgb(254,25,22)" fg:x="448" fg:w="1"/><text x="36.3499%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="36.0193%" y="725" width="0.2417%" height="15" fill="rgb(208,44,21)" fg:x="447" fg:w="3"/><text x="36.2693%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="36.0193%" y="709" width="0.2417%" height="15" fill="rgb(237,59,53)" fg:x="447" fg:w="3"/><text x="36.2693%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.1805%" y="693" width="0.0806%" height="15" fill="rgb(233,24,36)" fg:x="449" fg:w="1"/><text x="36.4305%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.1805%" y="677" width="0.0806%" height="15" fill="rgb(216,92,41)" fg:x="449" fg:w="1"/><text x="36.4305%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="36.2611%" y="725" width="0.3223%" height="15" fill="rgb(225,158,49)" fg:x="450" fg:w="4"/><text x="36.5111%" y="735.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="36.2611%" y="709" width="0.3223%" height="15" fill="rgb(244,11,16)" fg:x="450" fg:w="4"/><text x="36.5111%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="36.2611%" y="693" width="0.3223%" height="15" fill="rgb(208,215,38)" fg:x="450" fg:w="4"/><text x="36.5111%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="36.3417%" y="677" width="0.2417%" height="15" fill="rgb(250,69,53)" fg:x="451" fg:w="3"/><text x="36.5917%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="36.6640%" y="709" width="0.0806%" height="15" fill="rgb(240,187,52)" fg:x="455" fg:w="1"/><text x="36.9140%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="36.7446%" y="693" width="0.1612%" height="15" fill="rgb(235,22,25)" fg:x="456" fg:w="2"/><text x="36.9946%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.8251%" y="677" width="0.0806%" height="15" fill="rgb(213,173,22)" fg:x="457" fg:w="1"/><text x="37.0751%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="36.9057%" y="677" width="0.0806%" height="15" fill="rgb(218,47,0)" fg:x="458" fg:w="1"/><text x="37.1557%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.9057%" y="661" width="0.0806%" height="15" fill="rgb(254,157,11)" fg:x="458" fg:w="1"/><text x="37.1557%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.9057%" y="645" width="0.0806%" height="15" fill="rgb(233,154,6)" fg:x="458" fg:w="1"/><text x="37.1557%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.9057%" y="629" width="0.0806%" height="15" fill="rgb(233,207,47)" fg:x="458" fg:w="1"/><text x="37.1557%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="36.9863%" y="661" width="0.3223%" height="15" fill="rgb(249,128,18)" fg:x="459" fg:w="4"/><text x="37.2363%" y="671.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="36.9863%" y="645" width="0.3223%" height="15" fill="rgb(211,27,42)" fg:x="459" fg:w="4"/><text x="37.2363%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="36.9863%" y="629" width="0.3223%" height="15" fill="rgb(240,163,26)" fg:x="459" fg:w="4"/><text x="37.2363%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="36.9863%" y="613" width="0.3223%" height="15" fill="rgb(232,118,46)" fg:x="459" fg:w="4"/><text x="37.2363%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="36.9863%" y="597" width="0.3223%" height="15" fill="rgb(238,158,34)" fg:x="459" fg:w="4"/><text x="37.2363%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="36.9863%" y="581" width="0.3223%" height="15" fill="rgb(254,99,45)" fg:x="459" fg:w="4"/><text x="37.2363%" y="591.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="36.9863%" y="565" width="0.3223%" height="15" fill="rgb(247,205,20)" fg:x="459" fg:w="4"/><text x="37.2363%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="36.9863%" y="677" width="0.4029%" height="15" fill="rgb(240,20,41)" fg:x="459" fg:w="5"/><text x="37.2363%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.3086%" y="661" width="0.0806%" height="15" fill="rgb(231,22,43)" fg:x="463" fg:w="1"/><text x="37.5586%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.3086%" y="645" width="0.0806%" height="15" fill="rgb(207,86,33)" fg:x="463" fg:w="1"/><text x="37.5586%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.3086%" y="629" width="0.0806%" height="15" fill="rgb(231,148,5)" fg:x="463" fg:w="1"/><text x="37.5586%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="36.9057%" y="693" width="0.8864%" height="15" fill="rgb(253,77,28)" fg:x="458" fg:w="11"/><text x="37.1557%" y="703.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="37.3892%" y="677" width="0.4029%" height="15" fill="rgb(253,227,9)" fg:x="464" fg:w="5"/><text x="37.6392%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="37.4698%" y="661" width="0.3223%" height="15" fill="rgb(235,4,18)" fg:x="465" fg:w="4"/><text x="37.7198%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="37.4698%" y="645" width="0.3223%" height="15" fill="rgb(205,206,45)" fg:x="465" fg:w="4"/><text x="37.7198%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="37.4698%" y="629" width="0.3223%" height="15" fill="rgb(252,34,0)" fg:x="465" fg:w="4"/><text x="37.7198%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="37.4698%" y="613" width="0.3223%" height="15" fill="rgb(213,56,7)" fg:x="465" fg:w="4"/><text x="37.7198%" y="623.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="37.4698%" y="597" width="0.3223%" height="15" fill="rgb(227,74,29)" fg:x="465" fg:w="4"/><text x="37.7198%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.13%)</title><rect x="36.7446%" y="709" width="1.1281%" height="15" fill="rgb(221,32,48)" fg:x="456" fg:w="14"/><text x="36.9946%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.7921%" y="693" width="0.0806%" height="15" fill="rgb(230,205,25)" fg:x="469" fg:w="1"/><text x="38.0421%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.7921%" y="677" width="0.0806%" height="15" fill="rgb(215,110,9)" fg:x="469" fg:w="1"/><text x="38.0421%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.45%)</title><rect x="36.5834%" y="725" width="1.4504%" height="15" fill="rgb(245,220,47)" fg:x="454" fg:w="18"/><text x="36.8334%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="37.8727%" y="709" width="0.1612%" height="15" fill="rgb(224,117,5)" fg:x="470" fg:w="2"/><text x="38.1227%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="37.8727%" y="693" width="0.1612%" height="15" fill="rgb(242,208,25)" fg:x="470" fg:w="2"/><text x="38.1227%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.18%)</title><rect x="35.9388%" y="741" width="2.1757%" height="15" fill="rgb(226,12,37)" fg:x="446" fg:w="27"/><text x="36.1888%" y="751.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="38.0338%" y="725" width="0.0806%" height="15" fill="rgb(224,221,22)" fg:x="472" fg:w="1"/><text x="38.2838%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (38 samples, 3.06%)</title><rect x="35.5359%" y="757" width="3.0620%" height="15" fill="rgb(239,38,44)" fg:x="441" fg:w="38"/><text x="35.7859%" y="767.50">ser..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="38.1144%" y="741" width="0.4835%" height="15" fill="rgb(218,25,46)" fg:x="473" fg:w="6"/><text x="38.3644%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="38.1950%" y="725" width="0.4029%" height="15" fill="rgb(206,137,51)" fg:x="474" fg:w="5"/><text x="38.4450%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="38.1950%" y="709" width="0.4029%" height="15" fill="rgb(233,174,3)" fg:x="474" fg:w="5"/><text x="38.4450%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="38.3562%" y="693" width="0.2417%" height="15" fill="rgb(207,224,43)" fg:x="476" fg:w="3"/><text x="38.6062%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="38.3562%" y="677" width="0.2417%" height="15" fill="rgb(230,46,27)" fg:x="476" fg:w="3"/><text x="38.6062%" y="687.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="38.4367%" y="661" width="0.1612%" height="15" fill="rgb(251,215,32)" fg:x="477" fg:w="2"/><text x="38.6867%" y="671.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (44 samples, 3.55%)</title><rect x="35.1330%" y="773" width="3.5455%" height="15" fill="rgb(244,219,19)" fg:x="436" fg:w="44"/><text x="35.3830%" y="783.50">&lt;ser..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="38.5979%" y="757" width="0.0806%" height="15" fill="rgb(242,125,36)" fg:x="479" fg:w="1"/><text x="38.8479%" y="767.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.8396%" y="725" width="0.1612%" height="15" fill="rgb(251,211,12)" fg:x="482" fg:w="2"/><text x="39.0896%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="39.0008%" y="725" width="0.1612%" height="15" fill="rgb(209,179,33)" fg:x="484" fg:w="2"/><text x="39.2508%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.0814%" y="709" width="0.0806%" height="15" fill="rgb(205,161,48)" fg:x="485" fg:w="1"/><text x="39.3314%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.1620%" y="709" width="0.0806%" height="15" fill="rgb(241,139,8)" fg:x="486" fg:w="1"/><text x="39.4120%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4 samples, 0.32%)</title><rect x="39.3231%" y="693" width="0.3223%" height="15" fill="rgb(246,159,53)" fg:x="488" fg:w="4"/><text x="39.5731%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="39.3231%" y="677" width="0.3223%" height="15" fill="rgb(212,62,27)" fg:x="488" fg:w="4"/><text x="39.5731%" y="687.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="39.3231%" y="661" width="0.3223%" height="15" fill="rgb(216,168,18)" fg:x="488" fg:w="4"/><text x="39.5731%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.7260%" y="661" width="0.0806%" height="15" fill="rgb(228,136,50)" fg:x="493" fg:w="1"/><text x="39.9760%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.7260%" y="645" width="0.0806%" height="15" fill="rgb(237,19,45)" fg:x="493" fg:w="1"/><text x="39.9760%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.8066%" y="645" width="0.0806%" height="15" fill="rgb(249,150,28)" fg:x="494" fg:w="1"/><text x="40.0566%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.37%)</title><rect x="38.6785%" y="773" width="1.3699%" height="15" fill="rgb(236,179,39)" fg:x="480" fg:w="17"/><text x="38.9285%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (17 samples, 1.37%)</title><rect x="38.6785%" y="757" width="1.3699%" height="15" fill="rgb(250,113,27)" fg:x="480" fg:w="17"/><text x="38.9285%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="38.8396%" y="741" width="1.2087%" height="15" fill="rgb(223,13,14)" fg:x="482" fg:w="15"/><text x="39.0896%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="39.1620%" y="725" width="0.8864%" height="15" fill="rgb(226,68,24)" fg:x="486" fg:w="11"/><text x="39.4120%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="39.2425%" y="709" width="0.8058%" height="15" fill="rgb(239,40,50)" fg:x="487" fg:w="10"/><text x="39.4925%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="39.6454%" y="693" width="0.4029%" height="15" fill="rgb(209,187,0)" fg:x="492" fg:w="5"/><text x="39.8954%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="39.6454%" y="677" width="0.4029%" height="15" fill="rgb(240,61,8)" fg:x="492" fg:w="5"/><text x="39.8954%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="39.8066%" y="661" width="0.2417%" height="15" fill="rgb(236,137,5)" fg:x="494" fg:w="3"/><text x="40.0566%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="39.8872%" y="645" width="0.1612%" height="15" fill="rgb(247,214,21)" fg:x="495" fg:w="2"/><text x="40.1372%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.9678%" y="629" width="0.0806%" height="15" fill="rgb(244,115,25)" fg:x="496" fg:w="1"/><text x="40.2178%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.2095%" y="709" width="0.0806%" height="15" fill="rgb(230,58,38)" fg:x="499" fg:w="1"/><text x="40.4595%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.2901%" y="693" width="0.0806%" height="15" fill="rgb(206,122,6)" fg:x="500" fg:w="1"/><text x="40.5401%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.3707%" y="693" width="0.0806%" height="15" fill="rgb(217,135,53)" fg:x="501" fg:w="1"/><text x="40.6207%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.3707%" y="677" width="0.0806%" height="15" fill="rgb(225,120,8)" fg:x="501" fg:w="1"/><text x="40.6207%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="40.4512%" y="677" width="0.1612%" height="15" fill="rgb(226,3,30)" fg:x="502" fg:w="2"/><text x="40.7012%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="40.6124%" y="661" width="0.0806%" height="15" fill="rgb(214,159,38)" fg:x="504" fg:w="1"/><text x="40.8624%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="40.6124%" y="645" width="0.0806%" height="15" fill="rgb(242,182,47)" fg:x="504" fg:w="1"/><text x="40.8624%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.6124%" y="629" width="0.0806%" height="15" fill="rgb(245,202,26)" fg:x="504" fg:w="1"/><text x="40.8624%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.6124%" y="613" width="0.0806%" height="15" fill="rgb(226,163,3)" fg:x="504" fg:w="1"/><text x="40.8624%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="40.2095%" y="741" width="0.6446%" height="15" fill="rgb(219,4,4)" fg:x="499" fg:w="8"/><text x="40.4595%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="40.2095%" y="725" width="0.6446%" height="15" fill="rgb(223,85,4)" fg:x="499" fg:w="8"/><text x="40.4595%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="40.2901%" y="709" width="0.5641%" height="15" fill="rgb(242,170,11)" fg:x="500" fg:w="7"/><text x="40.5401%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="40.4512%" y="693" width="0.4029%" height="15" fill="rgb(221,97,42)" fg:x="502" fg:w="5"/><text x="40.7012%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="40.6124%" y="677" width="0.2417%" height="15" fill="rgb(231,206,45)" fg:x="504" fg:w="3"/><text x="40.8624%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.6930%" y="661" width="0.1612%" height="15" fill="rgb(216,23,48)" fg:x="505" fg:w="2"/><text x="40.9430%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.6930%" y="645" width="0.1612%" height="15" fill="rgb(225,49,9)" fg:x="505" fg:w="2"/><text x="40.9430%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.7736%" y="629" width="0.0806%" height="15" fill="rgb(247,24,47)" fg:x="506" fg:w="1"/><text x="41.0236%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="40.8541%" y="741" width="0.0806%" height="15" fill="rgb(253,145,10)" fg:x="507" fg:w="1"/><text x="41.1041%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.8541%" y="725" width="0.0806%" height="15" fill="rgb(206,62,10)" fg:x="507" fg:w="1"/><text x="41.1041%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="40.9347%" y="725" width="0.3223%" height="15" fill="rgb(224,159,31)" fg:x="508" fg:w="4"/><text x="41.1847%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="40.9347%" y="709" width="0.3223%" height="15" fill="rgb(234,184,15)" fg:x="508" fg:w="4"/><text x="41.1847%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="41.0959%" y="693" width="0.1612%" height="15" fill="rgb(237,101,1)" fg:x="510" fg:w="2"/><text x="41.3459%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="41.0959%" y="677" width="0.1612%" height="15" fill="rgb(211,99,29)" fg:x="510" fg:w="2"/><text x="41.3459%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="41.0959%" y="661" width="0.1612%" height="15" fill="rgb(250,167,3)" fg:x="510" fg:w="2"/><text x="41.3459%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="41.0959%" y="645" width="0.1612%" height="15" fill="rgb(225,58,6)" fg:x="510" fg:w="2"/><text x="41.3459%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.1765%" y="629" width="0.0806%" height="15" fill="rgb(251,161,21)" fg:x="511" fg:w="1"/><text x="41.4265%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (2 samples, 0.16%)</title><rect x="41.2571%" y="725" width="0.1612%" height="15" fill="rgb(253,203,35)" fg:x="512" fg:w="2"/><text x="41.5071%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.4182%" y="725" width="0.0806%" height="15" fill="rgb(214,220,52)" fg:x="514" fg:w="1"/><text x="41.6682%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.4182%" y="709" width="0.0806%" height="15" fill="rgb(235,216,33)" fg:x="514" fg:w="1"/><text x="41.6682%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.4182%" y="693" width="0.0806%" height="15" fill="rgb(231,79,26)" fg:x="514" fg:w="1"/><text x="41.6682%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.4182%" y="677" width="0.0806%" height="15" fill="rgb(244,218,10)" fg:x="514" fg:w="1"/><text x="41.6682%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.4182%" y="661" width="0.0806%" height="15" fill="rgb(238,15,9)" fg:x="514" fg:w="1"/><text x="41.6682%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.4182%" y="645" width="0.0806%" height="15" fill="rgb(235,112,15)" fg:x="514" fg:w="1"/><text x="41.6682%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.4182%" y="629" width="0.0806%" height="15" fill="rgb(239,126,18)" fg:x="514" fg:w="1"/><text x="41.6682%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.4182%" y="613" width="0.0806%" height="15" fill="rgb(253,171,19)" fg:x="514" fg:w="1"/><text x="41.6682%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.4182%" y="597" width="0.0806%" height="15" fill="rgb(237,218,25)" fg:x="514" fg:w="1"/><text x="41.6682%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.4182%" y="581" width="0.0806%" height="15" fill="rgb(213,88,46)" fg:x="514" fg:w="1"/><text x="41.6682%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.4182%" y="565" width="0.0806%" height="15" fill="rgb(222,124,54)" fg:x="514" fg:w="1"/><text x="41.6682%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.4182%" y="549" width="0.0806%" height="15" fill="rgb(209,206,42)" fg:x="514" fg:w="1"/><text x="41.6682%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.4182%" y="533" width="0.0806%" height="15" fill="rgb(219,25,49)" fg:x="514" fg:w="1"/><text x="41.6682%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.4988%" y="725" width="0.0806%" height="15" fill="rgb(228,207,53)" fg:x="515" fg:w="1"/><text x="41.7488%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.5794%" y="725" width="0.1612%" height="15" fill="rgb(224,3,4)" fg:x="516" fg:w="2"/><text x="41.8294%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="41.8211%" y="709" width="0.0806%" height="15" fill="rgb(254,206,26)" fg:x="519" fg:w="1"/><text x="42.0711%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="41.9017%" y="709" width="0.1612%" height="15" fill="rgb(209,4,26)" fg:x="520" fg:w="2"/><text x="42.1517%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="41.9017%" y="693" width="0.1612%" height="15" fill="rgb(243,193,32)" fg:x="520" fg:w="2"/><text x="42.1517%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.0629%" y="709" width="0.0806%" height="15" fill="rgb(225,150,36)" fg:x="522" fg:w="1"/><text x="42.3129%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.0629%" y="693" width="0.0806%" height="15" fill="rgb(225,131,26)" fg:x="522" fg:w="1"/><text x="42.3129%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.0629%" y="677" width="0.0806%" height="15" fill="rgb(236,126,12)" fg:x="522" fg:w="1"/><text x="42.3129%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.0629%" y="661" width="0.0806%" height="15" fill="rgb(238,167,44)" fg:x="522" fg:w="1"/><text x="42.3129%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.0629%" y="645" width="0.0806%" height="15" fill="rgb(238,153,31)" fg:x="522" fg:w="1"/><text x="42.3129%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.0629%" y="629" width="0.0806%" height="15" fill="rgb(254,41,51)" fg:x="522" fg:w="1"/><text x="42.3129%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.0629%" y="613" width="0.0806%" height="15" fill="rgb(224,100,52)" fg:x="522" fg:w="1"/><text x="42.3129%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.0629%" y="597" width="0.0806%" height="15" fill="rgb(246,226,38)" fg:x="522" fg:w="1"/><text x="42.3129%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.0629%" y="581" width="0.0806%" height="15" fill="rgb(252,21,43)" fg:x="522" fg:w="1"/><text x="42.3129%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.0629%" y="565" width="0.0806%" height="15" fill="rgb(250,44,8)" fg:x="522" fg:w="1"/><text x="42.3129%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.0629%" y="549" width="0.0806%" height="15" fill="rgb(224,200,45)" fg:x="522" fg:w="1"/><text x="42.3129%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.1434%" y="693" width="0.0806%" height="15" fill="rgb(208,75,52)" fg:x="523" fg:w="1"/><text x="42.3934%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.1434%" y="677" width="0.0806%" height="15" fill="rgb(213,167,20)" fg:x="523" fg:w="1"/><text x="42.3934%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.1434%" y="661" width="0.0806%" height="15" fill="rgb(236,163,42)" fg:x="523" fg:w="1"/><text x="42.3934%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.1434%" y="645" width="0.0806%" height="15" fill="rgb(210,98,31)" fg:x="523" fg:w="1"/><text x="42.3934%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.1434%" y="629" width="0.0806%" height="15" fill="rgb(246,166,15)" fg:x="523" fg:w="1"/><text x="42.3934%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.1434%" y="613" width="0.0806%" height="15" fill="rgb(214,114,7)" fg:x="523" fg:w="1"/><text x="42.3934%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.1434%" y="597" width="0.0806%" height="15" fill="rgb(217,202,34)" fg:x="523" fg:w="1"/><text x="42.3934%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.1434%" y="581" width="0.0806%" height="15" fill="rgb(227,226,29)" fg:x="523" fg:w="1"/><text x="42.3934%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.1434%" y="565" width="0.0806%" height="15" fill="rgb(254,65,44)" fg:x="523" fg:w="1"/><text x="42.3934%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.1434%" y="549" width="0.0806%" height="15" fill="rgb(213,150,32)" fg:x="523" fg:w="1"/><text x="42.3934%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.1434%" y="533" width="0.0806%" height="15" fill="rgb(208,86,46)" fg:x="523" fg:w="1"/><text x="42.3934%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.1434%" y="517" width="0.0806%" height="15" fill="rgb(222,75,3)" fg:x="523" fg:w="1"/><text x="42.3934%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.1434%" y="501" width="0.0806%" height="15" fill="rgb(225,213,9)" fg:x="523" fg:w="1"/><text x="42.3934%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.2240%" y="693" width="0.0806%" height="15" fill="rgb(209,199,10)" fg:x="524" fg:w="1"/><text x="42.4740%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.3046%" y="693" width="0.1612%" height="15" fill="rgb(213,18,17)" fg:x="525" fg:w="2"/><text x="42.5546%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.3852%" y="677" width="0.0806%" height="15" fill="rgb(243,79,44)" fg:x="526" fg:w="1"/><text x="42.6352%" y="687.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (31 samples, 2.50%)</title><rect x="40.0483%" y="757" width="2.4980%" height="15" fill="rgb(226,20,5)" fg:x="497" fg:w="31"/><text x="40.2983%" y="767.50">&lt;k..</text></g><g><title>treediff::diff::diff (20 samples, 1.61%)</title><rect x="40.9347%" y="741" width="1.6116%" height="15" fill="rgb(217,52,31)" fg:x="508" fg:w="20"/><text x="41.1847%" y="751.50"></text></g><g><title>treediff::diff::diff (10 samples, 0.81%)</title><rect x="41.7405%" y="725" width="0.8058%" height="15" fill="rgb(229,42,7)" fg:x="518" fg:w="10"/><text x="41.9905%" y="735.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.40%)</title><rect x="42.1434%" y="709" width="0.4029%" height="15" fill="rgb(206,118,29)" fg:x="523" fg:w="5"/><text x="42.3934%" y="719.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="42.4658%" y="693" width="0.0806%" height="15" fill="rgb(248,132,44)" fg:x="527" fg:w="1"/><text x="42.7158%" y="703.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="42.4658%" y="677" width="0.0806%" height="15" fill="rgb(231,56,33)" fg:x="527" fg:w="1"/><text x="42.7158%" y="687.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="42.4658%" y="661" width="0.0806%" height="15" fill="rgb(208,31,11)" fg:x="527" fg:w="1"/><text x="42.7158%" y="671.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="42.4658%" y="645" width="0.0806%" height="15" fill="rgb(216,56,33)" fg:x="527" fg:w="1"/><text x="42.7158%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="42.5463%" y="757" width="0.0806%" height="15" fill="rgb(213,100,0)" fg:x="528" fg:w="1"/><text x="42.7963%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.5463%" y="741" width="0.0806%" height="15" fill="rgb(236,166,18)" fg:x="528" fg:w="1"/><text x="42.7963%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="42.6269%" y="725" width="0.3223%" height="15" fill="rgb(251,132,12)" fg:x="529" fg:w="4"/><text x="42.8769%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="42.7075%" y="709" width="0.2417%" height="15" fill="rgb(216,117,7)" fg:x="530" fg:w="3"/><text x="42.9575%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="42.7881%" y="693" width="0.1612%" height="15" fill="rgb(243,184,8)" fg:x="531" fg:w="2"/><text x="43.0381%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="42.9492%" y="725" width="0.0806%" height="15" fill="rgb(212,91,32)" fg:x="533" fg:w="1"/><text x="43.1992%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="43.0298%" y="709" width="0.0806%" height="15" fill="rgb(224,147,15)" fg:x="534" fg:w="1"/><text x="43.2798%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="43.0298%" y="725" width="0.2417%" height="15" fill="rgb(228,84,10)" fg:x="534" fg:w="3"/><text x="43.2798%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.1104%" y="709" width="0.1612%" height="15" fill="rgb(221,161,22)" fg:x="535" fg:w="2"/><text x="43.3604%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.1910%" y="693" width="0.0806%" height="15" fill="rgb(250,132,20)" fg:x="536" fg:w="1"/><text x="43.4410%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="43.3521%" y="709" width="0.0806%" height="15" fill="rgb(209,161,12)" fg:x="538" fg:w="1"/><text x="43.6021%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="43.6745%" y="693" width="0.0806%" height="15" fill="rgb(232,142,42)" fg:x="542" fg:w="1"/><text x="43.9245%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.7550%" y="677" width="0.0806%" height="15" fill="rgb(240,228,27)" fg:x="543" fg:w="1"/><text x="44.0050%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.7550%" y="661" width="0.0806%" height="15" fill="rgb(243,0,31)" fg:x="543" fg:w="1"/><text x="44.0050%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.7550%" y="645" width="0.0806%" height="15" fill="rgb(237,100,15)" fg:x="543" fg:w="1"/><text x="44.0050%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="43.8356%" y="661" width="0.0806%" height="15" fill="rgb(230,26,48)" fg:x="544" fg:w="1"/><text x="44.0856%" y="671.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="43.8356%" y="645" width="0.0806%" height="15" fill="rgb(215,7,13)" fg:x="544" fg:w="1"/><text x="44.0856%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="43.8356%" y="629" width="0.0806%" height="15" fill="rgb(227,172,5)" fg:x="544" fg:w="1"/><text x="44.0856%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="44.0774%" y="629" width="0.2417%" height="15" fill="rgb(248,206,14)" fg:x="547" fg:w="3"/><text x="44.3274%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.3191%" y="613" width="0.0806%" height="15" fill="rgb(231,62,54)" fg:x="550" fg:w="1"/><text x="44.5691%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (8 samples, 0.64%)</title><rect x="43.8356%" y="677" width="0.6446%" height="15" fill="rgb(222,136,26)" fg:x="544" fg:w="8"/><text x="44.0856%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="43.9162%" y="661" width="0.5641%" height="15" fill="rgb(211,115,42)" fg:x="545" fg:w="7"/><text x="44.1662%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="44.0774%" y="645" width="0.4029%" height="15" fill="rgb(234,5,17)" fg:x="547" fg:w="5"/><text x="44.3274%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="44.3191%" y="629" width="0.1612%" height="15" fill="rgb(233,67,14)" fg:x="550" fg:w="2"/><text x="44.5691%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="44.3997%" y="613" width="0.0806%" height="15" fill="rgb(225,133,51)" fg:x="551" fg:w="1"/><text x="44.6497%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="44.3997%" y="597" width="0.0806%" height="15" fill="rgb(206,107,40)" fg:x="551" fg:w="1"/><text x="44.6497%" y="607.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="44.8832%" y="613" width="0.2417%" height="15" fill="rgb(210,56,9)" fg:x="557" fg:w="3"/><text x="45.1332%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="44.8026%" y="645" width="0.4029%" height="15" fill="rgb(222,204,4)" fg:x="556" fg:w="5"/><text x="45.0526%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="44.8832%" y="629" width="0.3223%" height="15" fill="rgb(210,168,3)" fg:x="557" fg:w="4"/><text x="45.1332%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="45.1249%" y="613" width="0.0806%" height="15" fill="rgb(246,183,26)" fg:x="560" fg:w="1"/><text x="45.3749%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="45.1249%" y="597" width="0.0806%" height="15" fill="rgb(228,27,31)" fg:x="560" fg:w="1"/><text x="45.3749%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="45.3666%" y="581" width="0.3223%" height="15" fill="rgb(206,8,2)" fg:x="563" fg:w="4"/><text x="45.6166%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="45.4472%" y="565" width="0.2417%" height="15" fill="rgb(251,229,16)" fg:x="564" fg:w="3"/><text x="45.6972%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.6084%" y="549" width="0.0806%" height="15" fill="rgb(208,84,44)" fg:x="566" fg:w="1"/><text x="45.8584%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="45.2861%" y="597" width="0.6446%" height="15" fill="rgb(221,228,13)" fg:x="562" fg:w="8"/><text x="45.5361%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="45.6890%" y="581" width="0.2417%" height="15" fill="rgb(248,42,47)" fg:x="567" fg:w="3"/><text x="45.9390%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="45.6890%" y="565" width="0.2417%" height="15" fill="rgb(222,124,41)" fg:x="567" fg:w="3"/><text x="45.9390%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="45.6890%" y="549" width="0.2417%" height="15" fill="rgb(244,191,35)" fg:x="567" fg:w="3"/><text x="45.9390%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="45.6890%" y="533" width="0.2417%" height="15" fill="rgb(222,223,54)" fg:x="567" fg:w="3"/><text x="45.9390%" y="543.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="45.6890%" y="517" width="0.2417%" height="15" fill="rgb(248,178,42)" fg:x="567" fg:w="3"/><text x="45.9390%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.29%)</title><rect x="44.7220%" y="661" width="1.2893%" height="15" fill="rgb(238,21,24)" fg:x="555" fg:w="16"/><text x="44.9720%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.81%)</title><rect x="45.2055%" y="645" width="0.8058%" height="15" fill="rgb(227,134,7)" fg:x="561" fg:w="10"/><text x="45.4555%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="45.2055%" y="629" width="0.8058%" height="15" fill="rgb(205,191,1)" fg:x="561" fg:w="10"/><text x="45.4555%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.73%)</title><rect x="45.2861%" y="613" width="0.7252%" height="15" fill="rgb(222,166,30)" fg:x="562" fg:w="9"/><text x="45.5361%" y="623.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="45.9307%" y="597" width="0.0806%" height="15" fill="rgb(229,94,26)" fg:x="570" fg:w="1"/><text x="46.1807%" y="607.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="45.9307%" y="581" width="0.0806%" height="15" fill="rgb(246,97,2)" fg:x="570" fg:w="1"/><text x="46.1807%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (29 samples, 2.34%)</title><rect x="43.7550%" y="693" width="2.3368%" height="15" fill="rgb(252,112,53)" fg:x="543" fg:w="29"/><text x="44.0050%" y="703.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 1.61%)</title><rect x="44.4803%" y="677" width="1.6116%" height="15" fill="rgb(225,52,38)" fg:x="552" fg:w="20"/><text x="44.7303%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.0113%" y="661" width="0.0806%" height="15" fill="rgb(215,203,24)" fg:x="571" fg:w="1"/><text x="46.2613%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (35 samples, 2.82%)</title><rect x="43.4327%" y="709" width="2.8203%" height="15" fill="rgb(210,122,52)" fg:x="539" fg:w="35"/><text x="43.6827%" y="719.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="46.0919%" y="693" width="0.1612%" height="15" fill="rgb(209,161,44)" fg:x="572" fg:w="2"/><text x="46.3419%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.1724%" y="677" width="0.0806%" height="15" fill="rgb(221,97,16)" fg:x="573" fg:w="1"/><text x="46.4224%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (46 samples, 3.71%)</title><rect x="42.6269%" y="757" width="3.7067%" height="15" fill="rgb(209,87,13)" fg:x="529" fg:w="46"/><text x="42.8769%" y="767.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (46 samples, 3.71%)</title><rect x="42.6269%" y="741" width="3.7067%" height="15" fill="rgb(242,1,21)" fg:x="529" fg:w="46"/><text x="42.8769%" y="751.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (38 samples, 3.06%)</title><rect x="43.2716%" y="725" width="3.0620%" height="15" fill="rgb(251,170,41)" fg:x="537" fg:w="38"/><text x="43.5216%" y="735.50">ser..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2530%" y="709" width="0.0806%" height="15" fill="rgb(227,201,10)" fg:x="574" fg:w="1"/><text x="46.5030%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2530%" y="693" width="0.0806%" height="15" fill="rgb(231,100,29)" fg:x="574" fg:w="1"/><text x="46.5030%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="46.8977%" y="581" width="0.0806%" height="15" fill="rgb(226,31,35)" fg:x="582" fg:w="1"/><text x="47.1477%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="46.8977%" y="613" width="0.1612%" height="15" fill="rgb(254,99,26)" fg:x="582" fg:w="2"/><text x="47.1477%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.8977%" y="597" width="0.1612%" height="15" fill="rgb(217,228,17)" fg:x="582" fg:w="2"/><text x="47.1477%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9782%" y="581" width="0.0806%" height="15" fill="rgb(226,132,8)" fg:x="583" fg:w="1"/><text x="47.2282%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9782%" y="565" width="0.0806%" height="15" fill="rgb(220,202,47)" fg:x="583" fg:w="1"/><text x="47.2282%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.9782%" y="549" width="0.0806%" height="15" fill="rgb(245,194,10)" fg:x="583" fg:w="1"/><text x="47.2282%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="47.1394%" y="581" width="0.0806%" height="15" fill="rgb(225,44,52)" fg:x="585" fg:w="1"/><text x="47.3894%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="47.3811%" y="533" width="0.1612%" height="15" fill="rgb(235,10,4)" fg:x="588" fg:w="2"/><text x="47.6311%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="47.3811%" y="517" width="0.1612%" height="15" fill="rgb(244,32,23)" fg:x="588" fg:w="2"/><text x="47.6311%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.4617%" y="501" width="0.0806%" height="15" fill="rgb(210,115,0)" fg:x="589" fg:w="1"/><text x="47.7117%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.4617%" y="485" width="0.0806%" height="15" fill="rgb(246,72,16)" fg:x="589" fg:w="1"/><text x="47.7117%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.4617%" y="469" width="0.0806%" height="15" fill="rgb(223,32,10)" fg:x="589" fg:w="1"/><text x="47.7117%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="47.5423%" y="517" width="0.0806%" height="15" fill="rgb(223,97,52)" fg:x="590" fg:w="1"/><text x="47.7923%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="47.0588%" y="597" width="0.6446%" height="15" fill="rgb(238,69,38)" fg:x="584" fg:w="8"/><text x="47.3088%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="47.2200%" y="581" width="0.4835%" height="15" fill="rgb(226,61,1)" fg:x="586" fg:w="6"/><text x="47.4700%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="47.3006%" y="565" width="0.4029%" height="15" fill="rgb(244,56,14)" fg:x="587" fg:w="5"/><text x="47.5506%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="47.3006%" y="549" width="0.4029%" height="15" fill="rgb(242,164,18)" fg:x="587" fg:w="5"/><text x="47.5506%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="47.5423%" y="533" width="0.1612%" height="15" fill="rgb(217,130,28)" fg:x="590" fg:w="2"/><text x="47.7923%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.6229%" y="517" width="0.0806%" height="15" fill="rgb(218,118,52)" fg:x="591" fg:w="1"/><text x="47.8729%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="47.7035%" y="597" width="0.1612%" height="15" fill="rgb(251,112,38)" fg:x="592" fg:w="2"/><text x="47.9535%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.7840%" y="581" width="0.0806%" height="15" fill="rgb(239,14,50)" fg:x="593" fg:w="1"/><text x="48.0340%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.13%)</title><rect x="46.8171%" y="629" width="1.1281%" height="15" fill="rgb(228,141,54)" fg:x="581" fg:w="14"/><text x="47.0671%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.89%)</title><rect x="47.0588%" y="613" width="0.8864%" height="15" fill="rgb(236,128,15)" fg:x="584" fg:w="11"/><text x="47.3088%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.8646%" y="597" width="0.0806%" height="15" fill="rgb(206,140,54)" fg:x="594" fg:w="1"/><text x="48.1146%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.8646%" y="581" width="0.0806%" height="15" fill="rgb(240,0,44)" fg:x="594" fg:w="1"/><text x="48.1146%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.45%)</title><rect x="46.8171%" y="645" width="1.4504%" height="15" fill="rgb(243,207,23)" fg:x="581" fg:w="18"/><text x="47.0671%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="47.9452%" y="629" width="0.3223%" height="15" fill="rgb(247,202,1)" fg:x="595" fg:w="4"/><text x="48.1952%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.1064%" y="613" width="0.1612%" height="15" fill="rgb(239,83,27)" fg:x="597" fg:w="2"/><text x="48.3564%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="48.1064%" y="597" width="0.1612%" height="15" fill="rgb(219,205,7)" fg:x="597" fg:w="2"/><text x="48.3564%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.61%)</title><rect x="46.7365%" y="661" width="1.6116%" height="15" fill="rgb(249,184,22)" fg:x="580" fg:w="20"/><text x="46.9865%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.2675%" y="645" width="0.0806%" height="15" fill="rgb(230,150,14)" fg:x="599" fg:w="1"/><text x="48.5175%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (4 samples, 0.32%)</title><rect x="48.4287%" y="645" width="0.3223%" height="15" fill="rgb(240,118,34)" fg:x="601" fg:w="4"/><text x="48.6787%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (29 samples, 2.34%)</title><rect x="46.4948%" y="693" width="2.3368%" height="15" fill="rgb(227,162,21)" fg:x="577" fg:w="29"/><text x="46.7448%" y="703.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (27 samples, 2.18%)</title><rect x="46.6559%" y="677" width="2.1757%" height="15" fill="rgb(219,14,9)" fg:x="579" fg:w="27"/><text x="46.9059%" y="687.50">&lt;..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (6 samples, 0.48%)</title><rect x="48.3481%" y="661" width="0.4835%" height="15" fill="rgb(223,226,16)" fg:x="600" fg:w="6"/><text x="48.5981%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.7510%" y="645" width="0.0806%" height="15" fill="rgb(246,161,37)" fg:x="605" fg:w="1"/><text x="49.0010%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="48.9122%" y="677" width="0.1612%" height="15" fill="rgb(205,221,43)" fg:x="607" fg:w="2"/><text x="49.1622%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="48.8316%" y="693" width="0.3223%" height="15" fill="rgb(228,216,26)" fg:x="606" fg:w="4"/><text x="49.0816%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.0733%" y="677" width="0.0806%" height="15" fill="rgb(251,33,17)" fg:x="609" fg:w="1"/><text x="49.3233%" y="687.50"></text></g><g><title>engine::session::Session::close (206 samples, 16.60%)</title><rect x="32.6350%" y="853" width="16.5995%" height="15" fill="rgb(246,126,36)" fg:x="405" fg:w="206"/><text x="32.8850%" y="863.50">engine::session::Session::..</text></g><g><title>engine::session::state::State::close (197 samples, 15.87%)</title><rect x="33.3602%" y="837" width="15.8743%" height="15" fill="rgb(217,160,24)" fg:x="414" fg:w="197"/><text x="33.6102%" y="847.50">engine::session::state::..</text></g><g><title>engine::session::state::State::flush_entities (180 samples, 14.50%)</title><rect x="34.7301%" y="821" width="14.5044%" height="15" fill="rgb(211,64,12)" fg:x="431" fg:w="180"/><text x="34.9801%" y="831.50">engine::session::state..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (177 samples, 14.26%)</title><rect x="34.9718%" y="805" width="14.2627%" height="15" fill="rgb(238,47,36)" fg:x="434" fg:w="177"/><text x="35.2218%" y="815.50">engine::session::inter..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (177 samples, 14.26%)</title><rect x="34.9718%" y="789" width="14.2627%" height="15" fill="rgb(210,157,42)" fg:x="434" fg:w="177"/><text x="35.2218%" y="799.50">engine::session::state..</text></g><g><title>kernel::model::any_entity_changes (114 samples, 9.19%)</title><rect x="40.0483%" y="773" width="9.1861%" height="15" fill="rgb(242,84,39)" fg:x="497" fg:w="114"/><text x="40.2983%" y="783.50">kernel::model..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (36 samples, 2.90%)</title><rect x="46.3336%" y="757" width="2.9009%" height="15" fill="rgb(207,65,41)" fg:x="575" fg:w="36"/><text x="46.5836%" y="767.50">se..</text></g><g><title>serde_json::de::from_trait (36 samples, 2.90%)</title><rect x="46.3336%" y="741" width="2.9009%" height="15" fill="rgb(246,97,27)" fg:x="575" fg:w="36"/><text x="46.5836%" y="751.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (36 samples, 2.90%)</title><rect x="46.3336%" y="725" width="2.9009%" height="15" fill="rgb(229,9,43)" fg:x="575" fg:w="36"/><text x="46.5836%" y="735.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (35 samples, 2.82%)</title><rect x="46.4142%" y="709" width="2.8203%" height="15" fill="rgb(211,82,44)" fg:x="576" fg:w="35"/><text x="46.6642%" y="719.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.1539%" y="693" width="0.0806%" height="15" fill="rgb(253,45,54)" fg:x="610" fg:w="1"/><text x="49.4039%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.7180%" y="693" width="0.0806%" height="15" fill="rgb(235,94,32)" fg:x="617" fg:w="1"/><text x="49.9680%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.7180%" y="677" width="0.0806%" height="15" fill="rgb(252,143,1)" fg:x="617" fg:w="1"/><text x="49.9680%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.7180%" y="661" width="0.0806%" height="15" fill="rgb(239,164,4)" fg:x="617" fg:w="1"/><text x="49.9680%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.7180%" y="645" width="0.0806%" height="15" fill="rgb(222,25,39)" fg:x="617" fg:w="1"/><text x="49.9680%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.7180%" y="629" width="0.0806%" height="15" fill="rgb(234,175,9)" fg:x="617" fg:w="1"/><text x="49.9680%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="49.7180%" y="613" width="0.0806%" height="15" fill="rgb(247,200,41)" fg:x="617" fg:w="1"/><text x="49.9680%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.7180%" y="597" width="0.0806%" height="15" fill="rgb(245,101,27)" fg:x="617" fg:w="1"/><text x="49.9680%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.7985%" y="645" width="0.0806%" height="15" fill="rgb(221,29,7)" fg:x="618" fg:w="1"/><text x="50.0485%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.7985%" y="629" width="0.0806%" height="15" fill="rgb(240,184,10)" fg:x="618" fg:w="1"/><text x="50.0485%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.8791%" y="517" width="0.0806%" height="15" fill="rgb(251,85,15)" fg:x="619" fg:w="1"/><text x="50.1291%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.8791%" y="501" width="0.0806%" height="15" fill="rgb(252,84,16)" fg:x="619" fg:w="1"/><text x="50.1291%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.8791%" y="485" width="0.0806%" height="15" fill="rgb(233,136,6)" fg:x="619" fg:w="1"/><text x="50.1291%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.8791%" y="469" width="0.0806%" height="15" fill="rgb(226,169,30)" fg:x="619" fg:w="1"/><text x="50.1291%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.8791%" y="453" width="0.0806%" height="15" fill="rgb(241,83,18)" fg:x="619" fg:w="1"/><text x="50.1291%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.8791%" y="437" width="0.0806%" height="15" fill="rgb(239,151,5)" fg:x="619" fg:w="1"/><text x="50.1291%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.8791%" y="421" width="0.0806%" height="15" fill="rgb(238,56,13)" fg:x="619" fg:w="1"/><text x="50.1291%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (5 samples, 0.40%)</title><rect x="49.6374%" y="741" width="0.4029%" height="15" fill="rgb(224,100,0)" fg:x="616" fg:w="5"/><text x="49.8874%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.40%)</title><rect x="49.6374%" y="725" width="0.4029%" height="15" fill="rgb(231,168,26)" fg:x="616" fg:w="5"/><text x="49.8874%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="49.7180%" y="709" width="0.3223%" height="15" fill="rgb(238,110,3)" fg:x="617" fg:w="4"/><text x="49.9680%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="49.7985%" y="693" width="0.2417%" height="15" fill="rgb(216,190,1)" fg:x="618" fg:w="3"/><text x="50.0485%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="49.7985%" y="677" width="0.2417%" height="15" fill="rgb(208,130,52)" fg:x="618" fg:w="3"/><text x="50.0485%" y="687.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="49.7985%" y="661" width="0.2417%" height="15" fill="rgb(233,74,12)" fg:x="618" fg:w="3"/><text x="50.0485%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="49.8791%" y="645" width="0.1612%" height="15" fill="rgb(248,12,15)" fg:x="619" fg:w="2"/><text x="50.1291%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="49.8791%" y="629" width="0.1612%" height="15" fill="rgb(228,18,29)" fg:x="619" fg:w="2"/><text x="50.1291%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="49.8791%" y="613" width="0.1612%" height="15" fill="rgb(206,153,11)" fg:x="619" fg:w="2"/><text x="50.1291%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="49.8791%" y="597" width="0.1612%" height="15" fill="rgb(216,50,30)" fg:x="619" fg:w="2"/><text x="50.1291%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="49.8791%" y="581" width="0.1612%" height="15" fill="rgb(217,20,39)" fg:x="619" fg:w="2"/><text x="50.1291%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="49.8791%" y="565" width="0.1612%" height="15" fill="rgb(232,130,46)" fg:x="619" fg:w="2"/><text x="50.1291%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="49.8791%" y="549" width="0.1612%" height="15" fill="rgb(233,141,43)" fg:x="619" fg:w="2"/><text x="50.1291%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="49.8791%" y="533" width="0.1612%" height="15" fill="rgb(240,64,34)" fg:x="619" fg:w="2"/><text x="50.1291%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.9597%" y="517" width="0.0806%" height="15" fill="rgb(230,28,31)" fg:x="620" fg:w="1"/><text x="50.2097%" y="527.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="49.9597%" y="501" width="0.0806%" height="15" fill="rgb(223,56,30)" fg:x="620" fg:w="1"/><text x="50.2097%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.9597%" y="485" width="0.0806%" height="15" fill="rgb(248,134,16)" fg:x="620" fg:w="1"/><text x="50.2097%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.9597%" y="469" width="0.0806%" height="15" fill="rgb(206,202,4)" fg:x="620" fg:w="1"/><text x="50.2097%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.9597%" y="453" width="0.0806%" height="15" fill="rgb(219,116,48)" fg:x="620" fg:w="1"/><text x="50.2097%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.9597%" y="437" width="0.0806%" height="15" fill="rgb(224,122,46)" fg:x="620" fg:w="1"/><text x="50.2097%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.9597%" y="421" width="0.0806%" height="15" fill="rgb(219,114,47)" fg:x="620" fg:w="1"/><text x="50.2097%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.9597%" y="405" width="0.0806%" height="15" fill="rgb(244,60,44)" fg:x="620" fg:w="1"/><text x="50.2097%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.9597%" y="389" width="0.0806%" height="15" fill="rgb(243,226,25)" fg:x="620" fg:w="1"/><text x="50.2097%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.9597%" y="373" width="0.0806%" height="15" fill="rgb(243,101,52)" fg:x="620" fg:w="1"/><text x="50.2097%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.9597%" y="357" width="0.0806%" height="15" fill="rgb(207,69,25)" fg:x="620" fg:w="1"/><text x="50.2097%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.9597%" y="341" width="0.0806%" height="15" fill="rgb(222,204,53)" fg:x="620" fg:w="1"/><text x="50.2097%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.9597%" y="325" width="0.0806%" height="15" fill="rgb(234,84,49)" fg:x="620" fg:w="1"/><text x="50.2097%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.9597%" y="309" width="0.0806%" height="15" fill="rgb(233,77,41)" fg:x="620" fg:w="1"/><text x="50.2097%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.9597%" y="293" width="0.0806%" height="15" fill="rgb(221,200,42)" fg:x="620" fg:w="1"/><text x="50.2097%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.9597%" y="277" width="0.0806%" height="15" fill="rgb(221,29,35)" fg:x="620" fg:w="1"/><text x="50.2097%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="49.9597%" y="261" width="0.0806%" height="15" fill="rgb(221,71,22)" fg:x="620" fg:w="1"/><text x="50.2097%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="49.9597%" y="245" width="0.0806%" height="15" fill="rgb(216,162,23)" fg:x="620" fg:w="1"/><text x="50.2097%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="49.9597%" y="229" width="0.0806%" height="15" fill="rgb(248,32,48)" fg:x="620" fg:w="1"/><text x="50.2097%" y="239.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="49.9597%" y="213" width="0.0806%" height="15" fill="rgb(241,156,30)" fg:x="620" fg:w="1"/><text x="50.2097%" y="223.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="50.1209%" y="677" width="0.0806%" height="15" fill="rgb(237,196,46)" fg:x="622" fg:w="1"/><text x="50.3709%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.2015%" y="485" width="0.0806%" height="15" fill="rgb(216,2,6)" fg:x="623" fg:w="1"/><text x="50.4515%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="50.2015%" y="469" width="0.0806%" height="15" fill="rgb(214,47,16)" fg:x="623" fg:w="1"/><text x="50.4515%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="50.2015%" y="453" width="0.0806%" height="15" fill="rgb(240,123,13)" fg:x="623" fg:w="1"/><text x="50.4515%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="50.2015%" y="629" width="0.1612%" height="15" fill="rgb(206,47,48)" fg:x="623" fg:w="2"/><text x="50.4515%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="50.2015%" y="613" width="0.1612%" height="15" fill="rgb(252,88,27)" fg:x="623" fg:w="2"/><text x="50.4515%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="50.2015%" y="597" width="0.1612%" height="15" fill="rgb(218,105,30)" fg:x="623" fg:w="2"/><text x="50.4515%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.2015%" y="581" width="0.1612%" height="15" fill="rgb(227,52,46)" fg:x="623" fg:w="2"/><text x="50.4515%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.2015%" y="565" width="0.1612%" height="15" fill="rgb(222,190,21)" fg:x="623" fg:w="2"/><text x="50.4515%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.2015%" y="549" width="0.1612%" height="15" fill="rgb(205,86,20)" fg:x="623" fg:w="2"/><text x="50.4515%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.2015%" y="533" width="0.1612%" height="15" fill="rgb(233,45,1)" fg:x="623" fg:w="2"/><text x="50.4515%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="50.2015%" y="517" width="0.1612%" height="15" fill="rgb(208,39,6)" fg:x="623" fg:w="2"/><text x="50.4515%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.2015%" y="501" width="0.1612%" height="15" fill="rgb(211,178,22)" fg:x="623" fg:w="2"/><text x="50.4515%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.2820%" y="485" width="0.0806%" height="15" fill="rgb(227,112,23)" fg:x="624" fg:w="1"/><text x="50.5320%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.2820%" y="469" width="0.0806%" height="15" fill="rgb(214,41,4)" fg:x="624" fg:w="1"/><text x="50.5320%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="50.2015%" y="661" width="0.2417%" height="15" fill="rgb(219,144,46)" fg:x="623" fg:w="3"/><text x="50.4515%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="50.2015%" y="645" width="0.2417%" height="15" fill="rgb(253,176,50)" fg:x="623" fg:w="3"/><text x="50.4515%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="50.3626%" y="629" width="0.0806%" height="15" fill="rgb(206,123,1)" fg:x="625" fg:w="1"/><text x="50.6126%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.3626%" y="613" width="0.0806%" height="15" fill="rgb(250,111,32)" fg:x="625" fg:w="1"/><text x="50.6126%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.3626%" y="597" width="0.0806%" height="15" fill="rgb(229,17,49)" fg:x="625" fg:w="1"/><text x="50.6126%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.3626%" y="581" width="0.0806%" height="15" fill="rgb(250,123,19)" fg:x="625" fg:w="1"/><text x="50.6126%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.3626%" y="565" width="0.0806%" height="15" fill="rgb(220,124,20)" fg:x="625" fg:w="1"/><text x="50.6126%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.3626%" y="549" width="0.0806%" height="15" fill="rgb(242,85,25)" fg:x="625" fg:w="1"/><text x="50.6126%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.3626%" y="533" width="0.0806%" height="15" fill="rgb(245,217,7)" fg:x="625" fg:w="1"/><text x="50.6126%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.3626%" y="517" width="0.0806%" height="15" fill="rgb(242,50,25)" fg:x="625" fg:w="1"/><text x="50.6126%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.3626%" y="501" width="0.0806%" height="15" fill="rgb(251,210,24)" fg:x="625" fg:w="1"/><text x="50.6126%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.3626%" y="485" width="0.0806%" height="15" fill="rgb(238,24,8)" fg:x="625" fg:w="1"/><text x="50.6126%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.3626%" y="469" width="0.0806%" height="15" fill="rgb(211,96,19)" fg:x="625" fg:w="1"/><text x="50.6126%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.3626%" y="453" width="0.0806%" height="15" fill="rgb(222,186,12)" fg:x="625" fg:w="1"/><text x="50.6126%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.3626%" y="437" width="0.0806%" height="15" fill="rgb(212,70,49)" fg:x="625" fg:w="1"/><text x="50.6126%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.6044%" y="597" width="0.0806%" height="15" fill="rgb(238,69,49)" fg:x="628" fg:w="1"/><text x="50.8544%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.6044%" y="581" width="0.0806%" height="15" fill="rgb(225,13,3)" fg:x="628" fg:w="1"/><text x="50.8544%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.8461%" y="469" width="0.0806%" height="15" fill="rgb(229,188,14)" fg:x="631" fg:w="1"/><text x="51.0961%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="50.8461%" y="453" width="0.0806%" height="15" fill="rgb(218,58,16)" fg:x="631" fg:w="1"/><text x="51.0961%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.9267%" y="437" width="0.0806%" height="15" fill="rgb(206,213,49)" fg:x="632" fg:w="1"/><text x="51.1767%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="50.9267%" y="421" width="0.0806%" height="15" fill="rgb(225,152,48)" fg:x="632" fg:w="1"/><text x="51.1767%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.8461%" y="517" width="0.2417%" height="15" fill="rgb(216,103,42)" fg:x="631" fg:w="3"/><text x="51.0961%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="50.8461%" y="501" width="0.2417%" height="15" fill="rgb(212,214,39)" fg:x="631" fg:w="3"/><text x="51.0961%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.8461%" y="485" width="0.2417%" height="15" fill="rgb(249,52,41)" fg:x="631" fg:w="3"/><text x="51.0961%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="50.9267%" y="469" width="0.1612%" height="15" fill="rgb(212,173,53)" fg:x="632" fg:w="2"/><text x="51.1767%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="50.9267%" y="453" width="0.1612%" height="15" fill="rgb(232,222,21)" fg:x="632" fg:w="2"/><text x="51.1767%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.0073%" y="437" width="0.0806%" height="15" fill="rgb(206,228,31)" fg:x="633" fg:w="1"/><text x="51.2573%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.0073%" y="421" width="0.0806%" height="15" fill="rgb(231,121,16)" fg:x="633" fg:w="1"/><text x="51.2573%" y="431.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.73%)</title><rect x="50.4432%" y="645" width="0.7252%" height="15" fill="rgb(241,3,23)" fg:x="626" fg:w="9"/><text x="50.6932%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="50.5238%" y="629" width="0.6446%" height="15" fill="rgb(220,68,37)" fg:x="627" fg:w="8"/><text x="50.7738%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="50.5238%" y="613" width="0.6446%" height="15" fill="rgb(212,23,49)" fg:x="627" fg:w="8"/><text x="50.7738%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="50.6849%" y="597" width="0.4835%" height="15" fill="rgb(231,38,8)" fg:x="629" fg:w="6"/><text x="50.9349%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="50.6849%" y="581" width="0.4835%" height="15" fill="rgb(222,137,29)" fg:x="629" fg:w="6"/><text x="50.9349%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="50.8461%" y="565" width="0.3223%" height="15" fill="rgb(239,8,6)" fg:x="631" fg:w="4"/><text x="51.0961%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="50.8461%" y="549" width="0.3223%" height="15" fill="rgb(224,142,47)" fg:x="631" fg:w="4"/><text x="51.0961%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="50.8461%" y="533" width="0.3223%" height="15" fill="rgb(226,67,29)" fg:x="631" fg:w="4"/><text x="51.0961%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.0878%" y="517" width="0.0806%" height="15" fill="rgb(212,144,29)" fg:x="634" fg:w="1"/><text x="51.3378%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.0878%" y="501" width="0.0806%" height="15" fill="rgb(252,2,51)" fg:x="634" fg:w="1"/><text x="51.3378%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.0878%" y="485" width="0.0806%" height="15" fill="rgb(246,103,52)" fg:x="634" fg:w="1"/><text x="51.3378%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="51.2490%" y="565" width="0.0806%" height="15" fill="rgb(229,229,35)" fg:x="636" fg:w="1"/><text x="51.4990%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.2490%" y="549" width="0.0806%" height="15" fill="rgb(209,83,15)" fg:x="636" fg:w="1"/><text x="51.4990%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="51.2490%" y="533" width="0.0806%" height="15" fill="rgb(218,54,16)" fg:x="636" fg:w="1"/><text x="51.4990%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.97%)</title><rect x="50.4432%" y="661" width="0.9670%" height="15" fill="rgb(205,2,26)" fg:x="626" fg:w="12"/><text x="50.6932%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="51.1684%" y="645" width="0.2417%" height="15" fill="rgb(248,180,0)" fg:x="635" fg:w="3"/><text x="51.4184%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.1684%" y="629" width="0.2417%" height="15" fill="rgb(231,136,16)" fg:x="635" fg:w="3"/><text x="51.4184%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="51.2490%" y="613" width="0.1612%" height="15" fill="rgb(215,90,4)" fg:x="636" fg:w="2"/><text x="51.4990%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.2490%" y="597" width="0.1612%" height="15" fill="rgb(251,131,3)" fg:x="636" fg:w="2"/><text x="51.4990%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="51.2490%" y="581" width="0.1612%" height="15" fill="rgb(244,47,21)" fg:x="636" fg:w="2"/><text x="51.4990%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.3296%" y="565" width="0.0806%" height="15" fill="rgb(231,115,9)" fg:x="637" fg:w="1"/><text x="51.5796%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.3296%" y="549" width="0.0806%" height="15" fill="rgb(241,119,20)" fg:x="637" fg:w="1"/><text x="51.5796%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="51.3296%" y="533" width="0.0806%" height="15" fill="rgb(224,99,0)" fg:x="637" fg:w="1"/><text x="51.5796%" y="543.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="51.3296%" y="517" width="0.0806%" height="15" fill="rgb(219,213,18)" fg:x="637" fg:w="1"/><text x="51.5796%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.4102%" y="549" width="0.0806%" height="15" fill="rgb(209,71,34)" fg:x="638" fg:w="1"/><text x="51.6602%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.4102%" y="533" width="0.0806%" height="15" fill="rgb(245,203,20)" fg:x="638" fg:w="1"/><text x="51.6602%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.4102%" y="613" width="0.2417%" height="15" fill="rgb(221,44,20)" fg:x="638" fg:w="3"/><text x="51.6602%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.4102%" y="597" width="0.2417%" height="15" fill="rgb(229,97,0)" fg:x="638" fg:w="3"/><text x="51.6602%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.4102%" y="581" width="0.2417%" height="15" fill="rgb(206,56,49)" fg:x="638" fg:w="3"/><text x="51.6602%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.4102%" y="565" width="0.2417%" height="15" fill="rgb(208,216,41)" fg:x="638" fg:w="3"/><text x="51.6602%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.4907%" y="549" width="0.1612%" height="15" fill="rgb(231,31,6)" fg:x="639" fg:w="2"/><text x="51.7407%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.4907%" y="533" width="0.1612%" height="15" fill="rgb(239,88,23)" fg:x="639" fg:w="2"/><text x="51.7407%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="51.4907%" y="517" width="0.1612%" height="15" fill="rgb(227,111,45)" fg:x="639" fg:w="2"/><text x="51.7407%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="51.4907%" y="501" width="0.1612%" height="15" fill="rgb(207,167,18)" fg:x="639" fg:w="2"/><text x="51.7407%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="51.4907%" y="485" width="0.1612%" height="15" fill="rgb(253,127,17)" fg:x="639" fg:w="2"/><text x="51.7407%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.4907%" y="469" width="0.1612%" height="15" fill="rgb(211,229,9)" fg:x="639" fg:w="2"/><text x="51.7407%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.4907%" y="453" width="0.1612%" height="15" fill="rgb(249,25,14)" fg:x="639" fg:w="2"/><text x="51.7407%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="51.4907%" y="437" width="0.1612%" height="15" fill="rgb(237,177,4)" fg:x="639" fg:w="2"/><text x="51.7407%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="51.4907%" y="421" width="0.1612%" height="15" fill="rgb(248,163,50)" fg:x="639" fg:w="2"/><text x="51.7407%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="51.4907%" y="405" width="0.1612%" height="15" fill="rgb(246,67,42)" fg:x="639" fg:w="2"/><text x="51.7407%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="51.4907%" y="389" width="0.1612%" height="15" fill="rgb(228,136,45)" fg:x="639" fg:w="2"/><text x="51.7407%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.5713%" y="373" width="0.0806%" height="15" fill="rgb(218,93,4)" fg:x="640" fg:w="1"/><text x="51.8213%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.6519%" y="485" width="0.0806%" height="15" fill="rgb(209,82,29)" fg:x="641" fg:w="1"/><text x="51.9019%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.6519%" y="469" width="0.0806%" height="15" fill="rgb(213,219,38)" fg:x="641" fg:w="1"/><text x="51.9019%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.6519%" y="453" width="0.0806%" height="15" fill="rgb(233,212,17)" fg:x="641" fg:w="1"/><text x="51.9019%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (22 samples, 1.77%)</title><rect x="50.0403%" y="709" width="1.7728%" height="15" fill="rgb(225,65,3)" fg:x="621" fg:w="22"/><text x="50.2903%" y="719.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (22 samples, 1.77%)</title><rect x="50.0403%" y="693" width="1.7728%" height="15" fill="rgb(226,25,1)" fg:x="621" fg:w="22"/><text x="50.2903%" y="703.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (20 samples, 1.61%)</title><rect x="50.2015%" y="677" width="1.6116%" height="15" fill="rgb(229,83,27)" fg:x="623" fg:w="20"/><text x="50.4515%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="51.4102%" y="661" width="0.4029%" height="15" fill="rgb(245,80,47)" fg:x="638" fg:w="5"/><text x="51.6602%" y="671.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="51.4102%" y="645" width="0.4029%" height="15" fill="rgb(213,79,27)" fg:x="638" fg:w="5"/><text x="51.6602%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="51.4102%" y="629" width="0.4029%" height="15" fill="rgb(232,38,28)" fg:x="638" fg:w="5"/><text x="51.6602%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.6519%" y="613" width="0.1612%" height="15" fill="rgb(253,63,39)" fg:x="641" fg:w="2"/><text x="51.9019%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.6519%" y="597" width="0.1612%" height="15" fill="rgb(222,204,17)" fg:x="641" fg:w="2"/><text x="51.9019%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.6519%" y="581" width="0.1612%" height="15" fill="rgb(254,135,49)" fg:x="641" fg:w="2"/><text x="51.9019%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.6519%" y="565" width="0.1612%" height="15" fill="rgb(226,203,24)" fg:x="641" fg:w="2"/><text x="51.9019%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="51.6519%" y="549" width="0.1612%" height="15" fill="rgb(225,2,17)" fg:x="641" fg:w="2"/><text x="51.9019%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.6519%" y="533" width="0.1612%" height="15" fill="rgb(234,135,43)" fg:x="641" fg:w="2"/><text x="51.9019%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.6519%" y="517" width="0.1612%" height="15" fill="rgb(224,14,46)" fg:x="641" fg:w="2"/><text x="51.9019%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.6519%" y="501" width="0.1612%" height="15" fill="rgb(206,42,0)" fg:x="641" fg:w="2"/><text x="51.9019%" y="511.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="51.7325%" y="485" width="0.0806%" height="15" fill="rgb(244,38,23)" fg:x="642" fg:w="1"/><text x="51.9825%" y="495.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.8131%" y="709" width="0.0806%" height="15" fill="rgb(230,25,21)" fg:x="643" fg:w="1"/><text x="52.0631%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.8131%" y="693" width="0.0806%" height="15" fill="rgb(252,217,28)" fg:x="643" fg:w="1"/><text x="52.0631%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.8131%" y="677" width="0.0806%" height="15" fill="rgb(251,4,49)" fg:x="643" fg:w="1"/><text x="52.0631%" y="687.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (29 samples, 2.34%)</title><rect x="49.6374%" y="757" width="2.3368%" height="15" fill="rgb(217,126,31)" fg:x="616" fg:w="29"/><text x="49.8874%" y="767.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (24 samples, 1.93%)</title><rect x="50.0403%" y="741" width="1.9339%" height="15" fill="rgb(242,181,33)" fg:x="621" fg:w="24"/><text x="50.2903%" y="751.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (24 samples, 1.93%)</title><rect x="50.0403%" y="725" width="1.9339%" height="15" fill="rgb(241,108,6)" fg:x="621" fg:w="24"/><text x="50.2903%" y="735.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.8936%" y="709" width="0.0806%" height="15" fill="rgb(238,87,39)" fg:x="644" fg:w="1"/><text x="52.1436%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.8936%" y="693" width="0.0806%" height="15" fill="rgb(244,101,49)" fg:x="644" fg:w="1"/><text x="52.1436%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.8936%" y="677" width="0.0806%" height="15" fill="rgb(211,43,42)" fg:x="644" fg:w="1"/><text x="52.1436%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.8936%" y="661" width="0.0806%" height="15" fill="rgb(210,93,2)" fg:x="644" fg:w="1"/><text x="52.1436%" y="671.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (31 samples, 2.50%)</title><rect x="49.6374%" y="773" width="2.4980%" height="15" fill="rgb(242,149,32)" fg:x="616" fg:w="31"/><text x="49.8874%" y="783.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="51.9742%" y="757" width="0.1612%" height="15" fill="rgb(228,1,6)" fg:x="645" fg:w="2"/><text x="52.2242%" y="767.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="51.9742%" y="741" width="0.1612%" height="15" fill="rgb(221,0,20)" fg:x="645" fg:w="2"/><text x="52.2242%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="51.9742%" y="725" width="0.1612%" height="15" fill="rgb(230,39,32)" fg:x="645" fg:w="2"/><text x="52.2242%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="51.9742%" y="709" width="0.1612%" height="15" fill="rgb(240,89,38)" fg:x="645" fg:w="2"/><text x="52.2242%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="52.0548%" y="693" width="0.0806%" height="15" fill="rgb(208,221,23)" fg:x="646" fg:w="1"/><text x="52.3048%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="52.0548%" y="677" width="0.0806%" height="15" fill="rgb(220,145,29)" fg:x="646" fg:w="1"/><text x="52.3048%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.0548%" y="661" width="0.0806%" height="15" fill="rgb(219,146,23)" fg:x="646" fg:w="1"/><text x="52.3048%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.0548%" y="645" width="0.0806%" height="15" fill="rgb(244,114,49)" fg:x="646" fg:w="1"/><text x="52.3048%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="52.0548%" y="629" width="0.0806%" height="15" fill="rgb(221,17,10)" fg:x="646" fg:w="1"/><text x="52.3048%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="52.0548%" y="613" width="0.0806%" height="15" fill="rgb(228,133,21)" fg:x="646" fg:w="1"/><text x="52.3048%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.0548%" y="597" width="0.0806%" height="15" fill="rgb(218,81,30)" fg:x="646" fg:w="1"/><text x="52.3048%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.0548%" y="581" width="0.0806%" height="15" fill="rgb(240,29,36)" fg:x="646" fg:w="1"/><text x="52.3048%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="52.0548%" y="565" width="0.0806%" height="15" fill="rgb(246,0,36)" fg:x="646" fg:w="1"/><text x="52.3048%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="52.0548%" y="549" width="0.0806%" height="15" fill="rgb(217,79,8)" fg:x="646" fg:w="1"/><text x="52.3048%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.1354%" y="773" width="0.0806%" height="15" fill="rgb(229,124,44)" fg:x="647" fg:w="1"/><text x="52.3854%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.1354%" y="757" width="0.0806%" height="15" fill="rgb(210,187,22)" fg:x="647" fg:w="1"/><text x="52.3854%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.1354%" y="741" width="0.0806%" height="15" fill="rgb(212,115,40)" fg:x="647" fg:w="1"/><text x="52.3854%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.1354%" y="725" width="0.0806%" height="15" fill="rgb(210,2,54)" fg:x="647" fg:w="1"/><text x="52.3854%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.1354%" y="709" width="0.0806%" height="15" fill="rgb(227,168,43)" fg:x="647" fg:w="1"/><text x="52.3854%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.1354%" y="693" width="0.0806%" height="15" fill="rgb(249,92,8)" fg:x="647" fg:w="1"/><text x="52.3854%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.1354%" y="677" width="0.0806%" height="15" fill="rgb(239,111,35)" fg:x="647" fg:w="1"/><text x="52.3854%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.1354%" y="661" width="0.0806%" height="15" fill="rgb(230,126,13)" fg:x="647" fg:w="1"/><text x="52.3854%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.1354%" y="645" width="0.0806%" height="15" fill="rgb(243,116,33)" fg:x="647" fg:w="1"/><text x="52.3854%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.1354%" y="629" width="0.0806%" height="15" fill="rgb(246,103,21)" fg:x="647" fg:w="1"/><text x="52.3854%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.1354%" y="613" width="0.0806%" height="15" fill="rgb(237,53,26)" fg:x="647" fg:w="1"/><text x="52.3854%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.1354%" y="597" width="0.0806%" height="15" fill="rgb(213,121,15)" fg:x="647" fg:w="1"/><text x="52.3854%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="52.2160%" y="773" width="0.0806%" height="15" fill="rgb(251,83,35)" fg:x="648" fg:w="1"/><text x="52.4660%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="52.2160%" y="757" width="0.0806%" height="15" fill="rgb(222,79,8)" fg:x="648" fg:w="1"/><text x="52.4660%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.2160%" y="741" width="0.0806%" height="15" fill="rgb(217,74,36)" fg:x="648" fg:w="1"/><text x="52.4660%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="52.3771%" y="613" width="0.0806%" height="15" fill="rgb(221,14,30)" fg:x="650" fg:w="1"/><text x="52.6271%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="52.3771%" y="597" width="0.0806%" height="15" fill="rgb(216,221,5)" fg:x="650" fg:w="1"/><text x="52.6271%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.3771%" y="581" width="0.0806%" height="15" fill="rgb(236,118,16)" fg:x="650" fg:w="1"/><text x="52.6271%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.3771%" y="565" width="0.0806%" height="15" fill="rgb(243,91,43)" fg:x="650" fg:w="1"/><text x="52.6271%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.3771%" y="549" width="0.0806%" height="15" fill="rgb(231,110,7)" fg:x="650" fg:w="1"/><text x="52.6271%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="52.3771%" y="533" width="0.0806%" height="15" fill="rgb(217,80,6)" fg:x="650" fg:w="1"/><text x="52.6271%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="52.3771%" y="517" width="0.0806%" height="15" fill="rgb(251,116,7)" fg:x="650" fg:w="1"/><text x="52.6271%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.3771%" y="501" width="0.0806%" height="15" fill="rgb(236,70,22)" fg:x="650" fg:w="1"/><text x="52.6271%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.4577%" y="597" width="0.0806%" height="15" fill="rgb(245,13,10)" fg:x="651" fg:w="1"/><text x="52.7077%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.5383%" y="565" width="0.0806%" height="15" fill="rgb(233,146,34)" fg:x="652" fg:w="1"/><text x="52.7883%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.5383%" y="549" width="0.0806%" height="15" fill="rgb(241,196,34)" fg:x="652" fg:w="1"/><text x="52.7883%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.5383%" y="533" width="0.0806%" height="15" fill="rgb(207,150,20)" fg:x="652" fg:w="1"/><text x="52.7883%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.5383%" y="517" width="0.0806%" height="15" fill="rgb(251,27,52)" fg:x="652" fg:w="1"/><text x="52.7883%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (3 samples, 0.24%)</title><rect x="52.4577%" y="613" width="0.2417%" height="15" fill="rgb(221,76,2)" fg:x="651" fg:w="3"/><text x="52.7077%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="52.5383%" y="597" width="0.1612%" height="15" fill="rgb(242,94,41)" fg:x="652" fg:w="2"/><text x="52.7883%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="52.5383%" y="581" width="0.1612%" height="15" fill="rgb(245,9,8)" fg:x="652" fg:w="2"/><text x="52.7883%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.6189%" y="565" width="0.0806%" height="15" fill="rgb(236,139,26)" fg:x="653" fg:w="1"/><text x="52.8689%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.6189%" y="549" width="0.0806%" height="15" fill="rgb(249,11,18)" fg:x="653" fg:w="1"/><text x="52.8689%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.6189%" y="533" width="0.0806%" height="15" fill="rgb(206,175,35)" fg:x="653" fg:w="1"/><text x="52.8689%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.6189%" y="517" width="0.0806%" height="15" fill="rgb(231,3,46)" fg:x="653" fg:w="1"/><text x="52.8689%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="52.6189%" y="501" width="0.0806%" height="15" fill="rgb(243,27,8)" fg:x="653" fg:w="1"/><text x="52.8689%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.6189%" y="485" width="0.0806%" height="15" fill="rgb(223,53,13)" fg:x="653" fg:w="1"/><text x="52.8689%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.6189%" y="469" width="0.0806%" height="15" fill="rgb(248,68,15)" fg:x="653" fg:w="1"/><text x="52.8689%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.6189%" y="453" width="0.0806%" height="15" fill="rgb(216,61,26)" fg:x="653" fg:w="1"/><text x="52.8689%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.6189%" y="437" width="0.0806%" height="15" fill="rgb(213,201,24)" fg:x="653" fg:w="1"/><text x="52.8689%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.7800%" y="565" width="0.0806%" height="15" fill="rgb(214,20,17)" fg:x="655" fg:w="1"/><text x="53.0300%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.7800%" y="549" width="0.0806%" height="15" fill="rgb(206,21,46)" fg:x="655" fg:w="1"/><text x="53.0300%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.7800%" y="533" width="0.0806%" height="15" fill="rgb(234,222,24)" fg:x="655" fg:w="1"/><text x="53.0300%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.7800%" y="517" width="0.0806%" height="15" fill="rgb(221,25,26)" fg:x="655" fg:w="1"/><text x="53.0300%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.7800%" y="501" width="0.0806%" height="15" fill="rgb(241,148,26)" fg:x="655" fg:w="1"/><text x="53.0300%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.7800%" y="485" width="0.0806%" height="15" fill="rgb(248,119,35)" fg:x="655" fg:w="1"/><text x="53.0300%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.7800%" y="469" width="0.0806%" height="15" fill="rgb(239,126,23)" fg:x="655" fg:w="1"/><text x="53.0300%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.7800%" y="453" width="0.0806%" height="15" fill="rgb(247,120,25)" fg:x="655" fg:w="1"/><text x="53.0300%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.7800%" y="437" width="0.0806%" height="15" fill="rgb(220,93,32)" fg:x="655" fg:w="1"/><text x="53.0300%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.7800%" y="421" width="0.0806%" height="15" fill="rgb(236,46,26)" fg:x="655" fg:w="1"/><text x="53.0300%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.7800%" y="405" width="0.0806%" height="15" fill="rgb(229,20,45)" fg:x="655" fg:w="1"/><text x="53.0300%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.7800%" y="389" width="0.0806%" height="15" fill="rgb(225,168,41)" fg:x="655" fg:w="1"/><text x="53.0300%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.7800%" y="373" width="0.0806%" height="15" fill="rgb(253,123,20)" fg:x="655" fg:w="1"/><text x="53.0300%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.7800%" y="357" width="0.0806%" height="15" fill="rgb(244,17,29)" fg:x="655" fg:w="1"/><text x="53.0300%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.7800%" y="341" width="0.0806%" height="15" fill="rgb(242,196,24)" fg:x="655" fg:w="1"/><text x="53.0300%" y="351.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (8 samples, 0.64%)</title><rect x="52.2965%" y="629" width="0.6446%" height="15" fill="rgb(210,113,45)" fg:x="649" fg:w="8"/><text x="52.5465%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="52.6994%" y="613" width="0.2417%" height="15" fill="rgb(205,129,3)" fg:x="654" fg:w="3"/><text x="52.9494%" y="623.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="52.6994%" y="597" width="0.2417%" height="15" fill="rgb(232,74,10)" fg:x="654" fg:w="3"/><text x="52.9494%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="52.6994%" y="581" width="0.2417%" height="15" fill="rgb(251,63,43)" fg:x="654" fg:w="3"/><text x="52.9494%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.8606%" y="565" width="0.0806%" height="15" fill="rgb(228,215,15)" fg:x="656" fg:w="1"/><text x="53.1106%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.8606%" y="549" width="0.0806%" height="15" fill="rgb(233,179,38)" fg:x="656" fg:w="1"/><text x="53.1106%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.8606%" y="533" width="0.0806%" height="15" fill="rgb(227,187,9)" fg:x="656" fg:w="1"/><text x="53.1106%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.8606%" y="517" width="0.0806%" height="15" fill="rgb(231,89,27)" fg:x="656" fg:w="1"/><text x="53.1106%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="52.8606%" y="501" width="0.0806%" height="15" fill="rgb(225,117,1)" fg:x="656" fg:w="1"/><text x="53.1106%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.8606%" y="485" width="0.0806%" height="15" fill="rgb(239,120,49)" fg:x="656" fg:w="1"/><text x="53.1106%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.8606%" y="469" width="0.0806%" height="15" fill="rgb(236,137,37)" fg:x="656" fg:w="1"/><text x="53.1106%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.8606%" y="453" width="0.0806%" height="15" fill="rgb(239,73,42)" fg:x="656" fg:w="1"/><text x="53.1106%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.8606%" y="437" width="0.0806%" height="15" fill="rgb(207,169,6)" fg:x="656" fg:w="1"/><text x="53.1106%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.8606%" y="421" width="0.0806%" height="15" fill="rgb(228,171,10)" fg:x="656" fg:w="1"/><text x="53.1106%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.8606%" y="405" width="0.0806%" height="15" fill="rgb(217,228,47)" fg:x="656" fg:w="1"/><text x="53.1106%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="52.9412%" y="597" width="0.0806%" height="15" fill="rgb(227,116,17)" fg:x="657" fg:w="1"/><text x="53.1912%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="52.9412%" y="581" width="0.0806%" height="15" fill="rgb(245,128,36)" fg:x="657" fg:w="1"/><text x="53.1912%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.9412%" y="565" width="0.0806%" height="15" fill="rgb(221,139,3)" fg:x="657" fg:w="1"/><text x="53.1912%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.1023%" y="581" width="0.1612%" height="15" fill="rgb(207,59,54)" fg:x="659" fg:w="2"/><text x="53.3523%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.1023%" y="565" width="0.1612%" height="15" fill="rgb(231,129,12)" fg:x="659" fg:w="2"/><text x="53.3523%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.1023%" y="549" width="0.1612%" height="15" fill="rgb(235,49,17)" fg:x="659" fg:w="2"/><text x="53.3523%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.1023%" y="533" width="0.1612%" height="15" fill="rgb(229,175,11)" fg:x="659" fg:w="2"/><text x="53.3523%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="53.1023%" y="517" width="0.1612%" height="15" fill="rgb(206,187,30)" fg:x="659" fg:w="2"/><text x="53.3523%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="53.1023%" y="501" width="0.1612%" height="15" fill="rgb(214,39,19)" fg:x="659" fg:w="2"/><text x="53.3523%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="53.1023%" y="485" width="0.1612%" height="15" fill="rgb(243,92,46)" fg:x="659" fg:w="2"/><text x="53.3523%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="53.1023%" y="469" width="0.1612%" height="15" fill="rgb(240,125,36)" fg:x="659" fg:w="2"/><text x="53.3523%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="53.1023%" y="453" width="0.1612%" height="15" fill="rgb(217,193,45)" fg:x="659" fg:w="2"/><text x="53.3523%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="53.1023%" y="437" width="0.1612%" height="15" fill="rgb(230,127,16)" fg:x="659" fg:w="2"/><text x="53.3523%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="53.1023%" y="421" width="0.1612%" height="15" fill="rgb(208,161,0)" fg:x="659" fg:w="2"/><text x="53.3523%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="53.1023%" y="405" width="0.1612%" height="15" fill="rgb(251,69,39)" fg:x="659" fg:w="2"/><text x="53.3523%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="53.1023%" y="389" width="0.1612%" height="15" fill="rgb(229,86,22)" fg:x="659" fg:w="2"/><text x="53.3523%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="53.1023%" y="373" width="0.1612%" height="15" fill="rgb(223,67,43)" fg:x="659" fg:w="2"/><text x="53.3523%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="53.2635%" y="581" width="0.3223%" height="15" fill="rgb(254,80,31)" fg:x="661" fg:w="4"/><text x="53.5135%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="53.2635%" y="565" width="0.3223%" height="15" fill="rgb(225,149,52)" fg:x="661" fg:w="4"/><text x="53.5135%" y="575.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="53.3441%" y="549" width="0.2417%" height="15" fill="rgb(214,169,18)" fg:x="662" fg:w="3"/><text x="53.5941%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="53.5858%" y="565" width="0.0806%" height="15" fill="rgb(236,224,43)" fg:x="665" fg:w="1"/><text x="53.8358%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="53.5858%" y="549" width="0.0806%" height="15" fill="rgb(251,125,34)" fg:x="665" fg:w="1"/><text x="53.8358%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="53.5858%" y="533" width="0.0806%" height="15" fill="rgb(224,39,44)" fg:x="665" fg:w="1"/><text x="53.8358%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="53.5858%" y="517" width="0.0806%" height="15" fill="rgb(206,111,46)" fg:x="665" fg:w="1"/><text x="53.8358%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="53.5858%" y="501" width="0.0806%" height="15" fill="rgb(227,147,50)" fg:x="665" fg:w="1"/><text x="53.8358%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="53.5858%" y="485" width="0.0806%" height="15" fill="rgb(239,144,36)" fg:x="665" fg:w="1"/><text x="53.8358%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="53.5858%" y="469" width="0.0806%" height="15" fill="rgb(216,17,19)" fg:x="665" fg:w="1"/><text x="53.8358%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="53.5858%" y="453" width="0.0806%" height="15" fill="rgb(211,192,29)" fg:x="665" fg:w="1"/><text x="53.8358%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="53.5858%" y="437" width="0.0806%" height="15" fill="rgb(238,195,20)" fg:x="665" fg:w="1"/><text x="53.8358%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="53.5858%" y="421" width="0.0806%" height="15" fill="rgb(213,210,42)" fg:x="665" fg:w="1"/><text x="53.8358%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="53.5858%" y="405" width="0.0806%" height="15" fill="rgb(244,4,49)" fg:x="665" fg:w="1"/><text x="53.8358%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="53.5858%" y="389" width="0.0806%" height="15" fill="rgb(254,106,42)" fg:x="665" fg:w="1"/><text x="53.8358%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="53.6664%" y="565" width="0.0806%" height="15" fill="rgb(222,182,12)" fg:x="666" fg:w="1"/><text x="53.9164%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="53.6664%" y="549" width="0.0806%" height="15" fill="rgb(228,160,15)" fg:x="666" fg:w="1"/><text x="53.9164%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.6664%" y="533" width="0.0806%" height="15" fill="rgb(243,149,43)" fg:x="666" fg:w="1"/><text x="53.9164%" y="543.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="53.7470%" y="533" width="0.2417%" height="15" fill="rgb(245,150,32)" fg:x="667" fg:w="3"/><text x="53.9970%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="53.7470%" y="517" width="0.2417%" height="15" fill="rgb(205,43,19)" fg:x="667" fg:w="3"/><text x="53.9970%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.8276%" y="501" width="0.1612%" height="15" fill="rgb(249,189,35)" fg:x="668" fg:w="2"/><text x="54.0776%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.8276%" y="485" width="0.1612%" height="15" fill="rgb(223,9,0)" fg:x="668" fg:w="2"/><text x="54.0776%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.9081%" y="469" width="0.0806%" height="15" fill="rgb(213,142,45)" fg:x="669" fg:w="1"/><text x="54.1581%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.9081%" y="453" width="0.0806%" height="15" fill="rgb(208,148,2)" fg:x="669" fg:w="1"/><text x="54.1581%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.9081%" y="437" width="0.0806%" height="15" fill="rgb(207,191,42)" fg:x="669" fg:w="1"/><text x="54.1581%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.9081%" y="421" width="0.0806%" height="15" fill="rgb(215,218,38)" fg:x="669" fg:w="1"/><text x="54.1581%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.9081%" y="405" width="0.0806%" height="15" fill="rgb(223,195,24)" fg:x="669" fg:w="1"/><text x="54.1581%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.9081%" y="389" width="0.0806%" height="15" fill="rgb(254,60,30)" fg:x="669" fg:w="1"/><text x="54.1581%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.9081%" y="373" width="0.0806%" height="15" fill="rgb(223,2,9)" fg:x="669" fg:w="1"/><text x="54.1581%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.9081%" y="357" width="0.0806%" height="15" fill="rgb(253,134,46)" fg:x="669" fg:w="1"/><text x="54.1581%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.9081%" y="341" width="0.0806%" height="15" fill="rgb(206,209,20)" fg:x="669" fg:w="1"/><text x="54.1581%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.9081%" y="325" width="0.0806%" height="15" fill="rgb(253,104,42)" fg:x="669" fg:w="1"/><text x="54.1581%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.9081%" y="309" width="0.0806%" height="15" fill="rgb(223,47,23)" fg:x="669" fg:w="1"/><text x="54.1581%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.9081%" y="293" width="0.0806%" height="15" fill="rgb(247,148,44)" fg:x="669" fg:w="1"/><text x="54.1581%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.1499%" y="325" width="0.1612%" height="15" fill="rgb(221,224,16)" fg:x="672" fg:w="2"/><text x="54.3999%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.1499%" y="309" width="0.1612%" height="15" fill="rgb(252,103,29)" fg:x="672" fg:w="2"/><text x="54.3999%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.1499%" y="293" width="0.1612%" height="15" fill="rgb(244,185,34)" fg:x="672" fg:w="2"/><text x="54.3999%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.1499%" y="277" width="0.1612%" height="15" fill="rgb(218,18,50)" fg:x="672" fg:w="2"/><text x="54.3999%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.1499%" y="261" width="0.1612%" height="15" fill="rgb(234,105,8)" fg:x="672" fg:w="2"/><text x="54.3999%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="54.1499%" y="245" width="0.1612%" height="15" fill="rgb(249,51,19)" fg:x="672" fg:w="2"/><text x="54.3999%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="54.1499%" y="229" width="0.1612%" height="15" fill="rgb(233,132,7)" fg:x="672" fg:w="2"/><text x="54.3999%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="54.1499%" y="213" width="0.1612%" height="15" fill="rgb(229,181,43)" fg:x="672" fg:w="2"/><text x="54.3999%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="54.1499%" y="197" width="0.1612%" height="15" fill="rgb(223,20,7)" fg:x="672" fg:w="2"/><text x="54.3999%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="54.1499%" y="181" width="0.1612%" height="15" fill="rgb(245,13,34)" fg:x="672" fg:w="2"/><text x="54.3999%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="54.1499%" y="165" width="0.1612%" height="15" fill="rgb(242,0,53)" fg:x="672" fg:w="2"/><text x="54.3999%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="54.1499%" y="149" width="0.1612%" height="15" fill="rgb(233,115,19)" fg:x="672" fg:w="2"/><text x="54.3999%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="54.1499%" y="133" width="0.1612%" height="15" fill="rgb(216,170,26)" fg:x="672" fg:w="2"/><text x="54.3999%" y="143.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="54.1499%" y="117" width="0.1612%" height="15" fill="rgb(233,13,0)" fg:x="672" fg:w="2"/><text x="54.3999%" y="127.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.1499%" y="101" width="0.1612%" height="15" fill="rgb(228,79,21)" fg:x="672" fg:w="2"/><text x="54.3999%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.1499%" y="341" width="0.2417%" height="15" fill="rgb(244,17,41)" fg:x="672" fg:w="3"/><text x="54.3999%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.3110%" y="325" width="0.0806%" height="15" fill="rgb(253,152,11)" fg:x="674" fg:w="1"/><text x="54.5610%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="53.9887%" y="389" width="0.4835%" height="15" fill="rgb(254,94,47)" fg:x="670" fg:w="6"/><text x="54.2387%" y="399.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="54.1499%" y="373" width="0.3223%" height="15" fill="rgb(239,66,43)" fg:x="672" fg:w="4"/><text x="54.3999%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="54.1499%" y="357" width="0.3223%" height="15" fill="rgb(251,25,22)" fg:x="672" fg:w="4"/><text x="54.3999%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.3916%" y="341" width="0.0806%" height="15" fill="rgb(227,65,46)" fg:x="675" fg:w="1"/><text x="54.6416%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3916%" y="325" width="0.0806%" height="15" fill="rgb(240,180,32)" fg:x="675" fg:w="1"/><text x="54.6416%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.3916%" y="309" width="0.0806%" height="15" fill="rgb(242,11,35)" fg:x="675" fg:w="1"/><text x="54.6416%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3916%" y="293" width="0.0806%" height="15" fill="rgb(221,41,49)" fg:x="675" fg:w="1"/><text x="54.6416%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="54.3916%" y="277" width="0.0806%" height="15" fill="rgb(253,80,52)" fg:x="675" fg:w="1"/><text x="54.6416%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3916%" y="261" width="0.0806%" height="15" fill="rgb(232,152,28)" fg:x="675" fg:w="1"/><text x="54.6416%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.3916%" y="245" width="0.0806%" height="15" fill="rgb(219,110,12)" fg:x="675" fg:w="1"/><text x="54.6416%" y="255.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="54.4722%" y="373" width="0.0806%" height="15" fill="rgb(218,98,43)" fg:x="676" fg:w="1"/><text x="54.7222%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.5528%" y="341" width="0.0806%" height="15" fill="rgb(253,96,49)" fg:x="677" fg:w="1"/><text x="54.8028%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.5528%" y="325" width="0.0806%" height="15" fill="rgb(238,132,17)" fg:x="677" fg:w="1"/><text x="54.8028%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.5528%" y="309" width="0.0806%" height="15" fill="rgb(208,82,25)" fg:x="677" fg:w="1"/><text x="54.8028%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.5528%" y="293" width="0.0806%" height="15" fill="rgb(237,77,13)" fg:x="677" fg:w="1"/><text x="54.8028%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (9 samples, 0.73%)</title><rect x="53.9887%" y="421" width="0.7252%" height="15" fill="rgb(230,6,11)" fg:x="670" fg:w="9"/><text x="54.2387%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.73%)</title><rect x="53.9887%" y="405" width="0.7252%" height="15" fill="rgb(207,29,48)" fg:x="670" fg:w="9"/><text x="54.2387%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="54.4722%" y="389" width="0.2417%" height="15" fill="rgb(247,105,22)" fg:x="676" fg:w="3"/><text x="54.7222%" y="399.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="54.5528%" y="373" width="0.1612%" height="15" fill="rgb(223,114,44)" fg:x="677" fg:w="2"/><text x="54.8028%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="54.5528%" y="357" width="0.1612%" height="15" fill="rgb(242,3,46)" fg:x="677" fg:w="2"/><text x="54.8028%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.6334%" y="341" width="0.0806%" height="15" fill="rgb(243,197,8)" fg:x="678" fg:w="1"/><text x="54.8834%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.6334%" y="325" width="0.0806%" height="15" fill="rgb(238,171,27)" fg:x="678" fg:w="1"/><text x="54.8834%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.6334%" y="309" width="0.0806%" height="15" fill="rgb(254,144,27)" fg:x="678" fg:w="1"/><text x="54.8834%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.6334%" y="293" width="0.0806%" height="15" fill="rgb(216,203,36)" fg:x="678" fg:w="1"/><text x="54.8834%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="54.6334%" y="277" width="0.0806%" height="15" fill="rgb(247,27,26)" fg:x="678" fg:w="1"/><text x="54.8834%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.6334%" y="261" width="0.0806%" height="15" fill="rgb(234,180,24)" fg:x="678" fg:w="1"/><text x="54.8834%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.6334%" y="245" width="0.0806%" height="15" fill="rgb(221,50,43)" fg:x="678" fg:w="1"/><text x="54.8834%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.6334%" y="229" width="0.0806%" height="15" fill="rgb(236,50,6)" fg:x="678" fg:w="1"/><text x="54.8834%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.7139%" y="357" width="0.0806%" height="15" fill="rgb(245,172,32)" fg:x="679" fg:w="1"/><text x="54.9639%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.7139%" y="341" width="0.0806%" height="15" fill="rgb(207,54,46)" fg:x="679" fg:w="1"/><text x="54.9639%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.8751%" y="293" width="0.0806%" height="15" fill="rgb(218,67,44)" fg:x="681" fg:w="1"/><text x="55.1251%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.8751%" y="277" width="0.0806%" height="15" fill="rgb(208,152,22)" fg:x="681" fg:w="1"/><text x="55.1251%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.9557%" y="261" width="0.0806%" height="15" fill="rgb(243,177,0)" fg:x="682" fg:w="1"/><text x="55.2057%" y="271.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="54.7139%" y="405" width="0.4029%" height="15" fill="rgb(212,75,12)" fg:x="679" fg:w="5"/><text x="54.9639%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="54.7139%" y="389" width="0.4029%" height="15" fill="rgb(212,129,29)" fg:x="679" fg:w="5"/><text x="54.9639%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="54.7139%" y="373" width="0.4029%" height="15" fill="rgb(241,229,35)" fg:x="679" fg:w="5"/><text x="54.9639%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="54.7945%" y="357" width="0.3223%" height="15" fill="rgb(232,49,32)" fg:x="680" fg:w="4"/><text x="55.0445%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="54.7945%" y="341" width="0.3223%" height="15" fill="rgb(243,119,48)" fg:x="680" fg:w="4"/><text x="55.0445%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="54.8751%" y="325" width="0.2417%" height="15" fill="rgb(212,205,30)" fg:x="681" fg:w="3"/><text x="55.1251%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="54.8751%" y="309" width="0.2417%" height="15" fill="rgb(218,175,42)" fg:x="681" fg:w="3"/><text x="55.1251%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="54.9557%" y="293" width="0.1612%" height="15" fill="rgb(230,156,27)" fg:x="682" fg:w="2"/><text x="55.2057%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.9557%" y="277" width="0.1612%" height="15" fill="rgb(254,32,43)" fg:x="682" fg:w="2"/><text x="55.2057%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.0363%" y="261" width="0.0806%" height="15" fill="rgb(246,89,34)" fg:x="683" fg:w="1"/><text x="55.2863%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.0363%" y="245" width="0.0806%" height="15" fill="rgb(247,162,17)" fg:x="683" fg:w="1"/><text x="55.2863%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.0363%" y="229" width="0.0806%" height="15" fill="rgb(219,71,37)" fg:x="683" fg:w="1"/><text x="55.2863%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.0363%" y="213" width="0.0806%" height="15" fill="rgb(210,184,7)" fg:x="683" fg:w="1"/><text x="55.2863%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.0363%" y="197" width="0.0806%" height="15" fill="rgb(245,16,32)" fg:x="683" fg:w="1"/><text x="55.2863%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.0363%" y="181" width="0.0806%" height="15" fill="rgb(209,62,7)" fg:x="683" fg:w="1"/><text x="55.2863%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="55.1974%" y="261" width="0.0806%" height="15" fill="rgb(215,16,15)" fg:x="685" fg:w="1"/><text x="55.4474%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="55.1168%" y="293" width="0.2417%" height="15" fill="rgb(223,60,14)" fg:x="684" fg:w="3"/><text x="55.3668%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="55.1168%" y="277" width="0.2417%" height="15" fill="rgb(244,134,12)" fg:x="684" fg:w="3"/><text x="55.3668%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="55.2780%" y="261" width="0.0806%" height="15" fill="rgb(224,3,41)" fg:x="686" fg:w="1"/><text x="55.5280%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.2780%" y="245" width="0.0806%" height="15" fill="rgb(213,84,2)" fg:x="686" fg:w="1"/><text x="55.5280%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.2780%" y="229" width="0.0806%" height="15" fill="rgb(213,216,27)" fg:x="686" fg:w="1"/><text x="55.5280%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="55.3586%" y="293" width="0.1612%" height="15" fill="rgb(218,76,35)" fg:x="687" fg:w="2"/><text x="55.6086%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="55.3586%" y="277" width="0.1612%" height="15" fill="rgb(253,89,24)" fg:x="687" fg:w="2"/><text x="55.6086%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="55.3586%" y="261" width="0.1612%" height="15" fill="rgb(217,188,40)" fg:x="687" fg:w="2"/><text x="55.6086%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="55.3586%" y="245" width="0.1612%" height="15" fill="rgb(237,79,38)" fg:x="687" fg:w="2"/><text x="55.6086%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.4392%" y="229" width="0.0806%" height="15" fill="rgb(215,116,13)" fg:x="688" fg:w="1"/><text x="55.6892%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="55.1168%" y="325" width="0.4835%" height="15" fill="rgb(249,66,35)" fg:x="684" fg:w="6"/><text x="55.3668%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="55.1168%" y="309" width="0.4835%" height="15" fill="rgb(253,86,18)" fg:x="684" fg:w="6"/><text x="55.3668%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.5197%" y="293" width="0.0806%" height="15" fill="rgb(209,175,36)" fg:x="689" fg:w="1"/><text x="55.7697%" y="303.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="55.6003%" y="293" width="0.1612%" height="15" fill="rgb(253,149,3)" fg:x="690" fg:w="2"/><text x="55.8503%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="55.6003%" y="325" width="0.2417%" height="15" fill="rgb(242,124,49)" fg:x="690" fg:w="3"/><text x="55.8503%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="55.6003%" y="309" width="0.2417%" height="15" fill="rgb(219,171,24)" fg:x="690" fg:w="3"/><text x="55.8503%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="55.7615%" y="293" width="0.0806%" height="15" fill="rgb(216,121,30)" fg:x="692" fg:w="1"/><text x="56.0115%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="55.7615%" y="277" width="0.0806%" height="15" fill="rgb(234,165,21)" fg:x="692" fg:w="1"/><text x="56.0115%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="55.7615%" y="261" width="0.0806%" height="15" fill="rgb(234,103,40)" fg:x="692" fg:w="1"/><text x="56.0115%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="55.8421%" y="309" width="0.0806%" height="15" fill="rgb(250,137,24)" fg:x="693" fg:w="1"/><text x="56.0921%" y="319.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="55.9226%" y="277" width="0.0806%" height="15" fill="rgb(253,22,21)" fg:x="694" fg:w="1"/><text x="56.1726%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="55.9226%" y="261" width="0.0806%" height="15" fill="rgb(243,22,5)" fg:x="694" fg:w="1"/><text x="56.1726%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9226%" y="245" width="0.0806%" height="15" fill="rgb(212,56,7)" fg:x="694" fg:w="1"/><text x="56.1726%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.9226%" y="229" width="0.0806%" height="15" fill="rgb(223,190,49)" fg:x="694" fg:w="1"/><text x="56.1726%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.0838%" y="261" width="0.0806%" height="15" fill="rgb(221,110,35)" fg:x="696" fg:w="1"/><text x="56.3338%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (16 samples, 1.29%)</title><rect x="55.1168%" y="373" width="1.2893%" height="15" fill="rgb(212,113,34)" fg:x="684" fg:w="16"/><text x="55.3668%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (16 samples, 1.29%)</title><rect x="55.1168%" y="357" width="1.2893%" height="15" fill="rgb(216,125,47)" fg:x="684" fg:w="16"/><text x="55.3668%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (16 samples, 1.29%)</title><rect x="55.1168%" y="341" width="1.2893%" height="15" fill="rgb(251,112,19)" fg:x="684" fg:w="16"/><text x="55.3668%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="55.8421%" y="325" width="0.5641%" height="15" fill="rgb(254,200,41)" fg:x="693" fg:w="7"/><text x="56.0921%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="55.9226%" y="309" width="0.4835%" height="15" fill="rgb(225,17,42)" fg:x="694" fg:w="6"/><text x="56.1726%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (6 samples, 0.48%)</title><rect x="55.9226%" y="293" width="0.4835%" height="15" fill="rgb(208,105,35)" fg:x="694" fg:w="6"/><text x="56.1726%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="56.0032%" y="277" width="0.4029%" height="15" fill="rgb(210,125,51)" fg:x="695" fg:w="5"/><text x="56.2532%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="56.1644%" y="261" width="0.2417%" height="15" fill="rgb(227,213,18)" fg:x="697" fg:w="3"/><text x="56.4144%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="56.3255%" y="245" width="0.0806%" height="15" fill="rgb(221,174,32)" fg:x="699" fg:w="1"/><text x="56.5755%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.3255%" y="229" width="0.0806%" height="15" fill="rgb(234,23,1)" fg:x="699" fg:w="1"/><text x="56.5755%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.3255%" y="213" width="0.0806%" height="15" fill="rgb(209,65,17)" fg:x="699" fg:w="1"/><text x="56.5755%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="56.3255%" y="197" width="0.0806%" height="15" fill="rgb(206,224,31)" fg:x="699" fg:w="1"/><text x="56.5755%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.3255%" y="181" width="0.0806%" height="15" fill="rgb(230,20,38)" fg:x="699" fg:w="1"/><text x="56.5755%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.3255%" y="165" width="0.0806%" height="15" fill="rgb(211,9,41)" fg:x="699" fg:w="1"/><text x="56.5755%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="56.3255%" y="149" width="0.0806%" height="15" fill="rgb(233,214,4)" fg:x="699" fg:w="1"/><text x="56.5755%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.3255%" y="133" width="0.0806%" height="15" fill="rgb(225,60,54)" fg:x="699" fg:w="1"/><text x="56.5755%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.3255%" y="117" width="0.0806%" height="15" fill="rgb(206,228,35)" fg:x="699" fg:w="1"/><text x="56.5755%" y="127.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="56.3255%" y="101" width="0.0806%" height="15" fill="rgb(212,178,50)" fg:x="699" fg:w="1"/><text x="56.5755%" y="111.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="56.3255%" y="85" width="0.0806%" height="15" fill="rgb(206,192,33)" fg:x="699" fg:w="1"/><text x="56.5755%" y="95.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (22 samples, 1.77%)</title><rect x="54.7139%" y="421" width="1.7728%" height="15" fill="rgb(238,210,1)" fg:x="679" fg:w="22"/><text x="54.9639%" y="431.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (17 samples, 1.37%)</title><rect x="55.1168%" y="405" width="1.3699%" height="15" fill="rgb(205,65,52)" fg:x="684" fg:w="17"/><text x="55.3668%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (17 samples, 1.37%)</title><rect x="55.1168%" y="389" width="1.3699%" height="15" fill="rgb(237,204,51)" fg:x="684" fg:w="17"/><text x="55.3668%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.4061%" y="373" width="0.0806%" height="15" fill="rgb(213,119,51)" fg:x="700" fg:w="1"/><text x="56.6561%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.4061%" y="357" width="0.0806%" height="15" fill="rgb(244,156,37)" fg:x="700" fg:w="1"/><text x="56.6561%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="56.4867%" y="421" width="0.2417%" height="15" fill="rgb(249,96,18)" fg:x="701" fg:w="3"/><text x="56.7367%" y="431.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="56.4867%" y="405" width="0.2417%" height="15" fill="rgb(231,65,11)" fg:x="701" fg:w="3"/><text x="56.7367%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="56.4867%" y="389" width="0.2417%" height="15" fill="rgb(240,187,2)" fg:x="701" fg:w="3"/><text x="56.7367%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="56.4867%" y="373" width="0.2417%" height="15" fill="rgb(242,121,39)" fg:x="701" fg:w="3"/><text x="56.7367%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.4867%" y="357" width="0.2417%" height="15" fill="rgb(233,205,18)" fg:x="701" fg:w="3"/><text x="56.7367%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.5673%" y="341" width="0.1612%" height="15" fill="rgb(219,67,33)" fg:x="702" fg:w="2"/><text x="56.8173%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.5673%" y="325" width="0.1612%" height="15" fill="rgb(227,84,12)" fg:x="702" fg:w="2"/><text x="56.8173%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="56.5673%" y="309" width="0.1612%" height="15" fill="rgb(227,42,52)" fg:x="702" fg:w="2"/><text x="56.8173%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.5673%" y="293" width="0.1612%" height="15" fill="rgb(231,27,28)" fg:x="702" fg:w="2"/><text x="56.8173%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.5673%" y="277" width="0.1612%" height="15" fill="rgb(238,42,2)" fg:x="702" fg:w="2"/><text x="56.8173%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.5673%" y="261" width="0.1612%" height="15" fill="rgb(215,15,9)" fg:x="702" fg:w="2"/><text x="56.8173%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.6479%" y="245" width="0.0806%" height="15" fill="rgb(205,195,15)" fg:x="703" fg:w="1"/><text x="56.8979%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.6479%" y="229" width="0.0806%" height="15" fill="rgb(233,143,2)" fg:x="703" fg:w="1"/><text x="56.8979%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="56.7284%" y="405" width="0.4835%" height="15" fill="rgb(207,108,8)" fg:x="704" fg:w="6"/><text x="56.9784%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.48%)</title><rect x="56.7284%" y="389" width="0.4835%" height="15" fill="rgb(214,53,21)" fg:x="704" fg:w="6"/><text x="56.9784%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="56.7284%" y="373" width="0.4835%" height="15" fill="rgb(238,212,36)" fg:x="704" fg:w="6"/><text x="56.9784%" y="383.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="56.7284%" y="357" width="0.4835%" height="15" fill="rgb(218,151,47)" fg:x="704" fg:w="6"/><text x="56.9784%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (41 samples, 3.30%)</title><rect x="53.9887%" y="453" width="3.3038%" height="15" fill="rgb(245,160,3)" fg:x="670" fg:w="41"/><text x="54.2387%" y="463.50">&lt;en..</text></g><g><title>engine::session::internal::Entities::add_persisted (41 samples, 3.30%)</title><rect x="53.9887%" y="437" width="3.3038%" height="15" fill="rgb(238,106,19)" fg:x="670" fg:w="41"/><text x="54.2387%" y="447.50">eng..</text></g><g><title>engine::session::internal::EntityMap::add_entity (7 samples, 0.56%)</title><rect x="56.7284%" y="421" width="0.5641%" height="15" fill="rgb(207,206,9)" fg:x="704" fg:w="7"/><text x="56.9784%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2119%" y="405" width="0.0806%" height="15" fill="rgb(254,40,10)" fg:x="710" fg:w="1"/><text x="57.4619%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="57.2119%" y="389" width="0.0806%" height="15" fill="rgb(245,81,8)" fg:x="710" fg:w="1"/><text x="57.4619%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (42 samples, 3.38%)</title><rect x="53.9887%" y="533" width="3.3844%" height="15" fill="rgb(214,119,17)" fg:x="670" fg:w="42"/><text x="54.2387%" y="543.50">&lt;pl..</text></g><g><title>core::iter::adapters::try_process (42 samples, 3.38%)</title><rect x="53.9887%" y="517" width="3.3844%" height="15" fill="rgb(245,100,39)" fg:x="670" fg:w="42"/><text x="54.2387%" y="527.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 3.38%)</title><rect x="53.9887%" y="501" width="3.3844%" height="15" fill="rgb(243,105,16)" fg:x="670" fg:w="42"/><text x="54.2387%" y="511.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (42 samples, 3.38%)</title><rect x="53.9887%" y="485" width="3.3844%" height="15" fill="rgb(214,53,2)" fg:x="670" fg:w="42"/><text x="54.2387%" y="495.50">&lt;co..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (42 samples, 3.38%)</title><rect x="53.9887%" y="469" width="3.3844%" height="15" fill="rgb(251,54,50)" fg:x="670" fg:w="42"/><text x="54.2387%" y="479.50">&lt;en..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="57.2925%" y="453" width="0.0806%" height="15" fill="rgb(244,121,37)" fg:x="711" fg:w="1"/><text x="57.5425%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.2925%" y="437" width="0.0806%" height="15" fill="rgb(236,158,39)" fg:x="711" fg:w="1"/><text x="57.5425%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.2925%" y="421" width="0.0806%" height="15" fill="rgb(226,25,37)" fg:x="711" fg:w="1"/><text x="57.5425%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.2925%" y="405" width="0.0806%" height="15" fill="rgb(222,71,46)" fg:x="711" fg:w="1"/><text x="57.5425%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.2925%" y="389" width="0.0806%" height="15" fill="rgb(209,27,29)" fg:x="711" fg:w="1"/><text x="57.5425%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.2925%" y="373" width="0.0806%" height="15" fill="rgb(210,196,17)" fg:x="711" fg:w="1"/><text x="57.5425%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.2925%" y="357" width="0.0806%" height="15" fill="rgb(236,76,23)" fg:x="711" fg:w="1"/><text x="57.5425%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.2925%" y="341" width="0.0806%" height="15" fill="rgb(214,33,32)" fg:x="711" fg:w="1"/><text x="57.5425%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.2925%" y="325" width="0.0806%" height="15" fill="rgb(243,16,26)" fg:x="711" fg:w="1"/><text x="57.5425%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.2925%" y="309" width="0.0806%" height="15" fill="rgb(241,30,48)" fg:x="711" fg:w="1"/><text x="57.5425%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.2925%" y="293" width="0.0806%" height="15" fill="rgb(241,106,1)" fg:x="711" fg:w="1"/><text x="57.5425%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.2925%" y="277" width="0.0806%" height="15" fill="rgb(230,62,29)" fg:x="711" fg:w="1"/><text x="57.5425%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2925%" y="261" width="0.0806%" height="15" fill="rgb(207,166,53)" fg:x="711" fg:w="1"/><text x="57.5425%" y="271.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="57.3731%" y="533" width="0.0806%" height="15" fill="rgb(244,54,13)" fg:x="712" fg:w="1"/><text x="57.6231%" y="543.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="57.4537%" y="533" width="0.0806%" height="15" fill="rgb(205,144,19)" fg:x="713" fg:w="1"/><text x="57.7037%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="57.6954%" y="469" width="0.1612%" height="15" fill="rgb(225,165,45)" fg:x="716" fg:w="2"/><text x="57.9454%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.6954%" y="453" width="0.1612%" height="15" fill="rgb(220,140,6)" fg:x="716" fg:w="2"/><text x="57.9454%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.6954%" y="437" width="0.1612%" height="15" fill="rgb(234,69,14)" fg:x="716" fg:w="2"/><text x="57.9454%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (62 samples, 5.00%)</title><rect x="53.0218%" y="597" width="4.9960%" height="15" fill="rgb(243,24,33)" fg:x="658" fg:w="62"/><text x="53.2718%" y="607.50">plugin..</text></g><g><title>plugins_core::tools::contained_by (55 samples, 4.43%)</title><rect x="53.5858%" y="581" width="4.4319%" height="15" fill="rgb(253,100,43)" fg:x="665" fg:w="55"/><text x="53.8358%" y="591.50">plugi..</text></g><g><title>kernel::model::entry::Entry::scope (53 samples, 4.27%)</title><rect x="53.7470%" y="565" width="4.2707%" height="15" fill="rgb(221,168,15)" fg:x="667" fg:w="53"/><text x="53.9970%" y="575.50">kerne..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (53 samples, 4.27%)</title><rect x="53.7470%" y="549" width="4.2707%" height="15" fill="rgb(237,15,11)" fg:x="667" fg:w="53"/><text x="53.9970%" y="559.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="57.5342%" y="533" width="0.4835%" height="15" fill="rgb(229,207,40)" fg:x="714" fg:w="6"/><text x="57.7842%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="57.5342%" y="517" width="0.4835%" height="15" fill="rgb(246,125,48)" fg:x="714" fg:w="6"/><text x="57.7842%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (5 samples, 0.40%)</title><rect x="57.6148%" y="501" width="0.4029%" height="15" fill="rgb(231,65,10)" fg:x="715" fg:w="5"/><text x="57.8648%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="57.6954%" y="485" width="0.3223%" height="15" fill="rgb(222,152,40)" fg:x="716" fg:w="4"/><text x="57.9454%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="57.8566%" y="469" width="0.1612%" height="15" fill="rgb(214,12,30)" fg:x="718" fg:w="2"/><text x="58.1066%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="58.0177%" y="581" width="0.2417%" height="15" fill="rgb(239,80,41)" fg:x="720" fg:w="3"/><text x="58.2677%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="58.0177%" y="565" width="0.2417%" height="15" fill="rgb(206,175,27)" fg:x="720" fg:w="3"/><text x="58.2677%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.0983%" y="549" width="0.1612%" height="15" fill="rgb(222,43,39)" fg:x="721" fg:w="2"/><text x="58.3483%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.0983%" y="533" width="0.1612%" height="15" fill="rgb(243,47,50)" fg:x="721" fg:w="2"/><text x="58.3483%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="58.0983%" y="517" width="0.1612%" height="15" fill="rgb(243,61,21)" fg:x="721" fg:w="2"/><text x="58.3483%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="58.0983%" y="501" width="0.1612%" height="15" fill="rgb(208,172,5)" fg:x="721" fg:w="2"/><text x="58.3483%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="58.0983%" y="485" width="0.1612%" height="15" fill="rgb(219,24,25)" fg:x="721" fg:w="2"/><text x="58.3483%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.0983%" y="469" width="0.1612%" height="15" fill="rgb(235,42,41)" fg:x="721" fg:w="2"/><text x="58.3483%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.0983%" y="453" width="0.1612%" height="15" fill="rgb(226,190,24)" fg:x="721" fg:w="2"/><text x="58.3483%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="58.0983%" y="437" width="0.1612%" height="15" fill="rgb(216,55,27)" fg:x="721" fg:w="2"/><text x="58.3483%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="58.0983%" y="421" width="0.1612%" height="15" fill="rgb(231,77,14)" fg:x="721" fg:w="2"/><text x="58.3483%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="58.0983%" y="405" width="0.1612%" height="15" fill="rgb(208,108,34)" fg:x="721" fg:w="2"/><text x="58.3483%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="58.0983%" y="389" width="0.1612%" height="15" fill="rgb(228,183,52)" fg:x="721" fg:w="2"/><text x="58.3483%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.0983%" y="373" width="0.1612%" height="15" fill="rgb(224,152,1)" fg:x="721" fg:w="2"/><text x="58.3483%" y="383.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.08%)</title><rect x="58.2595%" y="581" width="0.0806%" height="15" fill="rgb(246,115,8)" fg:x="723" fg:w="1"/><text x="58.5095%" y="591.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item::{{closure}} (1 samples, 0.08%)</title><rect x="58.2595%" y="565" width="0.0806%" height="15" fill="rgb(211,76,13)" fg:x="723" fg:w="1"/><text x="58.5095%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.3400%" y="517" width="0.0806%" height="15" fill="rgb(233,214,49)" fg:x="724" fg:w="1"/><text x="58.5900%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.4206%" y="485" width="0.1612%" height="15" fill="rgb(223,44,51)" fg:x="725" fg:w="2"/><text x="58.6706%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.4206%" y="469" width="0.1612%" height="15" fill="rgb(225,111,51)" fg:x="725" fg:w="2"/><text x="58.6706%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.4206%" y="453" width="0.1612%" height="15" fill="rgb(231,185,26)" fg:x="725" fg:w="2"/><text x="58.6706%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.4206%" y="437" width="0.1612%" height="15" fill="rgb(233,111,30)" fg:x="725" fg:w="2"/><text x="58.6706%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.4206%" y="421" width="0.1612%" height="15" fill="rgb(250,1,47)" fg:x="725" fg:w="2"/><text x="58.6706%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.4206%" y="405" width="0.1612%" height="15" fill="rgb(254,210,3)" fg:x="725" fg:w="2"/><text x="58.6706%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="58.4206%" y="389" width="0.1612%" height="15" fill="rgb(234,14,22)" fg:x="725" fg:w="2"/><text x="58.6706%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="58.4206%" y="373" width="0.1612%" height="15" fill="rgb(221,117,4)" fg:x="725" fg:w="2"/><text x="58.6706%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="58.4206%" y="357" width="0.1612%" height="15" fill="rgb(251,147,27)" fg:x="725" fg:w="2"/><text x="58.6706%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.4206%" y="341" width="0.1612%" height="15" fill="rgb(226,52,11)" fg:x="725" fg:w="2"/><text x="58.6706%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.4206%" y="325" width="0.1612%" height="15" fill="rgb(229,222,5)" fg:x="725" fg:w="2"/><text x="58.6706%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="58.4206%" y="309" width="0.1612%" height="15" fill="rgb(232,76,2)" fg:x="725" fg:w="2"/><text x="58.6706%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="58.4206%" y="293" width="0.1612%" height="15" fill="rgb(242,108,2)" fg:x="725" fg:w="2"/><text x="58.6706%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="58.4206%" y="277" width="0.1612%" height="15" fill="rgb(213,165,6)" fg:x="725" fg:w="2"/><text x="58.6706%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="58.4206%" y="261" width="0.1612%" height="15" fill="rgb(222,24,42)" fg:x="725" fg:w="2"/><text x="58.6706%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.5012%" y="245" width="0.0806%" height="15" fill="rgb(242,170,24)" fg:x="726" fg:w="1"/><text x="58.7512%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.6624%" y="389" width="0.0806%" height="15" fill="rgb(209,110,40)" fg:x="728" fg:w="1"/><text x="58.9124%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.6624%" y="373" width="0.0806%" height="15" fill="rgb(233,146,36)" fg:x="728" fg:w="1"/><text x="58.9124%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::name (6 samples, 0.48%)</title><rect x="58.3400%" y="549" width="0.4835%" height="15" fill="rgb(229,33,32)" fg:x="724" fg:w="6"/><text x="58.5900%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="58.3400%" y="533" width="0.4835%" height="15" fill="rgb(225,55,34)" fg:x="724" fg:w="6"/><text x="58.5900%" y="543.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="58.4206%" y="517" width="0.4029%" height="15" fill="rgb(217,32,50)" fg:x="725" fg:w="5"/><text x="58.6706%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="58.4206%" y="501" width="0.4029%" height="15" fill="rgb(206,110,53)" fg:x="725" fg:w="5"/><text x="58.6706%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.5818%" y="485" width="0.2417%" height="15" fill="rgb(247,25,10)" fg:x="727" fg:w="3"/><text x="58.8318%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.5818%" y="469" width="0.2417%" height="15" fill="rgb(226,67,48)" fg:x="727" fg:w="3"/><text x="58.8318%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.5818%" y="453" width="0.2417%" height="15" fill="rgb(239,73,28)" fg:x="727" fg:w="3"/><text x="58.8318%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.5818%" y="437" width="0.2417%" height="15" fill="rgb(234,200,41)" fg:x="727" fg:w="3"/><text x="58.8318%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="58.5818%" y="421" width="0.2417%" height="15" fill="rgb(233,76,35)" fg:x="727" fg:w="3"/><text x="58.8318%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.5818%" y="405" width="0.2417%" height="15" fill="rgb(238,166,31)" fg:x="727" fg:w="3"/><text x="58.8318%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.7429%" y="389" width="0.0806%" height="15" fill="rgb(219,218,51)" fg:x="729" fg:w="1"/><text x="58.9929%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.7429%" y="373" width="0.0806%" height="15" fill="rgb(221,82,53)" fg:x="729" fg:w="1"/><text x="58.9929%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.7429%" y="357" width="0.0806%" height="15" fill="rgb(218,179,13)" fg:x="729" fg:w="1"/><text x="58.9929%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.7429%" y="341" width="0.0806%" height="15" fill="rgb(210,53,38)" fg:x="729" fg:w="1"/><text x="58.9929%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.8235%" y="533" width="0.0806%" height="15" fill="rgb(214,167,31)" fg:x="730" fg:w="1"/><text x="59.0735%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (12 samples, 0.97%)</title><rect x="58.0177%" y="597" width="0.9670%" height="15" fill="rgb(223,26,5)" fg:x="720" fg:w="12"/><text x="58.2677%" y="607.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (8 samples, 0.64%)</title><rect x="58.3400%" y="581" width="0.6446%" height="15" fill="rgb(218,95,23)" fg:x="724" fg:w="8"/><text x="58.5900%" y="591.50"></text></g><g><title>plugins_core::finding::matches_description (8 samples, 0.64%)</title><rect x="58.3400%" y="565" width="0.6446%" height="15" fill="rgb(248,205,45)" fg:x="724" fg:w="8"/><text x="58.5900%" y="575.50"></text></g><g><title>plugins_core::finding::matches_string (2 samples, 0.16%)</title><rect x="58.8235%" y="549" width="0.1612%" height="15" fill="rgb(211,76,6)" fg:x="730" fg:w="2"/><text x="59.0735%" y="559.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="58.9041%" y="533" width="0.0806%" height="15" fill="rgb(250,176,29)" fg:x="731" fg:w="1"/><text x="59.1541%" y="543.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.08%)</title><rect x="58.9041%" y="517" width="0.0806%" height="15" fill="rgb(240,107,31)" fg:x="731" fg:w="1"/><text x="59.1541%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="58.9041%" y="501" width="0.0806%" height="15" fill="rgb(229,215,17)" fg:x="731" fg:w="1"/><text x="59.1541%" y="511.50"></text></g><g><title>core::ptr::write (1 samples, 0.08%)</title><rect x="58.9041%" y="485" width="0.0806%" height="15" fill="rgb(240,79,8)" fg:x="731" fg:w="1"/><text x="59.1541%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (77 samples, 6.20%)</title><rect x="52.9412%" y="629" width="6.2047%" height="15" fill="rgb(243,110,48)" fg:x="657" fg:w="77"/><text x="53.1912%" y="639.50">&lt;engine:..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (77 samples, 6.20%)</title><rect x="52.9412%" y="613" width="6.2047%" height="15" fill="rgb(236,201,9)" fg:x="657" fg:w="77"/><text x="53.1912%" y="623.50">&lt;plugins..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (2 samples, 0.16%)</title><rect x="58.9847%" y="597" width="0.1612%" height="15" fill="rgb(220,87,26)" fg:x="732" fg:w="2"/><text x="59.2347%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.9847%" y="581" width="0.1612%" height="15" fill="rgb(212,118,27)" fg:x="732" fg:w="2"/><text x="59.2347%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.9847%" y="565" width="0.1612%" height="15" fill="rgb(244,178,50)" fg:x="732" fg:w="2"/><text x="59.2347%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.0653%" y="549" width="0.0806%" height="15" fill="rgb(215,204,7)" fg:x="733" fg:w="1"/><text x="59.3153%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.0653%" y="533" width="0.0806%" height="15" fill="rgb(214,122,43)" fg:x="733" fg:w="1"/><text x="59.3153%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.0653%" y="517" width="0.0806%" height="15" fill="rgb(251,178,26)" fg:x="733" fg:w="1"/><text x="59.3153%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.0653%" y="501" width="0.0806%" height="15" fill="rgb(210,7,35)" fg:x="733" fg:w="1"/><text x="59.3153%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="59.0653%" y="485" width="0.0806%" height="15" fill="rgb(227,164,54)" fg:x="733" fg:w="1"/><text x="59.3153%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.0653%" y="469" width="0.0806%" height="15" fill="rgb(205,18,34)" fg:x="733" fg:w="1"/><text x="59.3153%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.1459%" y="485" width="0.0806%" height="15" fill="rgb(239,50,19)" fg:x="734" fg:w="1"/><text x="59.3959%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.1459%" y="469" width="0.0806%" height="15" fill="rgb(224,85,6)" fg:x="734" fg:w="1"/><text x="59.3959%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.1459%" y="453" width="0.0806%" height="15" fill="rgb(252,167,34)" fg:x="734" fg:w="1"/><text x="59.3959%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.1459%" y="437" width="0.0806%" height="15" fill="rgb(243,180,35)" fg:x="734" fg:w="1"/><text x="59.3959%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.1459%" y="421" width="0.0806%" height="15" fill="rgb(213,214,53)" fg:x="734" fg:w="1"/><text x="59.3959%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.1459%" y="405" width="0.0806%" height="15" fill="rgb(244,39,37)" fg:x="734" fg:w="1"/><text x="59.3959%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="59.1459%" y="389" width="0.0806%" height="15" fill="rgb(215,141,14)" fg:x="734" fg:w="1"/><text x="59.3959%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.1459%" y="373" width="0.0806%" height="15" fill="rgb(210,2,42)" fg:x="734" fg:w="1"/><text x="59.3959%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.1459%" y="533" width="0.1612%" height="15" fill="rgb(252,189,47)" fg:x="734" fg:w="2"/><text x="59.3959%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.1459%" y="517" width="0.1612%" height="15" fill="rgb(222,154,47)" fg:x="734" fg:w="2"/><text x="59.3959%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.1459%" y="501" width="0.1612%" height="15" fill="rgb(228,20,37)" fg:x="734" fg:w="2"/><text x="59.3959%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2264%" y="485" width="0.0806%" height="15" fill="rgb(236,17,4)" fg:x="735" fg:w="1"/><text x="59.4764%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2264%" y="469" width="0.0806%" height="15" fill="rgb(222,211,31)" fg:x="735" fg:w="1"/><text x="59.4764%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.2264%" y="453" width="0.0806%" height="15" fill="rgb(218,134,25)" fg:x="735" fg:w="1"/><text x="59.4764%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.2264%" y="437" width="0.0806%" height="15" fill="rgb(218,97,43)" fg:x="735" fg:w="1"/><text x="59.4764%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.2264%" y="421" width="0.0806%" height="15" fill="rgb(234,163,32)" fg:x="735" fg:w="1"/><text x="59.4764%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2264%" y="405" width="0.0806%" height="15" fill="rgb(251,171,42)" fg:x="735" fg:w="1"/><text x="59.4764%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2264%" y="389" width="0.0806%" height="15" fill="rgb(223,104,12)" fg:x="735" fg:w="1"/><text x="59.4764%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.2264%" y="373" width="0.0806%" height="15" fill="rgb(225,29,49)" fg:x="735" fg:w="1"/><text x="59.4764%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.2264%" y="357" width="0.0806%" height="15" fill="rgb(253,77,7)" fg:x="735" fg:w="1"/><text x="59.4764%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.2264%" y="341" width="0.0806%" height="15" fill="rgb(213,81,26)" fg:x="735" fg:w="1"/><text x="59.4764%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.2264%" y="325" width="0.0806%" height="15" fill="rgb(246,126,6)" fg:x="735" fg:w="1"/><text x="59.4764%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2264%" y="309" width="0.0806%" height="15" fill="rgb(232,186,21)" fg:x="735" fg:w="1"/><text x="59.4764%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.1459%" y="549" width="0.2417%" height="15" fill="rgb(215,126,18)" fg:x="734" fg:w="3"/><text x="59.3959%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3070%" y="533" width="0.0806%" height="15" fill="rgb(210,47,5)" fg:x="736" fg:w="1"/><text x="59.5570%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3876%" y="549" width="0.0806%" height="15" fill="rgb(240,70,6)" fg:x="737" fg:w="1"/><text x="59.6376%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.4682%" y="549" width="0.0806%" height="15" fill="rgb(230,99,49)" fg:x="738" fg:w="1"/><text x="59.7182%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="59.4682%" y="533" width="0.0806%" height="15" fill="rgb(212,57,36)" fg:x="738" fg:w="1"/><text x="59.7182%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.7099%" y="421" width="0.0806%" height="15" fill="rgb(243,14,50)" fg:x="741" fg:w="1"/><text x="59.9599%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.73%)</title><rect x="59.1459%" y="597" width="0.7252%" height="15" fill="rgb(240,2,53)" fg:x="734" fg:w="9"/><text x="59.3959%" y="607.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.73%)</title><rect x="59.1459%" y="581" width="0.7252%" height="15" fill="rgb(208,47,53)" fg:x="734" fg:w="9"/><text x="59.3959%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.73%)</title><rect x="59.1459%" y="565" width="0.7252%" height="15" fill="rgb(235,186,39)" fg:x="734" fg:w="9"/><text x="59.3959%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="59.5488%" y="549" width="0.3223%" height="15" fill="rgb(212,35,47)" fg:x="739" fg:w="4"/><text x="59.7988%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="59.5488%" y="533" width="0.3223%" height="15" fill="rgb(248,59,37)" fg:x="739" fg:w="4"/><text x="59.7988%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="59.5488%" y="517" width="0.3223%" height="15" fill="rgb(223,186,16)" fg:x="739" fg:w="4"/><text x="59.7988%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="59.5488%" y="501" width="0.3223%" height="15" fill="rgb(215,106,35)" fg:x="739" fg:w="4"/><text x="59.7988%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="59.5488%" y="485" width="0.3223%" height="15" fill="rgb(217,141,29)" fg:x="739" fg:w="4"/><text x="59.7988%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="59.5488%" y="469" width="0.3223%" height="15" fill="rgb(221,227,46)" fg:x="739" fg:w="4"/><text x="59.7988%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="59.5488%" y="453" width="0.3223%" height="15" fill="rgb(212,36,41)" fg:x="739" fg:w="4"/><text x="59.7988%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="59.5488%" y="437" width="0.3223%" height="15" fill="rgb(222,35,11)" fg:x="739" fg:w="4"/><text x="59.7988%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.7905%" y="421" width="0.0806%" height="15" fill="rgb(232,165,33)" fg:x="742" fg:w="1"/><text x="60.0405%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="59.8711%" y="581" width="0.0806%" height="15" fill="rgb(211,38,20)" fg:x="743" fg:w="1"/><text x="60.1211%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.8711%" y="565" width="0.0806%" height="15" fill="rgb(230,7,36)" fg:x="743" fg:w="1"/><text x="60.1211%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="60.1128%" y="485" width="0.3223%" height="15" fill="rgb(213,128,35)" fg:x="746" fg:w="4"/><text x="60.3628%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="60.1128%" y="469" width="0.3223%" height="15" fill="rgb(218,11,14)" fg:x="746" fg:w="4"/><text x="60.3628%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="60.1128%" y="453" width="0.3223%" height="15" fill="rgb(249,105,7)" fg:x="746" fg:w="4"/><text x="60.3628%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="60.1128%" y="437" width="0.3223%" height="15" fill="rgb(226,125,21)" fg:x="746" fg:w="4"/><text x="60.3628%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="60.1128%" y="421" width="0.3223%" height="15" fill="rgb(239,90,47)" fg:x="746" fg:w="4"/><text x="60.3628%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="60.1128%" y="405" width="0.3223%" height="15" fill="rgb(226,19,1)" fg:x="746" fg:w="4"/><text x="60.3628%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="60.1128%" y="389" width="0.3223%" height="15" fill="rgb(205,117,40)" fg:x="746" fg:w="4"/><text x="60.3628%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="60.1128%" y="373" width="0.3223%" height="15" fill="rgb(234,6,54)" fg:x="746" fg:w="4"/><text x="60.3628%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.32%)</title><rect x="60.1128%" y="357" width="0.3223%" height="15" fill="rgb(239,73,32)" fg:x="746" fg:w="4"/><text x="60.3628%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.32%)</title><rect x="60.1128%" y="341" width="0.3223%" height="15" fill="rgb(226,197,12)" fg:x="746" fg:w="4"/><text x="60.3628%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.32%)</title><rect x="60.1128%" y="325" width="0.3223%" height="15" fill="rgb(226,53,42)" fg:x="746" fg:w="4"/><text x="60.3628%" y="335.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.32%)</title><rect x="60.1128%" y="309" width="0.3223%" height="15" fill="rgb(234,99,30)" fg:x="746" fg:w="4"/><text x="60.3628%" y="319.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="60.1128%" y="293" width="0.3223%" height="15" fill="rgb(237,175,49)" fg:x="746" fg:w="4"/><text x="60.3628%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="60.0322%" y="501" width="0.5641%" height="15" fill="rgb(228,75,42)" fg:x="745" fg:w="7"/><text x="60.2822%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.4351%" y="485" width="0.1612%" height="15" fill="rgb(223,162,48)" fg:x="750" fg:w="2"/><text x="60.6851%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.4351%" y="469" width="0.1612%" height="15" fill="rgb(221,192,29)" fg:x="750" fg:w="2"/><text x="60.6851%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="60.4351%" y="453" width="0.1612%" height="15" fill="rgb(249,150,41)" fg:x="750" fg:w="2"/><text x="60.6851%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="60.4351%" y="437" width="0.1612%" height="15" fill="rgb(243,107,34)" fg:x="750" fg:w="2"/><text x="60.6851%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="60.4351%" y="421" width="0.1612%" height="15" fill="rgb(214,227,11)" fg:x="750" fg:w="2"/><text x="60.6851%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="60.4351%" y="405" width="0.1612%" height="15" fill="rgb(209,37,13)" fg:x="750" fg:w="2"/><text x="60.6851%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="60.4351%" y="389" width="0.1612%" height="15" fill="rgb(249,124,20)" fg:x="750" fg:w="2"/><text x="60.6851%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="60.4351%" y="373" width="0.1612%" height="15" fill="rgb(228,28,2)" fg:x="750" fg:w="2"/><text x="60.6851%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="60.4351%" y="357" width="0.1612%" height="15" fill="rgb(244,55,1)" fg:x="750" fg:w="2"/><text x="60.6851%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="60.4351%" y="341" width="0.1612%" height="15" fill="rgb(216,26,19)" fg:x="750" fg:w="2"/><text x="60.6851%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="60.4351%" y="325" width="0.1612%" height="15" fill="rgb(209,162,10)" fg:x="750" fg:w="2"/><text x="60.6851%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.4351%" y="309" width="0.1612%" height="15" fill="rgb(235,168,42)" fg:x="750" fg:w="2"/><text x="60.6851%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.73%)</title><rect x="59.9517%" y="549" width="0.7252%" height="15" fill="rgb(240,24,14)" fg:x="744" fg:w="9"/><text x="60.2017%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.73%)</title><rect x="59.9517%" y="533" width="0.7252%" height="15" fill="rgb(224,107,11)" fg:x="744" fg:w="9"/><text x="60.2017%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.73%)</title><rect x="59.9517%" y="517" width="0.7252%" height="15" fill="rgb(226,48,4)" fg:x="744" fg:w="9"/><text x="60.2017%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.5963%" y="501" width="0.0806%" height="15" fill="rgb(254,31,21)" fg:x="752" fg:w="1"/><text x="60.8463%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (23 samples, 1.85%)</title><rect x="59.1459%" y="629" width="1.8533%" height="15" fill="rgb(205,156,19)" fg:x="734" fg:w="23"/><text x="59.3959%" y="639.50">k..</text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (23 samples, 1.85%)</title><rect x="59.1459%" y="613" width="1.8533%" height="15" fill="rgb(216,73,31)" fg:x="734" fg:w="23"/><text x="59.3959%" y="623.50">k..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (14 samples, 1.13%)</title><rect x="59.8711%" y="597" width="1.1281%" height="15" fill="rgb(237,88,35)" fg:x="743" fg:w="14"/><text x="60.1211%" y="607.50"></text></g><g><title>kernel::model::props::load_props (13 samples, 1.05%)</title><rect x="59.9517%" y="581" width="1.0475%" height="15" fill="rgb(254,79,48)" fg:x="744" fg:w="13"/><text x="60.2017%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.05%)</title><rect x="59.9517%" y="565" width="1.0475%" height="15" fill="rgb(211,66,36)" fg:x="744" fg:w="13"/><text x="60.2017%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="60.6769%" y="549" width="0.3223%" height="15" fill="rgb(222,13,1)" fg:x="753" fg:w="4"/><text x="60.9269%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="60.6769%" y="533" width="0.3223%" height="15" fill="rgb(221,216,41)" fg:x="753" fg:w="4"/><text x="60.9269%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="60.6769%" y="517" width="0.3223%" height="15" fill="rgb(220,10,17)" fg:x="753" fg:w="4"/><text x="60.9269%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="60.6769%" y="501" width="0.3223%" height="15" fill="rgb(242,43,35)" fg:x="753" fg:w="4"/><text x="60.9269%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="60.8380%" y="485" width="0.1612%" height="15" fill="rgb(216,182,18)" fg:x="755" fg:w="2"/><text x="61.0880%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.8380%" y="469" width="0.1612%" height="15" fill="rgb(246,217,36)" fg:x="755" fg:w="2"/><text x="61.0880%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.8380%" y="453" width="0.1612%" height="15" fill="rgb(208,107,8)" fg:x="755" fg:w="2"/><text x="61.0880%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.8380%" y="437" width="0.1612%" height="15" fill="rgb(208,189,15)" fg:x="755" fg:w="2"/><text x="61.0880%" y="447.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="60.9992%" y="629" width="0.0806%" height="15" fill="rgb(211,70,9)" fg:x="757" fg:w="1"/><text x="61.2492%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.9992%" y="613" width="0.0806%" height="15" fill="rgb(217,95,34)" fg:x="757" fg:w="1"/><text x="61.2492%" y="623.50"></text></g><g><title>plugins_core::library::actions::reply_done (5 samples, 0.40%)</title><rect x="61.0798%" y="629" width="0.4029%" height="15" fill="rgb(240,223,2)" fg:x="758" fg:w="5"/><text x="61.3298%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (5 samples, 0.40%)</title><rect x="61.0798%" y="613" width="0.4029%" height="15" fill="rgb(231,18,6)" fg:x="758" fg:w="5"/><text x="61.3298%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (5 samples, 0.40%)</title><rect x="61.0798%" y="597" width="0.4029%" height="15" fill="rgb(254,44,46)" fg:x="758" fg:w="5"/><text x="61.3298%" y="607.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (5 samples, 0.40%)</title><rect x="61.0798%" y="581" width="0.4029%" height="15" fill="rgb(223,222,46)" fg:x="758" fg:w="5"/><text x="61.3298%" y="591.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="61.1604%" y="565" width="0.3223%" height="15" fill="rgb(229,163,13)" fg:x="759" fg:w="4"/><text x="61.4104%" y="575.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="61.2409%" y="549" width="0.2417%" height="15" fill="rgb(220,208,13)" fg:x="760" fg:w="3"/><text x="61.4909%" y="559.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="61.3215%" y="533" width="0.1612%" height="15" fill="rgb(244,28,53)" fg:x="761" fg:w="2"/><text x="61.5715%" y="543.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.16%)</title><rect x="61.3215%" y="517" width="0.1612%" height="15" fill="rgb(243,138,0)" fg:x="761" fg:w="2"/><text x="61.5715%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="61.4021%" y="501" width="0.0806%" height="15" fill="rgb(209,90,49)" fg:x="762" fg:w="1"/><text x="61.6521%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4827%" y="613" width="0.0806%" height="15" fill="rgb(247,114,18)" fg:x="763" fg:w="1"/><text x="61.7327%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4827%" y="597" width="0.0806%" height="15" fill="rgb(221,14,46)" fg:x="763" fg:w="1"/><text x="61.7327%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="61.5633%" y="613" width="0.0806%" height="15" fill="rgb(215,29,23)" fg:x="764" fg:w="1"/><text x="61.8133%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="61.5633%" y="597" width="0.0806%" height="15" fill="rgb(241,37,25)" fg:x="764" fg:w="1"/><text x="61.8133%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.5633%" y="581" width="0.0806%" height="15" fill="rgb(225,17,22)" fg:x="764" fg:w="1"/><text x="61.8133%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.6438%" y="597" width="0.0806%" height="15" fill="rgb(241,182,7)" fg:x="765" fg:w="1"/><text x="61.8938%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="61.6438%" y="613" width="0.1612%" height="15" fill="rgb(248,125,10)" fg:x="765" fg:w="2"/><text x="61.8938%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="61.7244%" y="597" width="0.0806%" height="15" fill="rgb(250,3,37)" fg:x="766" fg:w="1"/><text x="61.9744%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.7244%" y="581" width="0.0806%" height="15" fill="rgb(237,102,7)" fg:x="766" fg:w="1"/><text x="61.9744%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.8050%" y="533" width="0.0806%" height="15" fill="rgb(235,5,5)" fg:x="767" fg:w="1"/><text x="62.0550%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.8050%" y="517" width="0.0806%" height="15" fill="rgb(249,147,38)" fg:x="767" fg:w="1"/><text x="62.0550%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.8050%" y="501" width="0.0806%" height="15" fill="rgb(221,25,18)" fg:x="767" fg:w="1"/><text x="62.0550%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.8856%" y="469" width="0.0806%" height="15" fill="rgb(211,88,9)" fg:x="768" fg:w="1"/><text x="62.1356%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="61.8050%" y="581" width="0.2417%" height="15" fill="rgb(219,62,54)" fg:x="767" fg:w="3"/><text x="62.0550%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="61.8050%" y="565" width="0.2417%" height="15" fill="rgb(243,133,46)" fg:x="767" fg:w="3"/><text x="62.0550%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="61.8050%" y="549" width="0.2417%" height="15" fill="rgb(214,168,53)" fg:x="767" fg:w="3"/><text x="62.0550%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.8856%" y="533" width="0.1612%" height="15" fill="rgb(250,58,7)" fg:x="768" fg:w="2"/><text x="62.1356%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.8856%" y="517" width="0.1612%" height="15" fill="rgb(249,131,5)" fg:x="768" fg:w="2"/><text x="62.1356%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.8856%" y="501" width="0.1612%" height="15" fill="rgb(234,40,44)" fg:x="768" fg:w="2"/><text x="62.1356%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.8856%" y="485" width="0.1612%" height="15" fill="rgb(225,188,42)" fg:x="768" fg:w="2"/><text x="62.1356%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="61.9662%" y="469" width="0.0806%" height="15" fill="rgb(218,201,51)" fg:x="769" fg:w="1"/><text x="62.2162%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.9662%" y="453" width="0.0806%" height="15" fill="rgb(214,209,38)" fg:x="769" fg:w="1"/><text x="62.2162%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.9662%" y="437" width="0.0806%" height="15" fill="rgb(217,0,20)" fg:x="769" fg:w="1"/><text x="62.2162%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.9662%" y="421" width="0.0806%" height="15" fill="rgb(248,183,46)" fg:x="769" fg:w="1"/><text x="62.2162%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.0467%" y="501" width="0.0806%" height="15" fill="rgb(208,99,41)" fg:x="770" fg:w="1"/><text x="62.2967%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.0467%" y="485" width="0.0806%" height="15" fill="rgb(210,189,49)" fg:x="770" fg:w="1"/><text x="62.2967%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.0467%" y="469" width="0.0806%" height="15" fill="rgb(239,191,42)" fg:x="770" fg:w="1"/><text x="62.2967%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.0467%" y="453" width="0.0806%" height="15" fill="rgb(240,138,26)" fg:x="770" fg:w="1"/><text x="62.2967%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.0467%" y="437" width="0.0806%" height="15" fill="rgb(234,45,22)" fg:x="770" fg:w="1"/><text x="62.2967%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.0467%" y="421" width="0.0806%" height="15" fill="rgb(228,43,35)" fg:x="770" fg:w="1"/><text x="62.2967%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.0467%" y="405" width="0.0806%" height="15" fill="rgb(215,201,54)" fg:x="770" fg:w="1"/><text x="62.2967%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.0467%" y="389" width="0.0806%" height="15" fill="rgb(209,60,31)" fg:x="770" fg:w="1"/><text x="62.2967%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.0467%" y="373" width="0.0806%" height="15" fill="rgb(232,66,12)" fg:x="770" fg:w="1"/><text x="62.2967%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.0467%" y="357" width="0.0806%" height="15" fill="rgb(244,78,24)" fg:x="770" fg:w="1"/><text x="62.2967%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.0467%" y="341" width="0.0806%" height="15" fill="rgb(249,65,27)" fg:x="770" fg:w="1"/><text x="62.2967%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.0467%" y="325" width="0.0806%" height="15" fill="rgb(208,218,19)" fg:x="770" fg:w="1"/><text x="62.2967%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.0467%" y="309" width="0.0806%" height="15" fill="rgb(212,181,38)" fg:x="770" fg:w="1"/><text x="62.2967%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.0467%" y="533" width="0.1612%" height="15" fill="rgb(207,118,40)" fg:x="770" fg:w="2"/><text x="62.2967%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.0467%" y="517" width="0.1612%" height="15" fill="rgb(207,126,20)" fg:x="770" fg:w="2"/><text x="62.2967%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1273%" y="501" width="0.0806%" height="15" fill="rgb(232,15,46)" fg:x="771" fg:w="1"/><text x="62.3773%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1273%" y="485" width="0.0806%" height="15" fill="rgb(254,33,30)" fg:x="771" fg:w="1"/><text x="62.3773%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.1273%" y="469" width="0.0806%" height="15" fill="rgb(233,92,20)" fg:x="771" fg:w="1"/><text x="62.3773%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.1273%" y="453" width="0.0806%" height="15" fill="rgb(225,195,54)" fg:x="771" fg:w="1"/><text x="62.3773%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.1273%" y="437" width="0.0806%" height="15" fill="rgb(208,196,7)" fg:x="771" fg:w="1"/><text x="62.3773%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="62.1273%" y="421" width="0.0806%" height="15" fill="rgb(253,19,35)" fg:x="771" fg:w="1"/><text x="62.3773%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.1273%" y="405" width="0.0806%" height="15" fill="rgb(228,180,1)" fg:x="771" fg:w="1"/><text x="62.3773%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.2079%" y="501" width="0.0806%" height="15" fill="rgb(248,35,18)" fg:x="772" fg:w="1"/><text x="62.4579%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="61.8050%" y="613" width="0.5641%" height="15" fill="rgb(220,34,8)" fg:x="767" fg:w="7"/><text x="62.0550%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="61.8050%" y="597" width="0.5641%" height="15" fill="rgb(219,223,17)" fg:x="767" fg:w="7"/><text x="62.0550%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="62.0467%" y="581" width="0.3223%" height="15" fill="rgb(223,183,15)" fg:x="770" fg:w="4"/><text x="62.2967%" y="591.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="62.0467%" y="565" width="0.3223%" height="15" fill="rgb(253,184,45)" fg:x="770" fg:w="4"/><text x="62.2967%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="62.0467%" y="549" width="0.3223%" height="15" fill="rgb(207,97,29)" fg:x="770" fg:w="4"/><text x="62.2967%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.2079%" y="533" width="0.1612%" height="15" fill="rgb(250,170,27)" fg:x="772" fg:w="2"/><text x="62.4579%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.2079%" y="517" width="0.1612%" height="15" fill="rgb(206,178,17)" fg:x="772" fg:w="2"/><text x="62.4579%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.2885%" y="501" width="0.0806%" height="15" fill="rgb(213,92,46)" fg:x="773" fg:w="1"/><text x="62.5385%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2885%" y="485" width="0.0806%" height="15" fill="rgb(223,114,30)" fg:x="773" fg:w="1"/><text x="62.5385%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.2885%" y="469" width="0.0806%" height="15" fill="rgb(207,228,9)" fg:x="773" fg:w="1"/><text x="62.5385%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2885%" y="453" width="0.0806%" height="15" fill="rgb(205,70,25)" fg:x="773" fg:w="1"/><text x="62.5385%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.2885%" y="437" width="0.0806%" height="15" fill="rgb(252,45,30)" fg:x="773" fg:w="1"/><text x="62.5385%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2885%" y="421" width="0.0806%" height="15" fill="rgb(219,185,54)" fg:x="773" fg:w="1"/><text x="62.5385%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.2885%" y="405" width="0.0806%" height="15" fill="rgb(219,208,54)" fg:x="773" fg:w="1"/><text x="62.5385%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2885%" y="389" width="0.0806%" height="15" fill="rgb(207,164,54)" fg:x="773" fg:w="1"/><text x="62.5385%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.2885%" y="373" width="0.0806%" height="15" fill="rgb(240,155,22)" fg:x="773" fg:w="1"/><text x="62.5385%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="62.4496%" y="581" width="0.0806%" height="15" fill="rgb(217,127,14)" fg:x="775" fg:w="1"/><text x="62.6996%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="62.4496%" y="565" width="0.0806%" height="15" fill="rgb(232,179,42)" fg:x="775" fg:w="1"/><text x="62.6996%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.4496%" y="549" width="0.0806%" height="15" fill="rgb(247,55,45)" fg:x="775" fg:w="1"/><text x="62.6996%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.5302%" y="549" width="0.0806%" height="15" fill="rgb(217,11,18)" fg:x="776" fg:w="1"/><text x="62.7802%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="62.6108%" y="549" width="0.1612%" height="15" fill="rgb(227,127,4)" fg:x="777" fg:w="2"/><text x="62.8608%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.6108%" y="533" width="0.1612%" height="15" fill="rgb(217,97,45)" fg:x="777" fg:w="2"/><text x="62.8608%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.6914%" y="517" width="0.0806%" height="15" fill="rgb(250,135,20)" fg:x="778" fg:w="1"/><text x="62.9414%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.6914%" y="501" width="0.0806%" height="15" fill="rgb(224,213,26)" fg:x="778" fg:w="1"/><text x="62.9414%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (6 samples, 0.48%)</title><rect x="62.3691%" y="613" width="0.4835%" height="15" fill="rgb(237,86,25)" fg:x="774" fg:w="6"/><text x="62.6191%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="62.3691%" y="597" width="0.4835%" height="15" fill="rgb(251,105,18)" fg:x="774" fg:w="6"/><text x="62.6191%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="62.5302%" y="581" width="0.3223%" height="15" fill="rgb(246,124,25)" fg:x="776" fg:w="4"/><text x="62.7802%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.5302%" y="565" width="0.3223%" height="15" fill="rgb(210,90,3)" fg:x="776" fg:w="4"/><text x="62.7802%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="62.7720%" y="549" width="0.0806%" height="15" fill="rgb(249,40,31)" fg:x="779" fg:w="1"/><text x="63.0220%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="62.7720%" y="533" width="0.0806%" height="15" fill="rgb(231,228,1)" fg:x="779" fg:w="1"/><text x="63.0220%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="62.7720%" y="517" width="0.0806%" height="15" fill="rgb(242,25,49)" fg:x="779" fg:w="1"/><text x="63.0220%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.7720%" y="501" width="0.0806%" height="15" fill="rgb(224,142,22)" fg:x="779" fg:w="1"/><text x="63.0220%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.7720%" y="485" width="0.0806%" height="15" fill="rgb(228,106,29)" fg:x="779" fg:w="1"/><text x="63.0220%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="62.7720%" y="469" width="0.0806%" height="15" fill="rgb(207,2,15)" fg:x="779" fg:w="1"/><text x="63.0220%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.8525%" y="581" width="0.0806%" height="15" fill="rgb(231,43,37)" fg:x="780" fg:w="1"/><text x="63.1025%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8525%" y="565" width="0.0806%" height="15" fill="rgb(245,193,12)" fg:x="780" fg:w="1"/><text x="63.1025%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.8525%" y="549" width="0.0806%" height="15" fill="rgb(246,9,49)" fg:x="780" fg:w="1"/><text x="63.1025%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8525%" y="533" width="0.0806%" height="15" fill="rgb(218,50,36)" fg:x="780" fg:w="1"/><text x="63.1025%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8525%" y="517" width="0.0806%" height="15" fill="rgb(225,206,16)" fg:x="780" fg:w="1"/><text x="63.1025%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.8525%" y="501" width="0.0806%" height="15" fill="rgb(242,52,5)" fg:x="780" fg:w="1"/><text x="63.1025%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.8525%" y="485" width="0.0806%" height="15" fill="rgb(217,158,11)" fg:x="780" fg:w="1"/><text x="63.1025%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.8525%" y="469" width="0.0806%" height="15" fill="rgb(242,144,22)" fg:x="780" fg:w="1"/><text x="63.1025%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.8525%" y="453" width="0.0806%" height="15" fill="rgb(236,191,3)" fg:x="780" fg:w="1"/><text x="63.1025%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.8525%" y="437" width="0.0806%" height="15" fill="rgb(241,22,19)" fg:x="780" fg:w="1"/><text x="63.1025%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.8525%" y="421" width="0.0806%" height="15" fill="rgb(205,217,44)" fg:x="780" fg:w="1"/><text x="63.1025%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.8525%" y="405" width="0.0806%" height="15" fill="rgb(231,53,3)" fg:x="780" fg:w="1"/><text x="63.1025%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.8525%" y="389" width="0.0806%" height="15" fill="rgb(207,13,22)" fg:x="780" fg:w="1"/><text x="63.1025%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.8525%" y="373" width="0.0806%" height="15" fill="rgb(234,62,29)" fg:x="780" fg:w="1"/><text x="63.1025%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.8525%" y="357" width="0.0806%" height="15" fill="rgb(226,175,44)" fg:x="780" fg:w="1"/><text x="63.1025%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.9331%" y="549" width="0.0806%" height="15" fill="rgb(239,177,6)" fg:x="781" fg:w="1"/><text x="63.1831%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="63.0137%" y="549" width="0.1612%" height="15" fill="rgb(249,125,15)" fg:x="782" fg:w="2"/><text x="63.2637%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.0943%" y="533" width="0.0806%" height="15" fill="rgb(210,201,5)" fg:x="783" fg:w="1"/><text x="63.3443%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="63.0943%" y="517" width="0.0806%" height="15" fill="rgb(210,14,6)" fg:x="783" fg:w="1"/><text x="63.3443%" y="527.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (5 samples, 0.40%)</title><rect x="62.8525%" y="613" width="0.4029%" height="15" fill="rgb(239,141,15)" fg:x="780" fg:w="5"/><text x="63.1025%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="62.8525%" y="597" width="0.4029%" height="15" fill="rgb(235,75,9)" fg:x="780" fg:w="5"/><text x="63.1025%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.32%)</title><rect x="62.9331%" y="581" width="0.3223%" height="15" fill="rgb(246,122,37)" fg:x="781" fg:w="4"/><text x="63.1831%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="62.9331%" y="565" width="0.3223%" height="15" fill="rgb(235,75,52)" fg:x="781" fg:w="4"/><text x="63.1831%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="63.1749%" y="549" width="0.0806%" height="15" fill="rgb(235,179,12)" fg:x="784" fg:w="1"/><text x="63.4249%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="63.1749%" y="533" width="0.0806%" height="15" fill="rgb(223,20,9)" fg:x="784" fg:w="1"/><text x="63.4249%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="63.1749%" y="517" width="0.0806%" height="15" fill="rgb(223,75,22)" fg:x="784" fg:w="1"/><text x="63.4249%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.1749%" y="501" width="0.0806%" height="15" fill="rgb(248,148,18)" fg:x="784" fg:w="1"/><text x="63.4249%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="63.3360%" y="597" width="0.0806%" height="15" fill="rgb(225,103,8)" fg:x="786" fg:w="1"/><text x="63.5860%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="63.3360%" y="581" width="0.0806%" height="15" fill="rgb(237,168,17)" fg:x="786" fg:w="1"/><text x="63.5860%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="63.3360%" y="565" width="0.0806%" height="15" fill="rgb(215,192,38)" fg:x="786" fg:w="1"/><text x="63.5860%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="63.3360%" y="549" width="0.0806%" height="15" fill="rgb(237,69,28)" fg:x="786" fg:w="1"/><text x="63.5860%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="63.3360%" y="533" width="0.0806%" height="15" fill="rgb(254,167,32)" fg:x="786" fg:w="1"/><text x="63.5860%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="63.3360%" y="517" width="0.0806%" height="15" fill="rgb(250,81,30)" fg:x="786" fg:w="1"/><text x="63.5860%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="63.3360%" y="501" width="0.0806%" height="15" fill="rgb(240,68,52)" fg:x="786" fg:w="1"/><text x="63.5860%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="63.3360%" y="485" width="0.0806%" height="15" fill="rgb(205,97,42)" fg:x="786" fg:w="1"/><text x="63.5860%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="63.3360%" y="469" width="0.0806%" height="15" fill="rgb(217,10,22)" fg:x="786" fg:w="1"/><text x="63.5860%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="63.3360%" y="453" width="0.0806%" height="15" fill="rgb(216,21,26)" fg:x="786" fg:w="1"/><text x="63.5860%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="63.3360%" y="437" width="0.0806%" height="15" fill="rgb(239,0,36)" fg:x="786" fg:w="1"/><text x="63.5860%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="63.3360%" y="421" width="0.0806%" height="15" fill="rgb(216,162,28)" fg:x="786" fg:w="1"/><text x="63.5860%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="63.3360%" y="405" width="0.0806%" height="15" fill="rgb(246,22,39)" fg:x="786" fg:w="1"/><text x="63.5860%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="63.3360%" y="389" width="0.0806%" height="15" fill="rgb(222,84,49)" fg:x="786" fg:w="1"/><text x="63.5860%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="63.3360%" y="373" width="0.0806%" height="15" fill="rgb(250,38,34)" fg:x="786" fg:w="1"/><text x="63.5860%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.3360%" y="357" width="0.0806%" height="15" fill="rgb(236,0,38)" fg:x="786" fg:w="1"/><text x="63.5860%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.4166%" y="501" width="0.0806%" height="15" fill="rgb(237,205,54)" fg:x="787" fg:w="1"/><text x="63.6666%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.4166%" y="485" width="0.0806%" height="15" fill="rgb(221,80,35)" fg:x="787" fg:w="1"/><text x="63.6666%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.4166%" y="469" width="0.0806%" height="15" fill="rgb(237,204,22)" fg:x="787" fg:w="1"/><text x="63.6666%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4166%" y="453" width="0.0806%" height="15" fill="rgb(213,108,15)" fg:x="787" fg:w="1"/><text x="63.6666%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4166%" y="437" width="0.0806%" height="15" fill="rgb(251,187,9)" fg:x="787" fg:w="1"/><text x="63.6666%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.4166%" y="421" width="0.0806%" height="15" fill="rgb(250,61,9)" fg:x="787" fg:w="1"/><text x="63.6666%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.4166%" y="405" width="0.0806%" height="15" fill="rgb(230,131,33)" fg:x="787" fg:w="1"/><text x="63.6666%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.4166%" y="389" width="0.0806%" height="15" fill="rgb(239,117,11)" fg:x="787" fg:w="1"/><text x="63.6666%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.4166%" y="373" width="0.0806%" height="15" fill="rgb(222,112,44)" fg:x="787" fg:w="1"/><text x="63.6666%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.4166%" y="357" width="0.0806%" height="15" fill="rgb(251,33,25)" fg:x="787" fg:w="1"/><text x="63.6666%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.4166%" y="341" width="0.0806%" height="15" fill="rgb(208,171,34)" fg:x="787" fg:w="1"/><text x="63.6666%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.4166%" y="325" width="0.0806%" height="15" fill="rgb(250,166,54)" fg:x="787" fg:w="1"/><text x="63.6666%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.4166%" y="309" width="0.0806%" height="15" fill="rgb(212,148,2)" fg:x="787" fg:w="1"/><text x="63.6666%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.4166%" y="293" width="0.0806%" height="15" fill="rgb(224,92,39)" fg:x="787" fg:w="1"/><text x="63.6666%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.4166%" y="277" width="0.0806%" height="15" fill="rgb(250,28,16)" fg:x="787" fg:w="1"/><text x="63.6666%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.4166%" y="517" width="0.1612%" height="15" fill="rgb(227,128,26)" fg:x="787" fg:w="2"/><text x="63.6666%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.4972%" y="501" width="0.0806%" height="15" fill="rgb(248,66,7)" fg:x="788" fg:w="1"/><text x="63.7472%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="63.5778%" y="421" width="0.0806%" height="15" fill="rgb(215,124,51)" fg:x="789" fg:w="1"/><text x="63.8278%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.6583%" y="389" width="0.0806%" height="15" fill="rgb(207,91,1)" fg:x="790" fg:w="1"/><text x="63.9083%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="63.4166%" y="565" width="0.4029%" height="15" fill="rgb(217,207,38)" fg:x="787" fg:w="5"/><text x="63.6666%" y="575.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="63.4166%" y="549" width="0.4029%" height="15" fill="rgb(240,118,9)" fg:x="787" fg:w="5"/><text x="63.6666%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="63.4166%" y="533" width="0.4029%" height="15" fill="rgb(224,147,4)" fg:x="787" fg:w="5"/><text x="63.6666%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="63.5778%" y="517" width="0.2417%" height="15" fill="rgb(205,105,13)" fg:x="789" fg:w="3"/><text x="63.8278%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.5778%" y="501" width="0.2417%" height="15" fill="rgb(251,78,39)" fg:x="789" fg:w="3"/><text x="63.8278%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="63.5778%" y="485" width="0.2417%" height="15" fill="rgb(225,60,44)" fg:x="789" fg:w="3"/><text x="63.8278%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.5778%" y="469" width="0.2417%" height="15" fill="rgb(221,228,40)" fg:x="789" fg:w="3"/><text x="63.8278%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="63.5778%" y="453" width="0.2417%" height="15" fill="rgb(215,104,30)" fg:x="789" fg:w="3"/><text x="63.8278%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.5778%" y="437" width="0.2417%" height="15" fill="rgb(206,183,3)" fg:x="789" fg:w="3"/><text x="63.8278%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.6583%" y="421" width="0.1612%" height="15" fill="rgb(236,199,25)" fg:x="790" fg:w="2"/><text x="63.9083%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.6583%" y="405" width="0.1612%" height="15" fill="rgb(230,107,29)" fg:x="790" fg:w="2"/><text x="63.9083%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.7389%" y="389" width="0.0806%" height="15" fill="rgb(216,12,37)" fg:x="791" fg:w="1"/><text x="63.9889%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.7389%" y="373" width="0.0806%" height="15" fill="rgb(238,165,28)" fg:x="791" fg:w="1"/><text x="63.9889%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="63.7389%" y="357" width="0.0806%" height="15" fill="rgb(226,173,5)" fg:x="791" fg:w="1"/><text x="63.9889%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="63.7389%" y="341" width="0.0806%" height="15" fill="rgb(229,9,37)" fg:x="791" fg:w="1"/><text x="63.9889%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.9807%" y="437" width="0.0806%" height="15" fill="rgb(252,194,43)" fg:x="794" fg:w="1"/><text x="64.2307%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.9807%" y="421" width="0.0806%" height="15" fill="rgb(215,58,45)" fg:x="794" fg:w="1"/><text x="64.2307%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.9807%" y="405" width="0.0806%" height="15" fill="rgb(218,34,51)" fg:x="794" fg:w="1"/><text x="64.2307%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.9807%" y="389" width="0.0806%" height="15" fill="rgb(230,104,27)" fg:x="794" fg:w="1"/><text x="64.2307%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.9807%" y="373" width="0.0806%" height="15" fill="rgb(250,9,6)" fg:x="794" fg:w="1"/><text x="64.2307%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.9807%" y="357" width="0.0806%" height="15" fill="rgb(245,10,16)" fg:x="794" fg:w="1"/><text x="64.2307%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.9807%" y="341" width="0.0806%" height="15" fill="rgb(227,182,27)" fg:x="794" fg:w="1"/><text x="64.2307%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.9807%" y="325" width="0.0806%" height="15" fill="rgb(225,91,37)" fg:x="794" fg:w="1"/><text x="64.2307%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.9807%" y="309" width="0.0806%" height="15" fill="rgb(240,16,41)" fg:x="794" fg:w="1"/><text x="64.2307%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.9807%" y="293" width="0.0806%" height="15" fill="rgb(214,108,54)" fg:x="794" fg:w="1"/><text x="64.2307%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.9807%" y="277" width="0.0806%" height="15" fill="rgb(253,65,28)" fg:x="794" fg:w="1"/><text x="64.2307%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.9807%" y="261" width="0.0806%" height="15" fill="rgb(246,105,4)" fg:x="794" fg:w="1"/><text x="64.2307%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="63.9001%" y="485" width="0.2417%" height="15" fill="rgb(223,163,37)" fg:x="793" fg:w="3"/><text x="64.1501%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="63.9001%" y="469" width="0.2417%" height="15" fill="rgb(206,202,31)" fg:x="793" fg:w="3"/><text x="64.1501%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.9807%" y="453" width="0.1612%" height="15" fill="rgb(241,202,54)" fg:x="794" fg:w="2"/><text x="64.2307%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.0612%" y="437" width="0.0806%" height="15" fill="rgb(220,22,45)" fg:x="795" fg:w="1"/><text x="64.3112%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="63.9001%" y="501" width="0.3223%" height="15" fill="rgb(234,215,40)" fg:x="793" fg:w="4"/><text x="64.1501%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.1418%" y="485" width="0.0806%" height="15" fill="rgb(220,3,5)" fg:x="796" fg:w="1"/><text x="64.3918%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.1418%" y="469" width="0.0806%" height="15" fill="rgb(210,8,15)" fg:x="796" fg:w="1"/><text x="64.3918%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.1418%" y="453" width="0.0806%" height="15" fill="rgb(218,113,45)" fg:x="796" fg:w="1"/><text x="64.3918%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.1418%" y="437" width="0.0806%" height="15" fill="rgb(249,208,10)" fg:x="796" fg:w="1"/><text x="64.3918%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.1418%" y="421" width="0.0806%" height="15" fill="rgb(250,145,17)" fg:x="796" fg:w="1"/><text x="64.3918%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.1418%" y="405" width="0.0806%" height="15" fill="rgb(254,24,13)" fg:x="796" fg:w="1"/><text x="64.3918%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.1418%" y="389" width="0.0806%" height="15" fill="rgb(244,36,15)" fg:x="796" fg:w="1"/><text x="64.3918%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.1418%" y="373" width="0.0806%" height="15" fill="rgb(228,168,26)" fg:x="796" fg:w="1"/><text x="64.3918%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.1418%" y="357" width="0.0806%" height="15" fill="rgb(214,145,10)" fg:x="796" fg:w="1"/><text x="64.3918%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.1418%" y="341" width="0.0806%" height="15" fill="rgb(232,59,25)" fg:x="796" fg:w="1"/><text x="64.3918%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.1418%" y="325" width="0.0806%" height="15" fill="rgb(254,181,2)" fg:x="796" fg:w="1"/><text x="64.3918%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.1418%" y="309" width="0.0806%" height="15" fill="rgb(221,139,49)" fg:x="796" fg:w="1"/><text x="64.3918%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="63.9001%" y="517" width="0.4029%" height="15" fill="rgb(235,84,36)" fg:x="793" fg:w="5"/><text x="64.1501%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.2224%" y="501" width="0.0806%" height="15" fill="rgb(254,32,49)" fg:x="797" fg:w="1"/><text x="64.4724%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.2224%" y="485" width="0.0806%" height="15" fill="rgb(214,136,49)" fg:x="797" fg:w="1"/><text x="64.4724%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.2224%" y="469" width="0.0806%" height="15" fill="rgb(206,113,54)" fg:x="797" fg:w="1"/><text x="64.4724%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.2224%" y="453" width="0.0806%" height="15" fill="rgb(226,78,17)" fg:x="797" fg:w="1"/><text x="64.4724%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.2224%" y="437" width="0.0806%" height="15" fill="rgb(249,189,19)" fg:x="797" fg:w="1"/><text x="64.4724%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.2224%" y="421" width="0.0806%" height="15" fill="rgb(211,82,26)" fg:x="797" fg:w="1"/><text x="64.4724%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.2224%" y="405" width="0.0806%" height="15" fill="rgb(206,131,52)" fg:x="797" fg:w="1"/><text x="64.4724%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.2224%" y="389" width="0.0806%" height="15" fill="rgb(223,51,24)" fg:x="797" fg:w="1"/><text x="64.4724%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.2224%" y="373" width="0.0806%" height="15" fill="rgb(235,93,36)" fg:x="797" fg:w="1"/><text x="64.4724%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.2224%" y="357" width="0.0806%" height="15" fill="rgb(219,118,14)" fg:x="797" fg:w="1"/><text x="64.4724%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.2224%" y="341" width="0.0806%" height="15" fill="rgb(240,145,10)" fg:x="797" fg:w="1"/><text x="64.4724%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.2224%" y="325" width="0.0806%" height="15" fill="rgb(241,104,15)" fg:x="797" fg:w="1"/><text x="64.4724%" y="335.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (12 samples, 0.97%)</title><rect x="63.4166%" y="597" width="0.9670%" height="15" fill="rgb(248,117,21)" fg:x="787" fg:w="12"/><text x="63.6666%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (12 samples, 0.97%)</title><rect x="63.4166%" y="581" width="0.9670%" height="15" fill="rgb(250,184,34)" fg:x="787" fg:w="12"/><text x="63.6666%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="63.8195%" y="565" width="0.5641%" height="15" fill="rgb(218,169,23)" fg:x="792" fg:w="7"/><text x="64.0695%" y="575.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="63.8195%" y="549" width="0.5641%" height="15" fill="rgb(214,33,53)" fg:x="792" fg:w="7"/><text x="64.0695%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="63.8195%" y="533" width="0.5641%" height="15" fill="rgb(239,78,4)" fg:x="792" fg:w="7"/><text x="64.0695%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.3030%" y="517" width="0.0806%" height="15" fill="rgb(250,25,23)" fg:x="798" fg:w="1"/><text x="64.5530%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.3030%" y="501" width="0.0806%" height="15" fill="rgb(220,205,51)" fg:x="798" fg:w="1"/><text x="64.5530%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.3030%" y="485" width="0.0806%" height="15" fill="rgb(252,115,2)" fg:x="798" fg:w="1"/><text x="64.5530%" y="495.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (15 samples, 1.21%)</title><rect x="63.2554%" y="613" width="1.2087%" height="15" fill="rgb(222,106,48)" fg:x="785" fg:w="15"/><text x="63.5054%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="64.3836%" y="597" width="0.0806%" height="15" fill="rgb(225,77,33)" fg:x="799" fg:w="1"/><text x="64.6336%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="64.3836%" y="581" width="0.0806%" height="15" fill="rgb(250,135,2)" fg:x="799" fg:w="1"/><text x="64.6336%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="64.3836%" y="565" width="0.0806%" height="15" fill="rgb(221,217,54)" fg:x="799" fg:w="1"/><text x="64.6336%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="64.3836%" y="549" width="0.0806%" height="15" fill="rgb(233,12,6)" fg:x="799" fg:w="1"/><text x="64.6336%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="64.3836%" y="533" width="0.0806%" height="15" fill="rgb(251,10,27)" fg:x="799" fg:w="1"/><text x="64.6336%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="64.3836%" y="517" width="0.0806%" height="15" fill="rgb(214,20,35)" fg:x="799" fg:w="1"/><text x="64.6336%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="64.3836%" y="501" width="0.0806%" height="15" fill="rgb(249,13,18)" fg:x="799" fg:w="1"/><text x="64.6336%" y="511.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="64.3836%" y="485" width="0.0806%" height="15" fill="rgb(251,115,18)" fg:x="799" fg:w="1"/><text x="64.6336%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="64.6253%" y="597" width="0.0806%" height="15" fill="rgb(219,91,11)" fg:x="802" fg:w="1"/><text x="64.8753%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="64.6253%" y="581" width="0.0806%" height="15" fill="rgb(238,130,14)" fg:x="802" fg:w="1"/><text x="64.8753%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="64.6253%" y="565" width="0.0806%" height="15" fill="rgb(216,197,46)" fg:x="802" fg:w="1"/><text x="64.8753%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (4 samples, 0.32%)</title><rect x="64.4641%" y="613" width="0.3223%" height="15" fill="rgb(239,113,46)" fg:x="800" fg:w="4"/><text x="64.7141%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="64.7059%" y="597" width="0.0806%" height="15" fill="rgb(220,76,52)" fg:x="803" fg:w="1"/><text x="64.9559%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.7059%" y="581" width="0.0806%" height="15" fill="rgb(247,167,28)" fg:x="803" fg:w="1"/><text x="64.9559%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (2 samples, 0.16%)</title><rect x="64.7865%" y="597" width="0.1612%" height="15" fill="rgb(228,6,44)" fg:x="804" fg:w="2"/><text x="65.0365%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="64.7865%" y="581" width="0.1612%" height="15" fill="rgb(214,75,23)" fg:x="804" fg:w="2"/><text x="65.0365%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="64.7865%" y="565" width="0.1612%" height="15" fill="rgb(241,211,28)" fg:x="804" fg:w="2"/><text x="65.0365%" y="575.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="64.9476%" y="565" width="0.2417%" height="15" fill="rgb(216,147,39)" fg:x="806" fg:w="3"/><text x="65.1976%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.9476%" y="549" width="0.2417%" height="15" fill="rgb(237,121,45)" fg:x="806" fg:w="3"/><text x="65.1976%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.9476%" y="533" width="0.2417%" height="15" fill="rgb(214,115,15)" fg:x="806" fg:w="3"/><text x="65.1976%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.0282%" y="517" width="0.1612%" height="15" fill="rgb(253,132,27)" fg:x="807" fg:w="2"/><text x="65.2782%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.0282%" y="501" width="0.1612%" height="15" fill="rgb(222,56,1)" fg:x="807" fg:w="2"/><text x="65.2782%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="65.0282%" y="485" width="0.1612%" height="15" fill="rgb(216,99,46)" fg:x="807" fg:w="2"/><text x="65.2782%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="65.0282%" y="469" width="0.1612%" height="15" fill="rgb(232,1,9)" fg:x="807" fg:w="2"/><text x="65.2782%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="65.0282%" y="453" width="0.1612%" height="15" fill="rgb(215,41,52)" fg:x="807" fg:w="2"/><text x="65.2782%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="65.0282%" y="437" width="0.1612%" height="15" fill="rgb(223,107,41)" fg:x="807" fg:w="2"/><text x="65.2782%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="65.0282%" y="421" width="0.1612%" height="15" fill="rgb(208,151,32)" fg:x="807" fg:w="2"/><text x="65.2782%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="65.0282%" y="405" width="0.1612%" height="15" fill="rgb(229,32,3)" fg:x="807" fg:w="2"/><text x="65.2782%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="65.0282%" y="389" width="0.1612%" height="15" fill="rgb(234,186,36)" fg:x="807" fg:w="2"/><text x="65.2782%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="65.0282%" y="373" width="0.1612%" height="15" fill="rgb(216,9,5)" fg:x="807" fg:w="2"/><text x="65.2782%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="65.0282%" y="357" width="0.1612%" height="15" fill="rgb(226,151,21)" fg:x="807" fg:w="2"/><text x="65.2782%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.0282%" y="341" width="0.1612%" height="15" fill="rgb(210,130,28)" fg:x="807" fg:w="2"/><text x="65.2782%" y="351.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="65.1894%" y="565" width="0.0806%" height="15" fill="rgb(239,58,31)" fg:x="809" fg:w="1"/><text x="65.4394%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="65.1894%" y="549" width="0.0806%" height="15" fill="rgb(213,14,0)" fg:x="809" fg:w="1"/><text x="65.4394%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="65.1894%" y="533" width="0.0806%" height="15" fill="rgb(228,97,38)" fg:x="809" fg:w="1"/><text x="65.4394%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="65.1894%" y="517" width="0.0806%" height="15" fill="rgb(248,9,13)" fg:x="809" fg:w="1"/><text x="65.4394%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1894%" y="501" width="0.0806%" height="15" fill="rgb(233,149,17)" fg:x="809" fg:w="1"/><text x="65.4394%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1894%" y="485" width="0.0806%" height="15" fill="rgb(233,127,53)" fg:x="809" fg:w="1"/><text x="65.4394%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1894%" y="469" width="0.0806%" height="15" fill="rgb(207,120,37)" fg:x="809" fg:w="1"/><text x="65.4394%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.1894%" y="453" width="0.0806%" height="15" fill="rgb(210,65,38)" fg:x="809" fg:w="1"/><text x="65.4394%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.1894%" y="437" width="0.0806%" height="15" fill="rgb(229,206,39)" fg:x="809" fg:w="1"/><text x="65.4394%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.1894%" y="421" width="0.0806%" height="15" fill="rgb(237,11,35)" fg:x="809" fg:w="1"/><text x="65.4394%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.1894%" y="405" width="0.0806%" height="15" fill="rgb(237,159,38)" fg:x="809" fg:w="1"/><text x="65.4394%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.1894%" y="389" width="0.0806%" height="15" fill="rgb(239,79,36)" fg:x="809" fg:w="1"/><text x="65.4394%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.1894%" y="373" width="0.0806%" height="15" fill="rgb(231,163,51)" fg:x="809" fg:w="1"/><text x="65.4394%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.1894%" y="357" width="0.0806%" height="15" fill="rgb(226,68,29)" fg:x="809" fg:w="1"/><text x="65.4394%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.1894%" y="341" width="0.0806%" height="15" fill="rgb(250,192,3)" fg:x="809" fg:w="1"/><text x="65.4394%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.1894%" y="325" width="0.0806%" height="15" fill="rgb(206,11,13)" fg:x="809" fg:w="1"/><text x="65.4394%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.1894%" y="309" width="0.0806%" height="15" fill="rgb(234,128,26)" fg:x="809" fg:w="1"/><text x="65.4394%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.40%)</title><rect x="64.9476%" y="597" width="0.4029%" height="15" fill="rgb(226,134,12)" fg:x="806" fg:w="5"/><text x="65.1976%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="64.9476%" y="581" width="0.4029%" height="15" fill="rgb(240,60,15)" fg:x="806" fg:w="5"/><text x="65.1976%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.2699%" y="565" width="0.0806%" height="15" fill="rgb(222,112,11)" fg:x="810" fg:w="1"/><text x="65.5199%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.2699%" y="549" width="0.0806%" height="15" fill="rgb(231,207,44)" fg:x="810" fg:w="1"/><text x="65.5199%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.2699%" y="533" width="0.0806%" height="15" fill="rgb(250,222,54)" fg:x="810" fg:w="1"/><text x="65.5199%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.2699%" y="517" width="0.0806%" height="15" fill="rgb(243,223,15)" fg:x="810" fg:w="1"/><text x="65.5199%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="65.2699%" y="501" width="0.0806%" height="15" fill="rgb(239,2,5)" fg:x="810" fg:w="1"/><text x="65.5199%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (163 samples, 13.13%)</title><rect x="52.2965%" y="645" width="13.1346%" height="15" fill="rgb(241,83,27)" fg:x="649" fg:w="163"/><text x="52.5465%" y="655.50">&lt;plugins_core::carry..</text></g><g><title>plugins_core::location::change_location (49 samples, 3.95%)</title><rect x="61.4827%" y="629" width="3.9484%" height="15" fill="rgb(223,175,51)" fg:x="763" fg:w="49"/><text x="61.7327%" y="639.50">plug..</text></g><g><title>plugins_core::location::Location::set (8 samples, 0.64%)</title><rect x="64.7865%" y="613" width="0.6446%" height="15" fill="rgb(209,11,47)" fg:x="804" fg:w="8"/><text x="65.0365%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="65.3505%" y="597" width="0.0806%" height="15" fill="rgb(249,60,43)" fg:x="811" fg:w="1"/><text x="65.6005%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.3505%" y="581" width="0.0806%" height="15" fill="rgb(244,84,47)" fg:x="811" fg:w="1"/><text x="65.6005%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.3505%" y="565" width="0.0806%" height="15" fill="rgb(241,110,24)" fg:x="811" fg:w="1"/><text x="65.6005%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="65.3505%" y="549" width="0.0806%" height="15" fill="rgb(236,79,1)" fg:x="811" fg:w="1"/><text x="65.6005%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="65.4311%" y="613" width="0.0806%" height="15" fill="rgb(210,152,4)" fg:x="812" fg:w="1"/><text x="65.6811%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="65.4311%" y="597" width="0.0806%" height="15" fill="rgb(218,71,19)" fg:x="812" fg:w="1"/><text x="65.6811%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.4311%" y="581" width="0.0806%" height="15" fill="rgb(207,161,51)" fg:x="812" fg:w="1"/><text x="65.6811%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.4311%" y="565" width="0.0806%" height="15" fill="rgb(219,84,54)" fg:x="812" fg:w="1"/><text x="65.6811%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.4311%" y="549" width="0.0806%" height="15" fill="rgb(243,172,34)" fg:x="812" fg:w="1"/><text x="65.6811%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.5117%" y="565" width="0.0806%" height="15" fill="rgb(233,181,1)" fg:x="813" fg:w="1"/><text x="65.7617%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.5117%" y="549" width="0.0806%" height="15" fill="rgb(236,21,18)" fg:x="813" fg:w="1"/><text x="65.7617%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.5117%" y="533" width="0.0806%" height="15" fill="rgb(244,165,15)" fg:x="813" fg:w="1"/><text x="65.7617%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.5117%" y="517" width="0.0806%" height="15" fill="rgb(235,75,19)" fg:x="813" fg:w="1"/><text x="65.7617%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.5117%" y="501" width="0.0806%" height="15" fill="rgb(217,229,29)" fg:x="813" fg:w="1"/><text x="65.7617%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.5117%" y="485" width="0.0806%" height="15" fill="rgb(250,200,19)" fg:x="813" fg:w="1"/><text x="65.7617%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.5117%" y="469" width="0.0806%" height="15" fill="rgb(218,195,36)" fg:x="813" fg:w="1"/><text x="65.7617%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.5117%" y="453" width="0.0806%" height="15" fill="rgb(206,183,32)" fg:x="813" fg:w="1"/><text x="65.7617%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.5117%" y="437" width="0.0806%" height="15" fill="rgb(235,151,53)" fg:x="813" fg:w="1"/><text x="65.7617%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.5117%" y="421" width="0.0806%" height="15" fill="rgb(244,120,37)" fg:x="813" fg:w="1"/><text x="65.7617%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.5117%" y="405" width="0.0806%" height="15" fill="rgb(209,96,41)" fg:x="813" fg:w="1"/><text x="65.7617%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.5117%" y="389" width="0.0806%" height="15" fill="rgb(208,229,20)" fg:x="813" fg:w="1"/><text x="65.7617%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.5117%" y="373" width="0.0806%" height="15" fill="rgb(208,153,33)" fg:x="813" fg:w="1"/><text x="65.7617%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.5117%" y="357" width="0.0806%" height="15" fill="rgb(223,196,8)" fg:x="813" fg:w="1"/><text x="65.7617%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.5117%" y="341" width="0.0806%" height="15" fill="rgb(241,75,49)" fg:x="813" fg:w="1"/><text x="65.7617%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.5117%" y="325" width="0.0806%" height="15" fill="rgb(212,52,42)" fg:x="813" fg:w="1"/><text x="65.7617%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.5117%" y="309" width="0.0806%" height="15" fill="rgb(220,148,43)" fg:x="813" fg:w="1"/><text x="65.7617%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (3 samples, 0.24%)</title><rect x="65.5117%" y="613" width="0.2417%" height="15" fill="rgb(228,88,15)" fg:x="813" fg:w="3"/><text x="65.7617%" y="623.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="65.5117%" y="597" width="0.2417%" height="15" fill="rgb(213,87,14)" fg:x="813" fg:w="3"/><text x="65.7617%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="65.5117%" y="581" width="0.2417%" height="15" fill="rgb(220,198,31)" fg:x="813" fg:w="3"/><text x="65.7617%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.5923%" y="565" width="0.1612%" height="15" fill="rgb(223,165,38)" fg:x="814" fg:w="2"/><text x="65.8423%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.5923%" y="549" width="0.1612%" height="15" fill="rgb(247,56,48)" fg:x="814" fg:w="2"/><text x="65.8423%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.7534%" y="517" width="0.1612%" height="15" fill="rgb(222,150,13)" fg:x="816" fg:w="2"/><text x="66.0034%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.8340%" y="501" width="0.0806%" height="15" fill="rgb(218,214,11)" fg:x="817" fg:w="1"/><text x="66.0840%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.8340%" y="485" width="0.0806%" height="15" fill="rgb(246,111,16)" fg:x="817" fg:w="1"/><text x="66.0840%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.7534%" y="565" width="0.2417%" height="15" fill="rgb(250,127,26)" fg:x="816" fg:w="3"/><text x="66.0034%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.7534%" y="549" width="0.2417%" height="15" fill="rgb(237,156,23)" fg:x="816" fg:w="3"/><text x="66.0034%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.7534%" y="533" width="0.2417%" height="15" fill="rgb(215,143,51)" fg:x="816" fg:w="3"/><text x="66.0034%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.9146%" y="517" width="0.0806%" height="15" fill="rgb(209,119,39)" fg:x="818" fg:w="1"/><text x="66.1646%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.9146%" y="501" width="0.0806%" height="15" fill="rgb(228,181,16)" fg:x="818" fg:w="1"/><text x="66.1646%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.9146%" y="485" width="0.0806%" height="15" fill="rgb(236,113,51)" fg:x="818" fg:w="1"/><text x="66.1646%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.9146%" y="469" width="0.0806%" height="15" fill="rgb(223,132,1)" fg:x="818" fg:w="1"/><text x="66.1646%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.9146%" y="453" width="0.0806%" height="15" fill="rgb(227,4,54)" fg:x="818" fg:w="1"/><text x="66.1646%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.9146%" y="437" width="0.0806%" height="15" fill="rgb(254,72,52)" fg:x="818" fg:w="1"/><text x="66.1646%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.9146%" y="421" width="0.0806%" height="15" fill="rgb(252,104,52)" fg:x="818" fg:w="1"/><text x="66.1646%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.9146%" y="405" width="0.0806%" height="15" fill="rgb(251,146,26)" fg:x="818" fg:w="1"/><text x="66.1646%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.9146%" y="389" width="0.0806%" height="15" fill="rgb(214,146,19)" fg:x="818" fg:w="1"/><text x="66.1646%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.9146%" y="373" width="0.0806%" height="15" fill="rgb(242,222,1)" fg:x="818" fg:w="1"/><text x="66.1646%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.9146%" y="357" width="0.0806%" height="15" fill="rgb(220,178,32)" fg:x="818" fg:w="1"/><text x="66.1646%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.9146%" y="341" width="0.0806%" height="15" fill="rgb(220,50,48)" fg:x="818" fg:w="1"/><text x="66.1646%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.9952%" y="565" width="0.0806%" height="15" fill="rgb(207,117,22)" fg:x="819" fg:w="1"/><text x="66.2452%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="65.9952%" y="549" width="0.0806%" height="15" fill="rgb(247,195,50)" fg:x="819" fg:w="1"/><text x="66.2452%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.9952%" y="533" width="0.0806%" height="15" fill="rgb(206,50,39)" fg:x="819" fg:w="1"/><text x="66.2452%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.0757%" y="469" width="0.0806%" height="15" fill="rgb(236,141,29)" fg:x="820" fg:w="1"/><text x="66.3257%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.0757%" y="453" width="0.0806%" height="15" fill="rgb(247,18,44)" fg:x="820" fg:w="1"/><text x="66.3257%" y="463.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (11 samples, 0.89%)</title><rect x="65.4311%" y="629" width="0.8864%" height="15" fill="rgb(243,179,46)" fg:x="812" fg:w="11"/><text x="65.6811%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="65.7534%" y="613" width="0.5641%" height="15" fill="rgb(241,178,53)" fg:x="816" fg:w="7"/><text x="66.0034%" y="623.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="65.7534%" y="597" width="0.5641%" height="15" fill="rgb(236,100,9)" fg:x="816" fg:w="7"/><text x="66.0034%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="65.7534%" y="581" width="0.5641%" height="15" fill="rgb(208,180,29)" fg:x="816" fg:w="7"/><text x="66.0034%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="66.0757%" y="565" width="0.2417%" height="15" fill="rgb(241,204,36)" fg:x="820" fg:w="3"/><text x="66.3257%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.0757%" y="549" width="0.2417%" height="15" fill="rgb(248,106,5)" fg:x="820" fg:w="3"/><text x="66.3257%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="66.0757%" y="533" width="0.2417%" height="15" fill="rgb(245,13,49)" fg:x="820" fg:w="3"/><text x="66.3257%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.0757%" y="517" width="0.2417%" height="15" fill="rgb(221,209,34)" fg:x="820" fg:w="3"/><text x="66.3257%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="66.0757%" y="501" width="0.2417%" height="15" fill="rgb(224,83,31)" fg:x="820" fg:w="3"/><text x="66.3257%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.0757%" y="485" width="0.2417%" height="15" fill="rgb(218,63,22)" fg:x="820" fg:w="3"/><text x="66.3257%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.1563%" y="469" width="0.1612%" height="15" fill="rgb(214,167,5)" fg:x="821" fg:w="2"/><text x="66.4063%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.1563%" y="453" width="0.1612%" height="15" fill="rgb(243,13,0)" fg:x="821" fg:w="2"/><text x="66.4063%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.1563%" y="437" width="0.1612%" height="15" fill="rgb(237,20,46)" fg:x="821" fg:w="2"/><text x="66.4063%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.1563%" y="421" width="0.1612%" height="15" fill="rgb(240,94,48)" fg:x="821" fg:w="2"/><text x="66.4063%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="66.2369%" y="405" width="0.0806%" height="15" fill="rgb(205,160,17)" fg:x="822" fg:w="1"/><text x="66.4869%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="66.2369%" y="389" width="0.0806%" height="15" fill="rgb(234,42,33)" fg:x="822" fg:w="1"/><text x="66.4869%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.2369%" y="373" width="0.0806%" height="15" fill="rgb(215,166,5)" fg:x="822" fg:w="1"/><text x="66.4869%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="66.3175%" y="597" width="0.0806%" height="15" fill="rgb(215,9,6)" fg:x="823" fg:w="1"/><text x="66.5675%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="66.3175%" y="581" width="0.0806%" height="15" fill="rgb(212,53,6)" fg:x="823" fg:w="1"/><text x="66.5675%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="66.3981%" y="581" width="0.2417%" height="15" fill="rgb(249,157,19)" fg:x="824" fg:w="3"/><text x="66.6481%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="66.3981%" y="565" width="0.2417%" height="15" fill="rgb(222,212,45)" fg:x="824" fg:w="3"/><text x="66.6481%" y="575.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="66.3981%" y="549" width="0.2417%" height="15" fill="rgb(232,155,17)" fg:x="824" fg:w="3"/><text x="66.6481%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="66.6398%" y="581" width="0.0806%" height="15" fill="rgb(212,159,50)" fg:x="827" fg:w="1"/><text x="66.8898%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="66.6398%" y="565" width="0.0806%" height="15" fill="rgb(247,71,8)" fg:x="827" fg:w="1"/><text x="66.8898%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="66.6398%" y="549" width="0.0806%" height="15" fill="rgb(239,128,29)" fg:x="827" fg:w="1"/><text x="66.8898%" y="559.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="66.8010%" y="341" width="0.0806%" height="15" fill="rgb(227,117,11)" fg:x="829" fg:w="1"/><text x="67.0510%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="66.8010%" y="565" width="0.1612%" height="15" fill="rgb(247,183,4)" fg:x="829" fg:w="2"/><text x="67.0510%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="66.8010%" y="549" width="0.1612%" height="15" fill="rgb(211,161,41)" fg:x="829" fg:w="2"/><text x="67.0510%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="66.8010%" y="533" width="0.1612%" height="15" fill="rgb(250,157,52)" fg:x="829" fg:w="2"/><text x="67.0510%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="66.8010%" y="517" width="0.1612%" height="15" fill="rgb(249,118,26)" fg:x="829" fg:w="2"/><text x="67.0510%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="66.8010%" y="501" width="0.1612%" height="15" fill="rgb(234,52,37)" fg:x="829" fg:w="2"/><text x="67.0510%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="66.8010%" y="485" width="0.1612%" height="15" fill="rgb(237,188,45)" fg:x="829" fg:w="2"/><text x="67.0510%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="66.8010%" y="469" width="0.1612%" height="15" fill="rgb(241,3,40)" fg:x="829" fg:w="2"/><text x="67.0510%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="66.8010%" y="453" width="0.1612%" height="15" fill="rgb(246,192,7)" fg:x="829" fg:w="2"/><text x="67.0510%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="66.8010%" y="437" width="0.1612%" height="15" fill="rgb(206,168,17)" fg:x="829" fg:w="2"/><text x="67.0510%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="66.8010%" y="421" width="0.1612%" height="15" fill="rgb(208,124,33)" fg:x="829" fg:w="2"/><text x="67.0510%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="66.8010%" y="405" width="0.1612%" height="15" fill="rgb(226,186,11)" fg:x="829" fg:w="2"/><text x="67.0510%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="66.8010%" y="389" width="0.1612%" height="15" fill="rgb(218,223,1)" fg:x="829" fg:w="2"/><text x="67.0510%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="66.8010%" y="373" width="0.1612%" height="15" fill="rgb(254,65,21)" fg:x="829" fg:w="2"/><text x="67.0510%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="66.8010%" y="357" width="0.1612%" height="15" fill="rgb(239,63,32)" fg:x="829" fg:w="2"/><text x="67.0510%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.8815%" y="341" width="0.0806%" height="15" fill="rgb(219,85,29)" fg:x="830" fg:w="1"/><text x="67.1315%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="66.8815%" y="325" width="0.0806%" height="15" fill="rgb(246,74,32)" fg:x="830" fg:w="1"/><text x="67.1315%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="66.8815%" y="309" width="0.0806%" height="15" fill="rgb(251,20,52)" fg:x="830" fg:w="1"/><text x="67.1315%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.8815%" y="293" width="0.0806%" height="15" fill="rgb(222,160,46)" fg:x="830" fg:w="1"/><text x="67.1315%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.8815%" y="277" width="0.0806%" height="15" fill="rgb(230,68,24)" fg:x="830" fg:w="1"/><text x="67.1315%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.8815%" y="261" width="0.0806%" height="15" fill="rgb(233,83,32)" fg:x="830" fg:w="1"/><text x="67.1315%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.8815%" y="245" width="0.0806%" height="15" fill="rgb(253,79,36)" fg:x="830" fg:w="1"/><text x="67.1315%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="66.8815%" y="229" width="0.0806%" height="15" fill="rgb(224,125,51)" fg:x="830" fg:w="1"/><text x="67.1315%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="66.8815%" y="213" width="0.0806%" height="15" fill="rgb(254,158,3)" fg:x="830" fg:w="1"/><text x="67.1315%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="66.8815%" y="197" width="0.0806%" height="15" fill="rgb(243,226,3)" fg:x="830" fg:w="1"/><text x="67.1315%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="66.8815%" y="181" width="0.0806%" height="15" fill="rgb(208,37,10)" fg:x="830" fg:w="1"/><text x="67.1315%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.8815%" y="165" width="0.0806%" height="15" fill="rgb(227,35,6)" fg:x="830" fg:w="1"/><text x="67.1315%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.8815%" y="149" width="0.0806%" height="15" fill="rgb(236,35,38)" fg:x="830" fg:w="1"/><text x="67.1315%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="66.8815%" y="133" width="0.0806%" height="15" fill="rgb(247,165,26)" fg:x="830" fg:w="1"/><text x="67.1315%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="66.8815%" y="117" width="0.0806%" height="15" fill="rgb(251,131,20)" fg:x="830" fg:w="1"/><text x="67.1315%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.8815%" y="101" width="0.0806%" height="15" fill="rgb(248,168,52)" fg:x="830" fg:w="1"/><text x="67.1315%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="66.8815%" y="85" width="0.0806%" height="15" fill="rgb(241,220,45)" fg:x="830" fg:w="1"/><text x="67.1315%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="66.8815%" y="69" width="0.0806%" height="15" fill="rgb(240,85,44)" fg:x="830" fg:w="1"/><text x="67.1315%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="66.8815%" y="53" width="0.0806%" height="15" fill="rgb(223,69,47)" fg:x="830" fg:w="1"/><text x="67.1315%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="66.8815%" y="37" width="0.0806%" height="15" fill="rgb(221,209,17)" fg:x="830" fg:w="1"/><text x="67.1315%" y="47.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.9621%" y="533" width="0.1612%" height="15" fill="rgb(224,194,24)" fg:x="831" fg:w="2"/><text x="67.2121%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.9621%" y="517" width="0.1612%" height="15" fill="rgb(249,43,24)" fg:x="831" fg:w="2"/><text x="67.2121%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.9621%" y="501" width="0.1612%" height="15" fill="rgb(245,78,29)" fg:x="831" fg:w="2"/><text x="67.2121%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.9621%" y="485" width="0.1612%" height="15" fill="rgb(241,167,34)" fg:x="831" fg:w="2"/><text x="67.2121%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="67.1233%" y="533" width="0.1612%" height="15" fill="rgb(225,91,27)" fg:x="833" fg:w="2"/><text x="67.3733%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.2039%" y="517" width="0.0806%" height="15" fill="rgb(249,82,49)" fg:x="834" fg:w="1"/><text x="67.4539%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.2844%" y="501" width="0.0806%" height="15" fill="rgb(215,90,36)" fg:x="835" fg:w="1"/><text x="67.5344%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="67.2844%" y="533" width="0.1612%" height="15" fill="rgb(209,128,1)" fg:x="835" fg:w="2"/><text x="67.5344%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="67.2844%" y="517" width="0.1612%" height="15" fill="rgb(233,184,1)" fg:x="835" fg:w="2"/><text x="67.5344%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.3650%" y="501" width="0.0806%" height="15" fill="rgb(240,59,32)" fg:x="836" fg:w="1"/><text x="67.6150%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="67.3650%" y="485" width="0.0806%" height="15" fill="rgb(249,163,0)" fg:x="836" fg:w="1"/><text x="67.6150%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="67.3650%" y="469" width="0.0806%" height="15" fill="rgb(249,220,13)" fg:x="836" fg:w="1"/><text x="67.6150%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.3650%" y="453" width="0.0806%" height="15" fill="rgb(235,127,52)" fg:x="836" fg:w="1"/><text x="67.6150%" y="463.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (14 samples, 1.13%)</title><rect x="66.3981%" y="597" width="1.1281%" height="15" fill="rgb(229,172,26)" fg:x="824" fg:w="14"/><text x="66.6481%" y="607.50"></text></g><g><title>plugins_core::tools::contained_by (10 samples, 0.81%)</title><rect x="66.7204%" y="581" width="0.8058%" height="15" fill="rgb(217,37,29)" fg:x="828" fg:w="10"/><text x="66.9704%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="66.9621%" y="565" width="0.5641%" height="15" fill="rgb(208,66,47)" fg:x="831" fg:w="7"/><text x="67.2121%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="66.9621%" y="549" width="0.5641%" height="15" fill="rgb(221,99,19)" fg:x="831" fg:w="7"/><text x="67.2121%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.4456%" y="533" width="0.0806%" height="15" fill="rgb(214,149,49)" fg:x="837" fg:w="1"/><text x="67.6956%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.4456%" y="517" width="0.0806%" height="15" fill="rgb(229,91,37)" fg:x="837" fg:w="1"/><text x="67.6956%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="67.4456%" y="501" width="0.0806%" height="15" fill="rgb(207,159,48)" fg:x="837" fg:w="1"/><text x="67.6956%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="67.4456%" y="485" width="0.0806%" height="15" fill="rgb(209,125,46)" fg:x="837" fg:w="1"/><text x="67.6956%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="67.4456%" y="469" width="0.0806%" height="15" fill="rgb(211,188,18)" fg:x="837" fg:w="1"/><text x="67.6956%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.4456%" y="453" width="0.0806%" height="15" fill="rgb(207,203,34)" fg:x="837" fg:w="1"/><text x="67.6956%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.4456%" y="437" width="0.0806%" height="15" fill="rgb(245,182,16)" fg:x="837" fg:w="1"/><text x="67.6956%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="67.5262%" y="533" width="0.1612%" height="15" fill="rgb(210,66,30)" fg:x="838" fg:w="2"/><text x="67.7762%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.7679%" y="437" width="0.0806%" height="15" fill="rgb(230,110,14)" fg:x="841" fg:w="1"/><text x="68.0179%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.7679%" y="421" width="0.0806%" height="15" fill="rgb(242,198,32)" fg:x="841" fg:w="1"/><text x="68.0179%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.7679%" y="405" width="0.0806%" height="15" fill="rgb(213,45,23)" fg:x="841" fg:w="1"/><text x="68.0179%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.7679%" y="389" width="0.0806%" height="15" fill="rgb(205,76,9)" fg:x="841" fg:w="1"/><text x="68.0179%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.7679%" y="373" width="0.0806%" height="15" fill="rgb(250,200,25)" fg:x="841" fg:w="1"/><text x="68.0179%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.7679%" y="357" width="0.0806%" height="15" fill="rgb(221,161,23)" fg:x="841" fg:w="1"/><text x="68.0179%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.7679%" y="341" width="0.0806%" height="15" fill="rgb(226,135,48)" fg:x="841" fg:w="1"/><text x="68.0179%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.7679%" y="325" width="0.0806%" height="15" fill="rgb(228,33,6)" fg:x="841" fg:w="1"/><text x="68.0179%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.7679%" y="309" width="0.0806%" height="15" fill="rgb(237,224,9)" fg:x="841" fg:w="1"/><text x="68.0179%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.7679%" y="293" width="0.0806%" height="15" fill="rgb(251,61,40)" fg:x="841" fg:w="1"/><text x="68.0179%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.7679%" y="277" width="0.0806%" height="15" fill="rgb(220,222,2)" fg:x="841" fg:w="1"/><text x="68.0179%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.7679%" y="261" width="0.0806%" height="15" fill="rgb(238,4,8)" fg:x="841" fg:w="1"/><text x="68.0179%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.7679%" y="501" width="0.1612%" height="15" fill="rgb(240,153,3)" fg:x="841" fg:w="2"/><text x="68.0179%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.7679%" y="485" width="0.1612%" height="15" fill="rgb(245,29,24)" fg:x="841" fg:w="2"/><text x="68.0179%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.7679%" y="469" width="0.1612%" height="15" fill="rgb(231,220,37)" fg:x="841" fg:w="2"/><text x="68.0179%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.7679%" y="453" width="0.1612%" height="15" fill="rgb(245,33,10)" fg:x="841" fg:w="2"/><text x="68.0179%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8485%" y="437" width="0.0806%" height="15" fill="rgb(220,227,43)" fg:x="842" fg:w="1"/><text x="68.0985%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8485%" y="421" width="0.0806%" height="15" fill="rgb(215,183,54)" fg:x="842" fg:w="1"/><text x="68.0985%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.8485%" y="405" width="0.0806%" height="15" fill="rgb(242,80,26)" fg:x="842" fg:w="1"/><text x="68.0985%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.8485%" y="389" width="0.0806%" height="15" fill="rgb(206,172,49)" fg:x="842" fg:w="1"/><text x="68.0985%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.8485%" y="373" width="0.0806%" height="15" fill="rgb(249,0,10)" fg:x="842" fg:w="1"/><text x="68.0985%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8485%" y="357" width="0.0806%" height="15" fill="rgb(246,171,19)" fg:x="842" fg:w="1"/><text x="68.0985%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8485%" y="341" width="0.0806%" height="15" fill="rgb(236,25,43)" fg:x="842" fg:w="1"/><text x="68.0985%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.8485%" y="325" width="0.0806%" height="15" fill="rgb(225,146,20)" fg:x="842" fg:w="1"/><text x="68.0985%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.8485%" y="309" width="0.0806%" height="15" fill="rgb(243,50,39)" fg:x="842" fg:w="1"/><text x="68.0985%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.8485%" y="293" width="0.0806%" height="15" fill="rgb(239,153,27)" fg:x="842" fg:w="1"/><text x="68.0985%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.8485%" y="277" width="0.0806%" height="15" fill="rgb(208,164,31)" fg:x="842" fg:w="1"/><text x="68.0985%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8485%" y="261" width="0.0806%" height="15" fill="rgb(231,32,38)" fg:x="842" fg:w="1"/><text x="68.0985%" y="271.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (9 samples, 0.73%)</title><rect x="67.5262%" y="597" width="0.7252%" height="15" fill="rgb(247,158,12)" fg:x="838" fg:w="9"/><text x="67.7762%" y="607.50"></text></g><g><title>plugins_core::finding::matches_description (9 samples, 0.73%)</title><rect x="67.5262%" y="581" width="0.7252%" height="15" fill="rgb(254,126,16)" fg:x="838" fg:w="9"/><text x="67.7762%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::name (9 samples, 0.73%)</title><rect x="67.5262%" y="565" width="0.7252%" height="15" fill="rgb(246,12,32)" fg:x="838" fg:w="9"/><text x="67.7762%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.73%)</title><rect x="67.5262%" y="549" width="0.7252%" height="15" fill="rgb(245,190,44)" fg:x="838" fg:w="9"/><text x="67.7762%" y="559.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="67.6873%" y="533" width="0.5641%" height="15" fill="rgb(253,148,49)" fg:x="840" fg:w="7"/><text x="67.9373%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="67.6873%" y="517" width="0.5641%" height="15" fill="rgb(232,193,44)" fg:x="840" fg:w="7"/><text x="67.9373%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="67.9291%" y="501" width="0.3223%" height="15" fill="rgb(212,67,50)" fg:x="843" fg:w="4"/><text x="68.1791%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="67.9291%" y="485" width="0.3223%" height="15" fill="rgb(235,109,24)" fg:x="843" fg:w="4"/><text x="68.1791%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.0902%" y="469" width="0.1612%" height="15" fill="rgb(242,228,23)" fg:x="845" fg:w="2"/><text x="68.3402%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.0902%" y="453" width="0.1612%" height="15" fill="rgb(232,48,19)" fg:x="845" fg:w="2"/><text x="68.3402%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="68.0902%" y="437" width="0.1612%" height="15" fill="rgb(221,167,25)" fg:x="845" fg:w="2"/><text x="68.3402%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.0902%" y="421" width="0.1612%" height="15" fill="rgb(220,29,38)" fg:x="845" fg:w="2"/><text x="68.3402%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.0902%" y="405" width="0.1612%" height="15" fill="rgb(245,95,26)" fg:x="845" fg:w="2"/><text x="68.3402%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.0902%" y="389" width="0.1612%" height="15" fill="rgb(227,189,38)" fg:x="845" fg:w="2"/><text x="68.3402%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.1708%" y="373" width="0.0806%" height="15" fill="rgb(231,212,22)" fg:x="846" fg:w="1"/><text x="68.4208%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.1708%" y="357" width="0.0806%" height="15" fill="rgb(246,25,46)" fg:x="846" fg:w="1"/><text x="68.4208%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="68.1708%" y="341" width="0.0806%" height="15" fill="rgb(218,90,32)" fg:x="846" fg:w="1"/><text x="68.4208%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="68.1708%" y="325" width="0.0806%" height="15" fill="rgb(207,89,34)" fg:x="846" fg:w="1"/><text x="68.4208%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="68.1708%" y="309" width="0.0806%" height="15" fill="rgb(222,30,54)" fg:x="846" fg:w="1"/><text x="68.4208%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (25 samples, 2.01%)</title><rect x="66.3175%" y="629" width="2.0145%" height="15" fill="rgb(224,229,32)" fg:x="823" fg:w="25"/><text x="66.5675%" y="639.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (25 samples, 2.01%)</title><rect x="66.3175%" y="613" width="2.0145%" height="15" fill="rgb(209,188,44)" fg:x="823" fg:w="25"/><text x="66.5675%" y="623.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="68.2514%" y="597" width="0.0806%" height="15" fill="rgb(215,174,23)" fg:x="847" fg:w="1"/><text x="68.5014%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.2514%" y="581" width="0.0806%" height="15" fill="rgb(242,104,18)" fg:x="847" fg:w="1"/><text x="68.5014%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="68.3320%" y="629" width="0.0806%" height="15" fill="rgb(240,173,53)" fg:x="848" fg:w="1"/><text x="68.5820%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.3320%" y="613" width="0.0806%" height="15" fill="rgb(240,105,45)" fg:x="848" fg:w="1"/><text x="68.5820%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.4126%" y="581" width="0.0806%" height="15" fill="rgb(252,164,29)" fg:x="849" fg:w="1"/><text x="68.6626%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.5737%" y="485" width="0.0806%" height="15" fill="rgb(217,17,6)" fg:x="851" fg:w="1"/><text x="68.8237%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.5737%" y="469" width="0.0806%" height="15" fill="rgb(245,27,23)" fg:x="851" fg:w="1"/><text x="68.8237%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="68.4932%" y="501" width="0.3223%" height="15" fill="rgb(239,73,33)" fg:x="850" fg:w="4"/><text x="68.7432%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="68.6543%" y="485" width="0.1612%" height="15" fill="rgb(209,140,21)" fg:x="852" fg:w="2"/><text x="68.9043%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="68.4932%" y="517" width="0.4029%" height="15" fill="rgb(206,36,53)" fg:x="850" fg:w="5"/><text x="68.7432%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.8155%" y="501" width="0.0806%" height="15" fill="rgb(238,134,8)" fg:x="854" fg:w="1"/><text x="69.0655%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.8155%" y="485" width="0.0806%" height="15" fill="rgb(209,3,20)" fg:x="854" fg:w="1"/><text x="69.0655%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.8155%" y="469" width="0.0806%" height="15" fill="rgb(208,101,32)" fg:x="854" fg:w="1"/><text x="69.0655%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.8155%" y="453" width="0.0806%" height="15" fill="rgb(253,56,38)" fg:x="854" fg:w="1"/><text x="69.0655%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.8155%" y="437" width="0.0806%" height="15" fill="rgb(209,85,49)" fg:x="854" fg:w="1"/><text x="69.0655%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.8155%" y="421" width="0.0806%" height="15" fill="rgb(234,177,21)" fg:x="854" fg:w="1"/><text x="69.0655%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.8155%" y="405" width="0.0806%" height="15" fill="rgb(250,4,6)" fg:x="854" fg:w="1"/><text x="69.0655%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.8155%" y="389" width="0.0806%" height="15" fill="rgb(240,153,10)" fg:x="854" fg:w="1"/><text x="69.0655%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.8155%" y="373" width="0.0806%" height="15" fill="rgb(205,136,51)" fg:x="854" fg:w="1"/><text x="69.0655%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.8155%" y="357" width="0.0806%" height="15" fill="rgb(245,165,50)" fg:x="854" fg:w="1"/><text x="69.0655%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.8155%" y="341" width="0.0806%" height="15" fill="rgb(211,28,10)" fg:x="854" fg:w="1"/><text x="69.0655%" y="351.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="68.8155%" y="325" width="0.0806%" height="15" fill="rgb(218,155,54)" fg:x="854" fg:w="1"/><text x="69.0655%" y="335.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="68.8155%" y="309" width="0.0806%" height="15" fill="rgb(254,214,30)" fg:x="854" fg:w="1"/><text x="69.0655%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="68.4932%" y="549" width="0.4835%" height="15" fill="rgb(248,200,10)" fg:x="850" fg:w="6"/><text x="68.7432%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="68.4932%" y="533" width="0.4835%" height="15" fill="rgb(238,219,45)" fg:x="850" fg:w="6"/><text x="68.7432%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.8961%" y="517" width="0.0806%" height="15" fill="rgb(227,35,34)" fg:x="855" fg:w="1"/><text x="69.1461%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.8961%" y="501" width="0.0806%" height="15" fill="rgb(214,187,37)" fg:x="855" fg:w="1"/><text x="69.1461%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.8961%" y="485" width="0.0806%" height="15" fill="rgb(247,164,44)" fg:x="855" fg:w="1"/><text x="69.1461%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.8961%" y="469" width="0.0806%" height="15" fill="rgb(238,198,10)" fg:x="855" fg:w="1"/><text x="69.1461%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.8961%" y="453" width="0.0806%" height="15" fill="rgb(213,69,8)" fg:x="855" fg:w="1"/><text x="69.1461%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.8961%" y="437" width="0.0806%" height="15" fill="rgb(222,82,16)" fg:x="855" fg:w="1"/><text x="69.1461%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.8961%" y="421" width="0.0806%" height="15" fill="rgb(205,172,30)" fg:x="855" fg:w="1"/><text x="69.1461%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.8961%" y="405" width="0.0806%" height="15" fill="rgb(227,39,8)" fg:x="855" fg:w="1"/><text x="69.1461%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.8961%" y="389" width="0.0806%" height="15" fill="rgb(249,10,19)" fg:x="855" fg:w="1"/><text x="69.1461%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.8961%" y="373" width="0.0806%" height="15" fill="rgb(205,158,53)" fg:x="855" fg:w="1"/><text x="69.1461%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.8961%" y="357" width="0.0806%" height="15" fill="rgb(237,229,35)" fg:x="855" fg:w="1"/><text x="69.1461%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.8961%" y="341" width="0.0806%" height="15" fill="rgb(238,129,14)" fg:x="855" fg:w="1"/><text x="69.1461%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.9766%" y="549" width="0.0806%" height="15" fill="rgb(218,217,40)" fg:x="856" fg:w="1"/><text x="69.2266%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.9766%" y="533" width="0.0806%" height="15" fill="rgb(221,187,9)" fg:x="856" fg:w="1"/><text x="69.2266%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.9766%" y="517" width="0.0806%" height="15" fill="rgb(214,108,19)" fg:x="856" fg:w="1"/><text x="69.2266%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.0572%" y="437" width="0.0806%" height="15" fill="rgb(216,86,23)" fg:x="857" fg:w="1"/><text x="69.3072%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.0572%" y="453" width="0.1612%" height="15" fill="rgb(209,116,23)" fg:x="857" fg:w="2"/><text x="69.3072%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.1378%" y="437" width="0.0806%" height="15" fill="rgb(222,185,40)" fg:x="858" fg:w="1"/><text x="69.3878%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (11 samples, 0.89%)</title><rect x="68.4126%" y="597" width="0.8864%" height="15" fill="rgb(238,150,2)" fg:x="849" fg:w="11"/><text x="68.6626%" y="607.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.81%)</title><rect x="68.4932%" y="581" width="0.8058%" height="15" fill="rgb(229,132,47)" fg:x="850" fg:w="10"/><text x="68.7432%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.81%)</title><rect x="68.4932%" y="565" width="0.8058%" height="15" fill="rgb(231,7,23)" fg:x="850" fg:w="10"/><text x="68.7432%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="69.0572%" y="549" width="0.2417%" height="15" fill="rgb(235,12,37)" fg:x="857" fg:w="3"/><text x="69.3072%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="69.0572%" y="533" width="0.2417%" height="15" fill="rgb(247,170,51)" fg:x="857" fg:w="3"/><text x="69.3072%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="69.0572%" y="517" width="0.2417%" height="15" fill="rgb(210,62,49)" fg:x="857" fg:w="3"/><text x="69.3072%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="69.0572%" y="501" width="0.2417%" height="15" fill="rgb(248,30,8)" fg:x="857" fg:w="3"/><text x="69.3072%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="69.0572%" y="485" width="0.2417%" height="15" fill="rgb(252,11,2)" fg:x="857" fg:w="3"/><text x="69.3072%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="69.0572%" y="469" width="0.2417%" height="15" fill="rgb(249,65,4)" fg:x="857" fg:w="3"/><text x="69.3072%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.2184%" y="453" width="0.0806%" height="15" fill="rgb(217,219,7)" fg:x="859" fg:w="1"/><text x="69.4684%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.2184%" y="437" width="0.0806%" height="15" fill="rgb(222,186,36)" fg:x="859" fg:w="1"/><text x="69.4684%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.3795%" y="549" width="0.0806%" height="15" fill="rgb(247,184,5)" fg:x="861" fg:w="1"/><text x="69.6295%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.3795%" y="533" width="0.0806%" height="15" fill="rgb(221,108,7)" fg:x="861" fg:w="1"/><text x="69.6295%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.3795%" y="517" width="0.0806%" height="15" fill="rgb(209,208,22)" fg:x="861" fg:w="1"/><text x="69.6295%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.3795%" y="501" width="0.0806%" height="15" fill="rgb(247,106,21)" fg:x="861" fg:w="1"/><text x="69.6295%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.3795%" y="485" width="0.0806%" height="15" fill="rgb(223,2,44)" fg:x="861" fg:w="1"/><text x="69.6295%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.4601%" y="453" width="0.0806%" height="15" fill="rgb(208,190,12)" fg:x="862" fg:w="1"/><text x="69.7101%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.4601%" y="437" width="0.0806%" height="15" fill="rgb(250,221,0)" fg:x="862" fg:w="1"/><text x="69.7101%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.5407%" y="453" width="0.0806%" height="15" fill="rgb(212,210,16)" fg:x="863" fg:w="1"/><text x="69.7907%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (17 samples, 1.37%)</title><rect x="68.4126%" y="629" width="1.3699%" height="15" fill="rgb(212,224,21)" fg:x="849" fg:w="17"/><text x="68.6626%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (17 samples, 1.37%)</title><rect x="68.4126%" y="613" width="1.3699%" height="15" fill="rgb(206,186,54)" fg:x="849" fg:w="17"/><text x="68.6626%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="69.2990%" y="597" width="0.4835%" height="15" fill="rgb(213,211,25)" fg:x="860" fg:w="6"/><text x="69.5490%" y="607.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="69.2990%" y="581" width="0.4835%" height="15" fill="rgb(243,78,36)" fg:x="860" fg:w="6"/><text x="69.5490%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="69.2990%" y="565" width="0.4835%" height="15" fill="rgb(236,105,24)" fg:x="860" fg:w="6"/><text x="69.5490%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="69.4601%" y="549" width="0.3223%" height="15" fill="rgb(223,46,45)" fg:x="862" fg:w="4"/><text x="69.7101%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="69.4601%" y="533" width="0.3223%" height="15" fill="rgb(249,65,35)" fg:x="862" fg:w="4"/><text x="69.7101%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="69.4601%" y="517" width="0.3223%" height="15" fill="rgb(226,122,19)" fg:x="862" fg:w="4"/><text x="69.7101%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="69.4601%" y="501" width="0.3223%" height="15" fill="rgb(253,17,37)" fg:x="862" fg:w="4"/><text x="69.7101%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="69.4601%" y="485" width="0.3223%" height="15" fill="rgb(223,138,24)" fg:x="862" fg:w="4"/><text x="69.7101%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="69.4601%" y="469" width="0.3223%" height="15" fill="rgb(227,89,20)" fg:x="862" fg:w="4"/><text x="69.7101%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.6213%" y="453" width="0.1612%" height="15" fill="rgb(239,140,41)" fg:x="864" fg:w="2"/><text x="69.8713%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.6213%" y="437" width="0.1612%" height="15" fill="rgb(237,29,24)" fg:x="864" fg:w="2"/><text x="69.8713%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.6213%" y="421" width="0.1612%" height="15" fill="rgb(212,123,27)" fg:x="864" fg:w="2"/><text x="69.8713%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.6213%" y="405" width="0.1612%" height="15" fill="rgb(236,173,10)" fg:x="864" fg:w="2"/><text x="69.8713%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.7824%" y="517" width="0.0806%" height="15" fill="rgb(244,17,3)" fg:x="866" fg:w="1"/><text x="70.0324%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.7824%" y="501" width="0.0806%" height="15" fill="rgb(220,73,21)" fg:x="866" fg:w="1"/><text x="70.0324%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.7824%" y="485" width="0.0806%" height="15" fill="rgb(220,187,17)" fg:x="866" fg:w="1"/><text x="70.0324%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.7824%" y="469" width="0.0806%" height="15" fill="rgb(236,64,13)" fg:x="866" fg:w="1"/><text x="70.0324%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.7824%" y="453" width="0.0806%" height="15" fill="rgb(214,111,25)" fg:x="866" fg:w="1"/><text x="70.0324%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.7824%" y="437" width="0.0806%" height="15" fill="rgb(251,123,0)" fg:x="866" fg:w="1"/><text x="70.0324%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.7824%" y="421" width="0.0806%" height="15" fill="rgb(210,8,32)" fg:x="866" fg:w="1"/><text x="70.0324%" y="431.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="69.7824%" y="629" width="0.1612%" height="15" fill="rgb(221,27,44)" fg:x="866" fg:w="2"/><text x="70.0324%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.7824%" y="613" width="0.1612%" height="15" fill="rgb(233,207,54)" fg:x="866" fg:w="2"/><text x="70.0324%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.7824%" y="597" width="0.1612%" height="15" fill="rgb(219,217,1)" fg:x="866" fg:w="2"/><text x="70.0324%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.7824%" y="581" width="0.1612%" height="15" fill="rgb(236,150,15)" fg:x="866" fg:w="2"/><text x="70.0324%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="69.7824%" y="565" width="0.1612%" height="15" fill="rgb(244,119,54)" fg:x="866" fg:w="2"/><text x="70.0324%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="69.7824%" y="549" width="0.1612%" height="15" fill="rgb(218,116,36)" fg:x="866" fg:w="2"/><text x="70.0324%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="69.7824%" y="533" width="0.1612%" height="15" fill="rgb(215,42,32)" fg:x="866" fg:w="2"/><text x="70.0324%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="69.8630%" y="517" width="0.0806%" height="15" fill="rgb(254,87,2)" fg:x="867" fg:w="1"/><text x="70.1130%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="69.8630%" y="501" width="0.0806%" height="15" fill="rgb(241,195,45)" fg:x="867" fg:w="1"/><text x="70.1130%" y="511.50"></text></g><g><title>plugins_core::library::actions::reply_done (2 samples, 0.16%)</title><rect x="69.9436%" y="629" width="0.1612%" height="15" fill="rgb(252,11,14)" fg:x="868" fg:w="2"/><text x="70.1936%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="70.0242%" y="613" width="0.0806%" height="15" fill="rgb(233,199,43)" fg:x="869" fg:w="1"/><text x="70.2742%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="70.0242%" y="597" width="0.0806%" height="15" fill="rgb(243,170,27)" fg:x="869" fg:w="1"/><text x="70.2742%" y="607.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="70.0242%" y="581" width="0.0806%" height="15" fill="rgb(236,178,54)" fg:x="869" fg:w="1"/><text x="70.2742%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.1048%" y="613" width="0.0806%" height="15" fill="rgb(230,38,12)" fg:x="870" fg:w="1"/><text x="70.3548%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1853%" y="613" width="0.0806%" height="15" fill="rgb(241,44,47)" fg:x="871" fg:w="1"/><text x="70.4353%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="70.2659%" y="613" width="0.0806%" height="15" fill="rgb(218,99,12)" fg:x="872" fg:w="1"/><text x="70.5159%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="70.2659%" y="597" width="0.0806%" height="15" fill="rgb(211,48,36)" fg:x="872" fg:w="1"/><text x="70.5159%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.2659%" y="581" width="0.0806%" height="15" fill="rgb(220,81,29)" fg:x="872" fg:w="1"/><text x="70.5159%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="70.3465%" y="613" width="0.0806%" height="15" fill="rgb(232,121,54)" fg:x="873" fg:w="1"/><text x="70.5965%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="70.3465%" y="597" width="0.0806%" height="15" fill="rgb(236,227,37)" fg:x="873" fg:w="1"/><text x="70.5965%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.3465%" y="581" width="0.0806%" height="15" fill="rgb(207,43,26)" fg:x="873" fg:w="1"/><text x="70.5965%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="70.4271%" y="581" width="0.0806%" height="15" fill="rgb(224,163,34)" fg:x="874" fg:w="1"/><text x="70.6771%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="70.4271%" y="565" width="0.0806%" height="15" fill="rgb(228,127,11)" fg:x="874" fg:w="1"/><text x="70.6771%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.4271%" y="549" width="0.0806%" height="15" fill="rgb(215,32,51)" fg:x="874" fg:w="1"/><text x="70.6771%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4271%" y="533" width="0.0806%" height="15" fill="rgb(206,180,37)" fg:x="874" fg:w="1"/><text x="70.6771%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4271%" y="517" width="0.0806%" height="15" fill="rgb(245,217,39)" fg:x="874" fg:w="1"/><text x="70.6771%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.4271%" y="501" width="0.0806%" height="15" fill="rgb(237,179,18)" fg:x="874" fg:w="1"/><text x="70.6771%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.4271%" y="485" width="0.0806%" height="15" fill="rgb(248,177,3)" fg:x="874" fg:w="1"/><text x="70.6771%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.4271%" y="469" width="0.0806%" height="15" fill="rgb(208,31,45)" fg:x="874" fg:w="1"/><text x="70.6771%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.4271%" y="453" width="0.0806%" height="15" fill="rgb(231,16,43)" fg:x="874" fg:w="1"/><text x="70.6771%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.4271%" y="437" width="0.0806%" height="15" fill="rgb(246,12,20)" fg:x="874" fg:w="1"/><text x="70.6771%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.4271%" y="421" width="0.0806%" height="15" fill="rgb(214,40,41)" fg:x="874" fg:w="1"/><text x="70.6771%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.4271%" y="405" width="0.0806%" height="15" fill="rgb(225,183,42)" fg:x="874" fg:w="1"/><text x="70.6771%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.4271%" y="389" width="0.0806%" height="15" fill="rgb(229,88,50)" fg:x="874" fg:w="1"/><text x="70.6771%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.4271%" y="373" width="0.0806%" height="15" fill="rgb(247,34,33)" fg:x="874" fg:w="1"/><text x="70.6771%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="70.4271%" y="357" width="0.0806%" height="15" fill="rgb(246,163,52)" fg:x="874" fg:w="1"/><text x="70.6771%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="70.4271%" y="341" width="0.0806%" height="15" fill="rgb(251,13,27)" fg:x="874" fg:w="1"/><text x="70.6771%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.5077%" y="533" width="0.1612%" height="15" fill="rgb(218,127,46)" fg:x="875" fg:w="2"/><text x="70.7577%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.5077%" y="517" width="0.1612%" height="15" fill="rgb(215,155,29)" fg:x="875" fg:w="2"/><text x="70.7577%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.5077%" y="501" width="0.1612%" height="15" fill="rgb(251,180,13)" fg:x="875" fg:w="2"/><text x="70.7577%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.5077%" y="485" width="0.1612%" height="15" fill="rgb(246,215,19)" fg:x="875" fg:w="2"/><text x="70.7577%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.5077%" y="469" width="0.1612%" height="15" fill="rgb(210,47,28)" fg:x="875" fg:w="2"/><text x="70.7577%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.5882%" y="453" width="0.0806%" height="15" fill="rgb(231,175,40)" fg:x="876" fg:w="1"/><text x="70.8382%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.5882%" y="437" width="0.0806%" height="15" fill="rgb(207,138,24)" fg:x="876" fg:w="1"/><text x="70.8382%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.5882%" y="421" width="0.0806%" height="15" fill="rgb(216,44,38)" fg:x="876" fg:w="1"/><text x="70.8382%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.5882%" y="405" width="0.0806%" height="15" fill="rgb(206,81,53)" fg:x="876" fg:w="1"/><text x="70.8382%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.5882%" y="389" width="0.0806%" height="15" fill="rgb(246,139,21)" fg:x="876" fg:w="1"/><text x="70.8382%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.5882%" y="373" width="0.0806%" height="15" fill="rgb(212,163,26)" fg:x="876" fg:w="1"/><text x="70.8382%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.5882%" y="357" width="0.0806%" height="15" fill="rgb(223,82,35)" fg:x="876" fg:w="1"/><text x="70.8382%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.5882%" y="341" width="0.0806%" height="15" fill="rgb(224,76,13)" fg:x="876" fg:w="1"/><text x="70.8382%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.5882%" y="325" width="0.0806%" height="15" fill="rgb(240,2,40)" fg:x="876" fg:w="1"/><text x="70.8382%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.5882%" y="309" width="0.0806%" height="15" fill="rgb(232,188,36)" fg:x="876" fg:w="1"/><text x="70.8382%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.5882%" y="293" width="0.0806%" height="15" fill="rgb(249,34,46)" fg:x="876" fg:w="1"/><text x="70.8382%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.6688%" y="533" width="0.0806%" height="15" fill="rgb(226,99,19)" fg:x="877" fg:w="1"/><text x="70.9188%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.6688%" y="517" width="0.0806%" height="15" fill="rgb(207,78,52)" fg:x="877" fg:w="1"/><text x="70.9188%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.6688%" y="501" width="0.0806%" height="15" fill="rgb(241,119,8)" fg:x="877" fg:w="1"/><text x="70.9188%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.6688%" y="485" width="0.0806%" height="15" fill="rgb(238,31,9)" fg:x="877" fg:w="1"/><text x="70.9188%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.6688%" y="469" width="0.0806%" height="15" fill="rgb(223,165,6)" fg:x="877" fg:w="1"/><text x="70.9188%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.6688%" y="453" width="0.0806%" height="15" fill="rgb(227,228,21)" fg:x="877" fg:w="1"/><text x="70.9188%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="70.4271%" y="613" width="0.4835%" height="15" fill="rgb(206,188,51)" fg:x="874" fg:w="6"/><text x="70.6771%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="70.4271%" y="597" width="0.4835%" height="15" fill="rgb(225,207,23)" fg:x="874" fg:w="6"/><text x="70.6771%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="70.5077%" y="581" width="0.4029%" height="15" fill="rgb(232,197,54)" fg:x="875" fg:w="5"/><text x="70.7577%" y="591.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="70.5077%" y="565" width="0.4029%" height="15" fill="rgb(229,149,21)" fg:x="875" fg:w="5"/><text x="70.7577%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="70.5077%" y="549" width="0.4029%" height="15" fill="rgb(209,197,1)" fg:x="875" fg:w="5"/><text x="70.7577%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.7494%" y="533" width="0.1612%" height="15" fill="rgb(227,82,17)" fg:x="878" fg:w="2"/><text x="70.9994%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8300%" y="517" width="0.0806%" height="15" fill="rgb(237,201,43)" fg:x="879" fg:w="1"/><text x="71.0800%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.8300%" y="501" width="0.0806%" height="15" fill="rgb(221,91,37)" fg:x="879" fg:w="1"/><text x="71.0800%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.8300%" y="485" width="0.0806%" height="15" fill="rgb(239,35,7)" fg:x="879" fg:w="1"/><text x="71.0800%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.9106%" y="597" width="0.0806%" height="15" fill="rgb(234,145,45)" fg:x="880" fg:w="1"/><text x="71.1606%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.9106%" y="581" width="0.0806%" height="15" fill="rgb(214,151,47)" fg:x="880" fg:w="1"/><text x="71.1606%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.9106%" y="565" width="0.0806%" height="15" fill="rgb(248,62,54)" fg:x="880" fg:w="1"/><text x="71.1606%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.9106%" y="549" width="0.0806%" height="15" fill="rgb(236,99,21)" fg:x="880" fg:w="1"/><text x="71.1606%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.9106%" y="533" width="0.0806%" height="15" fill="rgb(223,94,43)" fg:x="880" fg:w="1"/><text x="71.1606%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.9106%" y="517" width="0.0806%" height="15" fill="rgb(214,66,6)" fg:x="880" fg:w="1"/><text x="71.1606%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.9106%" y="501" width="0.0806%" height="15" fill="rgb(231,152,46)" fg:x="880" fg:w="1"/><text x="71.1606%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.9106%" y="485" width="0.0806%" height="15" fill="rgb(254,0,48)" fg:x="880" fg:w="1"/><text x="71.1606%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.9106%" y="469" width="0.0806%" height="15" fill="rgb(225,136,42)" fg:x="880" fg:w="1"/><text x="71.1606%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.9106%" y="453" width="0.0806%" height="15" fill="rgb(231,194,28)" fg:x="880" fg:w="1"/><text x="71.1606%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.9106%" y="437" width="0.0806%" height="15" fill="rgb(248,141,22)" fg:x="880" fg:w="1"/><text x="71.1606%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.9106%" y="421" width="0.0806%" height="15" fill="rgb(222,133,1)" fg:x="880" fg:w="1"/><text x="71.1606%" y="431.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="70.9106%" y="405" width="0.0806%" height="15" fill="rgb(222,50,8)" fg:x="880" fg:w="1"/><text x="71.1606%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.9911%" y="549" width="0.0806%" height="15" fill="rgb(215,67,27)" fg:x="881" fg:w="1"/><text x="71.2411%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.9911%" y="533" width="0.0806%" height="15" fill="rgb(220,102,37)" fg:x="881" fg:w="1"/><text x="71.2411%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.9911%" y="517" width="0.0806%" height="15" fill="rgb(222,64,25)" fg:x="881" fg:w="1"/><text x="71.2411%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.9911%" y="501" width="0.0806%" height="15" fill="rgb(215,40,16)" fg:x="881" fg:w="1"/><text x="71.2411%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.9911%" y="485" width="0.0806%" height="15" fill="rgb(252,171,3)" fg:x="881" fg:w="1"/><text x="71.2411%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.9911%" y="469" width="0.0806%" height="15" fill="rgb(252,199,51)" fg:x="881" fg:w="1"/><text x="71.2411%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.9911%" y="453" width="0.0806%" height="15" fill="rgb(244,42,10)" fg:x="881" fg:w="1"/><text x="71.2411%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.9911%" y="437" width="0.0806%" height="15" fill="rgb(243,169,37)" fg:x="881" fg:w="1"/><text x="71.2411%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.9911%" y="421" width="0.0806%" height="15" fill="rgb(241,140,9)" fg:x="881" fg:w="1"/><text x="71.2411%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.9911%" y="405" width="0.0806%" height="15" fill="rgb(241,66,40)" fg:x="881" fg:w="1"/><text x="71.2411%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.9911%" y="389" width="0.0806%" height="15" fill="rgb(220,50,41)" fg:x="881" fg:w="1"/><text x="71.2411%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.9911%" y="373" width="0.0806%" height="15" fill="rgb(214,104,9)" fg:x="881" fg:w="1"/><text x="71.2411%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="70.9911%" y="581" width="0.2417%" height="15" fill="rgb(241,227,25)" fg:x="881" fg:w="3"/><text x="71.2411%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="70.9911%" y="565" width="0.2417%" height="15" fill="rgb(248,37,46)" fg:x="881" fg:w="3"/><text x="71.2411%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="71.0717%" y="549" width="0.1612%" height="15" fill="rgb(243,52,43)" fg:x="882" fg:w="2"/><text x="71.3217%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="71.0717%" y="533" width="0.1612%" height="15" fill="rgb(232,122,17)" fg:x="882" fg:w="2"/><text x="71.3217%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="71.2329%" y="501" width="0.0806%" height="15" fill="rgb(242,15,36)" fg:x="884" fg:w="1"/><text x="71.4829%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="71.2329%" y="485" width="0.0806%" height="15" fill="rgb(232,63,30)" fg:x="884" fg:w="1"/><text x="71.4829%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="71.2329%" y="581" width="0.1612%" height="15" fill="rgb(237,86,45)" fg:x="884" fg:w="2"/><text x="71.4829%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="71.2329%" y="565" width="0.1612%" height="15" fill="rgb(245,123,47)" fg:x="884" fg:w="2"/><text x="71.4829%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="71.2329%" y="549" width="0.1612%" height="15" fill="rgb(252,85,3)" fg:x="884" fg:w="2"/><text x="71.4829%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="71.2329%" y="533" width="0.1612%" height="15" fill="rgb(249,171,16)" fg:x="884" fg:w="2"/><text x="71.4829%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="71.2329%" y="517" width="0.1612%" height="15" fill="rgb(225,146,54)" fg:x="884" fg:w="2"/><text x="71.4829%" y="527.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="71.3135%" y="501" width="0.0806%" height="15" fill="rgb(213,216,54)" fg:x="885" fg:w="1"/><text x="71.5635%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3135%" y="485" width="0.0806%" height="15" fill="rgb(236,60,6)" fg:x="885" fg:w="1"/><text x="71.5635%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3135%" y="469" width="0.0806%" height="15" fill="rgb(227,93,24)" fg:x="885" fg:w="1"/><text x="71.5635%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.3135%" y="453" width="0.0806%" height="15" fill="rgb(219,41,42)" fg:x="885" fg:w="1"/><text x="71.5635%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.3135%" y="437" width="0.0806%" height="15" fill="rgb(229,52,32)" fg:x="885" fg:w="1"/><text x="71.5635%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.3135%" y="421" width="0.0806%" height="15" fill="rgb(221,33,40)" fg:x="885" fg:w="1"/><text x="71.5635%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.3135%" y="405" width="0.0806%" height="15" fill="rgb(216,109,23)" fg:x="885" fg:w="1"/><text x="71.5635%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.3135%" y="389" width="0.0806%" height="15" fill="rgb(214,39,24)" fg:x="885" fg:w="1"/><text x="71.5635%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.3135%" y="373" width="0.0806%" height="15" fill="rgb(205,36,6)" fg:x="885" fg:w="1"/><text x="71.5635%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.3135%" y="357" width="0.0806%" height="15" fill="rgb(222,146,34)" fg:x="885" fg:w="1"/><text x="71.5635%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.3135%" y="341" width="0.0806%" height="15" fill="rgb(214,72,53)" fg:x="885" fg:w="1"/><text x="71.5635%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.3135%" y="325" width="0.0806%" height="15" fill="rgb(250,157,2)" fg:x="885" fg:w="1"/><text x="71.5635%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3135%" y="309" width="0.0806%" height="15" fill="rgb(248,5,23)" fg:x="885" fg:w="1"/><text x="71.5635%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.4746%" y="549" width="0.0806%" height="15" fill="rgb(207,146,36)" fg:x="887" fg:w="1"/><text x="71.7246%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="71.3940%" y="581" width="0.2417%" height="15" fill="rgb(205,184,43)" fg:x="886" fg:w="3"/><text x="71.6440%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="71.3940%" y="565" width="0.2417%" height="15" fill="rgb(251,150,46)" fg:x="886" fg:w="3"/><text x="71.6440%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.5552%" y="549" width="0.0806%" height="15" fill="rgb(227,224,12)" fg:x="888" fg:w="1"/><text x="71.8052%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="71.5552%" y="533" width="0.0806%" height="15" fill="rgb(215,26,26)" fg:x="888" fg:w="1"/><text x="71.8052%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.5552%" y="517" width="0.0806%" height="15" fill="rgb(238,180,42)" fg:x="888" fg:w="1"/><text x="71.8052%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.5552%" y="501" width="0.0806%" height="15" fill="rgb(218,148,48)" fg:x="888" fg:w="1"/><text x="71.8052%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (12 samples, 0.97%)</title><rect x="70.9106%" y="613" width="0.9670%" height="15" fill="rgb(252,14,36)" fg:x="880" fg:w="12"/><text x="71.1606%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.89%)</title><rect x="70.9911%" y="597" width="0.8864%" height="15" fill="rgb(224,35,37)" fg:x="881" fg:w="11"/><text x="71.2411%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="71.6358%" y="581" width="0.2417%" height="15" fill="rgb(245,177,29)" fg:x="889" fg:w="3"/><text x="71.8858%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.7164%" y="565" width="0.1612%" height="15" fill="rgb(221,149,34)" fg:x="890" fg:w="2"/><text x="71.9664%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="71.7164%" y="549" width="0.1612%" height="15" fill="rgb(239,115,36)" fg:x="890" fg:w="2"/><text x="71.9664%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7969%" y="533" width="0.0806%" height="15" fill="rgb(226,196,40)" fg:x="891" fg:w="1"/><text x="72.0469%" y="543.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="71.7969%" y="517" width="0.0806%" height="15" fill="rgb(209,206,26)" fg:x="891" fg:w="1"/><text x="72.0469%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.9581%" y="581" width="0.0806%" height="15" fill="rgb(225,13,33)" fg:x="893" fg:w="1"/><text x="72.2081%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0387%" y="549" width="0.0806%" height="15" fill="rgb(244,126,22)" fg:x="894" fg:w="1"/><text x="72.2887%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="72.0387%" y="581" width="0.1612%" height="15" fill="rgb(248,213,25)" fg:x="894" fg:w="2"/><text x="72.2887%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="72.0387%" y="565" width="0.1612%" height="15" fill="rgb(222,94,36)" fg:x="894" fg:w="2"/><text x="72.2887%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.1193%" y="549" width="0.0806%" height="15" fill="rgb(212,114,20)" fg:x="895" fg:w="1"/><text x="72.3693%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.3610%" y="501" width="0.0806%" height="15" fill="rgb(213,157,26)" fg:x="898" fg:w="1"/><text x="72.6110%" y="511.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (8 samples, 0.64%)</title><rect x="71.8775%" y="613" width="0.6446%" height="15" fill="rgb(211,130,1)" fg:x="892" fg:w="8"/><text x="72.1275%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="71.9581%" y="597" width="0.5641%" height="15" fill="rgb(212,83,53)" fg:x="893" fg:w="7"/><text x="72.2081%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.32%)</title><rect x="72.1998%" y="581" width="0.3223%" height="15" fill="rgb(238,129,10)" fg:x="896" fg:w="4"/><text x="72.4498%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="72.1998%" y="565" width="0.3223%" height="15" fill="rgb(213,76,2)" fg:x="896" fg:w="4"/><text x="72.4498%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="72.3610%" y="549" width="0.1612%" height="15" fill="rgb(220,189,22)" fg:x="898" fg:w="2"/><text x="72.6110%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="72.3610%" y="533" width="0.1612%" height="15" fill="rgb(250,155,31)" fg:x="898" fg:w="2"/><text x="72.6110%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="72.3610%" y="517" width="0.1612%" height="15" fill="rgb(218,184,22)" fg:x="898" fg:w="2"/><text x="72.6110%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.4416%" y="501" width="0.0806%" height="15" fill="rgb(247,117,4)" fg:x="899" fg:w="1"/><text x="72.6916%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.4416%" y="485" width="0.0806%" height="15" fill="rgb(253,185,37)" fg:x="899" fg:w="1"/><text x="72.6916%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="72.5222%" y="597" width="0.0806%" height="15" fill="rgb(226,36,44)" fg:x="900" fg:w="1"/><text x="72.7722%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.5222%" y="581" width="0.0806%" height="15" fill="rgb(224,7,24)" fg:x="900" fg:w="1"/><text x="72.7722%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.5222%" y="565" width="0.0806%" height="15" fill="rgb(239,201,0)" fg:x="900" fg:w="1"/><text x="72.7722%" y="575.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="72.6027%" y="437" width="0.0806%" height="15" fill="rgb(218,56,33)" fg:x="901" fg:w="1"/><text x="72.8527%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="72.6027%" y="565" width="0.2417%" height="15" fill="rgb(210,187,29)" fg:x="901" fg:w="3"/><text x="72.8527%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="72.6027%" y="549" width="0.2417%" height="15" fill="rgb(206,158,49)" fg:x="901" fg:w="3"/><text x="72.8527%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="72.6027%" y="533" width="0.2417%" height="15" fill="rgb(234,36,5)" fg:x="901" fg:w="3"/><text x="72.8527%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="72.6027%" y="517" width="0.2417%" height="15" fill="rgb(239,79,15)" fg:x="901" fg:w="3"/><text x="72.8527%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="72.6027%" y="501" width="0.2417%" height="15" fill="rgb(240,136,17)" fg:x="901" fg:w="3"/><text x="72.8527%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="72.6027%" y="485" width="0.2417%" height="15" fill="rgb(227,83,12)" fg:x="901" fg:w="3"/><text x="72.8527%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="72.6027%" y="469" width="0.2417%" height="15" fill="rgb(212,2,8)" fg:x="901" fg:w="3"/><text x="72.8527%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="72.6027%" y="453" width="0.2417%" height="15" fill="rgb(219,144,5)" fg:x="901" fg:w="3"/><text x="72.8527%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.6833%" y="437" width="0.1612%" height="15" fill="rgb(253,204,27)" fg:x="902" fg:w="2"/><text x="72.9333%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.6833%" y="421" width="0.1612%" height="15" fill="rgb(228,188,17)" fg:x="902" fg:w="2"/><text x="72.9333%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.6833%" y="405" width="0.1612%" height="15" fill="rgb(208,198,33)" fg:x="902" fg:w="2"/><text x="72.9333%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.7639%" y="389" width="0.0806%" height="15" fill="rgb(249,153,19)" fg:x="903" fg:w="1"/><text x="73.0139%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.8445%" y="501" width="0.0806%" height="15" fill="rgb(222,193,37)" fg:x="904" fg:w="1"/><text x="73.0945%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.8445%" y="485" width="0.0806%" height="15" fill="rgb(215,168,16)" fg:x="904" fg:w="1"/><text x="73.0945%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.8445%" y="469" width="0.0806%" height="15" fill="rgb(238,69,36)" fg:x="904" fg:w="1"/><text x="73.0945%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.8445%" y="453" width="0.0806%" height="15" fill="rgb(227,11,51)" fg:x="904" fg:w="1"/><text x="73.0945%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.8445%" y="437" width="0.0806%" height="15" fill="rgb(214,204,5)" fg:x="904" fg:w="1"/><text x="73.0945%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="72.6027%" y="597" width="0.4029%" height="15" fill="rgb(242,182,42)" fg:x="901" fg:w="5"/><text x="72.8527%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="72.6027%" y="581" width="0.4029%" height="15" fill="rgb(212,208,46)" fg:x="901" fg:w="5"/><text x="72.8527%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="72.8445%" y="565" width="0.1612%" height="15" fill="rgb(249,22,49)" fg:x="904" fg:w="2"/><text x="73.0945%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="72.8445%" y="549" width="0.1612%" height="15" fill="rgb(226,130,52)" fg:x="904" fg:w="2"/><text x="73.0945%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="72.8445%" y="533" width="0.1612%" height="15" fill="rgb(209,156,10)" fg:x="904" fg:w="2"/><text x="73.0945%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.8445%" y="517" width="0.1612%" height="15" fill="rgb(207,125,47)" fg:x="904" fg:w="2"/><text x="73.0945%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.9251%" y="501" width="0.0806%" height="15" fill="rgb(221,117,28)" fg:x="905" fg:w="1"/><text x="73.1751%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.9251%" y="485" width="0.0806%" height="15" fill="rgb(221,170,12)" fg:x="905" fg:w="1"/><text x="73.1751%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.9251%" y="469" width="0.0806%" height="15" fill="rgb(241,222,52)" fg:x="905" fg:w="1"/><text x="73.1751%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.9251%" y="453" width="0.0806%" height="15" fill="rgb(219,52,6)" fg:x="905" fg:w="1"/><text x="73.1751%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.9251%" y="437" width="0.0806%" height="15" fill="rgb(226,144,34)" fg:x="905" fg:w="1"/><text x="73.1751%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="72.5222%" y="613" width="0.5641%" height="15" fill="rgb(231,179,27)" fg:x="900" fg:w="7"/><text x="72.7722%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="73.0056%" y="597" width="0.0806%" height="15" fill="rgb(211,178,51)" fg:x="906" fg:w="1"/><text x="73.2556%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.0056%" y="581" width="0.0806%" height="15" fill="rgb(233,141,5)" fg:x="906" fg:w="1"/><text x="73.2556%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="73.0056%" y="565" width="0.0806%" height="15" fill="rgb(214,10,9)" fg:x="906" fg:w="1"/><text x="73.2556%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (3 samples, 0.24%)</title><rect x="73.0862%" y="613" width="0.2417%" height="15" fill="rgb(209,0,1)" fg:x="907" fg:w="3"/><text x="73.3362%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="73.2474%" y="597" width="0.0806%" height="15" fill="rgb(207,82,30)" fg:x="909" fg:w="1"/><text x="73.4974%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.2474%" y="581" width="0.0806%" height="15" fill="rgb(224,214,13)" fg:x="909" fg:w="1"/><text x="73.4974%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="73.3280%" y="597" width="0.0806%" height="15" fill="rgb(237,84,33)" fg:x="910" fg:w="1"/><text x="73.5780%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.3280%" y="581" width="0.0806%" height="15" fill="rgb(231,25,9)" fg:x="910" fg:w="1"/><text x="73.5780%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="73.6503%" y="437" width="0.1612%" height="15" fill="rgb(207,51,8)" fg:x="914" fg:w="2"/><text x="73.9003%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="73.6503%" y="421" width="0.1612%" height="15" fill="rgb(234,189,54)" fg:x="914" fg:w="2"/><text x="73.9003%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="73.6503%" y="405" width="0.1612%" height="15" fill="rgb(214,188,52)" fg:x="914" fg:w="2"/><text x="73.9003%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="73.6503%" y="389" width="0.1612%" height="15" fill="rgb(214,17,11)" fg:x="914" fg:w="2"/><text x="73.9003%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="73.6503%" y="373" width="0.1612%" height="15" fill="rgb(250,31,36)" fg:x="914" fg:w="2"/><text x="73.9003%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="73.6503%" y="357" width="0.1612%" height="15" fill="rgb(244,57,44)" fg:x="914" fg:w="2"/><text x="73.9003%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="73.6503%" y="341" width="0.1612%" height="15" fill="rgb(209,209,31)" fg:x="914" fg:w="2"/><text x="73.9003%" y="351.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="73.5697%" y="565" width="0.3223%" height="15" fill="rgb(217,47,5)" fg:x="913" fg:w="4"/><text x="73.8197%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="73.5697%" y="549" width="0.3223%" height="15" fill="rgb(214,78,42)" fg:x="913" fg:w="4"/><text x="73.8197%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="73.5697%" y="533" width="0.3223%" height="15" fill="rgb(226,15,23)" fg:x="913" fg:w="4"/><text x="73.8197%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="73.6503%" y="517" width="0.2417%" height="15" fill="rgb(230,171,7)" fg:x="914" fg:w="3"/><text x="73.9003%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="73.6503%" y="501" width="0.2417%" height="15" fill="rgb(229,71,9)" fg:x="914" fg:w="3"/><text x="73.9003%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="73.6503%" y="485" width="0.2417%" height="15" fill="rgb(221,111,31)" fg:x="914" fg:w="3"/><text x="73.9003%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="73.6503%" y="469" width="0.2417%" height="15" fill="rgb(237,86,50)" fg:x="914" fg:w="3"/><text x="73.9003%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="73.6503%" y="453" width="0.2417%" height="15" fill="rgb(234,49,32)" fg:x="914" fg:w="3"/><text x="73.9003%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="73.8114%" y="437" width="0.0806%" height="15" fill="rgb(225,144,27)" fg:x="916" fg:w="1"/><text x="74.0614%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="73.8114%" y="421" width="0.0806%" height="15" fill="rgb(225,209,36)" fg:x="916" fg:w="1"/><text x="74.0614%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="73.8920%" y="565" width="0.0806%" height="15" fill="rgb(218,109,14)" fg:x="917" fg:w="1"/><text x="74.1420%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="73.8920%" y="549" width="0.0806%" height="15" fill="rgb(238,186,42)" fg:x="917" fg:w="1"/><text x="74.1420%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (8 samples, 0.64%)</title><rect x="73.4085%" y="597" width="0.6446%" height="15" fill="rgb(236,143,10)" fg:x="911" fg:w="8"/><text x="73.6585%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="73.4891%" y="581" width="0.5641%" height="15" fill="rgb(205,147,7)" fg:x="912" fg:w="7"/><text x="73.7391%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.9726%" y="565" width="0.0806%" height="15" fill="rgb(245,224,0)" fg:x="918" fg:w="1"/><text x="74.2226%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.9726%" y="549" width="0.0806%" height="15" fill="rgb(213,208,32)" fg:x="918" fg:w="1"/><text x="74.2226%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.9726%" y="533" width="0.0806%" height="15" fill="rgb(208,212,4)" fg:x="918" fg:w="1"/><text x="74.2226%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.0532%" y="581" width="0.0806%" height="15" fill="rgb(236,143,49)" fg:x="919" fg:w="1"/><text x="74.3032%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.0532%" y="565" width="0.0806%" height="15" fill="rgb(228,152,33)" fg:x="919" fg:w="1"/><text x="74.3032%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.0532%" y="549" width="0.0806%" height="15" fill="rgb(236,132,39)" fg:x="919" fg:w="1"/><text x="74.3032%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.0532%" y="533" width="0.0806%" height="15" fill="rgb(228,176,23)" fg:x="919" fg:w="1"/><text x="74.3032%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.0532%" y="517" width="0.0806%" height="15" fill="rgb(229,34,18)" fg:x="919" fg:w="1"/><text x="74.3032%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.0532%" y="501" width="0.0806%" height="15" fill="rgb(244,81,37)" fg:x="919" fg:w="1"/><text x="74.3032%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.0532%" y="485" width="0.0806%" height="15" fill="rgb(242,79,32)" fg:x="919" fg:w="1"/><text x="74.3032%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.0532%" y="469" width="0.0806%" height="15" fill="rgb(245,15,51)" fg:x="919" fg:w="1"/><text x="74.3032%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.0532%" y="453" width="0.0806%" height="15" fill="rgb(209,82,8)" fg:x="919" fg:w="1"/><text x="74.3032%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.0532%" y="437" width="0.0806%" height="15" fill="rgb(248,65,42)" fg:x="919" fg:w="1"/><text x="74.3032%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.0532%" y="421" width="0.0806%" height="15" fill="rgb(216,132,33)" fg:x="919" fg:w="1"/><text x="74.3032%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.0532%" y="405" width="0.0806%" height="15" fill="rgb(207,21,32)" fg:x="919" fg:w="1"/><text x="74.3032%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.0532%" y="389" width="0.0806%" height="15" fill="rgb(247,27,22)" fg:x="919" fg:w="1"/><text x="74.3032%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.0532%" y="373" width="0.0806%" height="15" fill="rgb(254,72,41)" fg:x="919" fg:w="1"/><text x="74.3032%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.1338%" y="581" width="0.0806%" height="15" fill="rgb(250,6,31)" fg:x="920" fg:w="1"/><text x="74.3838%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="74.2143%" y="581" width="0.0806%" height="15" fill="rgb(224,124,0)" fg:x="921" fg:w="1"/><text x="74.4643%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="74.2143%" y="565" width="0.0806%" height="15" fill="rgb(228,7,24)" fg:x="921" fg:w="1"/><text x="74.4643%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.2143%" y="549" width="0.0806%" height="15" fill="rgb(250,202,22)" fg:x="921" fg:w="1"/><text x="74.4643%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.2143%" y="533" width="0.0806%" height="15" fill="rgb(214,89,5)" fg:x="921" fg:w="1"/><text x="74.4643%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (310 samples, 24.98%)</title><rect x="49.4762%" y="837" width="24.9799%" height="15" fill="rgb(228,82,34)" fg:x="614" fg:w="310"/><text x="49.7262%" y="847.50">&lt;engine::session::Session as kernel::act..</text></g><g><title>kernel::plugins::mw::apply_middleware (309 samples, 24.90%)</title><rect x="49.5568%" y="821" width="24.8993%" height="15" fill="rgb(212,164,18)" fg:x="615" fg:w="309"/><text x="49.8068%" y="831.50">kernel::plugins::mw::apply_middleware</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (309 samples, 24.90%)</title><rect x="49.5568%" y="805" width="24.8993%" height="15" fill="rgb(210,75,6)" fg:x="615" fg:w="309"/><text x="49.8068%" y="815.50">kernel::plugins::mw::MiddlewareNext::han..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (309 samples, 24.90%)</title><rect x="49.5568%" y="789" width="24.8993%" height="15" fill="rgb(251,11,45)" fg:x="615" fg:w="309"/><text x="49.8068%" y="799.50">&lt;engine::session::ExpandSurroundingsMidd..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (275 samples, 22.16%)</title><rect x="52.2965%" y="773" width="22.1595%" height="15" fill="rgb(234,105,14)" fg:x="649" fg:w="275"/><text x="52.5465%" y="783.50">kernel::plugins::mw::MiddlewareNext..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (275 samples, 22.16%)</title><rect x="52.2965%" y="757" width="22.1595%" height="15" fill="rgb(220,123,16)" fg:x="649" fg:w="275"/><text x="52.5465%" y="767.50">&lt;plugins_dynlib::DynamicMiddleware ..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (275 samples, 22.16%)</title><rect x="52.2965%" y="741" width="22.1595%" height="15" fill="rgb(238,16,42)" fg:x="649" fg:w="275"/><text x="52.5465%" y="751.50">kernel::plugins::mw::MiddlewareNext..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (275 samples, 22.16%)</title><rect x="52.2965%" y="725" width="22.1595%" height="15" fill="rgb(239,101,26)" fg:x="649" fg:w="275"/><text x="52.5465%" y="735.50">core::ops::function::FnOnce::call_o..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (275 samples, 22.16%)</title><rect x="52.2965%" y="709" width="22.1595%" height="15" fill="rgb(228,12,27)" fg:x="649" fg:w="275"/><text x="52.5465%" y="719.50">kernel::plugins::mw::MiddlewareNext..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (275 samples, 22.16%)</title><rect x="52.2965%" y="693" width="22.1595%" height="15" fill="rgb(218,165,53)" fg:x="649" fg:w="275"/><text x="52.5465%" y="703.50">core::ops::function::FnOnce::call_o..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (275 samples, 22.16%)</title><rect x="52.2965%" y="677" width="22.1595%" height="15" fill="rgb(250,44,27)" fg:x="649" fg:w="275"/><text x="52.5465%" y="687.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::op..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (275 samples, 22.16%)</title><rect x="52.2965%" y="661" width="22.1595%" height="15" fill="rgb(229,69,35)" fg:x="649" fg:w="275"/><text x="52.5465%" y="671.50">&lt;engine::session::state::State as k..</text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (112 samples, 9.02%)</title><rect x="65.4311%" y="645" width="9.0250%" height="15" fill="rgb(241,38,31)" fg:x="812" fg:w="112"/><text x="65.6811%" y="655.50">&lt;plugins_core..</text></g><g><title>plugins_core::location::change_location (54 samples, 4.35%)</title><rect x="70.1048%" y="629" width="4.3513%" height="15" fill="rgb(224,152,13)" fg:x="870" fg:w="54"/><text x="70.3548%" y="639.50">plugi..</text></g><g><title>plugins_core::location::Location::set (14 samples, 1.13%)</title><rect x="73.3280%" y="613" width="1.1281%" height="15" fill="rgb(207,225,8)" fg:x="910" fg:w="14"/><text x="73.5780%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="74.0532%" y="597" width="0.4029%" height="15" fill="rgb(222,135,50)" fg:x="919" fg:w="5"/><text x="74.3032%" y="607.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="74.2949%" y="581" width="0.1612%" height="15" fill="rgb(245,39,15)" fg:x="922" fg:w="2"/><text x="74.5449%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="74.2949%" y="565" width="0.1612%" height="15" fill="rgb(233,22,17)" fg:x="922" fg:w="2"/><text x="74.5449%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="74.2949%" y="549" width="0.1612%" height="15" fill="rgb(227,152,49)" fg:x="922" fg:w="2"/><text x="74.5449%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="74.2949%" y="533" width="0.1612%" height="15" fill="rgb(233,162,45)" fg:x="922" fg:w="2"/><text x="74.5449%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.2949%" y="517" width="0.1612%" height="15" fill="rgb(217,44,48)" fg:x="922" fg:w="2"/><text x="74.5449%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.2949%" y="501" width="0.1612%" height="15" fill="rgb(253,41,35)" fg:x="922" fg:w="2"/><text x="74.5449%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="74.2949%" y="485" width="0.1612%" height="15" fill="rgb(254,32,37)" fg:x="922" fg:w="2"/><text x="74.5449%" y="495.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="74.4561%" y="821" width="0.0806%" height="15" fill="rgb(250,9,9)" fg:x="924" fg:w="1"/><text x="74.7061%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.4561%" y="805" width="0.0806%" height="15" fill="rgb(212,37,16)" fg:x="924" fg:w="1"/><text x="74.7061%" y="815.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.5367%" y="597" width="0.0806%" height="15" fill="rgb(235,142,51)" fg:x="925" fg:w="1"/><text x="74.7867%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="74.5367%" y="773" width="0.1612%" height="15" fill="rgb(250,225,53)" fg:x="925" fg:w="2"/><text x="74.7867%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.5367%" y="757" width="0.1612%" height="15" fill="rgb(207,188,48)" fg:x="925" fg:w="2"/><text x="74.7867%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.5367%" y="741" width="0.1612%" height="15" fill="rgb(222,25,21)" fg:x="925" fg:w="2"/><text x="74.7867%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.5367%" y="725" width="0.1612%" height="15" fill="rgb(249,112,5)" fg:x="925" fg:w="2"/><text x="74.7867%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.5367%" y="709" width="0.1612%" height="15" fill="rgb(242,11,22)" fg:x="925" fg:w="2"/><text x="74.7867%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.5367%" y="693" width="0.1612%" height="15" fill="rgb(217,125,14)" fg:x="925" fg:w="2"/><text x="74.7867%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.5367%" y="677" width="0.1612%" height="15" fill="rgb(239,92,14)" fg:x="925" fg:w="2"/><text x="74.7867%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="74.5367%" y="661" width="0.1612%" height="15" fill="rgb(232,145,17)" fg:x="925" fg:w="2"/><text x="74.7867%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.5367%" y="645" width="0.1612%" height="15" fill="rgb(250,158,16)" fg:x="925" fg:w="2"/><text x="74.7867%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.5367%" y="629" width="0.1612%" height="15" fill="rgb(247,30,22)" fg:x="925" fg:w="2"/><text x="74.7867%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.5367%" y="613" width="0.1612%" height="15" fill="rgb(219,215,46)" fg:x="925" fg:w="2"/><text x="74.7867%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6172%" y="597" width="0.0806%" height="15" fill="rgb(237,40,53)" fg:x="926" fg:w="1"/><text x="74.8672%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6172%" y="581" width="0.0806%" height="15" fill="rgb(253,207,11)" fg:x="926" fg:w="1"/><text x="74.8672%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="74.6172%" y="565" width="0.0806%" height="15" fill="rgb(242,16,9)" fg:x="926" fg:w="1"/><text x="74.8672%" y="575.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="74.6172%" y="549" width="0.0806%" height="15" fill="rgb(237,94,35)" fg:x="926" fg:w="1"/><text x="74.8672%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6978%" y="725" width="0.0806%" height="15" fill="rgb(244,145,23)" fg:x="927" fg:w="1"/><text x="74.9478%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6978%" y="709" width="0.0806%" height="15" fill="rgb(209,93,17)" fg:x="927" fg:w="1"/><text x="74.9478%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6978%" y="693" width="0.0806%" height="15" fill="rgb(205,201,0)" fg:x="927" fg:w="1"/><text x="74.9478%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6978%" y="677" width="0.0806%" height="15" fill="rgb(225,198,48)" fg:x="927" fg:w="1"/><text x="74.9478%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6978%" y="661" width="0.0806%" height="15" fill="rgb(211,131,51)" fg:x="927" fg:w="1"/><text x="74.9478%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.6978%" y="645" width="0.0806%" height="15" fill="rgb(237,196,37)" fg:x="927" fg:w="1"/><text x="74.9478%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.6978%" y="629" width="0.0806%" height="15" fill="rgb(218,204,52)" fg:x="927" fg:w="1"/><text x="74.9478%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.6978%" y="613" width="0.0806%" height="15" fill="rgb(251,67,25)" fg:x="927" fg:w="1"/><text x="74.9478%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.6978%" y="597" width="0.0806%" height="15" fill="rgb(219,87,2)" fg:x="927" fg:w="1"/><text x="74.9478%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.6978%" y="581" width="0.0806%" height="15" fill="rgb(224,171,9)" fg:x="927" fg:w="1"/><text x="74.9478%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.6978%" y="565" width="0.0806%" height="15" fill="rgb(215,98,45)" fg:x="927" fg:w="1"/><text x="74.9478%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.6978%" y="549" width="0.0806%" height="15" fill="rgb(231,48,23)" fg:x="927" fg:w="1"/><text x="74.9478%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.6978%" y="533" width="0.0806%" height="15" fill="rgb(233,138,42)" fg:x="927" fg:w="1"/><text x="74.9478%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.6978%" y="517" width="0.0806%" height="15" fill="rgb(244,107,0)" fg:x="927" fg:w="1"/><text x="74.9478%" y="527.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="74.6978%" y="501" width="0.0806%" height="15" fill="rgb(224,15,0)" fg:x="927" fg:w="1"/><text x="74.9478%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7784%" y="629" width="0.0806%" height="15" fill="rgb(218,71,35)" fg:x="928" fg:w="1"/><text x="75.0284%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="74.5367%" y="805" width="0.4029%" height="15" fill="rgb(244,32,22)" fg:x="925" fg:w="5"/><text x="74.7867%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="74.5367%" y="789" width="0.4029%" height="15" fill="rgb(232,209,34)" fg:x="925" fg:w="5"/><text x="74.7867%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="74.6978%" y="773" width="0.2417%" height="15" fill="rgb(232,54,38)" fg:x="927" fg:w="3"/><text x="74.9478%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="74.6978%" y="757" width="0.2417%" height="15" fill="rgb(208,83,16)" fg:x="927" fg:w="3"/><text x="74.9478%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="74.6978%" y="741" width="0.2417%" height="15" fill="rgb(208,70,33)" fg:x="927" fg:w="3"/><text x="74.9478%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.7784%" y="725" width="0.1612%" height="15" fill="rgb(247,38,12)" fg:x="928" fg:w="2"/><text x="75.0284%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.7784%" y="709" width="0.1612%" height="15" fill="rgb(206,34,42)" fg:x="928" fg:w="2"/><text x="75.0284%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.7784%" y="693" width="0.1612%" height="15" fill="rgb(226,75,43)" fg:x="928" fg:w="2"/><text x="75.0284%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.7784%" y="677" width="0.1612%" height="15" fill="rgb(223,109,12)" fg:x="928" fg:w="2"/><text x="75.0284%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="74.7784%" y="661" width="0.1612%" height="15" fill="rgb(218,53,16)" fg:x="928" fg:w="2"/><text x="75.0284%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.7784%" y="645" width="0.1612%" height="15" fill="rgb(236,44,50)" fg:x="928" fg:w="2"/><text x="75.0284%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.8590%" y="629" width="0.0806%" height="15" fill="rgb(211,163,12)" fg:x="929" fg:w="1"/><text x="75.1090%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8590%" y="613" width="0.0806%" height="15" fill="rgb(230,67,52)" fg:x="929" fg:w="1"/><text x="75.1090%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.8590%" y="597" width="0.0806%" height="15" fill="rgb(224,204,24)" fg:x="929" fg:w="1"/><text x="75.1090%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.9396%" y="709" width="0.0806%" height="15" fill="rgb(210,50,27)" fg:x="930" fg:w="1"/><text x="75.1896%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.9396%" y="693" width="0.0806%" height="15" fill="rgb(251,202,23)" fg:x="930" fg:w="1"/><text x="75.1896%" y="703.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.0201%" y="677" width="0.0806%" height="15" fill="rgb(230,210,21)" fg:x="931" fg:w="1"/><text x="75.2701%" y="687.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.0201%" y="661" width="0.0806%" height="15" fill="rgb(222,72,44)" fg:x="931" fg:w="1"/><text x="75.2701%" y="671.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="74.9396%" y="789" width="0.2417%" height="15" fill="rgb(223,182,13)" fg:x="930" fg:w="3"/><text x="75.1896%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="74.9396%" y="773" width="0.2417%" height="15" fill="rgb(228,61,15)" fg:x="930" fg:w="3"/><text x="75.1896%" y="783.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="74.9396%" y="757" width="0.2417%" height="15" fill="rgb(253,207,22)" fg:x="930" fg:w="3"/><text x="75.1896%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="74.9396%" y="741" width="0.2417%" height="15" fill="rgb(232,10,15)" fg:x="930" fg:w="3"/><text x="75.1896%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="74.9396%" y="725" width="0.2417%" height="15" fill="rgb(227,207,39)" fg:x="930" fg:w="3"/><text x="75.1896%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.0201%" y="709" width="0.1612%" height="15" fill="rgb(228,187,3)" fg:x="931" fg:w="2"/><text x="75.2701%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.0201%" y="693" width="0.1612%" height="15" fill="rgb(246,45,9)" fg:x="931" fg:w="2"/><text x="75.2701%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.1007%" y="677" width="0.0806%" height="15" fill="rgb(249,10,17)" fg:x="932" fg:w="1"/><text x="75.3507%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.1007%" y="661" width="0.0806%" height="15" fill="rgb(251,56,51)" fg:x="932" fg:w="1"/><text x="75.3507%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.1007%" y="645" width="0.0806%" height="15" fill="rgb(232,51,36)" fg:x="932" fg:w="1"/><text x="75.3507%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.1007%" y="629" width="0.0806%" height="15" fill="rgb(215,38,28)" fg:x="932" fg:w="1"/><text x="75.3507%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.1007%" y="613" width="0.0806%" height="15" fill="rgb(218,5,35)" fg:x="932" fg:w="1"/><text x="75.3507%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.1813%" y="645" width="0.0806%" height="15" fill="rgb(232,219,8)" fg:x="933" fg:w="1"/><text x="75.4313%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.1813%" y="629" width="0.0806%" height="15" fill="rgb(243,162,8)" fg:x="933" fg:w="1"/><text x="75.4313%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.1813%" y="613" width="0.0806%" height="15" fill="rgb(218,86,32)" fg:x="933" fg:w="1"/><text x="75.4313%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.1813%" y="597" width="0.0806%" height="15" fill="rgb(218,179,51)" fg:x="933" fg:w="1"/><text x="75.4313%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="75.1813%" y="581" width="0.0806%" height="15" fill="rgb(237,42,52)" fg:x="933" fg:w="1"/><text x="75.4313%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="75.1813%" y="677" width="0.1612%" height="15" fill="rgb(229,12,4)" fg:x="933" fg:w="2"/><text x="75.4313%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.1813%" y="661" width="0.1612%" height="15" fill="rgb(214,203,2)" fg:x="933" fg:w="2"/><text x="75.4313%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2619%" y="645" width="0.0806%" height="15" fill="rgb(241,11,44)" fg:x="934" fg:w="1"/><text x="75.5119%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="75.1813%" y="709" width="0.2417%" height="15" fill="rgb(221,106,48)" fg:x="933" fg:w="3"/><text x="75.4313%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.1813%" y="693" width="0.2417%" height="15" fill="rgb(220,220,10)" fg:x="933" fg:w="3"/><text x="75.4313%" y="703.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="75.3425%" y="677" width="0.0806%" height="15" fill="rgb(228,220,44)" fg:x="935" fg:w="1"/><text x="75.5925%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3425%" y="661" width="0.0806%" height="15" fill="rgb(214,144,45)" fg:x="935" fg:w="1"/><text x="75.5925%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="75.1813%" y="757" width="0.3223%" height="15" fill="rgb(224,142,28)" fg:x="933" fg:w="4"/><text x="75.4313%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="75.1813%" y="741" width="0.3223%" height="15" fill="rgb(214,79,27)" fg:x="933" fg:w="4"/><text x="75.4313%" y="751.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="75.1813%" y="725" width="0.3223%" height="15" fill="rgb(208,173,30)" fg:x="933" fg:w="4"/><text x="75.4313%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4230%" y="709" width="0.0806%" height="15" fill="rgb(222,81,9)" fg:x="936" fg:w="1"/><text x="75.6730%" y="719.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.4230%" y="693" width="0.0806%" height="15" fill="rgb(217,152,25)" fg:x="936" fg:w="1"/><text x="75.6730%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.4230%" y="677" width="0.0806%" height="15" fill="rgb(248,170,26)" fg:x="936" fg:w="1"/><text x="75.6730%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4230%" y="661" width="0.0806%" height="15" fill="rgb(206,151,5)" fg:x="936" fg:w="1"/><text x="75.6730%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.4230%" y="645" width="0.0806%" height="15" fill="rgb(216,7,52)" fg:x="936" fg:w="1"/><text x="75.6730%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.4230%" y="629" width="0.0806%" height="15" fill="rgb(228,27,44)" fg:x="936" fg:w="1"/><text x="75.6730%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4230%" y="613" width="0.0806%" height="15" fill="rgb(208,221,38)" fg:x="936" fg:w="1"/><text x="75.6730%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.4230%" y="597" width="0.0806%" height="15" fill="rgb(240,59,23)" fg:x="936" fg:w="1"/><text x="75.6730%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.4230%" y="581" width="0.0806%" height="15" fill="rgb(210,127,41)" fg:x="936" fg:w="1"/><text x="75.6730%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.4230%" y="565" width="0.0806%" height="15" fill="rgb(224,160,3)" fg:x="936" fg:w="1"/><text x="75.6730%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.4230%" y="549" width="0.0806%" height="15" fill="rgb(215,228,26)" fg:x="936" fg:w="1"/><text x="75.6730%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.5036%" y="725" width="0.0806%" height="15" fill="rgb(218,107,38)" fg:x="937" fg:w="1"/><text x="75.7536%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (9 samples, 0.73%)</title><rect x="74.9396%" y="805" width="0.7252%" height="15" fill="rgb(246,159,42)" fg:x="930" fg:w="9"/><text x="75.1896%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="75.1813%" y="789" width="0.4835%" height="15" fill="rgb(251,23,41)" fg:x="933" fg:w="6"/><text x="75.4313%" y="799.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="75.1813%" y="773" width="0.4835%" height="15" fill="rgb(246,94,53)" fg:x="933" fg:w="6"/><text x="75.4313%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.5036%" y="757" width="0.1612%" height="15" fill="rgb(241,212,46)" fg:x="937" fg:w="2"/><text x="75.7536%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.5036%" y="741" width="0.1612%" height="15" fill="rgb(231,79,30)" fg:x="937" fg:w="2"/><text x="75.7536%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.5842%" y="725" width="0.0806%" height="15" fill="rgb(208,202,21)" fg:x="938" fg:w="1"/><text x="75.8342%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.5842%" y="709" width="0.0806%" height="15" fill="rgb(226,136,22)" fg:x="938" fg:w="1"/><text x="75.8342%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (15 samples, 1.21%)</title><rect x="74.5367%" y="821" width="1.2087%" height="15" fill="rgb(214,87,0)" fg:x="925" fg:w="15"/><text x="74.7867%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="75.6648%" y="805" width="0.0806%" height="15" fill="rgb(239,176,44)" fg:x="939" fg:w="1"/><text x="75.9148%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="75.6648%" y="789" width="0.0806%" height="15" fill="rgb(230,102,31)" fg:x="939" fg:w="1"/><text x="75.9148%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.6648%" y="773" width="0.0806%" height="15" fill="rgb(219,40,19)" fg:x="939" fg:w="1"/><text x="75.9148%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.6648%" y="757" width="0.0806%" height="15" fill="rgb(228,55,4)" fg:x="939" fg:w="1"/><text x="75.9148%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.6648%" y="741" width="0.0806%" height="15" fill="rgb(239,120,21)" fg:x="939" fg:w="1"/><text x="75.9148%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.6648%" y="725" width="0.0806%" height="15" fill="rgb(243,136,1)" fg:x="939" fg:w="1"/><text x="75.9148%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.6648%" y="709" width="0.0806%" height="15" fill="rgb(237,12,45)" fg:x="939" fg:w="1"/><text x="75.9148%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.6648%" y="693" width="0.0806%" height="15" fill="rgb(245,142,47)" fg:x="939" fg:w="1"/><text x="75.9148%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.6648%" y="677" width="0.0806%" height="15" fill="rgb(237,24,54)" fg:x="939" fg:w="1"/><text x="75.9148%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.6648%" y="661" width="0.0806%" height="15" fill="rgb(234,164,40)" fg:x="939" fg:w="1"/><text x="75.9148%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.6648%" y="645" width="0.0806%" height="15" fill="rgb(242,95,12)" fg:x="939" fg:w="1"/><text x="75.9148%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.6648%" y="629" width="0.0806%" height="15" fill="rgb(238,75,28)" fg:x="939" fg:w="1"/><text x="75.9148%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.6648%" y="613" width="0.0806%" height="15" fill="rgb(236,4,26)" fg:x="939" fg:w="1"/><text x="75.9148%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="75.6648%" y="597" width="0.0806%" height="15" fill="rgb(252,158,20)" fg:x="939" fg:w="1"/><text x="75.9148%" y="607.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.6648%" y="581" width="0.0806%" height="15" fill="rgb(231,67,31)" fg:x="939" fg:w="1"/><text x="75.9148%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (17 samples, 1.37%)</title><rect x="74.4561%" y="837" width="1.3699%" height="15" fill="rgb(241,151,13)" fg:x="924" fg:w="17"/><text x="74.7061%" y="847.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="75.7454%" y="821" width="0.0806%" height="15" fill="rgb(242,25,36)" fg:x="940" fg:w="1"/><text x="75.9954%" y="831.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.7454%" y="805" width="0.0806%" height="15" fill="rgb(205,222,34)" fg:x="940" fg:w="1"/><text x="75.9954%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.7454%" y="789" width="0.0806%" height="15" fill="rgb(235,154,26)" fg:x="940" fg:w="1"/><text x="75.9954%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.7454%" y="773" width="0.0806%" height="15" fill="rgb(233,17,9)" fg:x="940" fg:w="1"/><text x="75.9954%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.7454%" y="757" width="0.0806%" height="15" fill="rgb(245,113,50)" fg:x="940" fg:w="1"/><text x="75.9954%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.7454%" y="741" width="0.0806%" height="15" fill="rgb(247,105,34)" fg:x="940" fg:w="1"/><text x="75.9954%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.7454%" y="725" width="0.0806%" height="15" fill="rgb(225,50,23)" fg:x="940" fg:w="1"/><text x="75.9954%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.7454%" y="709" width="0.0806%" height="15" fill="rgb(253,189,32)" fg:x="940" fg:w="1"/><text x="75.9954%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.7454%" y="693" width="0.0806%" height="15" fill="rgb(208,159,41)" fg:x="940" fg:w="1"/><text x="75.9954%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.7454%" y="677" width="0.0806%" height="15" fill="rgb(222,135,10)" fg:x="940" fg:w="1"/><text x="75.9954%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.7454%" y="661" width="0.0806%" height="15" fill="rgb(214,75,20)" fg:x="940" fg:w="1"/><text x="75.9954%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.7454%" y="645" width="0.0806%" height="15" fill="rgb(231,65,33)" fg:x="940" fg:w="1"/><text x="75.9954%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.7454%" y="629" width="0.0806%" height="15" fill="rgb(251,139,6)" fg:x="940" fg:w="1"/><text x="75.9954%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="75.8259%" y="789" width="0.0806%" height="15" fill="rgb(225,220,53)" fg:x="941" fg:w="1"/><text x="76.0759%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="75.8259%" y="773" width="0.0806%" height="15" fill="rgb(244,73,26)" fg:x="941" fg:w="1"/><text x="76.0759%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="75.8259%" y="757" width="0.0806%" height="15" fill="rgb(244,98,34)" fg:x="941" fg:w="1"/><text x="76.0759%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="75.8259%" y="741" width="0.0806%" height="15" fill="rgb(211,131,5)" fg:x="941" fg:w="1"/><text x="76.0759%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.8259%" y="725" width="0.0806%" height="15" fill="rgb(238,14,50)" fg:x="941" fg:w="1"/><text x="76.0759%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.8259%" y="709" width="0.0806%" height="15" fill="rgb(206,132,52)" fg:x="941" fg:w="1"/><text x="76.0759%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8259%" y="693" width="0.0806%" height="15" fill="rgb(228,200,17)" fg:x="941" fg:w="1"/><text x="76.0759%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.8259%" y="677" width="0.0806%" height="15" fill="rgb(209,53,28)" fg:x="941" fg:w="1"/><text x="76.0759%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8259%" y="661" width="0.0806%" height="15" fill="rgb(240,214,22)" fg:x="941" fg:w="1"/><text x="76.0759%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.8259%" y="645" width="0.0806%" height="15" fill="rgb(213,217,46)" fg:x="941" fg:w="1"/><text x="76.0759%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8259%" y="629" width="0.0806%" height="15" fill="rgb(241,159,53)" fg:x="941" fg:w="1"/><text x="76.0759%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.8259%" y="613" width="0.0806%" height="15" fill="rgb(241,70,32)" fg:x="941" fg:w="1"/><text x="76.0759%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="75.8259%" y="597" width="0.0806%" height="15" fill="rgb(233,117,50)" fg:x="941" fg:w="1"/><text x="76.0759%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="75.8259%" y="581" width="0.0806%" height="15" fill="rgb(211,114,15)" fg:x="941" fg:w="1"/><text x="76.0759%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.9871%" y="693" width="0.1612%" height="15" fill="rgb(254,0,36)" fg:x="943" fg:w="2"/><text x="76.2371%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.0677%" y="677" width="0.0806%" height="15" fill="rgb(221,74,12)" fg:x="944" fg:w="1"/><text x="76.3177%" y="687.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="75.9065%" y="773" width="0.4029%" height="15" fill="rgb(241,221,3)" fg:x="942" fg:w="5"/><text x="76.1565%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="75.9065%" y="757" width="0.4029%" height="15" fill="rgb(252,91,23)" fg:x="942" fg:w="5"/><text x="76.1565%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="75.9065%" y="741" width="0.4029%" height="15" fill="rgb(232,1,25)" fg:x="942" fg:w="5"/><text x="76.1565%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="75.9065%" y="725" width="0.4029%" height="15" fill="rgb(253,145,25)" fg:x="942" fg:w="5"/><text x="76.1565%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="75.9871%" y="709" width="0.3223%" height="15" fill="rgb(226,43,53)" fg:x="943" fg:w="4"/><text x="76.2371%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="76.1483%" y="693" width="0.1612%" height="15" fill="rgb(245,116,39)" fg:x="945" fg:w="2"/><text x="76.3983%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.2288%" y="677" width="0.0806%" height="15" fill="rgb(231,205,33)" fg:x="946" fg:w="1"/><text x="76.4788%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.2288%" y="661" width="0.0806%" height="15" fill="rgb(238,96,15)" fg:x="946" fg:w="1"/><text x="76.4788%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.2288%" y="645" width="0.0806%" height="15" fill="rgb(212,80,14)" fg:x="946" fg:w="1"/><text x="76.4788%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.2288%" y="629" width="0.0806%" height="15" fill="rgb(209,118,24)" fg:x="946" fg:w="1"/><text x="76.4788%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.2288%" y="613" width="0.0806%" height="15" fill="rgb(234,176,14)" fg:x="946" fg:w="1"/><text x="76.4788%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.2288%" y="597" width="0.0806%" height="15" fill="rgb(207,145,21)" fg:x="946" fg:w="1"/><text x="76.4788%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.2288%" y="581" width="0.0806%" height="15" fill="rgb(218,58,54)" fg:x="946" fg:w="1"/><text x="76.4788%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2288%" y="565" width="0.0806%" height="15" fill="rgb(229,11,50)" fg:x="946" fg:w="1"/><text x="76.4788%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2288%" y="549" width="0.0806%" height="15" fill="rgb(221,170,33)" fg:x="946" fg:w="1"/><text x="76.4788%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.2288%" y="533" width="0.0806%" height="15" fill="rgb(221,121,40)" fg:x="946" fg:w="1"/><text x="76.4788%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.3900%" y="741" width="0.0806%" height="15" fill="rgb(214,165,32)" fg:x="948" fg:w="1"/><text x="76.6400%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.4706%" y="741" width="0.0806%" height="15" fill="rgb(243,195,30)" fg:x="949" fg:w="1"/><text x="76.7206%" y="751.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="76.5512%" y="693" width="0.0806%" height="15" fill="rgb(238,0,27)" fg:x="950" fg:w="1"/><text x="76.8012%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.5512%" y="677" width="0.0806%" height="15" fill="rgb(226,0,50)" fg:x="950" fg:w="1"/><text x="76.8012%" y="687.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="76.5512%" y="661" width="0.0806%" height="15" fill="rgb(222,93,46)" fg:x="950" fg:w="1"/><text x="76.8012%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.5512%" y="645" width="0.0806%" height="15" fill="rgb(210,34,24)" fg:x="950" fg:w="1"/><text x="76.8012%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="76.5512%" y="629" width="0.0806%" height="15" fill="rgb(217,47,8)" fg:x="950" fg:w="1"/><text x="76.8012%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.5512%" y="613" width="0.0806%" height="15" fill="rgb(217,0,26)" fg:x="950" fg:w="1"/><text x="76.8012%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.6317%" y="693" width="0.0806%" height="15" fill="rgb(218,228,31)" fg:x="951" fg:w="1"/><text x="76.8817%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.6317%" y="677" width="0.0806%" height="15" fill="rgb(208,101,40)" fg:x="951" fg:w="1"/><text x="76.8817%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.6317%" y="661" width="0.0806%" height="15" fill="rgb(225,134,0)" fg:x="951" fg:w="1"/><text x="76.8817%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6317%" y="645" width="0.0806%" height="15" fill="rgb(241,37,25)" fg:x="951" fg:w="1"/><text x="76.8817%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.7123%" y="565" width="0.0806%" height="15" fill="rgb(251,149,9)" fg:x="952" fg:w="1"/><text x="76.9623%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.7123%" y="549" width="0.0806%" height="15" fill="rgb(225,196,54)" fg:x="952" fg:w="1"/><text x="76.9623%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.7123%" y="533" width="0.0806%" height="15" fill="rgb(240,46,24)" fg:x="952" fg:w="1"/><text x="76.9623%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="76.5512%" y="741" width="0.3223%" height="15" fill="rgb(214,189,4)" fg:x="950" fg:w="4"/><text x="76.8012%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="76.5512%" y="725" width="0.3223%" height="15" fill="rgb(222,3,8)" fg:x="950" fg:w="4"/><text x="76.8012%" y="735.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="76.5512%" y="709" width="0.3223%" height="15" fill="rgb(250,163,6)" fg:x="950" fg:w="4"/><text x="76.8012%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.7123%" y="693" width="0.1612%" height="15" fill="rgb(225,23,45)" fg:x="952" fg:w="2"/><text x="76.9623%" y="703.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.7123%" y="677" width="0.1612%" height="15" fill="rgb(225,177,23)" fg:x="952" fg:w="2"/><text x="76.9623%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="76.7123%" y="661" width="0.1612%" height="15" fill="rgb(253,75,3)" fg:x="952" fg:w="2"/><text x="76.9623%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.7123%" y="645" width="0.1612%" height="15" fill="rgb(237,85,4)" fg:x="952" fg:w="2"/><text x="76.9623%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.7123%" y="629" width="0.1612%" height="15" fill="rgb(212,23,3)" fg:x="952" fg:w="2"/><text x="76.9623%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="76.7123%" y="613" width="0.1612%" height="15" fill="rgb(250,127,19)" fg:x="952" fg:w="2"/><text x="76.9623%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.7123%" y="597" width="0.1612%" height="15" fill="rgb(222,82,14)" fg:x="952" fg:w="2"/><text x="76.9623%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.7123%" y="581" width="0.1612%" height="15" fill="rgb(213,63,47)" fg:x="952" fg:w="2"/><text x="76.9623%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="76.7929%" y="565" width="0.0806%" height="15" fill="rgb(219,132,41)" fg:x="953" fg:w="1"/><text x="77.0429%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7929%" y="549" width="0.0806%" height="15" fill="rgb(251,205,16)" fg:x="953" fg:w="1"/><text x="77.0429%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.7929%" y="533" width="0.0806%" height="15" fill="rgb(239,102,23)" fg:x="953" fg:w="1"/><text x="77.0429%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (13 samples, 1.05%)</title><rect x="75.9065%" y="789" width="1.0475%" height="15" fill="rgb(222,218,4)" fg:x="942" fg:w="13"/><text x="76.1565%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="76.3094%" y="773" width="0.6446%" height="15" fill="rgb(232,91,40)" fg:x="947" fg:w="8"/><text x="76.5594%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="76.3094%" y="757" width="0.6446%" height="15" fill="rgb(238,170,50)" fg:x="947" fg:w="8"/><text x="76.5594%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.8735%" y="741" width="0.0806%" height="15" fill="rgb(243,52,25)" fg:x="954" fg:w="1"/><text x="77.1235%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8735%" y="725" width="0.0806%" height="15" fill="rgb(236,151,10)" fg:x="954" fg:w="1"/><text x="77.1235%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.8735%" y="709" width="0.0806%" height="15" fill="rgb(216,123,7)" fg:x="954" fg:w="1"/><text x="77.1235%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.9541%" y="725" width="0.0806%" height="15" fill="rgb(247,115,15)" fg:x="955" fg:w="1"/><text x="77.2041%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.9541%" y="709" width="0.0806%" height="15" fill="rgb(249,65,46)" fg:x="955" fg:w="1"/><text x="77.2041%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9541%" y="693" width="0.0806%" height="15" fill="rgb(230,132,24)" fg:x="955" fg:w="1"/><text x="77.2041%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.9541%" y="741" width="0.1612%" height="15" fill="rgb(253,115,7)" fg:x="955" fg:w="2"/><text x="77.2041%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.0346%" y="725" width="0.0806%" height="15" fill="rgb(233,23,21)" fg:x="956" fg:w="1"/><text x="77.2846%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.0346%" y="709" width="0.0806%" height="15" fill="rgb(231,203,18)" fg:x="956" fg:w="1"/><text x="77.2846%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.0346%" y="693" width="0.0806%" height="15" fill="rgb(233,19,15)" fg:x="956" fg:w="1"/><text x="77.2846%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.0346%" y="677" width="0.0806%" height="15" fill="rgb(213,12,4)" fg:x="956" fg:w="1"/><text x="77.2846%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.0346%" y="661" width="0.0806%" height="15" fill="rgb(221,198,54)" fg:x="956" fg:w="1"/><text x="77.2846%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="77.0346%" y="645" width="0.0806%" height="15" fill="rgb(247,189,16)" fg:x="956" fg:w="1"/><text x="77.2846%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="77.0346%" y="629" width="0.0806%" height="15" fill="rgb(213,82,46)" fg:x="956" fg:w="1"/><text x="77.2846%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="76.9541%" y="789" width="0.2417%" height="15" fill="rgb(216,129,40)" fg:x="955" fg:w="3"/><text x="77.2041%" y="799.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="76.9541%" y="773" width="0.2417%" height="15" fill="rgb(222,154,45)" fg:x="955" fg:w="3"/><text x="77.2041%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="76.9541%" y="757" width="0.2417%" height="15" fill="rgb(214,223,41)" fg:x="955" fg:w="3"/><text x="77.2041%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.1152%" y="741" width="0.0806%" height="15" fill="rgb(212,167,3)" fg:x="957" fg:w="1"/><text x="77.3652%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1152%" y="725" width="0.0806%" height="15" fill="rgb(219,226,20)" fg:x="957" fg:w="1"/><text x="77.3652%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.1152%" y="709" width="0.0806%" height="15" fill="rgb(231,29,48)" fg:x="957" fg:w="1"/><text x="77.3652%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1152%" y="693" width="0.0806%" height="15" fill="rgb(224,12,4)" fg:x="957" fg:w="1"/><text x="77.3652%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.1152%" y="677" width="0.0806%" height="15" fill="rgb(217,180,30)" fg:x="957" fg:w="1"/><text x="77.3652%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1152%" y="661" width="0.0806%" height="15" fill="rgb(237,137,17)" fg:x="957" fg:w="1"/><text x="77.3652%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.1152%" y="645" width="0.0806%" height="15" fill="rgb(252,225,18)" fg:x="957" fg:w="1"/><text x="77.3652%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1152%" y="629" width="0.0806%" height="15" fill="rgb(209,177,11)" fg:x="957" fg:w="1"/><text x="77.3652%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (18 samples, 1.45%)</title><rect x="75.8259%" y="805" width="1.4504%" height="15" fill="rgb(214,147,8)" fg:x="941" fg:w="18"/><text x="76.0759%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.1958%" y="789" width="0.0806%" height="15" fill="rgb(213,225,52)" fg:x="958" fg:w="1"/><text x="77.4458%" y="799.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.2764%" y="789" width="0.0806%" height="15" fill="rgb(205,99,43)" fg:x="959" fg:w="1"/><text x="77.5264%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.2764%" y="773" width="0.0806%" height="15" fill="rgb(248,141,45)" fg:x="959" fg:w="1"/><text x="77.5264%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.2764%" y="757" width="0.0806%" height="15" fill="rgb(233,198,44)" fg:x="959" fg:w="1"/><text x="77.5264%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.2764%" y="741" width="0.0806%" height="15" fill="rgb(231,176,38)" fg:x="959" fg:w="1"/><text x="77.5264%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.2764%" y="725" width="0.0806%" height="15" fill="rgb(209,31,1)" fg:x="959" fg:w="1"/><text x="77.5264%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.2764%" y="709" width="0.0806%" height="15" fill="rgb(246,42,27)" fg:x="959" fg:w="1"/><text x="77.5264%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.2764%" y="693" width="0.0806%" height="15" fill="rgb(244,104,27)" fg:x="959" fg:w="1"/><text x="77.5264%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.2764%" y="677" width="0.0806%" height="15" fill="rgb(209,14,27)" fg:x="959" fg:w="1"/><text x="77.5264%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.2764%" y="661" width="0.0806%" height="15" fill="rgb(205,170,50)" fg:x="959" fg:w="1"/><text x="77.5264%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (20 samples, 1.61%)</title><rect x="75.8259%" y="821" width="1.6116%" height="15" fill="rgb(241,127,20)" fg:x="941" fg:w="20"/><text x="76.0759%" y="831.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="77.2764%" y="805" width="0.1612%" height="15" fill="rgb(230,72,5)" fg:x="959" fg:w="2"/><text x="77.5264%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.3570%" y="789" width="0.0806%" height="15" fill="rgb(231,221,3)" fg:x="960" fg:w="1"/><text x="77.6070%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="77.3570%" y="773" width="0.0806%" height="15" fill="rgb(232,150,49)" fg:x="960" fg:w="1"/><text x="77.6070%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.4376%" y="805" width="0.0806%" height="15" fill="rgb(225,13,46)" fg:x="961" fg:w="1"/><text x="77.6876%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.4376%" y="789" width="0.0806%" height="15" fill="rgb(236,192,49)" fg:x="961" fg:w="1"/><text x="77.6876%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.4376%" y="773" width="0.0806%" height="15" fill="rgb(242,107,14)" fg:x="961" fg:w="1"/><text x="77.6876%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.4376%" y="757" width="0.0806%" height="15" fill="rgb(251,185,35)" fg:x="961" fg:w="1"/><text x="77.6876%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.4376%" y="741" width="0.0806%" height="15" fill="rgb(212,128,8)" fg:x="961" fg:w="1"/><text x="77.6876%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.4376%" y="725" width="0.0806%" height="15" fill="rgb(215,223,6)" fg:x="961" fg:w="1"/><text x="77.6876%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.4376%" y="709" width="0.0806%" height="15" fill="rgb(216,23,45)" fg:x="961" fg:w="1"/><text x="77.6876%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.4376%" y="693" width="0.0806%" height="15" fill="rgb(215,71,45)" fg:x="961" fg:w="1"/><text x="77.6876%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.4376%" y="677" width="0.0806%" height="15" fill="rgb(224,2,48)" fg:x="961" fg:w="1"/><text x="77.6876%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.4376%" y="661" width="0.0806%" height="15" fill="rgb(218,48,8)" fg:x="961" fg:w="1"/><text x="77.6876%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.4376%" y="645" width="0.0806%" height="15" fill="rgb(254,37,27)" fg:x="961" fg:w="1"/><text x="77.6876%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (22 samples, 1.77%)</title><rect x="75.8259%" y="837" width="1.7728%" height="15" fill="rgb(237,112,2)" fg:x="941" fg:w="22"/><text x="76.0759%" y="847.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="77.4376%" y="821" width="0.1612%" height="15" fill="rgb(243,64,54)" fg:x="961" fg:w="2"/><text x="77.6876%" y="831.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="77.5181%" y="805" width="0.0806%" height="15" fill="rgb(211,93,4)" fg:x="962" fg:w="1"/><text x="77.7681%" y="815.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="77.6793%" y="789" width="0.1612%" height="15" fill="rgb(249,127,30)" fg:x="964" fg:w="2"/><text x="77.9293%" y="799.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (2 samples, 0.16%)</title><rect x="77.6793%" y="773" width="0.1612%" height="15" fill="rgb(248,76,17)" fg:x="964" fg:w="2"/><text x="77.9293%" y="783.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="77.6793%" y="757" width="0.1612%" height="15" fill="rgb(244,153,49)" fg:x="964" fg:w="2"/><text x="77.9293%" y="767.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (2 samples, 0.16%)</title><rect x="77.6793%" y="741" width="0.1612%" height="15" fill="rgb(231,94,34)" fg:x="964" fg:w="2"/><text x="77.9293%" y="751.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (2 samples, 0.16%)</title><rect x="77.6793%" y="725" width="0.1612%" height="15" fill="rgb(253,162,40)" fg:x="964" fg:w="2"/><text x="77.9293%" y="735.50"></text></g><g><title>core::slice::memchr::memchr_aligned (2 samples, 0.16%)</title><rect x="77.6793%" y="709" width="0.1612%" height="15" fill="rgb(219,194,14)" fg:x="964" fg:w="2"/><text x="77.9293%" y="719.50"></text></g><g><title>core::slice::memchr::memchr_naive (2 samples, 0.16%)</title><rect x="77.6793%" y="693" width="0.1612%" height="15" fill="rgb(226,80,42)" fg:x="964" fg:w="2"/><text x="77.9293%" y="703.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="77.6793%" y="805" width="0.2417%" height="15" fill="rgb(208,108,5)" fg:x="964" fg:w="3"/><text x="77.9293%" y="815.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="77.8405%" y="789" width="0.0806%" height="15" fill="rgb(209,204,33)" fg:x="966" fg:w="1"/><text x="78.0905%" y="799.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="77.8405%" y="773" width="0.0806%" height="15" fill="rgb(232,22,14)" fg:x="966" fg:w="1"/><text x="78.0905%" y="783.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="77.8405%" y="757" width="0.0806%" height="15" fill="rgb(236,139,41)" fg:x="966" fg:w="1"/><text x="78.0905%" y="767.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (1 samples, 0.08%)</title><rect x="77.8405%" y="741" width="0.0806%" height="15" fill="rgb(220,91,0)" fg:x="966" fg:w="1"/><text x="78.0905%" y="751.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="77.8405%" y="725" width="0.0806%" height="15" fill="rgb(243,200,48)" fg:x="966" fg:w="1"/><text x="78.0905%" y="735.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="77.8405%" y="709" width="0.0806%" height="15" fill="rgb(237,172,41)" fg:x="966" fg:w="1"/><text x="78.0905%" y="719.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (5 samples, 0.40%)</title><rect x="77.5987%" y="837" width="0.4029%" height="15" fill="rgb(247,152,34)" fg:x="963" fg:w="5"/><text x="77.8487%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.40%)</title><rect x="77.5987%" y="821" width="0.4029%" height="15" fill="rgb(205,88,40)" fg:x="963" fg:w="5"/><text x="77.8487%" y="831.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="77.9210%" y="805" width="0.0806%" height="15" fill="rgb(223,30,13)" fg:x="967" fg:w="1"/><text x="78.1710%" y="815.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="77.9210%" y="789" width="0.0806%" height="15" fill="rgb(249,7,18)" fg:x="967" fg:w="1"/><text x="78.1710%" y="799.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="77.9210%" y="773" width="0.0806%" height="15" fill="rgb(242,185,6)" fg:x="967" fg:w="1"/><text x="78.1710%" y="783.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="78.0016%" y="837" width="0.1612%" height="15" fill="rgb(234,115,47)" fg:x="968" fg:w="2"/><text x="78.2516%" y="847.50"></text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="78.1628%" y="837" width="0.1612%" height="15" fill="rgb(213,98,2)" fg:x="970" fg:w="2"/><text x="78.4128%" y="847.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="78.1628%" y="821" width="0.1612%" height="15" fill="rgb(237,162,23)" fg:x="970" fg:w="2"/><text x="78.4128%" y="831.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.2434%" y="805" width="0.0806%" height="15" fill="rgb(240,174,26)" fg:x="971" fg:w="1"/><text x="78.4934%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.2434%" y="789" width="0.0806%" height="15" fill="rgb(249,90,45)" fg:x="971" fg:w="1"/><text x="78.4934%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.3239%" y="821" width="0.0806%" height="15" fill="rgb(212,126,4)" fg:x="972" fg:w="1"/><text x="78.5739%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.3239%" y="805" width="0.0806%" height="15" fill="rgb(236,98,48)" fg:x="972" fg:w="1"/><text x="78.5739%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.3239%" y="789" width="0.0806%" height="15" fill="rgb(250,14,51)" fg:x="972" fg:w="1"/><text x="78.5739%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.3239%" y="773" width="0.0806%" height="15" fill="rgb(236,2,16)" fg:x="972" fg:w="1"/><text x="78.5739%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.3239%" y="757" width="0.0806%" height="15" fill="rgb(250,146,3)" fg:x="972" fg:w="1"/><text x="78.5739%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.3239%" y="741" width="0.0806%" height="15" fill="rgb(233,72,0)" fg:x="972" fg:w="1"/><text x="78.5739%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.3239%" y="725" width="0.0806%" height="15" fill="rgb(249,172,7)" fg:x="972" fg:w="1"/><text x="78.5739%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.3239%" y="709" width="0.0806%" height="15" fill="rgb(224,213,17)" fg:x="972" fg:w="1"/><text x="78.5739%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.3239%" y="693" width="0.0806%" height="15" fill="rgb(221,52,2)" fg:x="972" fg:w="1"/><text x="78.5739%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.3239%" y="677" width="0.0806%" height="15" fill="rgb(220,8,41)" fg:x="972" fg:w="1"/><text x="78.5739%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.3239%" y="661" width="0.0806%" height="15" fill="rgb(230,207,34)" fg:x="972" fg:w="1"/><text x="78.5739%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.3239%" y="645" width="0.0806%" height="15" fill="rgb(240,157,11)" fg:x="972" fg:w="1"/><text x="78.5739%" y="655.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (363 samples, 29.25%)</title><rect x="49.2345%" y="853" width="29.2506%" height="15" fill="rgb(243,209,15)" fg:x="611" fg:w="363"/><text x="49.4845%" y="863.50">engine::session::Session::evaluate_and_perform</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="78.3239%" y="837" width="0.1612%" height="15" fill="rgb(251,191,33)" fg:x="972" fg:w="2"/><text x="78.5739%" y="847.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.4045%" y="821" width="0.0806%" height="15" fill="rgb(217,58,8)" fg:x="973" fg:w="1"/><text x="78.6545%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.4045%" y="805" width="0.0806%" height="15" fill="rgb(210,35,1)" fg:x="973" fg:w="1"/><text x="78.6545%" y="815.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.4045%" y="789" width="0.0806%" height="15" fill="rgb(231,62,7)" fg:x="973" fg:w="1"/><text x="78.6545%" y="799.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.4045%" y="773" width="0.0806%" height="15" fill="rgb(207,73,10)" fg:x="973" fg:w="1"/><text x="78.6545%" y="783.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.4045%" y="757" width="0.0806%" height="15" fill="rgb(216,178,40)" fg:x="973" fg:w="1"/><text x="78.6545%" y="767.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.4045%" y="741" width="0.0806%" height="15" fill="rgb(238,220,1)" fg:x="973" fg:w="1"/><text x="78.6545%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.4045%" y="725" width="0.0806%" height="15" fill="rgb(246,169,39)" fg:x="973" fg:w="1"/><text x="78.6545%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.4045%" y="709" width="0.0806%" height="15" fill="rgb(240,186,45)" fg:x="973" fg:w="1"/><text x="78.6545%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.4045%" y="693" width="0.0806%" height="15" fill="rgb(225,14,29)" fg:x="973" fg:w="1"/><text x="78.6545%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.4045%" y="677" width="0.0806%" height="15" fill="rgb(243,96,26)" fg:x="973" fg:w="1"/><text x="78.6545%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.4045%" y="661" width="0.0806%" height="15" fill="rgb(234,139,10)" fg:x="973" fg:w="1"/><text x="78.6545%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.4045%" y="645" width="0.0806%" height="15" fill="rgb(235,208,23)" fg:x="973" fg:w="1"/><text x="78.6545%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.4045%" y="629" width="0.0806%" height="15" fill="rgb(230,140,47)" fg:x="973" fg:w="1"/><text x="78.6545%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.4045%" y="613" width="0.0806%" height="15" fill="rgb(241,227,54)" fg:x="973" fg:w="1"/><text x="78.6545%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="78.4045%" y="597" width="0.0806%" height="15" fill="rgb(221,210,40)" fg:x="973" fg:w="1"/><text x="78.6545%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="78.4045%" y="581" width="0.0806%" height="15" fill="rgb(207,52,1)" fg:x="973" fg:w="1"/><text x="78.6545%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="78.4045%" y="565" width="0.0806%" height="15" fill="rgb(243,147,42)" fg:x="973" fg:w="1"/><text x="78.6545%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="78.4045%" y="549" width="0.0806%" height="15" fill="rgb(245,93,7)" fg:x="973" fg:w="1"/><text x="78.6545%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.4045%" y="533" width="0.0806%" height="15" fill="rgb(243,119,13)" fg:x="973" fg:w="1"/><text x="78.6545%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.4045%" y="517" width="0.0806%" height="15" fill="rgb(228,164,28)" fg:x="973" fg:w="1"/><text x="78.6545%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.4045%" y="501" width="0.0806%" height="15" fill="rgb(234,37,39)" fg:x="973" fg:w="1"/><text x="78.6545%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="78.4045%" y="485" width="0.0806%" height="15" fill="rgb(246,155,10)" fg:x="973" fg:w="1"/><text x="78.6545%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.4045%" y="469" width="0.0806%" height="15" fill="rgb(208,140,53)" fg:x="973" fg:w="1"/><text x="78.6545%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="78.4045%" y="453" width="0.0806%" height="15" fill="rgb(234,107,29)" fg:x="973" fg:w="1"/><text x="78.6545%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="78.4045%" y="437" width="0.0806%" height="15" fill="rgb(217,45,5)" fg:x="973" fg:w="1"/><text x="78.6545%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="78.4045%" y="421" width="0.0806%" height="15" fill="rgb(251,168,5)" fg:x="973" fg:w="1"/><text x="78.6545%" y="431.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.4045%" y="405" width="0.0806%" height="15" fill="rgb(242,96,14)" fg:x="973" fg:w="1"/><text x="78.6545%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (975 samples, 78.57%)</title><rect x="0.0000%" y="901" width="78.5657%" height="15" fill="rgb(231,148,6)" fg:x="0" fg:w="975"/><text x="0.2500%" y="911.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (975 samples, 78.57%)</title><rect x="0.0000%" y="885" width="78.5657%" height="15" fill="rgb(249,100,2)" fg:x="0" fg:w="975"/><text x="0.2500%" y="895.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (975 samples, 78.57%)</title><rect x="0.0000%" y="869" width="78.5657%" height="15" fill="rgb(212,22,52)" fg:x="0" fg:w="975"/><text x="0.2500%" y="879.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="78.4851%" y="853" width="0.0806%" height="15" fill="rgb(212,97,14)" fg:x="974" fg:w="1"/><text x="78.7351%" y="863.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.4851%" y="837" width="0.0806%" height="15" fill="rgb(212,24,14)" fg:x="974" fg:w="1"/><text x="78.7351%" y="847.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.5657%" y="741" width="0.0806%" height="15" fill="rgb(239,209,43)" fg:x="975" fg:w="1"/><text x="78.8157%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.5657%" y="725" width="0.0806%" height="15" fill="rgb(226,211,38)" fg:x="975" fg:w="1"/><text x="78.8157%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.6463%" y="725" width="0.0806%" height="15" fill="rgb(216,118,11)" fg:x="976" fg:w="1"/><text x="78.8963%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.6463%" y="709" width="0.0806%" height="15" fill="rgb(223,214,43)" fg:x="976" fg:w="1"/><text x="78.8963%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.7268%" y="709" width="0.0806%" height="15" fill="rgb(213,225,15)" fg:x="977" fg:w="1"/><text x="78.9768%" y="719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="78.5657%" y="853" width="0.3223%" height="15" fill="rgb(233,115,42)" fg:x="975" fg:w="4"/><text x="78.8157%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (4 samples, 0.32%)</title><rect x="78.5657%" y="837" width="0.3223%" height="15" fill="rgb(229,93,16)" fg:x="975" fg:w="4"/><text x="78.8157%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="78.5657%" y="821" width="0.3223%" height="15" fill="rgb(220,114,48)" fg:x="975" fg:w="4"/><text x="78.8157%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (4 samples, 0.32%)</title><rect x="78.5657%" y="805" width="0.3223%" height="15" fill="rgb(253,78,24)" fg:x="975" fg:w="4"/><text x="78.8157%" y="815.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="78.5657%" y="789" width="0.3223%" height="15" fill="rgb(206,29,19)" fg:x="975" fg:w="4"/><text x="78.8157%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="78.5657%" y="773" width="0.3223%" height="15" fill="rgb(220,96,19)" fg:x="975" fg:w="4"/><text x="78.8157%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="78.5657%" y="757" width="0.3223%" height="15" fill="rgb(222,62,18)" fg:x="975" fg:w="4"/><text x="78.8157%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="78.6463%" y="741" width="0.2417%" height="15" fill="rgb(243,4,41)" fg:x="976" fg:w="3"/><text x="78.8963%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.7268%" y="725" width="0.1612%" height="15" fill="rgb(232,199,53)" fg:x="977" fg:w="2"/><text x="78.9768%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.8074%" y="709" width="0.0806%" height="15" fill="rgb(212,18,26)" fg:x="978" fg:w="1"/><text x="79.0574%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.8074%" y="693" width="0.0806%" height="15" fill="rgb(218,30,49)" fg:x="978" fg:w="1"/><text x="79.0574%" y="703.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="78.8880%" y="805" width="0.0806%" height="15" fill="rgb(250,154,52)" fg:x="979" fg:w="1"/><text x="79.1380%" y="815.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.8880%" y="789" width="0.0806%" height="15" fill="rgb(218,176,16)" fg:x="979" fg:w="1"/><text x="79.1380%" y="799.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (2 samples, 0.16%)</title><rect x="78.9686%" y="789" width="0.1612%" height="15" fill="rgb(215,61,51)" fg:x="980" fg:w="2"/><text x="79.2186%" y="799.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (1 samples, 0.08%)</title><rect x="79.0492%" y="773" width="0.0806%" height="15" fill="rgb(234,40,53)" fg:x="981" fg:w="1"/><text x="79.2992%" y="783.50"></text></g><g><title>libloading::safe::Library::new (1 samples, 0.08%)</title><rect x="79.0492%" y="757" width="0.0806%" height="15" fill="rgb(214,142,25)" fg:x="981" fg:w="1"/><text x="79.2992%" y="767.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (4 samples, 0.32%)</title><rect x="78.8880%" y="853" width="0.3223%" height="15" fill="rgb(206,61,7)" fg:x="979" fg:w="4"/><text x="79.1380%" y="863.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (4 samples, 0.32%)</title><rect x="78.8880%" y="837" width="0.3223%" height="15" fill="rgb(245,225,1)" fg:x="979" fg:w="4"/><text x="79.1380%" y="847.50"></text></g><g><title>engine::session::Session::new (4 samples, 0.32%)</title><rect x="78.8880%" y="821" width="0.3223%" height="15" fill="rgb(224,122,37)" fg:x="979" fg:w="4"/><text x="79.1380%" y="831.50"></text></g><g><title>engine::session::Session::initialize (3 samples, 0.24%)</title><rect x="78.9686%" y="805" width="0.2417%" height="15" fill="rgb(209,221,12)" fg:x="980" fg:w="3"/><text x="79.2186%" y="815.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="79.1297%" y="789" width="0.0806%" height="15" fill="rgb(248,70,2)" fg:x="982" fg:w="1"/><text x="79.3797%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.1297%" y="773" width="0.0806%" height="15" fill="rgb(227,173,19)" fg:x="982" fg:w="1"/><text x="79.3797%" y="783.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="79.1297%" y="757" width="0.0806%" height="15" fill="rgb(228,217,53)" fg:x="982" fg:w="1"/><text x="79.3797%" y="767.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="79.1297%" y="741" width="0.0806%" height="15" fill="rgb(248,43,46)" fg:x="982" fg:w="1"/><text x="79.3797%" y="751.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.1297%" y="725" width="0.0806%" height="15" fill="rgb(236,202,32)" fg:x="982" fg:w="1"/><text x="79.3797%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="79.2103%" y="821" width="0.0806%" height="15" fill="rgb(231,220,0)" fg:x="983" fg:w="1"/><text x="79.4603%" y="831.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.3715%" y="725" width="0.0806%" height="15" fill="rgb(235,11,31)" fg:x="985" fg:w="1"/><text x="79.6215%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.3715%" y="709" width="0.0806%" height="15" fill="rgb(247,159,37)" fg:x="985" fg:w="1"/><text x="79.6215%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.3715%" y="693" width="0.0806%" height="15" fill="rgb(246,179,15)" fg:x="985" fg:w="1"/><text x="79.6215%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.3715%" y="677" width="0.0806%" height="15" fill="rgb(221,193,41)" fg:x="985" fg:w="1"/><text x="79.6215%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="79.3715%" y="741" width="0.1612%" height="15" fill="rgb(228,30,1)" fg:x="985" fg:w="2"/><text x="79.6215%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.4521%" y="725" width="0.0806%" height="15" fill="rgb(233,226,32)" fg:x="986" fg:w="1"/><text x="79.7021%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.4521%" y="709" width="0.0806%" height="15" fill="rgb(238,110,42)" fg:x="986" fg:w="1"/><text x="79.7021%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.5326%" y="725" width="0.0806%" height="15" fill="rgb(233,141,16)" fg:x="987" fg:w="1"/><text x="79.7826%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.5326%" y="709" width="0.0806%" height="15" fill="rgb(212,227,9)" fg:x="987" fg:w="1"/><text x="79.7826%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.5326%" y="693" width="0.0806%" height="15" fill="rgb(247,119,37)" fg:x="987" fg:w="1"/><text x="79.7826%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.5326%" y="677" width="0.0806%" height="15" fill="rgb(219,101,42)" fg:x="987" fg:w="1"/><text x="79.7826%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.6132%" y="709" width="0.0806%" height="15" fill="rgb(252,226,3)" fg:x="988" fg:w="1"/><text x="79.8632%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.6132%" y="693" width="0.0806%" height="15" fill="rgb(229,50,28)" fg:x="988" fg:w="1"/><text x="79.8632%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.6132%" y="677" width="0.0806%" height="15" fill="rgb(249,122,7)" fg:x="988" fg:w="1"/><text x="79.8632%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.6132%" y="661" width="0.0806%" height="15" fill="rgb(207,101,46)" fg:x="988" fg:w="1"/><text x="79.8632%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.6938%" y="709" width="0.0806%" height="15" fill="rgb(249,90,48)" fg:x="989" fg:w="1"/><text x="79.9438%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.6938%" y="693" width="0.0806%" height="15" fill="rgb(231,10,48)" fg:x="989" fg:w="1"/><text x="79.9438%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.6938%" y="677" width="0.0806%" height="15" fill="rgb(234,120,19)" fg:x="989" fg:w="1"/><text x="79.9438%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.9355%" y="645" width="0.0806%" height="15" fill="rgb(212,221,36)" fg:x="992" fg:w="1"/><text x="80.1855%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="79.6132%" y="725" width="0.4835%" height="15" fill="rgb(230,151,52)" fg:x="988" fg:w="6"/><text x="79.8632%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="79.7744%" y="709" width="0.3223%" height="15" fill="rgb(246,35,38)" fg:x="990" fg:w="4"/><text x="80.0244%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="79.7744%" y="693" width="0.3223%" height="15" fill="rgb(208,110,54)" fg:x="990" fg:w="4"/><text x="80.0244%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="79.8550%" y="677" width="0.2417%" height="15" fill="rgb(250,206,40)" fg:x="991" fg:w="3"/><text x="80.1050%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.9355%" y="661" width="0.1612%" height="15" fill="rgb(225,204,22)" fg:x="992" fg:w="2"/><text x="80.1855%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.0161%" y="645" width="0.0806%" height="15" fill="rgb(220,29,11)" fg:x="993" fg:w="1"/><text x="80.2661%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.89%)</title><rect x="79.3715%" y="757" width="0.8864%" height="15" fill="rgb(254,133,9)" fg:x="985" fg:w="11"/><text x="79.6215%" y="767.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="79.5326%" y="741" width="0.7252%" height="15" fill="rgb(254,178,33)" fg:x="987" fg:w="9"/><text x="79.7826%" y="751.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.0967%" y="725" width="0.1612%" height="15" fill="rgb(239,217,37)" fg:x="994" fg:w="2"/><text x="80.3467%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.1773%" y="709" width="0.0806%" height="15" fill="rgb(210,41,5)" fg:x="995" fg:w="1"/><text x="80.4273%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.2579%" y="757" width="0.0806%" height="15" fill="rgb(227,23,47)" fg:x="996" fg:w="1"/><text x="80.5079%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.2579%" y="741" width="0.0806%" height="15" fill="rgb(215,18,46)" fg:x="996" fg:w="1"/><text x="80.5079%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.2579%" y="725" width="0.0806%" height="15" fill="rgb(247,172,0)" fg:x="996" fg:w="1"/><text x="80.5079%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.2579%" y="709" width="0.0806%" height="15" fill="rgb(254,23,27)" fg:x="996" fg:w="1"/><text x="80.5079%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.2579%" y="693" width="0.0806%" height="15" fill="rgb(223,61,6)" fg:x="996" fg:w="1"/><text x="80.5079%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.2579%" y="677" width="0.0806%" height="15" fill="rgb(237,65,24)" fg:x="996" fg:w="1"/><text x="80.5079%" y="687.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="80.3384%" y="741" width="0.0806%" height="15" fill="rgb(238,133,22)" fg:x="997" fg:w="1"/><text x="80.5884%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.3384%" y="725" width="0.0806%" height="15" fill="rgb(217,219,5)" fg:x="997" fg:w="1"/><text x="80.5884%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.4190%" y="661" width="0.0806%" height="15" fill="rgb(254,24,44)" fg:x="998" fg:w="1"/><text x="80.6690%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.4190%" y="645" width="0.0806%" height="15" fill="rgb(217,136,50)" fg:x="998" fg:w="1"/><text x="80.6690%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.4190%" y="629" width="0.0806%" height="15" fill="rgb(243,85,15)" fg:x="998" fg:w="1"/><text x="80.6690%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.4190%" y="613" width="0.0806%" height="15" fill="rgb(224,85,42)" fg:x="998" fg:w="1"/><text x="80.6690%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.4190%" y="597" width="0.0806%" height="15" fill="rgb(237,142,36)" fg:x="998" fg:w="1"/><text x="80.6690%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.4190%" y="581" width="0.0806%" height="15" fill="rgb(215,131,52)" fg:x="998" fg:w="1"/><text x="80.6690%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.5802%" y="645" width="0.0806%" height="15" fill="rgb(216,124,50)" fg:x="1000" fg:w="1"/><text x="80.8302%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="80.6608%" y="645" width="0.0806%" height="15" fill="rgb(223,61,20)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="655.50"></text></g><g><title>engine::session::Session::flush (20 samples, 1.61%)</title><rect x="79.2103%" y="837" width="1.6116%" height="15" fill="rgb(250,62,47)" fg:x="983" fg:w="20"/><text x="79.4603%" y="847.50"></text></g><g><title>engine::session::state::State::close (19 samples, 1.53%)</title><rect x="79.2909%" y="821" width="1.5310%" height="15" fill="rgb(225,180,21)" fg:x="984" fg:w="19"/><text x="79.5409%" y="831.50"></text></g><g><title>engine::session::state::State::flush_entities (19 samples, 1.53%)</title><rect x="79.2909%" y="805" width="1.5310%" height="15" fill="rgb(210,89,33)" fg:x="984" fg:w="19"/><text x="79.5409%" y="815.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (19 samples, 1.53%)</title><rect x="79.2909%" y="789" width="1.5310%" height="15" fill="rgb(205,215,50)" fg:x="984" fg:w="19"/><text x="79.5409%" y="799.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (18 samples, 1.45%)</title><rect x="79.3715%" y="773" width="1.4504%" height="15" fill="rgb(207,191,48)" fg:x="985" fg:w="18"/><text x="79.6215%" y="783.50"></text></g><g><title>kernel::model::any_entity_changes (6 samples, 0.48%)</title><rect x="80.3384%" y="757" width="0.4835%" height="15" fill="rgb(247,32,5)" fg:x="997" fg:w="6"/><text x="80.5884%" y="767.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="80.4190%" y="741" width="0.4029%" height="15" fill="rgb(210,113,39)" fg:x="998" fg:w="5"/><text x="80.6690%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="80.4190%" y="725" width="0.4029%" height="15" fill="rgb(242,181,23)" fg:x="998" fg:w="5"/><text x="80.6690%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="80.4190%" y="709" width="0.4029%" height="15" fill="rgb(215,58,22)" fg:x="998" fg:w="5"/><text x="80.6690%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="80.4190%" y="693" width="0.4029%" height="15" fill="rgb(236,31,11)" fg:x="998" fg:w="5"/><text x="80.6690%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="80.4190%" y="677" width="0.4029%" height="15" fill="rgb(244,198,15)" fg:x="998" fg:w="5"/><text x="80.6690%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="80.4996%" y="661" width="0.3223%" height="15" fill="rgb(230,142,36)" fg:x="999" fg:w="4"/><text x="80.7496%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.7413%" y="645" width="0.0806%" height="15" fill="rgb(219,48,29)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7413%" y="629" width="0.0806%" height="15" fill="rgb(237,179,43)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.7413%" y="613" width="0.0806%" height="15" fill="rgb(221,67,37)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7413%" y="597" width="0.0806%" height="15" fill="rgb(222,217,18)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.7413%" y="581" width="0.0806%" height="15" fill="rgb(235,107,38)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.7413%" y="565" width="0.0806%" height="15" fill="rgb(227,110,50)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.7413%" y="549" width="0.0806%" height="15" fill="rgb(224,176,42)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.7413%" y="533" width="0.0806%" height="15" fill="rgb(250,34,11)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="80.8219%" y="789" width="0.0806%" height="15" fill="rgb(253,107,24)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.8219%" y="773" width="0.0806%" height="15" fill="rgb(213,146,11)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="80.8219%" y="805" width="0.1612%" height="15" fill="rgb(216,88,42)" fg:x="1003" fg:w="2"/><text x="81.0719%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.9025%" y="789" width="0.0806%" height="15" fill="rgb(231,37,19)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.9025%" y="773" width="0.0806%" height="15" fill="rgb(213,154,5)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.9025%" y="757" width="0.0806%" height="15" fill="rgb(234,102,6)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.9025%" y="741" width="0.0806%" height="15" fill="rgb(206,125,39)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.9025%" y="725" width="0.0806%" height="15" fill="rgb(254,216,50)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.9025%" y="709" width="0.0806%" height="15" fill="rgb(205,65,40)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="80.9831%" y="805" width="0.0806%" height="15" fill="rgb(244,217,7)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="80.9831%" y="789" width="0.0806%" height="15" fill="rgb(220,203,19)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="799.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9831%" y="773" width="0.0806%" height="15" fill="rgb(254,124,45)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9831%" y="757" width="0.0806%" height="15" fill="rgb(236,111,39)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.9831%" y="741" width="0.0806%" height="15" fill="rgb(243,49,31)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.9831%" y="725" width="0.0806%" height="15" fill="rgb(252,80,32)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.9831%" y="709" width="0.0806%" height="15" fill="rgb(221,67,33)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.9831%" y="693" width="0.0806%" height="15" fill="rgb(225,12,36)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.9831%" y="677" width="0.0806%" height="15" fill="rgb(210,14,38)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.9831%" y="661" width="0.0806%" height="15" fill="rgb(251,82,7)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.9831%" y="645" width="0.0806%" height="15" fill="rgb(253,73,22)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.9831%" y="629" width="0.0806%" height="15" fill="rgb(237,31,38)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.9831%" y="613" width="0.0806%" height="15" fill="rgb(234,184,33)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.9831%" y="597" width="0.0806%" height="15" fill="rgb(219,43,13)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.9831%" y="581" width="0.0806%" height="15" fill="rgb(252,139,13)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="81.0637%" y="789" width="0.0806%" height="15" fill="rgb(229,79,33)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="81.0637%" y="773" width="0.0806%" height="15" fill="rgb(248,8,21)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="81.0637%" y="757" width="0.0806%" height="15" fill="rgb(225,124,31)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.0637%" y="741" width="0.0806%" height="15" fill="rgb(248,141,9)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.0637%" y="725" width="0.0806%" height="15" fill="rgb(251,223,32)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.0637%" y="709" width="0.0806%" height="15" fill="rgb(251,8,33)" fg:x="1006" fg:w="1"/><text x="81.3137%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="80.8219%" y="821" width="0.5641%" height="15" fill="rgb(205,95,13)" fg:x="1003" fg:w="7"/><text x="81.0719%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="81.0637%" y="805" width="0.3223%" height="15" fill="rgb(235,208,38)" fg:x="1006" fg:w="4"/><text x="81.3137%" y="815.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="81.1442%" y="789" width="0.2417%" height="15" fill="rgb(222,33,24)" fg:x="1007" fg:w="3"/><text x="81.3942%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="81.1442%" y="773" width="0.2417%" height="15" fill="rgb(219,97,3)" fg:x="1007" fg:w="3"/><text x="81.3942%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="81.1442%" y="757" width="0.2417%" height="15" fill="rgb(209,15,37)" fg:x="1007" fg:w="3"/><text x="81.3942%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="81.1442%" y="741" width="0.2417%" height="15" fill="rgb(206,100,16)" fg:x="1007" fg:w="3"/><text x="81.3942%" y="751.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="81.2248%" y="725" width="0.1612%" height="15" fill="rgb(208,61,41)" fg:x="1008" fg:w="2"/><text x="81.4748%" y="735.50"></text></g><g><title>plugins_core::build::Build::holding (10 samples, 0.81%)</title><rect x="80.8219%" y="837" width="0.8058%" height="15" fill="rgb(226,154,13)" fg:x="1003" fg:w="10"/><text x="81.0719%" y="847.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="81.3860%" y="821" width="0.2417%" height="15" fill="rgb(226,113,19)" fg:x="1010" fg:w="3"/><text x="81.6360%" y="831.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="81.4666%" y="805" width="0.1612%" height="15" fill="rgb(209,115,46)" fg:x="1011" fg:w="2"/><text x="81.7166%" y="815.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="81.5471%" y="789" width="0.0806%" height="15" fill="rgb(234,170,38)" fg:x="1012" fg:w="1"/><text x="81.7971%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.5471%" y="773" width="0.0806%" height="15" fill="rgb(228,23,37)" fg:x="1012" fg:w="1"/><text x="81.7971%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.6277%" y="805" width="0.0806%" height="15" fill="rgb(243,83,27)" fg:x="1013" fg:w="1"/><text x="81.8777%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.6277%" y="789" width="0.0806%" height="15" fill="rgb(251,121,22)" fg:x="1013" fg:w="1"/><text x="81.8777%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.6277%" y="773" width="0.0806%" height="15" fill="rgb(205,106,26)" fg:x="1013" fg:w="1"/><text x="81.8777%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.6277%" y="757" width="0.0806%" height="15" fill="rgb(251,23,10)" fg:x="1013" fg:w="1"/><text x="81.8777%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.6277%" y="741" width="0.0806%" height="15" fill="rgb(250,218,35)" fg:x="1013" fg:w="1"/><text x="81.8777%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.6277%" y="725" width="0.0806%" height="15" fill="rgb(211,16,34)" fg:x="1013" fg:w="1"/><text x="81.8777%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.6277%" y="709" width="0.0806%" height="15" fill="rgb(238,148,30)" fg:x="1013" fg:w="1"/><text x="81.8777%" y="719.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="81.6277%" y="837" width="0.1612%" height="15" fill="rgb(236,171,40)" fg:x="1013" fg:w="2"/><text x="81.8777%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="81.6277%" y="821" width="0.1612%" height="15" fill="rgb(237,128,15)" fg:x="1013" fg:w="2"/><text x="81.8777%" y="831.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="81.7083%" y="805" width="0.0806%" height="15" fill="rgb(222,8,10)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="81.7083%" y="789" width="0.0806%" height="15" fill="rgb(244,223,11)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.7083%" y="773" width="0.0806%" height="15" fill="rgb(230,23,54)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.7083%" y="757" width="0.0806%" height="15" fill="rgb(206,71,18)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7083%" y="741" width="0.0806%" height="15" fill="rgb(221,190,41)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.7083%" y="725" width="0.0806%" height="15" fill="rgb(242,202,19)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7083%" y="709" width="0.0806%" height="15" fill="rgb(242,213,28)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.7083%" y="693" width="0.0806%" height="15" fill="rgb(224,77,34)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="703.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="81.7889%" y="805" width="0.0806%" height="15" fill="rgb(231,13,30)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7889%" y="789" width="0.0806%" height="15" fill="rgb(231,126,46)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7889%" y="773" width="0.0806%" height="15" fill="rgb(237,50,16)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="81.7889%" y="757" width="0.0806%" height="15" fill="rgb(250,0,53)" fg:x="1015" fg:w="1"/><text x="82.0389%" y="767.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="81.7889%" y="837" width="0.1612%" height="15" fill="rgb(206,168,4)" fg:x="1015" fg:w="2"/><text x="82.0389%" y="847.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="81.7889%" y="821" width="0.1612%" height="15" fill="rgb(237,195,30)" fg:x="1015" fg:w="2"/><text x="82.0389%" y="831.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="81.8695%" y="805" width="0.0806%" height="15" fill="rgb(250,185,28)" fg:x="1016" fg:w="1"/><text x="82.1195%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.8695%" y="789" width="0.0806%" height="15" fill="rgb(236,31,48)" fg:x="1016" fg:w="1"/><text x="82.1195%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.8695%" y="773" width="0.0806%" height="15" fill="rgb(240,210,1)" fg:x="1016" fg:w="1"/><text x="82.1195%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8695%" y="757" width="0.0806%" height="15" fill="rgb(211,67,10)" fg:x="1016" fg:w="1"/><text x="82.1195%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="81.9500%" y="821" width="0.0806%" height="15" fill="rgb(224,37,37)" fg:x="1017" fg:w="1"/><text x="82.2000%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.9500%" y="805" width="0.0806%" height="15" fill="rgb(211,57,29)" fg:x="1017" fg:w="1"/><text x="82.2000%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.9500%" y="789" width="0.0806%" height="15" fill="rgb(222,128,38)" fg:x="1017" fg:w="1"/><text x="82.2000%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.9500%" y="773" width="0.0806%" height="15" fill="rgb(222,119,2)" fg:x="1017" fg:w="1"/><text x="82.2000%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.9500%" y="757" width="0.0806%" height="15" fill="rgb(207,185,13)" fg:x="1017" fg:w="1"/><text x="82.2000%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.9500%" y="741" width="0.0806%" height="15" fill="rgb(234,134,26)" fg:x="1017" fg:w="1"/><text x="82.2000%" y="751.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0306%" y="821" width="0.0806%" height="15" fill="rgb(236,28,54)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0306%" y="805" width="0.0806%" height="15" fill="rgb(218,4,16)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0306%" y="789" width="0.0806%" height="15" fill="rgb(206,115,32)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.0306%" y="773" width="0.0806%" height="15" fill="rgb(221,12,8)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.0306%" y="757" width="0.0806%" height="15" fill="rgb(239,207,6)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.0306%" y="741" width="0.0806%" height="15" fill="rgb(217,119,6)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.0306%" y="725" width="0.0806%" height="15" fill="rgb(230,27,1)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.0306%" y="709" width="0.0806%" height="15" fill="rgb(237,155,1)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.0306%" y="693" width="0.0806%" height="15" fill="rgb(248,66,50)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="703.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.1112%" y="693" width="0.0806%" height="15" fill="rgb(218,66,19)" fg:x="1019" fg:w="1"/><text x="82.3612%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.1112%" y="677" width="0.0806%" height="15" fill="rgb(229,19,7)" fg:x="1019" fg:w="1"/><text x="82.3612%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.1112%" y="661" width="0.0806%" height="15" fill="rgb(223,65,18)" fg:x="1019" fg:w="1"/><text x="82.3612%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="82.1112%" y="757" width="0.1612%" height="15" fill="rgb(216,100,6)" fg:x="1019" fg:w="2"/><text x="82.3612%" y="767.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="82.1112%" y="741" width="0.1612%" height="15" fill="rgb(215,16,2)" fg:x="1019" fg:w="2"/><text x="82.3612%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="82.1112%" y="725" width="0.1612%" height="15" fill="rgb(219,20,33)" fg:x="1019" fg:w="2"/><text x="82.3612%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.1112%" y="709" width="0.1612%" height="15" fill="rgb(215,120,26)" fg:x="1019" fg:w="2"/><text x="82.3612%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.1918%" y="693" width="0.0806%" height="15" fill="rgb(240,175,31)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1918%" y="677" width="0.0806%" height="15" fill="rgb(245,165,43)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.1918%" y="661" width="0.0806%" height="15" fill="rgb(228,92,16)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="671.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="82.1112%" y="821" width="0.2417%" height="15" fill="rgb(252,37,37)" fg:x="1019" fg:w="3"/><text x="82.3612%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="82.1112%" y="805" width="0.2417%" height="15" fill="rgb(220,96,32)" fg:x="1019" fg:w="3"/><text x="82.3612%" y="815.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.24%)</title><rect x="82.1112%" y="789" width="0.2417%" height="15" fill="rgb(206,224,2)" fg:x="1019" fg:w="3"/><text x="82.3612%" y="799.50"></text></g><g><title>plugins_core::build::Build::leads_to (3 samples, 0.24%)</title><rect x="82.1112%" y="773" width="0.2417%" height="15" fill="rgb(221,63,25)" fg:x="1019" fg:w="3"/><text x="82.3612%" y="783.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="82.2724%" y="757" width="0.0806%" height="15" fill="rgb(244,60,40)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="82.2724%" y="741" width="0.0806%" height="15" fill="rgb(209,102,13)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="82.2724%" y="725" width="0.0806%" height="15" fill="rgb(216,127,17)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="82.3529%" y="805" width="0.0806%" height="15" fill="rgb(242,182,26)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.3529%" y="789" width="0.0806%" height="15" fill="rgb(233,22,19)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.3529%" y="773" width="0.0806%" height="15" fill="rgb(238,173,31)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="82.3529%" y="757" width="0.0806%" height="15" fill="rgb(244,165,10)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.3529%" y="741" width="0.0806%" height="15" fill="rgb(251,138,36)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="751.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.4335%" y="709" width="0.0806%" height="15" fill="rgb(233,2,19)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.4335%" y="693" width="0.0806%" height="15" fill="rgb(206,178,31)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.4335%" y="677" width="0.0806%" height="15" fill="rgb(223,128,44)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.4335%" y="661" width="0.0806%" height="15" fill="rgb(238,24,5)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="82.5141%" y="693" width="0.2417%" height="15" fill="rgb(217,140,4)" fg:x="1024" fg:w="3"/><text x="82.7641%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="82.5947%" y="677" width="0.1612%" height="15" fill="rgb(250,89,54)" fg:x="1025" fg:w="2"/><text x="82.8447%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="82.5947%" y="661" width="0.1612%" height="15" fill="rgb(223,199,30)" fg:x="1025" fg:w="2"/><text x="82.8447%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.7558%" y="677" width="0.0806%" height="15" fill="rgb(220,47,34)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.8364%" y="645" width="0.0806%" height="15" fill="rgb(206,12,44)" fg:x="1028" fg:w="1"/><text x="83.0864%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.8364%" y="629" width="0.0806%" height="15" fill="rgb(226,159,9)" fg:x="1028" fg:w="1"/><text x="83.0864%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="82.7558%" y="693" width="0.2417%" height="15" fill="rgb(224,150,25)" fg:x="1027" fg:w="3"/><text x="83.0058%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.8364%" y="677" width="0.1612%" height="15" fill="rgb(248,214,17)" fg:x="1028" fg:w="2"/><text x="83.0864%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.8364%" y="661" width="0.1612%" height="15" fill="rgb(208,189,54)" fg:x="1028" fg:w="2"/><text x="83.0864%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9170%" y="645" width="0.0806%" height="15" fill="rgb(233,78,33)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9170%" y="629" width="0.0806%" height="15" fill="rgb(244,217,34)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.9170%" y="613" width="0.0806%" height="15" fill="rgb(221,41,46)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (8 samples, 0.64%)</title><rect x="82.4335%" y="725" width="0.6446%" height="15" fill="rgb(216,152,46)" fg:x="1023" fg:w="8"/><text x="82.6835%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="82.5141%" y="709" width="0.5641%" height="15" fill="rgb(235,72,49)" fg:x="1024" fg:w="7"/><text x="82.7641%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.9976%" y="693" width="0.0806%" height="15" fill="rgb(214,12,0)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.9976%" y="677" width="0.0806%" height="15" fill="rgb(254,8,3)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.9976%" y="661" width="0.0806%" height="15" fill="rgb(238,167,16)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.0782%" y="725" width="0.0806%" height="15" fill="rgb(236,220,0)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.0782%" y="709" width="0.0806%" height="15" fill="rgb(207,8,20)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.0782%" y="693" width="0.0806%" height="15" fill="rgb(236,113,14)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (2 samples, 0.16%)</title><rect x="83.1587%" y="693" width="0.1612%" height="15" fill="rgb(207,6,6)" fg:x="1032" fg:w="2"/><text x="83.4087%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.3199%" y="677" width="0.1612%" height="15" fill="rgb(225,92,41)" fg:x="1034" fg:w="2"/><text x="83.5699%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.5616%" y="629" width="0.0806%" height="15" fill="rgb(234,224,18)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.5616%" y="613" width="0.0806%" height="15" fill="rgb(248,195,4)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.5616%" y="597" width="0.0806%" height="15" fill="rgb(229,146,7)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.5616%" y="581" width="0.0806%" height="15" fill="rgb(249,192,15)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.5616%" y="565" width="0.0806%" height="15" fill="rgb(253,77,34)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="83.5616%" y="661" width="0.1612%" height="15" fill="rgb(236,228,3)" fg:x="1037" fg:w="2"/><text x="83.8116%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="83.5616%" y="645" width="0.1612%" height="15" fill="rgb(233,71,16)" fg:x="1037" fg:w="2"/><text x="83.8116%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.6422%" y="629" width="0.0806%" height="15" fill="rgb(239,41,1)" fg:x="1038" fg:w="1"/><text x="83.8922%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.6422%" y="613" width="0.0806%" height="15" fill="rgb(214,119,41)" fg:x="1038" fg:w="1"/><text x="83.8922%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.6422%" y="597" width="0.0806%" height="15" fill="rgb(213,17,39)" fg:x="1038" fg:w="1"/><text x="83.8922%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.6422%" y="581" width="0.0806%" height="15" fill="rgb(245,42,20)" fg:x="1038" fg:w="1"/><text x="83.8922%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.6422%" y="565" width="0.0806%" height="15" fill="rgb(252,18,22)" fg:x="1038" fg:w="1"/><text x="83.8922%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6422%" y="549" width="0.0806%" height="15" fill="rgb(219,125,29)" fg:x="1038" fg:w="1"/><text x="83.8922%" y="559.50"></text></g><g><title>engine::session::Session::flush (19 samples, 1.53%)</title><rect x="82.3529%" y="821" width="1.5310%" height="15" fill="rgb(215,56,47)" fg:x="1022" fg:w="19"/><text x="82.6029%" y="831.50"></text></g><g><title>engine::session::Session::save_changes (18 samples, 1.45%)</title><rect x="82.4335%" y="805" width="1.4504%" height="15" fill="rgb(212,211,43)" fg:x="1023" fg:w="18"/><text x="82.6835%" y="815.50"></text></g><g><title>engine::session::state::State::close (18 samples, 1.45%)</title><rect x="82.4335%" y="789" width="1.4504%" height="15" fill="rgb(225,24,34)" fg:x="1023" fg:w="18"/><text x="82.6835%" y="799.50"></text></g><g><title>engine::session::state::State::flush_entities (18 samples, 1.45%)</title><rect x="82.4335%" y="773" width="1.4504%" height="15" fill="rgb(229,104,27)" fg:x="1023" fg:w="18"/><text x="82.6835%" y="783.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (18 samples, 1.45%)</title><rect x="82.4335%" y="757" width="1.4504%" height="15" fill="rgb(208,56,42)" fg:x="1023" fg:w="18"/><text x="82.6835%" y="767.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (18 samples, 1.45%)</title><rect x="82.4335%" y="741" width="1.4504%" height="15" fill="rgb(210,79,18)" fg:x="1023" fg:w="18"/><text x="82.6835%" y="751.50"></text></g><g><title>kernel::model::any_entity_changes (9 samples, 0.73%)</title><rect x="83.1587%" y="725" width="0.7252%" height="15" fill="rgb(236,125,53)" fg:x="1032" fg:w="9"/><text x="83.4087%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.73%)</title><rect x="83.1587%" y="709" width="0.7252%" height="15" fill="rgb(207,101,52)" fg:x="1032" fg:w="9"/><text x="83.4087%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="83.3199%" y="693" width="0.5641%" height="15" fill="rgb(248,51,10)" fg:x="1034" fg:w="7"/><text x="83.5699%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="83.4811%" y="677" width="0.4029%" height="15" fill="rgb(222,184,26)" fg:x="1036" fg:w="5"/><text x="83.7311%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.7228%" y="661" width="0.1612%" height="15" fill="rgb(226,13,15)" fg:x="1039" fg:w="2"/><text x="83.9728%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.8034%" y="645" width="0.0806%" height="15" fill="rgb(238,108,43)" fg:x="1040" fg:w="1"/><text x="84.0534%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8034%" y="629" width="0.0806%" height="15" fill="rgb(252,6,18)" fg:x="1040" fg:w="1"/><text x="84.0534%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="83.8840%" y="821" width="0.0806%" height="15" fill="rgb(215,206,11)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="83.8840%" y="805" width="0.0806%" height="15" fill="rgb(243,20,18)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="815.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8840%" y="789" width="0.0806%" height="15" fill="rgb(213,39,51)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="83.9645%" y="789" width="0.0806%" height="15" fill="rgb(225,153,38)" fg:x="1042" fg:w="1"/><text x="84.2145%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="83.9645%" y="773" width="0.0806%" height="15" fill="rgb(235,8,28)" fg:x="1042" fg:w="1"/><text x="84.2145%" y="783.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="83.9645%" y="757" width="0.0806%" height="15" fill="rgb(215,0,21)" fg:x="1042" fg:w="1"/><text x="84.2145%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.9645%" y="741" width="0.0806%" height="15" fill="rgb(205,153,39)" fg:x="1042" fg:w="1"/><text x="84.2145%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.0451%" y="789" width="0.1612%" height="15" fill="rgb(231,172,8)" fg:x="1043" fg:w="2"/><text x="84.2951%" y="799.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.0451%" y="773" width="0.1612%" height="15" fill="rgb(251,142,40)" fg:x="1043" fg:w="2"/><text x="84.2951%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.0451%" y="757" width="0.1612%" height="15" fill="rgb(214,48,45)" fg:x="1043" fg:w="2"/><text x="84.2951%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.0451%" y="741" width="0.1612%" height="15" fill="rgb(231,29,28)" fg:x="1043" fg:w="2"/><text x="84.2951%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.0451%" y="725" width="0.1612%" height="15" fill="rgb(245,57,8)" fg:x="1043" fg:w="2"/><text x="84.2951%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.0451%" y="709" width="0.1612%" height="15" fill="rgb(236,199,39)" fg:x="1043" fg:w="2"/><text x="84.2951%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.0451%" y="693" width="0.1612%" height="15" fill="rgb(208,132,35)" fg:x="1043" fg:w="2"/><text x="84.2951%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="83.9645%" y="805" width="0.3223%" height="15" fill="rgb(225,217,34)" fg:x="1042" fg:w="4"/><text x="84.2145%" y="815.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="84.2063%" y="789" width="0.0806%" height="15" fill="rgb(252,227,26)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.2063%" y="773" width="0.0806%" height="15" fill="rgb(250,228,18)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2063%" y="757" width="0.0806%" height="15" fill="rgb(222,176,49)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.2063%" y="741" width="0.0806%" height="15" fill="rgb(212,89,5)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.2063%" y="725" width="0.0806%" height="15" fill="rgb(211,131,11)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.2063%" y="709" width="0.0806%" height="15" fill="rgb(226,185,34)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.2063%" y="693" width="0.0806%" height="15" fill="rgb(239,228,52)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.2063%" y="677" width="0.0806%" height="15" fill="rgb(213,126,26)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.2063%" y="661" width="0.0806%" height="15" fill="rgb(248,59,21)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.2063%" y="645" width="0.0806%" height="15" fill="rgb(207,10,1)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.2063%" y="629" width="0.0806%" height="15" fill="rgb(240,122,43)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.2063%" y="613" width="0.0806%" height="15" fill="rgb(250,158,39)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.2063%" y="597" width="0.0806%" height="15" fill="rgb(212,108,0)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.2063%" y="581" width="0.0806%" height="15" fill="rgb(231,150,38)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.2063%" y="565" width="0.0806%" height="15" fill="rgb(249,154,4)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2869%" y="709" width="0.0806%" height="15" fill="rgb(219,46,1)" fg:x="1046" fg:w="1"/><text x="84.5369%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2869%" y="693" width="0.0806%" height="15" fill="rgb(227,68,4)" fg:x="1046" fg:w="1"/><text x="84.5369%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2869%" y="677" width="0.0806%" height="15" fill="rgb(254,224,51)" fg:x="1046" fg:w="1"/><text x="84.5369%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.2869%" y="661" width="0.0806%" height="15" fill="rgb(220,89,20)" fg:x="1046" fg:w="1"/><text x="84.5369%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.2869%" y="757" width="0.1612%" height="15" fill="rgb(245,148,36)" fg:x="1046" fg:w="2"/><text x="84.5369%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.2869%" y="741" width="0.1612%" height="15" fill="rgb(216,50,30)" fg:x="1046" fg:w="2"/><text x="84.5369%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.2869%" y="725" width="0.1612%" height="15" fill="rgb(254,186,48)" fg:x="1046" fg:w="2"/><text x="84.5369%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3674%" y="709" width="0.0806%" height="15" fill="rgb(237,78,54)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3674%" y="693" width="0.0806%" height="15" fill="rgb(208,122,28)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3674%" y="677" width="0.0806%" height="15" fill="rgb(237,71,0)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3674%" y="661" width="0.0806%" height="15" fill="rgb(241,168,21)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.3674%" y="645" width="0.0806%" height="15" fill="rgb(252,223,14)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3674%" y="629" width="0.0806%" height="15" fill="rgb(228,172,14)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3674%" y="613" width="0.0806%" height="15" fill="rgb(236,44,24)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3674%" y="597" width="0.0806%" height="15" fill="rgb(211,153,1)" fg:x="1047" fg:w="1"/><text x="84.6174%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4480%" y="677" width="0.0806%" height="15" fill="rgb(242,70,19)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4480%" y="661" width="0.0806%" height="15" fill="rgb(237,172,13)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.4480%" y="645" width="0.0806%" height="15" fill="rgb(215,222,51)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.4480%" y="629" width="0.0806%" height="15" fill="rgb(227,136,3)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.4480%" y="613" width="0.0806%" height="15" fill="rgb(234,107,46)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4480%" y="597" width="0.0806%" height="15" fill="rgb(224,56,35)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4480%" y="581" width="0.0806%" height="15" fill="rgb(253,132,31)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.4480%" y="565" width="0.0806%" height="15" fill="rgb(249,97,5)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.4480%" y="549" width="0.0806%" height="15" fill="rgb(225,135,20)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.4480%" y="533" width="0.0806%" height="15" fill="rgb(220,48,27)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.4480%" y="517" width="0.0806%" height="15" fill="rgb(214,91,28)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4480%" y="501" width="0.0806%" height="15" fill="rgb(232,51,16)" fg:x="1048" fg:w="1"/><text x="84.6980%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="84.2869%" y="789" width="0.3223%" height="15" fill="rgb(254,38,15)" fg:x="1046" fg:w="4"/><text x="84.5369%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="84.2869%" y="773" width="0.3223%" height="15" fill="rgb(243,186,4)" fg:x="1046" fg:w="4"/><text x="84.5369%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.4480%" y="757" width="0.1612%" height="15" fill="rgb(222,210,21)" fg:x="1048" fg:w="2"/><text x="84.6980%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.4480%" y="741" width="0.1612%" height="15" fill="rgb(228,132,3)" fg:x="1048" fg:w="2"/><text x="84.6980%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.4480%" y="725" width="0.1612%" height="15" fill="rgb(253,188,15)" fg:x="1048" fg:w="2"/><text x="84.6980%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.4480%" y="709" width="0.1612%" height="15" fill="rgb(216,192,40)" fg:x="1048" fg:w="2"/><text x="84.6980%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.4480%" y="693" width="0.1612%" height="15" fill="rgb(230,126,2)" fg:x="1048" fg:w="2"/><text x="84.6980%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5286%" y="677" width="0.0806%" height="15" fill="rgb(246,23,15)" fg:x="1049" fg:w="1"/><text x="84.7786%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.6092%" y="789" width="0.0806%" height="15" fill="rgb(250,224,8)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="799.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="84.6092%" y="773" width="0.0806%" height="15" fill="rgb(247,226,46)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.6092%" y="757" width="0.0806%" height="15" fill="rgb(226,67,43)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="767.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.6092%" y="741" width="0.0806%" height="15" fill="rgb(239,37,7)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="751.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.6092%" y="725" width="0.0806%" height="15" fill="rgb(239,125,3)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.6092%" y="709" width="0.0806%" height="15" fill="rgb(235,59,37)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.6092%" y="693" width="0.0806%" height="15" fill="rgb(241,214,47)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.6898%" y="741" width="0.0806%" height="15" fill="rgb(214,114,51)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.6898%" y="725" width="0.0806%" height="15" fill="rgb(221,180,19)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.6898%" y="709" width="0.0806%" height="15" fill="rgb(223,66,32)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.6898%" y="693" width="0.0806%" height="15" fill="rgb(218,134,38)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.7703%" y="725" width="0.0806%" height="15" fill="rgb(250,83,11)" fg:x="1052" fg:w="1"/><text x="85.0203%" y="735.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="84.8509%" y="725" width="0.0806%" height="15" fill="rgb(239,137,18)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.8509%" y="709" width="0.0806%" height="15" fill="rgb(242,185,53)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="84.8509%" y="693" width="0.0806%" height="15" fill="rgb(244,165,31)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9315%" y="645" width="0.0806%" height="15" fill="rgb(223,129,30)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9315%" y="629" width="0.0806%" height="15" fill="rgb(240,148,35)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9315%" y="613" width="0.0806%" height="15" fill="rgb(231,3,24)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.9315%" y="597" width="0.0806%" height="15" fill="rgb(227,197,42)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.9315%" y="581" width="0.0806%" height="15" fill="rgb(251,41,31)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.9315%" y="565" width="0.0806%" height="15" fill="rgb(207,92,5)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9315%" y="549" width="0.0806%" height="15" fill="rgb(236,62,31)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9315%" y="533" width="0.0806%" height="15" fill="rgb(248,218,41)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.9315%" y="517" width="0.0806%" height="15" fill="rgb(250,128,19)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.9315%" y="501" width="0.0806%" height="15" fill="rgb(239,216,33)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.9315%" y="485" width="0.0806%" height="15" fill="rgb(216,44,26)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.9315%" y="469" width="0.0806%" height="15" fill="rgb(207,69,29)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="84.9315%" y="453" width="0.0806%" height="15" fill="rgb(246,182,38)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="84.9315%" y="437" width="0.0806%" height="15" fill="rgb(252,219,28)" fg:x="1054" fg:w="1"/><text x="85.1815%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.9315%" y="693" width="0.1612%" height="15" fill="rgb(209,164,16)" fg:x="1054" fg:w="2"/><text x="85.1815%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.9315%" y="677" width="0.1612%" height="15" fill="rgb(208,49,15)" fg:x="1054" fg:w="2"/><text x="85.1815%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.9315%" y="661" width="0.1612%" height="15" fill="rgb(235,42,45)" fg:x="1054" fg:w="2"/><text x="85.1815%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0121%" y="645" width="0.0806%" height="15" fill="rgb(246,198,8)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0121%" y="629" width="0.0806%" height="15" fill="rgb(237,205,33)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.0121%" y="613" width="0.0806%" height="15" fill="rgb(249,116,21)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.0121%" y="597" width="0.0806%" height="15" fill="rgb(230,35,49)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.0121%" y="581" width="0.0806%" height="15" fill="rgb(207,8,52)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.0121%" y="565" width="0.0806%" height="15" fill="rgb(218,173,0)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.0121%" y="549" width="0.0806%" height="15" fill="rgb(248,106,34)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.0121%" y="533" width="0.0806%" height="15" fill="rgb(232,50,11)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.0121%" y="517" width="0.0806%" height="15" fill="rgb(213,142,18)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.0121%" y="501" width="0.0806%" height="15" fill="rgb(246,117,38)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.0121%" y="485" width="0.0806%" height="15" fill="rgb(218,133,54)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0121%" y="469" width="0.0806%" height="15" fill="rgb(216,154,35)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="84.6898%" y="773" width="0.5641%" height="15" fill="rgb(219,175,36)" fg:x="1051" fg:w="7"/><text x="84.9398%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="84.6898%" y="757" width="0.5641%" height="15" fill="rgb(224,0,16)" fg:x="1051" fg:w="7"/><text x="84.9398%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="84.7703%" y="741" width="0.4835%" height="15" fill="rgb(221,186,40)" fg:x="1052" fg:w="6"/><text x="85.0203%" y="751.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="84.9315%" y="725" width="0.3223%" height="15" fill="rgb(254,0,31)" fg:x="1054" fg:w="4"/><text x="85.1815%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="84.9315%" y="709" width="0.3223%" height="15" fill="rgb(206,138,52)" fg:x="1054" fg:w="4"/><text x="85.1815%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.0927%" y="693" width="0.1612%" height="15" fill="rgb(229,99,30)" fg:x="1056" fg:w="2"/><text x="85.3427%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1732%" y="677" width="0.0806%" height="15" fill="rgb(205,131,29)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1732%" y="661" width="0.0806%" height="15" fill="rgb(232,114,46)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1732%" y="645" width="0.0806%" height="15" fill="rgb(206,181,31)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.1732%" y="629" width="0.0806%" height="15" fill="rgb(251,142,12)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1732%" y="613" width="0.0806%" height="15" fill="rgb(252,128,47)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.1732%" y="597" width="0.0806%" height="15" fill="rgb(208,51,33)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.1732%" y="581" width="0.0806%" height="15" fill="rgb(240,36,11)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.1732%" y="565" width="0.0806%" height="15" fill="rgb(245,160,28)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.64%)</title><rect x="84.6898%" y="789" width="0.6446%" height="15" fill="rgb(230,37,49)" fg:x="1051" fg:w="8"/><text x="84.9398%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="85.2538%" y="773" width="0.0806%" height="15" fill="rgb(227,40,34)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.2538%" y="757" width="0.0806%" height="15" fill="rgb(253,212,23)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3344%" y="757" width="0.0806%" height="15" fill="rgb(230,155,36)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.3344%" y="741" width="0.0806%" height="15" fill="rgb(221,176,6)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="85.3344%" y="725" width="0.0806%" height="15" fill="rgb(207,203,40)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="735.50"></text></g><g><title>plugins_core::build::Build::holding (19 samples, 1.53%)</title><rect x="83.9645%" y="821" width="1.5310%" height="15" fill="rgb(215,88,16)" fg:x="1042" fg:w="19"/><text x="84.2145%" y="831.50"></text></g><g><title>plugins_core::tools::set_container (15 samples, 1.21%)</title><rect x="84.2869%" y="805" width="1.2087%" height="15" fill="rgb(233,52,54)" fg:x="1046" fg:w="15"/><text x="84.5369%" y="815.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="85.3344%" y="789" width="0.1612%" height="15" fill="rgb(205,47,52)" fg:x="1059" fg:w="2"/><text x="85.5844%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="85.3344%" y="773" width="0.1612%" height="15" fill="rgb(218,56,43)" fg:x="1059" fg:w="2"/><text x="85.5844%" y="783.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="85.4150%" y="757" width="0.0806%" height="15" fill="rgb(251,225,48)" fg:x="1060" fg:w="1"/><text x="85.6650%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.4150%" y="741" width="0.0806%" height="15" fill="rgb(244,56,1)" fg:x="1060" fg:w="1"/><text x="85.6650%" y="751.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="85.4150%" y="725" width="0.0806%" height="15" fill="rgb(215,46,3)" fg:x="1060" fg:w="1"/><text x="85.6650%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.4150%" y="709" width="0.0806%" height="15" fill="rgb(252,25,51)" fg:x="1060" fg:w="1"/><text x="85.6650%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.4150%" y="693" width="0.0806%" height="15" fill="rgb(243,86,25)" fg:x="1060" fg:w="1"/><text x="85.6650%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.4150%" y="677" width="0.0806%" height="15" fill="rgb(223,57,49)" fg:x="1060" fg:w="1"/><text x="85.6650%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4956%" y="741" width="0.0806%" height="15" fill="rgb(226,26,11)" fg:x="1061" fg:w="1"/><text x="85.7456%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4956%" y="725" width="0.0806%" height="15" fill="rgb(233,166,51)" fg:x="1061" fg:w="1"/><text x="85.7456%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4956%" y="709" width="0.0806%" height="15" fill="rgb(232,145,44)" fg:x="1061" fg:w="1"/><text x="85.7456%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4956%" y="693" width="0.0806%" height="15" fill="rgb(246,98,4)" fg:x="1061" fg:w="1"/><text x="85.7456%" y="703.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="85.4956%" y="821" width="0.1612%" height="15" fill="rgb(223,187,1)" fg:x="1061" fg:w="2"/><text x="85.7456%" y="831.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="85.4956%" y="805" width="0.1612%" height="15" fill="rgb(245,183,34)" fg:x="1061" fg:w="2"/><text x="85.7456%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.4956%" y="789" width="0.1612%" height="15" fill="rgb(223,6,23)" fg:x="1061" fg:w="2"/><text x="85.7456%" y="799.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.4956%" y="773" width="0.1612%" height="15" fill="rgb(226,63,21)" fg:x="1061" fg:w="2"/><text x="85.7456%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.4956%" y="757" width="0.1612%" height="15" fill="rgb(244,58,43)" fg:x="1061" fg:w="2"/><text x="85.7456%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.5761%" y="741" width="0.0806%" height="15" fill="rgb(221,65,27)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5761%" y="725" width="0.0806%" height="15" fill="rgb(231,17,48)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.5761%" y="709" width="0.0806%" height="15" fill="rgb(229,198,23)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5761%" y="693" width="0.0806%" height="15" fill="rgb(220,192,38)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.5761%" y="677" width="0.0806%" height="15" fill="rgb(224,157,12)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5761%" y="661" width="0.0806%" height="15" fill="rgb(210,74,7)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="85.6567%" y="805" width="0.0806%" height="15" fill="rgb(233,184,31)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="85.6567%" y="789" width="0.0806%" height="15" fill="rgb(246,44,22)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="85.6567%" y="773" width="0.0806%" height="15" fill="rgb(236,102,41)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.6567%" y="757" width="0.0806%" height="15" fill="rgb(245,17,40)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.6567%" y="741" width="0.0806%" height="15" fill="rgb(227,165,9)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.6567%" y="725" width="0.0806%" height="15" fill="rgb(220,123,37)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.6567%" y="709" width="0.0806%" height="15" fill="rgb(239,124,16)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="85.6567%" y="693" width="0.0806%" height="15" fill="rgb(214,215,39)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="85.6567%" y="677" width="0.0806%" height="15" fill="rgb(224,72,47)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.6567%" y="661" width="0.0806%" height="15" fill="rgb(252,112,7)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.6567%" y="645" width="0.0806%" height="15" fill="rgb(228,116,35)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="85.6567%" y="629" width="0.0806%" height="15" fill="rgb(246,125,25)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="85.6567%" y="613" width="0.0806%" height="15" fill="rgb(230,220,33)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.6567%" y="597" width="0.0806%" height="15" fill="rgb(220,48,47)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.6567%" y="581" width="0.0806%" height="15" fill="rgb(240,130,32)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.6567%" y="565" width="0.0806%" height="15" fill="rgb(252,97,40)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.6567%" y="549" width="0.0806%" height="15" fill="rgb(211,117,15)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="85.6567%" y="533" width="0.0806%" height="15" fill="rgb(223,47,44)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="85.6567%" y="517" width="0.0806%" height="15" fill="rgb(239,53,20)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="85.6567%" y="501" width="0.0806%" height="15" fill="rgb(242,71,22)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="85.6567%" y="485" width="0.0806%" height="15" fill="rgb(244,146,41)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="85.6567%" y="469" width="0.0806%" height="15" fill="rgb(206,133,42)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="85.6567%" y="453" width="0.0806%" height="15" fill="rgb(220,206,16)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="85.7373%" y="789" width="0.0806%" height="15" fill="rgb(234,5,52)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.7373%" y="773" width="0.0806%" height="15" fill="rgb(206,81,46)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.7373%" y="757" width="0.0806%" height="15" fill="rgb(245,111,47)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.7373%" y="741" width="0.0806%" height="15" fill="rgb(227,198,45)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.7373%" y="725" width="0.0806%" height="15" fill="rgb(223,141,47)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7373%" y="709" width="0.0806%" height="15" fill="rgb(234,124,3)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7373%" y="693" width="0.0806%" height="15" fill="rgb(218,189,15)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7373%" y="677" width="0.0806%" height="15" fill="rgb(253,91,25)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7373%" y="661" width="0.0806%" height="15" fill="rgb(243,103,39)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.7373%" y="645" width="0.0806%" height="15" fill="rgb(252,94,6)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7373%" y="629" width="0.0806%" height="15" fill="rgb(236,153,18)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7373%" y="613" width="0.0806%" height="15" fill="rgb(218,227,22)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7373%" y="597" width="0.0806%" height="15" fill="rgb(209,53,33)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7373%" y="581" width="0.0806%" height="15" fill="rgb(252,183,3)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7373%" y="565" width="0.0806%" height="15" fill="rgb(249,138,54)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="85.7373%" y="549" width="0.0806%" height="15" fill="rgb(226,39,3)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="85.7373%" y="533" width="0.0806%" height="15" fill="rgb(237,129,38)" fg:x="1064" fg:w="1"/><text x="85.9873%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.8179%" y="789" width="0.0806%" height="15" fill="rgb(218,214,54)" fg:x="1065" fg:w="1"/><text x="86.0679%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.8179%" y="773" width="0.0806%" height="15" fill="rgb(228,112,8)" fg:x="1065" fg:w="1"/><text x="86.0679%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.8179%" y="757" width="0.0806%" height="15" fill="rgb(219,128,11)" fg:x="1065" fg:w="1"/><text x="86.0679%" y="767.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.8985%" y="661" width="0.0806%" height="15" fill="rgb(240,39,37)" fg:x="1066" fg:w="1"/><text x="86.1485%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="85.8985%" y="741" width="0.1612%" height="15" fill="rgb(215,199,42)" fg:x="1066" fg:w="2"/><text x="86.1485%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.8985%" y="725" width="0.1612%" height="15" fill="rgb(248,51,13)" fg:x="1066" fg:w="2"/><text x="86.1485%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.8985%" y="709" width="0.1612%" height="15" fill="rgb(225,196,0)" fg:x="1066" fg:w="2"/><text x="86.1485%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.8985%" y="693" width="0.1612%" height="15" fill="rgb(221,31,53)" fg:x="1066" fg:w="2"/><text x="86.1485%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="85.8985%" y="677" width="0.1612%" height="15" fill="rgb(211,79,37)" fg:x="1066" fg:w="2"/><text x="86.1485%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.9790%" y="661" width="0.0806%" height="15" fill="rgb(227,118,20)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.9790%" y="645" width="0.0806%" height="15" fill="rgb(225,142,40)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.9790%" y="629" width="0.0806%" height="15" fill="rgb(208,183,34)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.9790%" y="613" width="0.0806%" height="15" fill="rgb(209,112,52)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.9790%" y="597" width="0.0806%" height="15" fill="rgb(236,9,32)" fg:x="1067" fg:w="1"/><text x="86.2290%" y="607.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (52 samples, 4.19%)</title><rect x="81.9500%" y="837" width="4.1902%" height="15" fill="rgb(208,222,9)" fg:x="1017" fg:w="52"/><text x="82.2000%" y="847.50">plugi..</text></g><g><title>plugins_core::build::Build::occupying (6 samples, 0.48%)</title><rect x="85.6567%" y="821" width="0.4835%" height="15" fill="rgb(214,142,24)" fg:x="1063" fg:w="6"/><text x="85.9067%" y="831.50"></text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.40%)</title><rect x="85.7373%" y="805" width="0.4029%" height="15" fill="rgb(244,48,51)" fg:x="1064" fg:w="5"/><text x="85.9873%" y="815.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (3 samples, 0.24%)</title><rect x="85.8985%" y="789" width="0.2417%" height="15" fill="rgb(253,171,44)" fg:x="1066" fg:w="3"/><text x="86.1485%" y="799.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="85.8985%" y="773" width="0.2417%" height="15" fill="rgb(221,85,21)" fg:x="1066" fg:w="3"/><text x="86.1485%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="85.8985%" y="757" width="0.2417%" height="15" fill="rgb(245,40,38)" fg:x="1066" fg:w="3"/><text x="86.1485%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.0596%" y="741" width="0.0806%" height="15" fill="rgb(220,135,37)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.0596%" y="725" width="0.0806%" height="15" fill="rgb(249,62,46)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.0596%" y="709" width="0.0806%" height="15" fill="rgb(232,81,15)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0596%" y="693" width="0.0806%" height="15" fill="rgb(244,179,28)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="703.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="86.1402%" y="789" width="0.0806%" height="15" fill="rgb(220,4,32)" fg:x="1069" fg:w="1"/><text x="86.3902%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.1402%" y="773" width="0.0806%" height="15" fill="rgb(214,116,42)" fg:x="1069" fg:w="1"/><text x="86.3902%" y="783.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1402%" y="757" width="0.0806%" height="15" fill="rgb(226,94,31)" fg:x="1069" fg:w="1"/><text x="86.3902%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.1402%" y="741" width="0.0806%" height="15" fill="rgb(241,172,26)" fg:x="1069" fg:w="1"/><text x="86.3902%" y="751.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1402%" y="725" width="0.0806%" height="15" fill="rgb(206,38,39)" fg:x="1069" fg:w="1"/><text x="86.3902%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.1402%" y="709" width="0.0806%" height="15" fill="rgb(210,139,19)" fg:x="1069" fg:w="1"/><text x="86.3902%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.1402%" y="693" width="0.0806%" height="15" fill="rgb(220,10,22)" fg:x="1069" fg:w="1"/><text x="86.3902%" y="703.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (2 samples, 0.16%)</title><rect x="86.1402%" y="837" width="0.1612%" height="15" fill="rgb(225,218,36)" fg:x="1069" fg:w="2"/><text x="86.3902%" y="847.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="86.1402%" y="821" width="0.1612%" height="15" fill="rgb(244,50,47)" fg:x="1069" fg:w="2"/><text x="86.3902%" y="831.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="86.1402%" y="805" width="0.1612%" height="15" fill="rgb(247,80,2)" fg:x="1069" fg:w="2"/><text x="86.3902%" y="815.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="86.2208%" y="789" width="0.0806%" height="15" fill="rgb(234,70,38)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="799.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="86.2208%" y="773" width="0.0806%" height="15" fill="rgb(238,170,25)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="86.2208%" y="757" width="0.0806%" height="15" fill="rgb(252,23,6)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.2208%" y="741" width="0.0806%" height="15" fill="rgb(209,98,49)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.2208%" y="725" width="0.0806%" height="15" fill="rgb(213,29,25)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.2208%" y="709" width="0.0806%" height="15" fill="rgb(235,71,32)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2208%" y="693" width="0.0806%" height="15" fill="rgb(227,75,49)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.2208%" y="677" width="0.0806%" height="15" fill="rgb(220,19,24)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2208%" y="661" width="0.0806%" height="15" fill="rgb(249,67,15)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.2208%" y="645" width="0.0806%" height="15" fill="rgb(233,197,44)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2208%" y="629" width="0.0806%" height="15" fill="rgb(245,206,23)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.2208%" y="613" width="0.0806%" height="15" fill="rgb(205,164,14)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2208%" y="597" width="0.0806%" height="15" fill="rgb(209,57,33)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.2208%" y="581" width="0.0806%" height="15" fill="rgb(237,209,41)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2208%" y="565" width="0.0806%" height="15" fill="rgb(252,93,6)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="86.2208%" y="549" width="0.0806%" height="15" fill="rgb(218,214,32)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="86.2208%" y="533" width="0.0806%" height="15" fill="rgb(243,144,9)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="86.3820%" y="821" width="0.0806%" height="15" fill="rgb(254,62,38)" fg:x="1072" fg:w="1"/><text x="86.6320%" y="831.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.4625%" y="757" width="0.0806%" height="15" fill="rgb(247,146,11)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.4625%" y="741" width="0.0806%" height="15" fill="rgb(213,96,14)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="751.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (92 samples, 7.41%)</title><rect x="79.2103%" y="853" width="7.4134%" height="15" fill="rgb(246,102,11)" fg:x="983" fg:w="92"/><text x="79.4603%" y="863.50">&lt;tests::Ho..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (4 samples, 0.32%)</title><rect x="86.3014%" y="837" width="0.3223%" height="15" fill="rgb(241,182,16)" fg:x="1071" fg:w="4"/><text x="86.5514%" y="847.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="86.4625%" y="821" width="0.1612%" height="15" fill="rgb(225,28,43)" fg:x="1073" fg:w="2"/><text x="86.7125%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="86.4625%" y="805" width="0.1612%" height="15" fill="rgb(247,87,15)" fg:x="1073" fg:w="2"/><text x="86.7125%" y="815.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="86.4625%" y="789" width="0.1612%" height="15" fill="rgb(225,211,30)" fg:x="1073" fg:w="2"/><text x="86.7125%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="86.4625%" y="773" width="0.1612%" height="15" fill="rgb(223,111,44)" fg:x="1073" fg:w="2"/><text x="86.7125%" y="783.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="86.5431%" y="757" width="0.0806%" height="15" fill="rgb(225,60,10)" fg:x="1074" fg:w="1"/><text x="86.7931%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.5431%" y="741" width="0.0806%" height="15" fill="rgb(245,196,31)" fg:x="1074" fg:w="1"/><text x="86.7931%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="86.5431%" y="725" width="0.0806%" height="15" fill="rgb(238,71,27)" fg:x="1074" fg:w="1"/><text x="86.7931%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.5431%" y="709" width="0.0806%" height="15" fill="rgb(212,77,40)" fg:x="1074" fg:w="1"/><text x="86.7931%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.5431%" y="693" width="0.0806%" height="15" fill="rgb(242,14,34)" fg:x="1074" fg:w="1"/><text x="86.7931%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="86.5431%" y="677" width="0.0806%" height="15" fill="rgb(227,221,15)" fg:x="1074" fg:w="1"/><text x="86.7931%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.5431%" y="661" width="0.0806%" height="15" fill="rgb(230,80,41)" fg:x="1074" fg:w="1"/><text x="86.7931%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="86.6237%" y="853" width="0.0806%" height="15" fill="rgb(221,65,43)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="86.6237%" y="837" width="0.0806%" height="15" fill="rgb(250,139,15)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="86.6237%" y="821" width="0.0806%" height="15" fill="rgb(236,101,33)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.6237%" y="805" width="0.0806%" height="15" fill="rgb(240,185,7)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.7043%" y="821" width="0.0806%" height="15" fill="rgb(230,219,29)" fg:x="1076" fg:w="1"/><text x="86.9543%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.7043%" y="805" width="0.0806%" height="15" fill="rgb(250,208,42)" fg:x="1076" fg:w="1"/><text x="86.9543%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.7043%" y="789" width="0.0806%" height="15" fill="rgb(231,6,17)" fg:x="1076" fg:w="1"/><text x="86.9543%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.7043%" y="773" width="0.0806%" height="15" fill="rgb(250,180,47)" fg:x="1076" fg:w="1"/><text x="86.9543%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.7043%" y="757" width="0.0806%" height="15" fill="rgb(218,156,38)" fg:x="1076" fg:w="1"/><text x="86.9543%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="86.7043%" y="741" width="0.0806%" height="15" fill="rgb(207,13,46)" fg:x="1076" fg:w="1"/><text x="86.9543%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="86.7043%" y="725" width="0.0806%" height="15" fill="rgb(221,30,24)" fg:x="1076" fg:w="1"/><text x="86.9543%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="86.7043%" y="837" width="0.1612%" height="15" fill="rgb(239,110,29)" fg:x="1076" fg:w="2"/><text x="86.9543%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.7849%" y="821" width="0.0806%" height="15" fill="rgb(223,212,28)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="831.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.7849%" y="805" width="0.0806%" height="15" fill="rgb(206,148,43)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="815.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="86.8654%" y="837" width="0.0806%" height="15" fill="rgb(227,139,9)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="847.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="86.8654%" y="821" width="0.0806%" height="15" fill="rgb(244,64,31)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="86.8654%" y="805" width="0.0806%" height="15" fill="rgb(219,45,45)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="815.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="86.8654%" y="789" width="0.0806%" height="15" fill="rgb(205,112,40)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="86.8654%" y="773" width="0.0806%" height="15" fill="rgb(207,18,46)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="86.8654%" y="757" width="0.0806%" height="15" fill="rgb(219,65,15)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.8654%" y="741" width="0.0806%" height="15" fill="rgb(248,191,24)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="751.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (1 samples, 0.08%)</title><rect x="86.9460%" y="821" width="0.0806%" height="15" fill="rgb(251,155,16)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="831.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="86.9460%" y="805" width="0.0806%" height="15" fill="rgb(249,62,38)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="86.9460%" y="789" width="0.0806%" height="15" fill="rgb(252,214,17)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="799.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="86.9460%" y="773" width="0.0806%" height="15" fill="rgb(246,215,53)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="783.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9460%" y="757" width="0.0806%" height="15" fill="rgb(232,148,8)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9460%" y="741" width="0.0806%" height="15" fill="rgb(221,119,15)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9460%" y="725" width="0.0806%" height="15" fill="rgb(239,69,36)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.9460%" y="709" width="0.0806%" height="15" fill="rgb(247,164,1)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.9460%" y="693" width="0.0806%" height="15" fill="rgb(216,221,53)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.9460%" y="677" width="0.0806%" height="15" fill="rgb(249,57,29)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="86.9460%" y="661" width="0.0806%" height="15" fill="rgb(227,23,6)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="86.9460%" y="645" width="0.0806%" height="15" fill="rgb(213,211,30)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Raised&gt; (1 samples, 0.08%)</title><rect x="87.0266%" y="821" width="0.0806%" height="15" fill="rgb(254,202,30)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::fashion::model::FashionEvent&gt; (1 samples, 0.08%)</title><rect x="87.0266%" y="805" width="0.0806%" height="15" fill="rgb(248,213,0)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="87.0266%" y="789" width="0.0806%" height="15" fill="rgb(248,55,48)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.0266%" y="773" width="0.0806%" height="15" fill="rgb(217,221,51)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.1072%" y="757" width="0.0806%" height="15" fill="rgb(233,8,16)" fg:x="1081" fg:w="1"/><text x="87.3572%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.1072%" y="741" width="0.0806%" height="15" fill="rgb(220,23,39)" fg:x="1081" fg:w="1"/><text x="87.3572%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.1072%" y="725" width="0.0806%" height="15" fill="rgb(236,20,54)" fg:x="1081" fg:w="1"/><text x="87.3572%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.1072%" y="709" width="0.0806%" height="15" fill="rgb(213,22,0)" fg:x="1081" fg:w="1"/><text x="87.3572%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.1072%" y="693" width="0.0806%" height="15" fill="rgb(226,144,21)" fg:x="1081" fg:w="1"/><text x="87.3572%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="87.1072%" y="677" width="0.0806%" height="15" fill="rgb(240,32,26)" fg:x="1081" fg:w="1"/><text x="87.3572%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="87.1072%" y="661" width="0.0806%" height="15" fill="rgb(252,225,52)" fg:x="1081" fg:w="1"/><text x="87.3572%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="87.1072%" y="805" width="0.1612%" height="15" fill="rgb(227,113,38)" fg:x="1081" fg:w="2"/><text x="87.3572%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="87.1072%" y="789" width="0.1612%" height="15" fill="rgb(246,146,48)" fg:x="1081" fg:w="2"/><text x="87.3572%" y="799.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="87.1072%" y="773" width="0.1612%" height="15" fill="rgb(229,83,50)" fg:x="1081" fg:w="2"/><text x="87.3572%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="87.1878%" y="757" width="0.0806%" height="15" fill="rgb(248,146,37)" fg:x="1082" fg:w="1"/><text x="87.4378%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.1878%" y="741" width="0.0806%" height="15" fill="rgb(230,102,37)" fg:x="1082" fg:w="1"/><text x="87.4378%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.1878%" y="725" width="0.0806%" height="15" fill="rgb(226,129,21)" fg:x="1082" fg:w="1"/><text x="87.4378%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="87.2683%" y="789" width="0.0806%" height="15" fill="rgb(241,215,13)" fg:x="1083" fg:w="1"/><text x="87.5183%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.2683%" y="773" width="0.0806%" height="15" fill="rgb(217,128,6)" fg:x="1083" fg:w="1"/><text x="87.5183%" y="783.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.2683%" y="757" width="0.0806%" height="15" fill="rgb(248,48,54)" fg:x="1083" fg:w="1"/><text x="87.5183%" y="767.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="87.3489%" y="757" width="0.1612%" height="15" fill="rgb(219,83,38)" fg:x="1084" fg:w="2"/><text x="87.5989%" y="767.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.4295%" y="741" width="0.0806%" height="15" fill="rgb(252,210,52)" fg:x="1085" fg:w="1"/><text x="87.6795%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.4295%" y="725" width="0.0806%" height="15" fill="rgb(221,200,4)" fg:x="1085" fg:w="1"/><text x="87.6795%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.4295%" y="709" width="0.0806%" height="15" fill="rgb(216,58,11)" fg:x="1085" fg:w="1"/><text x="87.6795%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.5101%" y="741" width="0.0806%" height="15" fill="rgb(213,152,6)" fg:x="1086" fg:w="1"/><text x="87.7601%" y="751.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="87.5907%" y="741" width="0.1612%" height="15" fill="rgb(209,210,52)" fg:x="1087" fg:w="2"/><text x="87.8407%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.6712%" y="725" width="0.0806%" height="15" fill="rgb(216,26,42)" fg:x="1088" fg:w="1"/><text x="87.9212%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.6712%" y="709" width="0.0806%" height="15" fill="rgb(229,8,52)" fg:x="1088" fg:w="1"/><text x="87.9212%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="87.8324%" y="725" width="0.2417%" height="15" fill="rgb(234,11,12)" fg:x="1090" fg:w="3"/><text x="88.0824%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="87.8324%" y="709" width="0.2417%" height="15" fill="rgb(222,132,34)" fg:x="1090" fg:w="3"/><text x="88.0824%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="87.9130%" y="693" width="0.1612%" height="15" fill="rgb(246,51,18)" fg:x="1091" fg:w="2"/><text x="88.1630%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.9130%" y="677" width="0.1612%" height="15" fill="rgb(234,40,7)" fg:x="1091" fg:w="2"/><text x="88.1630%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="87.9130%" y="661" width="0.1612%" height="15" fill="rgb(240,11,8)" fg:x="1091" fg:w="2"/><text x="88.1630%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="87.9130%" y="645" width="0.1612%" height="15" fill="rgb(218,222,21)" fg:x="1091" fg:w="2"/><text x="88.1630%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.9936%" y="629" width="0.0806%" height="15" fill="rgb(238,59,21)" fg:x="1092" fg:w="1"/><text x="88.2436%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.9936%" y="613" width="0.0806%" height="15" fill="rgb(252,128,29)" fg:x="1092" fg:w="1"/><text x="88.2436%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.9936%" y="597" width="0.0806%" height="15" fill="rgb(245,61,34)" fg:x="1092" fg:w="1"/><text x="88.2436%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.0741%" y="725" width="0.0806%" height="15" fill="rgb(246,36,52)" fg:x="1093" fg:w="1"/><text x="88.3241%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.1547%" y="709" width="0.0806%" height="15" fill="rgb(243,48,49)" fg:x="1094" fg:w="1"/><text x="88.4047%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.1547%" y="693" width="0.0806%" height="15" fill="rgb(252,114,15)" fg:x="1094" fg:w="1"/><text x="88.4047%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.1547%" y="677" width="0.0806%" height="15" fill="rgb(243,228,39)" fg:x="1094" fg:w="1"/><text x="88.4047%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.1547%" y="661" width="0.0806%" height="15" fill="rgb(205,143,2)" fg:x="1094" fg:w="1"/><text x="88.4047%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="88.2353%" y="693" width="0.1612%" height="15" fill="rgb(224,122,19)" fg:x="1095" fg:w="2"/><text x="88.4853%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="88.2353%" y="677" width="0.1612%" height="15" fill="rgb(250,66,51)" fg:x="1095" fg:w="2"/><text x="88.4853%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.3159%" y="661" width="0.0806%" height="15" fill="rgb(224,134,48)" fg:x="1096" fg:w="1"/><text x="88.5659%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="88.3965%" y="677" width="0.0806%" height="15" fill="rgb(219,137,43)" fg:x="1097" fg:w="1"/><text x="88.6465%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.3965%" y="661" width="0.0806%" height="15" fill="rgb(207,44,47)" fg:x="1097" fg:w="1"/><text x="88.6465%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="87.7518%" y="741" width="0.8058%" height="15" fill="rgb(245,216,11)" fg:x="1089" fg:w="10"/><text x="88.0018%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="88.1547%" y="725" width="0.4029%" height="15" fill="rgb(236,168,30)" fg:x="1094" fg:w="5"/><text x="88.4047%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="88.2353%" y="709" width="0.3223%" height="15" fill="rgb(249,110,10)" fg:x="1095" fg:w="4"/><text x="88.4853%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="88.3965%" y="693" width="0.1612%" height="15" fill="rgb(226,10,48)" fg:x="1097" fg:w="2"/><text x="88.6465%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.4770%" y="677" width="0.0806%" height="15" fill="rgb(243,14,47)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.4770%" y="661" width="0.0806%" height="15" fill="rgb(208,184,14)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.4770%" y="645" width="0.0806%" height="15" fill="rgb(236,198,54)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.4770%" y="629" width="0.0806%" height="15" fill="rgb(241,186,5)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.4770%" y="613" width="0.0806%" height="15" fill="rgb(237,191,37)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.4770%" y="597" width="0.0806%" height="15" fill="rgb(216,223,24)" fg:x="1098" fg:w="1"/><text x="88.7270%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (17 samples, 1.37%)</title><rect x="87.3489%" y="773" width="1.3699%" height="15" fill="rgb(210,29,29)" fg:x="1084" fg:w="17"/><text x="87.5989%" y="783.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.21%)</title><rect x="87.5101%" y="757" width="1.2087%" height="15" fill="rgb(243,36,45)" fg:x="1086" fg:w="15"/><text x="87.7601%" y="767.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="88.5576%" y="741" width="0.1612%" height="15" fill="rgb(217,109,6)" fg:x="1099" fg:w="2"/><text x="88.8076%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="88.5576%" y="725" width="0.1612%" height="15" fill="rgb(240,106,11)" fg:x="1099" fg:w="2"/><text x="88.8076%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.6382%" y="709" width="0.0806%" height="15" fill="rgb(230,187,12)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.6382%" y="693" width="0.0806%" height="15" fill="rgb(242,88,45)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.6382%" y="677" width="0.0806%" height="15" fill="rgb(240,181,21)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="687.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.6382%" y="661" width="0.0806%" height="15" fill="rgb(252,126,44)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.7188%" y="725" width="0.0806%" height="15" fill="rgb(230,157,48)" fg:x="1101" fg:w="1"/><text x="88.9688%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="88.7994%" y="693" width="0.0806%" height="15" fill="rgb(224,15,2)" fg:x="1102" fg:w="1"/><text x="89.0494%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.7994%" y="677" width="0.0806%" height="15" fill="rgb(215,1,6)" fg:x="1102" fg:w="1"/><text x="89.0494%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.7994%" y="661" width="0.0806%" height="15" fill="rgb(210,225,13)" fg:x="1102" fg:w="1"/><text x="89.0494%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="88.7188%" y="773" width="0.2417%" height="15" fill="rgb(214,25,30)" fg:x="1101" fg:w="3"/><text x="88.9688%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="88.7188%" y="757" width="0.2417%" height="15" fill="rgb(254,43,34)" fg:x="1101" fg:w="3"/><text x="88.9688%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="88.7188%" y="741" width="0.2417%" height="15" fill="rgb(210,6,40)" fg:x="1101" fg:w="3"/><text x="88.9688%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.7994%" y="725" width="0.1612%" height="15" fill="rgb(251,76,23)" fg:x="1102" fg:w="2"/><text x="89.0494%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.7994%" y="709" width="0.1612%" height="15" fill="rgb(214,7,14)" fg:x="1102" fg:w="2"/><text x="89.0494%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.8799%" y="693" width="0.0806%" height="15" fill="rgb(227,100,33)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.8799%" y="677" width="0.0806%" height="15" fill="rgb(211,49,7)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.8799%" y="661" width="0.0806%" height="15" fill="rgb(228,223,1)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.9605%" y="693" width="0.0806%" height="15" fill="rgb(245,92,22)" fg:x="1104" fg:w="1"/><text x="89.2105%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.9605%" y="677" width="0.0806%" height="15" fill="rgb(232,221,10)" fg:x="1104" fg:w="1"/><text x="89.2105%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.0411%" y="677" width="0.0806%" height="15" fill="rgb(252,175,23)" fg:x="1105" fg:w="1"/><text x="89.2911%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1217%" y="661" width="0.0806%" height="15" fill="rgb(234,229,25)" fg:x="1106" fg:w="1"/><text x="89.3717%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="88.9605%" y="741" width="0.3223%" height="15" fill="rgb(254,127,20)" fg:x="1104" fg:w="4"/><text x="89.2105%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="88.9605%" y="725" width="0.3223%" height="15" fill="rgb(211,151,37)" fg:x="1104" fg:w="4"/><text x="89.2105%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="88.9605%" y="709" width="0.3223%" height="15" fill="rgb(226,185,3)" fg:x="1104" fg:w="4"/><text x="89.2105%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.0411%" y="693" width="0.2417%" height="15" fill="rgb(223,38,29)" fg:x="1105" fg:w="3"/><text x="89.2911%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.1217%" y="677" width="0.1612%" height="15" fill="rgb(206,134,22)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.2023%" y="661" width="0.0806%" height="15" fill="rgb(243,211,4)" fg:x="1107" fg:w="1"/><text x="89.4523%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.2023%" y="645" width="0.0806%" height="15" fill="rgb(244,214,18)" fg:x="1107" fg:w="1"/><text x="89.4523%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="89.2828%" y="725" width="0.0806%" height="15" fill="rgb(208,165,52)" fg:x="1108" fg:w="1"/><text x="89.5328%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.3634%" y="709" width="0.0806%" height="15" fill="rgb(245,165,39)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.4440%" y="693" width="0.0806%" height="15" fill="rgb(250,46,43)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.4440%" y="677" width="0.0806%" height="15" fill="rgb(242,86,47)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.4440%" y="661" width="0.0806%" height="15" fill="rgb(232,173,5)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.4440%" y="645" width="0.0806%" height="15" fill="rgb(208,117,14)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.4440%" y="629" width="0.0806%" height="15" fill="rgb(205,144,47)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (2 samples, 0.16%)</title><rect x="89.5246%" y="661" width="0.1612%" height="15" fill="rgb(228,62,6)" fg:x="1111" fg:w="2"/><text x="89.7746%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.6857%" y="661" width="0.0806%" height="15" fill="rgb(238,32,51)" fg:x="1113" fg:w="1"/><text x="89.9357%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.6857%" y="645" width="0.0806%" height="15" fill="rgb(251,211,21)" fg:x="1113" fg:w="1"/><text x="89.9357%" y="655.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (11 samples, 0.89%)</title><rect x="88.9605%" y="757" width="0.8864%" height="15" fill="rgb(244,43,23)" fg:x="1104" fg:w="11"/><text x="89.2105%" y="767.50"></text></g><g><title>treediff::diff::diff (7 samples, 0.56%)</title><rect x="89.2828%" y="741" width="0.5641%" height="15" fill="rgb(219,48,27)" fg:x="1108" fg:w="7"/><text x="89.5328%" y="751.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="89.3634%" y="725" width="0.4835%" height="15" fill="rgb(251,72,17)" fg:x="1109" fg:w="6"/><text x="89.6134%" y="735.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.40%)</title><rect x="89.4440%" y="709" width="0.4029%" height="15" fill="rgb(214,69,49)" fg:x="1110" fg:w="5"/><text x="89.6940%" y="719.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="89.5246%" y="693" width="0.3223%" height="15" fill="rgb(242,96,45)" fg:x="1111" fg:w="4"/><text x="89.7746%" y="703.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="89.5246%" y="677" width="0.3223%" height="15" fill="rgb(233,20,50)" fg:x="1111" fg:w="4"/><text x="89.7746%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7663%" y="661" width="0.0806%" height="15" fill="rgb(247,82,43)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7663%" y="645" width="0.0806%" height="15" fill="rgb(210,97,3)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.8469%" y="725" width="0.0806%" height="15" fill="rgb(217,113,26)" fg:x="1115" fg:w="1"/><text x="90.0969%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.9275%" y="725" width="0.0806%" height="15" fill="rgb(207,166,18)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.9275%" y="709" width="0.0806%" height="15" fill="rgb(205,124,54)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="90.0081%" y="725" width="0.0806%" height="15" fill="rgb(211,140,29)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.0081%" y="709" width="0.0806%" height="15" fill="rgb(228,83,33)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.0081%" y="693" width="0.0806%" height="15" fill="rgb(225,217,40)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.0081%" y="677" width="0.0806%" height="15" fill="rgb(221,229,30)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.0081%" y="661" width="0.0806%" height="15" fill="rgb(210,1,48)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1692%" y="677" width="0.0806%" height="15" fill="rgb(205,53,50)" fg:x="1119" fg:w="1"/><text x="90.4192%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1692%" y="661" width="0.0806%" height="15" fill="rgb(211,25,54)" fg:x="1119" fg:w="1"/><text x="90.4192%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1692%" y="645" width="0.0806%" height="15" fill="rgb(205,28,13)" fg:x="1119" fg:w="1"/><text x="90.4192%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2498%" y="581" width="0.0806%" height="15" fill="rgb(214,37,48)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.2498%" y="565" width="0.0806%" height="15" fill="rgb(226,141,8)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.2498%" y="549" width="0.0806%" height="15" fill="rgb(206,200,0)" fg:x="1120" fg:w="1"/><text x="90.4998%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.32%)</title><rect x="90.0886%" y="709" width="0.3223%" height="15" fill="rgb(238,152,34)" fg:x="1118" fg:w="4"/><text x="90.3386%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="90.0886%" y="693" width="0.3223%" height="15" fill="rgb(216,72,48)" fg:x="1118" fg:w="4"/><text x="90.3386%" y="703.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="90.2498%" y="677" width="0.1612%" height="15" fill="rgb(246,48,2)" fg:x="1120" fg:w="2"/><text x="90.4998%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="90.2498%" y="661" width="0.1612%" height="15" fill="rgb(249,59,28)" fg:x="1120" fg:w="2"/><text x="90.4998%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="90.2498%" y="645" width="0.1612%" height="15" fill="rgb(253,198,14)" fg:x="1120" fg:w="2"/><text x="90.4998%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="90.2498%" y="629" width="0.1612%" height="15" fill="rgb(225,162,4)" fg:x="1120" fg:w="2"/><text x="90.4998%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="90.2498%" y="613" width="0.1612%" height="15" fill="rgb(231,126,49)" fg:x="1120" fg:w="2"/><text x="90.4998%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="90.2498%" y="597" width="0.1612%" height="15" fill="rgb(207,41,3)" fg:x="1120" fg:w="2"/><text x="90.4998%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.3304%" y="581" width="0.0806%" height="15" fill="rgb(212,223,36)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.3304%" y="565" width="0.0806%" height="15" fill="rgb(214,96,38)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="90.3304%" y="549" width="0.0806%" height="15" fill="rgb(246,104,47)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="90.3304%" y="533" width="0.0806%" height="15" fill="rgb(227,212,36)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="89.8469%" y="757" width="0.6446%" height="15" fill="rgb(250,163,41)" fg:x="1115" fg:w="8"/><text x="90.0969%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="89.8469%" y="741" width="0.6446%" height="15" fill="rgb(250,130,17)" fg:x="1115" fg:w="8"/><text x="90.0969%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="90.0886%" y="725" width="0.4029%" height="15" fill="rgb(206,42,32)" fg:x="1118" fg:w="5"/><text x="90.3386%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4110%" y="709" width="0.0806%" height="15" fill="rgb(224,95,7)" fg:x="1122" fg:w="1"/><text x="90.6610%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.6527%" y="613" width="0.0806%" height="15" fill="rgb(242,96,42)" fg:x="1125" fg:w="1"/><text x="90.9027%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.6527%" y="597" width="0.0806%" height="15" fill="rgb(237,194,4)" fg:x="1125" fg:w="1"/><text x="90.9027%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.6527%" y="581" width="0.0806%" height="15" fill="rgb(245,142,29)" fg:x="1125" fg:w="1"/><text x="90.9027%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.6527%" y="565" width="0.0806%" height="15" fill="rgb(247,66,43)" fg:x="1125" fg:w="1"/><text x="90.9027%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.7333%" y="581" width="0.0806%" height="15" fill="rgb(220,153,30)" fg:x="1126" fg:w="1"/><text x="90.9833%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.7333%" y="565" width="0.0806%" height="15" fill="rgb(207,130,54)" fg:x="1126" fg:w="1"/><text x="90.9833%" y="575.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="90.7333%" y="549" width="0.0806%" height="15" fill="rgb(242,49,39)" fg:x="1126" fg:w="1"/><text x="90.9833%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="90.7333%" y="533" width="0.0806%" height="15" fill="rgb(206,227,44)" fg:x="1126" fg:w="1"/><text x="90.9833%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="90.6527%" y="629" width="0.2417%" height="15" fill="rgb(236,74,29)" fg:x="1125" fg:w="3"/><text x="90.9027%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.7333%" y="613" width="0.1612%" height="15" fill="rgb(222,52,23)" fg:x="1126" fg:w="2"/><text x="90.9833%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.7333%" y="597" width="0.1612%" height="15" fill="rgb(245,65,4)" fg:x="1126" fg:w="2"/><text x="90.9833%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8139%" y="581" width="0.0806%" height="15" fill="rgb(205,120,32)" fg:x="1127" fg:w="1"/><text x="91.0639%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="90.5721%" y="661" width="0.4029%" height="15" fill="rgb(226,156,21)" fg:x="1124" fg:w="5"/><text x="90.8221%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="90.5721%" y="645" width="0.4029%" height="15" fill="rgb(240,117,11)" fg:x="1124" fg:w="5"/><text x="90.8221%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.8944%" y="629" width="0.0806%" height="15" fill="rgb(232,214,36)" fg:x="1128" fg:w="1"/><text x="91.1444%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.9750%" y="661" width="0.0806%" height="15" fill="rgb(252,121,45)" fg:x="1129" fg:w="1"/><text x="91.2250%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.73%)</title><rect x="90.4915%" y="693" width="0.7252%" height="15" fill="rgb(250,206,1)" fg:x="1123" fg:w="9"/><text x="90.7415%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="90.4915%" y="677" width="0.7252%" height="15" fill="rgb(213,40,16)" fg:x="1123" fg:w="9"/><text x="90.7415%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.0556%" y="661" width="0.1612%" height="15" fill="rgb(222,106,3)" fg:x="1130" fg:w="2"/><text x="91.3056%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.1362%" y="645" width="0.0806%" height="15" fill="rgb(238,140,8)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1362%" y="629" width="0.0806%" height="15" fill="rgb(217,119,30)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.2168%" y="677" width="0.0806%" height="15" fill="rgb(228,189,17)" fg:x="1132" fg:w="1"/><text x="91.4668%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="91.2168%" y="693" width="0.1612%" height="15" fill="rgb(243,94,42)" fg:x="1132" fg:w="2"/><text x="91.4668%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.2973%" y="677" width="0.0806%" height="15" fill="rgb(228,105,42)" fg:x="1133" fg:w="1"/><text x="91.5473%" y="687.50"></text></g><g><title>engine::session::Session::close (59 samples, 4.75%)</title><rect x="86.7043%" y="853" width="4.7542%" height="15" fill="rgb(233,19,53)" fg:x="1076" fg:w="59"/><text x="86.9543%" y="863.50">engine..</text></g><g><title>engine::session::state::State::close (56 samples, 4.51%)</title><rect x="86.9460%" y="837" width="4.5125%" height="15" fill="rgb(240,22,26)" fg:x="1079" fg:w="56"/><text x="87.1960%" y="847.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (54 samples, 4.35%)</title><rect x="87.1072%" y="821" width="4.3513%" height="15" fill="rgb(238,97,34)" fg:x="1081" fg:w="54"/><text x="87.3572%" y="831.50">engin..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (52 samples, 4.19%)</title><rect x="87.2683%" y="805" width="4.1902%" height="15" fill="rgb(210,177,8)" fg:x="1083" fg:w="52"/><text x="87.5183%" y="815.50">engin..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (51 samples, 4.11%)</title><rect x="87.3489%" y="789" width="4.1096%" height="15" fill="rgb(217,168,6)" fg:x="1084" fg:w="51"/><text x="87.5989%" y="799.50">engi..</text></g><g><title>kernel::model::any_entity_changes (31 samples, 2.50%)</title><rect x="88.9605%" y="773" width="2.4980%" height="15" fill="rgb(223,34,43)" fg:x="1104" fg:w="31"/><text x="89.2105%" y="783.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.97%)</title><rect x="90.4915%" y="757" width="0.9670%" height="15" fill="rgb(252,123,35)" fg:x="1123" fg:w="12"/><text x="90.7415%" y="767.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.97%)</title><rect x="90.4915%" y="741" width="0.9670%" height="15" fill="rgb(243,162,1)" fg:x="1123" fg:w="12"/><text x="90.7415%" y="751.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.97%)</title><rect x="90.4915%" y="725" width="0.9670%" height="15" fill="rgb(250,83,22)" fg:x="1123" fg:w="12"/><text x="90.7415%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.97%)</title><rect x="90.4915%" y="709" width="0.9670%" height="15" fill="rgb(247,184,7)" fg:x="1123" fg:w="12"/><text x="90.7415%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.3779%" y="693" width="0.0806%" height="15" fill="rgb(254,212,7)" fg:x="1134" fg:w="1"/><text x="91.6279%" y="703.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="91.5391%" y="645" width="0.0806%" height="15" fill="rgb(249,198,8)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.5391%" y="629" width="0.0806%" height="15" fill="rgb(230,74,12)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.5391%" y="613" width="0.0806%" height="15" fill="rgb(253,174,9)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.5391%" y="597" width="0.0806%" height="15" fill="rgb(222,191,12)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.5391%" y="581" width="0.0806%" height="15" fill="rgb(234,28,43)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.5391%" y="565" width="0.0806%" height="15" fill="rgb(232,13,38)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.5391%" y="549" width="0.0806%" height="15" fill="rgb(239,101,25)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.5391%" y="533" width="0.0806%" height="15" fill="rgb(237,214,49)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.5391%" y="517" width="0.0806%" height="15" fill="rgb(212,188,4)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.5391%" y="501" width="0.0806%" height="15" fill="rgb(208,167,23)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.5391%" y="485" width="0.0806%" height="15" fill="rgb(209,179,40)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.5391%" y="469" width="0.0806%" height="15" fill="rgb(233,144,24)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.5391%" y="453" width="0.0806%" height="15" fill="rgb(250,4,25)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.5391%" y="437" width="0.0806%" height="15" fill="rgb(236,222,29)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="91.6197%" y="565" width="0.1612%" height="15" fill="rgb(228,152,14)" fg:x="1137" fg:w="2"/><text x="91.8697%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.6197%" y="549" width="0.1612%" height="15" fill="rgb(240,11,37)" fg:x="1137" fg:w="2"/><text x="91.8697%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.7002%" y="533" width="0.0806%" height="15" fill="rgb(240,96,5)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.7002%" y="517" width="0.0806%" height="15" fill="rgb(242,145,4)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.7002%" y="501" width="0.0806%" height="15" fill="rgb(229,118,33)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.7002%" y="485" width="0.0806%" height="15" fill="rgb(213,82,17)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.7002%" y="469" width="0.0806%" height="15" fill="rgb(236,71,53)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.7002%" y="453" width="0.0806%" height="15" fill="rgb(227,158,19)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.7808%" y="565" width="0.0806%" height="15" fill="rgb(220,52,31)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="91.6197%" y="613" width="0.3223%" height="15" fill="rgb(232,137,27)" fg:x="1137" fg:w="4"/><text x="91.8697%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="91.6197%" y="597" width="0.3223%" height="15" fill="rgb(208,155,6)" fg:x="1137" fg:w="4"/><text x="91.8697%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="91.6197%" y="581" width="0.3223%" height="15" fill="rgb(253,212,46)" fg:x="1137" fg:w="4"/><text x="91.8697%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.8614%" y="565" width="0.0806%" height="15" fill="rgb(220,55,4)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.8614%" y="549" width="0.0806%" height="15" fill="rgb(226,100,5)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.8614%" y="533" width="0.0806%" height="15" fill="rgb(247,200,51)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.8614%" y="517" width="0.0806%" height="15" fill="rgb(220,203,54)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.8614%" y="501" width="0.0806%" height="15" fill="rgb(230,187,54)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.8614%" y="485" width="0.0806%" height="15" fill="rgb(225,132,12)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.8614%" y="469" width="0.0806%" height="15" fill="rgb(205,210,33)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.8614%" y="453" width="0.0806%" height="15" fill="rgb(238,192,7)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.8614%" y="437" width="0.0806%" height="15" fill="rgb(245,82,29)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.8614%" y="421" width="0.0806%" height="15" fill="rgb(234,222,39)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.8614%" y="405" width="0.0806%" height="15" fill="rgb(231,222,18)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.8614%" y="389" width="0.0806%" height="15" fill="rgb(216,61,10)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.8614%" y="373" width="0.0806%" height="15" fill="rgb(241,116,34)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.8614%" y="357" width="0.0806%" height="15" fill="rgb(225,32,22)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.48%)</title><rect x="91.5391%" y="709" width="0.4835%" height="15" fill="rgb(236,35,19)" fg:x="1136" fg:w="6"/><text x="91.7891%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.48%)</title><rect x="91.5391%" y="693" width="0.4835%" height="15" fill="rgb(231,198,28)" fg:x="1136" fg:w="6"/><text x="91.7891%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="91.5391%" y="677" width="0.4835%" height="15" fill="rgb(211,215,31)" fg:x="1136" fg:w="6"/><text x="91.7891%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="91.5391%" y="661" width="0.4835%" height="15" fill="rgb(243,118,23)" fg:x="1136" fg:w="6"/><text x="91.7891%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="91.6197%" y="645" width="0.4029%" height="15" fill="rgb(228,104,45)" fg:x="1137" fg:w="5"/><text x="91.8697%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="91.6197%" y="629" width="0.4029%" height="15" fill="rgb(216,198,17)" fg:x="1137" fg:w="5"/><text x="91.8697%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.9420%" y="613" width="0.0806%" height="15" fill="rgb(249,39,23)" fg:x="1141" fg:w="1"/><text x="92.1920%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9420%" y="597" width="0.0806%" height="15" fill="rgb(250,186,54)" fg:x="1141" fg:w="1"/><text x="92.1920%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (7 samples, 0.56%)</title><rect x="91.5391%" y="757" width="0.5641%" height="15" fill="rgb(243,110,14)" fg:x="1136" fg:w="7"/><text x="91.7891%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="91.5391%" y="741" width="0.5641%" height="15" fill="rgb(236,32,12)" fg:x="1136" fg:w="7"/><text x="91.7891%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="91.5391%" y="725" width="0.5641%" height="15" fill="rgb(211,92,33)" fg:x="1136" fg:w="7"/><text x="91.7891%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.0226%" y="709" width="0.0806%" height="15" fill="rgb(254,154,8)" fg:x="1142" fg:w="1"/><text x="92.2726%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.0226%" y="693" width="0.0806%" height="15" fill="rgb(241,107,40)" fg:x="1142" fg:w="1"/><text x="92.2726%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.0226%" y="677" width="0.0806%" height="15" fill="rgb(208,24,40)" fg:x="1142" fg:w="1"/><text x="92.2726%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.0226%" y="661" width="0.0806%" height="15" fill="rgb(252,158,9)" fg:x="1142" fg:w="1"/><text x="92.2726%" y="671.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (9 samples, 0.73%)</title><rect x="91.5391%" y="773" width="0.7252%" height="15" fill="rgb(241,9,28)" fg:x="1136" fg:w="9"/><text x="91.7891%" y="783.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="92.1031%" y="757" width="0.1612%" height="15" fill="rgb(210,199,32)" fg:x="1143" fg:w="2"/><text x="92.3531%" y="767.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="92.1031%" y="741" width="0.1612%" height="15" fill="rgb(228,147,42)" fg:x="1143" fg:w="2"/><text x="92.3531%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="92.1031%" y="725" width="0.1612%" height="15" fill="rgb(248,202,26)" fg:x="1143" fg:w="2"/><text x="92.3531%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="92.1837%" y="709" width="0.0806%" height="15" fill="rgb(225,67,4)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="719.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="92.1837%" y="693" width="0.0806%" height="15" fill="rgb(234,87,25)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.1837%" y="677" width="0.0806%" height="15" fill="rgb(229,58,0)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.1837%" y="661" width="0.0806%" height="15" fill="rgb(211,218,3)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.1837%" y="645" width="0.0806%" height="15" fill="rgb(216,109,54)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.1837%" y="629" width="0.0806%" height="15" fill="rgb(252,156,40)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.1837%" y="613" width="0.0806%" height="15" fill="rgb(208,1,12)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.1837%" y="597" width="0.0806%" height="15" fill="rgb(214,179,53)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.1837%" y="581" width="0.0806%" height="15" fill="rgb(205,173,17)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.1837%" y="565" width="0.0806%" height="15" fill="rgb(243,26,15)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.1837%" y="549" width="0.0806%" height="15" fill="rgb(231,139,31)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.1837%" y="533" width="0.0806%" height="15" fill="rgb(208,163,22)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.1837%" y="517" width="0.0806%" height="15" fill="rgb(245,84,24)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.1837%" y="501" width="0.0806%" height="15" fill="rgb(238,140,36)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.1837%" y="485" width="0.0806%" height="15" fill="rgb(218,211,39)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2643%" y="773" width="0.0806%" height="15" fill="rgb(242,59,29)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2643%" y="757" width="0.0806%" height="15" fill="rgb(245,91,22)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2643%" y="741" width="0.0806%" height="15" fill="rgb(206,13,6)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.2643%" y="725" width="0.0806%" height="15" fill="rgb(212,147,32)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.2643%" y="709" width="0.0806%" height="15" fill="rgb(254,64,12)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.2643%" y="693" width="0.0806%" height="15" fill="rgb(212,104,54)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.2643%" y="677" width="0.0806%" height="15" fill="rgb(254,77,46)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.2643%" y="661" width="0.0806%" height="15" fill="rgb(219,55,26)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.2643%" y="645" width="0.0806%" height="15" fill="rgb(230,133,21)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.2643%" y="629" width="0.0806%" height="15" fill="rgb(247,110,50)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.2643%" y="613" width="0.0806%" height="15" fill="rgb(229,31,50)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.2643%" y="597" width="0.0806%" height="15" fill="rgb(250,13,40)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.3449%" y="565" width="0.0806%" height="15" fill="rgb(212,163,14)" fg:x="1146" fg:w="1"/><text x="92.5949%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.3449%" y="549" width="0.0806%" height="15" fill="rgb(211,190,39)" fg:x="1146" fg:w="1"/><text x="92.5949%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.3449%" y="533" width="0.0806%" height="15" fill="rgb(245,39,52)" fg:x="1146" fg:w="1"/><text x="92.5949%" y="543.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (2 samples, 0.16%)</title><rect x="92.3449%" y="629" width="0.1612%" height="15" fill="rgb(216,76,3)" fg:x="1146" fg:w="2"/><text x="92.5949%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="92.3449%" y="613" width="0.1612%" height="15" fill="rgb(218,225,6)" fg:x="1146" fg:w="2"/><text x="92.5949%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="92.3449%" y="597" width="0.1612%" height="15" fill="rgb(215,137,11)" fg:x="1146" fg:w="2"/><text x="92.5949%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="92.3449%" y="581" width="0.1612%" height="15" fill="rgb(234,223,14)" fg:x="1146" fg:w="2"/><text x="92.5949%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.4255%" y="565" width="0.0806%" height="15" fill="rgb(236,24,21)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.4255%" y="549" width="0.0806%" height="15" fill="rgb(208,183,10)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.4255%" y="533" width="0.0806%" height="15" fill="rgb(254,9,3)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.4255%" y="517" width="0.0806%" height="15" fill="rgb(225,112,10)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.4255%" y="501" width="0.0806%" height="15" fill="rgb(232,7,4)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.4255%" y="485" width="0.0806%" height="15" fill="rgb(241,50,8)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.4255%" y="469" width="0.0806%" height="15" fill="rgb(209,164,32)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.4255%" y="453" width="0.0806%" height="15" fill="rgb(222,99,11)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.4255%" y="437" width="0.0806%" height="15" fill="rgb(208,139,8)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.4255%" y="421" width="0.0806%" height="15" fill="rgb(210,220,31)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="431.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="92.4255%" y="405" width="0.0806%" height="15" fill="rgb(253,192,40)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.5060%" y="469" width="0.0806%" height="15" fill="rgb(218,174,11)" fg:x="1148" fg:w="1"/><text x="92.7560%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.5060%" y="453" width="0.0806%" height="15" fill="rgb(238,12,0)" fg:x="1148" fg:w="1"/><text x="92.7560%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.5060%" y="437" width="0.0806%" height="15" fill="rgb(223,87,52)" fg:x="1148" fg:w="1"/><text x="92.7560%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.5060%" y="421" width="0.0806%" height="15" fill="rgb(206,198,52)" fg:x="1148" fg:w="1"/><text x="92.7560%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.5060%" y="405" width="0.0806%" height="15" fill="rgb(239,183,3)" fg:x="1148" fg:w="1"/><text x="92.7560%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.5060%" y="389" width="0.0806%" height="15" fill="rgb(216,111,9)" fg:x="1148" fg:w="1"/><text x="92.7560%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5060%" y="373" width="0.0806%" height="15" fill="rgb(221,6,16)" fg:x="1148" fg:w="1"/><text x="92.7560%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.5060%" y="581" width="0.1612%" height="15" fill="rgb(205,110,11)" fg:x="1148" fg:w="2"/><text x="92.7560%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.5060%" y="565" width="0.1612%" height="15" fill="rgb(210,162,38)" fg:x="1148" fg:w="2"/><text x="92.7560%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.5060%" y="549" width="0.1612%" height="15" fill="rgb(235,180,51)" fg:x="1148" fg:w="2"/><text x="92.7560%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.5060%" y="533" width="0.1612%" height="15" fill="rgb(205,214,28)" fg:x="1148" fg:w="2"/><text x="92.7560%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="92.5060%" y="517" width="0.1612%" height="15" fill="rgb(211,57,51)" fg:x="1148" fg:w="2"/><text x="92.7560%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="92.5060%" y="501" width="0.1612%" height="15" fill="rgb(207,55,41)" fg:x="1148" fg:w="2"/><text x="92.7560%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="92.5060%" y="485" width="0.1612%" height="15" fill="rgb(245,45,35)" fg:x="1148" fg:w="2"/><text x="92.7560%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="92.5866%" y="469" width="0.0806%" height="15" fill="rgb(233,168,39)" fg:x="1149" fg:w="1"/><text x="92.8366%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.5866%" y="453" width="0.0806%" height="15" fill="rgb(216,61,7)" fg:x="1149" fg:w="1"/><text x="92.8366%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="92.6672%" y="565" width="0.0806%" height="15" fill="rgb(237,109,44)" fg:x="1150" fg:w="1"/><text x="92.9172%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="92.6672%" y="549" width="0.0806%" height="15" fill="rgb(240,92,7)" fg:x="1150" fg:w="1"/><text x="92.9172%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.6672%" y="533" width="0.0806%" height="15" fill="rgb(252,17,32)" fg:x="1150" fg:w="1"/><text x="92.9172%" y="543.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.7478%" y="533" width="0.0806%" height="15" fill="rgb(219,85,5)" fg:x="1151" fg:w="1"/><text x="92.9978%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.7478%" y="517" width="0.0806%" height="15" fill="rgb(213,50,52)" fg:x="1151" fg:w="1"/><text x="92.9978%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.7478%" y="501" width="0.0806%" height="15" fill="rgb(239,79,50)" fg:x="1151" fg:w="1"/><text x="92.9978%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.7478%" y="485" width="0.0806%" height="15" fill="rgb(249,49,7)" fg:x="1151" fg:w="1"/><text x="92.9978%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.8284%" y="245" width="0.0806%" height="15" fill="rgb(222,126,43)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="92.8284%" y="389" width="0.1612%" height="15" fill="rgb(230,157,52)" fg:x="1152" fg:w="2"/><text x="93.0784%" y="399.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="92.8284%" y="373" width="0.1612%" height="15" fill="rgb(210,66,35)" fg:x="1152" fg:w="2"/><text x="93.0784%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="92.8284%" y="357" width="0.1612%" height="15" fill="rgb(220,96,16)" fg:x="1152" fg:w="2"/><text x="93.0784%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.8284%" y="341" width="0.1612%" height="15" fill="rgb(242,43,33)" fg:x="1152" fg:w="2"/><text x="93.0784%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.8284%" y="325" width="0.1612%" height="15" fill="rgb(248,128,51)" fg:x="1152" fg:w="2"/><text x="93.0784%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.8284%" y="309" width="0.1612%" height="15" fill="rgb(234,19,35)" fg:x="1152" fg:w="2"/><text x="93.0784%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.8284%" y="293" width="0.1612%" height="15" fill="rgb(232,120,30)" fg:x="1152" fg:w="2"/><text x="93.0784%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="92.8284%" y="277" width="0.1612%" height="15" fill="rgb(209,184,13)" fg:x="1152" fg:w="2"/><text x="93.0784%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.8284%" y="261" width="0.1612%" height="15" fill="rgb(222,153,0)" fg:x="1152" fg:w="2"/><text x="93.0784%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.9089%" y="245" width="0.0806%" height="15" fill="rgb(251,96,47)" fg:x="1153" fg:w="1"/><text x="93.1589%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.9895%" y="245" width="0.0806%" height="15" fill="rgb(253,113,5)" fg:x="1154" fg:w="1"/><text x="93.2395%" y="255.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="92.9895%" y="229" width="0.0806%" height="15" fill="rgb(241,96,1)" fg:x="1154" fg:w="1"/><text x="93.2395%" y="239.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="92.8284%" y="421" width="0.3223%" height="15" fill="rgb(216,225,1)" fg:x="1152" fg:w="4"/><text x="93.0784%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="92.8284%" y="405" width="0.3223%" height="15" fill="rgb(227,108,0)" fg:x="1152" fg:w="4"/><text x="93.0784%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="92.9895%" y="389" width="0.1612%" height="15" fill="rgb(221,29,48)" fg:x="1154" fg:w="2"/><text x="93.2395%" y="399.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="92.9895%" y="373" width="0.1612%" height="15" fill="rgb(222,55,16)" fg:x="1154" fg:w="2"/><text x="93.2395%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="92.9895%" y="357" width="0.1612%" height="15" fill="rgb(242,210,22)" fg:x="1154" fg:w="2"/><text x="93.2395%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.9895%" y="341" width="0.1612%" height="15" fill="rgb(223,142,30)" fg:x="1154" fg:w="2"/><text x="93.2395%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.9895%" y="325" width="0.1612%" height="15" fill="rgb(248,92,51)" fg:x="1154" fg:w="2"/><text x="93.2395%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.9895%" y="309" width="0.1612%" height="15" fill="rgb(249,201,12)" fg:x="1154" fg:w="2"/><text x="93.2395%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.9895%" y="293" width="0.1612%" height="15" fill="rgb(230,213,39)" fg:x="1154" fg:w="2"/><text x="93.2395%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="92.9895%" y="277" width="0.1612%" height="15" fill="rgb(232,46,34)" fg:x="1154" fg:w="2"/><text x="93.2395%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.9895%" y="261" width="0.1612%" height="15" fill="rgb(226,194,19)" fg:x="1154" fg:w="2"/><text x="93.2395%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.0701%" y="245" width="0.0806%" height="15" fill="rgb(254,144,47)" fg:x="1155" fg:w="1"/><text x="93.3201%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.0701%" y="229" width="0.0806%" height="15" fill="rgb(254,168,3)" fg:x="1155" fg:w="1"/><text x="93.3201%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.0701%" y="213" width="0.0806%" height="15" fill="rgb(249,104,32)" fg:x="1155" fg:w="1"/><text x="93.3201%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.0701%" y="197" width="0.0806%" height="15" fill="rgb(213,143,0)" fg:x="1155" fg:w="1"/><text x="93.3201%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.1507%" y="357" width="0.0806%" height="15" fill="rgb(211,72,7)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.1507%" y="341" width="0.0806%" height="15" fill="rgb(249,86,4)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.2313%" y="229" width="0.0806%" height="15" fill="rgb(252,17,31)" fg:x="1157" fg:w="1"/><text x="93.4813%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="93.2313%" y="213" width="0.0806%" height="15" fill="rgb(238,169,43)" fg:x="1157" fg:w="1"/><text x="93.4813%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.2313%" y="277" width="0.1612%" height="15" fill="rgb(220,206,52)" fg:x="1157" fg:w="2"/><text x="93.4813%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.2313%" y="261" width="0.1612%" height="15" fill="rgb(214,176,19)" fg:x="1157" fg:w="2"/><text x="93.4813%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.2313%" y="245" width="0.1612%" height="15" fill="rgb(206,11,39)" fg:x="1157" fg:w="2"/><text x="93.4813%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.3118%" y="229" width="0.0806%" height="15" fill="rgb(234,191,6)" fg:x="1158" fg:w="1"/><text x="93.5618%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.3118%" y="213" width="0.0806%" height="15" fill="rgb(244,46,51)" fg:x="1158" fg:w="1"/><text x="93.5618%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.3118%" y="197" width="0.0806%" height="15" fill="rgb(212,184,35)" fg:x="1158" fg:w="1"/><text x="93.5618%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.3118%" y="181" width="0.0806%" height="15" fill="rgb(217,184,38)" fg:x="1158" fg:w="1"/><text x="93.5618%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.3118%" y="165" width="0.0806%" height="15" fill="rgb(218,88,44)" fg:x="1158" fg:w="1"/><text x="93.5618%" y="175.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="93.1507%" y="405" width="0.3223%" height="15" fill="rgb(241,121,2)" fg:x="1156" fg:w="4"/><text x="93.4007%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="93.1507%" y="389" width="0.3223%" height="15" fill="rgb(232,92,4)" fg:x="1156" fg:w="4"/><text x="93.4007%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="93.1507%" y="373" width="0.3223%" height="15" fill="rgb(233,16,51)" fg:x="1156" fg:w="4"/><text x="93.4007%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="93.2313%" y="357" width="0.2417%" height="15" fill="rgb(205,138,9)" fg:x="1157" fg:w="3"/><text x="93.4813%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.2313%" y="341" width="0.2417%" height="15" fill="rgb(212,133,44)" fg:x="1157" fg:w="3"/><text x="93.4813%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="93.2313%" y="325" width="0.2417%" height="15" fill="rgb(247,170,39)" fg:x="1157" fg:w="3"/><text x="93.4813%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.2313%" y="309" width="0.2417%" height="15" fill="rgb(236,183,8)" fg:x="1157" fg:w="3"/><text x="93.4813%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="93.2313%" y="293" width="0.2417%" height="15" fill="rgb(245,194,21)" fg:x="1157" fg:w="3"/><text x="93.4813%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.3924%" y="277" width="0.0806%" height="15" fill="rgb(244,142,33)" fg:x="1159" fg:w="1"/><text x="93.6424%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.3924%" y="261" width="0.0806%" height="15" fill="rgb(237,159,51)" fg:x="1159" fg:w="1"/><text x="93.6424%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.3924%" y="245" width="0.0806%" height="15" fill="rgb(223,134,40)" fg:x="1159" fg:w="1"/><text x="93.6424%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="93.3924%" y="229" width="0.0806%" height="15" fill="rgb(217,227,45)" fg:x="1159" fg:w="1"/><text x="93.6424%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (5 samples, 0.40%)</title><rect x="93.1507%" y="421" width="0.4029%" height="15" fill="rgb(205,171,8)" fg:x="1156" fg:w="5"/><text x="93.4007%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.4730%" y="405" width="0.0806%" height="15" fill="rgb(231,83,23)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4730%" y="389" width="0.0806%" height="15" fill="rgb(226,65,0)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.4730%" y="373" width="0.0806%" height="15" fill="rgb(218,127,49)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4730%" y="357" width="0.0806%" height="15" fill="rgb(238,61,34)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.4730%" y="341" width="0.0806%" height="15" fill="rgb(228,144,3)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4730%" y="325" width="0.0806%" height="15" fill="rgb(212,155,32)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4730%" y="309" width="0.0806%" height="15" fill="rgb(219,3,13)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="93.4730%" y="293" width="0.0806%" height="15" fill="rgb(225,41,39)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4730%" y="277" width="0.0806%" height="15" fill="rgb(236,169,50)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4730%" y="261" width="0.0806%" height="15" fill="rgb(253,211,17)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="93.4730%" y="245" width="0.0806%" height="15" fill="rgb(219,67,7)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4730%" y="229" width="0.0806%" height="15" fill="rgb(236,198,21)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4730%" y="213" width="0.0806%" height="15" fill="rgb(250,83,24)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.4730%" y="197" width="0.0806%" height="15" fill="rgb(249,175,20)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (14 samples, 1.13%)</title><rect x="92.5060%" y="629" width="1.1281%" height="15" fill="rgb(239,72,36)" fg:x="1148" fg:w="14"/><text x="92.7560%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (14 samples, 1.13%)</title><rect x="92.5060%" y="613" width="1.1281%" height="15" fill="rgb(225,33,12)" fg:x="1148" fg:w="14"/><text x="92.7560%" y="623.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (14 samples, 1.13%)</title><rect x="92.5060%" y="597" width="1.1281%" height="15" fill="rgb(213,209,10)" fg:x="1148" fg:w="14"/><text x="92.7560%" y="607.50"></text></g><g><title>plugins_core::tools::contained_by (12 samples, 0.97%)</title><rect x="92.6672%" y="581" width="0.9670%" height="15" fill="rgb(233,156,7)" fg:x="1150" fg:w="12"/><text x="92.9172%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (11 samples, 0.89%)</title><rect x="92.7478%" y="565" width="0.8864%" height="15" fill="rgb(242,71,8)" fg:x="1151" fg:w="11"/><text x="92.9978%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.89%)</title><rect x="92.7478%" y="549" width="0.8864%" height="15" fill="rgb(223,170,53)" fg:x="1151" fg:w="11"/><text x="92.9978%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (10 samples, 0.81%)</title><rect x="92.8284%" y="533" width="0.8058%" height="15" fill="rgb(252,23,27)" fg:x="1152" fg:w="10"/><text x="93.0784%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (10 samples, 0.81%)</title><rect x="92.8284%" y="517" width="0.8058%" height="15" fill="rgb(220,23,37)" fg:x="1152" fg:w="10"/><text x="93.0784%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.81%)</title><rect x="92.8284%" y="501" width="0.8058%" height="15" fill="rgb(208,60,20)" fg:x="1152" fg:w="10"/><text x="93.0784%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.81%)</title><rect x="92.8284%" y="485" width="0.8058%" height="15" fill="rgb(246,105,41)" fg:x="1152" fg:w="10"/><text x="93.0784%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (10 samples, 0.81%)</title><rect x="92.8284%" y="469" width="0.8058%" height="15" fill="rgb(229,80,14)" fg:x="1152" fg:w="10"/><text x="93.0784%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.81%)</title><rect x="92.8284%" y="453" width="0.8058%" height="15" fill="rgb(223,226,8)" fg:x="1152" fg:w="10"/><text x="93.0784%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.81%)</title><rect x="92.8284%" y="437" width="0.8058%" height="15" fill="rgb(212,227,24)" fg:x="1152" fg:w="10"/><text x="93.0784%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="93.5536%" y="421" width="0.0806%" height="15" fill="rgb(234,38,14)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5536%" y="405" width="0.0806%" height="15" fill="rgb(222,86,39)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5536%" y="389" width="0.0806%" height="15" fill="rgb(208,189,2)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="93.5536%" y="373" width="0.0806%" height="15" fill="rgb(229,19,19)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.5536%" y="357" width="0.0806%" height="15" fill="rgb(250,169,51)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.6342%" y="549" width="0.0806%" height="15" fill="rgb(209,182,25)" fg:x="1162" fg:w="1"/><text x="93.8842%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.6342%" y="533" width="0.0806%" height="15" fill="rgb(240,113,23)" fg:x="1162" fg:w="1"/><text x="93.8842%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.6342%" y="517" width="0.0806%" height="15" fill="rgb(224,93,33)" fg:x="1162" fg:w="1"/><text x="93.8842%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.6342%" y="501" width="0.0806%" height="15" fill="rgb(234,37,17)" fg:x="1162" fg:w="1"/><text x="93.8842%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.6342%" y="485" width="0.0806%" height="15" fill="rgb(219,199,15)" fg:x="1162" fg:w="1"/><text x="93.8842%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.7147%" y="549" width="0.0806%" height="15" fill="rgb(249,190,12)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="93.6342%" y="597" width="0.2417%" height="15" fill="rgb(254,188,20)" fg:x="1162" fg:w="3"/><text x="93.8842%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="93.6342%" y="581" width="0.2417%" height="15" fill="rgb(227,85,36)" fg:x="1162" fg:w="3"/><text x="93.8842%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="93.6342%" y="565" width="0.2417%" height="15" fill="rgb(214,186,36)" fg:x="1162" fg:w="3"/><text x="93.8842%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.7953%" y="549" width="0.0806%" height="15" fill="rgb(207,67,47)" fg:x="1164" fg:w="1"/><text x="94.0453%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7953%" y="533" width="0.0806%" height="15" fill="rgb(224,140,32)" fg:x="1164" fg:w="1"/><text x="94.0453%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.7953%" y="517" width="0.0806%" height="15" fill="rgb(225,114,12)" fg:x="1164" fg:w="1"/><text x="94.0453%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.8759%" y="549" width="0.0806%" height="15" fill="rgb(209,199,39)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.8759%" y="533" width="0.0806%" height="15" fill="rgb(216,181,6)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8759%" y="517" width="0.0806%" height="15" fill="rgb(210,39,50)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8759%" y="501" width="0.0806%" height="15" fill="rgb(239,154,53)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.8759%" y="485" width="0.0806%" height="15" fill="rgb(235,123,22)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.8759%" y="469" width="0.0806%" height="15" fill="rgb(243,194,26)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.8759%" y="453" width="0.0806%" height="15" fill="rgb(245,23,33)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="93.8759%" y="437" width="0.0806%" height="15" fill="rgb(213,191,38)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.8759%" y="421" width="0.0806%" height="15" fill="rgb(226,199,18)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9565%" y="421" width="0.0806%" height="15" fill="rgb(210,106,30)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9565%" y="405" width="0.0806%" height="15" fill="rgb(219,177,27)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.9565%" y="389" width="0.0806%" height="15" fill="rgb(215,14,22)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.9565%" y="373" width="0.0806%" height="15" fill="rgb(240,24,8)" fg:x="1166" fg:w="1"/><text x="94.2065%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (6 samples, 0.48%)</title><rect x="93.6342%" y="629" width="0.4835%" height="15" fill="rgb(220,138,5)" fg:x="1162" fg:w="6"/><text x="93.8842%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="93.6342%" y="613" width="0.4835%" height="15" fill="rgb(254,39,11)" fg:x="1162" fg:w="6"/><text x="93.8842%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="93.8759%" y="597" width="0.2417%" height="15" fill="rgb(223,92,18)" fg:x="1165" fg:w="3"/><text x="94.1259%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="93.8759%" y="581" width="0.2417%" height="15" fill="rgb(231,216,35)" fg:x="1165" fg:w="3"/><text x="94.1259%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="93.8759%" y="565" width="0.2417%" height="15" fill="rgb(210,197,31)" fg:x="1165" fg:w="3"/><text x="94.1259%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.9565%" y="549" width="0.1612%" height="15" fill="rgb(233,78,6)" fg:x="1166" fg:w="2"/><text x="94.2065%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.9565%" y="533" width="0.1612%" height="15" fill="rgb(219,192,52)" fg:x="1166" fg:w="2"/><text x="94.2065%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.9565%" y="517" width="0.1612%" height="15" fill="rgb(240,140,47)" fg:x="1166" fg:w="2"/><text x="94.2065%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.9565%" y="501" width="0.1612%" height="15" fill="rgb(214,22,41)" fg:x="1166" fg:w="2"/><text x="94.2065%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="93.9565%" y="485" width="0.1612%" height="15" fill="rgb(216,28,18)" fg:x="1166" fg:w="2"/><text x="94.2065%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.9565%" y="469" width="0.1612%" height="15" fill="rgb(219,204,4)" fg:x="1166" fg:w="2"/><text x="94.2065%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.9565%" y="453" width="0.1612%" height="15" fill="rgb(216,98,27)" fg:x="1166" fg:w="2"/><text x="94.2065%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.9565%" y="437" width="0.1612%" height="15" fill="rgb(208,139,37)" fg:x="1166" fg:w="2"/><text x="94.2065%" y="447.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="94.0371%" y="421" width="0.0806%" height="15" fill="rgb(241,193,50)" fg:x="1167" fg:w="1"/><text x="94.2871%" y="431.50"></text></g><g><title>kernel::surround::Surroundings::unpack (3 samples, 0.24%)</title><rect x="94.1176%" y="629" width="0.2417%" height="15" fill="rgb(227,24,47)" fg:x="1168" fg:w="3"/><text x="94.3676%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="94.1176%" y="613" width="0.2417%" height="15" fill="rgb(212,91,31)" fg:x="1168" fg:w="3"/><text x="94.3676%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="94.1176%" y="597" width="0.2417%" height="15" fill="rgb(253,174,34)" fg:x="1168" fg:w="3"/><text x="94.3676%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="94.1176%" y="581" width="0.2417%" height="15" fill="rgb(219,214,52)" fg:x="1168" fg:w="3"/><text x="94.3676%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="94.1176%" y="565" width="0.2417%" height="15" fill="rgb(222,221,3)" fg:x="1168" fg:w="3"/><text x="94.3676%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="94.1176%" y="549" width="0.2417%" height="15" fill="rgb(209,130,23)" fg:x="1168" fg:w="3"/><text x="94.3676%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="94.1176%" y="533" width="0.2417%" height="15" fill="rgb(232,162,43)" fg:x="1168" fg:w="3"/><text x="94.3676%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="94.1176%" y="517" width="0.2417%" height="15" fill="rgb(245,34,38)" fg:x="1168" fg:w="3"/><text x="94.3676%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="94.1176%" y="501" width="0.2417%" height="15" fill="rgb(226,70,5)" fg:x="1168" fg:w="3"/><text x="94.3676%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="94.1176%" y="485" width="0.2417%" height="15" fill="rgb(238,97,25)" fg:x="1168" fg:w="3"/><text x="94.3676%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="94.1176%" y="469" width="0.2417%" height="15" fill="rgb(246,1,22)" fg:x="1168" fg:w="3"/><text x="94.3676%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="94.1176%" y="453" width="0.2417%" height="15" fill="rgb(248,180,27)" fg:x="1168" fg:w="3"/><text x="94.3676%" y="463.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="94.1176%" y="437" width="0.2417%" height="15" fill="rgb(223,147,15)" fg:x="1168" fg:w="3"/><text x="94.3676%" y="447.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="94.1176%" y="421" width="0.2417%" height="15" fill="rgb(220,142,50)" fg:x="1168" fg:w="3"/><text x="94.3676%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="94.3594%" y="613" width="0.0806%" height="15" fill="rgb(209,24,8)" fg:x="1171" fg:w="1"/><text x="94.6094%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="94.4400%" y="613" width="0.0806%" height="15" fill="rgb(245,95,15)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="94.4400%" y="597" width="0.0806%" height="15" fill="rgb(254,132,39)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="94.4400%" y="581" width="0.0806%" height="15" fill="rgb(230,135,4)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="94.4400%" y="565" width="0.0806%" height="15" fill="rgb(233,65,45)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.4400%" y="549" width="0.0806%" height="15" fill="rgb(238,156,12)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.4400%" y="533" width="0.0806%" height="15" fill="rgb(230,14,54)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4400%" y="517" width="0.0806%" height="15" fill="rgb(242,41,37)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.4400%" y="501" width="0.0806%" height="15" fill="rgb(231,37,53)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4400%" y="485" width="0.0806%" height="15" fill="rgb(235,181,47)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.4400%" y="469" width="0.0806%" height="15" fill="rgb(253,41,16)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4400%" y="453" width="0.0806%" height="15" fill="rgb(245,44,19)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.4400%" y="437" width="0.0806%" height="15" fill="rgb(245,22,46)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4400%" y="421" width="0.0806%" height="15" fill="rgb(207,84,51)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="431.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="94.5205%" y="613" width="0.1612%" height="15" fill="rgb(212,36,12)" fg:x="1173" fg:w="2"/><text x="94.7705%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="94.6011%" y="597" width="0.0806%" height="15" fill="rgb(240,188,18)" fg:x="1174" fg:w="1"/><text x="94.8511%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="94.6011%" y="581" width="0.0806%" height="15" fill="rgb(245,89,47)" fg:x="1174" fg:w="1"/><text x="94.8511%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="94.6011%" y="565" width="0.0806%" height="15" fill="rgb(216,24,14)" fg:x="1174" fg:w="1"/><text x="94.8511%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.6011%" y="549" width="0.0806%" height="15" fill="rgb(217,71,21)" fg:x="1174" fg:w="1"/><text x="94.8511%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="94.7623%" y="597" width="0.1612%" height="15" fill="rgb(251,142,29)" fg:x="1176" fg:w="2"/><text x="95.0123%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="94.9234%" y="597" width="0.1612%" height="15" fill="rgb(210,29,22)" fg:x="1178" fg:w="2"/><text x="95.1734%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="94.9234%" y="581" width="0.1612%" height="15" fill="rgb(248,174,36)" fg:x="1178" fg:w="2"/><text x="95.1734%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="94.9234%" y="565" width="0.1612%" height="15" fill="rgb(224,111,34)" fg:x="1178" fg:w="2"/><text x="95.1734%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="94.9234%" y="549" width="0.1612%" height="15" fill="rgb(245,177,23)" fg:x="1178" fg:w="2"/><text x="95.1734%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="94.9234%" y="533" width="0.1612%" height="15" fill="rgb(217,114,53)" fg:x="1178" fg:w="2"/><text x="95.1734%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="95.0040%" y="517" width="0.0806%" height="15" fill="rgb(223,157,10)" fg:x="1179" fg:w="1"/><text x="95.2540%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="95.0846%" y="597" width="0.0806%" height="15" fill="rgb(217,134,44)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="95.0846%" y="581" width="0.0806%" height="15" fill="rgb(222,195,7)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="95.0846%" y="565" width="0.0806%" height="15" fill="rgb(235,153,27)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.0846%" y="549" width="0.0806%" height="15" fill="rgb(247,105,14)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.0846%" y="533" width="0.0806%" height="15" fill="rgb(250,6,2)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0846%" y="517" width="0.0806%" height="15" fill="rgb(250,41,38)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0846%" y="501" width="0.0806%" height="15" fill="rgb(234,127,49)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0846%" y="485" width="0.0806%" height="15" fill="rgb(242,79,16)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0846%" y="469" width="0.0806%" height="15" fill="rgb(236,15,0)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.0846%" y="453" width="0.0806%" height="15" fill="rgb(217,113,36)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0846%" y="437" width="0.0806%" height="15" fill="rgb(239,12,4)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.0846%" y="421" width="0.0806%" height="15" fill="rgb(236,142,50)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.0846%" y="405" width="0.0806%" height="15" fill="rgb(244,108,52)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="94.6817%" y="613" width="0.5641%" height="15" fill="rgb(223,79,42)" fg:x="1175" fg:w="7"/><text x="94.9317%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="95.1652%" y="597" width="0.0806%" height="15" fill="rgb(245,34,19)" fg:x="1181" fg:w="1"/><text x="95.4152%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.1652%" y="581" width="0.0806%" height="15" fill="rgb(222,137,30)" fg:x="1181" fg:w="1"/><text x="95.4152%" y="591.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="95.2458%" y="613" width="0.0806%" height="15" fill="rgb(213,216,50)" fg:x="1182" fg:w="1"/><text x="95.4958%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="95.2458%" y="597" width="0.0806%" height="15" fill="rgb(206,117,33)" fg:x="1182" fg:w="1"/><text x="95.4958%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (38 samples, 3.06%)</title><rect x="92.3449%" y="645" width="3.0620%" height="15" fill="rgb(234,122,47)" fg:x="1146" fg:w="38"/><text x="92.5949%" y="655.50">&lt;pl..</text></g><g><title>plugins_core::location::change_location (13 samples, 1.05%)</title><rect x="94.3594%" y="629" width="1.0475%" height="15" fill="rgb(226,61,39)" fg:x="1171" fg:w="13"/><text x="94.6094%" y="639.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="95.3263%" y="613" width="0.0806%" height="15" fill="rgb(229,174,28)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="95.3263%" y="597" width="0.0806%" height="15" fill="rgb(246,207,11)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3263%" y="581" width="0.0806%" height="15" fill="rgb(245,212,19)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3263%" y="565" width="0.0806%" height="15" fill="rgb(240,107,51)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3263%" y="549" width="0.0806%" height="15" fill="rgb(238,67,13)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.3263%" y="533" width="0.0806%" height="15" fill="rgb(250,8,29)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.3263%" y="517" width="0.0806%" height="15" fill="rgb(227,44,9)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.3263%" y="501" width="0.0806%" height="15" fill="rgb(247,128,2)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.3263%" y="485" width="0.0806%" height="15" fill="rgb(239,11,50)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.3263%" y="469" width="0.0806%" height="15" fill="rgb(241,11,28)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.3263%" y="453" width="0.0806%" height="15" fill="rgb(220,15,14)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.3263%" y="437" width="0.0806%" height="15" fill="rgb(226,97,9)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.3263%" y="421" width="0.0806%" height="15" fill="rgb(240,221,24)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.3263%" y="405" width="0.0806%" height="15" fill="rgb(238,199,31)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.3263%" y="389" width="0.0806%" height="15" fill="rgb(222,15,37)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (1 samples, 0.08%)</title><rect x="95.4069%" y="613" width="0.0806%" height="15" fill="rgb(225,66,12)" fg:x="1184" fg:w="1"/><text x="95.6569%" y="623.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="95.4069%" y="597" width="0.0806%" height="15" fill="rgb(224,142,38)" fg:x="1184" fg:w="1"/><text x="95.6569%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.4069%" y="581" width="0.0806%" height="15" fill="rgb(208,206,25)" fg:x="1184" fg:w="1"/><text x="95.6569%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.4875%" y="565" width="0.1612%" height="15" fill="rgb(205,153,20)" fg:x="1185" fg:w="2"/><text x="95.7375%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.4875%" y="549" width="0.1612%" height="15" fill="rgb(206,199,32)" fg:x="1185" fg:w="2"/><text x="95.7375%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.4875%" y="533" width="0.1612%" height="15" fill="rgb(246,135,31)" fg:x="1185" fg:w="2"/><text x="95.7375%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5681%" y="517" width="0.0806%" height="15" fill="rgb(208,211,40)" fg:x="1186" fg:w="1"/><text x="95.8181%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5681%" y="501" width="0.0806%" height="15" fill="rgb(210,219,1)" fg:x="1186" fg:w="1"/><text x="95.8181%" y="511.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (5 samples, 0.40%)</title><rect x="95.4069%" y="629" width="0.4029%" height="15" fill="rgb(232,190,35)" fg:x="1184" fg:w="5"/><text x="95.6569%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="95.4875%" y="613" width="0.3223%" height="15" fill="rgb(211,9,18)" fg:x="1185" fg:w="4"/><text x="95.7375%" y="623.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="95.4875%" y="597" width="0.3223%" height="15" fill="rgb(212,15,38)" fg:x="1185" fg:w="4"/><text x="95.7375%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="95.4875%" y="581" width="0.3223%" height="15" fill="rgb(238,74,28)" fg:x="1185" fg:w="4"/><text x="95.7375%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.6487%" y="565" width="0.1612%" height="15" fill="rgb(230,98,34)" fg:x="1187" fg:w="2"/><text x="95.8987%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.6487%" y="549" width="0.1612%" height="15" fill="rgb(212,130,40)" fg:x="1187" fg:w="2"/><text x="95.8987%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.6487%" y="533" width="0.1612%" height="15" fill="rgb(234,200,15)" fg:x="1187" fg:w="2"/><text x="95.8987%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.6487%" y="517" width="0.1612%" height="15" fill="rgb(216,227,29)" fg:x="1187" fg:w="2"/><text x="95.8987%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="95.6487%" y="501" width="0.1612%" height="15" fill="rgb(226,47,50)" fg:x="1187" fg:w="2"/><text x="95.8987%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.6487%" y="485" width="0.1612%" height="15" fill="rgb(232,146,36)" fg:x="1187" fg:w="2"/><text x="95.8987%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.6487%" y="469" width="0.1612%" height="15" fill="rgb(234,162,39)" fg:x="1187" fg:w="2"/><text x="95.8987%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.6487%" y="453" width="0.1612%" height="15" fill="rgb(253,148,35)" fg:x="1187" fg:w="2"/><text x="95.8987%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.6487%" y="437" width="0.1612%" height="15" fill="rgb(253,200,8)" fg:x="1187" fg:w="2"/><text x="95.8987%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.6487%" y="421" width="0.1612%" height="15" fill="rgb(220,107,20)" fg:x="1187" fg:w="2"/><text x="95.8987%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="95.8098%" y="597" width="0.0806%" height="15" fill="rgb(205,200,12)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="95.8904%" y="581" width="0.0806%" height="15" fill="rgb(219,123,42)" fg:x="1190" fg:w="1"/><text x="96.1404%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="95.8904%" y="565" width="0.0806%" height="15" fill="rgb(236,136,3)" fg:x="1190" fg:w="1"/><text x="96.1404%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="95.8904%" y="549" width="0.0806%" height="15" fill="rgb(213,112,27)" fg:x="1190" fg:w="1"/><text x="96.1404%" y="559.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.0516%" y="533" width="0.1612%" height="15" fill="rgb(229,181,47)" fg:x="1192" fg:w="2"/><text x="96.3016%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.0516%" y="517" width="0.1612%" height="15" fill="rgb(243,123,15)" fg:x="1192" fg:w="2"/><text x="96.3016%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.0516%" y="501" width="0.1612%" height="15" fill="rgb(206,135,33)" fg:x="1192" fg:w="2"/><text x="96.3016%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1322%" y="485" width="0.0806%" height="15" fill="rgb(232,190,44)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1322%" y="469" width="0.0806%" height="15" fill="rgb(237,122,12)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1322%" y="453" width="0.0806%" height="15" fill="rgb(245,157,35)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.1322%" y="437" width="0.0806%" height="15" fill="rgb(205,164,34)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.1322%" y="421" width="0.0806%" height="15" fill="rgb(237,82,1)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.1322%" y="405" width="0.0806%" height="15" fill="rgb(220,167,39)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1322%" y="389" width="0.0806%" height="15" fill="rgb(208,133,37)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1322%" y="373" width="0.0806%" height="15" fill="rgb(243,161,51)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.1322%" y="357" width="0.0806%" height="15" fill="rgb(232,127,41)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.1322%" y="341" width="0.0806%" height="15" fill="rgb(237,20,11)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.1322%" y="325" width="0.0806%" height="15" fill="rgb(233,186,24)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.1322%" y="309" width="0.0806%" height="15" fill="rgb(210,39,6)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1322%" y="293" width="0.0806%" height="15" fill="rgb(216,11,48)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="303.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (6 samples, 0.48%)</title><rect x="95.8904%" y="597" width="0.4835%" height="15" fill="rgb(222,13,18)" fg:x="1190" fg:w="6"/><text x="96.1404%" y="607.50"></text></g><g><title>plugins_core::tools::contained_by (5 samples, 0.40%)</title><rect x="95.9710%" y="581" width="0.4029%" height="15" fill="rgb(238,150,15)" fg:x="1191" fg:w="5"/><text x="96.2210%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="96.0516%" y="565" width="0.3223%" height="15" fill="rgb(235,57,5)" fg:x="1192" fg:w="4"/><text x="96.3016%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="96.0516%" y="549" width="0.3223%" height="15" fill="rgb(214,196,13)" fg:x="1192" fg:w="4"/><text x="96.3016%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.2127%" y="533" width="0.1612%" height="15" fill="rgb(217,219,39)" fg:x="1194" fg:w="2"/><text x="96.4627%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.2127%" y="517" width="0.1612%" height="15" fill="rgb(237,225,39)" fg:x="1194" fg:w="2"/><text x="96.4627%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="96.2127%" y="501" width="0.1612%" height="15" fill="rgb(221,88,26)" fg:x="1194" fg:w="2"/><text x="96.4627%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="96.2127%" y="485" width="0.1612%" height="15" fill="rgb(205,45,48)" fg:x="1194" fg:w="2"/><text x="96.4627%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="96.2127%" y="469" width="0.1612%" height="15" fill="rgb(234,216,37)" fg:x="1194" fg:w="2"/><text x="96.4627%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.2127%" y="453" width="0.1612%" height="15" fill="rgb(243,210,39)" fg:x="1194" fg:w="2"/><text x="96.4627%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.2127%" y="437" width="0.1612%" height="15" fill="rgb(232,86,47)" fg:x="1194" fg:w="2"/><text x="96.4627%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.2933%" y="421" width="0.0806%" height="15" fill="rgb(234,222,31)" fg:x="1195" fg:w="1"/><text x="96.5433%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3739%" y="501" width="0.0806%" height="15" fill="rgb(211,202,13)" fg:x="1196" fg:w="1"/><text x="96.6239%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3739%" y="485" width="0.0806%" height="15" fill="rgb(237,138,3)" fg:x="1196" fg:w="1"/><text x="96.6239%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3739%" y="469" width="0.0806%" height="15" fill="rgb(225,74,1)" fg:x="1196" fg:w="1"/><text x="96.6239%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3739%" y="453" width="0.0806%" height="15" fill="rgb(252,76,17)" fg:x="1196" fg:w="1"/><text x="96.6239%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3739%" y="437" width="0.0806%" height="15" fill="rgb(217,109,21)" fg:x="1196" fg:w="1"/><text x="96.6239%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (9 samples, 0.73%)</title><rect x="95.8098%" y="629" width="0.7252%" height="15" fill="rgb(235,7,3)" fg:x="1189" fg:w="9"/><text x="96.0598%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (9 samples, 0.73%)</title><rect x="95.8098%" y="613" width="0.7252%" height="15" fill="rgb(238,16,13)" fg:x="1189" fg:w="9"/><text x="96.0598%" y="623.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="96.3739%" y="597" width="0.1612%" height="15" fill="rgb(242,32,47)" fg:x="1196" fg:w="2"/><text x="96.6239%" y="607.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="96.3739%" y="581" width="0.1612%" height="15" fill="rgb(241,38,43)" fg:x="1196" fg:w="2"/><text x="96.6239%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::name (2 samples, 0.16%)</title><rect x="96.3739%" y="565" width="0.1612%" height="15" fill="rgb(213,124,26)" fg:x="1196" fg:w="2"/><text x="96.6239%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="96.3739%" y="549" width="0.1612%" height="15" fill="rgb(208,183,39)" fg:x="1196" fg:w="2"/><text x="96.6239%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="96.3739%" y="533" width="0.1612%" height="15" fill="rgb(222,116,36)" fg:x="1196" fg:w="2"/><text x="96.6239%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.3739%" y="517" width="0.1612%" height="15" fill="rgb(214,36,24)" fg:x="1196" fg:w="2"/><text x="96.6239%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4545%" y="501" width="0.0806%" height="15" fill="rgb(254,64,37)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4545%" y="485" width="0.0806%" height="15" fill="rgb(216,166,14)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4545%" y="469" width="0.0806%" height="15" fill="rgb(242,144,17)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4545%" y="453" width="0.0806%" height="15" fill="rgb(233,229,42)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.4545%" y="437" width="0.0806%" height="15" fill="rgb(221,204,47)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4545%" y="421" width="0.0806%" height="15" fill="rgb(230,26,44)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4545%" y="405" width="0.0806%" height="15" fill="rgb(242,209,3)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4545%" y="389" width="0.0806%" height="15" fill="rgb(229,32,19)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4545%" y="373" width="0.0806%" height="15" fill="rgb(211,49,50)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4545%" y="357" width="0.0806%" height="15" fill="rgb(208,171,21)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="96.4545%" y="341" width="0.0806%" height="15" fill="rgb(240,86,9)" fg:x="1197" fg:w="1"/><text x="96.7045%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.5351%" y="581" width="0.0806%" height="15" fill="rgb(207,169,47)" fg:x="1198" fg:w="1"/><text x="96.7851%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.6156%" y="549" width="0.0806%" height="15" fill="rgb(212,103,33)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.6156%" y="533" width="0.0806%" height="15" fill="rgb(209,86,21)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.6156%" y="517" width="0.0806%" height="15" fill="rgb(221,77,49)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.6156%" y="501" width="0.0806%" height="15" fill="rgb(244,188,21)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.6156%" y="485" width="0.0806%" height="15" fill="rgb(228,11,38)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.6156%" y="469" width="0.0806%" height="15" fill="rgb(222,158,25)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="96.6156%" y="453" width="0.0806%" height="15" fill="rgb(232,223,3)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.6156%" y="437" width="0.0806%" height="15" fill="rgb(218,55,0)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="96.5351%" y="597" width="0.4029%" height="15" fill="rgb(223,130,7)" fg:x="1198" fg:w="5"/><text x="96.7851%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="96.6156%" y="581" width="0.3223%" height="15" fill="rgb(246,183,32)" fg:x="1199" fg:w="4"/><text x="96.8656%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="96.6156%" y="565" width="0.3223%" height="15" fill="rgb(233,194,27)" fg:x="1199" fg:w="4"/><text x="96.8656%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="96.6962%" y="549" width="0.2417%" height="15" fill="rgb(244,187,35)" fg:x="1200" fg:w="3"/><text x="96.9462%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.6962%" y="533" width="0.2417%" height="15" fill="rgb(238,33,29)" fg:x="1200" fg:w="3"/><text x="96.9462%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="96.6962%" y="517" width="0.2417%" height="15" fill="rgb(235,216,15)" fg:x="1200" fg:w="3"/><text x="96.9462%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.6962%" y="501" width="0.2417%" height="15" fill="rgb(211,167,33)" fg:x="1200" fg:w="3"/><text x="96.9462%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="96.6962%" y="485" width="0.2417%" height="15" fill="rgb(235,74,3)" fg:x="1200" fg:w="3"/><text x="96.9462%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.6962%" y="469" width="0.2417%" height="15" fill="rgb(241,103,0)" fg:x="1200" fg:w="3"/><text x="96.9462%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.7768%" y="453" width="0.1612%" height="15" fill="rgb(223,138,54)" fg:x="1201" fg:w="2"/><text x="97.0268%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.7768%" y="437" width="0.1612%" height="15" fill="rgb(228,24,36)" fg:x="1201" fg:w="2"/><text x="97.0268%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.8574%" y="421" width="0.0806%" height="15" fill="rgb(215,14,8)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8574%" y="405" width="0.0806%" height="15" fill="rgb(231,9,2)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="96.8574%" y="389" width="0.0806%" height="15" fill="rgb(215,150,51)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.8574%" y="373" width="0.0806%" height="15" fill="rgb(254,124,6)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (6 samples, 0.48%)</title><rect x="96.5351%" y="629" width="0.4835%" height="15" fill="rgb(216,111,25)" fg:x="1198" fg:w="6"/><text x="96.7851%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="96.5351%" y="613" width="0.4835%" height="15" fill="rgb(237,87,46)" fg:x="1198" fg:w="6"/><text x="96.7851%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="96.9380%" y="597" width="0.0806%" height="15" fill="rgb(216,183,42)" fg:x="1203" fg:w="1"/><text x="97.1880%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.9380%" y="581" width="0.0806%" height="15" fill="rgb(214,175,46)" fg:x="1203" fg:w="1"/><text x="97.1880%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::OpenedScopeMut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.0185%" y="597" width="0.0806%" height="15" fill="rgb(247,223,23)" fg:x="1204" fg:w="1"/><text x="97.2685%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="97.0185%" y="613" width="0.1612%" height="15" fill="rgb(240,132,12)" fg:x="1204" fg:w="2"/><text x="97.2685%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="97.0991%" y="597" width="0.0806%" height="15" fill="rgb(245,123,48)" fg:x="1205" fg:w="1"/><text x="97.3491%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.0991%" y="581" width="0.0806%" height="15" fill="rgb(245,156,12)" fg:x="1205" fg:w="1"/><text x="97.3491%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="97.1797%" y="613" width="0.0806%" height="15" fill="rgb(212,48,35)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="97.1797%" y="597" width="0.0806%" height="15" fill="rgb(213,21,25)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.1797%" y="581" width="0.0806%" height="15" fill="rgb(215,17,16)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.1797%" y="565" width="0.0806%" height="15" fill="rgb(235,160,36)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.1797%" y="549" width="0.0806%" height="15" fill="rgb(248,141,20)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1797%" y="533" width="0.0806%" height="15" fill="rgb(253,123,32)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1797%" y="517" width="0.0806%" height="15" fill="rgb(214,72,40)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1797%" y="501" width="0.0806%" height="15" fill="rgb(234,122,41)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1797%" y="485" width="0.0806%" height="15" fill="rgb(236,55,21)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.1797%" y="469" width="0.0806%" height="15" fill="rgb(222,162,54)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1797%" y="453" width="0.0806%" height="15" fill="rgb(219,74,8)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1797%" y="437" width="0.0806%" height="15" fill="rgb(222,106,42)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1797%" y="421" width="0.0806%" height="15" fill="rgb(223,40,43)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1797%" y="405" width="0.0806%" height="15" fill="rgb(229,216,28)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1797%" y="389" width="0.0806%" height="15" fill="rgb(222,17,5)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.1797%" y="373" width="0.0806%" height="15" fill="rgb(212,51,2)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1797%" y="357" width="0.0806%" height="15" fill="rgb(243,213,35)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="367.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2603%" y="581" width="0.0806%" height="15" fill="rgb(218,68,26)" fg:x="1207" fg:w="1"/><text x="97.5103%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2603%" y="565" width="0.0806%" height="15" fill="rgb(214,135,33)" fg:x="1207" fg:w="1"/><text x="97.5103%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2603%" y="549" width="0.0806%" height="15" fill="rgb(248,7,20)" fg:x="1207" fg:w="1"/><text x="97.5103%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2603%" y="533" width="0.0806%" height="15" fill="rgb(209,147,4)" fg:x="1207" fg:w="1"/><text x="97.5103%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="97.3409%" y="581" width="0.0806%" height="15" fill="rgb(251,48,10)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.3409%" y="565" width="0.0806%" height="15" fill="rgb(226,62,22)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.3409%" y="549" width="0.0806%" height="15" fill="rgb(218,5,25)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="97.3409%" y="533" width="0.0806%" height="15" fill="rgb(240,229,8)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.3409%" y="517" width="0.0806%" height="15" fill="rgb(219,123,53)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="97.2603%" y="613" width="0.2417%" height="15" fill="rgb(239,77,49)" fg:x="1207" fg:w="3"/><text x="97.5103%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="97.2603%" y="597" width="0.2417%" height="15" fill="rgb(247,22,15)" fg:x="1207" fg:w="3"/><text x="97.5103%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4214%" y="581" width="0.0806%" height="15" fill="rgb(210,55,17)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4214%" y="565" width="0.0806%" height="15" fill="rgb(228,130,51)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="97.4214%" y="549" width="0.0806%" height="15" fill="rgb(206,81,33)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="97.4214%" y="533" width="0.0806%" height="15" fill="rgb(241,104,30)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="97.4214%" y="517" width="0.0806%" height="15" fill="rgb(240,88,12)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4214%" y="501" width="0.0806%" height="15" fill="rgb(249,116,19)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4214%" y="485" width="0.0806%" height="15" fill="rgb(250,218,1)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.4214%" y="469" width="0.0806%" height="15" fill="rgb(233,220,16)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="479.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="97.5020%" y="613" width="0.2417%" height="15" fill="rgb(248,195,9)" fg:x="1210" fg:w="3"/><text x="97.7520%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="97.5020%" y="597" width="0.2417%" height="15" fill="rgb(230,58,11)" fg:x="1210" fg:w="3"/><text x="97.7520%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="97.5020%" y="581" width="0.2417%" height="15" fill="rgb(217,125,51)" fg:x="1210" fg:w="3"/><text x="97.7520%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="97.5826%" y="565" width="0.1612%" height="15" fill="rgb(252,119,13)" fg:x="1211" fg:w="2"/><text x="97.8326%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.5826%" y="549" width="0.1612%" height="15" fill="rgb(245,23,2)" fg:x="1211" fg:w="2"/><text x="97.8326%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6632%" y="533" width="0.0806%" height="15" fill="rgb(216,98,41)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6632%" y="517" width="0.0806%" height="15" fill="rgb(228,181,52)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.6632%" y="501" width="0.0806%" height="15" fill="rgb(238,203,39)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.6632%" y="485" width="0.0806%" height="15" fill="rgb(214,56,7)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.6632%" y="469" width="0.0806%" height="15" fill="rgb(229,167,38)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.6632%" y="453" width="0.0806%" height="15" fill="rgb(242,135,4)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.6632%" y="437" width="0.0806%" height="15" fill="rgb(211,228,4)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.6632%" y="421" width="0.0806%" height="15" fill="rgb(206,139,51)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.6632%" y="405" width="0.0806%" height="15" fill="rgb(236,70,25)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.6632%" y="389" width="0.0806%" height="15" fill="rgb(224,211,44)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.6632%" y="373" width="0.0806%" height="15" fill="rgb(226,160,45)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6632%" y="357" width="0.0806%" height="15" fill="rgb(235,150,10)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.7438%" y="549" width="0.0806%" height="15" fill="rgb(253,222,52)" fg:x="1213" fg:w="1"/><text x="97.9938%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="97.7438%" y="613" width="0.1612%" height="15" fill="rgb(248,159,14)" fg:x="1213" fg:w="2"/><text x="97.9938%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="97.7438%" y="597" width="0.1612%" height="15" fill="rgb(252,161,4)" fg:x="1213" fg:w="2"/><text x="97.9938%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="97.7438%" y="581" width="0.1612%" height="15" fill="rgb(227,107,7)" fg:x="1213" fg:w="2"/><text x="97.9938%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="97.7438%" y="565" width="0.1612%" height="15" fill="rgb(248,227,35)" fg:x="1213" fg:w="2"/><text x="97.9938%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.8243%" y="549" width="0.0806%" height="15" fill="rgb(240,68,14)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.8243%" y="533" width="0.0806%" height="15" fill="rgb(243,5,47)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8243%" y="517" width="0.0806%" height="15" fill="rgb(225,134,14)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8243%" y="501" width="0.0806%" height="15" fill="rgb(225,207,41)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8243%" y="485" width="0.0806%" height="15" fill="rgb(207,214,21)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8243%" y="469" width="0.0806%" height="15" fill="rgb(230,100,48)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.8243%" y="453" width="0.0806%" height="15" fill="rgb(231,155,51)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.8243%" y="437" width="0.0806%" height="15" fill="rgb(252,98,23)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.8243%" y="421" width="0.0806%" height="15" fill="rgb(216,151,14)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.8243%" y="405" width="0.0806%" height="15" fill="rgb(250,20,49)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.8243%" y="389" width="0.0806%" height="15" fill="rgb(217,134,33)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.8243%" y="373" width="0.0806%" height="15" fill="rgb(205,94,24)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.8243%" y="357" width="0.0806%" height="15" fill="rgb(244,96,26)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.8243%" y="341" width="0.0806%" height="15" fill="rgb(218,48,4)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.8243%" y="325" width="0.0806%" height="15" fill="rgb(210,74,37)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8243%" y="309" width="0.0806%" height="15" fill="rgb(240,170,7)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="319.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="97.9049%" y="613" width="0.0806%" height="15" fill="rgb(251,120,48)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.9049%" y="597" width="0.0806%" height="15" fill="rgb(219,149,25)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.9049%" y="581" width="0.0806%" height="15" fill="rgb(223,222,45)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="97.9049%" y="565" width="0.0806%" height="15" fill="rgb(216,18,1)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (33 samples, 2.66%)</title><rect x="95.4069%" y="645" width="2.6591%" height="15" fill="rgb(251,184,12)" fg:x="1184" fg:w="33"/><text x="95.6569%" y="655.50">&lt;p..</text></g><g><title>plugins_core::location::change_location (13 samples, 1.05%)</title><rect x="97.0185%" y="629" width="1.0475%" height="15" fill="rgb(222,116,37)" fg:x="1204" fg:w="13"/><text x="97.2685%" y="639.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="97.9855%" y="613" width="0.0806%" height="15" fill="rgb(236,223,24)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="97.9855%" y="597" width="0.0806%" height="15" fill="rgb(229,38,32)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="607.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="97.9855%" y="581" width="0.0806%" height="15" fill="rgb(251,208,7)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.9855%" y="565" width="0.0806%" height="15" fill="rgb(207,226,43)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="97.9855%" y="549" width="0.0806%" height="15" fill="rgb(247,229,43)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.9855%" y="533" width="0.0806%" height="15" fill="rgb(217,201,52)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (83 samples, 6.69%)</title><rect x="91.4585%" y="837" width="6.6882%" height="15" fill="rgb(228,68,39)" fg:x="1135" fg:w="83"/><text x="91.7085%" y="847.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::apply_middleware (83 samples, 6.69%)</title><rect x="91.4585%" y="821" width="6.6882%" height="15" fill="rgb(218,138,7)" fg:x="1135" fg:w="83"/><text x="91.7085%" y="831.50">kernel::p..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (83 samples, 6.69%)</title><rect x="91.4585%" y="805" width="6.6882%" height="15" fill="rgb(230,78,37)" fg:x="1135" fg:w="83"/><text x="91.7085%" y="815.50">kernel::p..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (83 samples, 6.69%)</title><rect x="91.4585%" y="789" width="6.6882%" height="15" fill="rgb(246,177,36)" fg:x="1135" fg:w="83"/><text x="91.7085%" y="799.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (72 samples, 5.80%)</title><rect x="92.3449%" y="773" width="5.8018%" height="15" fill="rgb(231,190,6)" fg:x="1146" fg:w="72"/><text x="92.5949%" y="783.50">kernel:..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (72 samples, 5.80%)</title><rect x="92.3449%" y="757" width="5.8018%" height="15" fill="rgb(234,217,25)" fg:x="1146" fg:w="72"/><text x="92.5949%" y="767.50">&lt;plugin..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (72 samples, 5.80%)</title><rect x="92.3449%" y="741" width="5.8018%" height="15" fill="rgb(249,131,38)" fg:x="1146" fg:w="72"/><text x="92.5949%" y="751.50">kernel:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (72 samples, 5.80%)</title><rect x="92.3449%" y="725" width="5.8018%" height="15" fill="rgb(253,168,16)" fg:x="1146" fg:w="72"/><text x="92.5949%" y="735.50">core::o..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (72 samples, 5.80%)</title><rect x="92.3449%" y="709" width="5.8018%" height="15" fill="rgb(232,181,39)" fg:x="1146" fg:w="72"/><text x="92.5949%" y="719.50">kernel:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (72 samples, 5.80%)</title><rect x="92.3449%" y="693" width="5.8018%" height="15" fill="rgb(216,167,0)" fg:x="1146" fg:w="72"/><text x="92.5949%" y="703.50">core::o..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (72 samples, 5.80%)</title><rect x="92.3449%" y="677" width="5.8018%" height="15" fill="rgb(247,77,10)" fg:x="1146" fg:w="72"/><text x="92.5949%" y="687.50">&lt;alloc:..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (72 samples, 5.80%)</title><rect x="92.3449%" y="661" width="5.8018%" height="15" fill="rgb(220,28,10)" fg:x="1146" fg:w="72"/><text x="92.5949%" y="671.50">&lt;engine..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="98.0661%" y="645" width="0.0806%" height="15" fill="rgb(251,163,49)" fg:x="1217" fg:w="1"/><text x="98.3161%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="98.1467%" y="805" width="0.0806%" height="15" fill="rgb(249,148,50)" fg:x="1218" fg:w="1"/><text x="98.3967%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="98.1467%" y="789" width="0.0806%" height="15" fill="rgb(238,149,36)" fg:x="1218" fg:w="1"/><text x="98.3967%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.1467%" y="773" width="0.0806%" height="15" fill="rgb(248,191,13)" fg:x="1218" fg:w="1"/><text x="98.3967%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.1467%" y="757" width="0.0806%" height="15" fill="rgb(233,73,17)" fg:x="1218" fg:w="1"/><text x="98.3967%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.1467%" y="741" width="0.0806%" height="15" fill="rgb(233,197,11)" fg:x="1218" fg:w="1"/><text x="98.3967%" y="751.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="98.1467%" y="725" width="0.0806%" height="15" fill="rgb(245,42,8)" fg:x="1218" fg:w="1"/><text x="98.3967%" y="735.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.2272%" y="741" width="0.0806%" height="15" fill="rgb(217,39,50)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="751.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.2272%" y="725" width="0.0806%" height="15" fill="rgb(250,23,13)" fg:x="1219" fg:w="1"/><text x="98.4772%" y="735.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.3884%" y="709" width="0.0806%" height="15" fill="rgb(219,204,45)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3884%" y="693" width="0.0806%" height="15" fill="rgb(248,54,16)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="703.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.5496%" y="677" width="0.0806%" height="15" fill="rgb(213,16,14)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="687.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.5496%" y="661" width="0.0806%" height="15" fill="rgb(245,18,44)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="671.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="98.2272%" y="789" width="0.4835%" height="15" fill="rgb(232,10,47)" fg:x="1219" fg:w="6"/><text x="98.4772%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="98.2272%" y="773" width="0.4835%" height="15" fill="rgb(237,185,33)" fg:x="1219" fg:w="6"/><text x="98.4772%" y="783.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="98.2272%" y="757" width="0.4835%" height="15" fill="rgb(224,223,44)" fg:x="1219" fg:w="6"/><text x="98.4772%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="98.3078%" y="741" width="0.4029%" height="15" fill="rgb(238,98,11)" fg:x="1220" fg:w="5"/><text x="98.5578%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.3884%" y="725" width="0.3223%" height="15" fill="rgb(217,33,34)" fg:x="1221" fg:w="4"/><text x="98.6384%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.4690%" y="709" width="0.2417%" height="15" fill="rgb(232,193,38)" fg:x="1222" fg:w="3"/><text x="98.7190%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.4690%" y="693" width="0.2417%" height="15" fill="rgb(231,23,4)" fg:x="1222" fg:w="3"/><text x="98.7190%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6301%" y="677" width="0.0806%" height="15" fill="rgb(218,154,4)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="98.6301%" y="661" width="0.0806%" height="15" fill="rgb(243,171,32)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="98.6301%" y="645" width="0.0806%" height="15" fill="rgb(210,102,6)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (8 samples, 0.64%)</title><rect x="98.2272%" y="805" width="0.6446%" height="15" fill="rgb(205,134,8)" fg:x="1219" fg:w="8"/><text x="98.4772%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.7107%" y="789" width="0.1612%" height="15" fill="rgb(240,115,17)" fg:x="1225" fg:w="2"/><text x="98.9607%" y="799.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.7107%" y="773" width="0.1612%" height="15" fill="rgb(213,62,14)" fg:x="1225" fg:w="2"/><text x="98.9607%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.7913%" y="757" width="0.0806%" height="15" fill="rgb(249,149,16)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.81%)</title><rect x="98.1467%" y="837" width="0.8058%" height="15" fill="rgb(220,195,22)" fg:x="1218" fg:w="10"/><text x="98.3967%" y="847.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.81%)</title><rect x="98.1467%" y="821" width="0.8058%" height="15" fill="rgb(211,106,49)" fg:x="1218" fg:w="10"/><text x="98.3967%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.8719%" y="805" width="0.0806%" height="15" fill="rgb(214,176,52)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.8719%" y="789" width="0.0806%" height="15" fill="rgb(212,121,30)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.8719%" y="773" width="0.0806%" height="15" fill="rgb(231,167,39)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8719%" y="757" width="0.0806%" height="15" fill="rgb(233,93,22)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8719%" y="741" width="0.0806%" height="15" fill="rgb(242,187,26)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8719%" y="725" width="0.0806%" height="15" fill="rgb(209,152,0)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8719%" y="709" width="0.0806%" height="15" fill="rgb(208,174,22)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8719%" y="693" width="0.0806%" height="15" fill="rgb(216,172,41)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8719%" y="677" width="0.0806%" height="15" fill="rgb(238,206,48)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="98.9525%" y="741" width="0.0806%" height="15" fill="rgb(229,70,36)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.9525%" y="725" width="0.0806%" height="15" fill="rgb(230,152,25)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="98.9525%" y="757" width="0.1612%" height="15" fill="rgb(243,173,54)" fg:x="1228" fg:w="2"/><text x="99.2025%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.0330%" y="741" width="0.0806%" height="15" fill="rgb(252,104,23)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.0330%" y="725" width="0.0806%" height="15" fill="rgb(224,24,50)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0330%" y="709" width="0.0806%" height="15" fill="rgb(212,13,43)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0330%" y="693" width="0.0806%" height="15" fill="rgb(243,34,26)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0330%" y="677" width="0.0806%" height="15" fill="rgb(239,209,5)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0330%" y="661" width="0.0806%" height="15" fill="rgb(239,212,43)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.0330%" y="645" width="0.0806%" height="15" fill="rgb(228,72,25)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0330%" y="629" width="0.0806%" height="15" fill="rgb(205,82,49)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0330%" y="613" width="0.0806%" height="15" fill="rgb(221,205,24)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0330%" y="597" width="0.0806%" height="15" fill="rgb(206,213,29)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0330%" y="581" width="0.0806%" height="15" fill="rgb(228,180,8)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0330%" y="565" width="0.0806%" height="15" fill="rgb(217,131,9)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="99.0330%" y="549" width="0.0806%" height="15" fill="rgb(207,188,14)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.0330%" y="533" width="0.0806%" height="15" fill="rgb(254,82,24)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="99.0330%" y="517" width="0.0806%" height="15" fill="rgb(209,29,48)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="98.9525%" y="789" width="0.3223%" height="15" fill="rgb(248,24,3)" fg:x="1228" fg:w="4"/><text x="99.2025%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="98.9525%" y="773" width="0.3223%" height="15" fill="rgb(209,134,11)" fg:x="1228" fg:w="4"/><text x="99.2025%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="99.1136%" y="757" width="0.1612%" height="15" fill="rgb(253,54,47)" fg:x="1230" fg:w="2"/><text x="99.3636%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="99.1136%" y="741" width="0.1612%" height="15" fill="rgb(214,163,42)" fg:x="1230" fg:w="2"/><text x="99.3636%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.1136%" y="725" width="0.1612%" height="15" fill="rgb(206,25,12)" fg:x="1230" fg:w="2"/><text x="99.3636%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1942%" y="709" width="0.0806%" height="15" fill="rgb(240,49,44)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1942%" y="693" width="0.0806%" height="15" fill="rgb(245,4,38)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1942%" y="677" width="0.0806%" height="15" fill="rgb(215,72,38)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1942%" y="661" width="0.0806%" height="15" fill="rgb(215,123,24)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.1942%" y="645" width="0.0806%" height="15" fill="rgb(242,140,44)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1942%" y="629" width="0.0806%" height="15" fill="rgb(243,36,26)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1942%" y="613" width="0.0806%" height="15" fill="rgb(207,91,21)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1942%" y="597" width="0.0806%" height="15" fill="rgb(253,111,50)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1942%" y="581" width="0.0806%" height="15" fill="rgb(228,163,27)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1942%" y="565" width="0.0806%" height="15" fill="rgb(205,182,13)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="575.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.2748%" y="773" width="0.0806%" height="15" fill="rgb(247,194,0)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2748%" y="757" width="0.0806%" height="15" fill="rgb(241,58,47)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2748%" y="741" width="0.0806%" height="15" fill="rgb(219,25,53)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2748%" y="725" width="0.0806%" height="15" fill="rgb(210,11,24)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2748%" y="709" width="0.0806%" height="15" fill="rgb(247,114,30)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="719.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.2748%" y="693" width="0.0806%" height="15" fill="rgb(213,74,28)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="703.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.2748%" y="677" width="0.0806%" height="15" fill="rgb(208,210,48)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.3554%" y="741" width="0.0806%" height="15" fill="rgb(218,46,19)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3554%" y="725" width="0.0806%" height="15" fill="rgb(242,194,21)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="735.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3554%" y="709" width="0.0806%" height="15" fill="rgb(229,72,4)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3554%" y="693" width="0.0806%" height="15" fill="rgb(231,58,6)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="703.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3554%" y="677" width="0.0806%" height="15" fill="rgb(252,78,15)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.3554%" y="661" width="0.0806%" height="15" fill="rgb(246,64,50)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.3554%" y="645" width="0.0806%" height="15" fill="rgb(217,41,24)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.56%)</title><rect x="98.9525%" y="821" width="0.5641%" height="15" fill="rgb(246,48,46)" fg:x="1228" fg:w="7"/><text x="99.2025%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="98.9525%" y="805" width="0.5641%" height="15" fill="rgb(210,188,31)" fg:x="1228" fg:w="7"/><text x="99.2025%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (3 samples, 0.24%)</title><rect x="99.2748%" y="789" width="0.2417%" height="15" fill="rgb(211,152,13)" fg:x="1232" fg:w="3"/><text x="99.5248%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.3554%" y="773" width="0.1612%" height="15" fill="rgb(225,3,9)" fg:x="1233" fg:w="2"/><text x="99.6054%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.3554%" y="757" width="0.1612%" height="15" fill="rgb(209,228,2)" fg:x="1233" fg:w="2"/><text x="99.6054%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.4359%" y="741" width="0.0806%" height="15" fill="rgb(238,228,1)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4359%" y="725" width="0.0806%" height="15" fill="rgb(211,198,35)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.4359%" y="709" width="0.0806%" height="15" fill="rgb(248,76,52)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.5165%" y="661" width="0.0806%" height="15" fill="rgb(227,204,49)" fg:x="1235" fg:w="1"/><text x="99.7665%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (9 samples, 0.73%)</title><rect x="98.9525%" y="837" width="0.7252%" height="15" fill="rgb(254,148,46)" fg:x="1228" fg:w="9"/><text x="99.2025%" y="847.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="99.5165%" y="821" width="0.1612%" height="15" fill="rgb(252,97,43)" fg:x="1235" fg:w="2"/><text x="99.7665%" y="831.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="99.5165%" y="805" width="0.1612%" height="15" fill="rgb(212,80,12)" fg:x="1235" fg:w="2"/><text x="99.7665%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="99.5165%" y="789" width="0.1612%" height="15" fill="rgb(254,99,49)" fg:x="1235" fg:w="2"/><text x="99.7665%" y="799.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="99.5165%" y="773" width="0.1612%" height="15" fill="rgb(206,194,15)" fg:x="1235" fg:w="2"/><text x="99.7665%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="99.5165%" y="757" width="0.1612%" height="15" fill="rgb(226,19,53)" fg:x="1235" fg:w="2"/><text x="99.7665%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="99.5165%" y="741" width="0.1612%" height="15" fill="rgb(246,39,21)" fg:x="1235" fg:w="2"/><text x="99.7665%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="99.5165%" y="725" width="0.1612%" height="15" fill="rgb(208,4,51)" fg:x="1235" fg:w="2"/><text x="99.7665%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="99.5165%" y="709" width="0.1612%" height="15" fill="rgb(205,70,9)" fg:x="1235" fg:w="2"/><text x="99.7665%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="99.5165%" y="693" width="0.1612%" height="15" fill="rgb(238,107,40)" fg:x="1235" fg:w="2"/><text x="99.7665%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="99.5165%" y="677" width="0.1612%" height="15" fill="rgb(251,94,20)" fg:x="1235" fg:w="2"/><text x="99.7665%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.5971%" y="661" width="0.0806%" height="15" fill="rgb(238,124,23)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.5971%" y="645" width="0.0806%" height="15" fill="rgb(236,18,23)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.5971%" y="629" width="0.0806%" height="15" fill="rgb(236,56,32)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="639.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="99.5971%" y="613" width="0.0806%" height="15" fill="rgb(244,115,51)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.5971%" y="597" width="0.0806%" height="15" fill="rgb(228,170,36)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.5971%" y="581" width="0.0806%" height="15" fill="rgb(205,135,5)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.5971%" y="565" width="0.0806%" height="15" fill="rgb(244,153,21)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="575.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="99.5971%" y="549" width="0.0806%" height="15" fill="rgb(241,51,45)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="559.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="99.5971%" y="533" width="0.0806%" height="15" fill="rgb(235,30,2)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.5971%" y="517" width="0.0806%" height="15" fill="rgb(230,138,17)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.5971%" y="501" width="0.0806%" height="15" fill="rgb(225,227,46)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.5971%" y="485" width="0.0806%" height="15" fill="rgb(242,120,29)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.5971%" y="469" width="0.0806%" height="15" fill="rgb(214,204,1)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.5971%" y="453" width="0.0806%" height="15" fill="rgb(239,202,12)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.5971%" y="437" width="0.0806%" height="15" fill="rgb(221,101,34)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.5971%" y="421" width="0.0806%" height="15" fill="rgb(215,109,50)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="431.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.6777%" y="837" width="0.0806%" height="15" fill="rgb(229,199,13)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="99.6777%" y="821" width="0.0806%" height="15" fill="rgb(253,82,26)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="831.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.6777%" y="805" width="0.0806%" height="15" fill="rgb(205,57,20)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="815.50"></text></g><g><title>&lt;plugins_core::chat::parser::SpeakActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.6777%" y="789" width="0.0806%" height="15" fill="rgb(207,57,32)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="799.50"></text></g><g><title>&lt;kernel::session::SetSession as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.7583%" y="837" width="0.0806%" height="15" fill="rgb(235,173,42)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="847.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.8388%" y="725" width="0.0806%" height="15" fill="rgb(230,147,10)" fg:x="1239" fg:w="1"/><text x="100.0888%" y="735.50"></text></g><g><title>all (1,241 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(220,135,16)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1215.50"></text></g><g><title>simple-20ff020b (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1189" width="100.0000%" height="15" fill="rgb(239,28,10)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1199.50">simple-20ff020b</text></g><g><title>_start (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(220,197,38)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1183.50">_start</text></g><g><title>__libc_start_main (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(217,13,1)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1167.50">__libc_start_main</text></g><g><title>main (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(225,34,30)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1151.50">main</text></g><g><title>std::rt::lang_start_internal (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(234,19,10)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1135.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(237,68,47)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1119.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(210,125,44)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1103.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(206,207,2)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1087.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(207,198,43)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1071.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(249,58,35)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(236,66,11)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(215,104,28)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1023.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,241 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(221,172,14)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1007.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,241 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(251,215,21)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="991.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,241 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(215,154,36)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="975.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,241 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(245,85,25)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="959.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,241 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(254,37,10)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="943.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,241 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(248,63,2)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="927.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (266 samples, 21.43%)</title><rect x="78.5657%" y="901" width="21.4343%" height="15" fill="rgb(222,195,50)" fg:x="975" fg:w="266"/><text x="78.8157%" y="911.50">&lt;criterion::routine::Function&lt;M,F,..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (266 samples, 21.43%)</title><rect x="78.5657%" y="885" width="21.4343%" height="15" fill="rgb(218,157,4)" fg:x="975" fg:w="266"/><text x="78.8157%" y="895.50">criterion::bencher::Bencher&lt;M&gt;::it..</text></g><g><title>tests::evaluate_text_in_new_domain (266 samples, 21.43%)</title><rect x="78.5657%" y="869" width="21.4343%" height="15" fill="rgb(217,186,23)" fg:x="975" fg:w="266"/><text x="78.8157%" y="879.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (106 samples, 8.54%)</title><rect x="91.4585%" y="853" width="8.5415%" height="15" fill="rgb(211,100,12)" fg:x="1135" fg:w="106"/><text x="91.7085%" y="863.50">engine::sess..</text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="99.8388%" y="837" width="0.1612%" height="15" fill="rgb(252,7,25)" fg:x="1239" fg:w="2"/><text x="100.0888%" y="847.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="99.8388%" y="821" width="0.1612%" height="15" fill="rgb(219,6,30)" fg:x="1239" fg:w="2"/><text x="100.0888%" y="831.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.8388%" y="805" width="0.1612%" height="15" fill="rgb(228,68,4)" fg:x="1239" fg:w="2"/><text x="100.0888%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.8388%" y="789" width="0.1612%" height="15" fill="rgb(238,104,53)" fg:x="1239" fg:w="2"/><text x="100.0888%" y="799.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.8388%" y="773" width="0.1612%" height="15" fill="rgb(209,110,10)" fg:x="1239" fg:w="2"/><text x="100.0888%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.8388%" y="757" width="0.1612%" height="15" fill="rgb(214,190,40)" fg:x="1239" fg:w="2"/><text x="100.0888%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.8388%" y="741" width="0.1612%" height="15" fill="rgb(222,103,43)" fg:x="1239" fg:w="2"/><text x="100.0888%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.9194%" y="725" width="0.0806%" height="15" fill="rgb(247,105,41)" fg:x="1240" fg:w="1"/><text x="100.1694%" y="735.50"></text></g></svg></svg>