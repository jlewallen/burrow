<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1142" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1125.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1125.00"> </text><svg id="frames" x="10" width="1180" total_samples="1333"><g><title>&lt;engine::session::Session as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0750%" y="725" width="0.0750%" height="15" fill="rgb(211,9,35)" fg:x="1" fg:w="1"/><text x="0.3250%" y="735.50"></text></g><g><title>kernel::session::set_my_session (1 samples, 0.08%)</title><rect x="0.0750%" y="709" width="0.0750%" height="15" fill="rgb(205,152,21)" fg:x="1" fg:w="1"/><text x="0.3250%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.1500%" y="725" width="0.0750%" height="15" fill="rgb(249,21,27)" fg:x="2" fg:w="1"/><text x="0.4000%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.1500%" y="709" width="0.0750%" height="15" fill="rgb(252,29,24)" fg:x="2" fg:w="1"/><text x="0.4000%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.2251%" y="693" width="0.0750%" height="15" fill="rgb(230,130,50)" fg:x="3" fg:w="1"/><text x="0.4751%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="0.4501%" y="613" width="0.1500%" height="15" fill="rgb(239,144,14)" fg:x="6" fg:w="2"/><text x="0.7001%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5251%" y="597" width="0.0750%" height="15" fill="rgb(227,111,50)" fg:x="7" fg:w="1"/><text x="0.7751%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="0.6752%" y="597" width="0.1500%" height="15" fill="rgb(254,84,20)" fg:x="9" fg:w="2"/><text x="0.9252%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="0.7502%" y="581" width="0.0750%" height="15" fill="rgb(232,90,48)" fg:x="10" fg:w="1"/><text x="1.0002%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.68%)</title><rect x="0.3001%" y="661" width="0.6752%" height="15" fill="rgb(253,63,47)" fg:x="4" fg:w="9"/><text x="0.5501%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.60%)</title><rect x="0.3751%" y="645" width="0.6002%" height="15" fill="rgb(251,146,35)" fg:x="5" fg:w="8"/><text x="0.6251%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.53%)</title><rect x="0.4501%" y="629" width="0.5251%" height="15" fill="rgb(229,192,35)" fg:x="6" fg:w="7"/><text x="0.7001%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.38%)</title><rect x="0.6002%" y="613" width="0.3751%" height="15" fill="rgb(225,68,9)" fg:x="8" fg:w="5"/><text x="0.8502%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="0.8252%" y="597" width="0.1500%" height="15" fill="rgb(214,97,34)" fg:x="11" fg:w="2"/><text x="1.0752%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.05%)</title><rect x="0.0000%" y="741" width="1.0503%" height="15" fill="rgb(253,31,26)" fg:x="0" fg:w="14"/><text x="0.2500%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (11 samples, 0.83%)</title><rect x="0.2251%" y="725" width="0.8252%" height="15" fill="rgb(225,151,47)" fg:x="3" fg:w="11"/><text x="0.4751%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.83%)</title><rect x="0.2251%" y="709" width="0.8252%" height="15" fill="rgb(206,185,9)" fg:x="3" fg:w="11"/><text x="0.4751%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (10 samples, 0.75%)</title><rect x="0.3001%" y="693" width="0.7502%" height="15" fill="rgb(249,65,17)" fg:x="4" fg:w="10"/><text x="0.5501%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.75%)</title><rect x="0.3001%" y="677" width="0.7502%" height="15" fill="rgb(220,110,10)" fg:x="4" fg:w="10"/><text x="0.5501%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9752%" y="661" width="0.0750%" height="15" fill="rgb(222,198,49)" fg:x="13" fg:w="1"/><text x="1.2252%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.1253%" y="549" width="0.0750%" height="15" fill="rgb(239,81,13)" fg:x="15" fg:w="1"/><text x="1.3753%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="1.1253%" y="533" width="0.0750%" height="15" fill="rgb(216,128,11)" fg:x="15" fg:w="1"/><text x="1.3753%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="1.1253%" y="517" width="0.0750%" height="15" fill="rgb(247,156,8)" fg:x="15" fg:w="1"/><text x="1.3753%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.15%)</title><rect x="1.2003%" y="533" width="0.1500%" height="15" fill="rgb(219,173,1)" fg:x="16" fg:w="2"/><text x="1.4503%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="1.2003%" y="517" width="0.1500%" height="15" fill="rgb(227,42,24)" fg:x="16" fg:w="2"/><text x="1.4503%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (5 samples, 0.38%)</title><rect x="1.1253%" y="581" width="0.3751%" height="15" fill="rgb(253,219,50)" fg:x="15" fg:w="5"/><text x="1.3753%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.38%)</title><rect x="1.1253%" y="565" width="0.3751%" height="15" fill="rgb(215,191,54)" fg:x="15" fg:w="5"/><text x="1.3753%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.30%)</title><rect x="1.2003%" y="549" width="0.3001%" height="15" fill="rgb(238,83,12)" fg:x="16" fg:w="4"/><text x="1.4503%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="1.3503%" y="533" width="0.1500%" height="15" fill="rgb(205,124,9)" fg:x="18" fg:w="2"/><text x="1.6003%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="1.3503%" y="517" width="0.1500%" height="15" fill="rgb(253,174,7)" fg:x="18" fg:w="2"/><text x="1.6003%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="1.4254%" y="501" width="0.0750%" height="15" fill="rgb(206,134,49)" fg:x="19" fg:w="1"/><text x="1.6754%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.4254%" y="485" width="0.0750%" height="15" fill="rgb(221,89,20)" fg:x="19" fg:w="1"/><text x="1.6754%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.4254%" y="469" width="0.0750%" height="15" fill="rgb(240,205,13)" fg:x="19" fg:w="1"/><text x="1.6754%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="1.4254%" y="453" width="0.0750%" height="15" fill="rgb(237,174,32)" fg:x="19" fg:w="1"/><text x="1.6754%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="1.4254%" y="437" width="0.0750%" height="15" fill="rgb(226,12,15)" fg:x="19" fg:w="1"/><text x="1.6754%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.53%)</title><rect x="1.0503%" y="645" width="0.5251%" height="15" fill="rgb(245,160,52)" fg:x="14" fg:w="7"/><text x="1.3003%" y="655.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.53%)</title><rect x="1.0503%" y="629" width="0.5251%" height="15" fill="rgb(253,80,21)" fg:x="14" fg:w="7"/><text x="1.3003%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.53%)</title><rect x="1.0503%" y="613" width="0.5251%" height="15" fill="rgb(231,225,22)" fg:x="14" fg:w="7"/><text x="1.3003%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.45%)</title><rect x="1.1253%" y="597" width="0.4501%" height="15" fill="rgb(253,185,12)" fg:x="15" fg:w="6"/><text x="1.3753%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.5004%" y="581" width="0.0750%" height="15" fill="rgb(234,197,21)" fg:x="20" fg:w="1"/><text x="1.7504%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.5004%" y="565" width="0.0750%" height="15" fill="rgb(210,47,30)" fg:x="20" fg:w="1"/><text x="1.7504%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="1.5004%" y="549" width="0.0750%" height="15" fill="rgb(246,139,27)" fg:x="20" fg:w="1"/><text x="1.7504%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.5004%" y="533" width="0.0750%" height="15" fill="rgb(226,130,16)" fg:x="20" fg:w="1"/><text x="1.7504%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.5004%" y="517" width="0.0750%" height="15" fill="rgb(237,208,20)" fg:x="20" fg:w="1"/><text x="1.7504%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="1.5754%" y="597" width="0.0750%" height="15" fill="rgb(245,186,28)" fg:x="21" fg:w="1"/><text x="1.8254%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="1.5754%" y="581" width="0.0750%" height="15" fill="rgb(238,105,39)" fg:x="21" fg:w="1"/><text x="1.8254%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.6504%" y="501" width="0.0750%" height="15" fill="rgb(253,228,11)" fg:x="22" fg:w="1"/><text x="1.9004%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.6504%" y="485" width="0.0750%" height="15" fill="rgb(224,136,38)" fg:x="22" fg:w="1"/><text x="1.9004%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.6504%" y="469" width="0.0750%" height="15" fill="rgb(211,3,25)" fg:x="22" fg:w="1"/><text x="1.9004%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (10 samples, 0.75%)</title><rect x="1.0503%" y="709" width="0.7502%" height="15" fill="rgb(238,66,34)" fg:x="14" fg:w="10"/><text x="1.3003%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.75%)</title><rect x="1.0503%" y="693" width="0.7502%" height="15" fill="rgb(223,188,11)" fg:x="14" fg:w="10"/><text x="1.3003%" y="703.50"></text></g><g><title>engine::internal::Entities::add_persisted (10 samples, 0.75%)</title><rect x="1.0503%" y="677" width="0.7502%" height="15" fill="rgb(221,10,35)" fg:x="14" fg:w="10"/><text x="1.3003%" y="687.50"></text></g><g><title>kernel::model::deserialize_entity (10 samples, 0.75%)</title><rect x="1.0503%" y="661" width="0.7502%" height="15" fill="rgb(223,18,44)" fg:x="14" fg:w="10"/><text x="1.3003%" y="671.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.23%)</title><rect x="1.5754%" y="645" width="0.2251%" height="15" fill="rgb(220,97,41)" fg:x="21" fg:w="3"/><text x="1.8254%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="1.5754%" y="629" width="0.2251%" height="15" fill="rgb(206,95,45)" fg:x="21" fg:w="3"/><text x="1.8254%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="1.5754%" y="613" width="0.2251%" height="15" fill="rgb(209,96,13)" fg:x="21" fg:w="3"/><text x="1.8254%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="1.6504%" y="597" width="0.1500%" height="15" fill="rgb(237,39,34)" fg:x="22" fg:w="2"/><text x="1.9004%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="1.6504%" y="581" width="0.1500%" height="15" fill="rgb(213,49,47)" fg:x="22" fg:w="2"/><text x="1.9004%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="1.6504%" y="565" width="0.1500%" height="15" fill="rgb(205,107,27)" fg:x="22" fg:w="2"/><text x="1.9004%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="1.6504%" y="549" width="0.1500%" height="15" fill="rgb(212,142,9)" fg:x="22" fg:w="2"/><text x="1.9004%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="1.6504%" y="533" width="0.1500%" height="15" fill="rgb(226,182,0)" fg:x="22" fg:w="2"/><text x="1.9004%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="1.6504%" y="517" width="0.1500%" height="15" fill="rgb(231,3,53)" fg:x="22" fg:w="2"/><text x="1.9004%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="1.7254%" y="501" width="0.0750%" height="15" fill="rgb(246,111,28)" fg:x="23" fg:w="1"/><text x="1.9754%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="1.7254%" y="485" width="0.0750%" height="15" fill="rgb(254,183,7)" fg:x="23" fg:w="1"/><text x="1.9754%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.8005%" y="661" width="0.0750%" height="15" fill="rgb(247,177,28)" fg:x="24" fg:w="1"/><text x="2.0505%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.8005%" y="645" width="0.0750%" height="15" fill="rgb(244,43,1)" fg:x="24" fg:w="1"/><text x="2.0505%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="1.8005%" y="629" width="0.0750%" height="15" fill="rgb(207,2,35)" fg:x="24" fg:w="1"/><text x="2.0505%" y="639.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.15%)</title><rect x="1.8005%" y="709" width="0.1500%" height="15" fill="rgb(213,83,22)" fg:x="24" fg:w="2"/><text x="2.0505%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.15%)</title><rect x="1.8005%" y="693" width="0.1500%" height="15" fill="rgb(246,212,13)" fg:x="24" fg:w="2"/><text x="2.0505%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.15%)</title><rect x="1.8005%" y="677" width="0.1500%" height="15" fill="rgb(213,127,46)" fg:x="24" fg:w="2"/><text x="2.0505%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.8755%" y="661" width="0.0750%" height="15" fill="rgb(219,215,39)" fg:x="25" fg:w="1"/><text x="2.1255%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.8755%" y="645" width="0.0750%" height="15" fill="rgb(227,99,17)" fg:x="25" fg:w="1"/><text x="2.1255%" y="655.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="1.9505%" y="709" width="0.0750%" height="15" fill="rgb(208,155,18)" fg:x="26" fg:w="1"/><text x="2.2005%" y="719.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="1.9505%" y="693" width="0.0750%" height="15" fill="rgb(223,204,38)" fg:x="26" fg:w="1"/><text x="2.2005%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="1.9505%" y="677" width="0.0750%" height="15" fill="rgb(212,114,21)" fg:x="26" fg:w="1"/><text x="2.2005%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="1.9505%" y="661" width="0.0750%" height="15" fill="rgb(250,74,13)" fg:x="26" fg:w="1"/><text x="2.2005%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="1.9505%" y="645" width="0.0750%" height="15" fill="rgb(234,7,1)" fg:x="26" fg:w="1"/><text x="2.2005%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="1.9505%" y="629" width="0.0750%" height="15" fill="rgb(207,138,31)" fg:x="26" fg:w="1"/><text x="2.2005%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.1005%" y="677" width="0.0750%" height="15" fill="rgb(215,186,42)" fg:x="28" fg:w="1"/><text x="2.3505%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.1005%" y="661" width="0.0750%" height="15" fill="rgb(229,205,49)" fg:x="28" fg:w="1"/><text x="2.3505%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.1005%" y="645" width="0.0750%" height="15" fill="rgb(216,156,32)" fg:x="28" fg:w="1"/><text x="2.3505%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="2.1005%" y="629" width="0.0750%" height="15" fill="rgb(238,7,21)" fg:x="28" fg:w="1"/><text x="2.3505%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.1005%" y="613" width="0.0750%" height="15" fill="rgb(249,190,22)" fg:x="28" fg:w="1"/><text x="2.3505%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.1005%" y="597" width="0.0750%" height="15" fill="rgb(253,51,31)" fg:x="28" fg:w="1"/><text x="2.3505%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="2.1005%" y="581" width="0.0750%" height="15" fill="rgb(237,90,54)" fg:x="28" fg:w="1"/><text x="2.3505%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.1005%" y="565" width="0.0750%" height="15" fill="rgb(250,214,33)" fg:x="28" fg:w="1"/><text x="2.3505%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.1005%" y="549" width="0.0750%" height="15" fill="rgb(237,10,49)" fg:x="28" fg:w="1"/><text x="2.3505%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.1005%" y="533" width="0.0750%" height="15" fill="rgb(241,56,36)" fg:x="28" fg:w="1"/><text x="2.3505%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.1005%" y="517" width="0.0750%" height="15" fill="rgb(227,164,12)" fg:x="28" fg:w="1"/><text x="2.3505%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.1005%" y="501" width="0.0750%" height="15" fill="rgb(249,149,35)" fg:x="28" fg:w="1"/><text x="2.3505%" y="511.50"></text></g><g><title>libloading::library_filename (2 samples, 0.15%)</title><rect x="2.1755%" y="677" width="0.1500%" height="15" fill="rgb(238,227,50)" fg:x="29" fg:w="2"/><text x="2.4255%" y="687.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="2.2506%" y="661" width="0.0750%" height="15" fill="rgb(235,102,45)" fg:x="30" fg:w="1"/><text x="2.5006%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.2506%" y="645" width="0.0750%" height="15" fill="rgb(211,10,38)" fg:x="30" fg:w="1"/><text x="2.5006%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.2506%" y="629" width="0.0750%" height="15" fill="rgb(219,77,48)" fg:x="30" fg:w="1"/><text x="2.5006%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.2506%" y="613" width="0.0750%" height="15" fill="rgb(246,6,15)" fg:x="30" fg:w="1"/><text x="2.5006%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="2.2506%" y="597" width="0.0750%" height="15" fill="rgb(207,220,2)" fg:x="30" fg:w="1"/><text x="2.5006%" y="607.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="2.7007%" y="629" width="0.0750%" height="15" fill="rgb(242,48,14)" fg:x="36" fg:w="1"/><text x="2.9507%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.7757%" y="629" width="0.0750%" height="15" fill="rgb(218,19,27)" fg:x="37" fg:w="1"/><text x="3.0257%" y="639.50"></text></g><g><title>dlerror (8 samples, 0.60%)</title><rect x="2.3256%" y="661" width="0.6002%" height="15" fill="rgb(228,0,35)" fg:x="31" fg:w="8"/><text x="2.5756%" y="671.50"></text></g><g><title>__asprintf (8 samples, 0.60%)</title><rect x="2.3256%" y="645" width="0.6002%" height="15" fill="rgb(244,142,54)" fg:x="31" fg:w="8"/><text x="2.5756%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.8507%" y="629" width="0.0750%" height="15" fill="rgb(243,217,40)" fg:x="38" fg:w="1"/><text x="3.1007%" y="639.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (37 samples, 2.78%)</title><rect x="1.0503%" y="741" width="2.7757%" height="15" fill="rgb(207,114,16)" fg:x="14" fg:w="37"/><text x="1.3003%" y="751.50">&lt;e..</text></g><g><title>engine::session::Session::new (37 samples, 2.78%)</title><rect x="1.0503%" y="725" width="2.7757%" height="15" fill="rgb(224,33,25)" fg:x="14" fg:w="37"/><text x="1.3003%" y="735.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (24 samples, 1.80%)</title><rect x="2.0255%" y="709" width="1.8005%" height="15" fill="rgb(230,93,54)" fg:x="27" fg:w="24"/><text x="2.2755%" y="719.50">k..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (24 samples, 1.80%)</title><rect x="2.0255%" y="693" width="1.8005%" height="15" fill="rgb(224,56,24)" fg:x="27" fg:w="24"/><text x="2.2755%" y="703.50">&lt;..</text></g><g><title>libloading::os::unix::Library::open (20 samples, 1.50%)</title><rect x="2.3256%" y="677" width="1.5004%" height="15" fill="rgb(235,189,50)" fg:x="31" fg:w="20"/><text x="2.5756%" y="687.50"></text></g><g><title>dlopen (12 samples, 0.90%)</title><rect x="2.9257%" y="661" width="0.9002%" height="15" fill="rgb(242,173,8)" fg:x="39" fg:w="12"/><text x="3.1757%" y="671.50"></text></g><g><title>_dl_catch_error (12 samples, 0.90%)</title><rect x="2.9257%" y="645" width="0.9002%" height="15" fill="rgb(209,206,10)" fg:x="39" fg:w="12"/><text x="3.1757%" y="655.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.90%)</title><rect x="2.9257%" y="629" width="0.9002%" height="15" fill="rgb(213,182,44)" fg:x="39" fg:w="12"/><text x="3.1757%" y="639.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.90%)</title><rect x="2.9257%" y="613" width="0.9002%" height="15" fill="rgb(243,51,15)" fg:x="39" fg:w="12"/><text x="3.1757%" y="623.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.90%)</title><rect x="2.9257%" y="597" width="0.9002%" height="15" fill="rgb(241,13,14)" fg:x="39" fg:w="12"/><text x="3.1757%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.9760%" y="677" width="0.0750%" height="15" fill="rgb(239,147,24)" fg:x="53" fg:w="1"/><text x="4.2260%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.9760%" y="661" width="0.0750%" height="15" fill="rgb(223,129,16)" fg:x="53" fg:w="1"/><text x="4.2260%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="3.9760%" y="645" width="0.0750%" height="15" fill="rgb(209,169,13)" fg:x="53" fg:w="1"/><text x="4.2260%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="3.9760%" y="629" width="0.0750%" height="15" fill="rgb(235,159,41)" fg:x="53" fg:w="1"/><text x="4.2260%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="3.9760%" y="613" width="0.0750%" height="15" fill="rgb(223,219,48)" fg:x="53" fg:w="1"/><text x="4.2260%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="3.9760%" y="597" width="0.0750%" height="15" fill="rgb(236,80,13)" fg:x="53" fg:w="1"/><text x="4.2260%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="3.9760%" y="581" width="0.0750%" height="15" fill="rgb(213,5,6)" fg:x="53" fg:w="1"/><text x="4.2260%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.15%)</title><rect x="3.9760%" y="693" width="0.1500%" height="15" fill="rgb(205,59,21)" fg:x="53" fg:w="2"/><text x="4.2260%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.0510%" y="677" width="0.0750%" height="15" fill="rgb(247,137,35)" fg:x="54" fg:w="1"/><text x="4.3010%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.0510%" y="661" width="0.0750%" height="15" fill="rgb(242,208,28)" fg:x="54" fg:w="1"/><text x="4.3010%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="4.1260%" y="693" width="0.1500%" height="15" fill="rgb(245,62,25)" fg:x="55" fg:w="2"/><text x="4.3760%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.15%)</title><rect x="4.1260%" y="677" width="0.1500%" height="15" fill="rgb(233,99,54)" fg:x="55" fg:w="2"/><text x="4.3760%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.15%)</title><rect x="4.1260%" y="661" width="0.1500%" height="15" fill="rgb(213,10,37)" fg:x="55" fg:w="2"/><text x="4.3760%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="4.2761%" y="693" width="0.0750%" height="15" fill="rgb(235,143,30)" fg:x="57" fg:w="1"/><text x="4.5261%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="4.2761%" y="677" width="0.0750%" height="15" fill="rgb(250,146,33)" fg:x="57" fg:w="1"/><text x="4.5261%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.2761%" y="661" width="0.0750%" height="15" fill="rgb(226,198,42)" fg:x="57" fg:w="1"/><text x="4.5261%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="4.4261%" y="629" width="0.1500%" height="15" fill="rgb(222,55,6)" fg:x="59" fg:w="2"/><text x="4.6761%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="4.4261%" y="613" width="0.1500%" height="15" fill="rgb(213,224,31)" fg:x="59" fg:w="2"/><text x="4.6761%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.5011%" y="597" width="0.0750%" height="15" fill="rgb(226,103,35)" fg:x="60" fg:w="1"/><text x="4.7511%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.5011%" y="581" width="0.0750%" height="15" fill="rgb(205,66,45)" fg:x="60" fg:w="1"/><text x="4.7511%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.5011%" y="565" width="0.0750%" height="15" fill="rgb(226,51,42)" fg:x="60" fg:w="1"/><text x="4.7511%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.30%)</title><rect x="4.4261%" y="645" width="0.3001%" height="15" fill="rgb(206,69,1)" fg:x="59" fg:w="4"/><text x="4.6761%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="4.5761%" y="629" width="0.1500%" height="15" fill="rgb(213,228,47)" fg:x="61" fg:w="2"/><text x="4.8261%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.6512%" y="613" width="0.0750%" height="15" fill="rgb(224,204,18)" fg:x="62" fg:w="1"/><text x="4.9012%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.6512%" y="597" width="0.0750%" height="15" fill="rgb(253,187,47)" fg:x="62" fg:w="1"/><text x="4.9012%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.8762%" y="581" width="0.0750%" height="15" fill="rgb(232,61,2)" fg:x="65" fg:w="1"/><text x="5.1262%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="4.8012%" y="629" width="0.2251%" height="15" fill="rgb(213,132,35)" fg:x="64" fg:w="3"/><text x="5.0512%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="4.8012%" y="613" width="0.2251%" height="15" fill="rgb(247,33,21)" fg:x="64" fg:w="3"/><text x="5.0512%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="4.8762%" y="597" width="0.1500%" height="15" fill="rgb(233,71,46)" fg:x="65" fg:w="2"/><text x="5.1262%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="4.9512%" y="581" width="0.0750%" height="15" fill="rgb(222,173,43)" fg:x="66" fg:w="1"/><text x="5.2012%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.23%)</title><rect x="5.1763%" y="613" width="0.2251%" height="15" fill="rgb(249,218,47)" fg:x="69" fg:w="3"/><text x="5.4263%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="5.1763%" y="597" width="0.2251%" height="15" fill="rgb(254,185,48)" fg:x="69" fg:w="3"/><text x="5.4263%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="5.1763%" y="581" width="0.2251%" height="15" fill="rgb(252,165,50)" fg:x="69" fg:w="3"/><text x="5.4263%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="5.1763%" y="565" width="0.2251%" height="15" fill="rgb(206,219,6)" fg:x="69" fg:w="3"/><text x="5.4263%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="5.2513%" y="549" width="0.1500%" height="15" fill="rgb(212,212,45)" fg:x="70" fg:w="2"/><text x="5.5013%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="5.2513%" y="533" width="0.1500%" height="15" fill="rgb(221,31,9)" fg:x="70" fg:w="2"/><text x="5.5013%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="5.2513%" y="517" width="0.1500%" height="15" fill="rgb(234,198,39)" fg:x="70" fg:w="2"/><text x="5.5013%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.4014%" y="613" width="0.0750%" height="15" fill="rgb(252,145,46)" fg:x="72" fg:w="1"/><text x="5.6514%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.4014%" y="597" width="0.0750%" height="15" fill="rgb(237,149,0)" fg:x="72" fg:w="1"/><text x="5.6514%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.4014%" y="581" width="0.0750%" height="15" fill="rgb(229,65,5)" fg:x="72" fg:w="1"/><text x="5.6514%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.4014%" y="565" width="0.0750%" height="15" fill="rgb(235,60,36)" fg:x="72" fg:w="1"/><text x="5.6514%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="5.4764%" y="597" width="0.2251%" height="15" fill="rgb(222,47,18)" fg:x="73" fg:w="3"/><text x="5.7264%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="5.4764%" y="581" width="0.2251%" height="15" fill="rgb(235,114,22)" fg:x="73" fg:w="3"/><text x="5.7264%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.6264%" y="565" width="0.0750%" height="15" fill="rgb(209,167,11)" fg:x="75" fg:w="1"/><text x="5.8764%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.45%)</title><rect x="5.7014%" y="581" width="0.4501%" height="15" fill="rgb(251,73,18)" fg:x="76" fg:w="6"/><text x="5.9514%" y="591.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.38%)</title><rect x="5.7764%" y="565" width="0.3751%" height="15" fill="rgb(217,60,17)" fg:x="77" fg:w="5"/><text x="6.0264%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.30%)</title><rect x="5.8515%" y="549" width="0.3001%" height="15" fill="rgb(224,36,37)" fg:x="78" fg:w="4"/><text x="6.1015%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="6.0015%" y="533" width="0.1500%" height="15" fill="rgb(211,21,32)" fg:x="80" fg:w="2"/><text x="6.2515%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.53%)</title><rect x="5.7014%" y="597" width="0.5251%" height="15" fill="rgb(231,55,48)" fg:x="76" fg:w="7"/><text x="5.9514%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.1515%" y="581" width="0.0750%" height="15" fill="rgb(227,42,18)" fg:x="82" fg:w="1"/><text x="6.4015%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.1515%" y="565" width="0.0750%" height="15" fill="rgb(217,2,27)" fg:x="82" fg:w="1"/><text x="6.4015%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="6.1515%" y="549" width="0.0750%" height="15" fill="rgb(251,138,23)" fg:x="82" fg:w="1"/><text x="6.4015%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.83%)</title><rect x="5.4764%" y="613" width="0.8252%" height="15" fill="rgb(226,184,11)" fg:x="73" fg:w="11"/><text x="5.7264%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.2266%" y="597" width="0.0750%" height="15" fill="rgb(242,142,12)" fg:x="83" fg:w="1"/><text x="6.4766%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.43%)</title><rect x="5.0263%" y="629" width="1.4254%" height="15" fill="rgb(234,187,18)" fg:x="67" fg:w="19"/><text x="5.2763%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="6.3016%" y="613" width="0.1500%" height="15" fill="rgb(237,44,42)" fg:x="84" fg:w="2"/><text x="6.5516%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (33 samples, 2.48%)</title><rect x="4.4261%" y="661" width="2.4756%" height="15" fill="rgb(211,90,23)" fg:x="59" fg:w="33"/><text x="4.6761%" y="671.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (29 samples, 2.18%)</title><rect x="4.7262%" y="645" width="2.1755%" height="15" fill="rgb(207,81,18)" fg:x="63" fg:w="29"/><text x="4.9762%" y="655.50">s..</text></g><g><title>std::io::Write::write_all (6 samples, 0.45%)</title><rect x="6.4516%" y="629" width="0.4501%" height="15" fill="rgb(222,107,28)" fg:x="86" fg:w="6"/><text x="6.7016%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.30%)</title><rect x="6.6017%" y="613" width="0.3001%" height="15" fill="rgb(237,83,52)" fg:x="88" fg:w="4"/><text x="6.8517%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="6.7517%" y="597" width="0.1500%" height="15" fill="rgb(208,67,11)" fg:x="90" fg:w="2"/><text x="7.0017%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.8267%" y="581" width="0.0750%" height="15" fill="rgb(249,157,49)" fg:x="91" fg:w="1"/><text x="7.0767%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.8267%" y="565" width="0.0750%" height="15" fill="rgb(243,200,1)" fg:x="91" fg:w="1"/><text x="7.0767%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.8267%" y="549" width="0.0750%" height="15" fill="rgb(225,162,37)" fg:x="91" fg:w="1"/><text x="7.0767%" y="559.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="6.9017%" y="629" width="0.2251%" height="15" fill="rgb(242,92,13)" fg:x="92" fg:w="3"/><text x="7.1517%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="7.1268%" y="629" width="0.1500%" height="15" fill="rgb(220,43,36)" fg:x="95" fg:w="2"/><text x="7.3768%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.3518%" y="613" width="0.0750%" height="15" fill="rgb(213,165,48)" fg:x="98" fg:w="1"/><text x="7.6018%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.4269%" y="613" width="0.0750%" height="15" fill="rgb(227,200,9)" fg:x="99" fg:w="1"/><text x="7.6769%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.4269%" y="597" width="0.0750%" height="15" fill="rgb(221,222,28)" fg:x="99" fg:w="1"/><text x="7.6769%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="7.5019%" y="581" width="0.1500%" height="15" fill="rgb(223,142,26)" fg:x="100" fg:w="2"/><text x="7.7519%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.83%)</title><rect x="6.9017%" y="661" width="0.8252%" height="15" fill="rgb(243,46,9)" fg:x="92" fg:w="11"/><text x="7.1517%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.83%)</title><rect x="6.9017%" y="645" width="0.8252%" height="15" fill="rgb(250,56,11)" fg:x="92" fg:w="11"/><text x="7.1517%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.45%)</title><rect x="7.2768%" y="629" width="0.4501%" height="15" fill="rgb(229,113,5)" fg:x="97" fg:w="6"/><text x="7.5268%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="7.5019%" y="613" width="0.2251%" height="15" fill="rgb(244,108,28)" fg:x="100" fg:w="3"/><text x="7.7519%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="7.5019%" y="597" width="0.2251%" height="15" fill="rgb(242,119,50)" fg:x="100" fg:w="3"/><text x="7.7519%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.6519%" y="581" width="0.0750%" height="15" fill="rgb(224,164,23)" fg:x="102" fg:w="1"/><text x="7.9019%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.7269%" y="613" width="0.0750%" height="15" fill="rgb(214,227,44)" fg:x="103" fg:w="1"/><text x="7.9769%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.30%)</title><rect x="7.8020%" y="613" width="0.3001%" height="15" fill="rgb(238,202,4)" fg:x="104" fg:w="4"/><text x="8.0520%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="7.9520%" y="597" width="0.1500%" height="15" fill="rgb(213,190,30)" fg:x="106" fg:w="2"/><text x="8.2020%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.15%)</title><rect x="7.9520%" y="581" width="0.1500%" height="15" fill="rgb(239,15,2)" fg:x="106" fg:w="2"/><text x="8.2020%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="8.1020%" y="565" width="0.0750%" height="15" fill="rgb(249,229,4)" fg:x="108" fg:w="1"/><text x="8.3520%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (2 samples, 0.15%)</title><rect x="8.1020%" y="613" width="0.1500%" height="15" fill="rgb(239,75,44)" fg:x="108" fg:w="2"/><text x="8.3520%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="8.1020%" y="597" width="0.1500%" height="15" fill="rgb(251,206,23)" fg:x="108" fg:w="2"/><text x="8.3520%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.15%)</title><rect x="8.1020%" y="581" width="0.1500%" height="15" fill="rgb(215,208,0)" fg:x="108" fg:w="2"/><text x="8.3520%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.1770%" y="565" width="0.0750%" height="15" fill="rgb(230,75,50)" fg:x="109" fg:w="1"/><text x="8.4270%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.1770%" y="549" width="0.0750%" height="15" fill="rgb(246,180,39)" fg:x="109" fg:w="1"/><text x="8.4270%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.1770%" y="533" width="0.0750%" height="15" fill="rgb(249,175,24)" fg:x="109" fg:w="1"/><text x="8.4270%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="8.2521%" y="613" width="0.0750%" height="15" fill="rgb(247,176,22)" fg:x="110" fg:w="1"/><text x="8.5021%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.2521%" y="597" width="0.0750%" height="15" fill="rgb(241,100,24)" fg:x="110" fg:w="1"/><text x="8.5021%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.2521%" y="581" width="0.0750%" height="15" fill="rgb(233,4,35)" fg:x="110" fg:w="1"/><text x="8.5021%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.2521%" y="565" width="0.0750%" height="15" fill="rgb(211,164,46)" fg:x="110" fg:w="1"/><text x="8.5021%" y="575.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="8.2521%" y="549" width="0.0750%" height="15" fill="rgb(242,99,53)" fg:x="110" fg:w="1"/><text x="8.5021%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.3271%" y="597" width="0.0750%" height="15" fill="rgb(243,45,33)" fg:x="111" fg:w="1"/><text x="8.5771%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.3271%" y="581" width="0.0750%" height="15" fill="rgb(217,55,21)" fg:x="111" fg:w="1"/><text x="8.5771%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.3271%" y="565" width="0.0750%" height="15" fill="rgb(245,145,46)" fg:x="111" fg:w="1"/><text x="8.5771%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.4771%" y="581" width="0.0750%" height="15" fill="rgb(215,112,45)" fg:x="113" fg:w="1"/><text x="8.7271%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="8.5521%" y="565" width="0.1500%" height="15" fill="rgb(228,104,16)" fg:x="114" fg:w="2"/><text x="8.8021%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="8.5521%" y="549" width="0.1500%" height="15" fill="rgb(239,186,38)" fg:x="114" fg:w="2"/><text x="8.8021%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.6272%" y="533" width="0.0750%" height="15" fill="rgb(228,38,35)" fg:x="115" fg:w="1"/><text x="8.8772%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.7022%" y="565" width="0.0750%" height="15" fill="rgb(251,42,40)" fg:x="116" fg:w="1"/><text x="8.9522%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="8.7022%" y="549" width="0.0750%" height="15" fill="rgb(210,51,19)" fg:x="116" fg:w="1"/><text x="8.9522%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="8.8522%" y="549" width="0.2251%" height="15" fill="rgb(236,94,42)" fg:x="118" fg:w="3"/><text x="9.1022%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.0023%" y="533" width="0.0750%" height="15" fill="rgb(239,167,16)" fg:x="120" fg:w="1"/><text x="9.2523%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="9.0023%" y="517" width="0.0750%" height="15" fill="rgb(252,175,31)" fg:x="120" fg:w="1"/><text x="9.2523%" y="527.50"></text></g><g><title>engine::session::Session::flush (69 samples, 5.18%)</title><rect x="3.9760%" y="725" width="5.1763%" height="15" fill="rgb(206,166,30)" fg:x="53" fg:w="69"/><text x="4.2260%" y="735.50">engine..</text></g><g><title>engine::session::Session::save_entity_changes (69 samples, 5.18%)</title><rect x="3.9760%" y="709" width="5.1763%" height="15" fill="rgb(206,209,37)" fg:x="53" fg:w="69"/><text x="4.2260%" y="719.50">engine..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (64 samples, 4.80%)</title><rect x="4.3511%" y="693" width="4.8012%" height="15" fill="rgb(226,91,4)" fg:x="58" fg:w="64"/><text x="4.6011%" y="703.50">engine..</text></g><g><title>engine::session::SavesEntities::check_for_changes (64 samples, 4.80%)</title><rect x="4.3511%" y="677" width="4.8012%" height="15" fill="rgb(222,167,0)" fg:x="58" fg:w="64"/><text x="4.6011%" y="687.50">engine..</text></g><g><title>kernel::compare::any_entity_changes (19 samples, 1.43%)</title><rect x="7.7269%" y="661" width="1.4254%" height="15" fill="rgb(211,70,14)" fg:x="103" fg:w="19"/><text x="7.9769%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (19 samples, 1.43%)</title><rect x="7.7269%" y="645" width="1.4254%" height="15" fill="rgb(214,84,42)" fg:x="103" fg:w="19"/><text x="7.9769%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.43%)</title><rect x="7.7269%" y="629" width="1.4254%" height="15" fill="rgb(235,157,37)" fg:x="103" fg:w="19"/><text x="7.9769%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.83%)</title><rect x="8.3271%" y="613" width="0.8252%" height="15" fill="rgb(225,13,6)" fg:x="111" fg:w="11"/><text x="8.5771%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (10 samples, 0.75%)</title><rect x="8.4021%" y="597" width="0.7502%" height="15" fill="rgb(205,202,1)" fg:x="112" fg:w="10"/><text x="8.6521%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.60%)</title><rect x="8.5521%" y="581" width="0.6002%" height="15" fill="rgb(232,195,26)" fg:x="114" fg:w="8"/><text x="8.8021%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.38%)</title><rect x="8.7772%" y="565" width="0.3751%" height="15" fill="rgb(208,102,26)" fg:x="117" fg:w="5"/><text x="9.0272%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.0773%" y="549" width="0.0750%" height="15" fill="rgb(215,41,39)" fg:x="121" fg:w="1"/><text x="9.3273%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="9.1523%" y="693" width="0.0750%" height="15" fill="rgb(247,139,11)" fg:x="122" fg:w="1"/><text x="9.4023%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="9.1523%" y="677" width="0.0750%" height="15" fill="rgb(243,99,6)" fg:x="122" fg:w="1"/><text x="9.4023%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="9.1523%" y="661" width="0.0750%" height="15" fill="rgb(230,168,48)" fg:x="122" fg:w="1"/><text x="9.4023%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.1523%" y="645" width="0.0750%" height="15" fill="rgb(238,227,13)" fg:x="122" fg:w="1"/><text x="9.4023%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.3023%" y="661" width="0.0750%" height="15" fill="rgb(209,109,13)" fg:x="124" fg:w="1"/><text x="9.5523%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="9.3023%" y="645" width="0.0750%" height="15" fill="rgb(228,195,1)" fg:x="124" fg:w="1"/><text x="9.5523%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="9.3023%" y="629" width="0.0750%" height="15" fill="rgb(230,218,0)" fg:x="124" fg:w="1"/><text x="9.5523%" y="639.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.23%)</title><rect x="9.2273%" y="693" width="0.2251%" height="15" fill="rgb(206,1,45)" fg:x="123" fg:w="3"/><text x="9.4773%" y="703.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.23%)</title><rect x="9.2273%" y="677" width="0.2251%" height="15" fill="rgb(209,124,26)" fg:x="123" fg:w="3"/><text x="9.4773%" y="687.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="9.3773%" y="661" width="0.0750%" height="15" fill="rgb(220,59,8)" fg:x="125" fg:w="1"/><text x="9.6273%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.3773%" y="645" width="0.0750%" height="15" fill="rgb(251,41,37)" fg:x="125" fg:w="1"/><text x="9.6273%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.3773%" y="629" width="0.0750%" height="15" fill="rgb(239,152,21)" fg:x="125" fg:w="1"/><text x="9.6273%" y="639.50"></text></g><g><title>plugins_core::build::Build::holding (5 samples, 0.38%)</title><rect x="9.1523%" y="725" width="0.3751%" height="15" fill="rgb(226,32,1)" fg:x="122" fg:w="5"/><text x="9.4023%" y="735.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.38%)</title><rect x="9.1523%" y="709" width="0.3751%" height="15" fill="rgb(230,154,36)" fg:x="122" fg:w="5"/><text x="9.4023%" y="719.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="9.4524%" y="693" width="0.0750%" height="15" fill="rgb(208,228,43)" fg:x="126" fg:w="1"/><text x="9.7024%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="9.4524%" y="677" width="0.0750%" height="15" fill="rgb(214,203,3)" fg:x="126" fg:w="1"/><text x="9.7024%" y="687.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="9.4524%" y="661" width="0.0750%" height="15" fill="rgb(207,149,29)" fg:x="126" fg:w="1"/><text x="9.7024%" y="671.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="9.4524%" y="645" width="0.0750%" height="15" fill="rgb(250,105,7)" fg:x="126" fg:w="1"/><text x="9.7024%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="9.4524%" y="629" width="0.0750%" height="15" fill="rgb(232,222,16)" fg:x="126" fg:w="1"/><text x="9.7024%" y="639.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="9.4524%" y="613" width="0.0750%" height="15" fill="rgb(209,32,24)" fg:x="126" fg:w="1"/><text x="9.7024%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="9.4524%" y="597" width="0.0750%" height="15" fill="rgb(225,13,6)" fg:x="126" fg:w="1"/><text x="9.7024%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="9.4524%" y="581" width="0.0750%" height="15" fill="rgb(245,226,26)" fg:x="126" fg:w="1"/><text x="9.7024%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="9.4524%" y="565" width="0.0750%" height="15" fill="rgb(229,178,27)" fg:x="126" fg:w="1"/><text x="9.7024%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="9.4524%" y="549" width="0.0750%" height="15" fill="rgb(205,227,28)" fg:x="126" fg:w="1"/><text x="9.7024%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="9.4524%" y="533" width="0.0750%" height="15" fill="rgb(210,191,45)" fg:x="126" fg:w="1"/><text x="9.7024%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="9.4524%" y="517" width="0.0750%" height="15" fill="rgb(206,124,16)" fg:x="126" fg:w="1"/><text x="9.7024%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.4524%" y="501" width="0.0750%" height="15" fill="rgb(210,162,0)" fg:x="126" fg:w="1"/><text x="9.7024%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.4524%" y="485" width="0.0750%" height="15" fill="rgb(211,54,38)" fg:x="126" fg:w="1"/><text x="9.7024%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="9.4524%" y="469" width="0.0750%" height="15" fill="rgb(248,192,3)" fg:x="126" fg:w="1"/><text x="9.7024%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="9.4524%" y="453" width="0.0750%" height="15" fill="rgb(233,187,18)" fg:x="126" fg:w="1"/><text x="9.7024%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="9.4524%" y="437" width="0.0750%" height="15" fill="rgb(237,208,14)" fg:x="126" fg:w="1"/><text x="9.7024%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="9.4524%" y="421" width="0.0750%" height="15" fill="rgb(212,77,1)" fg:x="126" fg:w="1"/><text x="9.7024%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="9.4524%" y="405" width="0.0750%" height="15" fill="rgb(210,163,22)" fg:x="126" fg:w="1"/><text x="9.7024%" y="415.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="9.5274%" y="725" width="0.0750%" height="15" fill="rgb(250,58,28)" fg:x="127" fg:w="1"/><text x="9.7774%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="9.5274%" y="709" width="0.0750%" height="15" fill="rgb(254,28,41)" fg:x="127" fg:w="1"/><text x="9.7774%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="9.5274%" y="693" width="0.0750%" height="15" fill="rgb(237,162,36)" fg:x="127" fg:w="1"/><text x="9.7774%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="9.6774%" y="709" width="0.0750%" height="15" fill="rgb(232,56,6)" fg:x="129" fg:w="1"/><text x="9.9274%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="9.6774%" y="693" width="0.0750%" height="15" fill="rgb(216,127,42)" fg:x="129" fg:w="1"/><text x="9.9274%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="9.6774%" y="677" width="0.0750%" height="15" fill="rgb(241,69,15)" fg:x="129" fg:w="1"/><text x="9.9274%" y="687.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="9.6774%" y="661" width="0.0750%" height="15" fill="rgb(227,180,19)" fg:x="129" fg:w="1"/><text x="9.9274%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.6774%" y="645" width="0.0750%" height="15" fill="rgb(231,188,29)" fg:x="129" fg:w="1"/><text x="9.9274%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.7524%" y="677" width="0.0750%" height="15" fill="rgb(224,176,27)" fg:x="130" fg:w="1"/><text x="10.0024%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="9.8275%" y="629" width="0.0750%" height="15" fill="rgb(249,214,19)" fg:x="131" fg:w="1"/><text x="10.0775%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="9.8275%" y="613" width="0.0750%" height="15" fill="rgb(240,0,4)" fg:x="131" fg:w="1"/><text x="10.0775%" y="623.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="9.8275%" y="597" width="0.0750%" height="15" fill="rgb(233,28,41)" fg:x="131" fg:w="1"/><text x="10.0775%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.8275%" y="581" width="0.0750%" height="15" fill="rgb(220,90,51)" fg:x="131" fg:w="1"/><text x="10.0775%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.8275%" y="565" width="0.0750%" height="15" fill="rgb(250,52,22)" fg:x="131" fg:w="1"/><text x="10.0775%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.8275%" y="549" width="0.0750%" height="15" fill="rgb(231,152,36)" fg:x="131" fg:w="1"/><text x="10.0775%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="9.8275%" y="533" width="0.0750%" height="15" fill="rgb(250,218,4)" fg:x="131" fg:w="1"/><text x="10.0775%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="9.8275%" y="517" width="0.0750%" height="15" fill="rgb(210,38,21)" fg:x="131" fg:w="1"/><text x="10.0775%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="9.8275%" y="501" width="0.0750%" height="15" fill="rgb(230,75,13)" fg:x="131" fg:w="1"/><text x="10.0775%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.8275%" y="485" width="0.0750%" height="15" fill="rgb(250,68,53)" fg:x="131" fg:w="1"/><text x="10.0775%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.8275%" y="469" width="0.0750%" height="15" fill="rgb(250,210,16)" fg:x="131" fg:w="1"/><text x="10.0775%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="9.8275%" y="453" width="0.0750%" height="15" fill="rgb(240,132,5)" fg:x="131" fg:w="1"/><text x="10.0775%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="9.8275%" y="437" width="0.0750%" height="15" fill="rgb(222,148,48)" fg:x="131" fg:w="1"/><text x="10.0775%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="9.8275%" y="421" width="0.0750%" height="15" fill="rgb(247,181,24)" fg:x="131" fg:w="1"/><text x="10.0775%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="9.8275%" y="405" width="0.0750%" height="15" fill="rgb(239,5,31)" fg:x="131" fg:w="1"/><text x="10.0775%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.8275%" y="389" width="0.0750%" height="15" fill="rgb(241,152,38)" fg:x="131" fg:w="1"/><text x="10.0775%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.15%)</title><rect x="9.8275%" y="661" width="0.1500%" height="15" fill="rgb(246,200,37)" fg:x="131" fg:w="2"/><text x="10.0775%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.15%)</title><rect x="9.8275%" y="645" width="0.1500%" height="15" fill="rgb(243,210,26)" fg:x="131" fg:w="2"/><text x="10.0775%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="9.9025%" y="629" width="0.0750%" height="15" fill="rgb(222,22,22)" fg:x="132" fg:w="1"/><text x="10.1525%" y="639.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="9.9025%" y="613" width="0.0750%" height="15" fill="rgb(208,129,28)" fg:x="132" fg:w="1"/><text x="10.1525%" y="623.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="9.9025%" y="597" width="0.0750%" height="15" fill="rgb(254,169,28)" fg:x="132" fg:w="1"/><text x="10.1525%" y="607.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="9.9025%" y="581" width="0.0750%" height="15" fill="rgb(225,45,17)" fg:x="132" fg:w="1"/><text x="10.1525%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="9.9025%" y="565" width="0.0750%" height="15" fill="rgb(232,199,2)" fg:x="132" fg:w="1"/><text x="10.1525%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="9.9025%" y="549" width="0.0750%" height="15" fill="rgb(235,33,40)" fg:x="132" fg:w="1"/><text x="10.1525%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.38%)</title><rect x="9.7524%" y="709" width="0.3751%" height="15" fill="rgb(237,89,50)" fg:x="130" fg:w="5"/><text x="10.0024%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.38%)</title><rect x="9.7524%" y="693" width="0.3751%" height="15" fill="rgb(238,126,5)" fg:x="130" fg:w="5"/><text x="10.0024%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (4 samples, 0.30%)</title><rect x="9.8275%" y="677" width="0.3001%" height="15" fill="rgb(247,214,42)" fg:x="131" fg:w="4"/><text x="10.0775%" y="687.50"></text></g><g><title>plugins_core::build::Build::leads_to (2 samples, 0.15%)</title><rect x="9.9775%" y="661" width="0.1500%" height="15" fill="rgb(238,60,45)" fg:x="133" fg:w="2"/><text x="10.2275%" y="671.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.15%)</title><rect x="9.9775%" y="645" width="0.1500%" height="15" fill="rgb(225,69,44)" fg:x="133" fg:w="2"/><text x="10.2275%" y="655.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="10.0525%" y="629" width="0.0750%" height="15" fill="rgb(241,13,44)" fg:x="134" fg:w="1"/><text x="10.3025%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="10.0525%" y="613" width="0.0750%" height="15" fill="rgb(227,121,22)" fg:x="134" fg:w="1"/><text x="10.3025%" y="623.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="10.0525%" y="597" width="0.0750%" height="15" fill="rgb(231,160,23)" fg:x="134" fg:w="1"/><text x="10.3025%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.0525%" y="581" width="0.0750%" height="15" fill="rgb(250,179,43)" fg:x="134" fg:w="1"/><text x="10.3025%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.0525%" y="565" width="0.0750%" height="15" fill="rgb(233,54,46)" fg:x="134" fg:w="1"/><text x="10.3025%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.0525%" y="549" width="0.0750%" height="15" fill="rgb(247,120,42)" fg:x="134" fg:w="1"/><text x="10.3025%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.0525%" y="533" width="0.0750%" height="15" fill="rgb(221,219,12)" fg:x="134" fg:w="1"/><text x="10.3025%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="10.1275%" y="709" width="0.0750%" height="15" fill="rgb(211,126,8)" fg:x="135" fg:w="1"/><text x="10.3775%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="10.1275%" y="693" width="0.0750%" height="15" fill="rgb(218,154,33)" fg:x="135" fg:w="1"/><text x="10.3775%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="10.1275%" y="677" width="0.0750%" height="15" fill="rgb(212,199,16)" fg:x="135" fg:w="1"/><text x="10.3775%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="10.2026%" y="709" width="0.0750%" height="15" fill="rgb(236,215,46)" fg:x="136" fg:w="1"/><text x="10.4526%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.2026%" y="693" width="0.0750%" height="15" fill="rgb(232,32,22)" fg:x="136" fg:w="1"/><text x="10.4526%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="10.2776%" y="677" width="0.0750%" height="15" fill="rgb(234,79,15)" fg:x="137" fg:w="1"/><text x="10.5276%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.2776%" y="661" width="0.0750%" height="15" fill="rgb(235,187,47)" fg:x="137" fg:w="1"/><text x="10.5276%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.2776%" y="645" width="0.0750%" height="15" fill="rgb(244,69,37)" fg:x="137" fg:w="1"/><text x="10.5276%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="10.2776%" y="629" width="0.0750%" height="15" fill="rgb(249,140,25)" fg:x="137" fg:w="1"/><text x="10.5276%" y="639.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="10.3526%" y="677" width="0.1500%" height="15" fill="rgb(213,69,8)" fg:x="138" fg:w="2"/><text x="10.6026%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.15%)</title><rect x="10.3526%" y="661" width="0.1500%" height="15" fill="rgb(220,136,2)" fg:x="138" fg:w="2"/><text x="10.6026%" y="671.50"></text></g><g><title>engine::session::SavesEntities::save_entity (2 samples, 0.15%)</title><rect x="10.3526%" y="645" width="0.1500%" height="15" fill="rgb(237,50,36)" fg:x="138" fg:w="2"/><text x="10.6026%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="10.3526%" y="629" width="0.1500%" height="15" fill="rgb(226,18,11)" fg:x="138" fg:w="2"/><text x="10.6026%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="10.5026%" y="677" width="0.0750%" height="15" fill="rgb(243,156,2)" fg:x="140" fg:w="1"/><text x="10.7526%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.5026%" y="661" width="0.0750%" height="15" fill="rgb(218,8,34)" fg:x="140" fg:w="1"/><text x="10.7526%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="10.5776%" y="661" width="0.0750%" height="15" fill="rgb(250,94,35)" fg:x="141" fg:w="1"/><text x="10.8276%" y="671.50"></text></g><g><title>&lt;kernel::model::entry::OpenedScopeMut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="10.5776%" y="645" width="0.0750%" height="15" fill="rgb(229,127,21)" fg:x="141" fg:w="1"/><text x="10.8276%" y="655.50"></text></g><g><title>engine::identifiers::model::set_gid (2 samples, 0.15%)</title><rect x="10.5776%" y="677" width="0.1500%" height="15" fill="rgb(234,49,5)" fg:x="141" fg:w="2"/><text x="10.8276%" y="687.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="10.6527%" y="661" width="0.0750%" height="15" fill="rgb(248,12,16)" fg:x="142" fg:w="1"/><text x="10.9027%" y="671.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="10.6527%" y="645" width="0.0750%" height="15" fill="rgb(208,220,31)" fg:x="142" fg:w="1"/><text x="10.9027%" y="655.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="10.6527%" y="629" width="0.0750%" height="15" fill="rgb(243,184,0)" fg:x="142" fg:w="1"/><text x="10.9027%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.6527%" y="613" width="0.0750%" height="15" fill="rgb(217,38,21)" fg:x="142" fg:w="1"/><text x="10.9027%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.30%)</title><rect x="10.7277%" y="613" width="0.3001%" height="15" fill="rgb(239,120,45)" fg:x="143" fg:w="4"/><text x="10.9777%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="10.8027%" y="597" width="0.2251%" height="15" fill="rgb(235,33,2)" fg:x="144" fg:w="3"/><text x="11.0527%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="10.8777%" y="581" width="0.1500%" height="15" fill="rgb(249,161,5)" fg:x="145" fg:w="2"/><text x="11.1277%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="10.8777%" y="565" width="0.1500%" height="15" fill="rgb(250,165,48)" fg:x="145" fg:w="2"/><text x="11.1277%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.9527%" y="549" width="0.0750%" height="15" fill="rgb(221,23,45)" fg:x="146" fg:w="1"/><text x="11.2027%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.9527%" y="533" width="0.0750%" height="15" fill="rgb(217,108,46)" fg:x="146" fg:w="1"/><text x="11.2027%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="10.9527%" y="517" width="0.0750%" height="15" fill="rgb(254,26,35)" fg:x="146" fg:w="1"/><text x="11.2027%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.45%)</title><rect x="10.7277%" y="629" width="0.4501%" height="15" fill="rgb(218,223,28)" fg:x="143" fg:w="6"/><text x="10.9777%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="11.0278%" y="613" width="0.1500%" height="15" fill="rgb(242,27,47)" fg:x="147" fg:w="2"/><text x="11.2778%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="11.0278%" y="597" width="0.1500%" height="15" fill="rgb(218,39,35)" fg:x="147" fg:w="2"/><text x="11.2778%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.1028%" y="581" width="0.0750%" height="15" fill="rgb(232,127,16)" fg:x="148" fg:w="1"/><text x="11.3528%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="11.3278%" y="613" width="0.0750%" height="15" fill="rgb(231,219,51)" fg:x="151" fg:w="1"/><text x="11.5778%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.3278%" y="597" width="0.0750%" height="15" fill="rgb(217,220,46)" fg:x="151" fg:w="1"/><text x="11.5778%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.45%)</title><rect x="11.4029%" y="613" width="0.4501%" height="15" fill="rgb(230,75,1)" fg:x="152" fg:w="6"/><text x="11.6529%" y="623.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.38%)</title><rect x="11.4779%" y="597" width="0.3751%" height="15" fill="rgb(218,2,8)" fg:x="153" fg:w="5"/><text x="11.7279%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.30%)</title><rect x="11.5529%" y="581" width="0.3001%" height="15" fill="rgb(206,111,30)" fg:x="154" fg:w="4"/><text x="11.8029%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="11.7029%" y="565" width="0.1500%" height="15" fill="rgb(209,135,6)" fg:x="156" fg:w="2"/><text x="11.9529%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.15%)</title><rect x="11.7029%" y="549" width="0.1500%" height="15" fill="rgb(205,169,10)" fg:x="156" fg:w="2"/><text x="11.9529%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="11.7029%" y="533" width="0.1500%" height="15" fill="rgb(212,204,38)" fg:x="156" fg:w="2"/><text x="11.9529%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="11.7779%" y="517" width="0.0750%" height="15" fill="rgb(205,199,14)" fg:x="157" fg:w="1"/><text x="12.0279%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="11.8530%" y="565" width="0.0750%" height="15" fill="rgb(212,4,6)" fg:x="158" fg:w="1"/><text x="12.1030%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.8530%" y="549" width="0.0750%" height="15" fill="rgb(250,15,10)" fg:x="158" fg:w="1"/><text x="12.1030%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.15%)</title><rect x="11.8530%" y="597" width="0.1500%" height="15" fill="rgb(212,49,51)" fg:x="158" fg:w="2"/><text x="12.1030%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.15%)</title><rect x="11.8530%" y="581" width="0.1500%" height="15" fill="rgb(235,21,9)" fg:x="158" fg:w="2"/><text x="12.1030%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.9280%" y="565" width="0.0750%" height="15" fill="rgb(251,31,32)" fg:x="159" fg:w="1"/><text x="12.1780%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.9280%" y="549" width="0.0750%" height="15" fill="rgb(246,23,9)" fg:x="159" fg:w="1"/><text x="12.1780%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.30%)</title><rect x="12.1530%" y="581" width="0.3001%" height="15" fill="rgb(225,216,14)" fg:x="162" fg:w="4"/><text x="12.4030%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="12.3031%" y="565" width="0.1500%" height="15" fill="rgb(215,200,26)" fg:x="164" fg:w="2"/><text x="12.5531%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="12.3031%" y="549" width="0.1500%" height="15" fill="rgb(237,130,47)" fg:x="164" fg:w="2"/><text x="12.5531%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.3781%" y="533" width="0.0750%" height="15" fill="rgb(247,74,14)" fg:x="165" fg:w="1"/><text x="12.6281%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="12.4531%" y="581" width="0.2251%" height="15" fill="rgb(254,97,46)" fg:x="166" fg:w="3"/><text x="12.7031%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="12.5281%" y="565" width="0.1500%" height="15" fill="rgb(234,191,1)" fg:x="167" fg:w="2"/><text x="12.7781%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="12.5281%" y="549" width="0.1500%" height="15" fill="rgb(215,165,14)" fg:x="167" fg:w="2"/><text x="12.7781%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.6032%" y="533" width="0.0750%" height="15" fill="rgb(230,182,6)" fg:x="168" fg:w="1"/><text x="12.8532%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.6032%" y="517" width="0.0750%" height="15" fill="rgb(210,127,39)" fg:x="168" fg:w="1"/><text x="12.8532%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.75%)</title><rect x="12.0030%" y="597" width="0.7502%" height="15" fill="rgb(223,212,51)" fg:x="160" fg:w="10"/><text x="12.2530%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.6782%" y="581" width="0.0750%" height="15" fill="rgb(226,176,43)" fg:x="169" fg:w="1"/><text x="12.9282%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 0.98%)</title><rect x="11.8530%" y="613" width="0.9752%" height="15" fill="rgb(222,155,4)" fg:x="158" fg:w="13"/><text x="12.1030%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.7532%" y="597" width="0.0750%" height="15" fill="rgb(215,149,7)" fg:x="170" fg:w="1"/><text x="13.0032%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.7532%" y="581" width="0.0750%" height="15" fill="rgb(252,199,23)" fg:x="170" fg:w="1"/><text x="13.0032%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (34 samples, 2.55%)</title><rect x="10.7277%" y="645" width="2.5506%" height="15" fill="rgb(245,52,29)" fg:x="143" fg:w="34"/><text x="10.9777%" y="655.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.10%)</title><rect x="11.1778%" y="629" width="2.1005%" height="15" fill="rgb(221,228,19)" fg:x="149" fg:w="28"/><text x="11.4278%" y="639.50">s..</text></g><g><title>std::io::Write::write_all (6 samples, 0.45%)</title><rect x="12.8282%" y="613" width="0.4501%" height="15" fill="rgb(253,101,6)" fg:x="171" fg:w="6"/><text x="13.0782%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.45%)</title><rect x="12.8282%" y="597" width="0.4501%" height="15" fill="rgb(211,130,8)" fg:x="171" fg:w="6"/><text x="13.0782%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.45%)</title><rect x="12.8282%" y="581" width="0.4501%" height="15" fill="rgb(238,37,53)" fg:x="171" fg:w="6"/><text x="13.0782%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.45%)</title><rect x="12.8282%" y="565" width="0.4501%" height="15" fill="rgb(235,145,5)" fg:x="171" fg:w="6"/><text x="13.0782%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.45%)</title><rect x="12.8282%" y="549" width="0.4501%" height="15" fill="rgb(244,12,43)" fg:x="171" fg:w="6"/><text x="13.0782%" y="559.50"></text></g><g><title>realloc (6 samples, 0.45%)</title><rect x="12.8282%" y="533" width="0.4501%" height="15" fill="rgb(246,195,24)" fg:x="171" fg:w="6"/><text x="13.0782%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="13.3533%" y="613" width="0.1500%" height="15" fill="rgb(235,163,6)" fg:x="178" fg:w="2"/><text x="13.6033%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.5034%" y="613" width="0.0750%" height="15" fill="rgb(236,218,17)" fg:x="180" fg:w="1"/><text x="13.7534%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.5784%" y="597" width="0.0750%" height="15" fill="rgb(235,12,38)" fg:x="181" fg:w="1"/><text x="13.8284%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.6534%" y="597" width="0.0750%" height="15" fill="rgb(225,195,33)" fg:x="182" fg:w="1"/><text x="13.9034%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.6534%" y="581" width="0.0750%" height="15" fill="rgb(238,54,35)" fg:x="182" fg:w="1"/><text x="13.9034%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="13.7284%" y="581" width="0.1500%" height="15" fill="rgb(238,33,7)" fg:x="183" fg:w="2"/><text x="13.9784%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="13.8785%" y="581" width="0.1500%" height="15" fill="rgb(245,5,14)" fg:x="185" fg:w="2"/><text x="14.1285%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.9535%" y="565" width="0.0750%" height="15" fill="rgb(251,95,31)" fg:x="186" fg:w="1"/><text x="14.2035%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.1035%" y="565" width="0.0750%" height="15" fill="rgb(222,15,46)" fg:x="188" fg:w="1"/><text x="14.3535%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.1785%" y="533" width="0.0750%" height="15" fill="rgb(226,182,24)" fg:x="189" fg:w="1"/><text x="14.4285%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.13%)</title><rect x="13.2783%" y="645" width="1.1253%" height="15" fill="rgb(229,105,41)" fg:x="177" fg:w="15"/><text x="13.5283%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.13%)</title><rect x="13.2783%" y="629" width="1.1253%" height="15" fill="rgb(216,99,53)" fg:x="177" fg:w="15"/><text x="13.5283%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.83%)</title><rect x="13.5784%" y="613" width="0.8252%" height="15" fill="rgb(253,26,20)" fg:x="181" fg:w="11"/><text x="13.8284%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.68%)</title><rect x="13.7284%" y="597" width="0.6752%" height="15" fill="rgb(249,155,28)" fg:x="183" fg:w="9"/><text x="13.9784%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.38%)</title><rect x="14.0285%" y="581" width="0.3751%" height="15" fill="rgb(241,221,2)" fg:x="187" fg:w="5"/><text x="14.2785%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.23%)</title><rect x="14.1785%" y="565" width="0.2251%" height="15" fill="rgb(219,124,6)" fg:x="189" fg:w="3"/><text x="14.4285%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="14.1785%" y="549" width="0.2251%" height="15" fill="rgb(233,37,6)" fg:x="189" fg:w="3"/><text x="14.4285%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="14.2536%" y="533" width="0.1500%" height="15" fill="rgb(238,20,14)" fg:x="190" fg:w="2"/><text x="14.5036%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.4036%" y="629" width="0.0750%" height="15" fill="rgb(232,106,27)" fg:x="192" fg:w="1"/><text x="14.6536%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.7037%" y="597" width="0.0750%" height="15" fill="rgb(246,157,24)" fg:x="196" fg:w="1"/><text x="14.9537%" y="607.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="14.7787%" y="597" width="0.0750%" height="15" fill="rgb(214,153,10)" fg:x="197" fg:w="1"/><text x="15.0287%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="14.8537%" y="597" width="0.0750%" height="15" fill="rgb(212,94,6)" fg:x="198" fg:w="1"/><text x="15.1037%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.8537%" y="581" width="0.0750%" height="15" fill="rgb(254,25,27)" fg:x="198" fg:w="1"/><text x="15.1037%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="14.8537%" y="565" width="0.0750%" height="15" fill="rgb(250,43,52)" fg:x="198" fg:w="1"/><text x="15.1037%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="14.8537%" y="549" width="0.0750%" height="15" fill="rgb(221,226,40)" fg:x="198" fg:w="1"/><text x="15.1037%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.9287%" y="565" width="0.0750%" height="15" fill="rgb(235,162,34)" fg:x="199" fg:w="1"/><text x="15.1787%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (2 samples, 0.15%)</title><rect x="14.9287%" y="597" width="0.1500%" height="15" fill="rgb(239,24,26)" fg:x="199" fg:w="2"/><text x="15.1787%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="14.9287%" y="581" width="0.1500%" height="15" fill="rgb(244,226,11)" fg:x="199" fg:w="2"/><text x="15.1787%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.0038%" y="565" width="0.0750%" height="15" fill="rgb(225,23,10)" fg:x="200" fg:w="1"/><text x="15.2538%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.0038%" y="549" width="0.0750%" height="15" fill="rgb(249,125,6)" fg:x="200" fg:w="1"/><text x="15.2538%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0038%" y="533" width="0.0750%" height="15" fill="rgb(246,212,12)" fg:x="200" fg:w="1"/><text x="15.2538%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="15.0788%" y="597" width="0.0750%" height="15" fill="rgb(230,43,32)" fg:x="201" fg:w="1"/><text x="15.3288%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.1538%" y="549" width="0.0750%" height="15" fill="rgb(210,95,23)" fg:x="202" fg:w="1"/><text x="15.4038%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.1538%" y="533" width="0.0750%" height="15" fill="rgb(229,103,33)" fg:x="202" fg:w="1"/><text x="15.4038%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.1538%" y="517" width="0.0750%" height="15" fill="rgb(222,104,27)" fg:x="202" fg:w="1"/><text x="15.4038%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="15.3038%" y="533" width="0.0750%" height="15" fill="rgb(239,221,23)" fg:x="204" fg:w="1"/><text x="15.5538%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="15.3788%" y="485" width="0.1500%" height="15" fill="rgb(222,98,21)" fg:x="205" fg:w="2"/><text x="15.6288%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.4539%" y="469" width="0.0750%" height="15" fill="rgb(231,101,20)" fg:x="206" fg:w="1"/><text x="15.7039%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.4539%" y="453" width="0.0750%" height="15" fill="rgb(215,150,22)" fg:x="206" fg:w="1"/><text x="15.7039%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (6 samples, 0.45%)</title><rect x="15.1538%" y="597" width="0.4501%" height="15" fill="rgb(248,3,34)" fg:x="202" fg:w="6"/><text x="15.4038%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.45%)</title><rect x="15.1538%" y="581" width="0.4501%" height="15" fill="rgb(220,141,21)" fg:x="202" fg:w="6"/><text x="15.4038%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.45%)</title><rect x="15.1538%" y="565" width="0.4501%" height="15" fill="rgb(223,41,48)" fg:x="202" fg:w="6"/><text x="15.4038%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (5 samples, 0.38%)</title><rect x="15.2288%" y="549" width="0.3751%" height="15" fill="rgb(247,12,5)" fg:x="203" fg:w="5"/><text x="15.4788%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="15.3788%" y="533" width="0.2251%" height="15" fill="rgb(206,173,10)" fg:x="205" fg:w="3"/><text x="15.6288%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (3 samples, 0.23%)</title><rect x="15.3788%" y="517" width="0.2251%" height="15" fill="rgb(233,214,37)" fg:x="205" fg:w="3"/><text x="15.6288%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="15.3788%" y="501" width="0.2251%" height="15" fill="rgb(238,86,43)" fg:x="205" fg:w="3"/><text x="15.6288%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="15.5289%" y="485" width="0.0750%" height="15" fill="rgb(212,182,8)" fg:x="207" fg:w="1"/><text x="15.7789%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="15.5289%" y="469" width="0.0750%" height="15" fill="rgb(240,91,47)" fg:x="207" fg:w="1"/><text x="15.7789%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.6789%" y="517" width="0.0750%" height="15" fill="rgb(209,138,26)" fg:x="209" fg:w="1"/><text x="15.9289%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="15.6789%" y="549" width="0.1500%" height="15" fill="rgb(231,163,20)" fg:x="209" fg:w="2"/><text x="15.9289%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="15.6789%" y="533" width="0.1500%" height="15" fill="rgb(214,91,54)" fg:x="209" fg:w="2"/><text x="15.9289%" y="543.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="15.7539%" y="517" width="0.0750%" height="15" fill="rgb(230,32,17)" fg:x="210" fg:w="1"/><text x="16.0039%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="15.8290%" y="517" width="0.0750%" height="15" fill="rgb(231,34,34)" fg:x="211" fg:w="1"/><text x="16.0790%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.30%)</title><rect x="15.8290%" y="549" width="0.3001%" height="15" fill="rgb(224,228,27)" fg:x="211" fg:w="4"/><text x="16.0790%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.30%)</title><rect x="15.8290%" y="533" width="0.3001%" height="15" fill="rgb(219,35,40)" fg:x="211" fg:w="4"/><text x="16.0790%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="15.9040%" y="517" width="0.2251%" height="15" fill="rgb(234,42,8)" fg:x="212" fg:w="3"/><text x="16.1540%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="15.9040%" y="501" width="0.2251%" height="15" fill="rgb(226,75,22)" fg:x="212" fg:w="3"/><text x="16.1540%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="15.9790%" y="485" width="0.1500%" height="15" fill="rgb(242,203,28)" fg:x="213" fg:w="2"/><text x="16.2290%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="15.9790%" y="469" width="0.1500%" height="15" fill="rgb(221,3,9)" fg:x="213" fg:w="2"/><text x="16.2290%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.53%)</title><rect x="15.6789%" y="565" width="0.5251%" height="15" fill="rgb(214,34,31)" fg:x="209" fg:w="7"/><text x="15.9289%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="16.1290%" y="549" width="0.0750%" height="15" fill="rgb(252,119,15)" fg:x="215" fg:w="1"/><text x="16.3790%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (24 samples, 1.80%)</title><rect x="14.4786%" y="629" width="1.8005%" height="15" fill="rgb(244,224,31)" fg:x="193" fg:w="24"/><text x="14.7286%" y="639.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (23 samples, 1.73%)</title><rect x="14.5536%" y="613" width="1.7254%" height="15" fill="rgb(215,8,51)" fg:x="194" fg:w="23"/><text x="14.8036%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.68%)</title><rect x="15.6039%" y="597" width="0.6752%" height="15" fill="rgb(207,24,1)" fg:x="208" fg:w="9"/><text x="15.8539%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (9 samples, 0.68%)</title><rect x="15.6039%" y="581" width="0.6752%" height="15" fill="rgb(245,90,0)" fg:x="208" fg:w="9"/><text x="15.8539%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="16.2041%" y="565" width="0.0750%" height="15" fill="rgb(246,43,48)" fg:x="216" fg:w="1"/><text x="16.4541%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.2041%" y="549" width="0.0750%" height="15" fill="rgb(252,218,10)" fg:x="216" fg:w="1"/><text x="16.4541%" y="559.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (75 samples, 5.63%)</title><rect x="10.7277%" y="677" width="5.6264%" height="15" fill="rgb(231,24,35)" fg:x="143" fg:w="75"/><text x="10.9777%" y="687.50">engine:..</text></g><g><title>engine::session::SavesEntities::check_for_changes (75 samples, 5.63%)</title><rect x="10.7277%" y="661" width="5.6264%" height="15" fill="rgb(225,66,19)" fg:x="143" fg:w="75"/><text x="10.9777%" y="671.50">engine:..</text></g><g><title>kernel::compare::any_entity_changes (26 samples, 1.95%)</title><rect x="14.4036%" y="645" width="1.9505%" height="15" fill="rgb(214,96,51)" fg:x="192" fg:w="26"/><text x="14.6536%" y="655.50">k..</text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="16.2791%" y="629" width="0.0750%" height="15" fill="rgb(251,151,47)" fg:x="217" fg:w="1"/><text x="16.5291%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="16.2791%" y="613" width="0.0750%" height="15" fill="rgb(236,79,14)" fg:x="217" fg:w="1"/><text x="16.5291%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.3541%" y="517" width="0.0750%" height="15" fill="rgb(210,205,11)" fg:x="218" fg:w="1"/><text x="16.6041%" y="527.50"></text></g><g><title>engine::session::Session::flush (83 samples, 6.23%)</title><rect x="10.2776%" y="709" width="6.2266%" height="15" fill="rgb(233,142,53)" fg:x="137" fg:w="83"/><text x="10.5276%" y="719.50">engine::..</text></g><g><title>engine::session::Session::save_entity_changes (83 samples, 6.23%)</title><rect x="10.2776%" y="693" width="6.2266%" height="15" fill="rgb(212,116,48)" fg:x="137" fg:w="83"/><text x="10.5276%" y="703.50">engine::..</text></g><g><title>engine::session::Session::world (2 samples, 0.15%)</title><rect x="16.3541%" y="677" width="0.1500%" height="15" fill="rgb(234,55,33)" fg:x="218" fg:w="2"/><text x="16.6041%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.15%)</title><rect x="16.3541%" y="661" width="0.1500%" height="15" fill="rgb(253,92,27)" fg:x="218" fg:w="2"/><text x="16.6041%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.15%)</title><rect x="16.3541%" y="645" width="0.1500%" height="15" fill="rgb(220,7,35)" fg:x="218" fg:w="2"/><text x="16.6041%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.15%)</title><rect x="16.3541%" y="629" width="0.1500%" height="15" fill="rgb(246,124,6)" fg:x="218" fg:w="2"/><text x="16.6041%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.15%)</title><rect x="16.3541%" y="613" width="0.1500%" height="15" fill="rgb(212,111,51)" fg:x="218" fg:w="2"/><text x="16.6041%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="16.3541%" y="597" width="0.1500%" height="15" fill="rgb(253,116,7)" fg:x="218" fg:w="2"/><text x="16.6041%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.15%)</title><rect x="16.3541%" y="581" width="0.1500%" height="15" fill="rgb(213,145,18)" fg:x="218" fg:w="2"/><text x="16.6041%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.15%)</title><rect x="16.3541%" y="565" width="0.1500%" height="15" fill="rgb(219,149,7)" fg:x="218" fg:w="2"/><text x="16.6041%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.15%)</title><rect x="16.3541%" y="549" width="0.1500%" height="15" fill="rgb(225,156,20)" fg:x="218" fg:w="2"/><text x="16.6041%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="16.3541%" y="533" width="0.1500%" height="15" fill="rgb(211,98,19)" fg:x="218" fg:w="2"/><text x="16.6041%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.4291%" y="517" width="0.0750%" height="15" fill="rgb(231,192,31)" fg:x="219" fg:w="1"/><text x="16.6791%" y="527.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="16.4291%" y="501" width="0.0750%" height="15" fill="rgb(249,95,19)" fg:x="219" fg:w="1"/><text x="16.6791%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="16.4291%" y="485" width="0.0750%" height="15" fill="rgb(247,101,36)" fg:x="219" fg:w="1"/><text x="16.6791%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.4291%" y="469" width="0.0750%" height="15" fill="rgb(221,45,43)" fg:x="219" fg:w="1"/><text x="16.6791%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.4291%" y="453" width="0.0750%" height="15" fill="rgb(220,42,1)" fg:x="219" fg:w="1"/><text x="16.6791%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.4291%" y="437" width="0.0750%" height="15" fill="rgb(236,19,24)" fg:x="219" fg:w="1"/><text x="16.6791%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.4291%" y="421" width="0.0750%" height="15" fill="rgb(225,192,6)" fg:x="219" fg:w="1"/><text x="16.6791%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="16.4291%" y="405" width="0.0750%" height="15" fill="rgb(242,30,19)" fg:x="219" fg:w="1"/><text x="16.6791%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="16.4291%" y="389" width="0.0750%" height="15" fill="rgb(240,36,6)" fg:x="219" fg:w="1"/><text x="16.6791%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="16.4291%" y="373" width="0.0750%" height="15" fill="rgb(246,40,28)" fg:x="219" fg:w="1"/><text x="16.6791%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="16.4291%" y="357" width="0.0750%" height="15" fill="rgb(225,155,33)" fg:x="219" fg:w="1"/><text x="16.6791%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="16.4291%" y="341" width="0.0750%" height="15" fill="rgb(240,65,18)" fg:x="219" fg:w="1"/><text x="16.6791%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="16.4291%" y="325" width="0.0750%" height="15" fill="rgb(217,0,48)" fg:x="219" fg:w="1"/><text x="16.6791%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.4291%" y="309" width="0.0750%" height="15" fill="rgb(217,80,15)" fg:x="219" fg:w="1"/><text x="16.6791%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="16.4291%" y="293" width="0.0750%" height="15" fill="rgb(253,43,51)" fg:x="219" fg:w="1"/><text x="16.6791%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.4291%" y="277" width="0.0750%" height="15" fill="rgb(246,60,4)" fg:x="219" fg:w="1"/><text x="16.6791%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="16.4291%" y="261" width="0.0750%" height="15" fill="rgb(230,40,54)" fg:x="219" fg:w="1"/><text x="16.6791%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="16.4291%" y="245" width="0.0750%" height="15" fill="rgb(208,20,44)" fg:x="219" fg:w="1"/><text x="16.6791%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="16.4291%" y="229" width="0.0750%" height="15" fill="rgb(230,22,22)" fg:x="219" fg:w="1"/><text x="16.6791%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.4291%" y="213" width="0.0750%" height="15" fill="rgb(207,57,4)" fg:x="219" fg:w="1"/><text x="16.6791%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5041%" y="693" width="0.0750%" height="15" fill="rgb(242,130,33)" fg:x="220" fg:w="1"/><text x="16.7541%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.5791%" y="645" width="0.0750%" height="15" fill="rgb(218,66,43)" fg:x="221" fg:w="1"/><text x="16.8291%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.23%)</title><rect x="16.5041%" y="709" width="0.2251%" height="15" fill="rgb(236,105,16)" fg:x="220" fg:w="3"/><text x="16.7541%" y="719.50"></text></g><g><title>kernel::model::Entity::new_blank (2 samples, 0.15%)</title><rect x="16.5791%" y="693" width="0.1500%" height="15" fill="rgb(230,46,15)" fg:x="221" fg:w="2"/><text x="16.8291%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.15%)</title><rect x="16.5791%" y="677" width="0.1500%" height="15" fill="rgb(251,172,40)" fg:x="221" fg:w="2"/><text x="16.8291%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (2 samples, 0.15%)</title><rect x="16.5791%" y="661" width="0.1500%" height="15" fill="rgb(225,217,32)" fg:x="221" fg:w="2"/><text x="16.8291%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="16.6542%" y="645" width="0.0750%" height="15" fill="rgb(243,10,29)" fg:x="222" fg:w="1"/><text x="16.9042%" y="655.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="16.6542%" y="629" width="0.0750%" height="15" fill="rgb(207,102,10)" fg:x="222" fg:w="1"/><text x="16.9042%" y="639.50"></text></g><g><title>__libc_malloc (7 samples, 0.53%)</title><rect x="16.7292%" y="613" width="0.5251%" height="15" fill="rgb(241,125,5)" fg:x="223" fg:w="7"/><text x="16.9792%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.60%)</title><rect x="16.7292%" y="693" width="0.6002%" height="15" fill="rgb(230,125,29)" fg:x="223" fg:w="8"/><text x="16.9792%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (8 samples, 0.60%)</title><rect x="16.7292%" y="677" width="0.6002%" height="15" fill="rgb(223,65,44)" fg:x="223" fg:w="8"/><text x="16.9792%" y="687.50"></text></g><g><title>engine::internal::EntityMap::add_entity (8 samples, 0.60%)</title><rect x="16.7292%" y="661" width="0.6002%" height="15" fill="rgb(224,188,28)" fg:x="223" fg:w="8"/><text x="16.9792%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.60%)</title><rect x="16.7292%" y="645" width="0.6002%" height="15" fill="rgb(254,197,27)" fg:x="223" fg:w="8"/><text x="16.9792%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.60%)</title><rect x="16.7292%" y="629" width="0.6002%" height="15" fill="rgb(220,200,25)" fg:x="223" fg:w="8"/><text x="16.9792%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.2543%" y="613" width="0.0750%" height="15" fill="rgb(239,225,54)" fg:x="230" fg:w="1"/><text x="17.5043%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.15%)</title><rect x="17.3293%" y="677" width="0.1500%" height="15" fill="rgb(211,59,40)" fg:x="231" fg:w="2"/><text x="17.5793%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.4044%" y="661" width="0.0750%" height="15" fill="rgb(213,176,46)" fg:x="232" fg:w="1"/><text x="17.6544%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.5544%" y="645" width="0.0750%" height="15" fill="rgb(226,99,4)" fg:x="234" fg:w="1"/><text x="17.8044%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.5544%" y="629" width="0.0750%" height="15" fill="rgb(239,203,43)" fg:x="234" fg:w="1"/><text x="17.8044%" y="639.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="17.6294%" y="645" width="0.0750%" height="15" fill="rgb(246,1,45)" fg:x="235" fg:w="1"/><text x="17.8794%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.6294%" y="629" width="0.0750%" height="15" fill="rgb(231,42,52)" fg:x="235" fg:w="1"/><text x="17.8794%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.6294%" y="613" width="0.0750%" height="15" fill="rgb(240,13,50)" fg:x="235" fg:w="1"/><text x="17.8794%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.6294%" y="597" width="0.0750%" height="15" fill="rgb(225,81,14)" fg:x="235" fg:w="1"/><text x="17.8794%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6294%" y="581" width="0.0750%" height="15" fill="rgb(216,182,23)" fg:x="235" fg:w="1"/><text x="17.8794%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (14 samples, 1.05%)</title><rect x="16.7292%" y="709" width="1.0503%" height="15" fill="rgb(233,137,19)" fg:x="223" fg:w="14"/><text x="16.9792%" y="719.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.45%)</title><rect x="17.3293%" y="693" width="0.4501%" height="15" fill="rgb(242,61,46)" fg:x="231" fg:w="6"/><text x="17.5793%" y="703.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (4 samples, 0.30%)</title><rect x="17.4794%" y="677" width="0.3001%" height="15" fill="rgb(221,168,51)" fg:x="233" fg:w="4"/><text x="17.7294%" y="687.50"></text></g><g><title>kernel::model::Entity::replace_scope (4 samples, 0.30%)</title><rect x="17.4794%" y="661" width="0.3001%" height="15" fill="rgb(238,48,15)" fg:x="233" fg:w="4"/><text x="17.7294%" y="671.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="17.7044%" y="645" width="0.0750%" height="15" fill="rgb(216,13,16)" fg:x="236" fg:w="1"/><text x="17.9544%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.7044%" y="629" width="0.0750%" height="15" fill="rgb(223,185,34)" fg:x="236" fg:w="1"/><text x="17.9544%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="17.7044%" y="613" width="0.0750%" height="15" fill="rgb(228,94,42)" fg:x="236" fg:w="1"/><text x="17.9544%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="17.7794%" y="709" width="0.0750%" height="15" fill="rgb(218,166,43)" fg:x="237" fg:w="1"/><text x="18.0294%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="17.7794%" y="693" width="0.0750%" height="15" fill="rgb(232,30,50)" fg:x="237" fg:w="1"/><text x="18.0294%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="17.7794%" y="677" width="0.0750%" height="15" fill="rgb(245,206,45)" fg:x="237" fg:w="1"/><text x="18.0294%" y="687.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="17.7794%" y="661" width="0.0750%" height="15" fill="rgb(220,56,22)" fg:x="237" fg:w="1"/><text x="18.0294%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.7794%" y="645" width="0.0750%" height="15" fill="rgb(239,129,38)" fg:x="237" fg:w="1"/><text x="18.0294%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="17.8545%" y="709" width="0.0750%" height="15" fill="rgb(207,68,41)" fg:x="238" fg:w="1"/><text x="18.1045%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="17.8545%" y="693" width="0.0750%" height="15" fill="rgb(221,21,7)" fg:x="238" fg:w="1"/><text x="18.1045%" y="703.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="17.8545%" y="677" width="0.0750%" height="15" fill="rgb(240,33,25)" fg:x="238" fg:w="1"/><text x="18.1045%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8545%" y="661" width="0.0750%" height="15" fill="rgb(242,119,10)" fg:x="238" fg:w="1"/><text x="18.1045%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.8545%" y="645" width="0.0750%" height="15" fill="rgb(214,149,40)" fg:x="238" fg:w="1"/><text x="18.1045%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="17.8545%" y="629" width="0.0750%" height="15" fill="rgb(228,25,36)" fg:x="238" fg:w="1"/><text x="18.1045%" y="639.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="17.9295%" y="645" width="0.0750%" height="15" fill="rgb(222,59,15)" fg:x="239" fg:w="1"/><text x="18.1795%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.9295%" y="629" width="0.0750%" height="15" fill="rgb(218,170,0)" fg:x="239" fg:w="1"/><text x="18.1795%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="17.9295%" y="613" width="0.0750%" height="15" fill="rgb(232,173,23)" fg:x="239" fg:w="1"/><text x="18.1795%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="17.9295%" y="597" width="0.0750%" height="15" fill="rgb(218,116,1)" fg:x="239" fg:w="1"/><text x="18.1795%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.9295%" y="581" width="0.0750%" height="15" fill="rgb(207,34,4)" fg:x="239" fg:w="1"/><text x="18.1795%" y="591.50"></text></g><g><title>plugins_core::build::Build::occupying (3 samples, 0.23%)</title><rect x="17.9295%" y="709" width="0.2251%" height="15" fill="rgb(229,54,52)" fg:x="239" fg:w="3"/><text x="18.1795%" y="719.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.23%)</title><rect x="17.9295%" y="693" width="0.2251%" height="15" fill="rgb(211,86,23)" fg:x="239" fg:w="3"/><text x="18.1795%" y="703.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.23%)</title><rect x="17.9295%" y="677" width="0.2251%" height="15" fill="rgb(254,153,34)" fg:x="239" fg:w="3"/><text x="18.1795%" y="687.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.23%)</title><rect x="17.9295%" y="661" width="0.2251%" height="15" fill="rgb(219,220,14)" fg:x="239" fg:w="3"/><text x="18.1795%" y="671.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (2 samples, 0.15%)</title><rect x="18.0045%" y="645" width="0.1500%" height="15" fill="rgb(247,8,26)" fg:x="240" fg:w="2"/><text x="18.2545%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="18.0045%" y="629" width="0.1500%" height="15" fill="rgb(213,129,42)" fg:x="240" fg:w="2"/><text x="18.2545%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.15%)</title><rect x="18.0045%" y="613" width="0.1500%" height="15" fill="rgb(225,95,41)" fg:x="240" fg:w="2"/><text x="18.2545%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.0795%" y="597" width="0.0750%" height="15" fill="rgb(215,134,24)" fg:x="241" fg:w="1"/><text x="18.3295%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.0795%" y="581" width="0.0750%" height="15" fill="rgb(235,23,54)" fg:x="241" fg:w="1"/><text x="18.3295%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="18.1545%" y="677" width="0.0750%" height="15" fill="rgb(229,96,31)" fg:x="242" fg:w="1"/><text x="18.4045%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="18.1545%" y="661" width="0.0750%" height="15" fill="rgb(206,111,12)" fg:x="242" fg:w="1"/><text x="18.4045%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="18.1545%" y="645" width="0.0750%" height="15" fill="rgb(222,177,8)" fg:x="242" fg:w="1"/><text x="18.4045%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="18.1545%" y="629" width="0.0750%" height="15" fill="rgb(251,36,52)" fg:x="242" fg:w="1"/><text x="18.4045%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.1545%" y="613" width="0.0750%" height="15" fill="rgb(216,182,29)" fg:x="242" fg:w="1"/><text x="18.4045%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.1545%" y="597" width="0.0750%" height="15" fill="rgb(241,145,50)" fg:x="242" fg:w="1"/><text x="18.4045%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="18.1545%" y="581" width="0.0750%" height="15" fill="rgb(231,71,35)" fg:x="242" fg:w="1"/><text x="18.4045%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.1545%" y="565" width="0.0750%" height="15" fill="rgb(218,22,17)" fg:x="242" fg:w="1"/><text x="18.4045%" y="575.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="18.2296%" y="645" width="0.0750%" height="15" fill="rgb(225,227,6)" fg:x="243" fg:w="1"/><text x="18.4796%" y="655.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="18.2296%" y="629" width="0.0750%" height="15" fill="rgb(224,204,17)" fg:x="243" fg:w="1"/><text x="18.4796%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.2296%" y="613" width="0.0750%" height="15" fill="rgb(227,61,28)" fg:x="243" fg:w="1"/><text x="18.4796%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.23%)</title><rect x="18.1545%" y="693" width="0.2251%" height="15" fill="rgb(242,148,23)" fg:x="242" fg:w="3"/><text x="18.4045%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.15%)</title><rect x="18.2296%" y="677" width="0.1500%" height="15" fill="rgb(237,105,33)" fg:x="243" fg:w="2"/><text x="18.4796%" y="687.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.15%)</title><rect x="18.2296%" y="661" width="0.1500%" height="15" fill="rgb(238,218,40)" fg:x="243" fg:w="2"/><text x="18.4796%" y="671.50"></text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="18.3046%" y="645" width="0.0750%" height="15" fill="rgb(209,126,11)" fg:x="244" fg:w="1"/><text x="18.5546%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.3046%" y="629" width="0.0750%" height="15" fill="rgb(245,90,11)" fg:x="244" fg:w="1"/><text x="18.5546%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.3046%" y="613" width="0.0750%" height="15" fill="rgb(211,195,10)" fg:x="244" fg:w="1"/><text x="18.5546%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="18.3796%" y="661" width="0.0750%" height="15" fill="rgb(231,45,45)" fg:x="245" fg:w="1"/><text x="18.6296%" y="671.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (119 samples, 8.93%)</title><rect x="9.6024%" y="725" width="8.9272%" height="15" fill="rgb(246,100,43)" fg:x="128" fg:w="119"/><text x="9.8524%" y="735.50">plugins_core:..</text></g><g><title>plugins_core::build::Build::with_username (5 samples, 0.38%)</title><rect x="18.1545%" y="709" width="0.3751%" height="15" fill="rgb(241,193,8)" fg:x="242" fg:w="5"/><text x="18.4045%" y="719.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.15%)</title><rect x="18.3796%" y="693" width="0.1500%" height="15" fill="rgb(208,76,19)" fg:x="245" fg:w="2"/><text x="18.6296%" y="703.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.15%)</title><rect x="18.3796%" y="677" width="0.1500%" height="15" fill="rgb(223,69,40)" fg:x="245" fg:w="2"/><text x="18.6296%" y="687.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="18.4546%" y="661" width="0.0750%" height="15" fill="rgb(207,120,39)" fg:x="246" fg:w="1"/><text x="18.7046%" y="671.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="18.4546%" y="645" width="0.0750%" height="15" fill="rgb(212,209,28)" fg:x="246" fg:w="1"/><text x="18.7046%" y="655.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="18.4546%" y="629" width="0.0750%" height="15" fill="rgb(246,82,29)" fg:x="246" fg:w="1"/><text x="18.7046%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.4546%" y="613" width="0.0750%" height="15" fill="rgb(239,6,40)" fg:x="246" fg:w="1"/><text x="18.7046%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="18.4546%" y="597" width="0.0750%" height="15" fill="rgb(228,181,35)" fg:x="246" fg:w="1"/><text x="18.7046%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.4546%" y="581" width="0.0750%" height="15" fill="rgb(238,151,2)" fg:x="246" fg:w="1"/><text x="18.7046%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::hands (1 samples, 0.08%)</title><rect x="18.5296%" y="725" width="0.0750%" height="15" fill="rgb(236,94,18)" fg:x="247" fg:w="1"/><text x="18.7796%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.5296%" y="709" width="0.0750%" height="15" fill="rgb(208,38,14)" fg:x="247" fg:w="1"/><text x="18.7796%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.15%)</title><rect x="18.6047%" y="677" width="0.1500%" height="15" fill="rgb(234,215,27)" fg:x="248" fg:w="2"/><text x="18.8547%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.15%)</title><rect x="18.6047%" y="661" width="0.1500%" height="15" fill="rgb(254,211,53)" fg:x="248" fg:w="2"/><text x="18.8547%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.15%)</title><rect x="18.6047%" y="645" width="0.1500%" height="15" fill="rgb(216,175,11)" fg:x="248" fg:w="2"/><text x="18.8547%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.15%)</title><rect x="18.6047%" y="629" width="0.1500%" height="15" fill="rgb(246,179,26)" fg:x="248" fg:w="2"/><text x="18.8547%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="18.6047%" y="613" width="0.1500%" height="15" fill="rgb(249,19,52)" fg:x="248" fg:w="2"/><text x="18.8547%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.15%)</title><rect x="18.6047%" y="597" width="0.1500%" height="15" fill="rgb(230,42,52)" fg:x="248" fg:w="2"/><text x="18.8547%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.15%)</title><rect x="18.6047%" y="581" width="0.1500%" height="15" fill="rgb(221,171,0)" fg:x="248" fg:w="2"/><text x="18.8547%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.6797%" y="565" width="0.0750%" height="15" fill="rgb(222,177,40)" fg:x="249" fg:w="1"/><text x="18.9297%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.6797%" y="549" width="0.0750%" height="15" fill="rgb(247,34,16)" fg:x="249" fg:w="1"/><text x="18.9297%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.6797%" y="533" width="0.0750%" height="15" fill="rgb(213,217,37)" fg:x="249" fg:w="1"/><text x="18.9297%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.6797%" y="517" width="0.0750%" height="15" fill="rgb(231,189,24)" fg:x="249" fg:w="1"/><text x="18.9297%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="18.6797%" y="501" width="0.0750%" height="15" fill="rgb(214,22,9)" fg:x="249" fg:w="1"/><text x="18.9297%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="18.6797%" y="485" width="0.0750%" height="15" fill="rgb(212,70,22)" fg:x="249" fg:w="1"/><text x="18.9297%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="18.6797%" y="469" width="0.0750%" height="15" fill="rgb(249,64,51)" fg:x="249" fg:w="1"/><text x="18.9297%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="18.6797%" y="453" width="0.0750%" height="15" fill="rgb(249,148,20)" fg:x="249" fg:w="1"/><text x="18.9297%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.6797%" y="437" width="0.0750%" height="15" fill="rgb(246,46,48)" fg:x="249" fg:w="1"/><text x="18.9297%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.6797%" y="421" width="0.0750%" height="15" fill="rgb(217,34,48)" fg:x="249" fg:w="1"/><text x="18.9297%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.6797%" y="405" width="0.0750%" height="15" fill="rgb(222,45,26)" fg:x="249" fg:w="1"/><text x="18.9297%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="18.6797%" y="389" width="0.0750%" height="15" fill="rgb(230,201,36)" fg:x="249" fg:w="1"/><text x="18.9297%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.6797%" y="373" width="0.0750%" height="15" fill="rgb(217,30,43)" fg:x="249" fg:w="1"/><text x="18.9297%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.6797%" y="357" width="0.0750%" height="15" fill="rgb(230,197,40)" fg:x="249" fg:w="1"/><text x="18.9297%" y="367.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="18.7547%" y="661" width="0.0750%" height="15" fill="rgb(239,181,18)" fg:x="250" fg:w="1"/><text x="19.0047%" y="671.50"></text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="18.7547%" y="645" width="0.0750%" height="15" fill="rgb(222,60,39)" fg:x="250" fg:w="1"/><text x="19.0047%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7547%" y="629" width="0.0750%" height="15" fill="rgb(210,60,22)" fg:x="250" fg:w="1"/><text x="19.0047%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.30%)</title><rect x="18.6047%" y="693" width="0.3001%" height="15" fill="rgb(239,213,48)" fg:x="248" fg:w="4"/><text x="18.8547%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.15%)</title><rect x="18.7547%" y="677" width="0.1500%" height="15" fill="rgb(253,214,23)" fg:x="250" fg:w="2"/><text x="19.0047%" y="687.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="18.8297%" y="661" width="0.0750%" height="15" fill="rgb(211,98,45)" fg:x="251" fg:w="1"/><text x="19.0797%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.8297%" y="645" width="0.0750%" height="15" fill="rgb(239,130,44)" fg:x="251" fg:w="1"/><text x="19.0797%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="18.8297%" y="629" width="0.0750%" height="15" fill="rgb(222,181,35)" fg:x="251" fg:w="1"/><text x="19.0797%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="18.9047%" y="693" width="0.0750%" height="15" fill="rgb(219,219,49)" fg:x="252" fg:w="1"/><text x="19.1547%" y="703.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="18.9047%" y="677" width="0.0750%" height="15" fill="rgb(227,161,51)" fg:x="252" fg:w="1"/><text x="19.1547%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.9047%" y="661" width="0.0750%" height="15" fill="rgb(239,112,27)" fg:x="252" fg:w="1"/><text x="19.1547%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.9047%" y="645" width="0.0750%" height="15" fill="rgb(248,122,18)" fg:x="252" fg:w="1"/><text x="19.1547%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.9047%" y="629" width="0.0750%" height="15" fill="rgb(245,130,23)" fg:x="252" fg:w="1"/><text x="19.1547%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.9047%" y="613" width="0.0750%" height="15" fill="rgb(211,225,28)" fg:x="252" fg:w="1"/><text x="19.1547%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.9047%" y="597" width="0.0750%" height="15" fill="rgb(242,105,44)" fg:x="252" fg:w="1"/><text x="19.1547%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.9047%" y="581" width="0.0750%" height="15" fill="rgb(216,183,46)" fg:x="252" fg:w="1"/><text x="19.1547%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.9047%" y="565" width="0.0750%" height="15" fill="rgb(227,112,9)" fg:x="252" fg:w="1"/><text x="19.1547%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.9047%" y="549" width="0.0750%" height="15" fill="rgb(244,21,0)" fg:x="252" fg:w="1"/><text x="19.1547%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.9047%" y="533" width="0.0750%" height="15" fill="rgb(236,185,14)" fg:x="252" fg:w="1"/><text x="19.1547%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.9047%" y="517" width="0.0750%" height="15" fill="rgb(236,170,30)" fg:x="252" fg:w="1"/><text x="19.1547%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.9047%" y="501" width="0.0750%" height="15" fill="rgb(209,198,51)" fg:x="252" fg:w="1"/><text x="19.1547%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.9047%" y="485" width="0.0750%" height="15" fill="rgb(205,171,26)" fg:x="252" fg:w="1"/><text x="19.1547%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="18.9797%" y="677" width="0.0750%" height="15" fill="rgb(246,41,49)" fg:x="253" fg:w="1"/><text x="19.2297%" y="687.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="18.9797%" y="661" width="0.0750%" height="15" fill="rgb(240,229,12)" fg:x="253" fg:w="1"/><text x="19.2297%" y="671.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (7 samples, 0.53%)</title><rect x="18.6047%" y="725" width="0.5251%" height="15" fill="rgb(212,8,54)" fg:x="248" fg:w="7"/><text x="18.8547%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.53%)</title><rect x="18.6047%" y="709" width="0.5251%" height="15" fill="rgb(230,114,13)" fg:x="248" fg:w="7"/><text x="18.8547%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::set_name (2 samples, 0.15%)</title><rect x="18.9797%" y="693" width="0.1500%" height="15" fill="rgb(229,130,28)" fg:x="253" fg:w="2"/><text x="19.2297%" y="703.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="19.0548%" y="677" width="0.0750%" height="15" fill="rgb(206,139,15)" fg:x="254" fg:w="1"/><text x="19.3048%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.0548%" y="661" width="0.0750%" height="15" fill="rgb(241,188,35)" fg:x="254" fg:w="1"/><text x="19.3048%" y="671.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (205 samples, 15.38%)</title><rect x="3.8260%" y="741" width="15.3788%" height="15" fill="rgb(208,224,26)" fg:x="51" fg:w="205"/><text x="4.0760%" y="751.50">&lt;tests::HoldingKeyInVess..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="19.1298%" y="725" width="0.0750%" height="15" fill="rgb(251,131,28)" fg:x="255" fg:w="1"/><text x="19.3798%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.1298%" y="709" width="0.0750%" height="15" fill="rgb(208,153,1)" fg:x="255" fg:w="1"/><text x="19.3798%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="19.2048%" y="709" width="0.0750%" height="15" fill="rgb(234,33,36)" fg:x="256" fg:w="1"/><text x="19.4548%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="19.2048%" y="693" width="0.0750%" height="15" fill="rgb(246,42,29)" fg:x="256" fg:w="1"/><text x="19.4548%" y="703.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="19.2048%" y="677" width="0.0750%" height="15" fill="rgb(251,114,16)" fg:x="256" fg:w="1"/><text x="19.4548%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2048%" y="661" width="0.0750%" height="15" fill="rgb(233,13,38)" fg:x="256" fg:w="1"/><text x="19.4548%" y="671.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="19.2798%" y="709" width="0.0750%" height="15" fill="rgb(247,120,19)" fg:x="257" fg:w="1"/><text x="19.5298%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="19.3548%" y="693" width="0.0750%" height="15" fill="rgb(205,11,16)" fg:x="258" fg:w="1"/><text x="19.6048%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5049%" y="661" width="0.0750%" height="15" fill="rgb(228,185,19)" fg:x="260" fg:w="1"/><text x="19.7549%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.5049%" y="645" width="0.0750%" height="15" fill="rgb(239,88,52)" fg:x="260" fg:w="1"/><text x="19.7549%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.5049%" y="629" width="0.0750%" height="15" fill="rgb(219,23,1)" fg:x="260" fg:w="1"/><text x="19.7549%" y="639.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="19.5799%" y="661" width="0.0750%" height="15" fill="rgb(253,177,16)" fg:x="261" fg:w="1"/><text x="19.8299%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="19.5799%" y="645" width="0.0750%" height="15" fill="rgb(225,150,40)" fg:x="261" fg:w="1"/><text x="19.8299%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="19.5799%" y="629" width="0.0750%" height="15" fill="rgb(208,108,30)" fg:x="261" fg:w="1"/><text x="19.8299%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="19.5799%" y="613" width="0.0750%" height="15" fill="rgb(214,122,4)" fg:x="261" fg:w="1"/><text x="19.8299%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="19.5799%" y="597" width="0.0750%" height="15" fill="rgb(229,74,37)" fg:x="261" fg:w="1"/><text x="19.8299%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.5799%" y="581" width="0.0750%" height="15" fill="rgb(233,61,41)" fg:x="261" fg:w="1"/><text x="19.8299%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.5799%" y="565" width="0.0750%" height="15" fill="rgb(238,191,5)" fg:x="261" fg:w="1"/><text x="19.8299%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.5799%" y="549" width="0.0750%" height="15" fill="rgb(233,78,24)" fg:x="261" fg:w="1"/><text x="19.8299%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.5799%" y="533" width="0.0750%" height="15" fill="rgb(211,142,8)" fg:x="261" fg:w="1"/><text x="19.8299%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.5799%" y="517" width="0.0750%" height="15" fill="rgb(253,38,53)" fg:x="261" fg:w="1"/><text x="19.8299%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.5799%" y="501" width="0.0750%" height="15" fill="rgb(234,63,51)" fg:x="261" fg:w="1"/><text x="19.8299%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.5799%" y="485" width="0.0750%" height="15" fill="rgb(205,23,31)" fg:x="261" fg:w="1"/><text x="19.8299%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.5799%" y="469" width="0.0750%" height="15" fill="rgb(210,184,50)" fg:x="261" fg:w="1"/><text x="19.8299%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.5799%" y="453" width="0.0750%" height="15" fill="rgb(222,112,26)" fg:x="261" fg:w="1"/><text x="19.8299%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.5799%" y="437" width="0.0750%" height="15" fill="rgb(250,98,18)" fg:x="261" fg:w="1"/><text x="19.8299%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.5799%" y="421" width="0.0750%" height="15" fill="rgb(250,34,12)" fg:x="261" fg:w="1"/><text x="19.8299%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.5799%" y="405" width="0.0750%" height="15" fill="rgb(236,141,30)" fg:x="261" fg:w="1"/><text x="19.8299%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="19.7299%" y="629" width="0.0750%" height="15" fill="rgb(246,134,38)" fg:x="263" fg:w="1"/><text x="19.9799%" y="639.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="19.7299%" y="613" width="0.0750%" height="15" fill="rgb(240,114,4)" fg:x="263" fg:w="1"/><text x="19.9799%" y="623.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="19.7299%" y="597" width="0.0750%" height="15" fill="rgb(243,113,39)" fg:x="263" fg:w="1"/><text x="19.9799%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.7299%" y="581" width="0.0750%" height="15" fill="rgb(239,215,4)" fg:x="263" fg:w="1"/><text x="19.9799%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7299%" y="565" width="0.0750%" height="15" fill="rgb(236,229,45)" fg:x="263" fg:w="1"/><text x="19.9799%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (9 samples, 0.68%)</title><rect x="19.2048%" y="725" width="0.6752%" height="15" fill="rgb(242,2,6)" fg:x="256" fg:w="9"/><text x="19.4548%" y="735.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (7 samples, 0.53%)</title><rect x="19.3548%" y="709" width="0.5251%" height="15" fill="rgb(239,108,21)" fg:x="258" fg:w="7"/><text x="19.6048%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.45%)</title><rect x="19.4299%" y="693" width="0.4501%" height="15" fill="rgb(215,168,34)" fg:x="259" fg:w="6"/><text x="19.6799%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.45%)</title><rect x="19.4299%" y="677" width="0.4501%" height="15" fill="rgb(238,31,17)" fg:x="259" fg:w="6"/><text x="19.6799%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="19.6549%" y="661" width="0.2251%" height="15" fill="rgb(220,133,11)" fg:x="262" fg:w="3"/><text x="19.9049%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="19.6549%" y="645" width="0.2251%" height="15" fill="rgb(212,158,23)" fg:x="262" fg:w="3"/><text x="19.9049%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.8050%" y="629" width="0.0750%" height="15" fill="rgb(223,172,7)" fg:x="264" fg:w="1"/><text x="20.0550%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.8050%" y="613" width="0.0750%" height="15" fill="rgb(244,3,52)" fg:x="264" fg:w="1"/><text x="20.0550%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="19.8050%" y="597" width="0.0750%" height="15" fill="rgb(207,69,27)" fg:x="264" fg:w="1"/><text x="20.0550%" y="607.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="19.8050%" y="581" width="0.0750%" height="15" fill="rgb(213,136,45)" fg:x="264" fg:w="1"/><text x="20.0550%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="19.8800%" y="725" width="0.0750%" height="15" fill="rgb(218,79,17)" fg:x="265" fg:w="1"/><text x="20.1300%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="19.8800%" y="709" width="0.0750%" height="15" fill="rgb(216,106,36)" fg:x="265" fg:w="1"/><text x="20.1300%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.8800%" y="693" width="0.0750%" height="15" fill="rgb(251,27,45)" fg:x="265" fg:w="1"/><text x="20.1300%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.8800%" y="677" width="0.0750%" height="15" fill="rgb(232,21,34)" fg:x="265" fg:w="1"/><text x="20.1300%" y="687.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="19.8800%" y="661" width="0.0750%" height="15" fill="rgb(249,191,16)" fg:x="265" fg:w="1"/><text x="20.1300%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="19.8800%" y="645" width="0.0750%" height="15" fill="rgb(224,88,20)" fg:x="265" fg:w="1"/><text x="20.1300%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="19.8800%" y="629" width="0.0750%" height="15" fill="rgb(237,93,27)" fg:x="265" fg:w="1"/><text x="20.1300%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="19.8800%" y="613" width="0.0750%" height="15" fill="rgb(226,198,48)" fg:x="265" fg:w="1"/><text x="20.1300%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.8800%" y="597" width="0.0750%" height="15" fill="rgb(207,162,53)" fg:x="265" fg:w="1"/><text x="20.1300%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.8800%" y="581" width="0.0750%" height="15" fill="rgb(207,169,9)" fg:x="265" fg:w="1"/><text x="20.1300%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.8800%" y="565" width="0.0750%" height="15" fill="rgb(224,166,46)" fg:x="265" fg:w="1"/><text x="20.1300%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.8800%" y="549" width="0.0750%" height="15" fill="rgb(233,26,6)" fg:x="265" fg:w="1"/><text x="20.1300%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="19.8800%" y="533" width="0.0750%" height="15" fill="rgb(218,106,45)" fg:x="265" fg:w="1"/><text x="20.1300%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="19.8800%" y="517" width="0.0750%" height="15" fill="rgb(240,217,4)" fg:x="265" fg:w="1"/><text x="20.1300%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="19.8800%" y="501" width="0.0750%" height="15" fill="rgb(246,171,10)" fg:x="265" fg:w="1"/><text x="20.1300%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="19.8800%" y="485" width="0.0750%" height="15" fill="rgb(223,197,30)" fg:x="265" fg:w="1"/><text x="20.1300%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="19.8800%" y="469" width="0.0750%" height="15" fill="rgb(207,92,16)" fg:x="265" fg:w="1"/><text x="20.1300%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="19.8800%" y="453" width="0.0750%" height="15" fill="rgb(211,6,44)" fg:x="265" fg:w="1"/><text x="20.1300%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.8800%" y="437" width="0.0750%" height="15" fill="rgb(219,139,2)" fg:x="265" fg:w="1"/><text x="20.1300%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="19.8800%" y="421" width="0.0750%" height="15" fill="rgb(224,103,21)" fg:x="265" fg:w="1"/><text x="20.1300%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.8800%" y="405" width="0.0750%" height="15" fill="rgb(254,110,48)" fg:x="265" fg:w="1"/><text x="20.1300%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="19.8800%" y="389" width="0.0750%" height="15" fill="rgb(212,88,19)" fg:x="265" fg:w="1"/><text x="20.1300%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="19.8800%" y="373" width="0.0750%" height="15" fill="rgb(248,103,6)" fg:x="265" fg:w="1"/><text x="20.1300%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="19.8800%" y="357" width="0.0750%" height="15" fill="rgb(214,53,46)" fg:x="265" fg:w="1"/><text x="20.1300%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.8800%" y="341" width="0.0750%" height="15" fill="rgb(236,190,24)" fg:x="265" fg:w="1"/><text x="20.1300%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="19.9550%" y="709" width="0.1500%" height="15" fill="rgb(254,58,28)" fg:x="266" fg:w="2"/><text x="20.2050%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.0300%" y="693" width="0.0750%" height="15" fill="rgb(243,63,27)" fg:x="267" fg:w="1"/><text x="20.2800%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.0300%" y="677" width="0.0750%" height="15" fill="rgb(206,81,20)" fg:x="267" fg:w="1"/><text x="20.2800%" y="687.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="20.0300%" y="661" width="0.0750%" height="15" fill="rgb(252,69,51)" fg:x="267" fg:w="1"/><text x="20.2800%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="20.1050%" y="709" width="0.1500%" height="15" fill="rgb(222,213,4)" fg:x="268" fg:w="2"/><text x="20.3550%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.15%)</title><rect x="20.1050%" y="693" width="0.1500%" height="15" fill="rgb(226,198,12)" fg:x="268" fg:w="2"/><text x="20.3550%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.15%)</title><rect x="20.1050%" y="677" width="0.1500%" height="15" fill="rgb(248,115,11)" fg:x="268" fg:w="2"/><text x="20.3550%" y="687.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.15%)</title><rect x="20.2551%" y="709" width="0.1500%" height="15" fill="rgb(221,148,54)" fg:x="270" fg:w="2"/><text x="20.5051%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="20.3301%" y="693" width="0.0750%" height="15" fill="rgb(214,209,51)" fg:x="271" fg:w="1"/><text x="20.5801%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="20.3301%" y="677" width="0.0750%" height="15" fill="rgb(249,116,53)" fg:x="271" fg:w="1"/><text x="20.5801%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.3301%" y="661" width="0.0750%" height="15" fill="rgb(248,170,1)" fg:x="271" fg:w="1"/><text x="20.5801%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.3301%" y="645" width="0.0750%" height="15" fill="rgb(244,105,10)" fg:x="271" fg:w="1"/><text x="20.5801%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.3301%" y="629" width="0.0750%" height="15" fill="rgb(229,100,5)" fg:x="271" fg:w="1"/><text x="20.5801%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.3301%" y="613" width="0.0750%" height="15" fill="rgb(233,221,39)" fg:x="271" fg:w="1"/><text x="20.5801%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="20.3301%" y="597" width="0.0750%" height="15" fill="rgb(233,88,21)" fg:x="271" fg:w="1"/><text x="20.5801%" y="607.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="20.3301%" y="581" width="0.0750%" height="15" fill="rgb(206,13,0)" fg:x="271" fg:w="1"/><text x="20.5801%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.30%)</title><rect x="20.6302%" y="645" width="0.3001%" height="15" fill="rgb(242,15,35)" fg:x="275" fg:w="4"/><text x="20.8802%" y="655.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.30%)</title><rect x="20.6302%" y="629" width="0.3001%" height="15" fill="rgb(247,142,41)" fg:x="275" fg:w="4"/><text x="20.8802%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.23%)</title><rect x="20.7052%" y="613" width="0.2251%" height="15" fill="rgb(245,51,29)" fg:x="276" fg:w="3"/><text x="20.9552%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.23%)</title><rect x="20.7052%" y="597" width="0.2251%" height="15" fill="rgb(228,209,43)" fg:x="276" fg:w="3"/><text x="20.9552%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.60%)</title><rect x="20.4801%" y="661" width="0.6002%" height="15" fill="rgb(233,185,9)" fg:x="273" fg:w="8"/><text x="20.7301%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="20.9302%" y="645" width="0.1500%" height="15" fill="rgb(226,93,0)" fg:x="279" fg:w="2"/><text x="21.1802%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.0053%" y="629" width="0.0750%" height="15" fill="rgb(245,194,43)" fg:x="280" fg:w="1"/><text x="21.2553%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.0053%" y="613" width="0.0750%" height="15" fill="rgb(211,145,34)" fg:x="280" fg:w="1"/><text x="21.2553%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.38%)</title><rect x="21.0803%" y="645" width="0.3751%" height="15" fill="rgb(231,228,28)" fg:x="281" fg:w="5"/><text x="21.3303%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="21.3053%" y="629" width="0.1500%" height="15" fill="rgb(236,149,4)" fg:x="284" fg:w="2"/><text x="21.5553%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="21.3053%" y="613" width="0.1500%" height="15" fill="rgb(234,114,38)" fg:x="284" fg:w="2"/><text x="21.5553%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.3803%" y="597" width="0.0750%" height="15" fill="rgb(246,132,51)" fg:x="285" fg:w="1"/><text x="21.6303%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.3803%" y="581" width="0.0750%" height="15" fill="rgb(251,137,22)" fg:x="285" fg:w="1"/><text x="21.6303%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.3803%" y="565" width="0.0750%" height="15" fill="rgb(243,59,52)" fg:x="285" fg:w="1"/><text x="21.6303%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="21.3803%" y="549" width="0.0750%" height="15" fill="rgb(239,56,28)" fg:x="285" fg:w="1"/><text x="21.6303%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.5304%" y="629" width="0.0750%" height="15" fill="rgb(218,168,27)" fg:x="287" fg:w="1"/><text x="21.7804%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="21.6054%" y="629" width="0.0750%" height="15" fill="rgb(232,165,11)" fg:x="288" fg:w="1"/><text x="21.8554%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="21.6054%" y="613" width="0.0750%" height="15" fill="rgb(253,55,41)" fg:x="288" fg:w="1"/><text x="21.8554%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="21.6054%" y="597" width="0.0750%" height="15" fill="rgb(233,206,24)" fg:x="288" fg:w="1"/><text x="21.8554%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.6054%" y="581" width="0.0750%" height="15" fill="rgb(220,199,8)" fg:x="288" fg:w="1"/><text x="21.8554%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="21.6804%" y="629" width="0.2251%" height="15" fill="rgb(254,65,26)" fg:x="289" fg:w="3"/><text x="21.9304%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="21.6804%" y="613" width="0.2251%" height="15" fill="rgb(253,102,23)" fg:x="289" fg:w="3"/><text x="21.9304%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="21.7554%" y="597" width="0.1500%" height="15" fill="rgb(231,103,35)" fg:x="290" fg:w="2"/><text x="22.0054%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.8305%" y="581" width="0.0750%" height="15" fill="rgb(238,26,10)" fg:x="291" fg:w="1"/><text x="22.0805%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="21.9055%" y="613" width="0.2251%" height="15" fill="rgb(234,191,34)" fg:x="292" fg:w="3"/><text x="22.1555%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="21.9805%" y="597" width="0.1500%" height="15" fill="rgb(206,210,9)" fg:x="293" fg:w="2"/><text x="22.2305%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="21.9805%" y="581" width="0.1500%" height="15" fill="rgb(219,155,3)" fg:x="293" fg:w="2"/><text x="22.2305%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.0555%" y="565" width="0.0750%" height="15" fill="rgb(221,62,52)" fg:x="294" fg:w="1"/><text x="22.3055%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.38%)</title><rect x="22.1305%" y="597" width="0.3751%" height="15" fill="rgb(215,197,36)" fg:x="295" fg:w="5"/><text x="22.3805%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="22.2806%" y="581" width="0.2251%" height="15" fill="rgb(226,222,6)" fg:x="297" fg:w="3"/><text x="22.5306%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="22.3556%" y="565" width="0.1500%" height="15" fill="rgb(215,58,28)" fg:x="298" fg:w="2"/><text x="22.6056%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.4306%" y="549" width="0.0750%" height="15" fill="rgb(212,148,2)" fg:x="299" fg:w="1"/><text x="22.6806%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.68%)</title><rect x="21.9055%" y="629" width="0.6752%" height="15" fill="rgb(208,21,42)" fg:x="292" fg:w="9"/><text x="22.1555%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.45%)</title><rect x="22.1305%" y="613" width="0.4501%" height="15" fill="rgb(209,107,26)" fg:x="295" fg:w="6"/><text x="22.3805%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.5056%" y="597" width="0.0750%" height="15" fill="rgb(254,60,47)" fg:x="300" fg:w="1"/><text x="22.7556%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.5056%" y="581" width="0.0750%" height="15" fill="rgb(207,226,45)" fg:x="300" fg:w="1"/><text x="22.7556%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.5056%" y="565" width="0.0750%" height="15" fill="rgb(223,124,22)" fg:x="300" fg:w="1"/><text x="22.7556%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.20%)</title><rect x="21.4554%" y="645" width="1.2003%" height="15" fill="rgb(240,162,13)" fg:x="286" fg:w="16"/><text x="21.7054%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="22.5806%" y="629" width="0.0750%" height="15" fill="rgb(244,199,31)" fg:x="301" fg:w="1"/><text x="22.8306%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="22.5806%" y="613" width="0.0750%" height="15" fill="rgb(207,92,16)" fg:x="301" fg:w="1"/><text x="22.8306%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.5806%" y="597" width="0.0750%" height="15" fill="rgb(215,31,19)" fg:x="301" fg:w="1"/><text x="22.8306%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (33 samples, 2.48%)</title><rect x="20.4051%" y="677" width="2.4756%" height="15" fill="rgb(245,118,14)" fg:x="272" fg:w="33"/><text x="20.6551%" y="687.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.80%)</title><rect x="21.0803%" y="661" width="1.8005%" height="15" fill="rgb(248,12,46)" fg:x="281" fg:w="24"/><text x="21.3303%" y="671.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="22.6557%" y="645" width="0.2251%" height="15" fill="rgb(209,119,0)" fg:x="302" fg:w="3"/><text x="22.9057%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="22.7307%" y="629" width="0.1500%" height="15" fill="rgb(254,51,44)" fg:x="303" fg:w="2"/><text x="22.9807%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="22.7307%" y="613" width="0.1500%" height="15" fill="rgb(253,182,35)" fg:x="303" fg:w="2"/><text x="22.9807%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="22.8057%" y="597" width="0.0750%" height="15" fill="rgb(205,198,39)" fg:x="304" fg:w="1"/><text x="23.0557%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="22.8057%" y="581" width="0.0750%" height="15" fill="rgb(251,175,48)" fg:x="304" fg:w="1"/><text x="23.0557%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="22.8057%" y="565" width="0.0750%" height="15" fill="rgb(239,38,17)" fg:x="304" fg:w="1"/><text x="23.0557%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.8807%" y="645" width="0.0750%" height="15" fill="rgb(212,101,8)" fg:x="305" fg:w="1"/><text x="23.1307%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.9557%" y="629" width="0.0750%" height="15" fill="rgb(228,35,17)" fg:x="306" fg:w="1"/><text x="23.2057%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.30%)</title><rect x="23.0308%" y="629" width="0.3001%" height="15" fill="rgb(214,95,8)" fg:x="307" fg:w="4"/><text x="23.2808%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.2558%" y="613" width="0.0750%" height="15" fill="rgb(210,176,35)" fg:x="310" fg:w="1"/><text x="23.5058%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="23.3308%" y="613" width="0.1500%" height="15" fill="rgb(226,4,3)" fg:x="311" fg:w="2"/><text x="23.5808%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="23.4809%" y="613" width="0.1500%" height="15" fill="rgb(232,133,14)" fg:x="313" fg:w="2"/><text x="23.7309%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6309%" y="597" width="0.0750%" height="15" fill="rgb(250,191,8)" fg:x="315" fg:w="1"/><text x="23.8809%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 0.98%)</title><rect x="22.8807%" y="677" width="0.9752%" height="15" fill="rgb(213,12,45)" fg:x="305" fg:w="13"/><text x="23.1307%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 0.98%)</title><rect x="22.8807%" y="661" width="0.9752%" height="15" fill="rgb(233,78,26)" fg:x="305" fg:w="13"/><text x="23.1307%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.90%)</title><rect x="22.9557%" y="645" width="0.9002%" height="15" fill="rgb(245,222,11)" fg:x="306" fg:w="12"/><text x="23.2057%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.53%)</title><rect x="23.3308%" y="629" width="0.5251%" height="15" fill="rgb(216,174,12)" fg:x="311" fg:w="7"/><text x="23.5808%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="23.6309%" y="613" width="0.2251%" height="15" fill="rgb(213,15,9)" fg:x="315" fg:w="3"/><text x="23.8809%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="23.7059%" y="597" width="0.1500%" height="15" fill="rgb(238,103,32)" fg:x="316" fg:w="2"/><text x="23.9559%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="24.0810%" y="613" width="0.1500%" height="15" fill="rgb(245,85,15)" fg:x="321" fg:w="2"/><text x="24.3310%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.30%)</title><rect x="24.2311%" y="613" width="0.3001%" height="15" fill="rgb(254,204,5)" fg:x="323" fg:w="4"/><text x="24.4811%" y="623.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="24.3061%" y="597" width="0.2251%" height="15" fill="rgb(231,178,15)" fg:x="324" fg:w="3"/><text x="24.5561%" y="607.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="24.5311%" y="597" width="0.2251%" height="15" fill="rgb(248,151,3)" fg:x="327" fg:w="3"/><text x="24.7811%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.7562%" y="597" width="0.0750%" height="15" fill="rgb(250,139,13)" fg:x="330" fg:w="1"/><text x="25.0062%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.7562%" y="581" width="0.0750%" height="15" fill="rgb(243,107,53)" fg:x="330" fg:w="1"/><text x="25.0062%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.23%)</title><rect x="24.9062%" y="581" width="0.2251%" height="15" fill="rgb(232,81,15)" fg:x="332" fg:w="3"/><text x="25.1562%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="24.9812%" y="565" width="0.1500%" height="15" fill="rgb(225,187,48)" fg:x="333" fg:w="2"/><text x="25.2312%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.20%)</title><rect x="24.0060%" y="661" width="1.2003%" height="15" fill="rgb(205,116,12)" fg:x="320" fg:w="16"/><text x="24.2560%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16 samples, 1.20%)</title><rect x="24.0060%" y="645" width="1.2003%" height="15" fill="rgb(220,222,31)" fg:x="320" fg:w="16"/><text x="24.2560%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.13%)</title><rect x="24.0810%" y="629" width="1.1253%" height="15" fill="rgb(233,187,49)" fg:x="321" fg:w="15"/><text x="24.3310%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.68%)</title><rect x="24.5311%" y="613" width="0.6752%" height="15" fill="rgb(211,168,53)" fg:x="327" fg:w="9"/><text x="24.7811%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.38%)</title><rect x="24.8312%" y="597" width="0.3751%" height="15" fill="rgb(206,160,16)" fg:x="331" fg:w="5"/><text x="25.0812%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="25.1313%" y="581" width="0.0750%" height="15" fill="rgb(254,164,13)" fg:x="335" fg:w="1"/><text x="25.3813%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.1313%" y="565" width="0.0750%" height="15" fill="rgb(229,45,30)" fg:x="335" fg:w="1"/><text x="25.3813%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.1313%" y="549" width="0.0750%" height="15" fill="rgb(237,32,10)" fg:x="335" fg:w="1"/><text x="25.3813%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="25.2063%" y="645" width="0.0750%" height="15" fill="rgb(251,20,47)" fg:x="336" fg:w="1"/><text x="25.4563%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.38%)</title><rect x="25.5814%" y="629" width="0.3751%" height="15" fill="rgb(251,116,12)" fg:x="341" fg:w="5"/><text x="25.8314%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="25.8065%" y="613" width="0.1500%" height="15" fill="rgb(214,227,27)" fg:x="344" fg:w="2"/><text x="26.0565%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="25.8815%" y="597" width="0.0750%" height="15" fill="rgb(248,10,53)" fg:x="345" fg:w="1"/><text x="26.1315%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="25.9565%" y="629" width="0.0750%" height="15" fill="rgb(221,176,25)" fg:x="346" fg:w="1"/><text x="26.2065%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="26.0315%" y="629" width="0.0750%" height="15" fill="rgb(205,70,46)" fg:x="347" fg:w="1"/><text x="26.2815%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.0315%" y="613" width="0.0750%" height="15" fill="rgb(217,45,38)" fg:x="347" fg:w="1"/><text x="26.2815%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.0315%" y="597" width="0.0750%" height="15" fill="rgb(243,6,54)" fg:x="347" fg:w="1"/><text x="26.2815%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.15%)</title><rect x="26.1065%" y="629" width="0.1500%" height="15" fill="rgb(242,76,23)" fg:x="348" fg:w="2"/><text x="26.3565%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="26.1065%" y="613" width="0.1500%" height="15" fill="rgb(239,166,0)" fg:x="348" fg:w="2"/><text x="26.3565%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.1815%" y="597" width="0.0750%" height="15" fill="rgb(238,174,32)" fg:x="349" fg:w="1"/><text x="26.4315%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="26.2566%" y="581" width="0.1500%" height="15" fill="rgb(238,124,44)" fg:x="350" fg:w="2"/><text x="26.5066%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.3316%" y="565" width="0.0750%" height="15" fill="rgb(206,185,9)" fg:x="351" fg:w="1"/><text x="26.5816%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.3316%" y="549" width="0.0750%" height="15" fill="rgb(215,157,17)" fg:x="351" fg:w="1"/><text x="26.5816%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="26.4816%" y="565" width="0.0750%" height="15" fill="rgb(251,17,29)" fg:x="353" fg:w="1"/><text x="26.7316%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.4816%" y="549" width="0.0750%" height="15" fill="rgb(227,113,27)" fg:x="353" fg:w="1"/><text x="26.7316%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="26.6317%" y="533" width="0.0750%" height="15" fill="rgb(217,226,24)" fg:x="355" fg:w="1"/><text x="26.8817%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.7067%" y="517" width="0.0750%" height="15" fill="rgb(251,99,38)" fg:x="356" fg:w="1"/><text x="26.9567%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.30%)</title><rect x="26.5566%" y="565" width="0.3001%" height="15" fill="rgb(231,147,19)" fg:x="354" fg:w="4"/><text x="26.8066%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (4 samples, 0.30%)</title><rect x="26.5566%" y="549" width="0.3001%" height="15" fill="rgb(230,86,8)" fg:x="354" fg:w="4"/><text x="26.8066%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="26.7067%" y="533" width="0.1500%" height="15" fill="rgb(237,159,39)" fg:x="356" fg:w="2"/><text x="26.9567%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.7817%" y="517" width="0.0750%" height="15" fill="rgb(247,179,47)" fg:x="357" fg:w="1"/><text x="27.0317%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.7817%" y="501" width="0.0750%" height="15" fill="rgb(253,152,26)" fg:x="357" fg:w="1"/><text x="27.0317%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (10 samples, 0.75%)</title><rect x="26.2566%" y="629" width="0.7502%" height="15" fill="rgb(222,211,15)" fg:x="350" fg:w="10"/><text x="26.5066%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.75%)</title><rect x="26.2566%" y="613" width="0.7502%" height="15" fill="rgb(236,193,6)" fg:x="350" fg:w="10"/><text x="26.5066%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.75%)</title><rect x="26.2566%" y="597" width="0.7502%" height="15" fill="rgb(226,206,10)" fg:x="350" fg:w="10"/><text x="26.5066%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (8 samples, 0.60%)</title><rect x="26.4066%" y="581" width="0.6002%" height="15" fill="rgb(213,125,22)" fg:x="352" fg:w="8"/><text x="26.6566%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="26.8567%" y="565" width="0.1500%" height="15" fill="rgb(221,66,28)" fg:x="358" fg:w="2"/><text x="27.1067%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="27.0068%" y="629" width="0.0750%" height="15" fill="rgb(222,84,53)" fg:x="360" fg:w="1"/><text x="27.2568%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.1568%" y="613" width="0.0750%" height="15" fill="rgb(243,50,15)" fg:x="362" fg:w="1"/><text x="27.4068%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.2318%" y="613" width="0.0750%" height="15" fill="rgb(208,184,23)" fg:x="363" fg:w="1"/><text x="27.4818%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.4569%" y="581" width="0.0750%" height="15" fill="rgb(221,83,2)" fg:x="366" fg:w="1"/><text x="27.7069%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.4569%" y="565" width="0.0750%" height="15" fill="rgb(236,53,24)" fg:x="366" fg:w="1"/><text x="27.7069%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.4569%" y="549" width="0.0750%" height="15" fill="rgb(244,171,29)" fg:x="366" fg:w="1"/><text x="27.7069%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="27.5319%" y="565" width="0.0750%" height="15" fill="rgb(205,19,11)" fg:x="367" fg:w="1"/><text x="27.7819%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="27.6069%" y="549" width="0.0750%" height="15" fill="rgb(207,108,29)" fg:x="368" fg:w="1"/><text x="27.8569%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.30%)</title><rect x="27.5319%" y="581" width="0.3001%" height="15" fill="rgb(236,215,43)" fg:x="367" fg:w="4"/><text x="27.7819%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="27.6069%" y="565" width="0.2251%" height="15" fill="rgb(213,58,35)" fg:x="368" fg:w="3"/><text x="27.8569%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="27.6819%" y="549" width="0.1500%" height="15" fill="rgb(220,211,46)" fg:x="369" fg:w="2"/><text x="27.9319%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.7569%" y="533" width="0.0750%" height="15" fill="rgb(212,134,16)" fg:x="370" fg:w="1"/><text x="28.0069%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.7569%" y="517" width="0.0750%" height="15" fill="rgb(232,90,44)" fg:x="370" fg:w="1"/><text x="28.0069%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.7569%" y="501" width="0.0750%" height="15" fill="rgb(212,18,36)" fg:x="370" fg:w="1"/><text x="28.0069%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="27.9820%" y="565" width="0.1500%" height="15" fill="rgb(206,112,24)" fg:x="373" fg:w="2"/><text x="28.2320%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.2071%" y="549" width="0.0750%" height="15" fill="rgb(238,223,40)" fg:x="376" fg:w="1"/><text x="28.4571%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.30%)</title><rect x="28.1320%" y="565" width="0.3001%" height="15" fill="rgb(226,169,20)" fg:x="375" fg:w="4"/><text x="28.3820%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.15%)</title><rect x="28.2821%" y="549" width="0.1500%" height="15" fill="rgb(241,64,52)" fg:x="377" fg:w="2"/><text x="28.5321%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="28.3571%" y="533" width="0.0750%" height="15" fill="rgb(228,120,25)" fg:x="378" fg:w="1"/><text x="28.6071%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="28.3571%" y="517" width="0.0750%" height="15" fill="rgb(234,108,19)" fg:x="378" fg:w="1"/><text x="28.6071%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.13%)</title><rect x="27.4569%" y="597" width="1.1253%" height="15" fill="rgb(236,133,29)" fg:x="366" fg:w="15"/><text x="27.7069%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.75%)</title><rect x="27.8320%" y="581" width="0.7502%" height="15" fill="rgb(246,174,53)" fg:x="371" fg:w="10"/><text x="28.0820%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="28.4321%" y="565" width="0.1500%" height="15" fill="rgb(210,105,35)" fg:x="379" fg:w="2"/><text x="28.6821%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (21 samples, 1.58%)</title><rect x="27.0818%" y="629" width="1.5754%" height="15" fill="rgb(225,27,26)" fg:x="361" fg:w="21"/><text x="27.3318%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (18 samples, 1.35%)</title><rect x="27.3068%" y="613" width="1.3503%" height="15" fill="rgb(233,2,39)" fg:x="364" fg:w="18"/><text x="27.5568%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="28.5821%" y="597" width="0.0750%" height="15" fill="rgb(219,164,26)" fg:x="381" fg:w="1"/><text x="28.8321%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.5821%" y="581" width="0.0750%" height="15" fill="rgb(236,211,5)" fg:x="381" fg:w="1"/><text x="28.8321%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (47 samples, 3.53%)</title><rect x="25.2063%" y="661" width="3.5259%" height="15" fill="rgb(244,227,23)" fg:x="336" fg:w="47"/><text x="25.4563%" y="671.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (46 samples, 3.45%)</title><rect x="25.2813%" y="645" width="3.4509%" height="15" fill="rgb(230,184,8)" fg:x="337" fg:w="46"/><text x="25.5313%" y="655.50">&lt;se..</text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="28.6572%" y="629" width="0.0750%" height="15" fill="rgb(217,125,48)" fg:x="382" fg:w="1"/><text x="28.9072%" y="639.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="28.6572%" y="613" width="0.0750%" height="15" fill="rgb(223,192,47)" fg:x="382" fg:w="1"/><text x="28.9072%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="29.2573%" y="485" width="0.0750%" height="15" fill="rgb(226,119,10)" fg:x="390" fg:w="1"/><text x="29.5073%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="29.2573%" y="517" width="0.1500%" height="15" fill="rgb(221,49,29)" fg:x="390" fg:w="2"/><text x="29.5073%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="29.2573%" y="501" width="0.1500%" height="15" fill="rgb(217,205,19)" fg:x="390" fg:w="2"/><text x="29.5073%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="29.3323%" y="485" width="0.0750%" height="15" fill="rgb(242,104,7)" fg:x="391" fg:w="1"/><text x="29.5823%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="29.3323%" y="469" width="0.0750%" height="15" fill="rgb(209,154,48)" fg:x="391" fg:w="1"/><text x="29.5823%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="29.4074%" y="485" width="0.1500%" height="15" fill="rgb(219,213,46)" fg:x="392" fg:w="2"/><text x="29.6574%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.4824%" y="469" width="0.0750%" height="15" fill="rgb(229,105,38)" fg:x="393" fg:w="1"/><text x="29.7324%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.4824%" y="453" width="0.0750%" height="15" fill="rgb(205,151,5)" fg:x="393" fg:w="1"/><text x="29.7324%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.4824%" y="437" width="0.0750%" height="15" fill="rgb(248,115,40)" fg:x="393" fg:w="1"/><text x="29.7324%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="29.4074%" y="501" width="0.2251%" height="15" fill="rgb(206,179,2)" fg:x="392" fg:w="3"/><text x="29.6574%" y="511.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="29.5574%" y="485" width="0.0750%" height="15" fill="rgb(230,103,24)" fg:x="394" fg:w="1"/><text x="29.8074%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="29.6324%" y="485" width="0.1500%" height="15" fill="rgb(218,152,4)" fg:x="395" fg:w="2"/><text x="29.8824%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="29.6324%" y="501" width="0.2251%" height="15" fill="rgb(236,161,54)" fg:x="395" fg:w="3"/><text x="29.8824%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="29.7824%" y="485" width="0.0750%" height="15" fill="rgb(226,65,17)" fg:x="397" fg:w="1"/><text x="30.0324%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="29.7824%" y="469" width="0.0750%" height="15" fill="rgb(221,134,44)" fg:x="397" fg:w="1"/><text x="30.0324%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.8575%" y="469" width="0.0750%" height="15" fill="rgb(251,129,4)" fg:x="398" fg:w="1"/><text x="30.1075%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.75%)</title><rect x="29.2573%" y="533" width="0.7502%" height="15" fill="rgb(244,32,34)" fg:x="390" fg:w="10"/><text x="29.5073%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.60%)</title><rect x="29.4074%" y="517" width="0.6002%" height="15" fill="rgb(251,224,37)" fg:x="392" fg:w="8"/><text x="29.6574%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="29.8575%" y="501" width="0.1500%" height="15" fill="rgb(248,117,31)" fg:x="398" fg:w="2"/><text x="30.1075%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="29.8575%" y="485" width="0.1500%" height="15" fill="rgb(222,208,37)" fg:x="398" fg:w="2"/><text x="30.1075%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="29.9325%" y="469" width="0.0750%" height="15" fill="rgb(234,211,25)" fg:x="399" fg:w="1"/><text x="30.1825%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="30.1575%" y="517" width="0.0750%" height="15" fill="rgb(211,72,6)" fg:x="402" fg:w="1"/><text x="30.4075%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.30%)</title><rect x="30.0075%" y="533" width="0.3001%" height="15" fill="rgb(249,198,38)" fg:x="400" fg:w="4"/><text x="30.2575%" y="543.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="30.2326%" y="517" width="0.0750%" height="15" fill="rgb(221,86,51)" fg:x="403" fg:w="1"/><text x="30.4826%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.50%)</title><rect x="28.9572%" y="565" width="1.5004%" height="15" fill="rgb(226,178,43)" fg:x="386" fg:w="20"/><text x="29.2072%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.35%)</title><rect x="29.1073%" y="549" width="1.3503%" height="15" fill="rgb(215,145,7)" fg:x="388" fg:w="18"/><text x="29.3573%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="30.3076%" y="533" width="0.1500%" height="15" fill="rgb(250,202,36)" fg:x="404" fg:w="2"/><text x="30.5576%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="30.3076%" y="517" width="0.1500%" height="15" fill="rgb(215,86,13)" fg:x="404" fg:w="2"/><text x="30.5576%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="30.3076%" y="501" width="0.1500%" height="15" fill="rgb(221,134,12)" fg:x="404" fg:w="2"/><text x="30.5576%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.73%)</title><rect x="28.8822%" y="597" width="1.7254%" height="15" fill="rgb(213,82,10)" fg:x="385" fg:w="23"/><text x="29.1322%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23 samples, 1.73%)</title><rect x="28.8822%" y="581" width="1.7254%" height="15" fill="rgb(214,142,0)" fg:x="385" fg:w="23"/><text x="29.1322%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="30.4576%" y="565" width="0.1500%" height="15" fill="rgb(205,145,9)" fg:x="406" fg:w="2"/><text x="30.7076%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="30.5326%" y="549" width="0.0750%" height="15" fill="rgb(244,214,8)" fg:x="407" fg:w="1"/><text x="30.7826%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="30.6077%" y="597" width="0.0750%" height="15" fill="rgb(224,72,51)" fg:x="408" fg:w="1"/><text x="30.8577%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="30.6077%" y="581" width="0.0750%" height="15" fill="rgb(233,137,37)" fg:x="408" fg:w="1"/><text x="30.8577%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (31 samples, 2.33%)</title><rect x="28.7322%" y="661" width="2.3256%" height="15" fill="rgb(208,71,28)" fg:x="383" fg:w="31"/><text x="28.9822%" y="671.50">s..</text></g><g><title>serde_json::de::from_trait (31 samples, 2.33%)</title><rect x="28.7322%" y="645" width="2.3256%" height="15" fill="rgb(226,31,7)" fg:x="383" fg:w="31"/><text x="28.9822%" y="655.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (31 samples, 2.33%)</title><rect x="28.7322%" y="629" width="2.3256%" height="15" fill="rgb(229,62,18)" fg:x="383" fg:w="31"/><text x="28.9822%" y="639.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (31 samples, 2.33%)</title><rect x="28.7322%" y="613" width="2.3256%" height="15" fill="rgb(226,74,28)" fg:x="383" fg:w="31"/><text x="28.9822%" y="623.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.38%)</title><rect x="30.6827%" y="597" width="0.3751%" height="15" fill="rgb(214,170,18)" fg:x="409" fg:w="5"/><text x="30.9327%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="30.9077%" y="581" width="0.1500%" height="15" fill="rgb(227,229,35)" fg:x="412" fg:w="2"/><text x="31.1577%" y="591.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="31.4329%" y="597" width="0.0750%" height="15" fill="rgb(225,181,39)" fg:x="419" fg:w="1"/><text x="31.6829%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="31.4329%" y="581" width="0.0750%" height="15" fill="rgb(253,124,44)" fg:x="419" fg:w="1"/><text x="31.6829%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.60%)</title><rect x="31.1328%" y="645" width="0.6002%" height="15" fill="rgb(220,75,18)" fg:x="415" fg:w="8"/><text x="31.3828%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.53%)</title><rect x="31.2078%" y="629" width="0.5251%" height="15" fill="rgb(239,175,43)" fg:x="416" fg:w="7"/><text x="31.4578%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.38%)</title><rect x="31.3578%" y="613" width="0.3751%" height="15" fill="rgb(228,112,50)" fg:x="418" fg:w="5"/><text x="31.6078%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="31.5079%" y="597" width="0.2251%" height="15" fill="rgb(232,105,36)" fg:x="420" fg:w="3"/><text x="31.7579%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.15%)</title><rect x="31.5829%" y="581" width="0.1500%" height="15" fill="rgb(227,137,47)" fg:x="421" fg:w="2"/><text x="31.8329%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (2 samples, 0.15%)</title><rect x="31.7329%" y="645" width="0.1500%" height="15" fill="rgb(217,51,9)" fg:x="423" fg:w="2"/><text x="31.9829%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="31.8830%" y="629" width="0.0750%" height="15" fill="rgb(245,117,0)" fg:x="425" fg:w="1"/><text x="32.1330%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.8830%" y="613" width="0.0750%" height="15" fill="rgb(252,52,30)" fg:x="425" fg:w="1"/><text x="32.1330%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.8830%" y="597" width="0.0750%" height="15" fill="rgb(227,85,33)" fg:x="425" fg:w="1"/><text x="32.1330%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.8830%" y="581" width="0.0750%" height="15" fill="rgb(220,157,20)" fg:x="425" fg:w="1"/><text x="32.1330%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.8830%" y="565" width="0.0750%" height="15" fill="rgb(254,14,34)" fg:x="425" fg:w="1"/><text x="32.1330%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.8830%" y="549" width="0.0750%" height="15" fill="rgb(216,103,41)" fg:x="425" fg:w="1"/><text x="32.1330%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.8830%" y="533" width="0.0750%" height="15" fill="rgb(245,221,9)" fg:x="425" fg:w="1"/><text x="32.1330%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.8830%" y="517" width="0.0750%" height="15" fill="rgb(254,136,47)" fg:x="425" fg:w="1"/><text x="32.1330%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.8830%" y="501" width="0.0750%" height="15" fill="rgb(235,71,46)" fg:x="425" fg:w="1"/><text x="32.1330%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.8830%" y="485" width="0.0750%" height="15" fill="rgb(242,154,29)" fg:x="425" fg:w="1"/><text x="32.1330%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.8830%" y="469" width="0.0750%" height="15" fill="rgb(210,65,31)" fg:x="425" fg:w="1"/><text x="32.1330%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.8830%" y="453" width="0.0750%" height="15" fill="rgb(244,9,50)" fg:x="425" fg:w="1"/><text x="32.1330%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.8830%" y="437" width="0.0750%" height="15" fill="rgb(215,141,38)" fg:x="425" fg:w="1"/><text x="32.1330%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.15%)</title><rect x="31.8830%" y="645" width="0.1500%" height="15" fill="rgb(241,129,6)" fg:x="425" fg:w="2"/><text x="32.1330%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9580%" y="629" width="0.0750%" height="15" fill="rgb(253,169,4)" fg:x="426" fg:w="1"/><text x="32.2080%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9580%" y="613" width="0.0750%" height="15" fill="rgb(237,82,36)" fg:x="426" fg:w="1"/><text x="32.2080%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.9580%" y="597" width="0.0750%" height="15" fill="rgb(209,171,11)" fg:x="426" fg:w="1"/><text x="32.2080%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.0330%" y="645" width="0.0750%" height="15" fill="rgb(242,19,22)" fg:x="427" fg:w="1"/><text x="32.2830%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.15%)</title><rect x="32.1080%" y="645" width="0.1500%" height="15" fill="rgb(251,122,24)" fg:x="428" fg:w="2"/><text x="32.3580%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.15%)</title><rect x="32.1080%" y="629" width="0.1500%" height="15" fill="rgb(226,166,42)" fg:x="428" fg:w="2"/><text x="32.3580%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="32.1080%" y="613" width="0.1500%" height="15" fill="rgb(244,101,48)" fg:x="428" fg:w="2"/><text x="32.3580%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="32.3331%" y="613" width="0.0750%" height="15" fill="rgb(227,125,1)" fg:x="431" fg:w="1"/><text x="32.5831%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="32.2581%" y="629" width="0.2251%" height="15" fill="rgb(206,79,43)" fg:x="430" fg:w="3"/><text x="32.5081%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="32.4081%" y="613" width="0.0750%" height="15" fill="rgb(241,109,41)" fg:x="432" fg:w="1"/><text x="32.6581%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="32.4831%" y="629" width="0.1500%" height="15" fill="rgb(219,73,4)" fg:x="433" fg:w="2"/><text x="32.7331%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="32.4831%" y="613" width="0.1500%" height="15" fill="rgb(239,25,41)" fg:x="433" fg:w="2"/><text x="32.7331%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="32.6332%" y="613" width="0.0750%" height="15" fill="rgb(208,88,46)" fg:x="435" fg:w="1"/><text x="32.8832%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="32.6332%" y="597" width="0.0750%" height="15" fill="rgb(239,184,9)" fg:x="435" fg:w="1"/><text x="32.8832%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="32.6332%" y="581" width="0.0750%" height="15" fill="rgb(223,114,13)" fg:x="435" fg:w="1"/><text x="32.8832%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="32.7082%" y="597" width="0.0750%" height="15" fill="rgb(214,28,42)" fg:x="436" fg:w="1"/><text x="32.9582%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.7082%" y="581" width="0.0750%" height="15" fill="rgb(252,32,44)" fg:x="436" fg:w="1"/><text x="32.9582%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.7082%" y="565" width="0.0750%" height="15" fill="rgb(231,159,4)" fg:x="436" fg:w="1"/><text x="32.9582%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.7082%" y="549" width="0.0750%" height="15" fill="rgb(210,35,26)" fg:x="436" fg:w="1"/><text x="32.9582%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="32.7832%" y="581" width="0.0750%" height="15" fill="rgb(208,190,37)" fg:x="437" fg:w="1"/><text x="33.0332%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.7832%" y="565" width="0.0750%" height="15" fill="rgb(226,148,22)" fg:x="437" fg:w="1"/><text x="33.0332%" y="575.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (167 samples, 12.53%)</title><rect x="20.4051%" y="709" width="12.5281%" height="15" fill="rgb(242,153,24)" fg:x="272" fg:w="167"/><text x="20.6551%" y="719.50">engine::internal::E..</text></g><g><title>engine::session::SavesEntities::check_for_changes (167 samples, 12.53%)</title><rect x="20.4051%" y="693" width="12.5281%" height="15" fill="rgb(213,133,7)" fg:x="272" fg:w="167"/><text x="20.6551%" y="703.50">engine::session::Sa..</text></g><g><title>kernel::compare::any_entity_changes (121 samples, 9.08%)</title><rect x="23.8560%" y="677" width="9.0773%" height="15" fill="rgb(248,206,18)" fg:x="318" fg:w="121"/><text x="24.1060%" y="687.50">kernel::compa..</text></g><g><title>treediff::diff::diff (25 samples, 1.88%)</title><rect x="31.0578%" y="661" width="1.8755%" height="15" fill="rgb(233,157,4)" fg:x="414" fg:w="25"/><text x="31.3078%" y="671.50">t..</text></g><g><title>treediff::diff::diff (9 samples, 0.68%)</title><rect x="32.2581%" y="645" width="0.6752%" height="15" fill="rgb(249,179,32)" fg:x="430" fg:w="9"/><text x="32.5081%" y="655.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.30%)</title><rect x="32.6332%" y="629" width="0.3001%" height="15" fill="rgb(248,69,35)" fg:x="435" fg:w="4"/><text x="32.8832%" y="639.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.23%)</title><rect x="32.7082%" y="613" width="0.2251%" height="15" fill="rgb(249,158,38)" fg:x="436" fg:w="3"/><text x="32.9582%" y="623.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.15%)</title><rect x="32.7832%" y="597" width="0.1500%" height="15" fill="rgb(223,18,43)" fg:x="437" fg:w="2"/><text x="33.0332%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.8582%" y="581" width="0.0750%" height="15" fill="rgb(238,42,45)" fg:x="438" fg:w="1"/><text x="33.1082%" y="591.50"></text></g><g><title>engine::session::Session::save_entity_changes (177 samples, 13.28%)</title><rect x="19.9550%" y="725" width="13.2783%" height="15" fill="rgb(219,65,47)" fg:x="266" fg:w="177"/><text x="20.2050%" y="735.50">engine::session::Ses..</text></g><g><title>engine::session::Session::world (4 samples, 0.30%)</title><rect x="32.9332%" y="709" width="0.3001%" height="15" fill="rgb(248,153,12)" fg:x="439" fg:w="4"/><text x="33.1832%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.23%)</title><rect x="33.0083%" y="693" width="0.2251%" height="15" fill="rgb(240,118,4)" fg:x="440" fg:w="3"/><text x="33.2583%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.23%)</title><rect x="33.0083%" y="677" width="0.2251%" height="15" fill="rgb(250,96,34)" fg:x="440" fg:w="3"/><text x="33.2583%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.23%)</title><rect x="33.0083%" y="661" width="0.2251%" height="15" fill="rgb(221,15,4)" fg:x="440" fg:w="3"/><text x="33.2583%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.23%)</title><rect x="33.0083%" y="645" width="0.2251%" height="15" fill="rgb(217,149,33)" fg:x="440" fg:w="3"/><text x="33.2583%" y="655.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="33.0083%" y="629" width="0.2251%" height="15" fill="rgb(213,58,29)" fg:x="440" fg:w="3"/><text x="33.2583%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.23%)</title><rect x="33.0083%" y="613" width="0.2251%" height="15" fill="rgb(236,218,9)" fg:x="440" fg:w="3"/><text x="33.2583%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.23%)</title><rect x="33.0083%" y="597" width="0.2251%" height="15" fill="rgb(248,40,19)" fg:x="440" fg:w="3"/><text x="33.2583%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.23%)</title><rect x="33.0083%" y="581" width="0.2251%" height="15" fill="rgb(212,17,6)" fg:x="440" fg:w="3"/><text x="33.2583%" y="591.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="33.0083%" y="565" width="0.2251%" height="15" fill="rgb(206,212,20)" fg:x="440" fg:w="3"/><text x="33.2583%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.23%)</title><rect x="33.0083%" y="549" width="0.2251%" height="15" fill="rgb(229,80,37)" fg:x="440" fg:w="3"/><text x="33.2583%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.23%)</title><rect x="33.0083%" y="533" width="0.2251%" height="15" fill="rgb(253,8,37)" fg:x="440" fg:w="3"/><text x="33.2583%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.23%)</title><rect x="33.0083%" y="517" width="0.2251%" height="15" fill="rgb(215,16,43)" fg:x="440" fg:w="3"/><text x="33.2583%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="33.0833%" y="501" width="0.1500%" height="15" fill="rgb(236,219,16)" fg:x="441" fg:w="2"/><text x="33.3333%" y="511.50"></text></g><g><title>engine::session::Session::close (188 samples, 14.10%)</title><rect x="19.2048%" y="741" width="14.1035%" height="15" fill="rgb(251,0,3)" fg:x="256" fg:w="188"/><text x="19.4548%" y="751.50">engine::session::Sess..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="33.2333%" y="725" width="0.0750%" height="15" fill="rgb(207,133,37)" fg:x="443" fg:w="1"/><text x="33.4833%" y="735.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="33.2333%" y="709" width="0.0750%" height="15" fill="rgb(250,143,20)" fg:x="443" fg:w="1"/><text x="33.4833%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="33.2333%" y="693" width="0.0750%" height="15" fill="rgb(242,19,50)" fg:x="443" fg:w="1"/><text x="33.4833%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="33.2333%" y="677" width="0.0750%" height="15" fill="rgb(206,124,43)" fg:x="443" fg:w="1"/><text x="33.4833%" y="687.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="33.2333%" y="661" width="0.0750%" height="15" fill="rgb(229,4,38)" fg:x="443" fg:w="1"/><text x="33.4833%" y="671.50"></text></g><g><title>&lt;plugins_core::building::parser::MakeItemParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="33.4584%" y="613" width="0.0750%" height="15" fill="rgb(247,220,45)" fg:x="446" fg:w="1"/><text x="33.7084%" y="623.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (3 samples, 0.23%)</title><rect x="33.3833%" y="645" width="0.2251%" height="15" fill="rgb(247,195,0)" fg:x="445" fg:w="3"/><text x="33.6333%" y="655.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.23%)</title><rect x="33.3833%" y="629" width="0.2251%" height="15" fill="rgb(252,12,19)" fg:x="445" fg:w="3"/><text x="33.6333%" y="639.50"></text></g><g><title>&lt;plugins_core::building::parser::ObliterateActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="33.5334%" y="613" width="0.0750%" height="15" fill="rgb(222,49,50)" fg:x="447" fg:w="1"/><text x="33.7834%" y="623.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="33.5334%" y="597" width="0.0750%" height="15" fill="rgb(209,157,28)" fg:x="447" fg:w="1"/><text x="33.7834%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.6834%" y="549" width="0.0750%" height="15" fill="rgb(238,174,24)" fg:x="449" fg:w="1"/><text x="33.9334%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="33.7584%" y="549" width="0.0750%" height="15" fill="rgb(224,17,28)" fg:x="450" fg:w="1"/><text x="34.0084%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="33.7584%" y="533" width="0.0750%" height="15" fill="rgb(249,7,29)" fg:x="450" fg:w="1"/><text x="34.0084%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7584%" y="517" width="0.0750%" height="15" fill="rgb(243,178,4)" fg:x="450" fg:w="1"/><text x="34.0084%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="34.0585%" y="533" width="0.2251%" height="15" fill="rgb(246,138,35)" fg:x="454" fg:w="3"/><text x="34.3085%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.2086%" y="517" width="0.0750%" height="15" fill="rgb(251,85,18)" fg:x="456" fg:w="1"/><text x="34.4586%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 1.05%)</title><rect x="34.2836%" y="533" width="1.0503%" height="15" fill="rgb(254,55,9)" fg:x="457" fg:w="14"/><text x="34.5336%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 1.05%)</title><rect x="34.2836%" y="517" width="1.0503%" height="15" fill="rgb(248,4,50)" fg:x="457" fg:w="14"/><text x="34.5336%" y="527.50"></text></g><g><title>realloc (12 samples, 0.90%)</title><rect x="34.4336%" y="501" width="0.9002%" height="15" fill="rgb(215,208,14)" fg:x="459" fg:w="12"/><text x="34.6836%" y="511.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="35.3338%" y="517" width="0.0750%" height="15" fill="rgb(218,37,18)" fg:x="471" fg:w="1"/><text x="35.5838%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="35.3338%" y="501" width="0.0750%" height="15" fill="rgb(206,104,13)" fg:x="471" fg:w="1"/><text x="35.5838%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="35.3338%" y="485" width="0.0750%" height="15" fill="rgb(248,94,22)" fg:x="471" fg:w="1"/><text x="35.5838%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="35.3338%" y="469" width="0.0750%" height="15" fill="rgb(235,42,46)" fg:x="471" fg:w="1"/><text x="35.5838%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="35.3338%" y="453" width="0.0750%" height="15" fill="rgb(220,228,48)" fg:x="471" fg:w="1"/><text x="35.5838%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.3338%" y="437" width="0.0750%" height="15" fill="rgb(216,58,12)" fg:x="471" fg:w="1"/><text x="35.5838%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="35.3338%" y="421" width="0.0750%" height="15" fill="rgb(223,97,52)" fg:x="471" fg:w="1"/><text x="35.5838%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="35.3338%" y="405" width="0.0750%" height="15" fill="rgb(208,159,17)" fg:x="471" fg:w="1"/><text x="35.5838%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="35.3338%" y="389" width="0.0750%" height="15" fill="rgb(215,172,9)" fg:x="471" fg:w="1"/><text x="35.5838%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.3338%" y="373" width="0.0750%" height="15" fill="rgb(252,175,30)" fg:x="471" fg:w="1"/><text x="35.5838%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="35.3338%" y="357" width="0.0750%" height="15" fill="rgb(209,159,10)" fg:x="471" fg:w="1"/><text x="35.5838%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="35.3338%" y="341" width="0.0750%" height="15" fill="rgb(229,73,51)" fg:x="471" fg:w="1"/><text x="35.5838%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="35.3338%" y="325" width="0.0750%" height="15" fill="rgb(208,212,43)" fg:x="471" fg:w="1"/><text x="35.5838%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.3338%" y="309" width="0.0750%" height="15" fill="rgb(254,123,53)" fg:x="471" fg:w="1"/><text x="35.5838%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="35.3338%" y="293" width="0.0750%" height="15" fill="rgb(254,128,49)" fg:x="471" fg:w="1"/><text x="35.5838%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.3338%" y="277" width="0.0750%" height="15" fill="rgb(246,16,16)" fg:x="471" fg:w="1"/><text x="35.5838%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.3338%" y="261" width="0.0750%" height="15" fill="rgb(209,200,1)" fg:x="471" fg:w="1"/><text x="35.5838%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="35.3338%" y="245" width="0.0750%" height="15" fill="rgb(235,9,3)" fg:x="471" fg:w="1"/><text x="35.5838%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="35.3338%" y="229" width="0.0750%" height="15" fill="rgb(233,121,54)" fg:x="471" fg:w="1"/><text x="35.5838%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="35.3338%" y="213" width="0.0750%" height="15" fill="rgb(236,80,25)" fg:x="471" fg:w="1"/><text x="35.5838%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="35.3338%" y="197" width="0.0750%" height="15" fill="rgb(220,44,24)" fg:x="471" fg:w="1"/><text x="35.5838%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.3338%" y="181" width="0.0750%" height="15" fill="rgb(236,225,16)" fg:x="471" fg:w="1"/><text x="35.5838%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="35.3338%" y="165" width="0.0750%" height="15" fill="rgb(237,140,0)" fg:x="471" fg:w="1"/><text x="35.5838%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.3338%" y="149" width="0.0750%" height="15" fill="rgb(243,225,53)" fg:x="471" fg:w="1"/><text x="35.5838%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="35.3338%" y="133" width="0.0750%" height="15" fill="rgb(240,140,30)" fg:x="471" fg:w="1"/><text x="35.5838%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.3338%" y="117" width="0.0750%" height="15" fill="rgb(217,51,16)" fg:x="471" fg:w="1"/><text x="35.5838%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="35.3338%" y="101" width="0.0750%" height="15" fill="rgb(245,75,50)" fg:x="471" fg:w="1"/><text x="35.5838%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="35.3338%" y="85" width="0.0750%" height="15" fill="rgb(208,174,22)" fg:x="471" fg:w="1"/><text x="35.5838%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="35.3338%" y="69" width="0.0750%" height="15" fill="rgb(219,98,50)" fg:x="471" fg:w="1"/><text x="35.5838%" y="79.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="35.3338%" y="53" width="0.0750%" height="15" fill="rgb(243,138,3)" fg:x="471" fg:w="1"/><text x="35.5838%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="35.4089%" y="485" width="0.1500%" height="15" fill="rgb(243,132,26)" fg:x="472" fg:w="2"/><text x="35.6589%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.4839%" y="469" width="0.0750%" height="15" fill="rgb(250,201,8)" fg:x="473" fg:w="1"/><text x="35.7339%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="35.5589%" y="485" width="0.0750%" height="15" fill="rgb(213,91,26)" fg:x="474" fg:w="1"/><text x="35.8089%" y="495.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (25 samples, 1.88%)</title><rect x="33.8335%" y="549" width="1.8755%" height="15" fill="rgb(229,117,1)" fg:x="451" fg:w="25"/><text x="34.0835%" y="559.50">p..</text></g><g><title>plugins_core::tools::contained_by (5 samples, 0.38%)</title><rect x="35.3338%" y="533" width="0.3751%" height="15" fill="rgb(229,24,6)" fg:x="471" fg:w="5"/><text x="35.5838%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.30%)</title><rect x="35.4089%" y="517" width="0.3001%" height="15" fill="rgb(206,69,11)" fg:x="472" fg:w="4"/><text x="35.6589%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.30%)</title><rect x="35.4089%" y="501" width="0.3001%" height="15" fill="rgb(234,111,34)" fg:x="472" fg:w="4"/><text x="35.6589%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.6339%" y="485" width="0.0750%" height="15" fill="rgb(213,187,51)" fg:x="475" fg:w="1"/><text x="35.8839%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.6339%" y="469" width="0.0750%" height="15" fill="rgb(207,45,11)" fg:x="475" fg:w="1"/><text x="35.8839%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="35.6339%" y="453" width="0.0750%" height="15" fill="rgb(225,151,47)" fg:x="475" fg:w="1"/><text x="35.8839%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.6339%" y="437" width="0.0750%" height="15" fill="rgb(211,226,5)" fg:x="475" fg:w="1"/><text x="35.8839%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="35.6339%" y="421" width="0.0750%" height="15" fill="rgb(214,83,52)" fg:x="475" fg:w="1"/><text x="35.8839%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.6339%" y="405" width="0.0750%" height="15" fill="rgb(229,49,53)" fg:x="475" fg:w="1"/><text x="35.8839%" y="415.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.7839%" y="517" width="0.0750%" height="15" fill="rgb(246,8,28)" fg:x="477" fg:w="1"/><text x="36.0339%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.38%)</title><rect x="35.7089%" y="533" width="0.3751%" height="15" fill="rgb(207,28,41)" fg:x="476" fg:w="5"/><text x="35.9589%" y="543.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="35.8590%" y="517" width="0.2251%" height="15" fill="rgb(254,22,25)" fg:x="478" fg:w="3"/><text x="36.1090%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="36.0840%" y="533" width="0.0750%" height="15" fill="rgb(209,120,42)" fg:x="481" fg:w="1"/><text x="36.3340%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="36.1590%" y="501" width="0.0750%" height="15" fill="rgb(216,194,18)" fg:x="482" fg:w="1"/><text x="36.4090%" y="511.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="36.1590%" y="485" width="0.0750%" height="15" fill="rgb(213,70,17)" fg:x="482" fg:w="1"/><text x="36.4090%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.1590%" y="469" width="0.0750%" height="15" fill="rgb(228,66,19)" fg:x="482" fg:w="1"/><text x="36.4090%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="36.1590%" y="453" width="0.0750%" height="15" fill="rgb(236,221,54)" fg:x="482" fg:w="1"/><text x="36.4090%" y="463.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (8 samples, 0.60%)</title><rect x="35.7089%" y="549" width="0.6002%" height="15" fill="rgb(207,175,15)" fg:x="476" fg:w="8"/><text x="35.9589%" y="559.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.15%)</title><rect x="36.1590%" y="533" width="0.1500%" height="15" fill="rgb(234,76,8)" fg:x="482" fg:w="2"/><text x="36.4090%" y="543.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.15%)</title><rect x="36.1590%" y="517" width="0.1500%" height="15" fill="rgb(243,106,0)" fg:x="482" fg:w="2"/><text x="36.4090%" y="527.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="36.2341%" y="501" width="0.0750%" height="15" fill="rgb(208,48,19)" fg:x="483" fg:w="1"/><text x="36.4841%" y="511.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="36.2341%" y="485" width="0.0750%" height="15" fill="rgb(251,50,29)" fg:x="483" fg:w="1"/><text x="36.4841%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (36 samples, 2.70%)</title><rect x="33.6834%" y="581" width="2.7007%" height="15" fill="rgb(222,31,49)" fg:x="449" fg:w="36"/><text x="33.9334%" y="591.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (36 samples, 2.70%)</title><rect x="33.6834%" y="565" width="2.7007%" height="15" fill="rgb(232,33,18)" fg:x="449" fg:w="36"/><text x="33.9334%" y="575.50">&lt;p..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="36.3091%" y="549" width="0.0750%" height="15" fill="rgb(209,1,44)" fg:x="484" fg:w="1"/><text x="36.5591%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.3091%" y="533" width="0.0750%" height="15" fill="rgb(211,7,1)" fg:x="484" fg:w="1"/><text x="36.5591%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.3091%" y="517" width="0.0750%" height="15" fill="rgb(224,111,27)" fg:x="484" fg:w="1"/><text x="36.5591%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.3091%" y="501" width="0.0750%" height="15" fill="rgb(252,195,39)" fg:x="484" fg:w="1"/><text x="36.5591%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.3091%" y="485" width="0.0750%" height="15" fill="rgb(237,198,5)" fg:x="484" fg:w="1"/><text x="36.5591%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.3091%" y="469" width="0.0750%" height="15" fill="rgb(232,148,1)" fg:x="484" fg:w="1"/><text x="36.5591%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.3091%" y="453" width="0.0750%" height="15" fill="rgb(249,41,3)" fg:x="484" fg:w="1"/><text x="36.5591%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.3091%" y="437" width="0.0750%" height="15" fill="rgb(215,14,33)" fg:x="484" fg:w="1"/><text x="36.5591%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.3091%" y="421" width="0.0750%" height="15" fill="rgb(209,146,24)" fg:x="484" fg:w="1"/><text x="36.5591%" y="431.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.15%)</title><rect x="36.3841%" y="581" width="0.1500%" height="15" fill="rgb(219,51,47)" fg:x="485" fg:w="2"/><text x="36.6341%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="36.3841%" y="565" width="0.1500%" height="15" fill="rgb(234,217,40)" fg:x="485" fg:w="2"/><text x="36.6341%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="36.3841%" y="549" width="0.1500%" height="15" fill="rgb(228,34,26)" fg:x="485" fg:w="2"/><text x="36.6341%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="36.3841%" y="533" width="0.1500%" height="15" fill="rgb(224,50,29)" fg:x="485" fg:w="2"/><text x="36.6341%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="36.3841%" y="517" width="0.1500%" height="15" fill="rgb(205,79,51)" fg:x="485" fg:w="2"/><text x="36.6341%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="36.3841%" y="501" width="0.1500%" height="15" fill="rgb(218,136,28)" fg:x="485" fg:w="2"/><text x="36.6341%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="36.3841%" y="485" width="0.1500%" height="15" fill="rgb(220,150,10)" fg:x="485" fg:w="2"/><text x="36.6341%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="36.3841%" y="469" width="0.1500%" height="15" fill="rgb(242,158,47)" fg:x="485" fg:w="2"/><text x="36.6341%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="36.3841%" y="453" width="0.1500%" height="15" fill="rgb(209,68,0)" fg:x="485" fg:w="2"/><text x="36.6341%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="36.3841%" y="437" width="0.1500%" height="15" fill="rgb(208,13,41)" fg:x="485" fg:w="2"/><text x="36.6341%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="36.3841%" y="421" width="0.1500%" height="15" fill="rgb(226,201,7)" fg:x="485" fg:w="2"/><text x="36.6341%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="36.3841%" y="405" width="0.1500%" height="15" fill="rgb(236,103,26)" fg:x="485" fg:w="2"/><text x="36.6341%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="36.3841%" y="389" width="0.1500%" height="15" fill="rgb(243,162,8)" fg:x="485" fg:w="2"/><text x="36.6341%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="36.3841%" y="373" width="0.1500%" height="15" fill="rgb(237,225,11)" fg:x="485" fg:w="2"/><text x="36.6341%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="36.5341%" y="565" width="0.0750%" height="15" fill="rgb(247,186,32)" fg:x="487" fg:w="1"/><text x="36.7841%" y="575.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="36.5341%" y="549" width="0.0750%" height="15" fill="rgb(215,26,28)" fg:x="487" fg:w="1"/><text x="36.7841%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.5341%" y="533" width="0.0750%" height="15" fill="rgb(208,121,6)" fg:x="487" fg:w="1"/><text x="36.7841%" y="543.50"></text></g><g><title>plugins_core::library::actions::reply_done (2 samples, 0.15%)</title><rect x="36.5341%" y="581" width="0.1500%" height="15" fill="rgb(225,91,3)" fg:x="487" fg:w="2"/><text x="36.7841%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6092%" y="565" width="0.0750%" height="15" fill="rgb(246,119,36)" fg:x="488" fg:w="1"/><text x="36.8592%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="36.7592%" y="549" width="0.1500%" height="15" fill="rgb(254,173,2)" fg:x="490" fg:w="2"/><text x="37.0092%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.8342%" y="533" width="0.0750%" height="15" fill="rgb(209,87,54)" fg:x="491" fg:w="1"/><text x="37.0842%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.8342%" y="517" width="0.0750%" height="15" fill="rgb(223,216,20)" fg:x="491" fg:w="1"/><text x="37.0842%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.8342%" y="501" width="0.0750%" height="15" fill="rgb(220,31,8)" fg:x="491" fg:w="1"/><text x="37.0842%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.8342%" y="485" width="0.0750%" height="15" fill="rgb(220,185,15)" fg:x="491" fg:w="1"/><text x="37.0842%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.8342%" y="469" width="0.0750%" height="15" fill="rgb(247,190,50)" fg:x="491" fg:w="1"/><text x="37.0842%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.8342%" y="453" width="0.0750%" height="15" fill="rgb(239,173,47)" fg:x="491" fg:w="1"/><text x="37.0842%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.8342%" y="437" width="0.0750%" height="15" fill="rgb(218,190,42)" fg:x="491" fg:w="1"/><text x="37.0842%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.8342%" y="421" width="0.0750%" height="15" fill="rgb(251,207,16)" fg:x="491" fg:w="1"/><text x="37.0842%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.8342%" y="405" width="0.0750%" height="15" fill="rgb(222,199,47)" fg:x="491" fg:w="1"/><text x="37.0842%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.8342%" y="389" width="0.0750%" height="15" fill="rgb(245,190,7)" fg:x="491" fg:w="1"/><text x="37.0842%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.8342%" y="373" width="0.0750%" height="15" fill="rgb(239,85,38)" fg:x="491" fg:w="1"/><text x="37.0842%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="36.8342%" y="357" width="0.0750%" height="15" fill="rgb(229,69,51)" fg:x="491" fg:w="1"/><text x="37.0842%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="36.8342%" y="341" width="0.0750%" height="15" fill="rgb(231,104,51)" fg:x="491" fg:w="1"/><text x="37.0842%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.30%)</title><rect x="36.9092%" y="533" width="0.3001%" height="15" fill="rgb(235,49,4)" fg:x="492" fg:w="4"/><text x="37.1592%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="36.9842%" y="517" width="0.2251%" height="15" fill="rgb(246,166,20)" fg:x="493" fg:w="3"/><text x="37.2342%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="36.9842%" y="501" width="0.2251%" height="15" fill="rgb(230,119,37)" fg:x="493" fg:w="3"/><text x="37.2342%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="37.0593%" y="485" width="0.1500%" height="15" fill="rgb(234,77,34)" fg:x="494" fg:w="2"/><text x="37.3093%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="37.0593%" y="469" width="0.1500%" height="15" fill="rgb(211,222,33)" fg:x="494" fg:w="2"/><text x="37.3093%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="37.0593%" y="453" width="0.1500%" height="15" fill="rgb(226,45,42)" fg:x="494" fg:w="2"/><text x="37.3093%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="37.0593%" y="437" width="0.1500%" height="15" fill="rgb(215,174,28)" fg:x="494" fg:w="2"/><text x="37.3093%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="37.0593%" y="421" width="0.1500%" height="15" fill="rgb(254,173,49)" fg:x="494" fg:w="2"/><text x="37.3093%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="37.0593%" y="405" width="0.1500%" height="15" fill="rgb(229,191,6)" fg:x="494" fg:w="2"/><text x="37.3093%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="37.0593%" y="389" width="0.1500%" height="15" fill="rgb(212,145,22)" fg:x="494" fg:w="2"/><text x="37.3093%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="37.0593%" y="373" width="0.1500%" height="15" fill="rgb(226,6,51)" fg:x="494" fg:w="2"/><text x="37.3093%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="37.0593%" y="357" width="0.1500%" height="15" fill="rgb(227,128,8)" fg:x="494" fg:w="2"/><text x="37.3093%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="37.0593%" y="341" width="0.1500%" height="15" fill="rgb(205,24,10)" fg:x="494" fg:w="2"/><text x="37.3093%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="37.0593%" y="325" width="0.1500%" height="15" fill="rgb(217,147,27)" fg:x="494" fg:w="2"/><text x="37.3093%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="37.0593%" y="309" width="0.1500%" height="15" fill="rgb(250,82,42)" fg:x="494" fg:w="2"/><text x="37.3093%" y="319.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="37.2093%" y="533" width="0.0750%" height="15" fill="rgb(248,93,17)" fg:x="496" fg:w="1"/><text x="37.4593%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="37.2093%" y="517" width="0.0750%" height="15" fill="rgb(254,212,40)" fg:x="496" fg:w="1"/><text x="37.4593%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="37.2093%" y="501" width="0.0750%" height="15" fill="rgb(229,209,2)" fg:x="496" fg:w="1"/><text x="37.4593%" y="511.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="37.2093%" y="485" width="0.0750%" height="15" fill="rgb(211,50,43)" fg:x="496" fg:w="1"/><text x="37.4593%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.3593%" y="501" width="0.0750%" height="15" fill="rgb(245,196,29)" fg:x="498" fg:w="1"/><text x="37.6093%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (12 samples, 0.90%)</title><rect x="36.6842%" y="565" width="0.9002%" height="15" fill="rgb(216,132,13)" fg:x="489" fg:w="12"/><text x="36.9342%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (9 samples, 0.68%)</title><rect x="36.9092%" y="549" width="0.6752%" height="15" fill="rgb(251,108,21)" fg:x="492" fg:w="9"/><text x="37.1592%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.30%)</title><rect x="37.2843%" y="533" width="0.3001%" height="15" fill="rgb(229,174,54)" fg:x="497" fg:w="4"/><text x="37.5343%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.30%)</title><rect x="37.2843%" y="517" width="0.3001%" height="15" fill="rgb(211,175,47)" fg:x="497" fg:w="4"/><text x="37.5343%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.15%)</title><rect x="37.4344%" y="501" width="0.1500%" height="15" fill="rgb(234,5,37)" fg:x="499" fg:w="2"/><text x="37.6844%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.15%)</title><rect x="37.4344%" y="485" width="0.1500%" height="15" fill="rgb(244,150,43)" fg:x="499" fg:w="2"/><text x="37.6844%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.15%)</title><rect x="37.4344%" y="469" width="0.1500%" height="15" fill="rgb(242,172,38)" fg:x="499" fg:w="2"/><text x="37.6844%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="37.4344%" y="453" width="0.1500%" height="15" fill="rgb(205,27,8)" fg:x="499" fg:w="2"/><text x="37.6844%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="37.4344%" y="437" width="0.1500%" height="15" fill="rgb(217,57,3)" fg:x="499" fg:w="2"/><text x="37.6844%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.5844%" y="533" width="0.0750%" height="15" fill="rgb(242,21,38)" fg:x="501" fg:w="1"/><text x="37.8344%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.5844%" y="517" width="0.0750%" height="15" fill="rgb(209,64,43)" fg:x="501" fg:w="1"/><text x="37.8344%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.6594%" y="501" width="0.0750%" height="15" fill="rgb(222,2,46)" fg:x="502" fg:w="1"/><text x="37.9094%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.6594%" y="485" width="0.0750%" height="15" fill="rgb(218,19,44)" fg:x="502" fg:w="1"/><text x="37.9094%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.23%)</title><rect x="37.6594%" y="533" width="0.2251%" height="15" fill="rgb(240,203,42)" fg:x="502" fg:w="3"/><text x="37.9094%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="37.6594%" y="517" width="0.2251%" height="15" fill="rgb(229,23,45)" fg:x="502" fg:w="3"/><text x="37.9094%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.15%)</title><rect x="37.7344%" y="501" width="0.1500%" height="15" fill="rgb(205,228,51)" fg:x="503" fg:w="2"/><text x="37.9844%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.15%)</title><rect x="37.7344%" y="485" width="0.1500%" height="15" fill="rgb(239,36,20)" fg:x="503" fg:w="2"/><text x="37.9844%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="37.7344%" y="469" width="0.1500%" height="15" fill="rgb(248,172,27)" fg:x="503" fg:w="2"/><text x="37.9844%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="37.7344%" y="453" width="0.1500%" height="15" fill="rgb(244,55,32)" fg:x="503" fg:w="2"/><text x="37.9844%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.8095%" y="437" width="0.0750%" height="15" fill="rgb(215,97,16)" fg:x="504" fg:w="1"/><text x="38.0595%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="37.8095%" y="421" width="0.0750%" height="15" fill="rgb(224,80,29)" fg:x="504" fg:w="1"/><text x="38.0595%" y="431.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (6 samples, 0.45%)</title><rect x="37.5844%" y="565" width="0.4501%" height="15" fill="rgb(216,93,47)" fg:x="501" fg:w="6"/><text x="37.8344%" y="575.50"></text></g><g><title>kernel::model::Entity::replace_scope (6 samples, 0.45%)</title><rect x="37.5844%" y="549" width="0.4501%" height="15" fill="rgb(238,159,10)" fg:x="501" fg:w="6"/><text x="37.8344%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.15%)</title><rect x="37.8845%" y="533" width="0.1500%" height="15" fill="rgb(223,98,29)" fg:x="505" fg:w="2"/><text x="38.1345%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.9595%" y="517" width="0.0750%" height="15" fill="rgb(210,176,23)" fg:x="506" fg:w="1"/><text x="38.2095%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="38.1095%" y="549" width="0.0750%" height="15" fill="rgb(242,162,27)" fg:x="508" fg:w="1"/><text x="38.3595%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="38.1095%" y="533" width="0.0750%" height="15" fill="rgb(245,109,32)" fg:x="508" fg:w="1"/><text x="38.3595%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.1845%" y="517" width="0.0750%" height="15" fill="rgb(248,87,8)" fg:x="509" fg:w="1"/><text x="38.4345%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.30%)</title><rect x="38.0345%" y="565" width="0.3001%" height="15" fill="rgb(250,160,50)" fg:x="507" fg:w="4"/><text x="38.2845%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.15%)</title><rect x="38.1845%" y="549" width="0.1500%" height="15" fill="rgb(246,165,25)" fg:x="509" fg:w="2"/><text x="38.4345%" y="559.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.15%)</title><rect x="38.1845%" y="533" width="0.1500%" height="15" fill="rgb(249,219,3)" fg:x="509" fg:w="2"/><text x="38.4345%" y="543.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="38.2596%" y="517" width="0.0750%" height="15" fill="rgb(226,66,5)" fg:x="510" fg:w="1"/><text x="38.5096%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (64 samples, 4.80%)</title><rect x="33.6834%" y="597" width="4.8012%" height="15" fill="rgb(250,220,43)" fg:x="449" fg:w="64"/><text x="33.9334%" y="607.50">&lt;plugi..</text></g><g><title>plugins_core::tools::move_between (24 samples, 1.80%)</title><rect x="36.6842%" y="581" width="1.8005%" height="15" fill="rgb(225,111,31)" fg:x="489" fg:w="24"/><text x="36.9342%" y="591.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.15%)</title><rect x="38.3346%" y="565" width="0.1500%" height="15" fill="rgb(248,106,18)" fg:x="511" fg:w="2"/><text x="38.5846%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="38.4096%" y="549" width="0.0750%" height="15" fill="rgb(220,226,45)" fg:x="512" fg:w="1"/><text x="38.6596%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="38.4096%" y="533" width="0.0750%" height="15" fill="rgb(208,58,53)" fg:x="512" fg:w="1"/><text x="38.6596%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="38.4096%" y="517" width="0.0750%" height="15" fill="rgb(209,133,1)" fg:x="512" fg:w="1"/><text x="38.6596%" y="527.50"></text></g><g><title>kernel::model::Kind::new (1 samples, 0.08%)</title><rect x="38.4096%" y="501" width="0.0750%" height="15" fill="rgb(228,216,27)" fg:x="512" fg:w="1"/><text x="38.6596%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.98%)</title><rect x="38.5596%" y="533" width="0.9752%" height="15" fill="rgb(238,155,2)" fg:x="514" fg:w="13"/><text x="38.8096%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.98%)</title><rect x="38.5596%" y="517" width="0.9752%" height="15" fill="rgb(244,99,37)" fg:x="514" fg:w="13"/><text x="38.8096%" y="527.50"></text></g><g><title>realloc (13 samples, 0.98%)</title><rect x="38.5596%" y="501" width="0.9752%" height="15" fill="rgb(254,32,3)" fg:x="514" fg:w="13"/><text x="38.8096%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.5349%" y="469" width="0.0750%" height="15" fill="rgb(234,46,50)" fg:x="527" fg:w="1"/><text x="39.7849%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.5349%" y="453" width="0.0750%" height="15" fill="rgb(232,118,51)" fg:x="527" fg:w="1"/><text x="39.7849%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.5349%" y="437" width="0.0750%" height="15" fill="rgb(207,24,32)" fg:x="527" fg:w="1"/><text x="39.7849%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.5349%" y="421" width="0.0750%" height="15" fill="rgb(208,107,43)" fg:x="527" fg:w="1"/><text x="39.7849%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.5349%" y="405" width="0.0750%" height="15" fill="rgb(231,28,9)" fg:x="527" fg:w="1"/><text x="39.7849%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="39.5349%" y="389" width="0.0750%" height="15" fill="rgb(241,204,15)" fg:x="527" fg:w="1"/><text x="39.7849%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="39.5349%" y="373" width="0.0750%" height="15" fill="rgb(214,54,15)" fg:x="527" fg:w="1"/><text x="39.7849%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="39.5349%" y="485" width="0.2251%" height="15" fill="rgb(230,12,28)" fg:x="527" fg:w="3"/><text x="39.7849%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="39.6099%" y="469" width="0.1500%" height="15" fill="rgb(221,171,5)" fg:x="528" fg:w="2"/><text x="39.8599%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.6849%" y="453" width="0.0750%" height="15" fill="rgb(207,72,25)" fg:x="529" fg:w="1"/><text x="39.9349%" y="463.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (17 samples, 1.28%)</title><rect x="38.5596%" y="549" width="1.2753%" height="15" fill="rgb(249,79,37)" fg:x="514" fg:w="17"/><text x="38.8096%" y="559.50"></text></g><g><title>plugins_core::tools::contained_by (4 samples, 0.30%)</title><rect x="39.5349%" y="533" width="0.3001%" height="15" fill="rgb(209,98,49)" fg:x="527" fg:w="4"/><text x="39.7849%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.30%)</title><rect x="39.5349%" y="517" width="0.3001%" height="15" fill="rgb(221,62,13)" fg:x="527" fg:w="4"/><text x="39.7849%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.30%)</title><rect x="39.5349%" y="501" width="0.3001%" height="15" fill="rgb(223,39,6)" fg:x="527" fg:w="4"/><text x="39.7849%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.7599%" y="485" width="0.0750%" height="15" fill="rgb(246,163,20)" fg:x="530" fg:w="1"/><text x="40.0099%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.7599%" y="469" width="0.0750%" height="15" fill="rgb(211,111,29)" fg:x="530" fg:w="1"/><text x="40.0099%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="39.7599%" y="453" width="0.0750%" height="15" fill="rgb(243,118,5)" fg:x="530" fg:w="1"/><text x="40.0099%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="39.7599%" y="437" width="0.0750%" height="15" fill="rgb(240,144,52)" fg:x="530" fg:w="1"/><text x="40.0099%" y="447.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="39.7599%" y="421" width="0.0750%" height="15" fill="rgb(244,158,36)" fg:x="530" fg:w="1"/><text x="40.0099%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.7599%" y="405" width="0.0750%" height="15" fill="rgb(241,109,37)" fg:x="530" fg:w="1"/><text x="40.0099%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.7599%" y="389" width="0.0750%" height="15" fill="rgb(213,95,32)" fg:x="530" fg:w="1"/><text x="40.0099%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (19 samples, 1.43%)</title><rect x="38.4846%" y="581" width="1.4254%" height="15" fill="rgb(252,193,9)" fg:x="513" fg:w="19"/><text x="38.7346%" y="591.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (19 samples, 1.43%)</title><rect x="38.4846%" y="565" width="1.4254%" height="15" fill="rgb(225,213,21)" fg:x="513" fg:w="19"/><text x="38.7346%" y="575.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="39.8350%" y="549" width="0.0750%" height="15" fill="rgb(220,172,46)" fg:x="531" fg:w="1"/><text x="40.0850%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.8350%" y="533" width="0.0750%" height="15" fill="rgb(235,75,41)" fg:x="531" fg:w="1"/><text x="40.0850%" y="543.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="39.9100%" y="581" width="0.0750%" height="15" fill="rgb(213,86,9)" fg:x="532" fg:w="1"/><text x="40.1600%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.9100%" y="565" width="0.0750%" height="15" fill="rgb(238,127,51)" fg:x="532" fg:w="1"/><text x="40.1600%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.9100%" y="549" width="0.0750%" height="15" fill="rgb(215,2,54)" fg:x="532" fg:w="1"/><text x="40.1600%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.9100%" y="533" width="0.0750%" height="15" fill="rgb(245,80,6)" fg:x="532" fg:w="1"/><text x="40.1600%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.9100%" y="517" width="0.0750%" height="15" fill="rgb(233,106,42)" fg:x="532" fg:w="1"/><text x="40.1600%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.9100%" y="501" width="0.0750%" height="15" fill="rgb(244,86,38)" fg:x="532" fg:w="1"/><text x="40.1600%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.9100%" y="485" width="0.0750%" height="15" fill="rgb(242,167,7)" fg:x="532" fg:w="1"/><text x="40.1600%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.9100%" y="469" width="0.0750%" height="15" fill="rgb(218,216,3)" fg:x="532" fg:w="1"/><text x="40.1600%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.9100%" y="453" width="0.0750%" height="15" fill="rgb(206,136,36)" fg:x="532" fg:w="1"/><text x="40.1600%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.9100%" y="437" width="0.0750%" height="15" fill="rgb(206,206,15)" fg:x="532" fg:w="1"/><text x="40.1600%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.9100%" y="421" width="0.0750%" height="15" fill="rgb(207,163,34)" fg:x="532" fg:w="1"/><text x="40.1600%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.9100%" y="405" width="0.0750%" height="15" fill="rgb(240,127,22)" fg:x="532" fg:w="1"/><text x="40.1600%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.9100%" y="389" width="0.0750%" height="15" fill="rgb(227,49,5)" fg:x="532" fg:w="1"/><text x="40.1600%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9100%" y="373" width="0.0750%" height="15" fill="rgb(231,8,6)" fg:x="532" fg:w="1"/><text x="40.1600%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.0600%" y="533" width="0.0750%" height="15" fill="rgb(223,21,24)" fg:x="534" fg:w="1"/><text x="40.3100%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.0600%" y="517" width="0.0750%" height="15" fill="rgb(244,44,52)" fg:x="534" fg:w="1"/><text x="40.3100%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.0600%" y="501" width="0.0750%" height="15" fill="rgb(207,73,28)" fg:x="534" fg:w="1"/><text x="40.3100%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.1350%" y="261" width="0.0750%" height="15" fill="rgb(234,215,10)" fg:x="535" fg:w="1"/><text x="40.3850%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.15%)</title><rect x="40.1350%" y="533" width="0.1500%" height="15" fill="rgb(236,85,3)" fg:x="535" fg:w="2"/><text x="40.3850%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.15%)</title><rect x="40.1350%" y="517" width="0.1500%" height="15" fill="rgb(236,102,39)" fg:x="535" fg:w="2"/><text x="40.3850%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="40.1350%" y="501" width="0.1500%" height="15" fill="rgb(243,50,8)" fg:x="535" fg:w="2"/><text x="40.3850%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.15%)</title><rect x="40.1350%" y="485" width="0.1500%" height="15" fill="rgb(207,111,4)" fg:x="535" fg:w="2"/><text x="40.3850%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.15%)</title><rect x="40.1350%" y="469" width="0.1500%" height="15" fill="rgb(230,52,42)" fg:x="535" fg:w="2"/><text x="40.3850%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (2 samples, 0.15%)</title><rect x="40.1350%" y="453" width="0.1500%" height="15" fill="rgb(252,178,50)" fg:x="535" fg:w="2"/><text x="40.3850%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="40.1350%" y="437" width="0.1500%" height="15" fill="rgb(234,46,35)" fg:x="535" fg:w="2"/><text x="40.3850%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="40.1350%" y="421" width="0.1500%" height="15" fill="rgb(228,69,37)" fg:x="535" fg:w="2"/><text x="40.3850%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="40.1350%" y="405" width="0.1500%" height="15" fill="rgb(221,21,11)" fg:x="535" fg:w="2"/><text x="40.3850%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="40.1350%" y="389" width="0.1500%" height="15" fill="rgb(223,56,9)" fg:x="535" fg:w="2"/><text x="40.3850%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="40.1350%" y="373" width="0.1500%" height="15" fill="rgb(234,30,19)" fg:x="535" fg:w="2"/><text x="40.3850%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="40.1350%" y="357" width="0.1500%" height="15" fill="rgb(211,64,54)" fg:x="535" fg:w="2"/><text x="40.3850%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="40.1350%" y="341" width="0.1500%" height="15" fill="rgb(250,189,5)" fg:x="535" fg:w="2"/><text x="40.3850%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="40.1350%" y="325" width="0.1500%" height="15" fill="rgb(214,180,13)" fg:x="535" fg:w="2"/><text x="40.3850%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="40.1350%" y="309" width="0.1500%" height="15" fill="rgb(238,40,40)" fg:x="535" fg:w="2"/><text x="40.3850%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="40.1350%" y="293" width="0.1500%" height="15" fill="rgb(214,101,38)" fg:x="535" fg:w="2"/><text x="40.3850%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="40.1350%" y="277" width="0.1500%" height="15" fill="rgb(242,65,53)" fg:x="535" fg:w="2"/><text x="40.3850%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="40.2101%" y="261" width="0.0750%" height="15" fill="rgb(230,22,45)" fg:x="536" fg:w="1"/><text x="40.4601%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="40.2101%" y="245" width="0.0750%" height="15" fill="rgb(223,77,1)" fg:x="536" fg:w="1"/><text x="40.4601%" y="255.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.38%)</title><rect x="39.9850%" y="565" width="0.3751%" height="15" fill="rgb(227,33,37)" fg:x="533" fg:w="5"/><text x="40.2350%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.38%)</title><rect x="39.9850%" y="549" width="0.3751%" height="15" fill="rgb(224,148,39)" fg:x="533" fg:w="5"/><text x="40.2350%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.2851%" y="533" width="0.0750%" height="15" fill="rgb(232,212,39)" fg:x="537" fg:w="1"/><text x="40.5351%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.2851%" y="517" width="0.0750%" height="15" fill="rgb(251,172,7)" fg:x="537" fg:w="1"/><text x="40.5351%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.3601%" y="533" width="0.0750%" height="15" fill="rgb(219,39,9)" fg:x="538" fg:w="1"/><text x="40.6101%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="40.3601%" y="517" width="0.0750%" height="15" fill="rgb(228,118,14)" fg:x="538" fg:w="1"/><text x="40.6101%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.3601%" y="501" width="0.0750%" height="15" fill="rgb(207,140,10)" fg:x="538" fg:w="1"/><text x="40.6101%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="40.3601%" y="485" width="0.0750%" height="15" fill="rgb(227,111,53)" fg:x="538" fg:w="1"/><text x="40.6101%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="40.3601%" y="469" width="0.0750%" height="15" fill="rgb(216,165,16)" fg:x="538" fg:w="1"/><text x="40.6101%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.4351%" y="533" width="0.0750%" height="15" fill="rgb(226,111,18)" fg:x="539" fg:w="1"/><text x="40.6851%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.4351%" y="517" width="0.0750%" height="15" fill="rgb(251,27,17)" fg:x="539" fg:w="1"/><text x="40.6851%" y="527.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.23%)</title><rect x="40.3601%" y="565" width="0.2251%" height="15" fill="rgb(254,69,9)" fg:x="538" fg:w="3"/><text x="40.6101%" y="575.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.23%)</title><rect x="40.3601%" y="549" width="0.2251%" height="15" fill="rgb(234,140,37)" fg:x="538" fg:w="3"/><text x="40.6101%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="40.5101%" y="533" width="0.0750%" height="15" fill="rgb(220,93,8)" fg:x="540" fg:w="1"/><text x="40.7601%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.5101%" y="517" width="0.0750%" height="15" fill="rgb(236,113,3)" fg:x="540" fg:w="1"/><text x="40.7601%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="40.5101%" y="501" width="0.0750%" height="15" fill="rgb(234,108,23)" fg:x="540" fg:w="1"/><text x="40.7601%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="40.5101%" y="485" width="0.0750%" height="15" fill="rgb(205,114,34)" fg:x="540" fg:w="1"/><text x="40.7601%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="40.5101%" y="469" width="0.0750%" height="15" fill="rgb(236,200,45)" fg:x="540" fg:w="1"/><text x="40.7601%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.5101%" y="453" width="0.0750%" height="15" fill="rgb(227,194,29)" fg:x="540" fg:w="1"/><text x="40.7601%" y="463.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="40.5851%" y="565" width="0.0750%" height="15" fill="rgb(250,76,42)" fg:x="541" fg:w="1"/><text x="40.8351%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="40.5851%" y="549" width="0.0750%" height="15" fill="rgb(208,128,8)" fg:x="541" fg:w="1"/><text x="40.8351%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="40.5851%" y="533" width="0.0750%" height="15" fill="rgb(229,209,35)" fg:x="541" fg:w="1"/><text x="40.8351%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="40.5851%" y="517" width="0.0750%" height="15" fill="rgb(215,39,53)" fg:x="541" fg:w="1"/><text x="40.8351%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="40.5851%" y="501" width="0.0750%" height="15" fill="rgb(219,123,41)" fg:x="541" fg:w="1"/><text x="40.8351%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="40.5851%" y="485" width="0.0750%" height="15" fill="rgb(212,158,18)" fg:x="541" fg:w="1"/><text x="40.8351%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="40.5851%" y="469" width="0.0750%" height="15" fill="rgb(234,196,53)" fg:x="541" fg:w="1"/><text x="40.8351%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="40.5851%" y="453" width="0.0750%" height="15" fill="rgb(210,139,12)" fg:x="541" fg:w="1"/><text x="40.8351%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="40.5851%" y="437" width="0.0750%" height="15" fill="rgb(220,116,54)" fg:x="541" fg:w="1"/><text x="40.8351%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="40.5851%" y="421" width="0.0750%" height="15" fill="rgb(247,103,28)" fg:x="541" fg:w="1"/><text x="40.8351%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="40.5851%" y="405" width="0.0750%" height="15" fill="rgb(253,156,45)" fg:x="541" fg:w="1"/><text x="40.8351%" y="415.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="40.5851%" y="389" width="0.0750%" height="15" fill="rgb(237,157,52)" fg:x="541" fg:w="1"/><text x="40.8351%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="40.6602%" y="549" width="0.0750%" height="15" fill="rgb(253,112,16)" fg:x="542" fg:w="1"/><text x="40.9102%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.6602%" y="533" width="0.0750%" height="15" fill="rgb(234,70,18)" fg:x="542" fg:w="1"/><text x="40.9102%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="40.6602%" y="517" width="0.0750%" height="15" fill="rgb(247,138,19)" fg:x="542" fg:w="1"/><text x="40.9102%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.7352%" y="549" width="0.0750%" height="15" fill="rgb(207,171,1)" fg:x="543" fg:w="1"/><text x="40.9852%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.7352%" y="533" width="0.0750%" height="15" fill="rgb(239,213,3)" fg:x="543" fg:w="1"/><text x="40.9852%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.7352%" y="517" width="0.0750%" height="15" fill="rgb(226,112,4)" fg:x="543" fg:w="1"/><text x="40.9852%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.7352%" y="501" width="0.0750%" height="15" fill="rgb(252,170,12)" fg:x="543" fg:w="1"/><text x="40.9852%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.7352%" y="485" width="0.0750%" height="15" fill="rgb(241,106,13)" fg:x="543" fg:w="1"/><text x="40.9852%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.7352%" y="469" width="0.0750%" height="15" fill="rgb(225,73,23)" fg:x="543" fg:w="1"/><text x="40.9852%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.7352%" y="453" width="0.0750%" height="15" fill="rgb(251,227,29)" fg:x="543" fg:w="1"/><text x="40.9852%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.7352%" y="437" width="0.0750%" height="15" fill="rgb(237,144,13)" fg:x="543" fg:w="1"/><text x="40.9852%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.7352%" y="421" width="0.0750%" height="15" fill="rgb(232,106,46)" fg:x="543" fg:w="1"/><text x="40.9852%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.7352%" y="405" width="0.0750%" height="15" fill="rgb(245,154,53)" fg:x="543" fg:w="1"/><text x="40.9852%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.7352%" y="389" width="0.0750%" height="15" fill="rgb(212,119,47)" fg:x="543" fg:w="1"/><text x="40.9852%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.7352%" y="373" width="0.0750%" height="15" fill="rgb(253,135,25)" fg:x="543" fg:w="1"/><text x="40.9852%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.7352%" y="357" width="0.0750%" height="15" fill="rgb(253,208,39)" fg:x="543" fg:w="1"/><text x="40.9852%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="40.8102%" y="549" width="0.0750%" height="15" fill="rgb(226,64,12)" fg:x="544" fg:w="1"/><text x="41.0602%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.8102%" y="533" width="0.0750%" height="15" fill="rgb(214,162,37)" fg:x="544" fg:w="1"/><text x="41.0602%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="40.8852%" y="533" width="0.0750%" height="15" fill="rgb(250,104,5)" fg:x="545" fg:w="1"/><text x="41.1352%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (34 samples, 2.55%)</title><rect x="38.4846%" y="597" width="2.5506%" height="15" fill="rgb(220,202,50)" fg:x="513" fg:w="34"/><text x="38.7346%" y="607.50">&lt;p..</text></g><g><title>plugins_core::tools::move_between (14 samples, 1.05%)</title><rect x="39.9850%" y="581" width="1.0503%" height="15" fill="rgb(248,67,38)" fg:x="533" fg:w="14"/><text x="40.2350%" y="591.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (5 samples, 0.38%)</title><rect x="40.6602%" y="565" width="0.3751%" height="15" fill="rgb(242,94,35)" fg:x="542" fg:w="5"/><text x="40.9102%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.15%)</title><rect x="40.8852%" y="549" width="0.1500%" height="15" fill="rgb(209,78,37)" fg:x="545" fg:w="2"/><text x="41.1352%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="40.9602%" y="533" width="0.0750%" height="15" fill="rgb(230,126,47)" fg:x="546" fg:w="1"/><text x="41.2102%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="40.9602%" y="517" width="0.0750%" height="15" fill="rgb(222,110,35)" fg:x="546" fg:w="1"/><text x="41.2102%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="40.9602%" y="501" width="0.0750%" height="15" fill="rgb(233,154,20)" fg:x="546" fg:w="1"/><text x="41.2102%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="40.9602%" y="485" width="0.0750%" height="15" fill="rgb(223,53,50)" fg:x="546" fg:w="1"/><text x="41.2102%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="40.9602%" y="469" width="0.0750%" height="15" fill="rgb(251,27,26)" fg:x="546" fg:w="1"/><text x="41.2102%" y="479.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="40.9602%" y="453" width="0.0750%" height="15" fill="rgb(223,189,16)" fg:x="546" fg:w="1"/><text x="41.2102%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="40.9602%" y="437" width="0.0750%" height="15" fill="rgb(207,5,54)" fg:x="546" fg:w="1"/><text x="41.2102%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.9602%" y="421" width="0.0750%" height="15" fill="rgb(254,124,50)" fg:x="546" fg:w="1"/><text x="41.2102%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.9602%" y="405" width="0.0750%" height="15" fill="rgb(253,193,24)" fg:x="546" fg:w="1"/><text x="41.2102%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.9602%" y="389" width="0.0750%" height="15" fill="rgb(235,170,24)" fg:x="546" fg:w="1"/><text x="41.2102%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.9602%" y="373" width="0.0750%" height="15" fill="rgb(222,212,52)" fg:x="546" fg:w="1"/><text x="41.2102%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.9602%" y="357" width="0.0750%" height="15" fill="rgb(223,17,45)" fg:x="546" fg:w="1"/><text x="41.2102%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.9602%" y="341" width="0.0750%" height="15" fill="rgb(227,103,26)" fg:x="546" fg:w="1"/><text x="41.2102%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.9602%" y="325" width="0.0750%" height="15" fill="rgb(251,151,25)" fg:x="546" fg:w="1"/><text x="41.2102%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::carrying::actions::DropAction&gt; (1 samples, 0.08%)</title><rect x="41.0353%" y="597" width="0.0750%" height="15" fill="rgb(248,144,29)" fg:x="547" fg:w="1"/><text x="41.2853%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.45%)</title><rect x="41.1853%" y="501" width="0.4501%" height="15" fill="rgb(245,97,16)" fg:x="549" fg:w="6"/><text x="41.4353%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.45%)</title><rect x="41.1853%" y="485" width="0.4501%" height="15" fill="rgb(220,200,29)" fg:x="549" fg:w="6"/><text x="41.4353%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.45%)</title><rect x="41.1853%" y="469" width="0.4501%" height="15" fill="rgb(206,38,29)" fg:x="549" fg:w="6"/><text x="41.4353%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.45%)</title><rect x="41.1853%" y="453" width="0.4501%" height="15" fill="rgb(245,19,52)" fg:x="549" fg:w="6"/><text x="41.4353%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.45%)</title><rect x="41.1853%" y="437" width="0.4501%" height="15" fill="rgb(205,67,43)" fg:x="549" fg:w="6"/><text x="41.4353%" y="447.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.45%)</title><rect x="41.1853%" y="421" width="0.4501%" height="15" fill="rgb(217,128,23)" fg:x="549" fg:w="6"/><text x="41.4353%" y="431.50"></text></g><g><title>__libc_malloc (4 samples, 0.30%)</title><rect x="41.3353%" y="405" width="0.3001%" height="15" fill="rgb(210,109,28)" fg:x="551" fg:w="4"/><text x="41.5853%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.53%)</title><rect x="41.1853%" y="581" width="0.5251%" height="15" fill="rgb(233,181,7)" fg:x="549" fg:w="7"/><text x="41.4353%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.53%)</title><rect x="41.1853%" y="565" width="0.5251%" height="15" fill="rgb(244,11,22)" fg:x="549" fg:w="7"/><text x="41.4353%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.53%)</title><rect x="41.1853%" y="549" width="0.5251%" height="15" fill="rgb(205,124,54)" fg:x="549" fg:w="7"/><text x="41.4353%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.53%)</title><rect x="41.1853%" y="533" width="0.5251%" height="15" fill="rgb(218,21,27)" fg:x="549" fg:w="7"/><text x="41.4353%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.53%)</title><rect x="41.1853%" y="517" width="0.5251%" height="15" fill="rgb(224,153,33)" fg:x="549" fg:w="7"/><text x="41.4353%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="41.6354%" y="501" width="0.0750%" height="15" fill="rgb(240,219,28)" fg:x="555" fg:w="1"/><text x="41.8854%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="41.6354%" y="485" width="0.0750%" height="15" fill="rgb(214,80,29)" fg:x="555" fg:w="1"/><text x="41.8854%" y="495.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="41.7104%" y="565" width="0.0750%" height="15" fill="rgb(247,148,44)" fg:x="556" fg:w="1"/><text x="41.9604%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="41.7104%" y="549" width="0.0750%" height="15" fill="rgb(243,110,30)" fg:x="556" fg:w="1"/><text x="41.9604%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="41.7104%" y="533" width="0.0750%" height="15" fill="rgb(243,173,41)" fg:x="556" fg:w="1"/><text x="41.9604%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.7104%" y="517" width="0.0750%" height="15" fill="rgb(225,160,47)" fg:x="556" fg:w="1"/><text x="41.9604%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.7104%" y="501" width="0.0750%" height="15" fill="rgb(215,44,21)" fg:x="556" fg:w="1"/><text x="41.9604%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.7104%" y="485" width="0.0750%" height="15" fill="rgb(248,90,3)" fg:x="556" fg:w="1"/><text x="41.9604%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.7104%" y="469" width="0.0750%" height="15" fill="rgb(220,196,49)" fg:x="556" fg:w="1"/><text x="41.9604%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="41.7104%" y="453" width="0.0750%" height="15" fill="rgb(217,138,14)" fg:x="556" fg:w="1"/><text x="41.9604%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="41.7104%" y="437" width="0.0750%" height="15" fill="rgb(219,111,20)" fg:x="556" fg:w="1"/><text x="41.9604%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.7104%" y="421" width="0.0750%" height="15" fill="rgb(218,114,4)" fg:x="556" fg:w="1"/><text x="41.9604%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.7104%" y="405" width="0.0750%" height="15" fill="rgb(238,133,3)" fg:x="556" fg:w="1"/><text x="41.9604%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="41.8605%" y="309" width="0.1500%" height="15" fill="rgb(224,95,0)" fg:x="558" fg:w="2"/><text x="42.1105%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="41.9355%" y="293" width="0.0750%" height="15" fill="rgb(220,169,35)" fg:x="559" fg:w="1"/><text x="42.1855%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.9355%" y="277" width="0.0750%" height="15" fill="rgb(242,116,47)" fg:x="559" fg:w="1"/><text x="42.1855%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="41.9355%" y="261" width="0.0750%" height="15" fill="rgb(251,42,20)" fg:x="559" fg:w="1"/><text x="42.1855%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="41.9355%" y="245" width="0.0750%" height="15" fill="rgb(234,7,34)" fg:x="559" fg:w="1"/><text x="42.1855%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.9355%" y="229" width="0.0750%" height="15" fill="rgb(243,208,13)" fg:x="559" fg:w="1"/><text x="42.1855%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="41.8605%" y="357" width="0.2251%" height="15" fill="rgb(227,33,28)" fg:x="558" fg:w="3"/><text x="42.1105%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="41.8605%" y="341" width="0.2251%" height="15" fill="rgb(250,47,37)" fg:x="558" fg:w="3"/><text x="42.1105%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.23%)</title><rect x="41.8605%" y="325" width="0.2251%" height="15" fill="rgb(235,111,52)" fg:x="558" fg:w="3"/><text x="42.1105%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="42.0105%" y="309" width="0.0750%" height="15" fill="rgb(223,64,28)" fg:x="560" fg:w="1"/><text x="42.2605%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.0105%" y="293" width="0.0750%" height="15" fill="rgb(236,67,22)" fg:x="560" fg:w="1"/><text x="42.2605%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="42.0855%" y="357" width="0.0750%" height="15" fill="rgb(243,79,24)" fg:x="561" fg:w="1"/><text x="42.3355%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.0855%" y="341" width="0.0750%" height="15" fill="rgb(241,225,22)" fg:x="561" fg:w="1"/><text x="42.3355%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="42.0855%" y="325" width="0.0750%" height="15" fill="rgb(228,214,26)" fg:x="561" fg:w="1"/><text x="42.3355%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="42.0855%" y="309" width="0.0750%" height="15" fill="rgb(219,84,52)" fg:x="561" fg:w="1"/><text x="42.3355%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.0855%" y="293" width="0.0750%" height="15" fill="rgb(220,12,22)" fg:x="561" fg:w="1"/><text x="42.3355%" y="303.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (5 samples, 0.38%)</title><rect x="41.8605%" y="405" width="0.3751%" height="15" fill="rgb(219,9,49)" fg:x="558" fg:w="5"/><text x="42.1105%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.38%)</title><rect x="41.8605%" y="389" width="0.3751%" height="15" fill="rgb(237,40,43)" fg:x="558" fg:w="5"/><text x="42.1105%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (5 samples, 0.38%)</title><rect x="41.8605%" y="373" width="0.3751%" height="15" fill="rgb(212,189,32)" fg:x="558" fg:w="5"/><text x="42.1105%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.1605%" y="357" width="0.0750%" height="15" fill="rgb(247,48,9)" fg:x="562" fg:w="1"/><text x="42.4105%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="42.1605%" y="341" width="0.0750%" height="15" fill="rgb(247,112,3)" fg:x="562" fg:w="1"/><text x="42.4105%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="42.1605%" y="325" width="0.0750%" height="15" fill="rgb(243,110,18)" fg:x="562" fg:w="1"/><text x="42.4105%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.45%)</title><rect x="41.8605%" y="469" width="0.4501%" height="15" fill="rgb(233,223,44)" fg:x="558" fg:w="6"/><text x="42.1105%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.45%)</title><rect x="41.8605%" y="453" width="0.4501%" height="15" fill="rgb(245,160,20)" fg:x="558" fg:w="6"/><text x="42.1105%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.45%)</title><rect x="41.8605%" y="437" width="0.4501%" height="15" fill="rgb(225,37,1)" fg:x="558" fg:w="6"/><text x="42.1105%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.45%)</title><rect x="41.8605%" y="421" width="0.4501%" height="15" fill="rgb(253,227,39)" fg:x="558" fg:w="6"/><text x="42.1105%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.2356%" y="405" width="0.0750%" height="15" fill="rgb(240,179,26)" fg:x="563" fg:w="1"/><text x="42.4856%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.2356%" y="389" width="0.0750%" height="15" fill="rgb(237,212,23)" fg:x="563" fg:w="1"/><text x="42.4856%" y="399.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.2356%" y="373" width="0.0750%" height="15" fill="rgb(221,38,11)" fg:x="563" fg:w="1"/><text x="42.4856%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.2356%" y="357" width="0.0750%" height="15" fill="rgb(215,85,6)" fg:x="563" fg:w="1"/><text x="42.4856%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="42.3856%" y="341" width="0.0750%" height="15" fill="rgb(239,64,14)" fg:x="565" fg:w="1"/><text x="42.6356%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.3856%" y="325" width="0.0750%" height="15" fill="rgb(215,150,32)" fg:x="565" fg:w="1"/><text x="42.6356%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (9 samples, 0.68%)</title><rect x="41.8605%" y="517" width="0.6752%" height="15" fill="rgb(238,15,13)" fg:x="558" fg:w="9"/><text x="42.1105%" y="527.50"></text></g><g><title>engine::internal::Entities::add_persisted (9 samples, 0.68%)</title><rect x="41.8605%" y="501" width="0.6752%" height="15" fill="rgb(251,87,8)" fg:x="558" fg:w="9"/><text x="42.1105%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity (9 samples, 0.68%)</title><rect x="41.8605%" y="485" width="0.6752%" height="15" fill="rgb(206,86,1)" fg:x="558" fg:w="9"/><text x="42.1105%" y="495.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.23%)</title><rect x="42.3106%" y="469" width="0.2251%" height="15" fill="rgb(208,151,45)" fg:x="564" fg:w="3"/><text x="42.5606%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="42.3106%" y="453" width="0.2251%" height="15" fill="rgb(231,181,24)" fg:x="564" fg:w="3"/><text x="42.5606%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="42.3106%" y="437" width="0.2251%" height="15" fill="rgb(240,106,29)" fg:x="564" fg:w="3"/><text x="42.5606%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="42.3106%" y="421" width="0.2251%" height="15" fill="rgb(227,166,11)" fg:x="564" fg:w="3"/><text x="42.5606%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="42.3106%" y="405" width="0.2251%" height="15" fill="rgb(254,14,34)" fg:x="564" fg:w="3"/><text x="42.5606%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="42.3106%" y="389" width="0.2251%" height="15" fill="rgb(223,222,6)" fg:x="564" fg:w="3"/><text x="42.5606%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="42.3106%" y="373" width="0.2251%" height="15" fill="rgb(245,69,24)" fg:x="564" fg:w="3"/><text x="42.5606%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="42.3106%" y="357" width="0.2251%" height="15" fill="rgb(213,193,7)" fg:x="564" fg:w="3"/><text x="42.5606%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.4606%" y="341" width="0.0750%" height="15" fill="rgb(237,92,51)" fg:x="566" fg:w="1"/><text x="42.7106%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="42.4606%" y="325" width="0.0750%" height="15" fill="rgb(225,194,6)" fg:x="566" fg:w="1"/><text x="42.7106%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.4606%" y="309" width="0.0750%" height="15" fill="rgb(205,159,49)" fg:x="566" fg:w="1"/><text x="42.7106%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.4606%" y="293" width="0.0750%" height="15" fill="rgb(219,69,2)" fg:x="566" fg:w="1"/><text x="42.7106%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (11 samples, 0.83%)</title><rect x="41.8605%" y="533" width="0.8252%" height="15" fill="rgb(215,107,24)" fg:x="558" fg:w="11"/><text x="42.1105%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (2 samples, 0.15%)</title><rect x="42.5356%" y="517" width="0.1500%" height="15" fill="rgb(249,208,29)" fg:x="567" fg:w="2"/><text x="42.7856%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="42.5356%" y="501" width="0.1500%" height="15" fill="rgb(213,147,10)" fg:x="567" fg:w="2"/><text x="42.7856%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="42.5356%" y="485" width="0.1500%" height="15" fill="rgb(254,140,42)" fg:x="567" fg:w="2"/><text x="42.7856%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="42.5356%" y="469" width="0.1500%" height="15" fill="rgb(249,9,15)" fg:x="567" fg:w="2"/><text x="42.7856%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="42.5356%" y="453" width="0.1500%" height="15" fill="rgb(210,19,33)" fg:x="567" fg:w="2"/><text x="42.7856%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="42.5356%" y="437" width="0.1500%" height="15" fill="rgb(241,121,22)" fg:x="567" fg:w="2"/><text x="42.7856%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="42.5356%" y="421" width="0.1500%" height="15" fill="rgb(244,69,52)" fg:x="567" fg:w="2"/><text x="42.7856%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="42.5356%" y="405" width="0.1500%" height="15" fill="rgb(244,191,54)" fg:x="567" fg:w="2"/><text x="42.7856%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="42.5356%" y="389" width="0.1500%" height="15" fill="rgb(250,3,53)" fg:x="567" fg:w="2"/><text x="42.7856%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="42.5356%" y="373" width="0.1500%" height="15" fill="rgb(205,77,3)" fg:x="567" fg:w="2"/><text x="42.7856%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="42.5356%" y="357" width="0.1500%" height="15" fill="rgb(207,155,3)" fg:x="567" fg:w="2"/><text x="42.7856%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="42.5356%" y="341" width="0.1500%" height="15" fill="rgb(224,79,2)" fg:x="567" fg:w="2"/><text x="42.7856%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="42.5356%" y="325" width="0.1500%" height="15" fill="rgb(243,172,5)" fg:x="567" fg:w="2"/><text x="42.7856%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="42.6857%" y="533" width="0.0750%" height="15" fill="rgb(217,23,43)" fg:x="569" fg:w="1"/><text x="42.9357%" y="543.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (16 samples, 1.20%)</title><rect x="41.7104%" y="581" width="1.2003%" height="15" fill="rgb(223,109,20)" fg:x="556" fg:w="16"/><text x="41.9604%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (15 samples, 1.13%)</title><rect x="41.7854%" y="565" width="1.1253%" height="15" fill="rgb(232,159,21)" fg:x="557" fg:w="15"/><text x="42.0354%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (15 samples, 1.13%)</title><rect x="41.7854%" y="549" width="1.1253%" height="15" fill="rgb(219,58,2)" fg:x="557" fg:w="15"/><text x="42.0354%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="42.7607%" y="533" width="0.1500%" height="15" fill="rgb(241,56,8)" fg:x="570" fg:w="2"/><text x="43.0107%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.8357%" y="517" width="0.0750%" height="15" fill="rgb(249,10,27)" fg:x="571" fg:w="1"/><text x="43.0857%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.8357%" y="501" width="0.0750%" height="15" fill="rgb(248,177,5)" fg:x="571" fg:w="1"/><text x="43.0857%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.8357%" y="485" width="0.0750%" height="15" fill="rgb(239,12,30)" fg:x="571" fg:w="1"/><text x="43.0857%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="42.9107%" y="549" width="0.0750%" height="15" fill="rgb(229,164,25)" fg:x="572" fg:w="1"/><text x="43.1607%" y="559.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="42.9107%" y="533" width="0.0750%" height="15" fill="rgb(231,217,50)" fg:x="572" fg:w="1"/><text x="43.1607%" y="543.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (26 samples, 1.95%)</title><rect x="41.1103%" y="597" width="1.9505%" height="15" fill="rgb(247,99,32)" fg:x="548" fg:w="26"/><text x="41.3603%" y="607.50">e..</text></g><g><title>engine::session::Session::world (2 samples, 0.15%)</title><rect x="42.9107%" y="581" width="0.1500%" height="15" fill="rgb(240,74,50)" fg:x="572" fg:w="2"/><text x="43.1607%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.15%)</title><rect x="42.9107%" y="565" width="0.1500%" height="15" fill="rgb(218,54,8)" fg:x="572" fg:w="2"/><text x="43.1607%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="42.9857%" y="549" width="0.0750%" height="15" fill="rgb(227,132,20)" fg:x="573" fg:w="1"/><text x="43.2357%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.0608%" y="565" width="0.0750%" height="15" fill="rgb(232,134,12)" fg:x="574" fg:w="1"/><text x="43.3108%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="44.2611%" y="485" width="0.0750%" height="15" fill="rgb(250,129,18)" fg:x="590" fg:w="1"/><text x="44.5111%" y="495.50"></text></g><g><title>__libc_free (7 samples, 0.53%)</title><rect x="44.3361%" y="485" width="0.5251%" height="15" fill="rgb(232,129,47)" fg:x="591" fg:w="7"/><text x="44.5861%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.75%)</title><rect x="44.1860%" y="501" width="0.7502%" height="15" fill="rgb(230,31,40)" fg:x="589" fg:w="10"/><text x="44.4360%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="44.8612%" y="485" width="0.0750%" height="15" fill="rgb(232,126,10)" fg:x="598" fg:w="1"/><text x="45.1112%" y="495.50"></text></g><g><title>__libc_free (4 samples, 0.30%)</title><rect x="44.9362%" y="501" width="0.3001%" height="15" fill="rgb(205,46,31)" fg:x="599" fg:w="4"/><text x="45.1862%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="45.3113%" y="485" width="0.1500%" height="15" fill="rgb(232,37,37)" fg:x="604" fg:w="2"/><text x="45.5613%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="45.3113%" y="469" width="0.1500%" height="15" fill="rgb(240,91,16)" fg:x="604" fg:w="2"/><text x="45.5613%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.58%)</title><rect x="43.9610%" y="517" width="1.5754%" height="15" fill="rgb(224,160,9)" fg:x="586" fg:w="21"/><text x="44.2110%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (4 samples, 0.30%)</title><rect x="45.2363%" y="501" width="0.3001%" height="15" fill="rgb(215,116,14)" fg:x="603" fg:w="4"/><text x="45.4863%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="45.4614%" y="485" width="0.0750%" height="15" fill="rgb(235,46,36)" fg:x="606" fg:w="1"/><text x="45.7114%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 2.33%)</title><rect x="43.3608%" y="533" width="2.3256%" height="15" fill="rgb(238,39,28)" fg:x="578" fg:w="31"/><text x="43.6108%" y="543.50">&lt;..</text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="45.5364%" y="517" width="0.1500%" height="15" fill="rgb(242,125,29)" fg:x="607" fg:w="2"/><text x="45.7864%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 3.30%)</title><rect x="43.1358%" y="549" width="3.3008%" height="15" fill="rgb(238,211,30)" fg:x="575" fg:w="44"/><text x="43.3858%" y="559.50">&lt;ha..</text></g><g><title>__libc_free (10 samples, 0.75%)</title><rect x="45.6864%" y="533" width="0.7502%" height="15" fill="rgb(227,201,28)" fg:x="609" fg:w="10"/><text x="45.9364%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (47 samples, 3.53%)</title><rect x="43.1358%" y="565" width="3.5259%" height="15" fill="rgb(238,77,29)" fg:x="575" fg:w="47"/><text x="43.3858%" y="575.50">cor..</text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="46.4366%" y="549" width="0.2251%" height="15" fill="rgb(213,221,40)" fg:x="619" fg:w="3"/><text x="46.6866%" y="559.50"></text></g><g><title>__libc_malloc (7 samples, 0.53%)</title><rect x="46.8867%" y="517" width="0.5251%" height="15" fill="rgb(226,220,44)" fg:x="625" fg:w="7"/><text x="47.1367%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="47.4119%" y="501" width="0.0750%" height="15" fill="rgb(228,90,23)" fg:x="632" fg:w="1"/><text x="47.6619%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="47.4119%" y="485" width="0.0750%" height="15" fill="rgb(235,72,29)" fg:x="632" fg:w="1"/><text x="47.6619%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="47.4119%" y="469" width="0.0750%" height="15" fill="rgb(248,117,39)" fg:x="632" fg:w="1"/><text x="47.6619%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="47.4119%" y="453" width="0.0750%" height="15" fill="rgb(225,43,28)" fg:x="632" fg:w="1"/><text x="47.6619%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.4119%" y="437" width="0.0750%" height="15" fill="rgb(240,93,4)" fg:x="632" fg:w="1"/><text x="47.6619%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="47.4119%" y="421" width="0.0750%" height="15" fill="rgb(234,178,27)" fg:x="632" fg:w="1"/><text x="47.6619%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="47.4119%" y="405" width="0.0750%" height="15" fill="rgb(254,88,22)" fg:x="632" fg:w="1"/><text x="47.6619%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.4119%" y="389" width="0.0750%" height="15" fill="rgb(240,206,50)" fg:x="632" fg:w="1"/><text x="47.6619%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.75%)</title><rect x="46.8117%" y="533" width="0.7502%" height="15" fill="rgb(249,103,8)" fg:x="624" fg:w="10"/><text x="47.0617%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.15%)</title><rect x="47.4119%" y="517" width="0.1500%" height="15" fill="rgb(241,178,36)" fg:x="632" fg:w="2"/><text x="47.6619%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.4869%" y="501" width="0.0750%" height="15" fill="rgb(246,110,15)" fg:x="633" fg:w="1"/><text x="47.7369%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="47.5619%" y="533" width="0.0750%" height="15" fill="rgb(207,14,43)" fg:x="634" fg:w="1"/><text x="47.8119%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="47.5619%" y="517" width="0.0750%" height="15" fill="rgb(253,219,19)" fg:x="634" fg:w="1"/><text x="47.8119%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.5619%" y="501" width="0.0750%" height="15" fill="rgb(216,126,5)" fg:x="634" fg:w="1"/><text x="47.8119%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="47.5619%" y="485" width="0.0750%" height="15" fill="rgb(218,78,42)" fg:x="634" fg:w="1"/><text x="47.8119%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.6369%" y="533" width="0.0750%" height="15" fill="rgb(215,154,40)" fg:x="635" fg:w="1"/><text x="47.8869%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.7869%" y="485" width="0.0750%" height="15" fill="rgb(235,129,32)" fg:x="637" fg:w="1"/><text x="48.0369%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="47.7119%" y="533" width="0.2251%" height="15" fill="rgb(218,51,8)" fg:x="636" fg:w="3"/><text x="47.9619%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.23%)</title><rect x="47.7119%" y="517" width="0.2251%" height="15" fill="rgb(245,48,4)" fg:x="636" fg:w="3"/><text x="47.9619%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.15%)</title><rect x="47.7869%" y="501" width="0.1500%" height="15" fill="rgb(250,175,12)" fg:x="637" fg:w="2"/><text x="48.0369%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="47.8620%" y="485" width="0.0750%" height="15" fill="rgb(237,95,40)" fg:x="638" fg:w="1"/><text x="48.1120%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.8620%" y="469" width="0.0750%" height="15" fill="rgb(244,120,0)" fg:x="638" fg:w="1"/><text x="48.1120%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="48.3121%" y="453" width="0.1500%" height="15" fill="rgb(241,19,42)" fg:x="644" fg:w="2"/><text x="48.5621%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.30%)</title><rect x="48.2371%" y="469" width="0.3001%" height="15" fill="rgb(217,174,48)" fg:x="643" fg:w="4"/><text x="48.4871%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.4621%" y="453" width="0.0750%" height="15" fill="rgb(239,36,38)" fg:x="646" fg:w="1"/><text x="48.7121%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (5 samples, 0.38%)</title><rect x="48.6872%" y="389" width="0.3751%" height="15" fill="rgb(220,63,49)" fg:x="649" fg:w="5"/><text x="48.9372%" y="399.50"></text></g><g><title>engine::internal::Maps::lookup_entity (3 samples, 0.23%)</title><rect x="48.8372%" y="373" width="0.2251%" height="15" fill="rgb(240,101,13)" fg:x="651" fg:w="3"/><text x="49.0872%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="48.9122%" y="357" width="0.1500%" height="15" fill="rgb(209,184,51)" fg:x="652" fg:w="2"/><text x="49.1622%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9872%" y="341" width="0.0750%" height="15" fill="rgb(206,136,39)" fg:x="653" fg:w="1"/><text x="49.2372%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9872%" y="325" width="0.0750%" height="15" fill="rgb(254,47,45)" fg:x="653" fg:w="1"/><text x="49.2372%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.9872%" y="309" width="0.0750%" height="15" fill="rgb(252,103,20)" fg:x="653" fg:w="1"/><text x="49.2372%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.9872%" y="293" width="0.0750%" height="15" fill="rgb(230,69,12)" fg:x="653" fg:w="1"/><text x="49.2372%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.9872%" y="277" width="0.0750%" height="15" fill="rgb(219,2,28)" fg:x="653" fg:w="1"/><text x="49.2372%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.9872%" y="261" width="0.0750%" height="15" fill="rgb(210,9,12)" fg:x="653" fg:w="1"/><text x="49.2372%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.9872%" y="245" width="0.0750%" height="15" fill="rgb(235,99,33)" fg:x="653" fg:w="1"/><text x="49.2372%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.9872%" y="229" width="0.0750%" height="15" fill="rgb(230,11,38)" fg:x="653" fg:w="1"/><text x="49.2372%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.9872%" y="213" width="0.0750%" height="15" fill="rgb(217,129,0)" fg:x="653" fg:w="1"/><text x="49.2372%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.9872%" y="197" width="0.0750%" height="15" fill="rgb(222,198,4)" fg:x="653" fg:w="1"/><text x="49.2372%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.9872%" y="181" width="0.0750%" height="15" fill="rgb(246,170,27)" fg:x="653" fg:w="1"/><text x="49.2372%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.9872%" y="165" width="0.0750%" height="15" fill="rgb(229,17,28)" fg:x="653" fg:w="1"/><text x="49.2372%" y="175.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.0623%" y="261" width="0.0750%" height="15" fill="rgb(233,198,48)" fg:x="654" fg:w="1"/><text x="49.3123%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.0623%" y="245" width="0.0750%" height="15" fill="rgb(238,103,23)" fg:x="654" fg:w="1"/><text x="49.3123%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.0623%" y="229" width="0.0750%" height="15" fill="rgb(206,91,41)" fg:x="654" fg:w="1"/><text x="49.3123%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.0623%" y="213" width="0.0750%" height="15" fill="rgb(227,34,25)" fg:x="654" fg:w="1"/><text x="49.3123%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.0623%" y="197" width="0.0750%" height="15" fill="rgb(210,110,44)" fg:x="654" fg:w="1"/><text x="49.3123%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.0623%" y="181" width="0.0750%" height="15" fill="rgb(216,189,8)" fg:x="654" fg:w="1"/><text x="49.3123%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.0623%" y="165" width="0.0750%" height="15" fill="rgb(234,9,46)" fg:x="654" fg:w="1"/><text x="49.3123%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.0623%" y="149" width="0.0750%" height="15" fill="rgb(251,200,5)" fg:x="654" fg:w="1"/><text x="49.3123%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.0623%" y="133" width="0.0750%" height="15" fill="rgb(238,165,37)" fg:x="654" fg:w="1"/><text x="49.3123%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.0623%" y="117" width="0.0750%" height="15" fill="rgb(232,77,38)" fg:x="654" fg:w="1"/><text x="49.3123%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.0623%" y="101" width="0.0750%" height="15" fill="rgb(253,179,33)" fg:x="654" fg:w="1"/><text x="49.3123%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="49.0623%" y="85" width="0.0750%" height="15" fill="rgb(240,13,35)" fg:x="654" fg:w="1"/><text x="49.3123%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="49.0623%" y="69" width="0.0750%" height="15" fill="rgb(242,150,49)" fg:x="654" fg:w="1"/><text x="49.3123%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="49.0623%" y="53" width="0.0750%" height="15" fill="rgb(237,176,28)" fg:x="654" fg:w="1"/><text x="49.3123%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="49.0623%" y="37" width="0.0750%" height="15" fill="rgb(214,176,33)" fg:x="654" fg:w="1"/><text x="49.3123%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.75%)</title><rect x="48.5371%" y="453" width="0.7502%" height="15" fill="rgb(214,25,12)" fg:x="647" fg:w="10"/><text x="48.7871%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.75%)</title><rect x="48.5371%" y="437" width="0.7502%" height="15" fill="rgb(238,190,20)" fg:x="647" fg:w="10"/><text x="48.7871%" y="447.50"></text></g><g><title>kernel::model::EntityRef::into_entry (9 samples, 0.68%)</title><rect x="48.6122%" y="421" width="0.6752%" height="15" fill="rgb(208,11,19)" fg:x="648" fg:w="9"/><text x="48.8622%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (8 samples, 0.60%)</title><rect x="48.6872%" y="405" width="0.6002%" height="15" fill="rgb(239,90,4)" fg:x="649" fg:w="8"/><text x="48.9372%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.23%)</title><rect x="49.0623%" y="389" width="0.2251%" height="15" fill="rgb(248,110,3)" fg:x="654" fg:w="3"/><text x="49.3123%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.23%)</title><rect x="49.0623%" y="373" width="0.2251%" height="15" fill="rgb(210,41,30)" fg:x="654" fg:w="3"/><text x="49.3123%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.23%)</title><rect x="49.0623%" y="357" width="0.2251%" height="15" fill="rgb(239,36,8)" fg:x="654" fg:w="3"/><text x="49.3123%" y="367.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="49.0623%" y="341" width="0.2251%" height="15" fill="rgb(237,201,47)" fg:x="654" fg:w="3"/><text x="49.3123%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.23%)</title><rect x="49.0623%" y="325" width="0.2251%" height="15" fill="rgb(224,140,29)" fg:x="654" fg:w="3"/><text x="49.3123%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.23%)</title><rect x="49.0623%" y="309" width="0.2251%" height="15" fill="rgb(231,209,17)" fg:x="654" fg:w="3"/><text x="49.3123%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.23%)</title><rect x="49.0623%" y="293" width="0.2251%" height="15" fill="rgb(249,196,1)" fg:x="654" fg:w="3"/><text x="49.3123%" y="303.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="49.0623%" y="277" width="0.2251%" height="15" fill="rgb(223,207,51)" fg:x="654" fg:w="3"/><text x="49.3123%" y="287.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.15%)</title><rect x="49.1373%" y="261" width="0.1500%" height="15" fill="rgb(210,14,40)" fg:x="655" fg:w="2"/><text x="49.3873%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.2123%" y="245" width="0.0750%" height="15" fill="rgb(250,20,52)" fg:x="656" fg:w="1"/><text x="49.4623%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.2123%" y="229" width="0.0750%" height="15" fill="rgb(241,46,11)" fg:x="656" fg:w="1"/><text x="49.4623%" y="239.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.2123%" y="213" width="0.0750%" height="15" fill="rgb(219,105,5)" fg:x="656" fg:w="1"/><text x="49.4623%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.2123%" y="197" width="0.0750%" height="15" fill="rgb(252,77,35)" fg:x="656" fg:w="1"/><text x="49.4623%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.2123%" y="181" width="0.0750%" height="15" fill="rgb(243,119,2)" fg:x="656" fg:w="1"/><text x="49.4623%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.2123%" y="165" width="0.0750%" height="15" fill="rgb(206,82,28)" fg:x="656" fg:w="1"/><text x="49.4623%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.2123%" y="149" width="0.0750%" height="15" fill="rgb(227,120,12)" fg:x="656" fg:w="1"/><text x="49.4623%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.2123%" y="133" width="0.0750%" height="15" fill="rgb(229,134,41)" fg:x="656" fg:w="1"/><text x="49.4623%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.2123%" y="117" width="0.0750%" height="15" fill="rgb(239,96,32)" fg:x="656" fg:w="1"/><text x="49.4623%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.2123%" y="101" width="0.0750%" height="15" fill="rgb(225,46,27)" fg:x="656" fg:w="1"/><text x="49.4623%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.2123%" y="85" width="0.0750%" height="15" fill="rgb(215,168,2)" fg:x="656" fg:w="1"/><text x="49.4623%" y="95.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="49.2123%" y="69" width="0.0750%" height="15" fill="rgb(207,170,52)" fg:x="656" fg:w="1"/><text x="49.4623%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.3623%" y="437" width="0.0750%" height="15" fill="rgb(237,198,36)" fg:x="658" fg:w="1"/><text x="49.6123%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="49.4374%" y="437" width="0.0750%" height="15" fill="rgb(213,27,14)" fg:x="659" fg:w="1"/><text x="49.6874%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.4374%" y="421" width="0.0750%" height="15" fill="rgb(218,77,5)" fg:x="659" fg:w="1"/><text x="49.6874%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.5874%" y="421" width="0.0750%" height="15" fill="rgb(230,219,39)" fg:x="661" fg:w="1"/><text x="49.8374%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.5874%" y="405" width="0.0750%" height="15" fill="rgb(245,177,7)" fg:x="661" fg:w="1"/><text x="49.8374%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.5874%" y="389" width="0.0750%" height="15" fill="rgb(246,44,46)" fg:x="661" fg:w="1"/><text x="49.8374%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.5874%" y="373" width="0.0750%" height="15" fill="rgb(207,173,15)" fg:x="661" fg:w="1"/><text x="49.8374%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.5874%" y="357" width="0.0750%" height="15" fill="rgb(245,170,50)" fg:x="661" fg:w="1"/><text x="49.8374%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.5874%" y="341" width="0.0750%" height="15" fill="rgb(233,156,21)" fg:x="661" fg:w="1"/><text x="49.8374%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.5874%" y="325" width="0.0750%" height="15" fill="rgb(253,146,27)" fg:x="661" fg:w="1"/><text x="49.8374%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.5874%" y="309" width="0.0750%" height="15" fill="rgb(247,66,29)" fg:x="661" fg:w="1"/><text x="49.8374%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.5874%" y="293" width="0.0750%" height="15" fill="rgb(218,207,26)" fg:x="661" fg:w="1"/><text x="49.8374%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.5874%" y="277" width="0.0750%" height="15" fill="rgb(234,93,26)" fg:x="661" fg:w="1"/><text x="49.8374%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.5874%" y="261" width="0.0750%" height="15" fill="rgb(214,75,48)" fg:x="661" fg:w="1"/><text x="49.8374%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.5874%" y="245" width="0.0750%" height="15" fill="rgb(229,119,22)" fg:x="661" fg:w="1"/><text x="49.8374%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.6624%" y="421" width="0.0750%" height="15" fill="rgb(226,153,19)" fg:x="662" fg:w="1"/><text x="49.9124%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.8875%" y="389" width="0.0750%" height="15" fill="rgb(220,204,36)" fg:x="665" fg:w="1"/><text x="50.1375%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.8875%" y="373" width="0.0750%" height="15" fill="rgb(253,181,43)" fg:x="665" fg:w="1"/><text x="50.1375%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="49.9625%" y="341" width="0.0750%" height="15" fill="rgb(211,41,51)" fg:x="666" fg:w="1"/><text x="50.2125%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.9625%" y="325" width="0.0750%" height="15" fill="rgb(207,215,0)" fg:x="666" fg:w="1"/><text x="50.2125%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.1875%" y="197" width="0.0750%" height="15" fill="rgb(212,153,10)" fg:x="669" fg:w="1"/><text x="50.4375%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.1875%" y="181" width="0.0750%" height="15" fill="rgb(251,171,36)" fg:x="669" fg:w="1"/><text x="50.4375%" y="191.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.30%)</title><rect x="50.0375%" y="325" width="0.3001%" height="15" fill="rgb(225,219,41)" fg:x="667" fg:w="4"/><text x="50.2875%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.30%)</title><rect x="50.0375%" y="309" width="0.3001%" height="15" fill="rgb(208,200,1)" fg:x="667" fg:w="4"/><text x="50.2875%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.30%)</title><rect x="50.0375%" y="293" width="0.3001%" height="15" fill="rgb(206,75,47)" fg:x="667" fg:w="4"/><text x="50.2875%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.30%)</title><rect x="50.0375%" y="277" width="0.3001%" height="15" fill="rgb(248,3,16)" fg:x="667" fg:w="4"/><text x="50.2875%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.30%)</title><rect x="50.0375%" y="261" width="0.3001%" height="15" fill="rgb(242,157,36)" fg:x="667" fg:w="4"/><text x="50.2875%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.30%)</title><rect x="50.0375%" y="245" width="0.3001%" height="15" fill="rgb(215,175,11)" fg:x="667" fg:w="4"/><text x="50.2875%" y="255.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.15%)</title><rect x="50.1875%" y="229" width="0.1500%" height="15" fill="rgb(252,222,22)" fg:x="669" fg:w="2"/><text x="50.4375%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="50.1875%" y="213" width="0.1500%" height="15" fill="rgb(250,121,35)" fg:x="669" fg:w="2"/><text x="50.4375%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.2626%" y="197" width="0.0750%" height="15" fill="rgb(233,120,49)" fg:x="670" fg:w="1"/><text x="50.5126%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.2626%" y="181" width="0.0750%" height="15" fill="rgb(205,201,14)" fg:x="670" fg:w="1"/><text x="50.5126%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="50.2626%" y="165" width="0.0750%" height="15" fill="rgb(219,58,45)" fg:x="670" fg:w="1"/><text x="50.5126%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.3376%" y="277" width="0.0750%" height="15" fill="rgb(251,65,12)" fg:x="671" fg:w="1"/><text x="50.5876%" y="287.50"></text></g><g><title>core::iter::adapters::try_process (26 samples, 1.95%)</title><rect x="48.5371%" y="469" width="1.9505%" height="15" fill="rgb(224,47,31)" fg:x="647" fg:w="26"/><text x="48.7871%" y="479.50">c..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (16 samples, 1.20%)</title><rect x="49.2873%" y="453" width="1.2003%" height="15" fill="rgb(233,74,26)" fg:x="657" fg:w="16"/><text x="49.5373%" y="463.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (13 samples, 0.98%)</title><rect x="49.5124%" y="437" width="0.9752%" height="15" fill="rgb(231,211,31)" fg:x="660" fg:w="13"/><text x="49.7624%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (10 samples, 0.75%)</title><rect x="49.7374%" y="421" width="0.7502%" height="15" fill="rgb(239,167,5)" fg:x="663" fg:w="10"/><text x="49.9874%" y="431.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.60%)</title><rect x="49.8875%" y="405" width="0.6002%" height="15" fill="rgb(241,85,0)" fg:x="665" fg:w="8"/><text x="50.1375%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.53%)</title><rect x="49.9625%" y="389" width="0.5251%" height="15" fill="rgb(229,130,21)" fg:x="666" fg:w="7"/><text x="50.2125%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.53%)</title><rect x="49.9625%" y="373" width="0.5251%" height="15" fill="rgb(254,84,49)" fg:x="666" fg:w="7"/><text x="50.2125%" y="383.50"></text></g><g><title>engine::internal::Entities::add_persisted (7 samples, 0.53%)</title><rect x="49.9625%" y="357" width="0.5251%" height="15" fill="rgb(235,85,21)" fg:x="666" fg:w="7"/><text x="50.2125%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.45%)</title><rect x="50.0375%" y="341" width="0.4501%" height="15" fill="rgb(246,128,52)" fg:x="667" fg:w="6"/><text x="50.2875%" y="351.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.15%)</title><rect x="50.3376%" y="325" width="0.1500%" height="15" fill="rgb(243,114,49)" fg:x="671" fg:w="2"/><text x="50.5876%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="50.3376%" y="309" width="0.1500%" height="15" fill="rgb(240,224,22)" fg:x="671" fg:w="2"/><text x="50.5876%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="50.3376%" y="293" width="0.1500%" height="15" fill="rgb(247,201,52)" fg:x="671" fg:w="2"/><text x="50.5876%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="50.4126%" y="277" width="0.0750%" height="15" fill="rgb(231,70,45)" fg:x="672" fg:w="1"/><text x="50.6626%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.4126%" y="261" width="0.0750%" height="15" fill="rgb(217,215,20)" fg:x="672" fg:w="1"/><text x="50.6626%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="50.4126%" y="245" width="0.0750%" height="15" fill="rgb(226,170,30)" fg:x="672" fg:w="1"/><text x="50.6626%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="50.4876%" y="469" width="0.0750%" height="15" fill="rgb(220,190,43)" fg:x="673" fg:w="1"/><text x="50.7376%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="50.4876%" y="453" width="0.0750%" height="15" fill="rgb(218,20,18)" fg:x="673" fg:w="1"/><text x="50.7376%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.4876%" y="437" width="0.0750%" height="15" fill="rgb(245,37,26)" fg:x="673" fg:w="1"/><text x="50.7376%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="50.7127%" y="389" width="0.1500%" height="15" fill="rgb(241,127,29)" fg:x="676" fg:w="2"/><text x="50.9627%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="50.7127%" y="373" width="0.1500%" height="15" fill="rgb(241,33,26)" fg:x="676" fg:w="2"/><text x="50.9627%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="50.7127%" y="357" width="0.1500%" height="15" fill="rgb(220,106,21)" fg:x="676" fg:w="2"/><text x="50.9627%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="50.7127%" y="341" width="0.1500%" height="15" fill="rgb(225,125,35)" fg:x="676" fg:w="2"/><text x="50.9627%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="50.7127%" y="325" width="0.1500%" height="15" fill="rgb(248,80,22)" fg:x="676" fg:w="2"/><text x="50.9627%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="50.7127%" y="309" width="0.1500%" height="15" fill="rgb(231,117,39)" fg:x="676" fg:w="2"/><text x="50.9627%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="50.7127%" y="293" width="0.1500%" height="15" fill="rgb(239,183,16)" fg:x="676" fg:w="2"/><text x="50.9627%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="50.7127%" y="277" width="0.1500%" height="15" fill="rgb(221,61,19)" fg:x="676" fg:w="2"/><text x="50.9627%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="50.7127%" y="261" width="0.1500%" height="15" fill="rgb(239,196,44)" fg:x="676" fg:w="2"/><text x="50.9627%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="50.7127%" y="245" width="0.1500%" height="15" fill="rgb(206,113,19)" fg:x="676" fg:w="2"/><text x="50.9627%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="50.7127%" y="229" width="0.1500%" height="15" fill="rgb(245,114,12)" fg:x="676" fg:w="2"/><text x="50.9627%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="50.7127%" y="213" width="0.1500%" height="15" fill="rgb(247,89,39)" fg:x="676" fg:w="2"/><text x="50.9627%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.30%)</title><rect x="50.6377%" y="437" width="0.3001%" height="15" fill="rgb(213,85,14)" fg:x="675" fg:w="4"/><text x="50.8877%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.30%)</title><rect x="50.6377%" y="421" width="0.3001%" height="15" fill="rgb(249,206,33)" fg:x="675" fg:w="4"/><text x="50.8877%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="50.7127%" y="405" width="0.2251%" height="15" fill="rgb(235,167,47)" fg:x="676" fg:w="3"/><text x="50.9627%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.8627%" y="389" width="0.0750%" height="15" fill="rgb(217,177,16)" fg:x="678" fg:w="1"/><text x="51.1127%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.15%)</title><rect x="51.0128%" y="357" width="0.1500%" height="15" fill="rgb(250,228,29)" fg:x="680" fg:w="2"/><text x="51.2628%" y="367.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.15%)</title><rect x="51.0128%" y="341" width="0.1500%" height="15" fill="rgb(216,195,42)" fg:x="680" fg:w="2"/><text x="51.2628%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.0878%" y="325" width="0.0750%" height="15" fill="rgb(232,192,32)" fg:x="681" fg:w="1"/><text x="51.3378%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.23%)</title><rect x="51.0128%" y="389" width="0.2251%" height="15" fill="rgb(211,8,47)" fg:x="680" fg:w="3"/><text x="51.2628%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.23%)</title><rect x="51.0128%" y="373" width="0.2251%" height="15" fill="rgb(251,201,9)" fg:x="680" fg:w="3"/><text x="51.2628%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="51.1628%" y="357" width="0.0750%" height="15" fill="rgb(206,185,47)" fg:x="682" fg:w="1"/><text x="51.4128%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.1628%" y="341" width="0.0750%" height="15" fill="rgb(245,54,32)" fg:x="682" fg:w="1"/><text x="51.4128%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.1628%" y="325" width="0.0750%" height="15" fill="rgb(208,1,8)" fg:x="682" fg:w="1"/><text x="51.4128%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.1628%" y="309" width="0.0750%" height="15" fill="rgb(228,57,24)" fg:x="682" fg:w="1"/><text x="51.4128%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.1628%" y="293" width="0.0750%" height="15" fill="rgb(251,24,8)" fg:x="682" fg:w="1"/><text x="51.4128%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.1628%" y="277" width="0.0750%" height="15" fill="rgb(236,196,50)" fg:x="682" fg:w="1"/><text x="51.4128%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.1628%" y="261" width="0.0750%" height="15" fill="rgb(246,222,29)" fg:x="682" fg:w="1"/><text x="51.4128%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.1628%" y="245" width="0.0750%" height="15" fill="rgb(211,34,40)" fg:x="682" fg:w="1"/><text x="51.4128%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.1628%" y="229" width="0.0750%" height="15" fill="rgb(210,66,51)" fg:x="682" fg:w="1"/><text x="51.4128%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.1628%" y="213" width="0.0750%" height="15" fill="rgb(250,56,43)" fg:x="682" fg:w="1"/><text x="51.4128%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.1628%" y="197" width="0.0750%" height="15" fill="rgb(240,111,50)" fg:x="682" fg:w="1"/><text x="51.4128%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.1628%" y="181" width="0.0750%" height="15" fill="rgb(209,117,13)" fg:x="682" fg:w="1"/><text x="51.4128%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.1628%" y="165" width="0.0750%" height="15" fill="rgb(232,164,45)" fg:x="682" fg:w="1"/><text x="51.4128%" y="175.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (5 samples, 0.38%)</title><rect x="50.9377%" y="437" width="0.3751%" height="15" fill="rgb(205,69,32)" fg:x="679" fg:w="5"/><text x="51.1877%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.30%)</title><rect x="51.0128%" y="421" width="0.3001%" height="15" fill="rgb(240,147,45)" fg:x="680" fg:w="4"/><text x="51.2628%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.30%)</title><rect x="51.0128%" y="405" width="0.3001%" height="15" fill="rgb(221,94,48)" fg:x="680" fg:w="4"/><text x="51.2628%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.2378%" y="389" width="0.0750%" height="15" fill="rgb(249,209,17)" fg:x="683" fg:w="1"/><text x="51.4878%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.4629%" y="405" width="0.0750%" height="15" fill="rgb(228,57,28)" fg:x="686" fg:w="1"/><text x="51.7129%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="51.5379%" y="405" width="0.0750%" height="15" fill="rgb(250,133,26)" fg:x="687" fg:w="1"/><text x="51.7879%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.5379%" y="389" width="0.0750%" height="15" fill="rgb(254,15,16)" fg:x="687" fg:w="1"/><text x="51.7879%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.6879%" y="357" width="0.0750%" height="15" fill="rgb(209,147,42)" fg:x="689" fg:w="1"/><text x="51.9379%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.8380%" y="325" width="0.0750%" height="15" fill="rgb(208,5,29)" fg:x="691" fg:w="1"/><text x="52.0880%" y="335.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (50 samples, 3.75%)</title><rect x="48.2371%" y="485" width="3.7509%" height="15" fill="rgb(250,73,31)" fg:x="643" fg:w="50"/><text x="48.4871%" y="495.50">plug..</text></g><g><title>kernel::model::entry::Entry::scope (19 samples, 1.43%)</title><rect x="50.5626%" y="469" width="1.4254%" height="15" fill="rgb(238,45,10)" fg:x="674" fg:w="19"/><text x="50.8126%" y="479.50"></text></g><g><title>kernel::model::Entity::load_scope (19 samples, 1.43%)</title><rect x="50.5626%" y="453" width="1.4254%" height="15" fill="rgb(214,104,5)" fg:x="674" fg:w="19"/><text x="50.8126%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.68%)</title><rect x="51.3128%" y="437" width="0.6752%" height="15" fill="rgb(242,217,19)" fg:x="684" fg:w="9"/><text x="51.5628%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.60%)</title><rect x="51.3878%" y="421" width="0.6002%" height="15" fill="rgb(246,113,27)" fg:x="685" fg:w="8"/><text x="51.6378%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (5 samples, 0.38%)</title><rect x="51.6129%" y="405" width="0.3751%" height="15" fill="rgb(221,34,27)" fg:x="688" fg:w="5"/><text x="51.8629%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (5 samples, 0.38%)</title><rect x="51.6129%" y="389" width="0.3751%" height="15" fill="rgb(246,109,6)" fg:x="688" fg:w="5"/><text x="51.8629%" y="399.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.30%)</title><rect x="51.6879%" y="373" width="0.3001%" height="15" fill="rgb(217,12,25)" fg:x="689" fg:w="4"/><text x="51.9379%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="51.7629%" y="357" width="0.2251%" height="15" fill="rgb(250,195,5)" fg:x="690" fg:w="3"/><text x="52.0129%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="51.7629%" y="341" width="0.2251%" height="15" fill="rgb(244,140,45)" fg:x="690" fg:w="3"/><text x="52.0129%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="51.9130%" y="325" width="0.0750%" height="15" fill="rgb(230,64,14)" fg:x="692" fg:w="1"/><text x="52.1630%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.15%)</title><rect x="51.9880%" y="469" width="0.1500%" height="15" fill="rgb(206,27,27)" fg:x="693" fg:w="2"/><text x="52.2380%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="52.0630%" y="453" width="0.0750%" height="15" fill="rgb(230,14,50)" fg:x="694" fg:w="1"/><text x="52.3130%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.0630%" y="437" width="0.0750%" height="15" fill="rgb(237,172,14)" fg:x="694" fg:w="1"/><text x="52.3130%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4381%" y="421" width="0.0750%" height="15" fill="rgb(209,25,21)" fg:x="699" fg:w="1"/><text x="52.6881%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4381%" y="405" width="0.0750%" height="15" fill="rgb(248,148,22)" fg:x="699" fg:w="1"/><text x="52.6881%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.4381%" y="389" width="0.0750%" height="15" fill="rgb(234,100,22)" fg:x="699" fg:w="1"/><text x="52.6881%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.4381%" y="373" width="0.0750%" height="15" fill="rgb(210,20,30)" fg:x="699" fg:w="1"/><text x="52.6881%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.4381%" y="357" width="0.0750%" height="15" fill="rgb(232,58,0)" fg:x="699" fg:w="1"/><text x="52.6881%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.4381%" y="341" width="0.0750%" height="15" fill="rgb(221,68,13)" fg:x="699" fg:w="1"/><text x="52.6881%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.4381%" y="325" width="0.0750%" height="15" fill="rgb(231,194,11)" fg:x="699" fg:w="1"/><text x="52.6881%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.4381%" y="309" width="0.0750%" height="15" fill="rgb(235,51,41)" fg:x="699" fg:w="1"/><text x="52.6881%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.4381%" y="293" width="0.0750%" height="15" fill="rgb(240,50,32)" fg:x="699" fg:w="1"/><text x="52.6881%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.4381%" y="277" width="0.0750%" height="15" fill="rgb(240,185,36)" fg:x="699" fg:w="1"/><text x="52.6881%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.4381%" y="261" width="0.0750%" height="15" fill="rgb(211,168,15)" fg:x="699" fg:w="1"/><text x="52.6881%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.4381%" y="245" width="0.0750%" height="15" fill="rgb(221,70,0)" fg:x="699" fg:w="1"/><text x="52.6881%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.38%)</title><rect x="52.3631%" y="437" width="0.3751%" height="15" fill="rgb(205,21,33)" fg:x="698" fg:w="5"/><text x="52.6131%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="52.5131%" y="421" width="0.2251%" height="15" fill="rgb(225,106,10)" fg:x="700" fg:w="3"/><text x="52.7631%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="52.5131%" y="405" width="0.2251%" height="15" fill="rgb(236,200,50)" fg:x="700" fg:w="3"/><text x="52.7631%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="52.5881%" y="389" width="0.1500%" height="15" fill="rgb(249,93,23)" fg:x="701" fg:w="2"/><text x="52.8381%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="52.5881%" y="373" width="0.1500%" height="15" fill="rgb(244,115,35)" fg:x="701" fg:w="2"/><text x="52.8381%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="52.5881%" y="357" width="0.1500%" height="15" fill="rgb(231,129,47)" fg:x="701" fg:w="2"/><text x="52.8381%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="52.5881%" y="341" width="0.1500%" height="15" fill="rgb(225,160,50)" fg:x="701" fg:w="2"/><text x="52.8381%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="52.5881%" y="325" width="0.1500%" height="15" fill="rgb(218,135,23)" fg:x="701" fg:w="2"/><text x="52.8381%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="52.5881%" y="309" width="0.1500%" height="15" fill="rgb(227,119,14)" fg:x="701" fg:w="2"/><text x="52.8381%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="52.5881%" y="293" width="0.1500%" height="15" fill="rgb(242,138,13)" fg:x="701" fg:w="2"/><text x="52.8381%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="52.5881%" y="277" width="0.1500%" height="15" fill="rgb(215,11,16)" fg:x="701" fg:w="2"/><text x="52.8381%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="52.5881%" y="261" width="0.1500%" height="15" fill="rgb(234,170,50)" fg:x="701" fg:w="2"/><text x="52.8381%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="52.5881%" y="245" width="0.1500%" height="15" fill="rgb(233,34,20)" fg:x="701" fg:w="2"/><text x="52.8381%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="52.5881%" y="229" width="0.1500%" height="15" fill="rgb(237,100,45)" fg:x="701" fg:w="2"/><text x="52.8381%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="52.5881%" y="213" width="0.1500%" height="15" fill="rgb(231,184,36)" fg:x="701" fg:w="2"/><text x="52.8381%" y="223.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="52.8882%" y="325" width="0.0750%" height="15" fill="rgb(252,93,2)" fg:x="705" fg:w="1"/><text x="53.1382%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8882%" y="309" width="0.0750%" height="15" fill="rgb(248,176,47)" fg:x="705" fg:w="1"/><text x="53.1382%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8882%" y="293" width="0.0750%" height="15" fill="rgb(249,125,23)" fg:x="705" fg:w="1"/><text x="53.1382%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.8882%" y="277" width="0.0750%" height="15" fill="rgb(239,67,42)" fg:x="705" fg:w="1"/><text x="53.1382%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.8882%" y="261" width="0.0750%" height="15" fill="rgb(244,162,4)" fg:x="705" fg:w="1"/><text x="53.1382%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.8882%" y="245" width="0.0750%" height="15" fill="rgb(214,150,38)" fg:x="705" fg:w="1"/><text x="53.1382%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.8882%" y="229" width="0.0750%" height="15" fill="rgb(228,211,28)" fg:x="705" fg:w="1"/><text x="53.1382%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.8882%" y="213" width="0.0750%" height="15" fill="rgb(212,98,48)" fg:x="705" fg:w="1"/><text x="53.1382%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.8882%" y="197" width="0.0750%" height="15" fill="rgb(213,45,13)" fg:x="705" fg:w="1"/><text x="53.1382%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.8882%" y="181" width="0.0750%" height="15" fill="rgb(218,35,29)" fg:x="705" fg:w="1"/><text x="53.1382%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.8882%" y="165" width="0.0750%" height="15" fill="rgb(244,13,3)" fg:x="705" fg:w="1"/><text x="53.1382%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.8882%" y="149" width="0.0750%" height="15" fill="rgb(235,170,19)" fg:x="705" fg:w="1"/><text x="53.1382%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.8882%" y="133" width="0.0750%" height="15" fill="rgb(233,193,43)" fg:x="705" fg:w="1"/><text x="53.1382%" y="143.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.1133%" y="245" width="0.0750%" height="15" fill="rgb(228,223,20)" fg:x="708" fg:w="1"/><text x="53.3633%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="53.4134%" y="133" width="0.0750%" height="15" fill="rgb(208,85,54)" fg:x="712" fg:w="1"/><text x="53.6634%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.4134%" y="117" width="0.0750%" height="15" fill="rgb(254,14,45)" fg:x="712" fg:w="1"/><text x="53.6634%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.38%)</title><rect x="53.1883%" y="197" width="0.3751%" height="15" fill="rgb(247,99,29)" fg:x="709" fg:w="5"/><text x="53.4383%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.38%)</title><rect x="53.1883%" y="181" width="0.3751%" height="15" fill="rgb(225,180,54)" fg:x="709" fg:w="5"/><text x="53.4383%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.30%)</title><rect x="53.2633%" y="165" width="0.3001%" height="15" fill="rgb(239,88,43)" fg:x="710" fg:w="4"/><text x="53.5133%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.30%)</title><rect x="53.2633%" y="149" width="0.3001%" height="15" fill="rgb(209,47,11)" fg:x="710" fg:w="4"/><text x="53.5133%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.4884%" y="133" width="0.0750%" height="15" fill="rgb(219,179,23)" fg:x="713" fg:w="1"/><text x="53.7384%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="53.5634%" y="197" width="0.0750%" height="15" fill="rgb(213,183,19)" fg:x="714" fg:w="1"/><text x="53.8134%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="53.5634%" y="181" width="0.0750%" height="15" fill="rgb(210,11,9)" fg:x="714" fg:w="1"/><text x="53.8134%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="53.5634%" y="165" width="0.0750%" height="15" fill="rgb(239,194,16)" fg:x="714" fg:w="1"/><text x="53.8134%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="53.5634%" y="149" width="0.0750%" height="15" fill="rgb(246,23,50)" fg:x="714" fg:w="1"/><text x="53.8134%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (7 samples, 0.53%)</title><rect x="53.1883%" y="245" width="0.5251%" height="15" fill="rgb(245,10,41)" fg:x="709" fg:w="7"/><text x="53.4383%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.53%)</title><rect x="53.1883%" y="229" width="0.5251%" height="15" fill="rgb(228,43,24)" fg:x="709" fg:w="7"/><text x="53.4383%" y="239.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (7 samples, 0.53%)</title><rect x="53.1883%" y="213" width="0.5251%" height="15" fill="rgb(220,151,0)" fg:x="709" fg:w="7"/><text x="53.4383%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.6384%" y="197" width="0.0750%" height="15" fill="rgb(232,219,10)" fg:x="715" fg:w="1"/><text x="53.8884%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.6384%" y="181" width="0.0750%" height="15" fill="rgb(227,217,48)" fg:x="715" fg:w="1"/><text x="53.8884%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="53.6384%" y="165" width="0.0750%" height="15" fill="rgb(210,66,35)" fg:x="715" fg:w="1"/><text x="53.8884%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.6384%" y="149" width="0.0750%" height="15" fill="rgb(254,6,7)" fg:x="715" fg:w="1"/><text x="53.8884%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.6384%" y="133" width="0.0750%" height="15" fill="rgb(235,222,42)" fg:x="715" fg:w="1"/><text x="53.8884%" y="143.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.7884%" y="181" width="0.0750%" height="15" fill="rgb(245,126,5)" fg:x="717" fg:w="1"/><text x="54.0384%" y="191.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (14 samples, 1.05%)</title><rect x="52.9632%" y="309" width="1.0503%" height="15" fill="rgb(215,73,17)" fg:x="706" fg:w="14"/><text x="53.2132%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (14 samples, 1.05%)</title><rect x="52.9632%" y="293" width="1.0503%" height="15" fill="rgb(219,198,52)" fg:x="706" fg:w="14"/><text x="53.2132%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.05%)</title><rect x="52.9632%" y="277" width="1.0503%" height="15" fill="rgb(217,159,18)" fg:x="706" fg:w="14"/><text x="53.2132%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.05%)</title><rect x="52.9632%" y="261" width="1.0503%" height="15" fill="rgb(212,177,18)" fg:x="706" fg:w="14"/><text x="53.2132%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.30%)</title><rect x="53.7134%" y="245" width="0.3001%" height="15" fill="rgb(241,10,11)" fg:x="716" fg:w="4"/><text x="53.9634%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="53.7884%" y="229" width="0.2251%" height="15" fill="rgb(232,114,35)" fg:x="717" fg:w="3"/><text x="54.0384%" y="239.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.23%)</title><rect x="53.7884%" y="213" width="0.2251%" height="15" fill="rgb(238,222,8)" fg:x="717" fg:w="3"/><text x="54.0384%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="53.7884%" y="197" width="0.2251%" height="15" fill="rgb(251,153,44)" fg:x="717" fg:w="3"/><text x="54.0384%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="53.8635%" y="181" width="0.1500%" height="15" fill="rgb(210,140,51)" fg:x="718" fg:w="2"/><text x="54.1135%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="53.8635%" y="165" width="0.1500%" height="15" fill="rgb(222,63,0)" fg:x="718" fg:w="2"/><text x="54.1135%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="53.8635%" y="149" width="0.1500%" height="15" fill="rgb(240,18,40)" fg:x="718" fg:w="2"/><text x="54.1135%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="53.8635%" y="133" width="0.1500%" height="15" fill="rgb(237,88,16)" fg:x="718" fg:w="2"/><text x="54.1135%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.15%)</title><rect x="54.0135%" y="261" width="0.1500%" height="15" fill="rgb(251,117,13)" fg:x="720" fg:w="2"/><text x="54.2635%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="54.1635%" y="261" width="0.1500%" height="15" fill="rgb(251,228,8)" fg:x="722" fg:w="2"/><text x="54.4135%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.3886%" y="229" width="0.0750%" height="15" fill="rgb(205,107,49)" fg:x="725" fg:w="1"/><text x="54.6386%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.3886%" y="213" width="0.0750%" height="15" fill="rgb(238,72,41)" fg:x="725" fg:w="1"/><text x="54.6386%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.5386%" y="197" width="0.0750%" height="15" fill="rgb(248,183,52)" fg:x="727" fg:w="1"/><text x="54.7886%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.5386%" y="181" width="0.0750%" height="15" fill="rgb(215,58,20)" fg:x="727" fg:w="1"/><text x="54.7886%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.5386%" y="165" width="0.0750%" height="15" fill="rgb(209,49,13)" fg:x="727" fg:w="1"/><text x="54.7886%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.6137%" y="181" width="0.0750%" height="15" fill="rgb(208,113,17)" fg:x="728" fg:w="1"/><text x="54.8637%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.6137%" y="165" width="0.0750%" height="15" fill="rgb(208,14,22)" fg:x="728" fg:w="1"/><text x="54.8637%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.6137%" y="149" width="0.0750%" height="15" fill="rgb(222,95,2)" fg:x="728" fg:w="1"/><text x="54.8637%" y="159.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (26 samples, 1.95%)</title><rect x="52.8132%" y="357" width="1.9505%" height="15" fill="rgb(253,180,37)" fg:x="704" fg:w="26"/><text x="53.0632%" y="367.50">&lt;..</text></g><g><title>engine::internal::Entities::add_persisted (25 samples, 1.88%)</title><rect x="52.8882%" y="341" width="1.8755%" height="15" fill="rgb(250,81,33)" fg:x="705" fg:w="25"/><text x="53.1382%" y="351.50">e..</text></g><g><title>kernel::model::deserialize_entity (24 samples, 1.80%)</title><rect x="52.9632%" y="325" width="1.8005%" height="15" fill="rgb(251,151,41)" fg:x="706" fg:w="24"/><text x="53.2132%" y="335.50">k..</text></g><g><title>serde_json::de::from_trait (10 samples, 0.75%)</title><rect x="54.0135%" y="309" width="0.7502%" height="15" fill="rgb(210,135,17)" fg:x="720" fg:w="10"/><text x="54.2635%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.75%)</title><rect x="54.0135%" y="293" width="0.7502%" height="15" fill="rgb(239,21,29)" fg:x="720" fg:w="10"/><text x="54.2635%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.75%)</title><rect x="54.0135%" y="277" width="0.7502%" height="15" fill="rgb(231,215,16)" fg:x="720" fg:w="10"/><text x="54.2635%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.45%)</title><rect x="54.3136%" y="261" width="0.4501%" height="15" fill="rgb(239,151,54)" fg:x="724" fg:w="6"/><text x="54.5636%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.45%)</title><rect x="54.3136%" y="245" width="0.4501%" height="15" fill="rgb(222,122,38)" fg:x="724" fg:w="6"/><text x="54.5636%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.30%)</title><rect x="54.4636%" y="229" width="0.3001%" height="15" fill="rgb(243,128,1)" fg:x="726" fg:w="4"/><text x="54.7136%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="54.5386%" y="213" width="0.2251%" height="15" fill="rgb(225,74,21)" fg:x="727" fg:w="3"/><text x="54.7886%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="54.6137%" y="197" width="0.1500%" height="15" fill="rgb(216,210,10)" fg:x="728" fg:w="2"/><text x="54.8637%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="54.6887%" y="181" width="0.0750%" height="15" fill="rgb(228,76,19)" fg:x="729" fg:w="1"/><text x="54.9387%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="54.6887%" y="165" width="0.0750%" height="15" fill="rgb(236,80,34)" fg:x="729" fg:w="1"/><text x="54.9387%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.6887%" y="149" width="0.0750%" height="15" fill="rgb(225,173,23)" fg:x="729" fg:w="1"/><text x="54.9387%" y="159.50"></text></g><g><title>core::iter::adapters::try_process (28 samples, 2.10%)</title><rect x="52.7382%" y="421" width="2.1005%" height="15" fill="rgb(253,38,1)" fg:x="703" fg:w="28"/><text x="52.9882%" y="431.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 2.10%)</title><rect x="52.7382%" y="405" width="2.1005%" height="15" fill="rgb(206,155,35)" fg:x="703" fg:w="28"/><text x="52.9882%" y="415.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 2.03%)</title><rect x="52.8132%" y="389" width="2.0255%" height="15" fill="rgb(254,27,53)" fg:x="704" fg:w="27"/><text x="53.0632%" y="399.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (27 samples, 2.03%)</title><rect x="52.8132%" y="373" width="2.0255%" height="15" fill="rgb(225,52,41)" fg:x="704" fg:w="27"/><text x="53.0632%" y="383.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.7637%" y="357" width="0.0750%" height="15" fill="rgb(244,53,18)" fg:x="730" fg:w="1"/><text x="55.0137%" y="367.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (29 samples, 2.18%)</title><rect x="52.7382%" y="437" width="2.1755%" height="15" fill="rgb(254,206,48)" fg:x="703" fg:w="29"/><text x="52.9882%" y="447.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="54.8387%" y="421" width="0.0750%" height="15" fill="rgb(236,182,23)" fg:x="731" fg:w="1"/><text x="55.0887%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.9137%" y="437" width="0.0750%" height="15" fill="rgb(236,191,37)" fg:x="732" fg:w="1"/><text x="55.1637%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="54.9137%" y="421" width="0.0750%" height="15" fill="rgb(245,53,8)" fg:x="732" fg:w="1"/><text x="55.1637%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="54.9887%" y="437" width="0.0750%" height="15" fill="rgb(245,147,9)" fg:x="733" fg:w="1"/><text x="55.2387%" y="447.50"></text></g><g><title>plugins_core::tools::get_contained_keys (47 samples, 3.53%)</title><rect x="51.9880%" y="485" width="3.5259%" height="15" fill="rgb(218,24,48)" fg:x="693" fg:w="47"/><text x="52.2380%" y="495.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (45 samples, 3.38%)</title><rect x="52.1380%" y="469" width="3.3758%" height="15" fill="rgb(254,23,9)" fg:x="695" fg:w="45"/><text x="52.3880%" y="479.50">ker..</text></g><g><title>kernel::model::Entity::load_scope (45 samples, 3.38%)</title><rect x="52.1380%" y="453" width="3.3758%" height="15" fill="rgb(244,105,9)" fg:x="695" fg:w="45"/><text x="52.3880%" y="463.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.45%)</title><rect x="55.0638%" y="437" width="0.4501%" height="15" fill="rgb(212,142,22)" fg:x="734" fg:w="6"/><text x="55.3138%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.45%)</title><rect x="55.0638%" y="421" width="0.4501%" height="15" fill="rgb(221,114,49)" fg:x="734" fg:w="6"/><text x="55.3138%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (5 samples, 0.38%)</title><rect x="55.1388%" y="405" width="0.3751%" height="15" fill="rgb(223,210,25)" fg:x="735" fg:w="5"/><text x="55.3888%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (5 samples, 0.38%)</title><rect x="55.1388%" y="389" width="0.3751%" height="15" fill="rgb(235,162,44)" fg:x="735" fg:w="5"/><text x="55.3888%" y="399.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (5 samples, 0.38%)</title><rect x="55.1388%" y="373" width="0.3751%" height="15" fill="rgb(237,65,45)" fg:x="735" fg:w="5"/><text x="55.3888%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="55.2888%" y="357" width="0.2251%" height="15" fill="rgb(208,79,9)" fg:x="737" fg:w="3"/><text x="55.5388%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="55.2888%" y="341" width="0.2251%" height="15" fill="rgb(215,228,8)" fg:x="737" fg:w="3"/><text x="55.5388%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="55.3638%" y="325" width="0.1500%" height="15" fill="rgb(205,185,17)" fg:x="738" fg:w="2"/><text x="55.6138%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.6639%" y="437" width="0.0750%" height="15" fill="rgb(213,62,36)" fg:x="742" fg:w="1"/><text x="55.9139%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.6639%" y="421" width="0.0750%" height="15" fill="rgb(209,34,9)" fg:x="742" fg:w="1"/><text x="55.9139%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.6639%" y="405" width="0.0750%" height="15" fill="rgb(246,151,27)" fg:x="742" fg:w="1"/><text x="55.9139%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.6639%" y="389" width="0.0750%" height="15" fill="rgb(218,206,3)" fg:x="742" fg:w="1"/><text x="55.9139%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.6639%" y="373" width="0.0750%" height="15" fill="rgb(242,202,1)" fg:x="742" fg:w="1"/><text x="55.9139%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.6639%" y="357" width="0.0750%" height="15" fill="rgb(227,185,16)" fg:x="742" fg:w="1"/><text x="55.9139%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.6639%" y="341" width="0.0750%" height="15" fill="rgb(241,1,14)" fg:x="742" fg:w="1"/><text x="55.9139%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.6639%" y="325" width="0.0750%" height="15" fill="rgb(212,113,25)" fg:x="742" fg:w="1"/><text x="55.9139%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.6639%" y="309" width="0.0750%" height="15" fill="rgb(247,37,43)" fg:x="742" fg:w="1"/><text x="55.9139%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.6639%" y="293" width="0.0750%" height="15" fill="rgb(226,54,8)" fg:x="742" fg:w="1"/><text x="55.9139%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.6639%" y="277" width="0.0750%" height="15" fill="rgb(251,205,25)" fg:x="742" fg:w="1"/><text x="55.9139%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.6639%" y="261" width="0.0750%" height="15" fill="rgb(246,87,35)" fg:x="742" fg:w="1"/><text x="55.9139%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.6639%" y="245" width="0.0750%" height="15" fill="rgb(251,145,46)" fg:x="742" fg:w="1"/><text x="55.9139%" y="255.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="55.7389%" y="437" width="0.0750%" height="15" fill="rgb(210,210,33)" fg:x="743" fg:w="1"/><text x="55.9889%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="55.7389%" y="421" width="0.0750%" height="15" fill="rgb(221,151,11)" fg:x="743" fg:w="1"/><text x="55.9889%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="55.7389%" y="405" width="0.0750%" height="15" fill="rgb(208,160,28)" fg:x="743" fg:w="1"/><text x="55.9889%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="55.7389%" y="389" width="0.0750%" height="15" fill="rgb(243,69,29)" fg:x="743" fg:w="1"/><text x="55.9889%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (106 samples, 7.95%)</title><rect x="48.0120%" y="517" width="7.9520%" height="15" fill="rgb(224,144,4)" fg:x="640" fg:w="106"/><text x="48.2620%" y="527.50">&lt;alloc::vec..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (105 samples, 7.88%)</title><rect x="48.0870%" y="501" width="7.8770%" height="15" fill="rgb(211,140,38)" fg:x="641" fg:w="105"/><text x="48.3370%" y="511.50">&lt;core::iter..</text></g><g><title>plugins_core::tools::get_occupant_keys (6 samples, 0.45%)</title><rect x="55.5139%" y="485" width="0.4501%" height="15" fill="rgb(252,189,15)" fg:x="740" fg:w="6"/><text x="55.7639%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.38%)</title><rect x="55.5889%" y="469" width="0.3751%" height="15" fill="rgb(251,175,23)" fg:x="741" fg:w="5"/><text x="55.8389%" y="479.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.30%)</title><rect x="55.6639%" y="453" width="0.3001%" height="15" fill="rgb(212,184,11)" fg:x="742" fg:w="4"/><text x="55.9139%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="55.8140%" y="437" width="0.1500%" height="15" fill="rgb(217,205,6)" fg:x="744" fg:w="2"/><text x="56.0640%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="55.8140%" y="421" width="0.1500%" height="15" fill="rgb(235,45,45)" fg:x="744" fg:w="2"/><text x="56.0640%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.15%)</title><rect x="55.8140%" y="405" width="0.1500%" height="15" fill="rgb(211,157,53)" fg:x="744" fg:w="2"/><text x="56.0640%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.15%)</title><rect x="55.8140%" y="389" width="0.1500%" height="15" fill="rgb(212,13,8)" fg:x="744" fg:w="2"/><text x="56.0640%" y="399.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.15%)</title><rect x="55.8140%" y="373" width="0.1500%" height="15" fill="rgb(218,80,36)" fg:x="744" fg:w="2"/><text x="56.0640%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="55.8140%" y="357" width="0.1500%" height="15" fill="rgb(211,123,43)" fg:x="744" fg:w="2"/><text x="56.0640%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="55.8140%" y="341" width="0.1500%" height="15" fill="rgb(206,165,2)" fg:x="744" fg:w="2"/><text x="56.0640%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="56.7892%" y="389" width="0.1500%" height="15" fill="rgb(248,63,35)" fg:x="757" fg:w="2"/><text x="57.0392%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="56.7892%" y="373" width="0.1500%" height="15" fill="rgb(219,133,41)" fg:x="757" fg:w="2"/><text x="57.0392%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="56.7892%" y="357" width="0.1500%" height="15" fill="rgb(206,175,46)" fg:x="757" fg:w="2"/><text x="57.0392%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="56.7892%" y="341" width="0.1500%" height="15" fill="rgb(224,41,35)" fg:x="757" fg:w="2"/><text x="57.0392%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="56.7892%" y="325" width="0.1500%" height="15" fill="rgb(226,113,24)" fg:x="757" fg:w="2"/><text x="57.0392%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="56.7892%" y="309" width="0.1500%" height="15" fill="rgb(219,51,41)" fg:x="757" fg:w="2"/><text x="57.0392%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="56.7892%" y="293" width="0.1500%" height="15" fill="rgb(220,145,47)" fg:x="757" fg:w="2"/><text x="57.0392%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="56.7892%" y="469" width="0.2251%" height="15" fill="rgb(239,121,47)" fg:x="757" fg:w="3"/><text x="57.0392%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="56.7892%" y="453" width="0.2251%" height="15" fill="rgb(207,60,40)" fg:x="757" fg:w="3"/><text x="57.0392%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.23%)</title><rect x="56.7892%" y="437" width="0.2251%" height="15" fill="rgb(224,229,11)" fg:x="757" fg:w="3"/><text x="57.0392%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.23%)</title><rect x="56.7892%" y="421" width="0.2251%" height="15" fill="rgb(252,28,32)" fg:x="757" fg:w="3"/><text x="57.0392%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.23%)</title><rect x="56.7892%" y="405" width="0.2251%" height="15" fill="rgb(207,52,49)" fg:x="757" fg:w="3"/><text x="57.0392%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="56.9392%" y="389" width="0.0750%" height="15" fill="rgb(243,51,50)" fg:x="759" fg:w="1"/><text x="57.1892%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="56.9392%" y="373" width="0.0750%" height="15" fill="rgb(212,92,21)" fg:x="759" fg:w="1"/><text x="57.1892%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="57.3143%" y="421" width="0.2251%" height="15" fill="rgb(230,183,50)" fg:x="764" fg:w="3"/><text x="57.5643%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="57.3893%" y="405" width="0.1500%" height="15" fill="rgb(225,48,9)" fg:x="765" fg:w="2"/><text x="57.6393%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="57.3893%" y="389" width="0.1500%" height="15" fill="rgb(254,44,4)" fg:x="765" fg:w="2"/><text x="57.6393%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="57.3893%" y="373" width="0.1500%" height="15" fill="rgb(252,128,37)" fg:x="765" fg:w="2"/><text x="57.6393%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="57.3893%" y="357" width="0.1500%" height="15" fill="rgb(227,178,8)" fg:x="765" fg:w="2"/><text x="57.6393%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="57.3893%" y="341" width="0.1500%" height="15" fill="rgb(205,206,32)" fg:x="765" fg:w="2"/><text x="57.6393%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="57.3893%" y="325" width="0.1500%" height="15" fill="rgb(220,218,22)" fg:x="765" fg:w="2"/><text x="57.6393%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="57.3893%" y="309" width="0.1500%" height="15" fill="rgb(236,41,28)" fg:x="765" fg:w="2"/><text x="57.6393%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="57.3893%" y="293" width="0.1500%" height="15" fill="rgb(219,37,7)" fg:x="765" fg:w="2"/><text x="57.6393%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="57.3893%" y="277" width="0.1500%" height="15" fill="rgb(206,160,15)" fg:x="765" fg:w="2"/><text x="57.6393%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="57.3893%" y="261" width="0.1500%" height="15" fill="rgb(208,82,21)" fg:x="765" fg:w="2"/><text x="57.6393%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="57.3893%" y="245" width="0.1500%" height="15" fill="rgb(226,130,25)" fg:x="765" fg:w="2"/><text x="57.6393%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="57.3893%" y="229" width="0.1500%" height="15" fill="rgb(212,72,24)" fg:x="765" fg:w="2"/><text x="57.6393%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.60%)</title><rect x="57.0893%" y="453" width="0.6002%" height="15" fill="rgb(206,28,16)" fg:x="761" fg:w="8"/><text x="57.3393%" y="463.50"></text></g><g><title>engine::internal::Maps::lookup_entity (7 samples, 0.53%)</title><rect x="57.1643%" y="437" width="0.5251%" height="15" fill="rgb(249,41,5)" fg:x="762" fg:w="7"/><text x="57.4143%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.15%)</title><rect x="57.5394%" y="421" width="0.1500%" height="15" fill="rgb(233,96,48)" fg:x="767" fg:w="2"/><text x="57.7894%" y="431.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="57.6894%" y="453" width="0.0750%" height="15" fill="rgb(240,198,11)" fg:x="769" fg:w="1"/><text x="57.9394%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.6894%" y="437" width="0.0750%" height="15" fill="rgb(209,175,35)" fg:x="769" fg:w="1"/><text x="57.9394%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.6894%" y="421" width="0.0750%" height="15" fill="rgb(214,40,51)" fg:x="769" fg:w="1"/><text x="57.9394%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.6894%" y="405" width="0.0750%" height="15" fill="rgb(252,56,4)" fg:x="769" fg:w="1"/><text x="57.9394%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.6894%" y="389" width="0.0750%" height="15" fill="rgb(219,131,5)" fg:x="769" fg:w="1"/><text x="57.9394%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.6894%" y="373" width="0.0750%" height="15" fill="rgb(223,67,53)" fg:x="769" fg:w="1"/><text x="57.9394%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.6894%" y="357" width="0.0750%" height="15" fill="rgb(227,154,8)" fg:x="769" fg:w="1"/><text x="57.9394%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.6894%" y="341" width="0.0750%" height="15" fill="rgb(216,174,51)" fg:x="769" fg:w="1"/><text x="57.9394%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.6894%" y="325" width="0.0750%" height="15" fill="rgb(239,60,34)" fg:x="769" fg:w="1"/><text x="57.9394%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.6894%" y="309" width="0.0750%" height="15" fill="rgb(236,165,48)" fg:x="769" fg:w="1"/><text x="57.9394%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.6894%" y="293" width="0.0750%" height="15" fill="rgb(210,37,26)" fg:x="769" fg:w="1"/><text x="57.9394%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.6894%" y="277" width="0.0750%" height="15" fill="rgb(211,3,17)" fg:x="769" fg:w="1"/><text x="57.9394%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.6894%" y="261" width="0.0750%" height="15" fill="rgb(234,88,49)" fg:x="769" fg:w="1"/><text x="57.9394%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.8395%" y="437" width="0.0750%" height="15" fill="rgb(233,40,17)" fg:x="771" fg:w="1"/><text x="58.0895%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.8395%" y="421" width="0.0750%" height="15" fill="rgb(235,127,31)" fg:x="771" fg:w="1"/><text x="58.0895%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.8395%" y="405" width="0.0750%" height="15" fill="rgb(248,167,17)" fg:x="771" fg:w="1"/><text x="58.0895%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.8395%" y="389" width="0.0750%" height="15" fill="rgb(218,179,8)" fg:x="771" fg:w="1"/><text x="58.0895%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.8395%" y="373" width="0.0750%" height="15" fill="rgb(216,92,14)" fg:x="771" fg:w="1"/><text x="58.0895%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.8395%" y="357" width="0.0750%" height="15" fill="rgb(221,198,46)" fg:x="771" fg:w="1"/><text x="58.0895%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.8395%" y="341" width="0.0750%" height="15" fill="rgb(244,7,25)" fg:x="771" fg:w="1"/><text x="58.0895%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.8395%" y="325" width="0.0750%" height="15" fill="rgb(233,75,6)" fg:x="771" fg:w="1"/><text x="58.0895%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.8395%" y="309" width="0.0750%" height="15" fill="rgb(240,189,41)" fg:x="771" fg:w="1"/><text x="58.0895%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.8395%" y="293" width="0.0750%" height="15" fill="rgb(237,157,21)" fg:x="771" fg:w="1"/><text x="58.0895%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.8395%" y="277" width="0.0750%" height="15" fill="rgb(210,136,49)" fg:x="771" fg:w="1"/><text x="58.0895%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.8395%" y="261" width="0.0750%" height="15" fill="rgb(210,68,29)" fg:x="771" fg:w="1"/><text x="58.0895%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.9895%" y="325" width="0.0750%" height="15" fill="rgb(247,207,20)" fg:x="773" fg:w="1"/><text x="58.2395%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.9895%" y="309" width="0.0750%" height="15" fill="rgb(224,73,48)" fg:x="773" fg:w="1"/><text x="58.2395%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="57.9895%" y="293" width="0.0750%" height="15" fill="rgb(215,136,47)" fg:x="773" fg:w="1"/><text x="58.2395%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="57.9895%" y="277" width="0.0750%" height="15" fill="rgb(232,222,16)" fg:x="773" fg:w="1"/><text x="58.2395%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="57.9895%" y="261" width="0.0750%" height="15" fill="rgb(249,202,47)" fg:x="773" fg:w="1"/><text x="58.2395%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="57.9895%" y="245" width="0.0750%" height="15" fill="rgb(236,56,8)" fg:x="773" fg:w="1"/><text x="58.2395%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.9895%" y="229" width="0.0750%" height="15" fill="rgb(222,6,3)" fg:x="773" fg:w="1"/><text x="58.2395%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (15 samples, 1.13%)</title><rect x="57.0143%" y="469" width="1.1253%" height="15" fill="rgb(254,222,28)" fg:x="760" fg:w="15"/><text x="57.2643%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.38%)</title><rect x="57.7644%" y="453" width="0.3751%" height="15" fill="rgb(219,57,23)" fg:x="770" fg:w="5"/><text x="58.0144%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.23%)</title><rect x="57.9145%" y="437" width="0.2251%" height="15" fill="rgb(251,106,48)" fg:x="772" fg:w="3"/><text x="58.1645%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.23%)</title><rect x="57.9145%" y="421" width="0.2251%" height="15" fill="rgb(242,2,23)" fg:x="772" fg:w="3"/><text x="58.1645%" y="431.50"></text></g><g><title>core::fmt::write (3 samples, 0.23%)</title><rect x="57.9145%" y="405" width="0.2251%" height="15" fill="rgb(212,109,31)" fg:x="772" fg:w="3"/><text x="58.1645%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.23%)</title><rect x="57.9145%" y="389" width="0.2251%" height="15" fill="rgb(241,9,22)" fg:x="772" fg:w="3"/><text x="58.1645%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.23%)</title><rect x="57.9145%" y="373" width="0.2251%" height="15" fill="rgb(209,64,27)" fg:x="772" fg:w="3"/><text x="58.1645%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.15%)</title><rect x="57.9895%" y="357" width="0.1500%" height="15" fill="rgb(248,13,44)" fg:x="773" fg:w="2"/><text x="58.2395%" y="367.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="57.9895%" y="341" width="0.1500%" height="15" fill="rgb(213,86,6)" fg:x="773" fg:w="2"/><text x="58.2395%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="58.0645%" y="325" width="0.0750%" height="15" fill="rgb(247,11,18)" fg:x="774" fg:w="1"/><text x="58.3145%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="58.0645%" y="309" width="0.0750%" height="15" fill="rgb(252,31,11)" fg:x="774" fg:w="1"/><text x="58.3145%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="58.0645%" y="293" width="0.0750%" height="15" fill="rgb(215,63,51)" fg:x="774" fg:w="1"/><text x="58.3145%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="58.0645%" y="277" width="0.0750%" height="15" fill="rgb(222,180,4)" fg:x="774" fg:w="1"/><text x="58.3145%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="58.0645%" y="261" width="0.0750%" height="15" fill="rgb(233,4,23)" fg:x="774" fg:w="1"/><text x="58.3145%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="58.0645%" y="245" width="0.0750%" height="15" fill="rgb(230,116,22)" fg:x="774" fg:w="1"/><text x="58.3145%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="58.0645%" y="229" width="0.0750%" height="15" fill="rgb(222,20,14)" fg:x="774" fg:w="1"/><text x="58.3145%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="58.0645%" y="213" width="0.0750%" height="15" fill="rgb(210,176,43)" fg:x="774" fg:w="1"/><text x="58.3145%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="58.0645%" y="197" width="0.0750%" height="15" fill="rgb(219,67,32)" fg:x="774" fg:w="1"/><text x="58.3145%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="58.0645%" y="181" width="0.0750%" height="15" fill="rgb(228,91,39)" fg:x="774" fg:w="1"/><text x="58.3145%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="58.0645%" y="165" width="0.0750%" height="15" fill="rgb(254,63,14)" fg:x="774" fg:w="1"/><text x="58.3145%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="58.0645%" y="149" width="0.0750%" height="15" fill="rgb(216,171,39)" fg:x="774" fg:w="1"/><text x="58.3145%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="58.0645%" y="133" width="0.0750%" height="15" fill="rgb(248,68,25)" fg:x="774" fg:w="1"/><text x="58.3145%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="58.0645%" y="117" width="0.0750%" height="15" fill="rgb(239,63,16)" fg:x="774" fg:w="1"/><text x="58.3145%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="58.0645%" y="101" width="0.0750%" height="15" fill="rgb(225,111,43)" fg:x="774" fg:w="1"/><text x="58.3145%" y="111.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="58.0645%" y="85" width="0.0750%" height="15" fill="rgb(246,165,17)" fg:x="774" fg:w="1"/><text x="58.3145%" y="95.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="58.6647%" y="405" width="0.0750%" height="15" fill="rgb(208,124,1)" fg:x="782" fg:w="1"/><text x="58.9147%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.6647%" y="389" width="0.0750%" height="15" fill="rgb(234,147,33)" fg:x="782" fg:w="1"/><text x="58.9147%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.15%)</title><rect x="59.5649%" y="357" width="0.1500%" height="15" fill="rgb(240,86,30)" fg:x="794" fg:w="2"/><text x="59.8149%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="59.5649%" y="341" width="0.1500%" height="15" fill="rgb(237,34,51)" fg:x="794" fg:w="2"/><text x="59.8149%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="60.8402%" y="261" width="0.0750%" height="15" fill="rgb(232,131,41)" fg:x="811" fg:w="1"/><text x="61.0902%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.30%)</title><rect x="61.1403%" y="229" width="0.3001%" height="15" fill="rgb(227,129,53)" fg:x="815" fg:w="4"/><text x="61.3903%" y="239.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (4 samples, 0.30%)</title><rect x="61.1403%" y="213" width="0.3001%" height="15" fill="rgb(230,90,35)" fg:x="815" fg:w="4"/><text x="61.3903%" y="223.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="61.2903%" y="197" width="0.1500%" height="15" fill="rgb(248,88,27)" fg:x="817" fg:w="2"/><text x="61.5403%" y="207.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.90%)</title><rect x="60.9152%" y="261" width="0.9002%" height="15" fill="rgb(223,18,17)" fg:x="812" fg:w="12"/><text x="61.1652%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10 samples, 0.75%)</title><rect x="61.0653%" y="245" width="0.7502%" height="15" fill="rgb(241,11,10)" fg:x="814" fg:w="10"/><text x="61.3153%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.38%)</title><rect x="61.4404%" y="229" width="0.3751%" height="15" fill="rgb(232,111,52)" fg:x="819" fg:w="5"/><text x="61.6904%" y="239.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="61.5904%" y="213" width="0.2251%" height="15" fill="rgb(228,67,8)" fg:x="821" fg:w="3"/><text x="61.8404%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.30%)</title><rect x="61.8155%" y="261" width="0.3001%" height="15" fill="rgb(251,168,31)" fg:x="824" fg:w="4"/><text x="62.0655%" y="271.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="61.9655%" y="245" width="0.1500%" height="15" fill="rgb(249,164,11)" fg:x="826" fg:w="2"/><text x="62.2155%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.30%)</title><rect x="62.2656%" y="245" width="0.3001%" height="15" fill="rgb(239,81,9)" fg:x="830" fg:w="4"/><text x="62.5156%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.23%)</title><rect x="62.3406%" y="229" width="0.2251%" height="15" fill="rgb(222,145,38)" fg:x="831" fg:w="3"/><text x="62.5906%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 2.25%)</title><rect x="60.3901%" y="277" width="2.2506%" height="15" fill="rgb(238,80,54)" fg:x="805" fg:w="30"/><text x="60.6401%" y="287.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.53%)</title><rect x="62.1155%" y="261" width="0.5251%" height="15" fill="rgb(237,116,16)" fg:x="828" fg:w="7"/><text x="62.3655%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.5656%" y="245" width="0.0750%" height="15" fill="rgb(218,135,19)" fg:x="834" fg:w="1"/><text x="62.8156%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (36 samples, 2.70%)</title><rect x="60.3151%" y="293" width="2.7007%" height="15" fill="rgb(216,207,44)" fg:x="804" fg:w="36"/><text x="60.5651%" y="303.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.38%)</title><rect x="62.6407%" y="277" width="0.3751%" height="15" fill="rgb(226,152,40)" fg:x="835" fg:w="5"/><text x="62.8907%" y="287.50"></text></g><g><title>__libc_malloc (4 samples, 0.30%)</title><rect x="62.7157%" y="261" width="0.3001%" height="15" fill="rgb(219,98,35)" fg:x="836" fg:w="4"/><text x="62.9657%" y="271.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="63.1658%" y="213" width="0.0750%" height="15" fill="rgb(222,136,46)" fg:x="842" fg:w="1"/><text x="63.4158%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.2408%" y="213" width="0.0750%" height="15" fill="rgb(222,71,8)" fg:x="843" fg:w="1"/><text x="63.4908%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (44 samples, 3.30%)</title><rect x="60.0900%" y="309" width="3.3008%" height="15" fill="rgb(209,89,53)" fg:x="801" fg:w="44"/><text x="60.3400%" y="319.50">&lt;rp..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.38%)</title><rect x="63.0158%" y="293" width="0.3751%" height="15" fill="rgb(210,97,51)" fg:x="840" fg:w="5"/><text x="63.2658%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.38%)</title><rect x="63.0158%" y="277" width="0.3751%" height="15" fill="rgb(248,65,21)" fg:x="840" fg:w="5"/><text x="63.2658%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.38%)</title><rect x="63.0158%" y="261" width="0.3751%" height="15" fill="rgb(222,5,31)" fg:x="840" fg:w="5"/><text x="63.2658%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.38%)</title><rect x="63.0158%" y="245" width="0.3751%" height="15" fill="rgb(241,16,30)" fg:x="840" fg:w="5"/><text x="63.2658%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.38%)</title><rect x="63.0158%" y="229" width="0.3751%" height="15" fill="rgb(215,86,30)" fg:x="840" fg:w="5"/><text x="63.2658%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.3158%" y="213" width="0.0750%" height="15" fill="rgb(235,26,44)" fg:x="844" fg:w="1"/><text x="63.5658%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.3158%" y="197" width="0.0750%" height="15" fill="rgb(228,147,14)" fg:x="844" fg:w="1"/><text x="63.5658%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.30%)</title><rect x="63.3908%" y="309" width="0.3001%" height="15" fill="rgb(253,38,50)" fg:x="845" fg:w="4"/><text x="63.6408%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="63.5409%" y="293" width="0.1500%" height="15" fill="rgb(251,151,16)" fg:x="847" fg:w="2"/><text x="63.7909%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.23%)</title><rect x="63.7659%" y="293" width="0.2251%" height="15" fill="rgb(224,64,19)" fg:x="850" fg:w="3"/><text x="64.0159%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="63.9160%" y="277" width="0.0750%" height="15" fill="rgb(235,214,47)" fg:x="852" fg:w="1"/><text x="64.1660%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (56 samples, 4.20%)</title><rect x="59.8650%" y="325" width="4.2011%" height="15" fill="rgb(218,15,19)" fg:x="798" fg:w="56"/><text x="60.1150%" y="335.50">&lt;core..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.38%)</title><rect x="63.6909%" y="309" width="0.3751%" height="15" fill="rgb(247,209,3)" fg:x="849" fg:w="5"/><text x="63.9409%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.9910%" y="293" width="0.0750%" height="15" fill="rgb(217,29,2)" fg:x="853" fg:w="1"/><text x="64.2410%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (69 samples, 5.18%)</title><rect x="59.7149%" y="357" width="5.1763%" height="15" fill="rgb(234,9,9)" fg:x="796" fg:w="69"/><text x="59.9649%" y="367.50">&lt;rpc_p..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (67 samples, 5.03%)</title><rect x="59.8650%" y="341" width="5.0263%" height="15" fill="rgb(207,43,14)" fg:x="798" fg:w="67"/><text x="60.1150%" y="351.50">&lt;std::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.83%)</title><rect x="64.0660%" y="325" width="0.8252%" height="15" fill="rgb(216,219,36)" fg:x="854" fg:w="11"/><text x="64.3160%" y="335.50"></text></g><g><title>__libc_malloc (11 samples, 0.83%)</title><rect x="64.0660%" y="309" width="0.8252%" height="15" fill="rgb(238,12,26)" fg:x="854" fg:w="11"/><text x="64.3160%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.38%)</title><rect x="64.8912%" y="357" width="0.3751%" height="15" fill="rgb(226,67,30)" fg:x="865" fg:w="5"/><text x="65.1412%" y="367.50"></text></g><g><title>__libc_free (4 samples, 0.30%)</title><rect x="64.9662%" y="341" width="0.3001%" height="15" fill="rgb(229,154,7)" fg:x="866" fg:w="4"/><text x="65.2162%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (92 samples, 6.90%)</title><rect x="58.8897%" y="373" width="6.9017%" height="15" fill="rgb(249,90,18)" fg:x="785" fg:w="92"/><text x="59.1397%" y="383.50">&lt;core::it..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.53%)</title><rect x="65.2663%" y="357" width="0.5251%" height="15" fill="rgb(223,53,15)" fg:x="870" fg:w="7"/><text x="65.5163%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.38%)</title><rect x="65.4164%" y="341" width="0.3751%" height="15" fill="rgb(253,86,38)" fg:x="872" fg:w="5"/><text x="65.6664%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="65.7164%" y="325" width="0.0750%" height="15" fill="rgb(222,198,9)" fg:x="876" fg:w="1"/><text x="65.9664%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (107 samples, 8.03%)</title><rect x="58.7397%" y="405" width="8.0270%" height="15" fill="rgb(240,146,25)" fg:x="783" fg:w="107"/><text x="58.9897%" y="415.50">&lt;rpc_proto:..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (106 samples, 7.95%)</title><rect x="58.8147%" y="389" width="7.9520%" height="15" fill="rgb(225,38,10)" fg:x="784" fg:w="106"/><text x="59.0647%" y="399.50">&lt;std::colle..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.98%)</title><rect x="65.7914%" y="373" width="0.9752%" height="15" fill="rgb(246,93,4)" fg:x="877" fg:w="13"/><text x="66.0414%" y="383.50"></text></g><g><title>__libc_malloc (13 samples, 0.98%)</title><rect x="65.7914%" y="357" width="0.9752%" height="15" fill="rgb(222,55,18)" fg:x="877" fg:w="13"/><text x="66.0414%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.23%)</title><rect x="66.7667%" y="405" width="0.2251%" height="15" fill="rgb(233,137,48)" fg:x="890" fg:w="3"/><text x="67.0167%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="66.8417%" y="389" width="0.1500%" height="15" fill="rgb(214,8,54)" fg:x="891" fg:w="2"/><text x="67.0917%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.9917%" y="389" width="0.0750%" height="15" fill="rgb(206,75,4)" fg:x="893" fg:w="1"/><text x="67.2417%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="66.9917%" y="373" width="0.0750%" height="15" fill="rgb(238,171,14)" fg:x="893" fg:w="1"/><text x="67.2417%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (121 samples, 9.08%)</title><rect x="58.3646%" y="421" width="9.0773%" height="15" fill="rgb(233,70,41)" fg:x="778" fg:w="121"/><text x="58.6146%" y="431.50">&lt;core::iter::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.45%)</title><rect x="66.9917%" y="405" width="0.4501%" height="15" fill="rgb(214,68,36)" fg:x="893" fg:w="6"/><text x="67.2417%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.38%)</title><rect x="67.0668%" y="389" width="0.3751%" height="15" fill="rgb(223,29,5)" fg:x="894" fg:w="5"/><text x="67.3168%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (133 samples, 9.98%)</title><rect x="58.2146%" y="453" width="9.9775%" height="15" fill="rgb(251,22,40)" fg:x="776" fg:w="133"/><text x="58.4646%" y="463.50">&lt;rpc_proto::Js..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (133 samples, 9.98%)</title><rect x="58.2146%" y="437" width="9.9775%" height="15" fill="rgb(210,67,41)" fg:x="776" fg:w="133"/><text x="58.4646%" y="447.50">&lt;std::collecti..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.75%)</title><rect x="67.4419%" y="421" width="0.7502%" height="15" fill="rgb(225,177,31)" fg:x="899" fg:w="10"/><text x="67.6919%" y="431.50"></text></g><g><title>__libc_malloc (9 samples, 0.68%)</title><rect x="67.5169%" y="405" width="0.6752%" height="15" fill="rgb(221,229,11)" fg:x="900" fg:w="9"/><text x="67.7669%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="68.6422%" y="405" width="0.2251%" height="15" fill="rgb(247,172,52)" fg:x="915" fg:w="3"/><text x="68.8922%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.53%)</title><rect x="68.8672%" y="405" width="0.5251%" height="15" fill="rgb(212,73,19)" fg:x="918" fg:w="7"/><text x="69.1172%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="69.2423%" y="389" width="0.1500%" height="15" fill="rgb(244,7,46)" fg:x="923" fg:w="2"/><text x="69.4923%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="69.3173%" y="373" width="0.0750%" height="15" fill="rgb(230,113,20)" fg:x="924" fg:w="1"/><text x="69.5673%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="69.3923%" y="405" width="0.0750%" height="15" fill="rgb(209,97,30)" fg:x="925" fg:w="1"/><text x="69.6423%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="69.4674%" y="405" width="0.0750%" height="15" fill="rgb(243,89,12)" fg:x="926" fg:w="1"/><text x="69.7174%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="69.4674%" y="389" width="0.0750%" height="15" fill="rgb(228,32,19)" fg:x="926" fg:w="1"/><text x="69.7174%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (4 samples, 0.30%)</title><rect x="69.5424%" y="405" width="0.3001%" height="15" fill="rgb(248,25,17)" fg:x="927" fg:w="4"/><text x="69.7924%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="69.6174%" y="389" width="0.2251%" height="15" fill="rgb(232,161,29)" fg:x="928" fg:w="3"/><text x="69.8674%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="69.6924%" y="373" width="0.1500%" height="15" fill="rgb(251,192,11)" fg:x="929" fg:w="2"/><text x="69.9424%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.7674%" y="357" width="0.0750%" height="15" fill="rgb(240,47,32)" fg:x="930" fg:w="1"/><text x="70.0174%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="69.7674%" y="341" width="0.0750%" height="15" fill="rgb(250,16,45)" fg:x="930" fg:w="1"/><text x="70.0174%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="69.7674%" y="325" width="0.0750%" height="15" fill="rgb(227,217,42)" fg:x="930" fg:w="1"/><text x="70.0174%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="70.1425%" y="373" width="0.1500%" height="15" fill="rgb(206,82,54)" fg:x="935" fg:w="2"/><text x="70.3925%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="70.1425%" y="357" width="0.1500%" height="15" fill="rgb(243,145,25)" fg:x="935" fg:w="2"/><text x="70.3925%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="70.1425%" y="341" width="0.1500%" height="15" fill="rgb(207,166,24)" fg:x="935" fg:w="2"/><text x="70.3925%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.4426%" y="357" width="0.0750%" height="15" fill="rgb(215,191,44)" fg:x="939" fg:w="1"/><text x="70.6926%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5176%" y="357" width="0.0750%" height="15" fill="rgb(234,218,51)" fg:x="940" fg:w="1"/><text x="70.7676%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5176%" y="341" width="0.0750%" height="15" fill="rgb(245,133,21)" fg:x="940" fg:w="1"/><text x="70.7676%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.30%)</title><rect x="70.6677%" y="341" width="0.3001%" height="15" fill="rgb(230,136,45)" fg:x="942" fg:w="4"/><text x="70.9177%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="70.7427%" y="325" width="0.2251%" height="15" fill="rgb(247,63,43)" fg:x="943" fg:w="3"/><text x="70.9927%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8927%" y="309" width="0.0750%" height="15" fill="rgb(254,223,31)" fg:x="945" fg:w="1"/><text x="71.1427%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="70.9677%" y="325" width="0.0750%" height="15" fill="rgb(236,185,0)" fg:x="946" fg:w="1"/><text x="71.2177%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="70.9677%" y="309" width="0.0750%" height="15" fill="rgb(231,139,46)" fg:x="946" fg:w="1"/><text x="71.2177%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="71.0428%" y="325" width="0.1500%" height="15" fill="rgb(236,147,31)" fg:x="947" fg:w="2"/><text x="71.2928%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.1178%" y="309" width="0.0750%" height="15" fill="rgb(225,222,22)" fg:x="948" fg:w="1"/><text x="71.3678%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.1178%" y="293" width="0.0750%" height="15" fill="rgb(225,193,14)" fg:x="948" fg:w="1"/><text x="71.3678%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3428%" y="293" width="0.0750%" height="15" fill="rgb(253,193,46)" fg:x="951" fg:w="1"/><text x="71.5928%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.4179%" y="293" width="0.0750%" height="15" fill="rgb(218,187,39)" fg:x="952" fg:w="1"/><text x="71.6679%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.75%)</title><rect x="70.9677%" y="341" width="0.7502%" height="15" fill="rgb(227,162,48)" fg:x="946" fg:w="10"/><text x="71.2177%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (7 samples, 0.53%)</title><rect x="71.1928%" y="325" width="0.5251%" height="15" fill="rgb(222,25,5)" fg:x="949" fg:w="7"/><text x="71.4428%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.45%)</title><rect x="71.2678%" y="309" width="0.4501%" height="15" fill="rgb(211,205,16)" fg:x="950" fg:w="6"/><text x="71.5178%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.23%)</title><rect x="71.4929%" y="293" width="0.2251%" height="15" fill="rgb(244,191,2)" fg:x="953" fg:w="3"/><text x="71.7429%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="71.6429%" y="277" width="0.0750%" height="15" fill="rgb(248,159,12)" fg:x="955" fg:w="1"/><text x="71.8929%" y="287.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (27 samples, 2.03%)</title><rect x="69.8425%" y="405" width="2.0255%" height="15" fill="rgb(235,204,17)" fg:x="931" fg:w="27"/><text x="70.0925%" y="415.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 2.03%)</title><rect x="69.8425%" y="389" width="2.0255%" height="15" fill="rgb(240,21,27)" fg:x="931" fg:w="27"/><text x="70.0925%" y="399.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (21 samples, 1.58%)</title><rect x="70.2926%" y="373" width="1.5754%" height="15" fill="rgb(224,170,31)" fg:x="937" fg:w="21"/><text x="70.5426%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (17 samples, 1.28%)</title><rect x="70.5926%" y="357" width="1.2753%" height="15" fill="rgb(223,145,32)" fg:x="941" fg:w="17"/><text x="70.8426%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="71.7179%" y="341" width="0.1500%" height="15" fill="rgb(243,100,5)" fg:x="956" fg:w="2"/><text x="71.9679%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (3 samples, 0.23%)</title><rect x="71.8680%" y="405" width="0.2251%" height="15" fill="rgb(242,131,51)" fg:x="958" fg:w="3"/><text x="72.1180%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="71.8680%" y="389" width="0.2251%" height="15" fill="rgb(223,156,46)" fg:x="958" fg:w="3"/><text x="72.1180%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="71.9430%" y="373" width="0.1500%" height="15" fill="rgb(215,10,40)" fg:x="959" fg:w="2"/><text x="72.1930%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.0180%" y="357" width="0.0750%" height="15" fill="rgb(233,155,0)" fg:x="960" fg:w="1"/><text x="72.2680%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.0180%" y="341" width="0.0750%" height="15" fill="rgb(247,78,6)" fg:x="960" fg:w="1"/><text x="72.2680%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="72.3181%" y="389" width="0.0750%" height="15" fill="rgb(237,217,21)" fg:x="964" fg:w="1"/><text x="72.5681%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.3931%" y="389" width="0.0750%" height="15" fill="rgb(212,1,21)" fg:x="965" fg:w="1"/><text x="72.6431%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.3931%" y="373" width="0.0750%" height="15" fill="rgb(213,7,14)" fg:x="965" fg:w="1"/><text x="72.6431%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.3931%" y="357" width="0.0750%" height="15" fill="rgb(225,84,14)" fg:x="965" fg:w="1"/><text x="72.6431%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="72.5431%" y="373" width="0.0750%" height="15" fill="rgb(239,216,39)" fg:x="967" fg:w="1"/><text x="72.7931%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="72.6182%" y="373" width="0.0750%" height="15" fill="rgb(253,29,23)" fg:x="968" fg:w="1"/><text x="72.8682%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.30%)</title><rect x="72.8432%" y="357" width="0.3001%" height="15" fill="rgb(220,167,50)" fg:x="971" fg:w="4"/><text x="73.0932%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.30%)</title><rect x="72.8432%" y="341" width="0.3001%" height="15" fill="rgb(232,141,1)" fg:x="971" fg:w="4"/><text x="73.0932%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.0683%" y="325" width="0.0750%" height="15" fill="rgb(222,210,1)" fg:x="974" fg:w="1"/><text x="73.3183%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="73.2183%" y="325" width="0.0750%" height="15" fill="rgb(219,84,10)" fg:x="976" fg:w="1"/><text x="73.4683%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="73.2933%" y="325" width="0.1500%" height="15" fill="rgb(245,188,6)" fg:x="977" fg:w="2"/><text x="73.5433%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="73.3683%" y="309" width="0.0750%" height="15" fill="rgb(252,139,39)" fg:x="978" fg:w="1"/><text x="73.6183%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.3683%" y="293" width="0.0750%" height="15" fill="rgb(218,42,26)" fg:x="978" fg:w="1"/><text x="73.6183%" y="303.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.38%)</title><rect x="73.1433%" y="357" width="0.3751%" height="15" fill="rgb(237,226,51)" fg:x="975" fg:w="5"/><text x="73.3933%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.38%)</title><rect x="73.1433%" y="341" width="0.3751%" height="15" fill="rgb(246,15,17)" fg:x="975" fg:w="5"/><text x="73.3933%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.4434%" y="325" width="0.0750%" height="15" fill="rgb(228,170,42)" fg:x="979" fg:w="1"/><text x="73.6934%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="73.7434%" y="341" width="0.0750%" height="15" fill="rgb(248,118,53)" fg:x="983" fg:w="1"/><text x="73.9934%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.8185%" y="325" width="0.0750%" height="15" fill="rgb(207,30,10)" fg:x="984" fg:w="1"/><text x="74.0685%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="73.8185%" y="309" width="0.0750%" height="15" fill="rgb(217,104,38)" fg:x="984" fg:w="1"/><text x="74.0685%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="73.8185%" y="341" width="0.2251%" height="15" fill="rgb(211,165,26)" fg:x="984" fg:w="3"/><text x="74.0685%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.15%)</title><rect x="73.8935%" y="325" width="0.1500%" height="15" fill="rgb(247,38,9)" fg:x="985" fg:w="2"/><text x="74.1435%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.9685%" y="309" width="0.0750%" height="15" fill="rgb(218,187,8)" fg:x="986" fg:w="1"/><text x="74.2185%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (21 samples, 1.58%)</title><rect x="72.6932%" y="373" width="1.5754%" height="15" fill="rgb(247,94,28)" fg:x="969" fg:w="21"/><text x="72.9432%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.75%)</title><rect x="73.5184%" y="357" width="0.7502%" height="15" fill="rgb(218,173,30)" fg:x="980" fg:w="10"/><text x="73.7684%" y="367.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="74.0435%" y="341" width="0.2251%" height="15" fill="rgb(245,45,36)" fg:x="987" fg:w="3"/><text x="74.2935%" y="351.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (220 samples, 16.50%)</title><rect x="58.1395%" y="469" width="16.5041%" height="15" fill="rgb(221,172,44)" fg:x="775" fg:w="220"/><text x="58.3895%" y="479.50">&lt;rpc_proto::Json as core:..</text></g><g><title>kernel::model::EntityPtr::to_json_value (86 samples, 6.45%)</title><rect x="68.1920%" y="453" width="6.4516%" height="15" fill="rgb(222,45,12)" fg:x="909" fg:w="86"/><text x="68.4420%" y="463.50">kernel::..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (85 samples, 6.38%)</title><rect x="68.2671%" y="437" width="6.3766%" height="15" fill="rgb(250,10,22)" fg:x="910" fg:w="85"/><text x="68.5171%" y="447.50">kernel::..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (84 samples, 6.30%)</title><rect x="68.3421%" y="421" width="6.3016%" height="15" fill="rgb(239,27,0)" fg:x="911" fg:w="84"/><text x="68.5921%" y="431.50">&lt;serde_j..</text></g><g><title>serde::ser::Serializer::collect_map (34 samples, 2.55%)</title><rect x="72.0930%" y="405" width="2.5506%" height="15" fill="rgb(223,118,22)" fg:x="961" fg:w="34"/><text x="72.3430%" y="415.50">se..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (29 samples, 2.18%)</title><rect x="72.4681%" y="389" width="2.1755%" height="15" fill="rgb(251,81,25)" fg:x="966" fg:w="29"/><text x="72.7181%" y="399.50">k..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.38%)</title><rect x="74.2686%" y="373" width="0.3751%" height="15" fill="rgb(237,225,53)" fg:x="990" fg:w="5"/><text x="74.5186%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="74.4936%" y="357" width="0.1500%" height="15" fill="rgb(237,186,51)" fg:x="993" fg:w="2"/><text x="74.7436%" y="367.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="74.6437%" y="469" width="0.2251%" height="15" fill="rgb(247,209,11)" fg:x="995" fg:w="3"/><text x="74.8937%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.8687%" y="453" width="0.0750%" height="15" fill="rgb(223,109,27)" fg:x="998" fg:w="1"/><text x="75.1187%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.15%)</title><rect x="74.8687%" y="469" width="0.1500%" height="15" fill="rgb(246,181,13)" fg:x="998" fg:w="2"/><text x="75.1187%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="74.9437%" y="453" width="0.0750%" height="15" fill="rgb(234,57,44)" fg:x="999" fg:w="1"/><text x="75.1937%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.9437%" y="437" width="0.0750%" height="15" fill="rgb(211,227,50)" fg:x="999" fg:w="1"/><text x="75.1937%" y="447.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (377 samples, 28.28%)</title><rect x="46.8117%" y="549" width="28.2821%" height="15" fill="rgb(254,57,34)" fg:x="624" fg:w="377"/><text x="47.0617%" y="559.50">&lt;plugins_rpc::sessions::SessionServices as pl..</text></g><g><title>core::iter::adapters::try_process (362 samples, 27.16%)</title><rect x="47.9370%" y="533" width="27.1568%" height="15" fill="rgb(227,212,26)" fg:x="639" fg:w="362"/><text x="48.1870%" y="543.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (255 samples, 19.13%)</title><rect x="55.9640%" y="517" width="19.1298%" height="15" fill="rgb(244,169,44)" fg:x="746" fg:w="255"/><text x="56.2140%" y="527.50">alloc::vec::in_place_collect::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (253 samples, 18.98%)</title><rect x="56.1140%" y="501" width="18.9797%" height="15" fill="rgb(236,135,50)" fg:x="748" fg:w="253"/><text x="56.3640%" y="511.50">&lt;core::iter::adapters::map::Ma..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (251 samples, 18.83%)</title><rect x="56.2641%" y="485" width="18.8297%" height="15" fill="rgb(241,89,30)" fg:x="750" fg:w="251"/><text x="56.5141%" y="495.50">plugins_rpc::sessions::Sessio..</text></g><g><title>rpc_proto::&lt;impl core::convert::From&lt;&amp;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::from (1 samples, 0.08%)</title><rect x="75.0188%" y="469" width="0.0750%" height="15" fill="rgb(206,113,34)" fg:x="1000" fg:w="1"/><text x="75.2688%" y="479.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="75.0188%" y="453" width="0.0750%" height="15" fill="rgb(218,104,52)" fg:x="1000" fg:w="1"/><text x="75.2688%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.0188%" y="437" width="0.0750%" height="15" fill="rgb(223,82,32)" fg:x="1000" fg:w="1"/><text x="75.2688%" y="447.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="75.0938%" y="485" width="0.0750%" height="15" fill="rgb(249,219,30)" fg:x="1001" fg:w="1"/><text x="75.3438%" y="495.50"></text></g><g><title>&lt;rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (2 samples, 0.15%)</title><rect x="75.0938%" y="549" width="0.1500%" height="15" fill="rgb(233,141,21)" fg:x="1001" fg:w="2"/><text x="75.3438%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.15%)</title><rect x="75.0938%" y="533" width="0.1500%" height="15" fill="rgb(252,87,44)" fg:x="1001" fg:w="2"/><text x="75.3438%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.15%)</title><rect x="75.0938%" y="517" width="0.1500%" height="15" fill="rgb(229,48,33)" fg:x="1001" fg:w="2"/><text x="75.3438%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="75.0938%" y="501" width="0.1500%" height="15" fill="rgb(229,23,22)" fg:x="1001" fg:w="2"/><text x="75.3438%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.1688%" y="485" width="0.0750%" height="15" fill="rgb(244,116,16)" fg:x="1002" fg:w="1"/><text x="75.4188%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.1688%" y="469" width="0.0750%" height="15" fill="rgb(247,45,10)" fg:x="1002" fg:w="1"/><text x="75.4188%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.1688%" y="453" width="0.0750%" height="15" fill="rgb(228,60,29)" fg:x="1002" fg:w="1"/><text x="75.4188%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.1688%" y="437" width="0.0750%" height="15" fill="rgb(205,129,15)" fg:x="1002" fg:w="1"/><text x="75.4188%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.1688%" y="421" width="0.0750%" height="15" fill="rgb(206,229,4)" fg:x="1002" fg:w="1"/><text x="75.4188%" y="431.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (557 samples, 41.79%)</title><rect x="33.6834%" y="613" width="41.7854%" height="15" fill="rgb(249,191,30)" fg:x="449" fg:w="557"/><text x="33.9334%" y="623.50">&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::p..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (432 samples, 32.41%)</title><rect x="43.0608%" y="597" width="32.4081%" height="15" fill="rgb(250,84,54)" fg:x="574" fg:w="432"/><text x="43.3108%" y="607.50">kernel::plugins::SessionPlugins::have_surroundings</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (432 samples, 32.41%)</title><rect x="43.0608%" y="581" width="32.4081%" height="15" fill="rgb(207,25,53)" fg:x="574" fg:w="432"/><text x="43.3108%" y="591.50">&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::P..</text></g><g><title>plugins_rpc::querying::have_surroundings (384 samples, 28.81%)</title><rect x="46.6617%" y="565" width="28.8072%" height="15" fill="rgb(235,40,8)" fg:x="622" fg:w="384"/><text x="46.9117%" y="575.50">plugins_rpc::querying::have_surroundings</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.23%)</title><rect x="75.2438%" y="549" width="0.2251%" height="15" fill="rgb(226,169,33)" fg:x="1003" fg:w="3"/><text x="75.4938%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.23%)</title><rect x="75.2438%" y="533" width="0.2251%" height="15" fill="rgb(238,110,8)" fg:x="1003" fg:w="3"/><text x="75.4938%" y="543.50"></text></g><g><title>realloc (3 samples, 0.23%)</title><rect x="75.2438%" y="517" width="0.2251%" height="15" fill="rgb(251,206,12)" fg:x="1003" fg:w="3"/><text x="75.4938%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.5439%" y="469" width="0.0750%" height="15" fill="rgb(248,171,18)" fg:x="1007" fg:w="1"/><text x="75.7939%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.5439%" y="453" width="0.0750%" height="15" fill="rgb(213,65,46)" fg:x="1007" fg:w="1"/><text x="75.7939%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.5439%" y="437" width="0.0750%" height="15" fill="rgb(211,154,15)" fg:x="1007" fg:w="1"/><text x="75.7939%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.5439%" y="421" width="0.0750%" height="15" fill="rgb(217,75,43)" fg:x="1007" fg:w="1"/><text x="75.7939%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.5439%" y="405" width="0.0750%" height="15" fill="rgb(230,32,33)" fg:x="1007" fg:w="1"/><text x="75.7939%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="75.5439%" y="389" width="0.0750%" height="15" fill="rgb(221,100,16)" fg:x="1007" fg:w="1"/><text x="75.7939%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.5439%" y="373" width="0.0750%" height="15" fill="rgb(212,129,47)" fg:x="1007" fg:w="1"/><text x="75.7939%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.5439%" y="357" width="0.0750%" height="15" fill="rgb(239,217,47)" fg:x="1007" fg:w="1"/><text x="75.7939%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.5439%" y="341" width="0.0750%" height="15" fill="rgb(230,84,24)" fg:x="1007" fg:w="1"/><text x="75.7939%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="75.5439%" y="325" width="0.0750%" height="15" fill="rgb(214,153,51)" fg:x="1007" fg:w="1"/><text x="75.7939%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5439%" y="309" width="0.0750%" height="15" fill="rgb(231,6,35)" fg:x="1007" fg:w="1"/><text x="75.7939%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.6189%" y="405" width="0.0750%" height="15" fill="rgb(229,122,30)" fg:x="1008" fg:w="1"/><text x="75.8689%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.6189%" y="389" width="0.0750%" height="15" fill="rgb(234,71,10)" fg:x="1008" fg:w="1"/><text x="75.8689%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.30%)</title><rect x="75.4689%" y="533" width="0.3001%" height="15" fill="rgb(215,173,26)" fg:x="1006" fg:w="4"/><text x="75.7189%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.30%)</title><rect x="75.4689%" y="517" width="0.3001%" height="15" fill="rgb(248,118,52)" fg:x="1006" fg:w="4"/><text x="75.7189%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.30%)</title><rect x="75.4689%" y="501" width="0.3001%" height="15" fill="rgb(237,55,46)" fg:x="1006" fg:w="4"/><text x="75.7189%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.30%)</title><rect x="75.4689%" y="485" width="0.3001%" height="15" fill="rgb(243,214,43)" fg:x="1006" fg:w="4"/><text x="75.7189%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="75.6189%" y="469" width="0.1500%" height="15" fill="rgb(252,123,30)" fg:x="1008" fg:w="2"/><text x="75.8689%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="75.6189%" y="453" width="0.1500%" height="15" fill="rgb(215,73,39)" fg:x="1008" fg:w="2"/><text x="75.8689%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.15%)</title><rect x="75.6189%" y="437" width="0.1500%" height="15" fill="rgb(251,194,29)" fg:x="1008" fg:w="2"/><text x="75.8689%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="75.6189%" y="421" width="0.1500%" height="15" fill="rgb(224,58,52)" fg:x="1008" fg:w="2"/><text x="75.8689%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.6939%" y="405" width="0.0750%" height="15" fill="rgb(248,106,46)" fg:x="1009" fg:w="1"/><text x="75.9439%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.6939%" y="389" width="0.0750%" height="15" fill="rgb(223,80,29)" fg:x="1009" fg:w="1"/><text x="75.9439%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.6939%" y="373" width="0.0750%" height="15" fill="rgb(243,137,9)" fg:x="1009" fg:w="1"/><text x="75.9439%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.6939%" y="357" width="0.0750%" height="15" fill="rgb(235,121,28)" fg:x="1009" fg:w="1"/><text x="75.9439%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="75.6939%" y="341" width="0.0750%" height="15" fill="rgb(219,121,41)" fg:x="1009" fg:w="1"/><text x="75.9439%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.6939%" y="325" width="0.0750%" height="15" fill="rgb(251,60,6)" fg:x="1009" fg:w="1"/><text x="75.9439%" y="335.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="75.6939%" y="309" width="0.0750%" height="15" fill="rgb(208,12,30)" fg:x="1009" fg:w="1"/><text x="75.9439%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.7689%" y="453" width="0.0750%" height="15" fill="rgb(207,176,36)" fg:x="1010" fg:w="1"/><text x="76.0189%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.7689%" y="437" width="0.0750%" height="15" fill="rgb(211,188,29)" fg:x="1010" fg:w="1"/><text x="76.0189%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.8440%" y="421" width="0.0750%" height="15" fill="rgb(220,184,37)" fg:x="1011" fg:w="1"/><text x="76.0940%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.9190%" y="373" width="0.0750%" height="15" fill="rgb(239,87,37)" fg:x="1012" fg:w="1"/><text x="76.1690%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9190%" y="357" width="0.0750%" height="15" fill="rgb(232,113,44)" fg:x="1012" fg:w="1"/><text x="76.1690%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (8 samples, 0.60%)</title><rect x="75.4689%" y="597" width="0.6002%" height="15" fill="rgb(246,25,39)" fg:x="1006" fg:w="8"/><text x="75.7189%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.60%)</title><rect x="75.4689%" y="581" width="0.6002%" height="15" fill="rgb(247,30,13)" fg:x="1006" fg:w="8"/><text x="75.7189%" y="591.50"></text></g><g><title>engine::internal::Entities::add_persisted (8 samples, 0.60%)</title><rect x="75.4689%" y="565" width="0.6002%" height="15" fill="rgb(230,176,35)" fg:x="1006" fg:w="8"/><text x="75.7189%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity (8 samples, 0.60%)</title><rect x="75.4689%" y="549" width="0.6002%" height="15" fill="rgb(222,23,18)" fg:x="1006" fg:w="8"/><text x="75.7189%" y="559.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.30%)</title><rect x="75.7689%" y="533" width="0.3001%" height="15" fill="rgb(234,86,8)" fg:x="1010" fg:w="4"/><text x="76.0189%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.30%)</title><rect x="75.7689%" y="517" width="0.3001%" height="15" fill="rgb(206,218,47)" fg:x="1010" fg:w="4"/><text x="76.0189%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.30%)</title><rect x="75.7689%" y="501" width="0.3001%" height="15" fill="rgb(229,35,31)" fg:x="1010" fg:w="4"/><text x="76.0189%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.30%)</title><rect x="75.7689%" y="485" width="0.3001%" height="15" fill="rgb(242,81,7)" fg:x="1010" fg:w="4"/><text x="76.0189%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.30%)</title><rect x="75.7689%" y="469" width="0.3001%" height="15" fill="rgb(231,11,35)" fg:x="1010" fg:w="4"/><text x="76.0189%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="75.8440%" y="453" width="0.2251%" height="15" fill="rgb(219,218,17)" fg:x="1011" fg:w="3"/><text x="76.0940%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="75.8440%" y="437" width="0.2251%" height="15" fill="rgb(221,83,32)" fg:x="1011" fg:w="3"/><text x="76.0940%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="75.9190%" y="421" width="0.1500%" height="15" fill="rgb(233,49,54)" fg:x="1012" fg:w="2"/><text x="76.1690%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="75.9190%" y="405" width="0.1500%" height="15" fill="rgb(206,18,51)" fg:x="1012" fg:w="2"/><text x="76.1690%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="75.9190%" y="389" width="0.1500%" height="15" fill="rgb(249,193,15)" fg:x="1012" fg:w="2"/><text x="76.1690%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.9940%" y="373" width="0.0750%" height="15" fill="rgb(245,186,19)" fg:x="1013" fg:w="1"/><text x="76.2440%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.1440%" y="565" width="0.0750%" height="15" fill="rgb(230,4,24)" fg:x="1015" fg:w="1"/><text x="76.3940%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="76.1440%" y="549" width="0.0750%" height="15" fill="rgb(234,75,27)" fg:x="1015" fg:w="1"/><text x="76.3940%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.2191%" y="533" width="0.0750%" height="15" fill="rgb(244,187,35)" fg:x="1016" fg:w="1"/><text x="76.4691%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.2191%" y="517" width="0.0750%" height="15" fill="rgb(241,97,43)" fg:x="1016" fg:w="1"/><text x="76.4691%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (5 samples, 0.38%)</title><rect x="76.0690%" y="597" width="0.3751%" height="15" fill="rgb(236,94,2)" fg:x="1014" fg:w="5"/><text x="76.3190%" y="607.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.30%)</title><rect x="76.1440%" y="581" width="0.3001%" height="15" fill="rgb(231,175,7)" fg:x="1015" fg:w="4"/><text x="76.3940%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.23%)</title><rect x="76.2191%" y="565" width="0.2251%" height="15" fill="rgb(236,89,47)" fg:x="1016" fg:w="3"/><text x="76.4691%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.23%)</title><rect x="76.2191%" y="549" width="0.2251%" height="15" fill="rgb(213,191,37)" fg:x="1016" fg:w="3"/><text x="76.4691%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="76.2941%" y="533" width="0.1500%" height="15" fill="rgb(252,0,34)" fg:x="1017" fg:w="2"/><text x="76.5441%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="76.2941%" y="517" width="0.1500%" height="15" fill="rgb(208,145,44)" fg:x="1017" fg:w="2"/><text x="76.5441%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.3691%" y="501" width="0.0750%" height="15" fill="rgb(227,95,50)" fg:x="1018" fg:w="1"/><text x="76.6191%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::DomainError&gt; (1 samples, 0.08%)</title><rect x="76.4441%" y="597" width="0.0750%" height="15" fill="rgb(222,136,24)" fg:x="1019" fg:w="1"/><text x="76.6941%" y="607.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (573 samples, 42.99%)</title><rect x="33.6834%" y="629" width="42.9857%" height="15" fill="rgb(218,105,10)" fg:x="449" fg:w="573"/><text x="33.9334%" y="639.50">&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::per..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (16 samples, 1.20%)</title><rect x="75.4689%" y="613" width="1.2003%" height="15" fill="rgb(216,65,28)" fg:x="1006" fg:w="16"/><text x="75.7189%" y="623.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.15%)</title><rect x="76.5191%" y="597" width="0.1500%" height="15" fill="rgb(229,6,28)" fg:x="1020" fg:w="2"/><text x="76.7691%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.15%)</title><rect x="76.5191%" y="581" width="0.1500%" height="15" fill="rgb(222,160,42)" fg:x="1020" fg:w="2"/><text x="76.7691%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="76.5941%" y="565" width="0.0750%" height="15" fill="rgb(235,83,49)" fg:x="1021" fg:w="1"/><text x="76.8441%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="76.5941%" y="549" width="0.0750%" height="15" fill="rgb(236,86,36)" fg:x="1021" fg:w="1"/><text x="76.8441%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="76.5941%" y="533" width="0.0750%" height="15" fill="rgb(236,19,41)" fg:x="1021" fg:w="1"/><text x="76.8441%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.5941%" y="517" width="0.0750%" height="15" fill="rgb(217,71,31)" fg:x="1021" fg:w="1"/><text x="76.8441%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="76.5941%" y="501" width="0.0750%" height="15" fill="rgb(236,209,25)" fg:x="1021" fg:w="1"/><text x="76.8441%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="76.5941%" y="485" width="0.0750%" height="15" fill="rgb(247,104,21)" fg:x="1021" fg:w="1"/><text x="76.8441%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="76.5941%" y="469" width="0.0750%" height="15" fill="rgb(243,80,38)" fg:x="1021" fg:w="1"/><text x="76.8441%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.5941%" y="453" width="0.0750%" height="15" fill="rgb(232,109,38)" fg:x="1021" fg:w="1"/><text x="76.8441%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (575 samples, 43.14%)</title><rect x="33.6084%" y="645" width="43.1358%" height="15" fill="rgb(212,177,53)" fg:x="448" fg:w="575"/><text x="33.8584%" y="655.50">&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;:..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="76.6692%" y="629" width="0.0750%" height="15" fill="rgb(227,30,34)" fg:x="1022" fg:w="1"/><text x="76.9192%" y="639.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="76.6692%" y="613" width="0.0750%" height="15" fill="rgb(205,175,25)" fg:x="1022" fg:w="1"/><text x="76.9192%" y="623.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="76.6692%" y="597" width="0.0750%" height="15" fill="rgb(249,39,54)" fg:x="1022" fg:w="1"/><text x="76.9192%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.7442%" y="629" width="0.0750%" height="15" fill="rgb(215,54,37)" fg:x="1023" fg:w="1"/><text x="76.9942%" y="639.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (581 samples, 43.59%)</title><rect x="33.3083%" y="709" width="43.5859%" height="15" fill="rgb(205,60,46)" fg:x="444" fg:w="581"/><text x="33.5583%" y="719.50">&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evalua..</text></g><g><title>core::iter::adapters::try_process (581 samples, 43.59%)</title><rect x="33.3083%" y="693" width="43.5859%" height="15" fill="rgb(238,89,29)" fg:x="444" fg:w="581"/><text x="33.5583%" y="703.50">core::iter::adapters::try_process</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (581 samples, 43.59%)</title><rect x="33.3083%" y="677" width="43.5859%" height="15" fill="rgb(212,48,10)" fg:x="444" fg:w="581"/><text x="33.5583%" y="687.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (581 samples, 43.59%)</title><rect x="33.3083%" y="661" width="43.5859%" height="15" fill="rgb(237,186,28)" fg:x="444" fg:w="581"/><text x="33.5583%" y="671.50">&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterato..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Evaluator&gt;::evaluate (2 samples, 0.15%)</title><rect x="76.7442%" y="645" width="0.1500%" height="15" fill="rgb(237,204,4)" fg:x="1023" fg:w="2"/><text x="76.9942%" y="655.50"></text></g><g><title>plugins_rpc::sessions::SessionServices::new_for_my_session (1 samples, 0.08%)</title><rect x="76.8192%" y="629" width="0.0750%" height="15" fill="rgb(237,15,47)" fg:x="1024" fg:w="1"/><text x="77.0692%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8192%" y="613" width="0.0750%" height="15" fill="rgb(244,110,25)" fg:x="1024" fg:w="1"/><text x="77.0692%" y="623.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (582 samples, 43.66%)</title><rect x="33.3083%" y="741" width="43.6609%" height="15" fill="rgb(241,12,16)" fg:x="444" fg:w="582"/><text x="33.5583%" y="751.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (582 samples, 43.66%)</title><rect x="33.3083%" y="725" width="43.6609%" height="15" fill="rgb(235,25,9)" fg:x="444" fg:w="582"/><text x="33.5583%" y="735.50">engine::perform::StandardPerformer::evaluate_and_perform</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="76.8942%" y="709" width="0.0750%" height="15" fill="rgb(245,159,19)" fg:x="1025" fg:w="1"/><text x="77.1442%" y="719.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="76.8942%" y="693" width="0.0750%" height="15" fill="rgb(236,63,32)" fg:x="1025" fg:w="1"/><text x="77.1442%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="76.8942%" y="677" width="0.0750%" height="15" fill="rgb(235,32,52)" fg:x="1025" fg:w="1"/><text x="77.1442%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="76.8942%" y="661" width="0.0750%" height="15" fill="rgb(209,176,21)" fg:x="1025" fg:w="1"/><text x="77.1442%" y="671.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="76.8942%" y="645" width="0.0750%" height="15" fill="rgb(205,90,42)" fg:x="1025" fg:w="1"/><text x="77.1442%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,028 samples, 77.12%)</title><rect x="0.0000%" y="789" width="77.1193%" height="15" fill="rgb(213,132,16)" fg:x="0" fg:w="1028"/><text x="0.2500%" y="799.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (1,028 samples, 77.12%)</title><rect x="0.0000%" y="773" width="77.1193%" height="15" fill="rgb(232,11,22)" fg:x="0" fg:w="1028"/><text x="0.2500%" y="783.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (1,028 samples, 77.12%)</title><rect x="0.0000%" y="757" width="77.1193%" height="15" fill="rgb(248,167,41)" fg:x="0" fg:w="1028"/><text x="0.2500%" y="767.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.15%)</title><rect x="76.9692%" y="741" width="0.1500%" height="15" fill="rgb(209,127,6)" fg:x="1026" fg:w="2"/><text x="77.2192%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.0443%" y="725" width="0.0750%" height="15" fill="rgb(246,210,34)" fg:x="1027" fg:w="1"/><text x="77.2943%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.2693%" y="613" width="0.0750%" height="15" fill="rgb(238,165,13)" fg:x="1030" fg:w="1"/><text x="77.5193%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.3443%" y="613" width="0.0750%" height="15" fill="rgb(233,98,15)" fg:x="1031" fg:w="1"/><text x="77.5943%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.3443%" y="597" width="0.0750%" height="15" fill="rgb(215,215,51)" fg:x="1031" fg:w="1"/><text x="77.5943%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.30%)</title><rect x="77.1943%" y="741" width="0.3001%" height="15" fill="rgb(217,161,25)" fg:x="1029" fg:w="4"/><text x="77.4443%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (3 samples, 0.23%)</title><rect x="77.2693%" y="725" width="0.2251%" height="15" fill="rgb(217,167,48)" fg:x="1030" fg:w="3"/><text x="77.5193%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="77.2693%" y="709" width="0.2251%" height="15" fill="rgb(205,163,34)" fg:x="1030" fg:w="3"/><text x="77.5193%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (3 samples, 0.23%)</title><rect x="77.2693%" y="693" width="0.2251%" height="15" fill="rgb(241,197,31)" fg:x="1030" fg:w="3"/><text x="77.5193%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="77.2693%" y="677" width="0.2251%" height="15" fill="rgb(225,123,11)" fg:x="1030" fg:w="3"/><text x="77.5193%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="77.2693%" y="661" width="0.2251%" height="15" fill="rgb(217,4,20)" fg:x="1030" fg:w="3"/><text x="77.5193%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="77.2693%" y="645" width="0.2251%" height="15" fill="rgb(215,55,9)" fg:x="1030" fg:w="3"/><text x="77.5193%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="77.2693%" y="629" width="0.2251%" height="15" fill="rgb(218,165,5)" fg:x="1030" fg:w="3"/><text x="77.5193%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.4194%" y="613" width="0.0750%" height="15" fill="rgb(222,175,15)" fg:x="1032" fg:w="1"/><text x="77.6694%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.4194%" y="597" width="0.0750%" height="15" fill="rgb(223,85,34)" fg:x="1032" fg:w="1"/><text x="77.6694%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.4194%" y="581" width="0.0750%" height="15" fill="rgb(234,228,29)" fg:x="1032" fg:w="1"/><text x="77.6694%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.4194%" y="565" width="0.0750%" height="15" fill="rgb(239,7,28)" fg:x="1032" fg:w="1"/><text x="77.6694%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="77.4944%" y="661" width="0.0750%" height="15" fill="rgb(252,222,53)" fg:x="1033" fg:w="1"/><text x="77.7444%" y="671.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="77.4944%" y="645" width="0.0750%" height="15" fill="rgb(232,146,44)" fg:x="1033" fg:w="1"/><text x="77.7444%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.4944%" y="629" width="0.0750%" height="15" fill="rgb(243,223,53)" fg:x="1033" fg:w="1"/><text x="77.7444%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.4944%" y="613" width="0.0750%" height="15" fill="rgb(219,128,25)" fg:x="1033" fg:w="1"/><text x="77.7444%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.4944%" y="597" width="0.0750%" height="15" fill="rgb(223,56,32)" fg:x="1033" fg:w="1"/><text x="77.7444%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.4944%" y="581" width="0.0750%" height="15" fill="rgb(237,41,3)" fg:x="1033" fg:w="1"/><text x="77.7444%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.4944%" y="565" width="0.0750%" height="15" fill="rgb(235,138,9)" fg:x="1033" fg:w="1"/><text x="77.7444%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.4944%" y="549" width="0.0750%" height="15" fill="rgb(214,131,10)" fg:x="1033" fg:w="1"/><text x="77.7444%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.4944%" y="533" width="0.0750%" height="15" fill="rgb(229,89,7)" fg:x="1033" fg:w="1"/><text x="77.7444%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.4944%" y="517" width="0.0750%" height="15" fill="rgb(240,24,42)" fg:x="1033" fg:w="1"/><text x="77.7444%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.4944%" y="501" width="0.0750%" height="15" fill="rgb(243,188,54)" fg:x="1033" fg:w="1"/><text x="77.7444%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.4944%" y="485" width="0.0750%" height="15" fill="rgb(246,92,22)" fg:x="1033" fg:w="1"/><text x="77.7444%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.4944%" y="469" width="0.0750%" height="15" fill="rgb(211,176,51)" fg:x="1033" fg:w="1"/><text x="77.7444%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.4944%" y="453" width="0.0750%" height="15" fill="rgb(246,207,34)" fg:x="1033" fg:w="1"/><text x="77.7444%" y="463.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="77.5694%" y="661" width="0.0750%" height="15" fill="rgb(239,95,2)" fg:x="1034" fg:w="1"/><text x="77.8194%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.5694%" y="645" width="0.0750%" height="15" fill="rgb(211,124,25)" fg:x="1034" fg:w="1"/><text x="77.8194%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="77.5694%" y="629" width="0.0750%" height="15" fill="rgb(231,221,19)" fg:x="1034" fg:w="1"/><text x="77.8194%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.5694%" y="613" width="0.0750%" height="15" fill="rgb(239,183,19)" fg:x="1034" fg:w="1"/><text x="77.8194%" y="623.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.15%)</title><rect x="77.6444%" y="645" width="0.1500%" height="15" fill="rgb(221,130,29)" fg:x="1035" fg:w="2"/><text x="77.8944%" y="655.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.15%)</title><rect x="77.6444%" y="629" width="0.1500%" height="15" fill="rgb(206,130,36)" fg:x="1035" fg:w="2"/><text x="77.8944%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="77.6444%" y="613" width="0.1500%" height="15" fill="rgb(215,70,19)" fg:x="1035" fg:w="2"/><text x="77.8944%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="77.6444%" y="597" width="0.1500%" height="15" fill="rgb(244,16,43)" fg:x="1035" fg:w="2"/><text x="77.8944%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.7194%" y="581" width="0.0750%" height="15" fill="rgb(222,115,32)" fg:x="1036" fg:w="1"/><text x="77.9694%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7194%" y="565" width="0.0750%" height="15" fill="rgb(247,48,25)" fg:x="1036" fg:w="1"/><text x="77.9694%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.7194%" y="549" width="0.0750%" height="15" fill="rgb(226,180,51)" fg:x="1036" fg:w="1"/><text x="77.9694%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="77.7194%" y="533" width="0.0750%" height="15" fill="rgb(217,142,42)" fg:x="1036" fg:w="1"/><text x="77.9694%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.7194%" y="517" width="0.0750%" height="15" fill="rgb(220,178,3)" fg:x="1036" fg:w="1"/><text x="77.9694%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.7194%" y="501" width="0.0750%" height="15" fill="rgb(217,221,4)" fg:x="1036" fg:w="1"/><text x="77.9694%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.7944%" y="565" width="0.0750%" height="15" fill="rgb(237,63,43)" fg:x="1037" fg:w="1"/><text x="78.0444%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.7944%" y="549" width="0.0750%" height="15" fill="rgb(220,57,8)" fg:x="1037" fg:w="1"/><text x="78.0444%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (7 samples, 0.53%)</title><rect x="77.4944%" y="709" width="0.5251%" height="15" fill="rgb(254,186,27)" fg:x="1033" fg:w="7"/><text x="77.7444%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.53%)</title><rect x="77.4944%" y="693" width="0.5251%" height="15" fill="rgb(251,57,28)" fg:x="1033" fg:w="7"/><text x="77.7444%" y="703.50"></text></g><g><title>engine::internal::Entities::add_persisted (7 samples, 0.53%)</title><rect x="77.4944%" y="677" width="0.5251%" height="15" fill="rgb(215,228,0)" fg:x="1033" fg:w="7"/><text x="77.7444%" y="687.50"></text></g><g><title>kernel::model::deserialize_entity (5 samples, 0.38%)</title><rect x="77.6444%" y="661" width="0.3751%" height="15" fill="rgb(237,218,39)" fg:x="1035" fg:w="5"/><text x="77.8944%" y="671.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.23%)</title><rect x="77.7944%" y="645" width="0.2251%" height="15" fill="rgb(207,2,54)" fg:x="1037" fg:w="3"/><text x="78.0444%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="77.7944%" y="629" width="0.2251%" height="15" fill="rgb(232,76,50)" fg:x="1037" fg:w="3"/><text x="78.0444%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="77.7944%" y="613" width="0.2251%" height="15" fill="rgb(211,85,31)" fg:x="1037" fg:w="3"/><text x="78.0444%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="77.7944%" y="597" width="0.2251%" height="15" fill="rgb(223,210,27)" fg:x="1037" fg:w="3"/><text x="78.0444%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="77.7944%" y="581" width="0.2251%" height="15" fill="rgb(254,36,8)" fg:x="1037" fg:w="3"/><text x="78.0444%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="77.8695%" y="565" width="0.1500%" height="15" fill="rgb(213,4,25)" fg:x="1038" fg:w="2"/><text x="78.1195%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="77.8695%" y="549" width="0.1500%" height="15" fill="rgb(224,2,39)" fg:x="1038" fg:w="2"/><text x="78.1195%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="77.8695%" y="533" width="0.1500%" height="15" fill="rgb(208,8,39)" fg:x="1038" fg:w="2"/><text x="78.1195%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="77.8695%" y="517" width="0.1500%" height="15" fill="rgb(216,226,3)" fg:x="1038" fg:w="2"/><text x="78.1195%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="77.8695%" y="501" width="0.1500%" height="15" fill="rgb(249,139,31)" fg:x="1038" fg:w="2"/><text x="78.1195%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.9445%" y="485" width="0.0750%" height="15" fill="rgb(242,170,35)" fg:x="1039" fg:w="1"/><text x="78.1945%" y="495.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="78.0195%" y="661" width="0.0750%" height="15" fill="rgb(238,14,9)" fg:x="1040" fg:w="1"/><text x="78.2695%" y="671.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="78.0195%" y="645" width="0.0750%" height="15" fill="rgb(251,81,46)" fg:x="1040" fg:w="1"/><text x="78.2695%" y="655.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="78.0195%" y="629" width="0.0750%" height="15" fill="rgb(230,23,4)" fg:x="1040" fg:w="1"/><text x="78.2695%" y="639.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (12 samples, 0.90%)</title><rect x="77.4944%" y="741" width="0.9002%" height="15" fill="rgb(211,85,25)" fg:x="1033" fg:w="12"/><text x="77.7444%" y="751.50"></text></g><g><title>engine::session::Session::new (12 samples, 0.90%)</title><rect x="77.4944%" y="725" width="0.9002%" height="15" fill="rgb(252,23,31)" fg:x="1033" fg:w="12"/><text x="77.7444%" y="735.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (5 samples, 0.38%)</title><rect x="78.0195%" y="709" width="0.3751%" height="15" fill="rgb(234,163,38)" fg:x="1040" fg:w="5"/><text x="78.2695%" y="719.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (5 samples, 0.38%)</title><rect x="78.0195%" y="693" width="0.3751%" height="15" fill="rgb(210,190,50)" fg:x="1040" fg:w="5"/><text x="78.2695%" y="703.50"></text></g><g><title>libloading::os::unix::Library::open (5 samples, 0.38%)</title><rect x="78.0195%" y="677" width="0.3751%" height="15" fill="rgb(228,158,3)" fg:x="1040" fg:w="5"/><text x="78.2695%" y="687.50"></text></g><g><title>dlopen (4 samples, 0.30%)</title><rect x="78.0945%" y="661" width="0.3001%" height="15" fill="rgb(216,130,0)" fg:x="1041" fg:w="4"/><text x="78.3445%" y="671.50"></text></g><g><title>_dl_catch_error (4 samples, 0.30%)</title><rect x="78.0945%" y="645" width="0.3001%" height="15" fill="rgb(224,184,10)" fg:x="1041" fg:w="4"/><text x="78.3445%" y="655.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.30%)</title><rect x="78.0945%" y="629" width="0.3001%" height="15" fill="rgb(214,202,18)" fg:x="1041" fg:w="4"/><text x="78.3445%" y="639.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.30%)</title><rect x="78.0945%" y="613" width="0.3001%" height="15" fill="rgb(213,229,54)" fg:x="1041" fg:w="4"/><text x="78.3445%" y="623.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.30%)</title><rect x="78.0945%" y="597" width="0.3001%" height="15" fill="rgb(246,120,0)" fg:x="1041" fg:w="4"/><text x="78.3445%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="78.3946%" y="725" width="0.0750%" height="15" fill="rgb(237,6,15)" fg:x="1045" fg:w="1"/><text x="78.6446%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5446%" y="677" width="0.0750%" height="15" fill="rgb(252,156,15)" fg:x="1047" fg:w="1"/><text x="78.7946%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.5446%" y="661" width="0.0750%" height="15" fill="rgb(249,78,18)" fg:x="1047" fg:w="1"/><text x="78.7946%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.5446%" y="645" width="0.0750%" height="15" fill="rgb(230,223,44)" fg:x="1047" fg:w="1"/><text x="78.7946%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.5446%" y="629" width="0.0750%" height="15" fill="rgb(230,222,32)" fg:x="1047" fg:w="1"/><text x="78.7946%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.5446%" y="613" width="0.0750%" height="15" fill="rgb(247,54,6)" fg:x="1047" fg:w="1"/><text x="78.7946%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.5446%" y="597" width="0.0750%" height="15" fill="rgb(247,115,45)" fg:x="1047" fg:w="1"/><text x="78.7946%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.5446%" y="581" width="0.0750%" height="15" fill="rgb(213,203,37)" fg:x="1047" fg:w="1"/><text x="78.7946%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.5446%" y="565" width="0.0750%" height="15" fill="rgb(248,188,18)" fg:x="1047" fg:w="1"/><text x="78.7946%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.5446%" y="549" width="0.0750%" height="15" fill="rgb(206,80,8)" fg:x="1047" fg:w="1"/><text x="78.7946%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.5446%" y="533" width="0.0750%" height="15" fill="rgb(245,217,31)" fg:x="1047" fg:w="1"/><text x="78.7946%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.5446%" y="517" width="0.0750%" height="15" fill="rgb(220,193,15)" fg:x="1047" fg:w="1"/><text x="78.7946%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.5446%" y="501" width="0.0750%" height="15" fill="rgb(226,7,19)" fg:x="1047" fg:w="1"/><text x="78.7946%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.23%)</title><rect x="78.4696%" y="693" width="0.2251%" height="15" fill="rgb(222,145,31)" fg:x="1046" fg:w="3"/><text x="78.7196%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.6197%" y="677" width="0.0750%" height="15" fill="rgb(241,193,36)" fg:x="1048" fg:w="1"/><text x="78.8697%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="78.6947%" y="677" width="0.0750%" height="15" fill="rgb(225,123,33)" fg:x="1049" fg:w="1"/><text x="78.9447%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.6947%" y="661" width="0.0750%" height="15" fill="rgb(246,136,38)" fg:x="1049" fg:w="1"/><text x="78.9447%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.6947%" y="645" width="0.0750%" height="15" fill="rgb(243,56,24)" fg:x="1049" fg:w="1"/><text x="78.9447%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="78.7697%" y="629" width="0.1500%" height="15" fill="rgb(215,147,2)" fg:x="1050" fg:w="2"/><text x="79.0197%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.8447%" y="613" width="0.0750%" height="15" fill="rgb(209,155,27)" fg:x="1051" fg:w="1"/><text x="79.0947%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.8447%" y="597" width="0.0750%" height="15" fill="rgb(222,177,11)" fg:x="1051" fg:w="1"/><text x="79.0947%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.8447%" y="581" width="0.0750%" height="15" fill="rgb(212,227,15)" fg:x="1051" fg:w="1"/><text x="79.0947%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="78.9947%" y="613" width="0.0750%" height="15" fill="rgb(214,138,20)" fg:x="1053" fg:w="1"/><text x="79.2447%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="78.9947%" y="597" width="0.0750%" height="15" fill="rgb(221,170,31)" fg:x="1053" fg:w="1"/><text x="79.2447%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="78.9947%" y="581" width="0.0750%" height="15" fill="rgb(253,207,5)" fg:x="1053" fg:w="1"/><text x="79.2447%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0698%" y="597" width="0.0750%" height="15" fill="rgb(212,64,37)" fg:x="1054" fg:w="1"/><text x="79.3198%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.0698%" y="581" width="0.0750%" height="15" fill="rgb(208,113,51)" fg:x="1054" fg:w="1"/><text x="79.3198%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.0698%" y="565" width="0.0750%" height="15" fill="rgb(237,15,5)" fg:x="1054" fg:w="1"/><text x="79.3198%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.15%)</title><rect x="79.0698%" y="613" width="0.1500%" height="15" fill="rgb(238,33,18)" fg:x="1054" fg:w="2"/><text x="79.3198%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.1448%" y="597" width="0.0750%" height="15" fill="rgb(253,206,50)" fg:x="1055" fg:w="1"/><text x="79.3948%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.38%)</title><rect x="78.9197%" y="629" width="0.3751%" height="15" fill="rgb(242,158,43)" fg:x="1052" fg:w="5"/><text x="79.1697%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.2198%" y="613" width="0.0750%" height="15" fill="rgb(213,125,27)" fg:x="1056" fg:w="1"/><text x="79.4698%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.2198%" y="597" width="0.0750%" height="15" fill="rgb(233,161,31)" fg:x="1056" fg:w="1"/><text x="79.4698%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (9 samples, 0.68%)</title><rect x="78.7697%" y="661" width="0.6752%" height="15" fill="rgb(218,135,6)" fg:x="1050" fg:w="9"/><text x="79.0197%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.68%)</title><rect x="78.7697%" y="645" width="0.6752%" height="15" fill="rgb(222,73,53)" fg:x="1050" fg:w="9"/><text x="79.0197%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="79.2948%" y="629" width="0.1500%" height="15" fill="rgb(229,66,53)" fg:x="1057" fg:w="2"/><text x="79.5448%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="79.2948%" y="613" width="0.1500%" height="15" fill="rgb(208,128,19)" fg:x="1057" fg:w="2"/><text x="79.5448%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.3698%" y="597" width="0.0750%" height="15" fill="rgb(235,70,27)" fg:x="1058" fg:w="1"/><text x="79.6198%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.4449%" y="661" width="0.0750%" height="15" fill="rgb(241,130,30)" fg:x="1059" fg:w="1"/><text x="79.6949%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.4449%" y="645" width="0.0750%" height="15" fill="rgb(222,57,48)" fg:x="1059" fg:w="1"/><text x="79.6949%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.4449%" y="629" width="0.0750%" height="15" fill="rgb(225,204,29)" fg:x="1059" fg:w="1"/><text x="79.6949%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.4449%" y="613" width="0.0750%" height="15" fill="rgb(240,196,35)" fg:x="1059" fg:w="1"/><text x="79.6949%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.5199%" y="613" width="0.0750%" height="15" fill="rgb(215,150,16)" fg:x="1060" fg:w="1"/><text x="79.7699%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.5199%" y="597" width="0.0750%" height="15" fill="rgb(209,170,13)" fg:x="1060" fg:w="1"/><text x="79.7699%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.5949%" y="549" width="0.0750%" height="15" fill="rgb(235,75,31)" fg:x="1061" fg:w="1"/><text x="79.8449%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (2 samples, 0.15%)</title><rect x="79.5949%" y="613" width="0.1500%" height="15" fill="rgb(252,1,47)" fg:x="1061" fg:w="2"/><text x="79.8449%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="79.5949%" y="597" width="0.1500%" height="15" fill="rgb(241,2,36)" fg:x="1061" fg:w="2"/><text x="79.8449%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.15%)</title><rect x="79.5949%" y="581" width="0.1500%" height="15" fill="rgb(236,191,4)" fg:x="1061" fg:w="2"/><text x="79.8449%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.15%)</title><rect x="79.5949%" y="565" width="0.1500%" height="15" fill="rgb(212,65,35)" fg:x="1061" fg:w="2"/><text x="79.8449%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="79.6699%" y="549" width="0.0750%" height="15" fill="rgb(209,49,33)" fg:x="1062" fg:w="1"/><text x="79.9199%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="79.7449%" y="613" width="0.0750%" height="15" fill="rgb(208,36,46)" fg:x="1063" fg:w="1"/><text x="79.9949%" y="623.50"></text></g><g><title>engine::session::Session::flush (21 samples, 1.58%)</title><rect x="78.4696%" y="725" width="1.5754%" height="15" fill="rgb(210,125,2)" fg:x="1046" fg:w="21"/><text x="78.7196%" y="735.50"></text></g><g><title>engine::session::Session::save_entity_changes (21 samples, 1.58%)</title><rect x="78.4696%" y="709" width="1.5754%" height="15" fill="rgb(225,62,6)" fg:x="1046" fg:w="21"/><text x="78.7196%" y="719.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (18 samples, 1.35%)</title><rect x="78.6947%" y="693" width="1.3503%" height="15" fill="rgb(210,54,27)" fg:x="1049" fg:w="18"/><text x="78.9447%" y="703.50"></text></g><g><title>engine::session::SavesEntities::check_for_changes (17 samples, 1.28%)</title><rect x="78.7697%" y="677" width="1.2753%" height="15" fill="rgb(249,189,52)" fg:x="1050" fg:w="17"/><text x="79.0197%" y="687.50"></text></g><g><title>kernel::compare::any_entity_changes (7 samples, 0.53%)</title><rect x="79.5199%" y="661" width="0.5251%" height="15" fill="rgb(225,134,40)" fg:x="1060" fg:w="7"/><text x="79.7699%" y="671.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (7 samples, 0.53%)</title><rect x="79.5199%" y="645" width="0.5251%" height="15" fill="rgb(206,13,37)" fg:x="1060" fg:w="7"/><text x="79.7699%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.53%)</title><rect x="79.5199%" y="629" width="0.5251%" height="15" fill="rgb(232,114,28)" fg:x="1060" fg:w="7"/><text x="79.7699%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.23%)</title><rect x="79.8200%" y="613" width="0.2251%" height="15" fill="rgb(253,215,8)" fg:x="1064" fg:w="3"/><text x="80.0700%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (2 samples, 0.15%)</title><rect x="79.8950%" y="597" width="0.1500%" height="15" fill="rgb(254,64,19)" fg:x="1065" fg:w="2"/><text x="80.1450%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="79.8950%" y="581" width="0.1500%" height="15" fill="rgb(242,18,46)" fg:x="1065" fg:w="2"/><text x="80.1450%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.9700%" y="565" width="0.0750%" height="15" fill="rgb(239,192,30)" fg:x="1066" fg:w="1"/><text x="80.2200%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.9700%" y="549" width="0.0750%" height="15" fill="rgb(232,73,14)" fg:x="1066" fg:w="1"/><text x="80.2200%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.9700%" y="533" width="0.0750%" height="15" fill="rgb(225,51,9)" fg:x="1066" fg:w="1"/><text x="80.2200%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="80.0450%" y="693" width="0.0750%" height="15" fill="rgb(242,217,54)" fg:x="1067" fg:w="1"/><text x="80.2950%" y="703.50"></text></g><g><title>plugins_core::build::Build::holding (2 samples, 0.15%)</title><rect x="80.0450%" y="725" width="0.1500%" height="15" fill="rgb(216,93,3)" fg:x="1067" fg:w="2"/><text x="80.2950%" y="735.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.15%)</title><rect x="80.0450%" y="709" width="0.1500%" height="15" fill="rgb(230,119,33)" fg:x="1067" fg:w="2"/><text x="80.2950%" y="719.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="80.1200%" y="693" width="0.0750%" height="15" fill="rgb(238,170,27)" fg:x="1068" fg:w="1"/><text x="80.3700%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="80.1200%" y="677" width="0.0750%" height="15" fill="rgb(229,8,2)" fg:x="1068" fg:w="1"/><text x="80.3700%" y="687.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="80.1200%" y="661" width="0.0750%" height="15" fill="rgb(205,214,42)" fg:x="1068" fg:w="1"/><text x="80.3700%" y="671.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="80.1200%" y="645" width="0.0750%" height="15" fill="rgb(245,113,1)" fg:x="1068" fg:w="1"/><text x="80.3700%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="80.1950%" y="693" width="0.0750%" height="15" fill="rgb(252,50,2)" fg:x="1069" fg:w="1"/><text x="80.4450%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="80.1950%" y="677" width="0.0750%" height="15" fill="rgb(225,122,24)" fg:x="1069" fg:w="1"/><text x="80.4450%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.15%)</title><rect x="80.1950%" y="709" width="0.1500%" height="15" fill="rgb(234,129,31)" fg:x="1069" fg:w="2"/><text x="80.4450%" y="719.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="80.2701%" y="693" width="0.0750%" height="15" fill="rgb(219,177,4)" fg:x="1070" fg:w="1"/><text x="80.5201%" y="703.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="80.2701%" y="677" width="0.0750%" height="15" fill="rgb(225,142,27)" fg:x="1070" fg:w="1"/><text x="80.5201%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="80.3451%" y="709" width="0.0750%" height="15" fill="rgb(205,107,51)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.3451%" y="693" width="0.0750%" height="15" fill="rgb(236,223,15)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="80.3451%" y="677" width="0.0750%" height="15" fill="rgb(235,133,11)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="687.50"></text></g><g><title>plugins_core::build::Build::leads_to (1 samples, 0.08%)</title><rect x="80.3451%" y="661" width="0.0750%" height="15" fill="rgb(247,172,13)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="80.3451%" y="645" width="0.0750%" height="15" fill="rgb(233,191,41)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="80.3451%" y="629" width="0.0750%" height="15" fill="rgb(250,65,16)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.3451%" y="613" width="0.0750%" height="15" fill="rgb(206,10,27)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.3451%" y="597" width="0.0750%" height="15" fill="rgb(212,96,22)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.3451%" y="581" width="0.0750%" height="15" fill="rgb(206,50,0)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.3451%" y="565" width="0.0750%" height="15" fill="rgb(249,105,52)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.3451%" y="549" width="0.0750%" height="15" fill="rgb(216,93,51)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.3451%" y="533" width="0.0750%" height="15" fill="rgb(217,172,13)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.3451%" y="517" width="0.0750%" height="15" fill="rgb(235,199,38)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.3451%" y="501" width="0.0750%" height="15" fill="rgb(221,97,33)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.3451%" y="485" width="0.0750%" height="15" fill="rgb(205,156,50)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.3451%" y="469" width="0.0750%" height="15" fill="rgb(215,142,19)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.3451%" y="453" width="0.0750%" height="15" fill="rgb(232,170,7)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.3451%" y="437" width="0.0750%" height="15" fill="rgb(223,50,17)" fg:x="1071" fg:w="1"/><text x="80.5951%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="80.4201%" y="661" width="0.0750%" height="15" fill="rgb(230,103,46)" fg:x="1072" fg:w="1"/><text x="80.6701%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.4201%" y="645" width="0.0750%" height="15" fill="rgb(254,30,34)" fg:x="1072" fg:w="1"/><text x="80.6701%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.4201%" y="629" width="0.0750%" height="15" fill="rgb(235,198,1)" fg:x="1072" fg:w="1"/><text x="80.6701%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.6452%" y="629" width="0.0750%" height="15" fill="rgb(217,105,47)" fg:x="1075" fg:w="1"/><text x="80.8952%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.15%)</title><rect x="80.7202%" y="629" width="0.1500%" height="15" fill="rgb(231,18,12)" fg:x="1076" fg:w="2"/><text x="80.9702%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="80.7202%" y="613" width="0.1500%" height="15" fill="rgb(218,196,1)" fg:x="1076" fg:w="2"/><text x="80.9702%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="80.7202%" y="597" width="0.1500%" height="15" fill="rgb(210,32,3)" fg:x="1076" fg:w="2"/><text x="80.9702%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="80.7202%" y="581" width="0.1500%" height="15" fill="rgb(227,178,30)" fg:x="1076" fg:w="2"/><text x="80.9702%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.15%)</title><rect x="80.7202%" y="565" width="0.1500%" height="15" fill="rgb(231,140,27)" fg:x="1076" fg:w="2"/><text x="80.9702%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.7952%" y="549" width="0.0750%" height="15" fill="rgb(206,66,35)" fg:x="1077" fg:w="1"/><text x="81.0452%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.7952%" y="533" width="0.0750%" height="15" fill="rgb(212,34,2)" fg:x="1077" fg:w="1"/><text x="81.0452%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.7952%" y="517" width="0.0750%" height="15" fill="rgb(207,201,33)" fg:x="1077" fg:w="1"/><text x="81.0452%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.8702%" y="613" width="0.0750%" height="15" fill="rgb(221,135,32)" fg:x="1078" fg:w="1"/><text x="81.1202%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8702%" y="597" width="0.0750%" height="15" fill="rgb(206,77,31)" fg:x="1078" fg:w="1"/><text x="81.1202%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.8702%" y="581" width="0.0750%" height="15" fill="rgb(252,198,50)" fg:x="1078" fg:w="1"/><text x="81.1202%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.8702%" y="565" width="0.0750%" height="15" fill="rgb(206,79,27)" fg:x="1078" fg:w="1"/><text x="81.1202%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.8702%" y="549" width="0.0750%" height="15" fill="rgb(228,108,9)" fg:x="1078" fg:w="1"/><text x="81.1202%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.8702%" y="533" width="0.0750%" height="15" fill="rgb(213,9,39)" fg:x="1078" fg:w="1"/><text x="81.1202%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.8702%" y="517" width="0.0750%" height="15" fill="rgb(252,51,13)" fg:x="1078" fg:w="1"/><text x="81.1202%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.15%)</title><rect x="80.9452%" y="597" width="0.1500%" height="15" fill="rgb(218,202,39)" fg:x="1079" fg:w="2"/><text x="81.1952%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0203%" y="581" width="0.0750%" height="15" fill="rgb(214,122,21)" fg:x="1080" fg:w="1"/><text x="81.2703%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.0203%" y="565" width="0.0750%" height="15" fill="rgb(217,205,48)" fg:x="1080" fg:w="1"/><text x="81.2703%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="80.9452%" y="613" width="0.2251%" height="15" fill="rgb(230,216,13)" fg:x="1079" fg:w="3"/><text x="81.1952%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0953%" y="597" width="0.0750%" height="15" fill="rgb(249,118,4)" fg:x="1081" fg:w="1"/><text x="81.3453%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0953%" y="581" width="0.0750%" height="15" fill="rgb(212,207,40)" fg:x="1081" fg:w="1"/><text x="81.3453%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.0953%" y="565" width="0.0750%" height="15" fill="rgb(217,156,26)" fg:x="1081" fg:w="1"/><text x="81.3453%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0953%" y="549" width="0.0750%" height="15" fill="rgb(226,86,34)" fg:x="1081" fg:w="1"/><text x="81.3453%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (9 samples, 0.68%)</title><rect x="80.5701%" y="645" width="0.6752%" height="15" fill="rgb(217,111,30)" fg:x="1074" fg:w="9"/><text x="80.8201%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.38%)</title><rect x="80.8702%" y="629" width="0.3751%" height="15" fill="rgb(228,64,18)" fg:x="1078" fg:w="5"/><text x="81.1202%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.1703%" y="613" width="0.0750%" height="15" fill="rgb(254,217,48)" fg:x="1082" fg:w="1"/><text x="81.4203%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.3203%" y="613" width="0.0750%" height="15" fill="rgb(226,156,48)" fg:x="1084" fg:w="1"/><text x="81.5703%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.3953%" y="597" width="0.0750%" height="15" fill="rgb(236,168,20)" fg:x="1085" fg:w="1"/><text x="81.6453%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.4704%" y="597" width="0.0750%" height="15" fill="rgb(239,210,33)" fg:x="1086" fg:w="1"/><text x="81.7204%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.38%)</title><rect x="81.2453%" y="645" width="0.3751%" height="15" fill="rgb(242,85,17)" fg:x="1083" fg:w="5"/><text x="81.4953%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.38%)</title><rect x="81.2453%" y="629" width="0.3751%" height="15" fill="rgb(221,196,15)" fg:x="1083" fg:w="5"/><text x="81.4953%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="81.3953%" y="613" width="0.2251%" height="15" fill="rgb(249,76,21)" fg:x="1085" fg:w="3"/><text x="81.6453%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.5454%" y="597" width="0.0750%" height="15" fill="rgb(243,67,29)" fg:x="1087" fg:w="1"/><text x="81.7954%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.5454%" y="581" width="0.0750%" height="15" fill="rgb(240,159,2)" fg:x="1087" fg:w="1"/><text x="81.7954%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.5454%" y="565" width="0.0750%" height="15" fill="rgb(244,64,3)" fg:x="1087" fg:w="1"/><text x="81.7954%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.5454%" y="549" width="0.0750%" height="15" fill="rgb(220,86,40)" fg:x="1087" fg:w="1"/><text x="81.7954%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.5454%" y="533" width="0.0750%" height="15" fill="rgb(222,194,51)" fg:x="1087" fg:w="1"/><text x="81.7954%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.6954%" y="597" width="0.0750%" height="15" fill="rgb(207,154,19)" fg:x="1089" fg:w="1"/><text x="81.9454%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7704%" y="597" width="0.0750%" height="15" fill="rgb(206,178,36)" fg:x="1090" fg:w="1"/><text x="82.0204%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="81.8455%" y="597" width="0.0750%" height="15" fill="rgb(218,8,24)" fg:x="1091" fg:w="1"/><text x="82.0955%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.8455%" y="581" width="0.0750%" height="15" fill="rgb(226,83,41)" fg:x="1091" fg:w="1"/><text x="82.0955%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="81.8455%" y="565" width="0.0750%" height="15" fill="rgb(224,23,22)" fg:x="1091" fg:w="1"/><text x="82.0955%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="81.8455%" y="549" width="0.0750%" height="15" fill="rgb(218,198,45)" fg:x="1091" fg:w="1"/><text x="82.0955%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9955%" y="581" width="0.0750%" height="15" fill="rgb(249,147,41)" fg:x="1093" fg:w="1"/><text x="82.2455%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.0705%" y="565" width="0.0750%" height="15" fill="rgb(244,224,13)" fg:x="1094" fg:w="1"/><text x="82.3205%" y="575.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (24 samples, 1.80%)</title><rect x="80.4201%" y="677" width="1.8005%" height="15" fill="rgb(225,97,27)" fg:x="1072" fg:w="24"/><text x="80.6701%" y="687.50">e..</text></g><g><title>engine::session::SavesEntities::check_for_changes (23 samples, 1.73%)</title><rect x="80.4951%" y="661" width="1.7254%" height="15" fill="rgb(254,64,0)" fg:x="1073" fg:w="23"/><text x="80.7451%" y="671.50"></text></g><g><title>kernel::compare::any_entity_changes (8 samples, 0.60%)</title><rect x="81.6204%" y="645" width="0.6002%" height="15" fill="rgb(208,130,43)" fg:x="1088" fg:w="8"/><text x="81.8704%" y="655.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (8 samples, 0.60%)</title><rect x="81.6204%" y="629" width="0.6002%" height="15" fill="rgb(247,91,25)" fg:x="1088" fg:w="8"/><text x="81.8704%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.60%)</title><rect x="81.6204%" y="613" width="0.6002%" height="15" fill="rgb(215,218,42)" fg:x="1088" fg:w="8"/><text x="81.8704%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.30%)</title><rect x="81.9205%" y="597" width="0.3001%" height="15" fill="rgb(233,9,24)" fg:x="1092" fg:w="4"/><text x="82.1705%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (2 samples, 0.15%)</title><rect x="82.0705%" y="581" width="0.1500%" height="15" fill="rgb(252,105,38)" fg:x="1094" fg:w="2"/><text x="82.3205%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.1455%" y="565" width="0.0750%" height="15" fill="rgb(225,40,49)" fg:x="1095" fg:w="1"/><text x="82.3955%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1455%" y="549" width="0.0750%" height="15" fill="rgb(232,196,19)" fg:x="1095" fg:w="1"/><text x="82.3955%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1455%" y="533" width="0.0750%" height="15" fill="rgb(207,35,15)" fg:x="1095" fg:w="1"/><text x="82.3955%" y="543.50"></text></g><g><title>engine::session::Session::flush (25 samples, 1.88%)</title><rect x="80.4201%" y="709" width="1.8755%" height="15" fill="rgb(238,68,36)" fg:x="1072" fg:w="25"/><text x="80.6701%" y="719.50">e..</text></g><g><title>engine::session::Session::save_entity_changes (25 samples, 1.88%)</title><rect x="80.4201%" y="693" width="1.8755%" height="15" fill="rgb(205,158,20)" fg:x="1072" fg:w="25"/><text x="80.6701%" y="703.50">e..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="82.2206%" y="677" width="0.0750%" height="15" fill="rgb(232,32,22)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="82.2206%" y="661" width="0.0750%" height="15" fill="rgb(210,169,6)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="82.2206%" y="645" width="0.0750%" height="15" fill="rgb(229,28,12)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="82.2206%" y="629" width="0.0750%" height="15" fill="rgb(229,78,10)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="82.2206%" y="613" width="0.0750%" height="15" fill="rgb(223,139,54)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.2206%" y="597" width="0.0750%" height="15" fill="rgb(207,110,4)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.2206%" y="581" width="0.0750%" height="15" fill="rgb(248,30,41)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="82.2206%" y="565" width="0.0750%" height="15" fill="rgb(235,54,25)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="82.2206%" y="549" width="0.0750%" height="15" fill="rgb(213,107,41)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.2206%" y="533" width="0.0750%" height="15" fill="rgb(237,102,9)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.2206%" y="517" width="0.0750%" height="15" fill="rgb(252,137,49)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.2206%" y="501" width="0.0750%" height="15" fill="rgb(233,202,33)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="82.2206%" y="485" width="0.0750%" height="15" fill="rgb(223,14,51)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="82.2206%" y="469" width="0.0750%" height="15" fill="rgb(248,70,23)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="82.2206%" y="453" width="0.0750%" height="15" fill="rgb(209,207,47)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="82.2206%" y="437" width="0.0750%" height="15" fill="rgb(245,124,2)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.2206%" y="421" width="0.0750%" height="15" fill="rgb(249,208,11)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.2206%" y="405" width="0.0750%" height="15" fill="rgb(247,112,7)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.2206%" y="389" width="0.0750%" height="15" fill="rgb(209,192,31)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="82.2206%" y="373" width="0.0750%" height="15" fill="rgb(236,55,19)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.2206%" y="357" width="0.0750%" height="15" fill="rgb(252,89,41)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2206%" y="341" width="0.0750%" height="15" fill="rgb(220,172,14)" fg:x="1096" fg:w="1"/><text x="82.4706%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.15%)</title><rect x="82.2956%" y="693" width="0.1500%" height="15" fill="rgb(252,65,2)" fg:x="1097" fg:w="2"/><text x="82.5456%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.15%)</title><rect x="82.2956%" y="677" width="0.1500%" height="15" fill="rgb(250,20,8)" fg:x="1097" fg:w="2"/><text x="82.5456%" y="687.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.15%)</title><rect x="82.2956%" y="661" width="0.1500%" height="15" fill="rgb(234,149,13)" fg:x="1097" fg:w="2"/><text x="82.5456%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.15%)</title><rect x="82.2956%" y="645" width="0.1500%" height="15" fill="rgb(223,219,12)" fg:x="1097" fg:w="2"/><text x="82.5456%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.15%)</title><rect x="82.2956%" y="629" width="0.1500%" height="15" fill="rgb(234,13,49)" fg:x="1097" fg:w="2"/><text x="82.5456%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="82.2956%" y="613" width="0.1500%" height="15" fill="rgb(214,41,25)" fg:x="1097" fg:w="2"/><text x="82.5456%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="82.4456%" y="677" width="0.0750%" height="15" fill="rgb(232,198,52)" fg:x="1099" fg:w="1"/><text x="82.6956%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="82.4456%" y="661" width="0.0750%" height="15" fill="rgb(236,111,46)" fg:x="1099" fg:w="1"/><text x="82.6956%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.4456%" y="645" width="0.0750%" height="15" fill="rgb(253,30,20)" fg:x="1099" fg:w="1"/><text x="82.6956%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (4 samples, 0.30%)</title><rect x="82.2956%" y="709" width="0.3001%" height="15" fill="rgb(247,141,17)" fg:x="1097" fg:w="4"/><text x="82.5456%" y="719.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.15%)</title><rect x="82.4456%" y="693" width="0.1500%" height="15" fill="rgb(214,195,21)" fg:x="1099" fg:w="2"/><text x="82.6956%" y="703.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="82.5206%" y="677" width="0.0750%" height="15" fill="rgb(214,98,12)" fg:x="1100" fg:w="1"/><text x="82.7706%" y="687.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="82.5206%" y="661" width="0.0750%" height="15" fill="rgb(239,4,26)" fg:x="1100" fg:w="1"/><text x="82.7706%" y="671.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="82.5206%" y="645" width="0.0750%" height="15" fill="rgb(234,210,35)" fg:x="1100" fg:w="1"/><text x="82.7706%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.5206%" y="629" width="0.0750%" height="15" fill="rgb(252,178,27)" fg:x="1100" fg:w="1"/><text x="82.7706%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="82.5206%" y="613" width="0.0750%" height="15" fill="rgb(217,50,1)" fg:x="1100" fg:w="1"/><text x="82.7706%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.5206%" y="597" width="0.0750%" height="15" fill="rgb(233,137,5)" fg:x="1100" fg:w="1"/><text x="82.7706%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5206%" y="581" width="0.0750%" height="15" fill="rgb(217,227,25)" fg:x="1100" fg:w="1"/><text x="82.7706%" y="591.50"></text></g><g><title>plugins_core::build::Build::occupying (1 samples, 0.08%)</title><rect x="82.5956%" y="709" width="0.0750%" height="15" fill="rgb(242,89,38)" fg:x="1101" fg:w="1"/><text x="82.8456%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.5956%" y="693" width="0.0750%" height="15" fill="rgb(212,190,30)" fg:x="1101" fg:w="1"/><text x="82.8456%" y="703.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="82.6707%" y="629" width="0.0750%" height="15" fill="rgb(222,120,8)" fg:x="1102" fg:w="1"/><text x="82.9207%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.15%)</title><rect x="82.6707%" y="677" width="0.1500%" height="15" fill="rgb(227,181,9)" fg:x="1102" fg:w="2"/><text x="82.9207%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.15%)</title><rect x="82.6707%" y="661" width="0.1500%" height="15" fill="rgb(222,125,29)" fg:x="1102" fg:w="2"/><text x="82.9207%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.15%)</title><rect x="82.6707%" y="645" width="0.1500%" height="15" fill="rgb(215,153,31)" fg:x="1102" fg:w="2"/><text x="82.9207%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="82.7457%" y="629" width="0.0750%" height="15" fill="rgb(228,77,30)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.7457%" y="613" width="0.0750%" height="15" fill="rgb(226,110,9)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.7457%" y="597" width="0.0750%" height="15" fill="rgb(219,111,7)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="82.7457%" y="581" width="0.0750%" height="15" fill="rgb(229,167,25)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="82.7457%" y="565" width="0.0750%" height="15" fill="rgb(209,77,43)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.7457%" y="549" width="0.0750%" height="15" fill="rgb(233,70,39)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.7457%" y="533" width="0.0750%" height="15" fill="rgb(207,171,44)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.7457%" y="517" width="0.0750%" height="15" fill="rgb(244,91,6)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.7457%" y="501" width="0.0750%" height="15" fill="rgb(234,136,12)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="82.7457%" y="485" width="0.0750%" height="15" fill="rgb(216,210,38)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="82.7457%" y="469" width="0.0750%" height="15" fill="rgb(241,227,7)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="82.7457%" y="453" width="0.0750%" height="15" fill="rgb(241,222,11)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="82.7457%" y="437" width="0.0750%" height="15" fill="rgb(246,86,18)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.7457%" y="421" width="0.0750%" height="15" fill="rgb(224,151,49)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.7457%" y="405" width="0.0750%" height="15" fill="rgb(235,4,41)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.7457%" y="389" width="0.0750%" height="15" fill="rgb(218,30,52)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="82.7457%" y="373" width="0.0750%" height="15" fill="rgb(205,124,51)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.7457%" y="357" width="0.0750%" height="15" fill="rgb(237,126,51)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="82.7457%" y="341" width="0.0750%" height="15" fill="rgb(225,32,46)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="82.7457%" y="325" width="0.0750%" height="15" fill="rgb(251,60,49)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="82.7457%" y="309" width="0.0750%" height="15" fill="rgb(234,18,23)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.7457%" y="293" width="0.0750%" height="15" fill="rgb(234,25,23)" fg:x="1103" fg:w="1"/><text x="82.9957%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.23%)</title><rect x="82.6707%" y="693" width="0.2251%" height="15" fill="rgb(210,43,52)" fg:x="1102" fg:w="3"/><text x="82.9207%" y="703.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="82.8207%" y="677" width="0.0750%" height="15" fill="rgb(237,198,21)" fg:x="1104" fg:w="1"/><text x="83.0707%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.8207%" y="661" width="0.0750%" height="15" fill="rgb(211,20,34)" fg:x="1104" fg:w="1"/><text x="83.0707%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.8207%" y="645" width="0.0750%" height="15" fill="rgb(221,155,50)" fg:x="1104" fg:w="1"/><text x="83.0707%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.8207%" y="629" width="0.0750%" height="15" fill="rgb(213,214,53)" fg:x="1104" fg:w="1"/><text x="83.0707%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.8207%" y="613" width="0.0750%" height="15" fill="rgb(215,229,48)" fg:x="1104" fg:w="1"/><text x="83.0707%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.8207%" y="597" width="0.0750%" height="15" fill="rgb(243,88,5)" fg:x="1104" fg:w="1"/><text x="83.0707%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.8207%" y="581" width="0.0750%" height="15" fill="rgb(216,199,8)" fg:x="1104" fg:w="1"/><text x="83.0707%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.8207%" y="565" width="0.0750%" height="15" fill="rgb(241,22,4)" fg:x="1104" fg:w="1"/><text x="83.0707%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.8207%" y="549" width="0.0750%" height="15" fill="rgb(209,190,22)" fg:x="1104" fg:w="1"/><text x="83.0707%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.8207%" y="533" width="0.0750%" height="15" fill="rgb(251,138,45)" fg:x="1104" fg:w="1"/><text x="83.0707%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.8207%" y="517" width="0.0750%" height="15" fill="rgb(219,111,22)" fg:x="1104" fg:w="1"/><text x="83.0707%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.8207%" y="501" width="0.0750%" height="15" fill="rgb(253,29,49)" fg:x="1104" fg:w="1"/><text x="83.0707%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.8207%" y="485" width="0.0750%" height="15" fill="rgb(238,129,49)" fg:x="1104" fg:w="1"/><text x="83.0707%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.8207%" y="469" width="0.0750%" height="15" fill="rgb(240,26,41)" fg:x="1104" fg:w="1"/><text x="83.0707%" y="479.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (37 samples, 2.78%)</title><rect x="80.1950%" y="725" width="2.7757%" height="15" fill="rgb(221,47,33)" fg:x="1069" fg:w="37"/><text x="80.4450%" y="735.50">pl..</text></g><g><title>plugins_core::build::Build::with_username (4 samples, 0.30%)</title><rect x="82.6707%" y="709" width="0.3001%" height="15" fill="rgb(216,200,17)" fg:x="1102" fg:w="4"/><text x="82.9207%" y="719.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="82.8957%" y="693" width="0.0750%" height="15" fill="rgb(230,151,26)" fg:x="1105" fg:w="1"/><text x="83.1457%" y="703.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="82.8957%" y="677" width="0.0750%" height="15" fill="rgb(242,182,16)" fg:x="1105" fg:w="1"/><text x="83.1457%" y="687.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="82.8957%" y="661" width="0.0750%" height="15" fill="rgb(236,35,53)" fg:x="1105" fg:w="1"/><text x="83.1457%" y="671.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="82.8957%" y="645" width="0.0750%" height="15" fill="rgb(214,180,28)" fg:x="1105" fg:w="1"/><text x="83.1457%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.8957%" y="629" width="0.0750%" height="15" fill="rgb(208,173,36)" fg:x="1105" fg:w="1"/><text x="83.1457%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.8957%" y="613" width="0.0750%" height="15" fill="rgb(218,39,15)" fg:x="1105" fg:w="1"/><text x="83.1457%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="82.8957%" y="597" width="0.0750%" height="15" fill="rgb(213,145,15)" fg:x="1105" fg:w="1"/><text x="83.1457%" y="607.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="82.8957%" y="581" width="0.0750%" height="15" fill="rgb(242,110,37)" fg:x="1105" fg:w="1"/><text x="83.1457%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="82.9707%" y="693" width="0.0750%" height="15" fill="rgb(247,146,22)" fg:x="1106" fg:w="1"/><text x="83.2207%" y="703.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="82.9707%" y="677" width="0.0750%" height="15" fill="rgb(215,191,7)" fg:x="1106" fg:w="1"/><text x="83.2207%" y="687.50"></text></g><g><title>kernel::model::Entity::new_with_key (1 samples, 0.08%)</title><rect x="82.9707%" y="661" width="0.0750%" height="15" fill="rgb(240,158,1)" fg:x="1106" fg:w="1"/><text x="83.2207%" y="671.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (63 samples, 4.73%)</title><rect x="78.3946%" y="741" width="4.7262%" height="15" fill="rgb(241,78,32)" fg:x="1045" fg:w="63"/><text x="78.6446%" y="751.50">&lt;tests..</text></g><g><title>plugins_core::build::BuildSurroundings::make (2 samples, 0.15%)</title><rect x="82.9707%" y="725" width="0.1500%" height="15" fill="rgb(248,83,10)" fg:x="1106" fg:w="2"/><text x="83.2207%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.15%)</title><rect x="82.9707%" y="709" width="0.1500%" height="15" fill="rgb(241,52,0)" fg:x="1106" fg:w="2"/><text x="83.2207%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="83.0458%" y="693" width="0.0750%" height="15" fill="rgb(238,37,13)" fg:x="1107" fg:w="1"/><text x="83.2958%" y="703.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="83.0458%" y="677" width="0.0750%" height="15" fill="rgb(242,194,17)" fg:x="1107" fg:w="1"/><text x="83.2958%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.0458%" y="661" width="0.0750%" height="15" fill="rgb(236,96,3)" fg:x="1107" fg:w="1"/><text x="83.2958%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.0458%" y="645" width="0.0750%" height="15" fill="rgb(235,148,34)" fg:x="1107" fg:w="1"/><text x="83.2958%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="83.0458%" y="629" width="0.0750%" height="15" fill="rgb(254,12,11)" fg:x="1107" fg:w="1"/><text x="83.2958%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.1208%" y="645" width="0.0750%" height="15" fill="rgb(207,31,54)" fg:x="1108" fg:w="1"/><text x="83.3708%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (2 samples, 0.15%)</title><rect x="83.1208%" y="725" width="0.1500%" height="15" fill="rgb(252,14,28)" fg:x="1108" fg:w="2"/><text x="83.3708%" y="735.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (2 samples, 0.15%)</title><rect x="83.1208%" y="709" width="0.1500%" height="15" fill="rgb(252,108,36)" fg:x="1108" fg:w="2"/><text x="83.3708%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.15%)</title><rect x="83.1208%" y="693" width="0.1500%" height="15" fill="rgb(214,149,7)" fg:x="1108" fg:w="2"/><text x="83.3708%" y="703.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.15%)</title><rect x="83.1208%" y="677" width="0.1500%" height="15" fill="rgb(243,94,12)" fg:x="1108" fg:w="2"/><text x="83.3708%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="83.1208%" y="661" width="0.1500%" height="15" fill="rgb(208,36,10)" fg:x="1108" fg:w="2"/><text x="83.3708%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1958%" y="645" width="0.0750%" height="15" fill="rgb(233,185,52)" fg:x="1109" fg:w="1"/><text x="83.4458%" y="655.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="83.3458%" y="709" width="0.0750%" height="15" fill="rgb(234,50,45)" fg:x="1111" fg:w="1"/><text x="83.5958%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="83.3458%" y="693" width="0.0750%" height="15" fill="rgb(228,92,54)" fg:x="1111" fg:w="1"/><text x="83.5958%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="83.3458%" y="677" width="0.0750%" height="15" fill="rgb(224,85,25)" fg:x="1111" fg:w="1"/><text x="83.5958%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.3458%" y="661" width="0.0750%" height="15" fill="rgb(246,1,45)" fg:x="1111" fg:w="1"/><text x="83.5958%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.3458%" y="645" width="0.0750%" height="15" fill="rgb(240,66,23)" fg:x="1111" fg:w="1"/><text x="83.5958%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.3458%" y="629" width="0.0750%" height="15" fill="rgb(222,96,27)" fg:x="1111" fg:w="1"/><text x="83.5958%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.3458%" y="613" width="0.0750%" height="15" fill="rgb(212,136,10)" fg:x="1111" fg:w="1"/><text x="83.5958%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.3458%" y="597" width="0.0750%" height="15" fill="rgb(226,192,50)" fg:x="1111" fg:w="1"/><text x="83.5958%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.3458%" y="581" width="0.0750%" height="15" fill="rgb(241,182,31)" fg:x="1111" fg:w="1"/><text x="83.5958%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.3458%" y="565" width="0.0750%" height="15" fill="rgb(219,205,47)" fg:x="1111" fg:w="1"/><text x="83.5958%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.3458%" y="549" width="0.0750%" height="15" fill="rgb(207,96,14)" fg:x="1111" fg:w="1"/><text x="83.5958%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.3458%" y="533" width="0.0750%" height="15" fill="rgb(216,119,9)" fg:x="1111" fg:w="1"/><text x="83.5958%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.3458%" y="517" width="0.0750%" height="15" fill="rgb(235,62,36)" fg:x="1111" fg:w="1"/><text x="83.5958%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.3458%" y="501" width="0.0750%" height="15" fill="rgb(214,41,27)" fg:x="1111" fg:w="1"/><text x="83.5958%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="83.4209%" y="709" width="0.0750%" height="15" fill="rgb(214,174,37)" fg:x="1112" fg:w="1"/><text x="83.6709%" y="719.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="83.4959%" y="661" width="0.0750%" height="15" fill="rgb(212,11,25)" fg:x="1113" fg:w="1"/><text x="83.7459%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.4959%" y="645" width="0.0750%" height="15" fill="rgb(217,71,35)" fg:x="1113" fg:w="1"/><text x="83.7459%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.5709%" y="645" width="0.0750%" height="15" fill="rgb(234,152,9)" fg:x="1114" fg:w="1"/><text x="83.8209%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.5709%" y="629" width="0.0750%" height="15" fill="rgb(228,32,51)" fg:x="1114" fg:w="1"/><text x="83.8209%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.5709%" y="613" width="0.0750%" height="15" fill="rgb(209,14,47)" fg:x="1114" fg:w="1"/><text x="83.8209%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.5709%" y="597" width="0.0750%" height="15" fill="rgb(218,201,17)" fg:x="1114" fg:w="1"/><text x="83.8209%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (4 samples, 0.30%)</title><rect x="83.4959%" y="677" width="0.3001%" height="15" fill="rgb(218,98,15)" fg:x="1113" fg:w="4"/><text x="83.7459%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="83.5709%" y="661" width="0.2251%" height="15" fill="rgb(233,202,29)" fg:x="1114" fg:w="3"/><text x="83.8209%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.15%)</title><rect x="83.6459%" y="645" width="0.1500%" height="15" fill="rgb(207,196,44)" fg:x="1115" fg:w="2"/><text x="83.8959%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.15%)</title><rect x="83.6459%" y="629" width="0.1500%" height="15" fill="rgb(218,63,34)" fg:x="1115" fg:w="2"/><text x="83.8959%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.7209%" y="613" width="0.0750%" height="15" fill="rgb(209,10,5)" fg:x="1116" fg:w="1"/><text x="83.9709%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.7959%" y="645" width="0.0750%" height="15" fill="rgb(224,36,28)" fg:x="1117" fg:w="1"/><text x="84.0459%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.8710%" y="629" width="0.0750%" height="15" fill="rgb(249,178,7)" fg:x="1118" fg:w="1"/><text x="84.1210%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="83.7959%" y="677" width="0.2251%" height="15" fill="rgb(253,163,10)" fg:x="1117" fg:w="3"/><text x="84.0459%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="83.7959%" y="661" width="0.2251%" height="15" fill="rgb(245,67,46)" fg:x="1117" fg:w="3"/><text x="84.0459%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="83.8710%" y="645" width="0.1500%" height="15" fill="rgb(225,14,18)" fg:x="1118" fg:w="2"/><text x="84.1210%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.9460%" y="629" width="0.0750%" height="15" fill="rgb(217,41,54)" fg:x="1119" fg:w="1"/><text x="84.1960%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.9460%" y="613" width="0.0750%" height="15" fill="rgb(222,111,11)" fg:x="1119" fg:w="1"/><text x="84.1960%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.0210%" y="613" width="0.0750%" height="15" fill="rgb(211,85,31)" fg:x="1120" fg:w="1"/><text x="84.2710%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="84.0210%" y="661" width="0.1500%" height="15" fill="rgb(223,29,26)" fg:x="1120" fg:w="2"/><text x="84.2710%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.15%)</title><rect x="84.0210%" y="645" width="0.1500%" height="15" fill="rgb(236,124,50)" fg:x="1120" fg:w="2"/><text x="84.2710%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.15%)</title><rect x="84.0210%" y="629" width="0.1500%" height="15" fill="rgb(219,148,15)" fg:x="1120" fg:w="2"/><text x="84.2710%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.0960%" y="613" width="0.0750%" height="15" fill="rgb(248,159,33)" fg:x="1121" fg:w="1"/><text x="84.3460%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.0960%" y="597" width="0.0750%" height="15" fill="rgb(252,65,8)" fg:x="1121" fg:w="1"/><text x="84.3460%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.0960%" y="581" width="0.0750%" height="15" fill="rgb(236,45,7)" fg:x="1121" fg:w="1"/><text x="84.3460%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.0960%" y="565" width="0.0750%" height="15" fill="rgb(244,3,48)" fg:x="1121" fg:w="1"/><text x="84.3460%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="84.0960%" y="549" width="0.0750%" height="15" fill="rgb(224,123,53)" fg:x="1121" fg:w="1"/><text x="84.3460%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.1710%" y="661" width="0.0750%" height="15" fill="rgb(223,173,15)" fg:x="1122" fg:w="1"/><text x="84.4210%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2461%" y="629" width="0.0750%" height="15" fill="rgb(254,181,5)" fg:x="1123" fg:w="1"/><text x="84.4961%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2461%" y="613" width="0.0750%" height="15" fill="rgb(243,124,33)" fg:x="1123" fg:w="1"/><text x="84.4961%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3211%" y="629" width="0.0750%" height="15" fill="rgb(253,220,11)" fg:x="1124" fg:w="1"/><text x="84.5711%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3211%" y="613" width="0.0750%" height="15" fill="rgb(217,14,4)" fg:x="1124" fg:w="1"/><text x="84.5711%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3211%" y="597" width="0.0750%" height="15" fill="rgb(209,196,12)" fg:x="1124" fg:w="1"/><text x="84.5711%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3211%" y="581" width="0.0750%" height="15" fill="rgb(237,108,29)" fg:x="1124" fg:w="1"/><text x="84.5711%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.3211%" y="565" width="0.0750%" height="15" fill="rgb(216,173,20)" fg:x="1124" fg:w="1"/><text x="84.5711%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="84.3961%" y="581" width="0.1500%" height="15" fill="rgb(245,27,6)" fg:x="1125" fg:w="2"/><text x="84.6461%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.4711%" y="565" width="0.0750%" height="15" fill="rgb(210,181,20)" fg:x="1126" fg:w="1"/><text x="84.7211%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4711%" y="549" width="0.0750%" height="15" fill="rgb(235,213,1)" fg:x="1126" fg:w="1"/><text x="84.7211%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (4 samples, 0.30%)</title><rect x="84.3961%" y="629" width="0.3001%" height="15" fill="rgb(239,68,43)" fg:x="1125" fg:w="4"/><text x="84.6461%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.30%)</title><rect x="84.3961%" y="613" width="0.3001%" height="15" fill="rgb(254,137,43)" fg:x="1125" fg:w="4"/><text x="84.6461%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.30%)</title><rect x="84.3961%" y="597" width="0.3001%" height="15" fill="rgb(252,170,38)" fg:x="1125" fg:w="4"/><text x="84.6461%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.15%)</title><rect x="84.5461%" y="581" width="0.1500%" height="15" fill="rgb(234,21,42)" fg:x="1127" fg:w="2"/><text x="84.7961%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.6212%" y="565" width="0.0750%" height="15" fill="rgb(216,145,40)" fg:x="1128" fg:w="1"/><text x="84.8712%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="84.6212%" y="549" width="0.0750%" height="15" fill="rgb(251,73,9)" fg:x="1128" fg:w="1"/><text x="84.8712%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="84.6212%" y="533" width="0.0750%" height="15" fill="rgb(242,54,6)" fg:x="1128" fg:w="1"/><text x="84.8712%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="84.6962%" y="629" width="0.0750%" height="15" fill="rgb(239,70,7)" fg:x="1129" fg:w="1"/><text x="84.9462%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.6962%" y="613" width="0.0750%" height="15" fill="rgb(216,159,35)" fg:x="1129" fg:w="1"/><text x="84.9462%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.6962%" y="597" width="0.0750%" height="15" fill="rgb(224,50,39)" fg:x="1129" fg:w="1"/><text x="84.9462%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.7712%" y="581" width="0.0750%" height="15" fill="rgb(235,9,35)" fg:x="1130" fg:w="1"/><text x="85.0212%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.7712%" y="565" width="0.0750%" height="15" fill="rgb(239,34,21)" fg:x="1130" fg:w="1"/><text x="85.0212%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="84.7712%" y="549" width="0.0750%" height="15" fill="rgb(218,162,43)" fg:x="1130" fg:w="1"/><text x="85.0212%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.9212%" y="565" width="0.0750%" height="15" fill="rgb(219,89,33)" fg:x="1132" fg:w="1"/><text x="85.1712%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.9212%" y="549" width="0.0750%" height="15" fill="rgb(226,125,37)" fg:x="1132" fg:w="1"/><text x="85.1712%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.30%)</title><rect x="84.7712%" y="597" width="0.3001%" height="15" fill="rgb(233,149,30)" fg:x="1130" fg:w="4"/><text x="85.0212%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="84.8462%" y="581" width="0.2251%" height="15" fill="rgb(236,8,18)" fg:x="1131" fg:w="3"/><text x="85.0962%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9962%" y="565" width="0.0750%" height="15" fill="rgb(205,176,9)" fg:x="1133" fg:w="1"/><text x="85.2462%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (12 samples, 0.90%)</title><rect x="84.2461%" y="661" width="0.9002%" height="15" fill="rgb(252,103,44)" fg:x="1123" fg:w="12"/><text x="84.4961%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.90%)</title><rect x="84.2461%" y="645" width="0.9002%" height="15" fill="rgb(207,68,53)" fg:x="1123" fg:w="12"/><text x="84.4961%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.38%)</title><rect x="84.7712%" y="629" width="0.3751%" height="15" fill="rgb(218,193,48)" fg:x="1130" fg:w="5"/><text x="85.0212%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (5 samples, 0.38%)</title><rect x="84.7712%" y="613" width="0.3751%" height="15" fill="rgb(234,121,52)" fg:x="1130" fg:w="5"/><text x="85.0212%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="85.0713%" y="597" width="0.0750%" height="15" fill="rgb(227,218,49)" fg:x="1134" fg:w="1"/><text x="85.3213%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.2213%" y="565" width="0.0750%" height="15" fill="rgb(221,8,7)" fg:x="1136" fg:w="1"/><text x="85.4713%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.2213%" y="549" width="0.0750%" height="15" fill="rgb(217,151,36)" fg:x="1136" fg:w="1"/><text x="85.4713%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.2213%" y="533" width="0.0750%" height="15" fill="rgb(213,71,5)" fg:x="1136" fg:w="1"/><text x="85.4713%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.2213%" y="517" width="0.0750%" height="15" fill="rgb(225,145,43)" fg:x="1136" fg:w="1"/><text x="85.4713%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.15%)</title><rect x="85.2213%" y="597" width="0.1500%" height="15" fill="rgb(235,118,19)" fg:x="1136" fg:w="2"/><text x="85.4713%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="85.2213%" y="581" width="0.1500%" height="15" fill="rgb(214,102,36)" fg:x="1136" fg:w="2"/><text x="85.4713%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.2963%" y="565" width="0.0750%" height="15" fill="rgb(220,56,43)" fg:x="1137" fg:w="1"/><text x="85.5463%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.30%)</title><rect x="85.1463%" y="661" width="0.3001%" height="15" fill="rgb(246,136,46)" fg:x="1135" fg:w="4"/><text x="85.3963%" y="671.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.30%)</title><rect x="85.1463%" y="645" width="0.3001%" height="15" fill="rgb(249,99,12)" fg:x="1135" fg:w="4"/><text x="85.3963%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.30%)</title><rect x="85.1463%" y="629" width="0.3001%" height="15" fill="rgb(224,31,42)" fg:x="1135" fg:w="4"/><text x="85.3963%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="85.2213%" y="613" width="0.2251%" height="15" fill="rgb(208,96,21)" fg:x="1136" fg:w="3"/><text x="85.4713%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.3713%" y="597" width="0.0750%" height="15" fill="rgb(237,229,7)" fg:x="1138" fg:w="1"/><text x="85.6213%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="85.3713%" y="581" width="0.0750%" height="15" fill="rgb(210,12,6)" fg:x="1138" fg:w="1"/><text x="85.6213%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.15%)</title><rect x="85.4464%" y="645" width="0.1500%" height="15" fill="rgb(240,9,34)" fg:x="1139" fg:w="2"/><text x="85.6964%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.15%)</title><rect x="85.4464%" y="629" width="0.1500%" height="15" fill="rgb(211,68,37)" fg:x="1139" fg:w="2"/><text x="85.6964%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.15%)</title><rect x="85.4464%" y="613" width="0.1500%" height="15" fill="rgb(249,138,50)" fg:x="1139" fg:w="2"/><text x="85.6964%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="85.5214%" y="597" width="0.0750%" height="15" fill="rgb(243,185,40)" fg:x="1140" fg:w="1"/><text x="85.7714%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="85.5964%" y="645" width="0.0750%" height="15" fill="rgb(242,92,35)" fg:x="1141" fg:w="1"/><text x="85.8464%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="85.6714%" y="645" width="0.0750%" height="15" fill="rgb(244,98,5)" fg:x="1142" fg:w="1"/><text x="85.9214%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="85.6714%" y="629" width="0.0750%" height="15" fill="rgb(228,186,29)" fg:x="1142" fg:w="1"/><text x="85.9214%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.6714%" y="613" width="0.0750%" height="15" fill="rgb(253,7,44)" fg:x="1142" fg:w="1"/><text x="85.9214%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.6714%" y="597" width="0.0750%" height="15" fill="rgb(216,11,45)" fg:x="1142" fg:w="1"/><text x="85.9214%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.6714%" y="581" width="0.0750%" height="15" fill="rgb(205,67,3)" fg:x="1142" fg:w="1"/><text x="85.9214%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.6714%" y="565" width="0.0750%" height="15" fill="rgb(250,18,3)" fg:x="1142" fg:w="1"/><text x="85.9214%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.6714%" y="549" width="0.0750%" height="15" fill="rgb(241,222,43)" fg:x="1142" fg:w="1"/><text x="85.9214%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.6714%" y="533" width="0.0750%" height="15" fill="rgb(233,115,3)" fg:x="1142" fg:w="1"/><text x="85.9214%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.6714%" y="517" width="0.0750%" height="15" fill="rgb(215,165,25)" fg:x="1142" fg:w="1"/><text x="85.9214%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.6714%" y="501" width="0.0750%" height="15" fill="rgb(234,179,6)" fg:x="1142" fg:w="1"/><text x="85.9214%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.6714%" y="485" width="0.0750%" height="15" fill="rgb(215,82,23)" fg:x="1142" fg:w="1"/><text x="85.9214%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.6714%" y="469" width="0.0750%" height="15" fill="rgb(211,47,18)" fg:x="1142" fg:w="1"/><text x="85.9214%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.6714%" y="453" width="0.0750%" height="15" fill="rgb(248,17,9)" fg:x="1142" fg:w="1"/><text x="85.9214%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.6714%" y="437" width="0.0750%" height="15" fill="rgb(210,212,12)" fg:x="1142" fg:w="1"/><text x="85.9214%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.7464%" y="645" width="0.0750%" height="15" fill="rgb(230,135,45)" fg:x="1143" fg:w="1"/><text x="85.9964%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="85.8215%" y="629" width="0.0750%" height="15" fill="rgb(214,121,41)" fg:x="1144" fg:w="1"/><text x="86.0715%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="85.8965%" y="581" width="0.0750%" height="15" fill="rgb(239,165,45)" fg:x="1145" fg:w="1"/><text x="86.1465%" y="591.50"></text></g><g><title>engine::session::Session::close (39 samples, 2.93%)</title><rect x="83.1208%" y="741" width="2.9257%" height="15" fill="rgb(214,85,51)" fg:x="1108" fg:w="39"/><text x="83.3708%" y="751.50">en..</text></g><g><title>engine::session::Session::save_entity_changes (37 samples, 2.78%)</title><rect x="83.2708%" y="725" width="2.7757%" height="15" fill="rgb(223,90,27)" fg:x="1110" fg:w="37"/><text x="83.5208%" y="735.50">en..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (34 samples, 2.55%)</title><rect x="83.4959%" y="709" width="2.5506%" height="15" fill="rgb(244,84,11)" fg:x="1113" fg:w="34"/><text x="83.7459%" y="719.50">en..</text></g><g><title>engine::session::SavesEntities::check_for_changes (34 samples, 2.55%)</title><rect x="83.4959%" y="693" width="2.5506%" height="15" fill="rgb(253,41,47)" fg:x="1113" fg:w="34"/><text x="83.7459%" y="703.50">en..</text></g><g><title>kernel::compare::any_entity_changes (27 samples, 2.03%)</title><rect x="84.0210%" y="677" width="2.0255%" height="15" fill="rgb(232,39,5)" fg:x="1120" fg:w="27"/><text x="84.2710%" y="687.50">k..</text></g><g><title>treediff::diff::diff (8 samples, 0.60%)</title><rect x="85.4464%" y="661" width="0.6002%" height="15" fill="rgb(211,93,4)" fg:x="1139" fg:w="8"/><text x="85.6964%" y="671.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.23%)</title><rect x="85.8215%" y="645" width="0.2251%" height="15" fill="rgb(219,50,49)" fg:x="1144" fg:w="3"/><text x="86.0715%" y="655.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.15%)</title><rect x="85.8965%" y="629" width="0.1500%" height="15" fill="rgb(232,80,19)" fg:x="1145" fg:w="2"/><text x="86.1465%" y="639.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.15%)</title><rect x="85.8965%" y="613" width="0.1500%" height="15" fill="rgb(215,227,39)" fg:x="1145" fg:w="2"/><text x="86.1465%" y="623.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.15%)</title><rect x="85.8965%" y="597" width="0.1500%" height="15" fill="rgb(211,99,12)" fg:x="1145" fg:w="2"/><text x="86.1465%" y="607.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="85.9715%" y="581" width="0.0750%" height="15" fill="rgb(214,158,5)" fg:x="1146" fg:w="1"/><text x="86.2215%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="85.9715%" y="565" width="0.0750%" height="15" fill="rgb(242,19,53)" fg:x="1146" fg:w="1"/><text x="86.2215%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.0465%" y="677" width="0.0750%" height="15" fill="rgb(208,18,20)" fg:x="1147" fg:w="1"/><text x="86.2965%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="86.0465%" y="693" width="0.1500%" height="15" fill="rgb(250,44,11)" fg:x="1147" fg:w="2"/><text x="86.2965%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.1215%" y="677" width="0.0750%" height="15" fill="rgb(238,159,13)" fg:x="1148" fg:w="1"/><text x="86.3715%" y="687.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="86.1965%" y="645" width="0.0750%" height="15" fill="rgb(231,74,18)" fg:x="1149" fg:w="1"/><text x="86.4465%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.2716%" y="549" width="0.0750%" height="15" fill="rgb(229,219,45)" fg:x="1150" fg:w="1"/><text x="86.5216%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.3466%" y="533" width="0.0750%" height="15" fill="rgb(210,221,1)" fg:x="1151" fg:w="1"/><text x="86.5966%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.3466%" y="517" width="0.0750%" height="15" fill="rgb(209,60,51)" fg:x="1151" fg:w="1"/><text x="86.5966%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="86.3466%" y="501" width="0.0750%" height="15" fill="rgb(252,97,34)" fg:x="1151" fg:w="1"/><text x="86.5966%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (3 samples, 0.23%)</title><rect x="86.2716%" y="581" width="0.2251%" height="15" fill="rgb(243,211,37)" fg:x="1150" fg:w="3"/><text x="86.5216%" y="591.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (3 samples, 0.23%)</title><rect x="86.2716%" y="565" width="0.2251%" height="15" fill="rgb(210,229,37)" fg:x="1150" fg:w="3"/><text x="86.5216%" y="575.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (2 samples, 0.15%)</title><rect x="86.3466%" y="549" width="0.1500%" height="15" fill="rgb(220,208,43)" fg:x="1151" fg:w="2"/><text x="86.5966%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="86.4216%" y="533" width="0.0750%" height="15" fill="rgb(218,118,50)" fg:x="1152" fg:w="1"/><text x="86.6716%" y="543.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.4216%" y="517" width="0.0750%" height="15" fill="rgb(254,169,52)" fg:x="1152" fg:w="1"/><text x="86.6716%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="86.4966%" y="565" width="0.0750%" height="15" fill="rgb(221,214,37)" fg:x="1153" fg:w="1"/><text x="86.7466%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="86.4966%" y="549" width="0.0750%" height="15" fill="rgb(254,186,32)" fg:x="1153" fg:w="1"/><text x="86.7466%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="86.4966%" y="533" width="0.0750%" height="15" fill="rgb(215,144,43)" fg:x="1153" fg:w="1"/><text x="86.7466%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.4966%" y="517" width="0.0750%" height="15" fill="rgb(252,21,46)" fg:x="1153" fg:w="1"/><text x="86.7466%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.5716%" y="549" width="0.0750%" height="15" fill="rgb(207,166,46)" fg:x="1154" fg:w="1"/><text x="86.8216%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.5716%" y="533" width="0.0750%" height="15" fill="rgb(253,37,49)" fg:x="1154" fg:w="1"/><text x="86.8216%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.5716%" y="517" width="0.0750%" height="15" fill="rgb(222,97,20)" fg:x="1154" fg:w="1"/><text x="86.8216%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.5716%" y="501" width="0.0750%" height="15" fill="rgb(244,181,26)" fg:x="1154" fg:w="1"/><text x="86.8216%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.5716%" y="485" width="0.0750%" height="15" fill="rgb(241,22,29)" fg:x="1154" fg:w="1"/><text x="86.8216%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.5716%" y="469" width="0.0750%" height="15" fill="rgb(206,200,43)" fg:x="1154" fg:w="1"/><text x="86.8216%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.5716%" y="453" width="0.0750%" height="15" fill="rgb(226,224,43)" fg:x="1154" fg:w="1"/><text x="86.8216%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.5716%" y="437" width="0.0750%" height="15" fill="rgb(253,129,28)" fg:x="1154" fg:w="1"/><text x="86.8216%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.5716%" y="421" width="0.0750%" height="15" fill="rgb(252,99,33)" fg:x="1154" fg:w="1"/><text x="86.8216%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.5716%" y="405" width="0.0750%" height="15" fill="rgb(208,123,45)" fg:x="1154" fg:w="1"/><text x="86.8216%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.5716%" y="389" width="0.0750%" height="15" fill="rgb(251,106,12)" fg:x="1154" fg:w="1"/><text x="86.8216%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.5716%" y="373" width="0.0750%" height="15" fill="rgb(240,209,35)" fg:x="1154" fg:w="1"/><text x="86.8216%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.5716%" y="357" width="0.0750%" height="15" fill="rgb(214,52,50)" fg:x="1154" fg:w="1"/><text x="86.8216%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.15%)</title><rect x="86.5716%" y="565" width="0.1500%" height="15" fill="rgb(234,119,4)" fg:x="1154" fg:w="2"/><text x="86.8216%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="86.6467%" y="549" width="0.0750%" height="15" fill="rgb(228,181,36)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6467%" y="533" width="0.0750%" height="15" fill="rgb(213,171,42)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6467%" y="517" width="0.0750%" height="15" fill="rgb(239,14,41)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6467%" y="501" width="0.0750%" height="15" fill="rgb(239,111,46)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6467%" y="485" width="0.0750%" height="15" fill="rgb(214,72,7)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6467%" y="469" width="0.0750%" height="15" fill="rgb(221,114,1)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.6467%" y="453" width="0.0750%" height="15" fill="rgb(213,143,14)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.6467%" y="437" width="0.0750%" height="15" fill="rgb(220,221,53)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.6467%" y="421" width="0.0750%" height="15" fill="rgb(236,189,27)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.6467%" y="405" width="0.0750%" height="15" fill="rgb(252,139,49)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.6467%" y="389" width="0.0750%" height="15" fill="rgb(231,158,33)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.6467%" y="373" width="0.0750%" height="15" fill="rgb(207,201,15)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.6467%" y="357" width="0.0750%" height="15" fill="rgb(218,43,48)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.6467%" y="341" width="0.0750%" height="15" fill="rgb(244,63,52)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.6467%" y="325" width="0.0750%" height="15" fill="rgb(236,60,17)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="335.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="86.6467%" y="309" width="0.0750%" height="15" fill="rgb(205,206,29)" fg:x="1155" fg:w="1"/><text x="86.8967%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.7217%" y="453" width="0.0750%" height="15" fill="rgb(205,209,35)" fg:x="1156" fg:w="1"/><text x="86.9717%" y="463.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.23%)</title><rect x="86.7217%" y="565" width="0.2251%" height="15" fill="rgb(227,112,14)" fg:x="1156" fg:w="3"/><text x="86.9717%" y="575.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.23%)</title><rect x="86.7217%" y="549" width="0.2251%" height="15" fill="rgb(248,151,9)" fg:x="1156" fg:w="3"/><text x="86.9717%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="86.7217%" y="533" width="0.2251%" height="15" fill="rgb(247,45,40)" fg:x="1156" fg:w="3"/><text x="86.9717%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="86.7217%" y="517" width="0.2251%" height="15" fill="rgb(232,185,16)" fg:x="1156" fg:w="3"/><text x="86.9717%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="86.7217%" y="501" width="0.2251%" height="15" fill="rgb(215,45,44)" fg:x="1156" fg:w="3"/><text x="86.9717%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.23%)</title><rect x="86.7217%" y="485" width="0.2251%" height="15" fill="rgb(206,69,32)" fg:x="1156" fg:w="3"/><text x="86.9717%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="86.7217%" y="469" width="0.2251%" height="15" fill="rgb(233,98,50)" fg:x="1156" fg:w="3"/><text x="86.9717%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="86.7967%" y="453" width="0.1500%" height="15" fill="rgb(232,217,52)" fg:x="1157" fg:w="2"/><text x="87.0467%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.8717%" y="437" width="0.0750%" height="15" fill="rgb(250,42,51)" fg:x="1158" fg:w="1"/><text x="87.1217%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="86.9467%" y="565" width="0.0750%" height="15" fill="rgb(241,200,26)" fg:x="1159" fg:w="1"/><text x="87.1967%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="86.9467%" y="549" width="0.0750%" height="15" fill="rgb(207,10,32)" fg:x="1159" fg:w="1"/><text x="87.1967%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="86.9467%" y="533" width="0.0750%" height="15" fill="rgb(214,63,15)" fg:x="1159" fg:w="1"/><text x="87.1967%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="86.9467%" y="517" width="0.0750%" height="15" fill="rgb(234,176,14)" fg:x="1159" fg:w="1"/><text x="87.1967%" y="527.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="86.9467%" y="501" width="0.0750%" height="15" fill="rgb(226,104,52)" fg:x="1159" fg:w="1"/><text x="87.1967%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="86.9467%" y="485" width="0.0750%" height="15" fill="rgb(211,222,1)" fg:x="1159" fg:w="1"/><text x="87.1967%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="86.9467%" y="469" width="0.0750%" height="15" fill="rgb(237,7,3)" fg:x="1159" fg:w="1"/><text x="87.1967%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="86.9467%" y="453" width="0.0750%" height="15" fill="rgb(218,143,7)" fg:x="1159" fg:w="1"/><text x="87.1967%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.9467%" y="437" width="0.0750%" height="15" fill="rgb(208,25,22)" fg:x="1159" fg:w="1"/><text x="87.1967%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.9467%" y="421" width="0.0750%" height="15" fill="rgb(228,127,16)" fg:x="1159" fg:w="1"/><text x="87.1967%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.9467%" y="405" width="0.0750%" height="15" fill="rgb(237,86,27)" fg:x="1159" fg:w="1"/><text x="87.1967%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.9467%" y="389" width="0.0750%" height="15" fill="rgb(207,125,19)" fg:x="1159" fg:w="1"/><text x="87.1967%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.9467%" y="373" width="0.0750%" height="15" fill="rgb(243,195,0)" fg:x="1159" fg:w="1"/><text x="87.1967%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (11 samples, 0.83%)</title><rect x="86.2716%" y="597" width="0.8252%" height="15" fill="rgb(230,95,18)" fg:x="1150" fg:w="11"/><text x="86.5216%" y="607.50"></text></g><g><title>plugins_core::tools::move_between (8 samples, 0.60%)</title><rect x="86.4966%" y="581" width="0.6002%" height="15" fill="rgb(232,157,21)" fg:x="1153" fg:w="8"/><text x="86.7466%" y="591.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="87.0218%" y="565" width="0.0750%" height="15" fill="rgb(212,120,50)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="87.0218%" y="549" width="0.0750%" height="15" fill="rgb(222,204,44)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="87.0218%" y="533" width="0.0750%" height="15" fill="rgb(236,6,33)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="87.0218%" y="517" width="0.0750%" height="15" fill="rgb(247,11,38)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="87.0218%" y="501" width="0.0750%" height="15" fill="rgb(215,111,0)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="87.0218%" y="485" width="0.0750%" height="15" fill="rgb(211,65,46)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.0218%" y="469" width="0.0750%" height="15" fill="rgb(216,5,12)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="479.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="87.0218%" y="453" width="0.0750%" height="15" fill="rgb(226,7,2)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="87.0218%" y="437" width="0.0750%" height="15" fill="rgb(242,116,12)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.0218%" y="421" width="0.0750%" height="15" fill="rgb(249,209,7)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.0218%" y="405" width="0.0750%" height="15" fill="rgb(232,73,17)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.0218%" y="389" width="0.0750%" height="15" fill="rgb(214,13,32)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.0218%" y="373" width="0.0750%" height="15" fill="rgb(221,125,10)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.0218%" y="357" width="0.0750%" height="15" fill="rgb(246,7,44)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.0218%" y="341" width="0.0750%" height="15" fill="rgb(239,18,35)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0218%" y="325" width="0.0750%" height="15" fill="rgb(250,222,16)" fg:x="1160" fg:w="1"/><text x="87.2718%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.23%)</title><rect x="87.0968%" y="533" width="0.2251%" height="15" fill="rgb(219,100,8)" fg:x="1161" fg:w="3"/><text x="87.3468%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.23%)</title><rect x="87.0968%" y="517" width="0.2251%" height="15" fill="rgb(240,62,13)" fg:x="1161" fg:w="3"/><text x="87.3468%" y="527.50"></text></g><g><title>realloc (3 samples, 0.23%)</title><rect x="87.0968%" y="501" width="0.2251%" height="15" fill="rgb(253,194,2)" fg:x="1161" fg:w="3"/><text x="87.3468%" y="511.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (5 samples, 0.38%)</title><rect x="87.0968%" y="549" width="0.3751%" height="15" fill="rgb(235,58,31)" fg:x="1161" fg:w="5"/><text x="87.3468%" y="559.50"></text></g><g><title>plugins_core::tools::contained_by (2 samples, 0.15%)</title><rect x="87.3218%" y="533" width="0.1500%" height="15" fill="rgb(231,37,11)" fg:x="1164" fg:w="2"/><text x="87.5718%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.15%)</title><rect x="87.3218%" y="517" width="0.1500%" height="15" fill="rgb(235,133,0)" fg:x="1164" fg:w="2"/><text x="87.5718%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="87.3968%" y="501" width="0.0750%" height="15" fill="rgb(212,185,40)" fg:x="1165" fg:w="1"/><text x="87.6468%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="87.3968%" y="485" width="0.0750%" height="15" fill="rgb(216,68,42)" fg:x="1165" fg:w="1"/><text x="87.6468%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="87.3968%" y="469" width="0.0750%" height="15" fill="rgb(239,81,4)" fg:x="1165" fg:w="1"/><text x="87.6468%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.3968%" y="453" width="0.0750%" height="15" fill="rgb(206,86,6)" fg:x="1165" fg:w="1"/><text x="87.6468%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="87.3968%" y="437" width="0.0750%" height="15" fill="rgb(249,95,27)" fg:x="1165" fg:w="1"/><text x="87.6468%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="87.3968%" y="421" width="0.0750%" height="15" fill="rgb(205,155,45)" fg:x="1165" fg:w="1"/><text x="87.6468%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (6 samples, 0.45%)</title><rect x="87.0968%" y="581" width="0.4501%" height="15" fill="rgb(213,55,42)" fg:x="1161" fg:w="6"/><text x="87.3468%" y="591.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (6 samples, 0.45%)</title><rect x="87.0968%" y="565" width="0.4501%" height="15" fill="rgb(249,197,4)" fg:x="1161" fg:w="6"/><text x="87.3468%" y="575.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (1 samples, 0.08%)</title><rect x="87.4719%" y="549" width="0.0750%" height="15" fill="rgb(212,128,32)" fg:x="1166" fg:w="1"/><text x="87.7219%" y="559.50"></text></g><g><title>plugins_core::finding::matches_description (1 samples, 0.08%)</title><rect x="87.4719%" y="533" width="0.0750%" height="15" fill="rgb(252,47,30)" fg:x="1166" fg:w="1"/><text x="87.7219%" y="543.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="87.4719%" y="517" width="0.0750%" height="15" fill="rgb(209,79,18)" fg:x="1166" fg:w="1"/><text x="87.7219%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="87.5469%" y="565" width="0.0750%" height="15" fill="rgb(225,81,38)" fg:x="1167" fg:w="1"/><text x="87.7969%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="87.5469%" y="549" width="0.0750%" height="15" fill="rgb(205,95,16)" fg:x="1167" fg:w="1"/><text x="87.7969%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.5469%" y="533" width="0.0750%" height="15" fill="rgb(214,30,4)" fg:x="1167" fg:w="1"/><text x="87.7969%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="87.6219%" y="565" width="0.0750%" height="15" fill="rgb(232,137,22)" fg:x="1168" fg:w="1"/><text x="87.8719%" y="575.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="87.6219%" y="549" width="0.0750%" height="15" fill="rgb(232,156,19)" fg:x="1168" fg:w="1"/><text x="87.8719%" y="559.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="87.6219%" y="533" width="0.0750%" height="15" fill="rgb(248,157,26)" fg:x="1168" fg:w="1"/><text x="87.8719%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.6219%" y="517" width="0.0750%" height="15" fill="rgb(242,24,3)" fg:x="1168" fg:w="1"/><text x="87.8719%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.6969%" y="549" width="0.0750%" height="15" fill="rgb(218,195,48)" fg:x="1169" fg:w="1"/><text x="87.9469%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.15%)</title><rect x="87.6969%" y="565" width="0.1500%" height="15" fill="rgb(214,193,36)" fg:x="1169" fg:w="2"/><text x="87.9469%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="87.7719%" y="549" width="0.0750%" height="15" fill="rgb(242,110,40)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="87.7719%" y="533" width="0.0750%" height="15" fill="rgb(233,150,26)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="87.7719%" y="517" width="0.0750%" height="15" fill="rgb(239,200,30)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.7719%" y="501" width="0.0750%" height="15" fill="rgb(226,28,11)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="87.7719%" y="485" width="0.0750%" height="15" fill="rgb(220,26,48)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="87.7719%" y="469" width="0.0750%" height="15" fill="rgb(232,10,11)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="87.7719%" y="453" width="0.0750%" height="15" fill="rgb(252,143,50)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.7719%" y="437" width="0.0750%" height="15" fill="rgb(206,58,22)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.7719%" y="421" width="0.0750%" height="15" fill="rgb(250,9,45)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.7719%" y="405" width="0.0750%" height="15" fill="rgb(225,148,14)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.7719%" y="389" width="0.0750%" height="15" fill="rgb(205,178,40)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.7719%" y="373" width="0.0750%" height="15" fill="rgb(215,201,4)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.7719%" y="357" width="0.0750%" height="15" fill="rgb(219,223,24)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.7719%" y="341" width="0.0750%" height="15" fill="rgb(217,19,31)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.7719%" y="325" width="0.0750%" height="15" fill="rgb(235,33,3)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.7719%" y="309" width="0.0750%" height="15" fill="rgb(221,39,18)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.7719%" y="293" width="0.0750%" height="15" fill="rgb(242,162,33)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.7719%" y="277" width="0.0750%" height="15" fill="rgb(233,215,28)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.7719%" y="261" width="0.0750%" height="15" fill="rgb(212,117,9)" fg:x="1170" fg:w="1"/><text x="88.0219%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.8470%" y="549" width="0.0750%" height="15" fill="rgb(237,70,47)" fg:x="1171" fg:w="1"/><text x="88.0970%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="87.8470%" y="533" width="0.0750%" height="15" fill="rgb(206,177,13)" fg:x="1171" fg:w="1"/><text x="88.0970%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="87.8470%" y="517" width="0.0750%" height="15" fill="rgb(209,174,33)" fg:x="1171" fg:w="1"/><text x="88.0970%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (12 samples, 0.90%)</title><rect x="87.0968%" y="597" width="0.9002%" height="15" fill="rgb(226,6,11)" fg:x="1161" fg:w="12"/><text x="87.3468%" y="607.50"></text></g><g><title>plugins_core::tools::move_between (6 samples, 0.45%)</title><rect x="87.5469%" y="581" width="0.4501%" height="15" fill="rgb(240,214,6)" fg:x="1167" fg:w="6"/><text x="87.7969%" y="591.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.15%)</title><rect x="87.8470%" y="565" width="0.1500%" height="15" fill="rgb(254,214,40)" fg:x="1171" fg:w="2"/><text x="88.0970%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="87.9220%" y="549" width="0.0750%" height="15" fill="rgb(230,187,15)" fg:x="1172" fg:w="1"/><text x="88.1720%" y="559.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="87.9220%" y="533" width="0.0750%" height="15" fill="rgb(250,11,27)" fg:x="1172" fg:w="1"/><text x="88.1720%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="87.9220%" y="517" width="0.0750%" height="15" fill="rgb(243,107,19)" fg:x="1172" fg:w="1"/><text x="88.1720%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="87.9220%" y="501" width="0.0750%" height="15" fill="rgb(253,66,26)" fg:x="1172" fg:w="1"/><text x="88.1720%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="87.9220%" y="485" width="0.0750%" height="15" fill="rgb(228,43,8)" fg:x="1172" fg:w="1"/><text x="88.1720%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="87.9970%" y="597" width="0.0750%" height="15" fill="rgb(232,197,36)" fg:x="1173" fg:w="1"/><text x="88.2470%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.9970%" y="581" width="0.0750%" height="15" fill="rgb(221,182,31)" fg:x="1173" fg:w="1"/><text x="88.2470%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="88.0720%" y="469" width="0.0750%" height="15" fill="rgb(244,25,36)" fg:x="1174" fg:w="1"/><text x="88.3220%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="88.0720%" y="453" width="0.0750%" height="15" fill="rgb(247,101,19)" fg:x="1174" fg:w="1"/><text x="88.3220%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.0720%" y="437" width="0.0750%" height="15" fill="rgb(223,117,19)" fg:x="1174" fg:w="1"/><text x="88.3220%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.0720%" y="421" width="0.0750%" height="15" fill="rgb(249,63,38)" fg:x="1174" fg:w="1"/><text x="88.3220%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.0720%" y="405" width="0.0750%" height="15" fill="rgb(220,143,23)" fg:x="1174" fg:w="1"/><text x="88.3220%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.0720%" y="389" width="0.0750%" height="15" fill="rgb(252,183,22)" fg:x="1174" fg:w="1"/><text x="88.3220%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.0720%" y="373" width="0.0750%" height="15" fill="rgb(243,176,15)" fg:x="1174" fg:w="1"/><text x="88.3220%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.0720%" y="357" width="0.0750%" height="15" fill="rgb(244,204,46)" fg:x="1174" fg:w="1"/><text x="88.3220%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.0720%" y="341" width="0.0750%" height="15" fill="rgb(227,28,54)" fg:x="1174" fg:w="1"/><text x="88.3220%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="88.0720%" y="325" width="0.0750%" height="15" fill="rgb(231,10,15)" fg:x="1174" fg:w="1"/><text x="88.3220%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.0720%" y="309" width="0.0750%" height="15" fill="rgb(210,200,17)" fg:x="1174" fg:w="1"/><text x="88.3220%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.0720%" y="293" width="0.0750%" height="15" fill="rgb(251,106,46)" fg:x="1174" fg:w="1"/><text x="88.3220%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.0720%" y="277" width="0.0750%" height="15" fill="rgb(218,211,15)" fg:x="1174" fg:w="1"/><text x="88.3220%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="88.0720%" y="261" width="0.0750%" height="15" fill="rgb(239,62,10)" fg:x="1174" fg:w="1"/><text x="88.3220%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.0720%" y="245" width="0.0750%" height="15" fill="rgb(225,53,53)" fg:x="1174" fg:w="1"/><text x="88.3220%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="88.1470%" y="421" width="0.0750%" height="15" fill="rgb(207,16,24)" fg:x="1175" fg:w="1"/><text x="88.3970%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="88.1470%" y="405" width="0.0750%" height="15" fill="rgb(217,52,28)" fg:x="1175" fg:w="1"/><text x="88.3970%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.2221%" y="421" width="0.0750%" height="15" fill="rgb(246,1,5)" fg:x="1176" fg:w="1"/><text x="88.4721%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.45%)</title><rect x="88.0720%" y="533" width="0.4501%" height="15" fill="rgb(221,29,26)" fg:x="1174" fg:w="6"/><text x="88.3220%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.45%)</title><rect x="88.0720%" y="517" width="0.4501%" height="15" fill="rgb(250,133,32)" fg:x="1174" fg:w="6"/><text x="88.3220%" y="527.50"></text></g><g><title>engine::internal::Entities::add_persisted (6 samples, 0.45%)</title><rect x="88.0720%" y="501" width="0.4501%" height="15" fill="rgb(236,63,16)" fg:x="1174" fg:w="6"/><text x="88.3220%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.45%)</title><rect x="88.0720%" y="485" width="0.4501%" height="15" fill="rgb(231,159,14)" fg:x="1174" fg:w="6"/><text x="88.3220%" y="495.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.38%)</title><rect x="88.1470%" y="469" width="0.3751%" height="15" fill="rgb(207,102,36)" fg:x="1175" fg:w="5"/><text x="88.3970%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.38%)</title><rect x="88.1470%" y="453" width="0.3751%" height="15" fill="rgb(230,224,31)" fg:x="1175" fg:w="5"/><text x="88.3970%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.38%)</title><rect x="88.1470%" y="437" width="0.3751%" height="15" fill="rgb(215,182,16)" fg:x="1175" fg:w="5"/><text x="88.3970%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="88.2971%" y="421" width="0.2251%" height="15" fill="rgb(226,113,2)" fg:x="1177" fg:w="3"/><text x="88.5471%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="88.2971%" y="405" width="0.2251%" height="15" fill="rgb(241,18,35)" fg:x="1177" fg:w="3"/><text x="88.5471%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="88.2971%" y="389" width="0.2251%" height="15" fill="rgb(240,165,44)" fg:x="1177" fg:w="3"/><text x="88.5471%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="88.3721%" y="373" width="0.1500%" height="15" fill="rgb(229,130,47)" fg:x="1178" fg:w="2"/><text x="88.6221%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.4471%" y="357" width="0.0750%" height="15" fill="rgb(223,93,7)" fg:x="1179" fg:w="1"/><text x="88.6971%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.4471%" y="341" width="0.0750%" height="15" fill="rgb(205,180,36)" fg:x="1179" fg:w="1"/><text x="88.6971%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.4471%" y="325" width="0.0750%" height="15" fill="rgb(221,103,28)" fg:x="1179" fg:w="1"/><text x="88.6971%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="88.4471%" y="309" width="0.0750%" height="15" fill="rgb(212,4,3)" fg:x="1179" fg:w="1"/><text x="88.6971%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="88.4471%" y="293" width="0.0750%" height="15" fill="rgb(209,221,53)" fg:x="1179" fg:w="1"/><text x="88.6971%" y="303.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (7 samples, 0.53%)</title><rect x="88.0720%" y="597" width="0.5251%" height="15" fill="rgb(233,229,52)" fg:x="1174" fg:w="7"/><text x="88.3220%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (7 samples, 0.53%)</title><rect x="88.0720%" y="581" width="0.5251%" height="15" fill="rgb(254,127,37)" fg:x="1174" fg:w="7"/><text x="88.3220%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.53%)</title><rect x="88.0720%" y="565" width="0.5251%" height="15" fill="rgb(207,161,26)" fg:x="1174" fg:w="7"/><text x="88.3220%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (7 samples, 0.53%)</title><rect x="88.0720%" y="549" width="0.5251%" height="15" fill="rgb(223,75,5)" fg:x="1174" fg:w="7"/><text x="88.3220%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.5221%" y="533" width="0.0750%" height="15" fill="rgb(235,115,52)" fg:x="1180" fg:w="1"/><text x="88.7721%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5221%" y="517" width="0.0750%" height="15" fill="rgb(240,91,46)" fg:x="1180" fg:w="1"/><text x="88.7721%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="89.1973%" y="485" width="0.1500%" height="15" fill="rgb(251,144,21)" fg:x="1189" fg:w="2"/><text x="89.4473%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.60%)</title><rect x="88.8222%" y="517" width="0.6002%" height="15" fill="rgb(247,220,47)" fg:x="1184" fg:w="8"/><text x="89.0722%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.45%)</title><rect x="88.9722%" y="501" width="0.4501%" height="15" fill="rgb(253,122,1)" fg:x="1186" fg:w="6"/><text x="89.2222%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="89.3473%" y="485" width="0.0750%" height="15" fill="rgb(221,0,24)" fg:x="1191" fg:w="1"/><text x="89.5973%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.98%)</title><rect x="88.5971%" y="549" width="0.9752%" height="15" fill="rgb(220,204,54)" fg:x="1181" fg:w="13"/><text x="88.8471%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.83%)</title><rect x="88.7472%" y="533" width="0.8252%" height="15" fill="rgb(205,96,25)" fg:x="1183" fg:w="11"/><text x="88.9972%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.15%)</title><rect x="89.4224%" y="517" width="0.1500%" height="15" fill="rgb(247,77,20)" fg:x="1192" fg:w="2"/><text x="89.6724%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (14 samples, 1.05%)</title><rect x="88.5971%" y="565" width="1.0503%" height="15" fill="rgb(245,151,8)" fg:x="1181" fg:w="14"/><text x="88.8471%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.5724%" y="549" width="0.0750%" height="15" fill="rgb(242,158,39)" fg:x="1194" fg:w="1"/><text x="89.8224%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.6474%" y="549" width="0.0750%" height="15" fill="rgb(222,214,50)" fg:x="1195" fg:w="1"/><text x="89.8974%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.6474%" y="533" width="0.0750%" height="15" fill="rgb(229,60,39)" fg:x="1195" fg:w="1"/><text x="89.8974%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.6474%" y="517" width="0.0750%" height="15" fill="rgb(240,148,18)" fg:x="1195" fg:w="1"/><text x="89.8974%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.6474%" y="501" width="0.0750%" height="15" fill="rgb(215,96,11)" fg:x="1195" fg:w="1"/><text x="89.8974%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.6474%" y="485" width="0.0750%" height="15" fill="rgb(238,162,53)" fg:x="1195" fg:w="1"/><text x="89.8974%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.6474%" y="469" width="0.0750%" height="15" fill="rgb(214,83,18)" fg:x="1195" fg:w="1"/><text x="89.8974%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.6474%" y="453" width="0.0750%" height="15" fill="rgb(248,117,24)" fg:x="1195" fg:w="1"/><text x="89.8974%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.6474%" y="437" width="0.0750%" height="15" fill="rgb(238,190,6)" fg:x="1195" fg:w="1"/><text x="89.8974%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.6474%" y="421" width="0.0750%" height="15" fill="rgb(213,51,6)" fg:x="1195" fg:w="1"/><text x="89.8974%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.6474%" y="405" width="0.0750%" height="15" fill="rgb(212,136,1)" fg:x="1195" fg:w="1"/><text x="89.8974%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.6474%" y="389" width="0.0750%" height="15" fill="rgb(221,192,14)" fg:x="1195" fg:w="1"/><text x="89.8974%" y="399.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="89.7974%" y="533" width="0.0750%" height="15" fill="rgb(244,38,54)" fg:x="1197" fg:w="1"/><text x="90.0474%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="89.7974%" y="517" width="0.0750%" height="15" fill="rgb(240,45,28)" fg:x="1197" fg:w="1"/><text x="90.0474%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="89.7974%" y="501" width="0.0750%" height="15" fill="rgb(240,123,12)" fg:x="1197" fg:w="1"/><text x="90.0474%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8725%" y="501" width="0.0750%" height="15" fill="rgb(216,14,30)" fg:x="1198" fg:w="1"/><text x="90.1225%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="89.8725%" y="533" width="0.1500%" height="15" fill="rgb(212,50,24)" fg:x="1198" fg:w="2"/><text x="90.1225%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.15%)</title><rect x="89.8725%" y="517" width="0.1500%" height="15" fill="rgb(253,229,47)" fg:x="1198" fg:w="2"/><text x="90.1225%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="89.9475%" y="501" width="0.0750%" height="15" fill="rgb(214,26,17)" fg:x="1199" fg:w="1"/><text x="90.1975%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="89.9475%" y="485" width="0.0750%" height="15" fill="rgb(252,60,11)" fg:x="1199" fg:w="1"/><text x="90.1975%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.9475%" y="469" width="0.0750%" height="15" fill="rgb(209,59,37)" fg:x="1199" fg:w="1"/><text x="90.1975%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.0975%" y="485" width="0.0750%" height="15" fill="rgb(228,126,53)" fg:x="1201" fg:w="1"/><text x="90.3475%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="90.2476%" y="437" width="0.0750%" height="15" fill="rgb(233,99,2)" fg:x="1203" fg:w="1"/><text x="90.4976%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.2476%" y="421" width="0.0750%" height="15" fill="rgb(217,106,34)" fg:x="1203" fg:w="1"/><text x="90.4976%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="90.3226%" y="325" width="0.0750%" height="15" fill="rgb(222,46,19)" fg:x="1204" fg:w="1"/><text x="90.5726%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="90.3226%" y="309" width="0.0750%" height="15" fill="rgb(251,87,31)" fg:x="1204" fg:w="1"/><text x="90.5726%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.3226%" y="293" width="0.0750%" height="15" fill="rgb(213,70,51)" fg:x="1204" fg:w="1"/><text x="90.5726%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3226%" y="277" width="0.0750%" height="15" fill="rgb(229,144,18)" fg:x="1204" fg:w="1"/><text x="90.5726%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.3226%" y="261" width="0.0750%" height="15" fill="rgb(254,60,26)" fg:x="1204" fg:w="1"/><text x="90.5726%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3226%" y="245" width="0.0750%" height="15" fill="rgb(243,127,51)" fg:x="1204" fg:w="1"/><text x="90.5726%" y="255.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.3226%" y="229" width="0.0750%" height="15" fill="rgb(221,51,25)" fg:x="1204" fg:w="1"/><text x="90.5726%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3226%" y="213" width="0.0750%" height="15" fill="rgb(205,42,7)" fg:x="1204" fg:w="1"/><text x="90.5726%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.3226%" y="197" width="0.0750%" height="15" fill="rgb(236,177,48)" fg:x="1204" fg:w="1"/><text x="90.5726%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3226%" y="181" width="0.0750%" height="15" fill="rgb(226,79,31)" fg:x="1204" fg:w="1"/><text x="90.5726%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.3226%" y="165" width="0.0750%" height="15" fill="rgb(216,170,12)" fg:x="1204" fg:w="1"/><text x="90.5726%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3226%" y="149" width="0.0750%" height="15" fill="rgb(208,62,51)" fg:x="1204" fg:w="1"/><text x="90.5726%" y="159.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.30%)</title><rect x="90.2476%" y="469" width="0.3001%" height="15" fill="rgb(254,129,9)" fg:x="1203" fg:w="4"/><text x="90.4976%" y="479.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.30%)</title><rect x="90.2476%" y="453" width="0.3001%" height="15" fill="rgb(243,209,31)" fg:x="1203" fg:w="4"/><text x="90.4976%" y="463.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (3 samples, 0.23%)</title><rect x="90.3226%" y="437" width="0.2251%" height="15" fill="rgb(213,159,23)" fg:x="1204" fg:w="3"/><text x="90.5726%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (3 samples, 0.23%)</title><rect x="90.3226%" y="421" width="0.2251%" height="15" fill="rgb(249,77,39)" fg:x="1204" fg:w="3"/><text x="90.5726%" y="431.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.23%)</title><rect x="90.3226%" y="405" width="0.2251%" height="15" fill="rgb(230,13,33)" fg:x="1204" fg:w="3"/><text x="90.5726%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.23%)</title><rect x="90.3226%" y="389" width="0.2251%" height="15" fill="rgb(215,215,7)" fg:x="1204" fg:w="3"/><text x="90.5726%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.23%)</title><rect x="90.3226%" y="373" width="0.2251%" height="15" fill="rgb(222,92,25)" fg:x="1204" fg:w="3"/><text x="90.5726%" y="383.50"></text></g><g><title>engine::internal::Entities::add_persisted (3 samples, 0.23%)</title><rect x="90.3226%" y="357" width="0.2251%" height="15" fill="rgb(215,173,22)" fg:x="1204" fg:w="3"/><text x="90.5726%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity (3 samples, 0.23%)</title><rect x="90.3226%" y="341" width="0.2251%" height="15" fill="rgb(247,205,52)" fg:x="1204" fg:w="3"/><text x="90.5726%" y="351.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.15%)</title><rect x="90.3976%" y="325" width="0.1500%" height="15" fill="rgb(240,210,37)" fg:x="1205" fg:w="2"/><text x="90.6476%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="90.3976%" y="309" width="0.1500%" height="15" fill="rgb(224,13,10)" fg:x="1205" fg:w="2"/><text x="90.6476%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.4726%" y="293" width="0.0750%" height="15" fill="rgb(209,48,33)" fg:x="1206" fg:w="1"/><text x="90.7226%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.4726%" y="277" width="0.0750%" height="15" fill="rgb(228,219,23)" fg:x="1206" fg:w="1"/><text x="90.7226%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.4726%" y="261" width="0.0750%" height="15" fill="rgb(239,46,49)" fg:x="1206" fg:w="1"/><text x="90.7226%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.4726%" y="245" width="0.0750%" height="15" fill="rgb(206,172,51)" fg:x="1206" fg:w="1"/><text x="90.7226%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.4726%" y="229" width="0.0750%" height="15" fill="rgb(213,212,35)" fg:x="1206" fg:w="1"/><text x="90.7226%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.4726%" y="213" width="0.0750%" height="15" fill="rgb(252,40,27)" fg:x="1206" fg:w="1"/><text x="90.7226%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.4726%" y="197" width="0.0750%" height="15" fill="rgb(212,33,41)" fg:x="1206" fg:w="1"/><text x="90.7226%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4726%" y="181" width="0.0750%" height="15" fill="rgb(232,160,27)" fg:x="1206" fg:w="1"/><text x="90.7226%" y="191.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4726%" y="165" width="0.0750%" height="15" fill="rgb(244,160,20)" fg:x="1206" fg:w="1"/><text x="90.7226%" y="175.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="90.4726%" y="149" width="0.0750%" height="15" fill="rgb(205,66,20)" fg:x="1206" fg:w="1"/><text x="90.7226%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="90.4726%" y="133" width="0.0750%" height="15" fill="rgb(236,158,6)" fg:x="1206" fg:w="1"/><text x="90.7226%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="90.5476%" y="437" width="0.1500%" height="15" fill="rgb(232,25,36)" fg:x="1207" fg:w="2"/><text x="90.7976%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.6227%" y="421" width="0.0750%" height="15" fill="rgb(220,153,35)" fg:x="1208" fg:w="1"/><text x="90.8727%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6227%" y="405" width="0.0750%" height="15" fill="rgb(216,5,8)" fg:x="1208" fg:w="1"/><text x="90.8727%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.6227%" y="389" width="0.0750%" height="15" fill="rgb(240,97,3)" fg:x="1208" fg:w="1"/><text x="90.8727%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.6227%" y="373" width="0.0750%" height="15" fill="rgb(220,99,26)" fg:x="1208" fg:w="1"/><text x="90.8727%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.6227%" y="357" width="0.0750%" height="15" fill="rgb(237,96,2)" fg:x="1208" fg:w="1"/><text x="90.8727%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.6227%" y="341" width="0.0750%" height="15" fill="rgb(217,197,47)" fg:x="1208" fg:w="1"/><text x="90.8727%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.6227%" y="325" width="0.0750%" height="15" fill="rgb(252,133,54)" fg:x="1208" fg:w="1"/><text x="90.8727%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.6227%" y="309" width="0.0750%" height="15" fill="rgb(233,37,30)" fg:x="1208" fg:w="1"/><text x="90.8727%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.6227%" y="293" width="0.0750%" height="15" fill="rgb(239,182,12)" fg:x="1208" fg:w="1"/><text x="90.8727%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.6227%" y="277" width="0.0750%" height="15" fill="rgb(245,83,39)" fg:x="1208" fg:w="1"/><text x="90.8727%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.6227%" y="261" width="0.0750%" height="15" fill="rgb(222,109,36)" fg:x="1208" fg:w="1"/><text x="90.8727%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.6227%" y="245" width="0.0750%" height="15" fill="rgb(237,95,44)" fg:x="1208" fg:w="1"/><text x="90.8727%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.6227%" y="229" width="0.0750%" height="15" fill="rgb(216,36,54)" fg:x="1208" fg:w="1"/><text x="90.8727%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.6227%" y="213" width="0.0750%" height="15" fill="rgb(236,164,3)" fg:x="1208" fg:w="1"/><text x="90.8727%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="90.6977%" y="437" width="0.0750%" height="15" fill="rgb(223,15,21)" fg:x="1209" fg:w="1"/><text x="90.9477%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="90.6977%" y="421" width="0.0750%" height="15" fill="rgb(239,191,12)" fg:x="1209" fg:w="1"/><text x="90.9477%" y="431.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (9 samples, 0.68%)</title><rect x="90.1725%" y="485" width="0.6752%" height="15" fill="rgb(231,191,37)" fg:x="1202" fg:w="9"/><text x="90.4225%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.30%)</title><rect x="90.5476%" y="469" width="0.3001%" height="15" fill="rgb(209,155,36)" fg:x="1207" fg:w="4"/><text x="90.7976%" y="479.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.30%)</title><rect x="90.5476%" y="453" width="0.3001%" height="15" fill="rgb(216,222,49)" fg:x="1207" fg:w="4"/><text x="90.7976%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7727%" y="437" width="0.0750%" height="15" fill="rgb(218,181,2)" fg:x="1210" fg:w="1"/><text x="91.0227%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="90.9227%" y="469" width="0.0750%" height="15" fill="rgb(239,125,9)" fg:x="1212" fg:w="1"/><text x="91.1727%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.9227%" y="453" width="0.0750%" height="15" fill="rgb(233,103,7)" fg:x="1212" fg:w="1"/><text x="91.1727%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="90.9977%" y="437" width="0.2251%" height="15" fill="rgb(209,223,5)" fg:x="1213" fg:w="3"/><text x="91.2477%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="91.0728%" y="421" width="0.1500%" height="15" fill="rgb(234,71,27)" fg:x="1214" fg:w="2"/><text x="91.3228%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.15%)</title><rect x="91.0728%" y="405" width="0.1500%" height="15" fill="rgb(251,202,16)" fg:x="1214" fg:w="2"/><text x="91.3228%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="91.0728%" y="389" width="0.1500%" height="15" fill="rgb(231,180,0)" fg:x="1214" fg:w="2"/><text x="91.3228%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.15%)</title><rect x="91.0728%" y="373" width="0.1500%" height="15" fill="rgb(223,58,28)" fg:x="1214" fg:w="2"/><text x="91.3228%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.15%)</title><rect x="91.0728%" y="357" width="0.1500%" height="15" fill="rgb(250,34,24)" fg:x="1214" fg:w="2"/><text x="91.3228%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.15%)</title><rect x="91.0728%" y="341" width="0.1500%" height="15" fill="rgb(235,24,16)" fg:x="1214" fg:w="2"/><text x="91.3228%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.15%)</title><rect x="91.0728%" y="325" width="0.1500%" height="15" fill="rgb(219,28,33)" fg:x="1214" fg:w="2"/><text x="91.3228%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="91.0728%" y="309" width="0.1500%" height="15" fill="rgb(228,150,43)" fg:x="1214" fg:w="2"/><text x="91.3228%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.15%)</title><rect x="91.0728%" y="293" width="0.1500%" height="15" fill="rgb(221,228,36)" fg:x="1214" fg:w="2"/><text x="91.3228%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.15%)</title><rect x="91.0728%" y="277" width="0.1500%" height="15" fill="rgb(232,116,17)" fg:x="1214" fg:w="2"/><text x="91.3228%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.15%)</title><rect x="91.0728%" y="261" width="0.1500%" height="15" fill="rgb(220,110,51)" fg:x="1214" fg:w="2"/><text x="91.3228%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.15%)</title><rect x="91.0728%" y="245" width="0.1500%" height="15" fill="rgb(207,26,25)" fg:x="1214" fg:w="2"/><text x="91.3228%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.15%)</title><rect x="91.0728%" y="229" width="0.1500%" height="15" fill="rgb(223,58,19)" fg:x="1214" fg:w="2"/><text x="91.3228%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="91.0728%" y="213" width="0.1500%" height="15" fill="rgb(234,125,39)" fg:x="1214" fg:w="2"/><text x="91.3228%" y="223.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="91.2228%" y="325" width="0.0750%" height="15" fill="rgb(241,48,36)" fg:x="1216" fg:w="1"/><text x="91.4728%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2228%" y="309" width="0.0750%" height="15" fill="rgb(217,148,51)" fg:x="1216" fg:w="1"/><text x="91.4728%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="91.2228%" y="293" width="0.0750%" height="15" fill="rgb(247,17,25)" fg:x="1216" fg:w="1"/><text x="91.4728%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.2228%" y="277" width="0.0750%" height="15" fill="rgb(219,89,38)" fg:x="1216" fg:w="1"/><text x="91.4728%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.3728%" y="197" width="0.0750%" height="15" fill="rgb(220,145,2)" fg:x="1218" fg:w="1"/><text x="91.6228%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.3728%" y="181" width="0.0750%" height="15" fill="rgb(244,66,47)" fg:x="1218" fg:w="1"/><text x="91.6228%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.3728%" y="165" width="0.0750%" height="15" fill="rgb(226,182,5)" fg:x="1218" fg:w="1"/><text x="91.6228%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.3728%" y="149" width="0.0750%" height="15" fill="rgb(211,98,20)" fg:x="1218" fg:w="1"/><text x="91.6228%" y="159.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="91.3728%" y="133" width="0.0750%" height="15" fill="rgb(217,103,52)" fg:x="1218" fg:w="1"/><text x="91.6228%" y="143.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.15%)</title><rect x="91.3728%" y="245" width="0.1500%" height="15" fill="rgb(208,125,52)" fg:x="1218" fg:w="2"/><text x="91.6228%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="91.3728%" y="229" width="0.1500%" height="15" fill="rgb(244,70,13)" fg:x="1218" fg:w="2"/><text x="91.6228%" y="239.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.15%)</title><rect x="91.3728%" y="213" width="0.1500%" height="15" fill="rgb(253,124,3)" fg:x="1218" fg:w="2"/><text x="91.6228%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.4479%" y="197" width="0.0750%" height="15" fill="rgb(222,145,32)" fg:x="1219" fg:w="1"/><text x="91.6979%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.4479%" y="181" width="0.0750%" height="15" fill="rgb(232,183,47)" fg:x="1219" fg:w="1"/><text x="91.6979%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.4479%" y="165" width="0.0750%" height="15" fill="rgb(246,226,4)" fg:x="1219" fg:w="1"/><text x="91.6979%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.4479%" y="149" width="0.0750%" height="15" fill="rgb(228,185,46)" fg:x="1219" fg:w="1"/><text x="91.6979%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.4479%" y="133" width="0.0750%" height="15" fill="rgb(213,196,4)" fg:x="1219" fg:w="1"/><text x="91.6979%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.5229%" y="213" width="0.0750%" height="15" fill="rgb(212,2,45)" fg:x="1220" fg:w="1"/><text x="91.7729%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5229%" y="197" width="0.0750%" height="15" fill="rgb(217,145,50)" fg:x="1220" fg:w="1"/><text x="91.7729%" y="207.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.45%)</title><rect x="91.2978%" y="309" width="0.4501%" height="15" fill="rgb(242,10,46)" fg:x="1217" fg:w="6"/><text x="91.5478%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.45%)</title><rect x="91.2978%" y="293" width="0.4501%" height="15" fill="rgb(252,91,48)" fg:x="1217" fg:w="6"/><text x="91.5478%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.45%)</title><rect x="91.2978%" y="277" width="0.4501%" height="15" fill="rgb(216,72,13)" fg:x="1217" fg:w="6"/><text x="91.5478%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.45%)</title><rect x="91.2978%" y="261" width="0.4501%" height="15" fill="rgb(219,6,37)" fg:x="1217" fg:w="6"/><text x="91.5478%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="91.5229%" y="245" width="0.2251%" height="15" fill="rgb(236,185,40)" fg:x="1220" fg:w="3"/><text x="91.7729%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="91.5229%" y="229" width="0.2251%" height="15" fill="rgb(208,81,48)" fg:x="1220" fg:w="3"/><text x="91.7729%" y="239.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.15%)</title><rect x="91.5979%" y="213" width="0.1500%" height="15" fill="rgb(211,42,33)" fg:x="1221" fg:w="2"/><text x="91.8479%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="91.5979%" y="197" width="0.1500%" height="15" fill="rgb(211,90,39)" fg:x="1221" fg:w="2"/><text x="91.8479%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="91.5979%" y="181" width="0.1500%" height="15" fill="rgb(218,136,12)" fg:x="1221" fg:w="2"/><text x="91.8479%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="91.5979%" y="165" width="0.1500%" height="15" fill="rgb(234,12,32)" fg:x="1221" fg:w="2"/><text x="91.8479%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="91.5979%" y="149" width="0.1500%" height="15" fill="rgb(221,164,18)" fg:x="1221" fg:w="2"/><text x="91.8479%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="91.5979%" y="133" width="0.1500%" height="15" fill="rgb(239,135,14)" fg:x="1221" fg:w="2"/><text x="91.8479%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.15%)</title><rect x="91.5979%" y="117" width="0.1500%" height="15" fill="rgb(226,198,47)" fg:x="1221" fg:w="2"/><text x="91.8479%" y="127.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.15%)</title><rect x="91.5979%" y="101" width="0.1500%" height="15" fill="rgb(244,121,47)" fg:x="1221" fg:w="2"/><text x="91.8479%" y="111.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="91.6729%" y="85" width="0.0750%" height="15" fill="rgb(226,21,48)" fg:x="1222" fg:w="1"/><text x="91.9229%" y="95.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.7479%" y="261" width="0.0750%" height="15" fill="rgb(215,178,47)" fg:x="1223" fg:w="1"/><text x="91.9979%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.7479%" y="245" width="0.0750%" height="15" fill="rgb(206,212,19)" fg:x="1223" fg:w="1"/><text x="91.9979%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.8980%" y="229" width="0.0750%" height="15" fill="rgb(230,104,34)" fg:x="1225" fg:w="1"/><text x="92.1480%" y="239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.8980%" y="213" width="0.0750%" height="15" fill="rgb(210,96,51)" fg:x="1225" fg:w="1"/><text x="92.1480%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (11 samples, 0.83%)</title><rect x="91.2228%" y="437" width="0.8252%" height="15" fill="rgb(229,111,47)" fg:x="1216" fg:w="11"/><text x="91.4728%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.83%)</title><rect x="91.2228%" y="421" width="0.8252%" height="15" fill="rgb(218,174,45)" fg:x="1216" fg:w="11"/><text x="91.4728%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.83%)</title><rect x="91.2228%" y="405" width="0.8252%" height="15" fill="rgb(215,21,32)" fg:x="1216" fg:w="11"/><text x="91.4728%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.83%)</title><rect x="91.2228%" y="389" width="0.8252%" height="15" fill="rgb(235,72,21)" fg:x="1216" fg:w="11"/><text x="91.4728%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (11 samples, 0.83%)</title><rect x="91.2228%" y="373" width="0.8252%" height="15" fill="rgb(250,113,30)" fg:x="1216" fg:w="11"/><text x="91.4728%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.83%)</title><rect x="91.2228%" y="357" width="0.8252%" height="15" fill="rgb(244,136,34)" fg:x="1216" fg:w="11"/><text x="91.4728%" y="367.50"></text></g><g><title>engine::internal::Entities::add_persisted (11 samples, 0.83%)</title><rect x="91.2228%" y="341" width="0.8252%" height="15" fill="rgb(213,226,47)" fg:x="1216" fg:w="11"/><text x="91.4728%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity (10 samples, 0.75%)</title><rect x="91.2978%" y="325" width="0.7502%" height="15" fill="rgb(224,136,40)" fg:x="1217" fg:w="10"/><text x="91.5478%" y="335.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.30%)</title><rect x="91.7479%" y="309" width="0.3001%" height="15" fill="rgb(253,124,12)" fg:x="1223" fg:w="4"/><text x="91.9979%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.30%)</title><rect x="91.7479%" y="293" width="0.3001%" height="15" fill="rgb(210,67,8)" fg:x="1223" fg:w="4"/><text x="91.9979%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.30%)</title><rect x="91.7479%" y="277" width="0.3001%" height="15" fill="rgb(210,204,0)" fg:x="1223" fg:w="4"/><text x="91.9979%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="91.8230%" y="261" width="0.2251%" height="15" fill="rgb(217,179,22)" fg:x="1224" fg:w="3"/><text x="92.0730%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.15%)</title><rect x="91.8980%" y="245" width="0.1500%" height="15" fill="rgb(237,192,33)" fg:x="1225" fg:w="2"/><text x="92.1480%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.9730%" y="229" width="0.0750%" height="15" fill="rgb(211,104,28)" fg:x="1226" fg:w="1"/><text x="92.2230%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.9730%" y="213" width="0.0750%" height="15" fill="rgb(214,75,30)" fg:x="1226" fg:w="1"/><text x="92.2230%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.9730%" y="197" width="0.0750%" height="15" fill="rgb(220,227,12)" fg:x="1226" fg:w="1"/><text x="92.2230%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.9730%" y="181" width="0.0750%" height="15" fill="rgb(233,134,28)" fg:x="1226" fg:w="1"/><text x="92.2230%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.9730%" y="165" width="0.0750%" height="15" fill="rgb(215,146,24)" fg:x="1226" fg:w="1"/><text x="92.2230%" y="175.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="92.0480%" y="437" width="0.1500%" height="15" fill="rgb(248,227,20)" fg:x="1227" fg:w="2"/><text x="92.2980%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.1980%" y="405" width="0.0750%" height="15" fill="rgb(250,44,42)" fg:x="1229" fg:w="1"/><text x="92.4480%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.2731%" y="405" width="0.0750%" height="15" fill="rgb(219,5,35)" fg:x="1230" fg:w="1"/><text x="92.5231%" y="415.50"></text></g><g><title>plugins_core::tools::get_contained_keys (21 samples, 1.58%)</title><rect x="90.8477%" y="485" width="1.5754%" height="15" fill="rgb(241,132,32)" fg:x="1211" fg:w="21"/><text x="91.0977%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (19 samples, 1.43%)</title><rect x="90.9977%" y="469" width="1.4254%" height="15" fill="rgb(234,212,51)" fg:x="1213" fg:w="19"/><text x="91.2477%" y="479.50"></text></g><g><title>kernel::model::Entity::load_scope (19 samples, 1.43%)</title><rect x="90.9977%" y="453" width="1.4254%" height="15" fill="rgb(242,173,29)" fg:x="1213" fg:w="19"/><text x="91.2477%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="92.1980%" y="437" width="0.2251%" height="15" fill="rgb(212,159,2)" fg:x="1229" fg:w="3"/><text x="92.4480%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="92.1980%" y="421" width="0.2251%" height="15" fill="rgb(238,165,31)" fg:x="1229" fg:w="3"/><text x="92.4480%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="92.3481%" y="405" width="0.0750%" height="15" fill="rgb(241,57,36)" fg:x="1231" fg:w="1"/><text x="92.5981%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="92.3481%" y="389" width="0.0750%" height="15" fill="rgb(249,7,4)" fg:x="1231" fg:w="1"/><text x="92.5981%" y="399.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="92.3481%" y="373" width="0.0750%" height="15" fill="rgb(250,137,44)" fg:x="1231" fg:w="1"/><text x="92.5981%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.3481%" y="357" width="0.0750%" height="15" fill="rgb(244,185,1)" fg:x="1231" fg:w="1"/><text x="92.5981%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3481%" y="341" width="0.0750%" height="15" fill="rgb(216,5,53)" fg:x="1231" fg:w="1"/><text x="92.5981%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.3481%" y="325" width="0.0750%" height="15" fill="rgb(234,89,21)" fg:x="1231" fg:w="1"/><text x="92.5981%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="92.4231%" y="469" width="0.0750%" height="15" fill="rgb(250,81,43)" fg:x="1232" fg:w="1"/><text x="92.6731%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.6482%" y="437" width="0.0750%" height="15" fill="rgb(243,132,11)" fg:x="1235" fg:w="1"/><text x="92.8982%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.7232%" y="437" width="0.0750%" height="15" fill="rgb(253,159,28)" fg:x="1236" fg:w="1"/><text x="92.9732%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 2.85%)</title><rect x="90.0225%" y="517" width="2.8507%" height="15" fill="rgb(237,167,34)" fg:x="1200" fg:w="38"/><text x="90.2725%" y="527.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (38 samples, 2.85%)</title><rect x="90.0225%" y="501" width="2.8507%" height="15" fill="rgb(237,16,50)" fg:x="1200" fg:w="38"/><text x="90.2725%" y="511.50">&lt;c..</text></g><g><title>plugins_core::tools::get_occupant_keys (6 samples, 0.45%)</title><rect x="92.4231%" y="485" width="0.4501%" height="15" fill="rgb(247,125,2)" fg:x="1232" fg:w="6"/><text x="92.6731%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.38%)</title><rect x="92.4981%" y="469" width="0.3751%" height="15" fill="rgb(254,35,3)" fg:x="1233" fg:w="5"/><text x="92.7481%" y="479.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.38%)</title><rect x="92.4981%" y="453" width="0.3751%" height="15" fill="rgb(237,209,21)" fg:x="1233" fg:w="5"/><text x="92.7481%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.7982%" y="437" width="0.0750%" height="15" fill="rgb(224,122,20)" fg:x="1237" fg:w="1"/><text x="93.0482%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.7982%" y="421" width="0.0750%" height="15" fill="rgb(224,11,46)" fg:x="1237" fg:w="1"/><text x="93.0482%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.7982%" y="405" width="0.0750%" height="15" fill="rgb(248,21,33)" fg:x="1237" fg:w="1"/><text x="93.0482%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.7982%" y="389" width="0.0750%" height="15" fill="rgb(222,144,7)" fg:x="1237" fg:w="1"/><text x="93.0482%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.7982%" y="373" width="0.0750%" height="15" fill="rgb(205,141,37)" fg:x="1237" fg:w="1"/><text x="93.0482%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.8732%" y="469" width="0.0750%" height="15" fill="rgb(237,130,8)" fg:x="1238" fg:w="1"/><text x="93.1232%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.8732%" y="453" width="0.0750%" height="15" fill="rgb(209,179,39)" fg:x="1238" fg:w="1"/><text x="93.1232%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.8732%" y="437" width="0.0750%" height="15" fill="rgb(207,52,17)" fg:x="1238" fg:w="1"/><text x="93.1232%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.8732%" y="421" width="0.0750%" height="15" fill="rgb(253,158,17)" fg:x="1238" fg:w="1"/><text x="93.1232%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.8732%" y="405" width="0.0750%" height="15" fill="rgb(208,19,53)" fg:x="1238" fg:w="1"/><text x="93.1232%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.8732%" y="389" width="0.0750%" height="15" fill="rgb(233,152,13)" fg:x="1238" fg:w="1"/><text x="93.1232%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.8732%" y="373" width="0.0750%" height="15" fill="rgb(231,84,1)" fg:x="1238" fg:w="1"/><text x="93.1232%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.8732%" y="357" width="0.0750%" height="15" fill="rgb(229,142,48)" fg:x="1238" fg:w="1"/><text x="93.1232%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.8732%" y="341" width="0.0750%" height="15" fill="rgb(248,70,29)" fg:x="1238" fg:w="1"/><text x="93.1232%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.8732%" y="325" width="0.0750%" height="15" fill="rgb(250,85,7)" fg:x="1238" fg:w="1"/><text x="93.1232%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.8732%" y="309" width="0.0750%" height="15" fill="rgb(235,140,43)" fg:x="1238" fg:w="1"/><text x="93.1232%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.8732%" y="293" width="0.0750%" height="15" fill="rgb(216,0,5)" fg:x="1238" fg:w="1"/><text x="93.1232%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="92.9482%" y="453" width="0.0750%" height="15" fill="rgb(223,167,29)" fg:x="1239" fg:w="1"/><text x="93.1982%" y="463.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="93.0233%" y="453" width="0.0750%" height="15" fill="rgb(229,150,33)" fg:x="1240" fg:w="1"/><text x="93.2733%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.0233%" y="437" width="0.0750%" height="15" fill="rgb(227,26,52)" fg:x="1240" fg:w="1"/><text x="93.2733%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.0233%" y="421" width="0.0750%" height="15" fill="rgb(250,60,52)" fg:x="1240" fg:w="1"/><text x="93.2733%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.0233%" y="405" width="0.0750%" height="15" fill="rgb(228,81,46)" fg:x="1240" fg:w="1"/><text x="93.2733%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.0233%" y="389" width="0.0750%" height="15" fill="rgb(225,218,31)" fg:x="1240" fg:w="1"/><text x="93.2733%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.0233%" y="373" width="0.0750%" height="15" fill="rgb(230,35,16)" fg:x="1240" fg:w="1"/><text x="93.2733%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.0233%" y="357" width="0.0750%" height="15" fill="rgb(247,100,0)" fg:x="1240" fg:w="1"/><text x="93.2733%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.0233%" y="341" width="0.0750%" height="15" fill="rgb(223,135,11)" fg:x="1240" fg:w="1"/><text x="93.2733%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.0233%" y="325" width="0.0750%" height="15" fill="rgb(207,136,0)" fg:x="1240" fg:w="1"/><text x="93.2733%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.0233%" y="309" width="0.0750%" height="15" fill="rgb(246,131,25)" fg:x="1240" fg:w="1"/><text x="93.2733%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.0233%" y="293" width="0.0750%" height="15" fill="rgb(209,47,12)" fg:x="1240" fg:w="1"/><text x="93.2733%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.0233%" y="277" width="0.0750%" height="15" fill="rgb(221,25,16)" fg:x="1240" fg:w="1"/><text x="93.2733%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.0233%" y="261" width="0.0750%" height="15" fill="rgb(223,164,33)" fg:x="1240" fg:w="1"/><text x="93.2733%" y="271.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="93.0983%" y="309" width="0.0750%" height="15" fill="rgb(220,26,23)" fg:x="1241" fg:w="1"/><text x="93.3483%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.30%)</title><rect x="92.9482%" y="469" width="0.3001%" height="15" fill="rgb(231,224,1)" fg:x="1239" fg:w="4"/><text x="93.1982%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.15%)</title><rect x="93.0983%" y="453" width="0.1500%" height="15" fill="rgb(229,221,24)" fg:x="1241" fg:w="2"/><text x="93.3483%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.15%)</title><rect x="93.0983%" y="437" width="0.1500%" height="15" fill="rgb(213,34,10)" fg:x="1241" fg:w="2"/><text x="93.3483%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.15%)</title><rect x="93.0983%" y="421" width="0.1500%" height="15" fill="rgb(215,33,11)" fg:x="1241" fg:w="2"/><text x="93.3483%" y="431.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="93.0983%" y="405" width="0.1500%" height="15" fill="rgb(216,20,41)" fg:x="1241" fg:w="2"/><text x="93.3483%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.15%)</title><rect x="93.0983%" y="389" width="0.1500%" height="15" fill="rgb(228,43,31)" fg:x="1241" fg:w="2"/><text x="93.3483%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.15%)</title><rect x="93.0983%" y="373" width="0.1500%" height="15" fill="rgb(227,83,26)" fg:x="1241" fg:w="2"/><text x="93.3483%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.15%)</title><rect x="93.0983%" y="357" width="0.1500%" height="15" fill="rgb(217,168,19)" fg:x="1241" fg:w="2"/><text x="93.3483%" y="367.50"></text></g><g><title>core::fmt::write (2 samples, 0.15%)</title><rect x="93.0983%" y="341" width="0.1500%" height="15" fill="rgb(231,34,33)" fg:x="1241" fg:w="2"/><text x="93.3483%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.15%)</title><rect x="93.0983%" y="325" width="0.1500%" height="15" fill="rgb(230,120,51)" fg:x="1241" fg:w="2"/><text x="93.3483%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.1733%" y="309" width="0.0750%" height="15" fill="rgb(215,138,27)" fg:x="1242" fg:w="1"/><text x="93.4233%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.1733%" y="293" width="0.0750%" height="15" fill="rgb(246,80,47)" fg:x="1242" fg:w="1"/><text x="93.4233%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.1733%" y="277" width="0.0750%" height="15" fill="rgb(215,57,53)" fg:x="1242" fg:w="1"/><text x="93.4233%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.1733%" y="261" width="0.0750%" height="15" fill="rgb(229,137,5)" fg:x="1242" fg:w="1"/><text x="93.4233%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.1733%" y="245" width="0.0750%" height="15" fill="rgb(210,86,2)" fg:x="1242" fg:w="1"/><text x="93.4233%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.1733%" y="229" width="0.0750%" height="15" fill="rgb(231,226,51)" fg:x="1242" fg:w="1"/><text x="93.4233%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.08%)</title><rect x="93.1733%" y="213" width="0.0750%" height="15" fill="rgb(216,62,29)" fg:x="1242" fg:w="1"/><text x="93.4233%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.15%)</title><rect x="94.2986%" y="213" width="0.1500%" height="15" fill="rgb(248,202,3)" fg:x="1257" fg:w="2"/><text x="94.5486%" y="223.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.15%)</title><rect x="94.2986%" y="197" width="0.1500%" height="15" fill="rgb(225,181,7)" fg:x="1257" fg:w="2"/><text x="94.5486%" y="207.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.38%)</title><rect x="94.1485%" y="261" width="0.3751%" height="15" fill="rgb(247,170,54)" fg:x="1255" fg:w="5"/><text x="94.3985%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.30%)</title><rect x="94.2236%" y="245" width="0.3001%" height="15" fill="rgb(236,204,33)" fg:x="1256" fg:w="4"/><text x="94.4736%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.30%)</title><rect x="94.2236%" y="229" width="0.3001%" height="15" fill="rgb(216,45,30)" fg:x="1256" fg:w="4"/><text x="94.4736%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.4486%" y="213" width="0.0750%" height="15" fill="rgb(213,203,16)" fg:x="1259" fg:w="1"/><text x="94.6986%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.4486%" y="197" width="0.0750%" height="15" fill="rgb(215,46,16)" fg:x="1259" fg:w="1"/><text x="94.6986%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.23%)</title><rect x="94.5986%" y="245" width="0.2251%" height="15" fill="rgb(217,162,46)" fg:x="1261" fg:w="3"/><text x="94.8486%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.90%)</title><rect x="93.9985%" y="277" width="0.9002%" height="15" fill="rgb(224,189,20)" fg:x="1253" fg:w="12"/><text x="94.2485%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.38%)</title><rect x="94.5236%" y="261" width="0.3751%" height="15" fill="rgb(232,35,51)" fg:x="1260" fg:w="5"/><text x="94.7736%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.8237%" y="245" width="0.0750%" height="15" fill="rgb(243,221,46)" fg:x="1264" fg:w="1"/><text x="95.0737%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (15 samples, 1.13%)</title><rect x="93.9985%" y="293" width="1.1253%" height="15" fill="rgb(248,16,16)" fg:x="1253" fg:w="15"/><text x="94.2485%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.23%)</title><rect x="94.8987%" y="277" width="0.2251%" height="15" fill="rgb(220,168,13)" fg:x="1265" fg:w="3"/><text x="95.1487%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="94.8987%" y="261" width="0.2251%" height="15" fill="rgb(243,102,39)" fg:x="1265" fg:w="3"/><text x="95.1487%" y="271.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.1988%" y="213" width="0.0750%" height="15" fill="rgb(245,82,32)" fg:x="1269" fg:w="1"/><text x="95.4488%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (19 samples, 1.43%)</title><rect x="93.9235%" y="309" width="1.4254%" height="15" fill="rgb(230,164,19)" fg:x="1252" fg:w="19"/><text x="94.1735%" y="319.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="95.1238%" y="293" width="0.2251%" height="15" fill="rgb(221,9,41)" fg:x="1268" fg:w="3"/><text x="95.3738%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.23%)</title><rect x="95.1238%" y="277" width="0.2251%" height="15" fill="rgb(216,93,0)" fg:x="1268" fg:w="3"/><text x="95.3738%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (3 samples, 0.23%)</title><rect x="95.1238%" y="261" width="0.2251%" height="15" fill="rgb(235,113,9)" fg:x="1268" fg:w="3"/><text x="95.3738%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="95.1238%" y="245" width="0.2251%" height="15" fill="rgb(209,224,10)" fg:x="1268" fg:w="3"/><text x="95.3738%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.23%)</title><rect x="95.1238%" y="229" width="0.2251%" height="15" fill="rgb(226,54,34)" fg:x="1268" fg:w="3"/><text x="95.3738%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.2738%" y="213" width="0.0750%" height="15" fill="rgb(222,60,8)" fg:x="1270" fg:w="1"/><text x="95.5238%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.3488%" y="309" width="0.0750%" height="15" fill="rgb(248,228,41)" fg:x="1271" fg:w="1"/><text x="95.5988%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 1.80%)</title><rect x="93.7734%" y="325" width="1.8005%" height="15" fill="rgb(226,31,32)" fg:x="1250" fg:w="24"/><text x="94.0234%" y="335.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.15%)</title><rect x="95.4239%" y="309" width="0.1500%" height="15" fill="rgb(242,132,49)" fg:x="1272" fg:w="2"/><text x="95.6739%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.4989%" y="293" width="0.0750%" height="15" fill="rgb(224,194,19)" fg:x="1273" fg:w="1"/><text x="95.7489%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (27 samples, 2.03%)</title><rect x="93.6984%" y="357" width="2.0255%" height="15" fill="rgb(232,200,51)" fg:x="1249" fg:w="27"/><text x="93.9484%" y="367.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (26 samples, 1.95%)</title><rect x="93.7734%" y="341" width="1.9505%" height="15" fill="rgb(235,60,46)" fg:x="1250" fg:w="26"/><text x="94.0234%" y="351.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.15%)</title><rect x="95.5739%" y="325" width="0.1500%" height="15" fill="rgb(240,109,52)" fg:x="1274" fg:w="2"/><text x="95.8239%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="95.5739%" y="309" width="0.1500%" height="15" fill="rgb(215,78,37)" fg:x="1274" fg:w="2"/><text x="95.8239%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.15%)</title><rect x="95.7239%" y="357" width="0.1500%" height="15" fill="rgb(225,141,7)" fg:x="1276" fg:w="2"/><text x="95.9739%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.7989%" y="341" width="0.0750%" height="15" fill="rgb(216,102,54)" fg:x="1277" fg:w="1"/><text x="96.0489%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 2.55%)</title><rect x="93.6234%" y="373" width="2.5506%" height="15" fill="rgb(238,143,13)" fg:x="1248" fg:w="34"/><text x="93.8734%" y="383.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.30%)</title><rect x="95.8740%" y="357" width="0.3001%" height="15" fill="rgb(219,45,51)" fg:x="1278" fg:w="4"/><text x="96.1240%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.23%)</title><rect x="95.9490%" y="341" width="0.2251%" height="15" fill="rgb(242,105,46)" fg:x="1279" fg:w="3"/><text x="96.1990%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.0990%" y="325" width="0.0750%" height="15" fill="rgb(206,154,49)" fg:x="1281" fg:w="1"/><text x="96.3490%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (40 samples, 3.00%)</title><rect x="93.3983%" y="405" width="3.0008%" height="15" fill="rgb(239,215,4)" fg:x="1245" fg:w="40"/><text x="93.6483%" y="415.50">&lt;rp..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (39 samples, 2.93%)</title><rect x="93.4734%" y="389" width="2.9257%" height="15" fill="rgb(238,82,17)" fg:x="1246" fg:w="39"/><text x="93.7234%" y="399.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.23%)</title><rect x="96.1740%" y="373" width="0.2251%" height="15" fill="rgb(242,49,30)" fg:x="1282" fg:w="3"/><text x="96.4240%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="96.1740%" y="357" width="0.2251%" height="15" fill="rgb(248,5,16)" fg:x="1282" fg:w="3"/><text x="96.4240%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 3.38%)</title><rect x="93.2483%" y="421" width="3.3758%" height="15" fill="rgb(237,138,32)" fg:x="1243" fg:w="45"/><text x="93.4983%" y="431.50">&lt;co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.23%)</title><rect x="96.3991%" y="405" width="0.2251%" height="15" fill="rgb(235,79,45)" fg:x="1285" fg:w="3"/><text x="96.6491%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.23%)</title><rect x="96.3991%" y="389" width="0.2251%" height="15" fill="rgb(213,105,25)" fg:x="1285" fg:w="3"/><text x="96.6491%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.5491%" y="373" width="0.0750%" height="15" fill="rgb(251,131,7)" fg:x="1287" fg:w="1"/><text x="96.7991%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (48 samples, 3.60%)</title><rect x="93.2483%" y="453" width="3.6009%" height="15" fill="rgb(211,155,7)" fg:x="1243" fg:w="48"/><text x="93.4983%" y="463.50">&lt;rpc..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (48 samples, 3.60%)</title><rect x="93.2483%" y="437" width="3.6009%" height="15" fill="rgb(243,70,15)" fg:x="1243" fg:w="48"/><text x="93.4983%" y="447.50">&lt;std..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.23%)</title><rect x="96.6242%" y="421" width="0.2251%" height="15" fill="rgb(215,171,2)" fg:x="1288" fg:w="3"/><text x="96.8742%" y="431.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="96.6242%" y="405" width="0.2251%" height="15" fill="rgb(244,121,35)" fg:x="1288" fg:w="3"/><text x="96.8742%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8492%" y="405" width="0.0750%" height="15" fill="rgb(249,147,17)" fg:x="1291" fg:w="1"/><text x="97.0992%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.30%)</title><rect x="96.9242%" y="405" width="0.3001%" height="15" fill="rgb(241,193,52)" fg:x="1292" fg:w="4"/><text x="97.1742%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.30%)</title><rect x="96.9242%" y="389" width="0.3001%" height="15" fill="rgb(217,159,39)" fg:x="1292" fg:w="4"/><text x="97.1742%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.15%)</title><rect x="97.0743%" y="373" width="0.1500%" height="15" fill="rgb(248,110,0)" fg:x="1294" fg:w="2"/><text x="97.3243%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="97.2243%" y="405" width="0.0750%" height="15" fill="rgb(233,227,0)" fg:x="1296" fg:w="1"/><text x="97.4743%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.15%)</title><rect x="97.2993%" y="405" width="0.1500%" height="15" fill="rgb(252,55,2)" fg:x="1297" fg:w="2"/><text x="97.5493%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.15%)</title><rect x="97.2993%" y="389" width="0.1500%" height="15" fill="rgb(224,194,24)" fg:x="1297" fg:w="2"/><text x="97.5493%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.15%)</title><rect x="97.2993%" y="373" width="0.1500%" height="15" fill="rgb(247,5,33)" fg:x="1297" fg:w="2"/><text x="97.5493%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4494%" y="373" width="0.0750%" height="15" fill="rgb(242,66,47)" fg:x="1299" fg:w="1"/><text x="97.6994%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4494%" y="357" width="0.0750%" height="15" fill="rgb(213,107,12)" fg:x="1299" fg:w="1"/><text x="97.6994%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.4494%" y="341" width="0.0750%" height="15" fill="rgb(206,131,1)" fg:x="1299" fg:w="1"/><text x="97.6994%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5244%" y="325" width="0.0750%" height="15" fill="rgb(214,9,36)" fg:x="1300" fg:w="1"/><text x="97.7744%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5244%" y="309" width="0.0750%" height="15" fill="rgb(251,215,18)" fg:x="1300" fg:w="1"/><text x="97.7744%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.5244%" y="293" width="0.0750%" height="15" fill="rgb(251,64,9)" fg:x="1300" fg:w="1"/><text x="97.7744%" y="303.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (4 samples, 0.30%)</title><rect x="97.4494%" y="405" width="0.3001%" height="15" fill="rgb(235,68,21)" fg:x="1299" fg:w="4"/><text x="97.6994%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.30%)</title><rect x="97.4494%" y="389" width="0.3001%" height="15" fill="rgb(240,69,38)" fg:x="1299" fg:w="4"/><text x="97.6994%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.23%)</title><rect x="97.5244%" y="373" width="0.2251%" height="15" fill="rgb(231,18,27)" fg:x="1300" fg:w="3"/><text x="97.7744%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.23%)</title><rect x="97.5244%" y="357" width="0.2251%" height="15" fill="rgb(215,154,25)" fg:x="1300" fg:w="3"/><text x="97.7744%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="97.5244%" y="341" width="0.2251%" height="15" fill="rgb(224,33,46)" fg:x="1300" fg:w="3"/><text x="97.7744%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.15%)</title><rect x="97.5994%" y="325" width="0.1500%" height="15" fill="rgb(248,191,53)" fg:x="1301" fg:w="2"/><text x="97.8494%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.6744%" y="309" width="0.0750%" height="15" fill="rgb(231,3,37)" fg:x="1302" fg:w="1"/><text x="97.9244%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6744%" y="293" width="0.0750%" height="15" fill="rgb(209,152,2)" fg:x="1302" fg:w="1"/><text x="97.9244%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6744%" y="277" width="0.0750%" height="15" fill="rgb(212,208,43)" fg:x="1302" fg:w="1"/><text x="97.9244%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6744%" y="261" width="0.0750%" height="15" fill="rgb(208,60,49)" fg:x="1302" fg:w="1"/><text x="97.9244%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.15%)</title><rect x="97.7494%" y="373" width="0.1500%" height="15" fill="rgb(245,135,6)" fg:x="1303" fg:w="2"/><text x="97.9994%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (3 samples, 0.23%)</title><rect x="97.7494%" y="405" width="0.2251%" height="15" fill="rgb(243,86,23)" fg:x="1303" fg:w="3"/><text x="97.9994%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="97.7494%" y="389" width="0.2251%" height="15" fill="rgb(223,7,20)" fg:x="1303" fg:w="3"/><text x="97.9994%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8995%" y="373" width="0.0750%" height="15" fill="rgb(212,182,17)" fg:x="1305" fg:w="1"/><text x="98.1495%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8995%" y="357" width="0.0750%" height="15" fill="rgb(237,94,50)" fg:x="1305" fg:w="1"/><text x="98.1495%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8995%" y="341" width="0.0750%" height="15" fill="rgb(232,185,44)" fg:x="1305" fg:w="1"/><text x="98.1495%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.1995%" y="309" width="0.0750%" height="15" fill="rgb(205,50,36)" fg:x="1309" fg:w="1"/><text x="98.4495%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.15%)</title><rect x="98.1995%" y="357" width="0.1500%" height="15" fill="rgb(252,32,32)" fg:x="1309" fg:w="2"/><text x="98.4495%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.15%)</title><rect x="98.1995%" y="341" width="0.1500%" height="15" fill="rgb(241,123,33)" fg:x="1309" fg:w="2"/><text x="98.4495%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.15%)</title><rect x="98.1995%" y="325" width="0.1500%" height="15" fill="rgb(212,140,16)" fg:x="1309" fg:w="2"/><text x="98.4495%" y="335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="98.2746%" y="309" width="0.0750%" height="15" fill="rgb(247,132,5)" fg:x="1310" fg:w="1"/><text x="98.5246%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2746%" y="293" width="0.0750%" height="15" fill="rgb(209,137,38)" fg:x="1310" fg:w="1"/><text x="98.5246%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5746%" y="325" width="0.0750%" height="15" fill="rgb(248,32,42)" fg:x="1314" fg:w="1"/><text x="98.8246%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5746%" y="309" width="0.0750%" height="15" fill="rgb(216,188,40)" fg:x="1314" fg:w="1"/><text x="98.8246%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.5746%" y="293" width="0.0750%" height="15" fill="rgb(209,127,53)" fg:x="1314" fg:w="1"/><text x="98.8246%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="98.5746%" y="341" width="0.2251%" height="15" fill="rgb(254,162,9)" fg:x="1314" fg:w="3"/><text x="98.8246%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.15%)</title><rect x="98.6497%" y="325" width="0.1500%" height="15" fill="rgb(219,183,10)" fg:x="1315" fg:w="2"/><text x="98.8997%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7247%" y="309" width="0.0750%" height="15" fill="rgb(217,192,21)" fg:x="1316" fg:w="1"/><text x="98.9747%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.83%)</title><rect x="98.0495%" y="373" width="0.8252%" height="15" fill="rgb(251,89,27)" fg:x="1307" fg:w="11"/><text x="98.2995%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.53%)</title><rect x="98.3496%" y="357" width="0.5251%" height="15" fill="rgb(253,55,28)" fg:x="1311" fg:w="7"/><text x="98.5996%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7997%" y="341" width="0.0750%" height="15" fill="rgb(216,159,8)" fg:x="1317" fg:w="1"/><text x="99.0497%" y="351.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (76 samples, 5.70%)</title><rect x="93.2483%" y="469" width="5.7014%" height="15" fill="rgb(231,228,44)" fg:x="1243" fg:w="76"/><text x="93.4983%" y="479.50">&lt;rpc_pr..</text></g><g><title>kernel::model::EntityPtr::to_json_value (28 samples, 2.10%)</title><rect x="96.8492%" y="453" width="2.1005%" height="15" fill="rgb(247,34,48)" fg:x="1291" fg:w="28"/><text x="97.0992%" y="463.50">k..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (28 samples, 2.10%)</title><rect x="96.8492%" y="437" width="2.1005%" height="15" fill="rgb(247,222,18)" fg:x="1291" fg:w="28"/><text x="97.0992%" y="447.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (28 samples, 2.10%)</title><rect x="96.8492%" y="421" width="2.1005%" height="15" fill="rgb(227,49,4)" fg:x="1291" fg:w="28"/><text x="97.0992%" y="431.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 0.98%)</title><rect x="97.9745%" y="405" width="0.9752%" height="15" fill="rgb(219,189,53)" fg:x="1306" fg:w="13"/><text x="98.2245%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (12 samples, 0.90%)</title><rect x="98.0495%" y="389" width="0.9002%" height="15" fill="rgb(241,160,53)" fg:x="1307" fg:w="12"/><text x="98.2995%" y="399.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="98.8747%" y="373" width="0.0750%" height="15" fill="rgb(227,115,4)" fg:x="1318" fg:w="1"/><text x="99.1247%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8747%" y="357" width="0.0750%" height="15" fill="rgb(215,28,28)" fg:x="1318" fg:w="1"/><text x="99.1247%" y="367.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (124 samples, 9.30%)</title><rect x="89.7224%" y="549" width="9.3023%" height="15" fill="rgb(237,143,40)" fg:x="1196" fg:w="124"/><text x="89.9724%" y="559.50">&lt;plugins_rpc:..</text></g><g><title>core::iter::adapters::try_process (120 samples, 9.00%)</title><rect x="90.0225%" y="533" width="9.0023%" height="15" fill="rgb(205,107,24)" fg:x="1200" fg:w="120"/><text x="90.2725%" y="543.50">core::iter::a..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (82 samples, 6.15%)</title><rect x="92.8732%" y="517" width="6.1515%" height="15" fill="rgb(209,112,35)" fg:x="1238" fg:w="82"/><text x="93.1232%" y="527.50">alloc::v..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (82 samples, 6.15%)</title><rect x="92.8732%" y="501" width="6.1515%" height="15" fill="rgb(206,135,5)" fg:x="1238" fg:w="82"/><text x="93.1232%" y="511.50">&lt;core::i..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (82 samples, 6.15%)</title><rect x="92.8732%" y="485" width="6.1515%" height="15" fill="rgb(227,217,38)" fg:x="1238" fg:w="82"/><text x="93.1232%" y="495.50">plugins_..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="98.9497%" y="469" width="0.0750%" height="15" fill="rgb(205,0,41)" fg:x="1319" fg:w="1"/><text x="99.1997%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="98.9497%" y="453" width="0.0750%" height="15" fill="rgb(220,20,40)" fg:x="1319" fg:w="1"/><text x="99.1997%" y="463.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (171 samples, 12.83%)</title><rect x="86.2716%" y="613" width="12.8282%" height="15" fill="rgb(216,145,3)" fg:x="1150" fg:w="171"/><text x="86.5216%" y="623.50">&lt;engine::perform::S..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (140 samples, 10.50%)</title><rect x="88.5971%" y="597" width="10.5026%" height="15" fill="rgb(207,130,51)" fg:x="1181" fg:w="140"/><text x="88.8471%" y="607.50">kernel::plugins..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (140 samples, 10.50%)</title><rect x="88.5971%" y="581" width="10.5026%" height="15" fill="rgb(252,93,13)" fg:x="1181" fg:w="140"/><text x="88.8471%" y="591.50">&lt;plugins_dynlib..</text></g><g><title>plugins_rpc::querying::have_surroundings (126 samples, 9.45%)</title><rect x="89.6474%" y="565" width="9.4524%" height="15" fill="rgb(210,105,15)" fg:x="1195" fg:w="126"/><text x="89.8974%" y="575.50">plugins_rpc::q..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.0248%" y="549" width="0.0750%" height="15" fill="rgb(212,126,31)" fg:x="1320" fg:w="1"/><text x="99.2748%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="99.1748%" y="565" width="0.0750%" height="15" fill="rgb(241,167,46)" fg:x="1322" fg:w="1"/><text x="99.4248%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2498%" y="469" width="0.0750%" height="15" fill="rgb(217,143,19)" fg:x="1323" fg:w="1"/><text x="99.4998%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2498%" y="453" width="0.0750%" height="15" fill="rgb(235,117,33)" fg:x="1323" fg:w="1"/><text x="99.4998%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2498%" y="437" width="0.0750%" height="15" fill="rgb(247,95,6)" fg:x="1323" fg:w="1"/><text x="99.4998%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2498%" y="421" width="0.0750%" height="15" fill="rgb(243,206,43)" fg:x="1323" fg:w="1"/><text x="99.4998%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2498%" y="405" width="0.0750%" height="15" fill="rgb(229,65,54)" fg:x="1323" fg:w="1"/><text x="99.4998%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="99.2498%" y="389" width="0.0750%" height="15" fill="rgb(247,137,34)" fg:x="1323" fg:w="1"/><text x="99.4998%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.15%)</title><rect x="99.2498%" y="533" width="0.1500%" height="15" fill="rgb(245,174,44)" fg:x="1323" fg:w="2"/><text x="99.4998%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.15%)</title><rect x="99.2498%" y="517" width="0.1500%" height="15" fill="rgb(223,64,15)" fg:x="1323" fg:w="2"/><text x="99.4998%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.15%)</title><rect x="99.2498%" y="501" width="0.1500%" height="15" fill="rgb(243,153,36)" fg:x="1323" fg:w="2"/><text x="99.4998%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.15%)</title><rect x="99.2498%" y="485" width="0.1500%" height="15" fill="rgb(252,23,4)" fg:x="1323" fg:w="2"/><text x="99.4998%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.3248%" y="469" width="0.0750%" height="15" fill="rgb(209,132,13)" fg:x="1324" fg:w="1"/><text x="99.5748%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3248%" y="453" width="0.0750%" height="15" fill="rgb(209,196,21)" fg:x="1324" fg:w="1"/><text x="99.5748%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3248%" y="437" width="0.0750%" height="15" fill="rgb(252,197,1)" fg:x="1324" fg:w="1"/><text x="99.5748%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3248%" y="421" width="0.0750%" height="15" fill="rgb(229,42,46)" fg:x="1324" fg:w="1"/><text x="99.5748%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.3248%" y="405" width="0.0750%" height="15" fill="rgb(219,85,8)" fg:x="1324" fg:w="1"/><text x="99.5748%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3248%" y="389" width="0.0750%" height="15" fill="rgb(223,185,14)" fg:x="1324" fg:w="1"/><text x="99.5748%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (5 samples, 0.38%)</title><rect x="99.1748%" y="597" width="0.3751%" height="15" fill="rgb(217,196,18)" fg:x="1322" fg:w="5"/><text x="99.4248%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (5 samples, 0.38%)</title><rect x="99.1748%" y="581" width="0.3751%" height="15" fill="rgb(220,122,37)" fg:x="1322" fg:w="5"/><text x="99.4248%" y="591.50"></text></g><g><title>engine::internal::Entities::add_persisted (4 samples, 0.30%)</title><rect x="99.2498%" y="565" width="0.3001%" height="15" fill="rgb(236,135,33)" fg:x="1323" fg:w="4"/><text x="99.4998%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.30%)</title><rect x="99.2498%" y="549" width="0.3001%" height="15" fill="rgb(222,86,54)" fg:x="1323" fg:w="4"/><text x="99.4998%" y="559.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.15%)</title><rect x="99.3998%" y="533" width="0.1500%" height="15" fill="rgb(227,42,22)" fg:x="1325" fg:w="2"/><text x="99.6498%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.15%)</title><rect x="99.3998%" y="517" width="0.1500%" height="15" fill="rgb(243,101,27)" fg:x="1325" fg:w="2"/><text x="99.6498%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4749%" y="501" width="0.0750%" height="15" fill="rgb(229,100,8)" fg:x="1326" fg:w="1"/><text x="99.7249%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4749%" y="485" width="0.0750%" height="15" fill="rgb(252,68,10)" fg:x="1326" fg:w="1"/><text x="99.7249%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4749%" y="469" width="0.0750%" height="15" fill="rgb(219,19,31)" fg:x="1326" fg:w="1"/><text x="99.7249%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4749%" y="453" width="0.0750%" height="15" fill="rgb(246,150,44)" fg:x="1326" fg:w="1"/><text x="99.7249%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4749%" y="437" width="0.0750%" height="15" fill="rgb(211,14,39)" fg:x="1326" fg:w="1"/><text x="99.7249%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4749%" y="421" width="0.0750%" height="15" fill="rgb(221,98,29)" fg:x="1326" fg:w="1"/><text x="99.7249%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4749%" y="405" width="0.0750%" height="15" fill="rgb(221,70,26)" fg:x="1326" fg:w="1"/><text x="99.7249%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4749%" y="389" width="0.0750%" height="15" fill="rgb(236,146,30)" fg:x="1326" fg:w="1"/><text x="99.7249%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4749%" y="373" width="0.0750%" height="15" fill="rgb(226,94,34)" fg:x="1326" fg:w="1"/><text x="99.7249%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.4749%" y="357" width="0.0750%" height="15" fill="rgb(248,132,21)" fg:x="1326" fg:w="1"/><text x="99.7249%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.4749%" y="341" width="0.0750%" height="15" fill="rgb(245,43,50)" fg:x="1326" fg:w="1"/><text x="99.7249%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4749%" y="325" width="0.0750%" height="15" fill="rgb(245,132,31)" fg:x="1326" fg:w="1"/><text x="99.7249%" y="335.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (1 samples, 0.08%)</title><rect x="99.5499%" y="597" width="0.0750%" height="15" fill="rgb(230,171,4)" fg:x="1327" fg:w="1"/><text x="99.7999%" y="607.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="99.5499%" y="581" width="0.0750%" height="15" fill="rgb(235,6,45)" fg:x="1327" fg:w="1"/><text x="99.7999%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="99.5499%" y="565" width="0.0750%" height="15" fill="rgb(220,80,28)" fg:x="1327" fg:w="1"/><text x="99.7999%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="99.5499%" y="549" width="0.0750%" height="15" fill="rgb(242,171,9)" fg:x="1327" fg:w="1"/><text x="99.7999%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.5499%" y="533" width="0.0750%" height="15" fill="rgb(214,135,29)" fg:x="1327" fg:w="1"/><text x="99.7999%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5499%" y="517" width="0.0750%" height="15" fill="rgb(221,229,16)" fg:x="1327" fg:w="1"/><text x="99.7999%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="99.6249%" y="597" width="0.0750%" height="15" fill="rgb(253,59,46)" fg:x="1328" fg:w="1"/><text x="99.8749%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="99.6249%" y="581" width="0.0750%" height="15" fill="rgb(250,147,20)" fg:x="1328" fg:w="1"/><text x="99.8749%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.6249%" y="565" width="0.0750%" height="15" fill="rgb(236,64,48)" fg:x="1328" fg:w="1"/><text x="99.8749%" y="575.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (180 samples, 13.50%)</title><rect x="86.2716%" y="629" width="13.5034%" height="15" fill="rgb(240,37,42)" fg:x="1150" fg:w="180"/><text x="86.5216%" y="639.50">&lt;engine::perform::St..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (9 samples, 0.68%)</title><rect x="99.0998%" y="613" width="0.6752%" height="15" fill="rgb(220,41,50)" fg:x="1321" fg:w="9"/><text x="99.3498%" y="623.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="99.6999%" y="597" width="0.0750%" height="15" fill="rgb(216,51,14)" fg:x="1329" fg:w="1"/><text x="99.9499%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="99.6999%" y="581" width="0.0750%" height="15" fill="rgb(215,83,10)" fg:x="1329" fg:w="1"/><text x="99.9499%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="99.6999%" y="565" width="0.0750%" height="15" fill="rgb(206,144,17)" fg:x="1329" fg:w="1"/><text x="99.9499%" y="575.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.6999%" y="549" width="0.0750%" height="15" fill="rgb(219,196,37)" fg:x="1329" fg:w="1"/><text x="99.9499%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.6999%" y="533" width="0.0750%" height="15" fill="rgb(226,135,26)" fg:x="1329" fg:w="1"/><text x="99.9499%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="99.6999%" y="517" width="0.0750%" height="15" fill="rgb(237,195,40)" fg:x="1329" fg:w="1"/><text x="99.9499%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (181 samples, 13.58%)</title><rect x="86.2716%" y="645" width="13.5784%" height="15" fill="rgb(228,182,42)" fg:x="1150" fg:w="181"/><text x="86.5216%" y="655.50">&lt;plugins_core::carryi..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.7749%" y="629" width="0.0750%" height="15" fill="rgb(224,135,50)" fg:x="1330" fg:w="1"/><text x="100.0249%" y="639.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.7749%" y="613" width="0.0750%" height="15" fill="rgb(236,215,34)" fg:x="1330" fg:w="1"/><text x="100.0249%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (183 samples, 13.73%)</title><rect x="86.1965%" y="661" width="13.7284%" height="15" fill="rgb(244,213,27)" fg:x="1149" fg:w="183"/><text x="86.4465%" y="671.50">&lt;core::iter::adapters..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="99.8500%" y="645" width="0.0750%" height="15" fill="rgb(233,37,53)" fg:x="1331" fg:w="1"/><text x="100.1000%" y="655.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="99.8500%" y="629" width="0.0750%" height="15" fill="rgb(222,132,14)" fg:x="1331" fg:w="1"/><text x="100.1000%" y="639.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.8500%" y="613" width="0.0750%" height="15" fill="rgb(219,202,29)" fg:x="1331" fg:w="1"/><text x="100.1000%" y="623.50"></text></g><g><title>all (1,333 samples, 100%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(226,157,39)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="1103.50"></text></g><g><title>simple-bd24e590 (1,333 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(235,213,2)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="1087.50">simple-bd24e590</text></g><g><title>_start (1,333 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(250,121,2)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="1071.50">_start</text></g><g><title>__libc_start_main (1,333 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(206,192,33)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="1055.50">__libc_start_main</text></g><g><title>main (1,333 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(240,161,6)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="1039.50">main</text></g><g><title>std::rt::lang_start_internal (1,333 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(246,53,30)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="1023.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,333 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(219,123,43)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,333 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(236,53,49)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,333 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(241,156,1)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="975.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,333 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(209,73,26)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="959.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,333 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(206,114,3)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,333 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(230,214,9)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,333 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(240,184,46)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="911.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,333 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(242,169,54)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="895.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,333 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(207,168,50)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="879.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,333 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(240,114,2)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="863.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,333 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(211,17,40)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="847.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,333 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(235,97,36)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="831.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,333 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(208,164,11)" fg:x="0" fg:w="1333"/><text x="0.2500%" y="815.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (305 samples, 22.88%)</title><rect x="77.1193%" y="789" width="22.8807%" height="15" fill="rgb(242,11,17)" fg:x="1028" fg:w="305"/><text x="77.3693%" y="799.50">&lt;criterion::routine::Function&lt;M,F,T&gt;..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (305 samples, 22.88%)</title><rect x="77.1193%" y="773" width="22.8807%" height="15" fill="rgb(215,86,33)" fg:x="1028" fg:w="305"/><text x="77.3693%" y="783.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (305 samples, 22.88%)</title><rect x="77.1193%" y="757" width="22.8807%" height="15" fill="rgb(245,185,28)" fg:x="1028" fg:w="305"/><text x="77.3693%" y="767.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (186 samples, 13.95%)</title><rect x="86.0465%" y="741" width="13.9535%" height="15" fill="rgb(231,89,42)" fg:x="1147" fg:w="186"/><text x="86.2965%" y="751.50">engine::session::Sess..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (186 samples, 13.95%)</title><rect x="86.0465%" y="725" width="13.9535%" height="15" fill="rgb(210,18,47)" fg:x="1147" fg:w="186"/><text x="86.2965%" y="735.50">engine::perform::Stan..</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (186 samples, 13.95%)</title><rect x="86.0465%" y="709" width="13.9535%" height="15" fill="rgb(214,84,8)" fg:x="1147" fg:w="186"/><text x="86.2965%" y="719.50">&lt;kernel::plugins::Ses..</text></g><g><title>core::iter::adapters::try_process (184 samples, 13.80%)</title><rect x="86.1965%" y="693" width="13.8035%" height="15" fill="rgb(214,222,23)" fg:x="1149" fg:w="184"/><text x="86.4465%" y="703.50">core::iter::adapters:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (184 samples, 13.80%)</title><rect x="86.1965%" y="677" width="13.8035%" height="15" fill="rgb(213,104,21)" fg:x="1149" fg:w="184"/><text x="86.4465%" y="687.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.9250%" y="661" width="0.0750%" height="15" fill="rgb(238,138,6)" fg:x="1332" fg:w="1"/><text x="100.1750%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.9250%" y="645" width="0.0750%" height="15" fill="rgb(205,167,50)" fg:x="1332" fg:w="1"/><text x="100.1750%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.9250%" y="629" width="0.0750%" height="15" fill="rgb(230,105,27)" fg:x="1332" fg:w="1"/><text x="100.1750%" y="639.50"></text></g></svg></svg>