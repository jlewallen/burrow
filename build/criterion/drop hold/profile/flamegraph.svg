<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1062" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1045.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1045.00"> </text><svg id="frames" x="10" width="1180" total_samples="1239"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.0807%" y="645" width="0.0807%" height="15" fill="rgb(238,19,9)" fg:x="1" fg:w="1"/><text x="0.3307%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0807%" y="629" width="0.0807%" height="15" fill="rgb(206,86,13)" fg:x="1" fg:w="1"/><text x="0.3307%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0807%" y="613" width="0.0807%" height="15" fill="rgb(214,123,40)" fg:x="1" fg:w="1"/><text x="0.3307%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.2421%" y="565" width="0.1614%" height="15" fill="rgb(243,53,5)" fg:x="3" fg:w="2"/><text x="0.4921%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.5650%" y="533" width="0.1614%" height="15" fill="rgb(254,186,31)" fg:x="7" fg:w="2"/><text x="0.8150%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6457%" y="517" width="0.0807%" height="15" fill="rgb(221,216,25)" fg:x="8" fg:w="1"/><text x="0.8957%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.65%)</title><rect x="0.1614%" y="581" width="0.6457%" height="15" fill="rgb(248,107,42)" fg:x="2" fg:w="8"/><text x="0.4114%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="0.4036%" y="565" width="0.4036%" height="15" fill="rgb(221,85,43)" fg:x="5" fg:w="5"/><text x="0.6536%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="0.4036%" y="549" width="0.4036%" height="15" fill="rgb(225,34,24)" fg:x="5" fg:w="5"/><text x="0.6536%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="0.7264%" y="533" width="0.0807%" height="15" fill="rgb(211,119,1)" fg:x="9" fg:w="1"/><text x="0.9764%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7264%" y="517" width="0.0807%" height="15" fill="rgb(254,216,46)" fg:x="9" fg:w="1"/><text x="0.9764%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.89%)</title><rect x="0.0000%" y="661" width="0.8878%" height="15" fill="rgb(238,11,38)" fg:x="0" fg:w="11"/><text x="0.2500%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (9 samples, 0.73%)</title><rect x="0.1614%" y="645" width="0.7264%" height="15" fill="rgb(233,50,15)" fg:x="2" fg:w="9"/><text x="0.4114%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="0.1614%" y="629" width="0.7264%" height="15" fill="rgb(217,181,29)" fg:x="2" fg:w="9"/><text x="0.4114%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (9 samples, 0.73%)</title><rect x="0.1614%" y="613" width="0.7264%" height="15" fill="rgb(214,56,3)" fg:x="2" fg:w="9"/><text x="0.4114%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="0.1614%" y="597" width="0.7264%" height="15" fill="rgb(230,69,45)" fg:x="2" fg:w="9"/><text x="0.4114%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="0.8071%" y="581" width="0.0807%" height="15" fill="rgb(224,201,50)" fg:x="10" fg:w="1"/><text x="1.0571%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorageFactory as engine::storage::EntityStorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="0.8878%" y="645" width="0.0807%" height="15" fill="rgb(217,228,18)" fg:x="11" fg:w="1"/><text x="1.1378%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="0.8878%" y="629" width="0.0807%" height="15" fill="rgb(239,33,44)" fg:x="11" fg:w="1"/><text x="1.1378%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="0.9685%" y="597" width="0.2421%" height="15" fill="rgb(248,210,23)" fg:x="12" fg:w="3"/><text x="1.2185%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.1299%" y="581" width="0.0807%" height="15" fill="rgb(253,135,8)" fg:x="14" fg:w="1"/><text x="1.3799%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="1.4528%" y="469" width="0.0807%" height="15" fill="rgb(217,98,21)" fg:x="18" fg:w="1"/><text x="1.7028%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.4528%" y="453" width="0.0807%" height="15" fill="rgb(253,130,21)" fg:x="18" fg:w="1"/><text x="1.7028%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="1.4528%" y="437" width="0.0807%" height="15" fill="rgb(207,81,54)" fg:x="18" fg:w="1"/><text x="1.7028%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="1.4528%" y="517" width="0.1614%" height="15" fill="rgb(232,48,33)" fg:x="18" fg:w="2"/><text x="1.7028%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="1.4528%" y="501" width="0.1614%" height="15" fill="rgb(211,9,35)" fg:x="18" fg:w="2"/><text x="1.7028%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="1.4528%" y="485" width="0.1614%" height="15" fill="rgb(205,152,21)" fg:x="18" fg:w="2"/><text x="1.7028%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.5335%" y="469" width="0.0807%" height="15" fill="rgb(249,21,27)" fg:x="19" fg:w="1"/><text x="1.7835%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.5335%" y="453" width="0.0807%" height="15" fill="rgb(252,29,24)" fg:x="19" fg:w="1"/><text x="1.7835%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.6142%" y="485" width="0.0807%" height="15" fill="rgb(230,130,50)" fg:x="20" fg:w="1"/><text x="1.8642%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.6142%" y="469" width="0.0807%" height="15" fill="rgb(239,144,14)" fg:x="20" fg:w="1"/><text x="1.8642%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.56%)</title><rect x="1.2107%" y="581" width="0.5650%" height="15" fill="rgb(227,111,50)" fg:x="15" fg:w="7"/><text x="1.4607%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.56%)</title><rect x="1.2107%" y="565" width="0.5650%" height="15" fill="rgb(254,84,20)" fg:x="15" fg:w="7"/><text x="1.4607%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="1.2914%" y="549" width="0.4843%" height="15" fill="rgb(232,90,48)" fg:x="16" fg:w="6"/><text x="1.5414%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="1.2914%" y="533" width="0.4843%" height="15" fill="rgb(253,63,47)" fg:x="16" fg:w="6"/><text x="1.5414%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="1.6142%" y="517" width="0.1614%" height="15" fill="rgb(251,146,35)" fg:x="20" fg:w="2"/><text x="1.8642%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="1.6142%" y="501" width="0.1614%" height="15" fill="rgb(229,192,35)" fg:x="20" fg:w="2"/><text x="1.8642%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="1.6949%" y="485" width="0.0807%" height="15" fill="rgb(225,68,9)" fg:x="21" fg:w="1"/><text x="1.9449%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.6949%" y="469" width="0.0807%" height="15" fill="rgb(214,97,34)" fg:x="21" fg:w="1"/><text x="1.9449%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.6949%" y="453" width="0.0807%" height="15" fill="rgb(253,31,26)" fg:x="21" fg:w="1"/><text x="1.9449%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.6949%" y="437" width="0.0807%" height="15" fill="rgb(225,151,47)" fg:x="21" fg:w="1"/><text x="1.9449%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="1.7756%" y="533" width="0.0807%" height="15" fill="rgb(206,185,9)" fg:x="22" fg:w="1"/><text x="2.0256%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="1.7756%" y="517" width="0.0807%" height="15" fill="rgb(249,65,17)" fg:x="22" fg:w="1"/><text x="2.0256%" y="527.50"></text></g><g><title>engine::internal::Entities::prepare_entity (13 samples, 1.05%)</title><rect x="0.9685%" y="613" width="1.0492%" height="15" fill="rgb(220,110,10)" fg:x="12" fg:w="13"/><text x="1.2185%" y="623.50"></text></g><g><title>kernel::model::deserialize_entity (10 samples, 0.81%)</title><rect x="1.2107%" y="597" width="0.8071%" height="15" fill="rgb(222,198,49)" fg:x="15" fg:w="10"/><text x="1.4607%" y="607.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="1.7756%" y="581" width="0.2421%" height="15" fill="rgb(239,81,13)" fg:x="22" fg:w="3"/><text x="2.0256%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="1.7756%" y="565" width="0.2421%" height="15" fill="rgb(216,128,11)" fg:x="22" fg:w="3"/><text x="2.0256%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="1.7756%" y="549" width="0.2421%" height="15" fill="rgb(247,156,8)" fg:x="22" fg:w="3"/><text x="2.0256%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="1.8563%" y="533" width="0.1614%" height="15" fill="rgb(219,173,1)" fg:x="23" fg:w="2"/><text x="2.1063%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.0178%" y="325" width="0.0807%" height="15" fill="rgb(227,42,24)" fg:x="25" fg:w="1"/><text x="2.2678%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.0178%" y="309" width="0.0807%" height="15" fill="rgb(253,219,50)" fg:x="25" fg:w="1"/><text x="2.2678%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (15 samples, 1.21%)</title><rect x="0.9685%" y="629" width="1.2107%" height="15" fill="rgb(215,191,54)" fg:x="12" fg:w="15"/><text x="1.2185%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="2.0178%" y="613" width="0.1614%" height="15" fill="rgb(238,83,12)" fg:x="25" fg:w="2"/><text x="2.2678%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="2.0178%" y="597" width="0.1614%" height="15" fill="rgb(205,124,9)" fg:x="25" fg:w="2"/><text x="2.2678%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="2.0178%" y="581" width="0.1614%" height="15" fill="rgb(253,174,7)" fg:x="25" fg:w="2"/><text x="2.2678%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="2.0178%" y="565" width="0.1614%" height="15" fill="rgb(206,134,49)" fg:x="25" fg:w="2"/><text x="2.2678%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="2.0178%" y="549" width="0.1614%" height="15" fill="rgb(221,89,20)" fg:x="25" fg:w="2"/><text x="2.2678%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="2.0178%" y="533" width="0.1614%" height="15" fill="rgb(240,205,13)" fg:x="25" fg:w="2"/><text x="2.2678%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="2.0178%" y="517" width="0.1614%" height="15" fill="rgb(237,174,32)" fg:x="25" fg:w="2"/><text x="2.2678%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="2.0178%" y="501" width="0.1614%" height="15" fill="rgb(226,12,15)" fg:x="25" fg:w="2"/><text x="2.2678%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="2.0178%" y="485" width="0.1614%" height="15" fill="rgb(245,160,52)" fg:x="25" fg:w="2"/><text x="2.2678%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="2.0178%" y="469" width="0.1614%" height="15" fill="rgb(253,80,21)" fg:x="25" fg:w="2"/><text x="2.2678%" y="479.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="2.0178%" y="453" width="0.1614%" height="15" fill="rgb(231,225,22)" fg:x="25" fg:w="2"/><text x="2.2678%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="2.0178%" y="437" width="0.1614%" height="15" fill="rgb(253,185,12)" fg:x="25" fg:w="2"/><text x="2.2678%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="2.0178%" y="421" width="0.1614%" height="15" fill="rgb(234,197,21)" fg:x="25" fg:w="2"/><text x="2.2678%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="2.0178%" y="405" width="0.1614%" height="15" fill="rgb(210,47,30)" fg:x="25" fg:w="2"/><text x="2.2678%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="2.0178%" y="389" width="0.1614%" height="15" fill="rgb(246,139,27)" fg:x="25" fg:w="2"/><text x="2.2678%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="2.0178%" y="373" width="0.1614%" height="15" fill="rgb(226,130,16)" fg:x="25" fg:w="2"/><text x="2.2678%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="2.0178%" y="357" width="0.1614%" height="15" fill="rgb(237,208,20)" fg:x="25" fg:w="2"/><text x="2.2678%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="2.0178%" y="341" width="0.1614%" height="15" fill="rgb(245,186,28)" fg:x="25" fg:w="2"/><text x="2.2678%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.08%)</title><rect x="2.0985%" y="325" width="0.0807%" height="15" fill="rgb(238,105,39)" fg:x="26" fg:w="1"/><text x="2.3485%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.08%)</title><rect x="2.0985%" y="309" width="0.0807%" height="15" fill="rgb(253,228,11)" fg:x="26" fg:w="1"/><text x="2.3485%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="2.1792%" y="629" width="0.1614%" height="15" fill="rgb(224,136,38)" fg:x="27" fg:w="2"/><text x="2.4292%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="2.1792%" y="613" width="0.1614%" height="15" fill="rgb(211,3,25)" fg:x="27" fg:w="2"/><text x="2.4292%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.1792%" y="597" width="0.1614%" height="15" fill="rgb(238,66,34)" fg:x="27" fg:w="2"/><text x="2.4292%" y="607.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="2.3406%" y="629" width="0.0807%" height="15" fill="rgb(223,188,11)" fg:x="29" fg:w="1"/><text x="2.5906%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="2.3406%" y="613" width="0.0807%" height="15" fill="rgb(221,10,35)" fg:x="29" fg:w="1"/><text x="2.5906%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="2.3406%" y="597" width="0.0807%" height="15" fill="rgb(223,18,44)" fg:x="29" fg:w="1"/><text x="2.5906%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="2.3406%" y="581" width="0.0807%" height="15" fill="rgb(220,97,41)" fg:x="29" fg:w="1"/><text x="2.5906%" y="591.50"></text></g><g><title>engine::internal::EntityMap::new (1 samples, 0.08%)</title><rect x="2.4213%" y="629" width="0.0807%" height="15" fill="rgb(206,95,45)" fg:x="30" fg:w="1"/><text x="2.6713%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.5827%" y="581" width="0.0807%" height="15" fill="rgb(209,96,13)" fg:x="32" fg:w="1"/><text x="2.8327%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.5827%" y="565" width="0.0807%" height="15" fill="rgb(237,39,34)" fg:x="32" fg:w="1"/><text x="2.8327%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.5827%" y="549" width="0.0807%" height="15" fill="rgb(213,49,47)" fg:x="32" fg:w="1"/><text x="2.8327%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="2.5827%" y="533" width="0.0807%" height="15" fill="rgb(205,107,27)" fg:x="32" fg:w="1"/><text x="2.8327%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.5827%" y="517" width="0.0807%" height="15" fill="rgb(212,142,9)" fg:x="32" fg:w="1"/><text x="2.8327%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.5827%" y="501" width="0.0807%" height="15" fill="rgb(226,182,0)" fg:x="32" fg:w="1"/><text x="2.8327%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="2.5827%" y="485" width="0.0807%" height="15" fill="rgb(231,3,53)" fg:x="32" fg:w="1"/><text x="2.8327%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.5827%" y="469" width="0.0807%" height="15" fill="rgb(246,111,28)" fg:x="32" fg:w="1"/><text x="2.8327%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.5827%" y="453" width="0.0807%" height="15" fill="rgb(254,183,7)" fg:x="32" fg:w="1"/><text x="2.8327%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.5827%" y="437" width="0.0807%" height="15" fill="rgb(247,177,28)" fg:x="32" fg:w="1"/><text x="2.8327%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.5827%" y="421" width="0.0807%" height="15" fill="rgb(244,43,1)" fg:x="32" fg:w="1"/><text x="2.8327%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.5827%" y="405" width="0.0807%" height="15" fill="rgb(207,2,35)" fg:x="32" fg:w="1"/><text x="2.8327%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.5827%" y="389" width="0.0807%" height="15" fill="rgb(213,83,22)" fg:x="32" fg:w="1"/><text x="2.8327%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="2.5827%" y="373" width="0.0807%" height="15" fill="rgb(246,212,13)" fg:x="32" fg:w="1"/><text x="2.8327%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.5827%" y="357" width="0.0807%" height="15" fill="rgb(213,127,46)" fg:x="32" fg:w="1"/><text x="2.8327%" y="367.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="2.6634%" y="565" width="0.1614%" height="15" fill="rgb(219,215,39)" fg:x="33" fg:w="2"/><text x="2.9134%" y="575.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="2.6634%" y="549" width="0.1614%" height="15" fill="rgb(227,99,17)" fg:x="33" fg:w="2"/><text x="2.9134%" y="559.50"></text></g><g><title>_IO_setb (1 samples, 0.08%)</title><rect x="2.7441%" y="533" width="0.0807%" height="15" fill="rgb(208,155,18)" fg:x="34" fg:w="1"/><text x="2.9941%" y="543.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (31 samples, 2.50%)</title><rect x="0.8878%" y="661" width="2.5020%" height="15" fill="rgb(223,204,38)" fg:x="11" fg:w="31"/><text x="1.1378%" y="671.50">&lt;e..</text></g><g><title>engine::session::Session::new (30 samples, 2.42%)</title><rect x="0.9685%" y="645" width="2.4213%" height="15" fill="rgb(212,114,21)" fg:x="12" fg:w="30"/><text x="1.2185%" y="655.50">en..</text></g><g><title>engine::session::Session::initialize (11 samples, 0.89%)</title><rect x="2.5020%" y="629" width="0.8878%" height="15" fill="rgb(250,74,13)" fg:x="31" fg:w="11"/><text x="2.7520%" y="639.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (11 samples, 0.89%)</title><rect x="2.5020%" y="613" width="0.8878%" height="15" fill="rgb(234,7,1)" fg:x="31" fg:w="11"/><text x="2.7520%" y="623.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (11 samples, 0.89%)</title><rect x="2.5020%" y="597" width="0.8878%" height="15" fill="rgb(207,138,31)" fg:x="31" fg:w="11"/><text x="2.7520%" y="607.50"></text></g><g><title>libloading::os::unix::Library::open (9 samples, 0.73%)</title><rect x="2.6634%" y="581" width="0.7264%" height="15" fill="rgb(215,186,42)" fg:x="33" fg:w="9"/><text x="2.9134%" y="591.50"></text></g><g><title>dlopen (7 samples, 0.56%)</title><rect x="2.8249%" y="565" width="0.5650%" height="15" fill="rgb(229,205,49)" fg:x="35" fg:w="7"/><text x="3.0749%" y="575.50"></text></g><g><title>_dl_catch_error (7 samples, 0.56%)</title><rect x="2.8249%" y="549" width="0.5650%" height="15" fill="rgb(216,156,32)" fg:x="35" fg:w="7"/><text x="3.0749%" y="559.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="2.9056%" y="533" width="0.4843%" height="15" fill="rgb(238,7,21)" fg:x="36" fg:w="6"/><text x="3.1556%" y="543.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="2.9056%" y="517" width="0.4843%" height="15" fill="rgb(249,190,22)" fg:x="36" fg:w="6"/><text x="3.1556%" y="527.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="2.9056%" y="501" width="0.4843%" height="15" fill="rgb(253,51,31)" fg:x="36" fg:w="6"/><text x="3.1556%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.4705%" y="645" width="0.0807%" height="15" fill="rgb(237,90,54)" fg:x="43" fg:w="1"/><text x="3.7205%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.4705%" y="629" width="0.0807%" height="15" fill="rgb(250,214,33)" fg:x="43" fg:w="1"/><text x="3.7205%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="3.5513%" y="645" width="0.0807%" height="15" fill="rgb(237,10,49)" fg:x="44" fg:w="1"/><text x="3.8013%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.5513%" y="629" width="0.0807%" height="15" fill="rgb(241,56,36)" fg:x="44" fg:w="1"/><text x="3.8013%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="3.6320%" y="645" width="0.0807%" height="15" fill="rgb(227,164,12)" fg:x="45" fg:w="1"/><text x="3.8820%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="3.7127%" y="613" width="0.0807%" height="15" fill="rgb(249,149,35)" fg:x="46" fg:w="1"/><text x="3.9627%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.7934%" y="613" width="0.0807%" height="15" fill="rgb(238,227,50)" fg:x="47" fg:w="1"/><text x="4.0434%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="3.7934%" y="597" width="0.0807%" height="15" fill="rgb(235,102,45)" fg:x="47" fg:w="1"/><text x="4.0434%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.7934%" y="581" width="0.0807%" height="15" fill="rgb(211,10,38)" fg:x="47" fg:w="1"/><text x="4.0434%" y="591.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="3.8741%" y="613" width="0.0807%" height="15" fill="rgb(219,77,48)" fg:x="48" fg:w="1"/><text x="4.1241%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="3.8741%" y="597" width="0.0807%" height="15" fill="rgb(246,6,15)" fg:x="48" fg:w="1"/><text x="4.1241%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="3.8741%" y="581" width="0.0807%" height="15" fill="rgb(207,220,2)" fg:x="48" fg:w="1"/><text x="4.1241%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.8741%" y="565" width="0.0807%" height="15" fill="rgb(242,48,14)" fg:x="48" fg:w="1"/><text x="4.1241%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.8741%" y="549" width="0.0807%" height="15" fill="rgb(218,19,27)" fg:x="48" fg:w="1"/><text x="4.1241%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="3.9548%" y="549" width="0.2421%" height="15" fill="rgb(228,0,35)" fg:x="49" fg:w="3"/><text x="4.2048%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.0355%" y="533" width="0.1614%" height="15" fill="rgb(244,142,54)" fg:x="50" fg:w="2"/><text x="4.2855%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="3.9548%" y="565" width="0.4036%" height="15" fill="rgb(243,217,40)" fg:x="49" fg:w="5"/><text x="4.2048%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.1969%" y="549" width="0.1614%" height="15" fill="rgb(207,114,16)" fg:x="52" fg:w="2"/><text x="4.4469%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.1969%" y="533" width="0.1614%" height="15" fill="rgb(224,33,25)" fg:x="52" fg:w="2"/><text x="4.4469%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.1969%" y="517" width="0.1614%" height="15" fill="rgb(230,93,54)" fg:x="52" fg:w="2"/><text x="4.4469%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="4.4391%" y="549" width="0.0807%" height="15" fill="rgb(224,56,24)" fg:x="55" fg:w="1"/><text x="4.6891%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.4391%" y="533" width="0.0807%" height="15" fill="rgb(235,189,50)" fg:x="55" fg:w="1"/><text x="4.6891%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.4391%" y="517" width="0.0807%" height="15" fill="rgb(242,173,8)" fg:x="55" fg:w="1"/><text x="4.6891%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.4391%" y="501" width="0.0807%" height="15" fill="rgb(209,206,10)" fg:x="55" fg:w="1"/><text x="4.6891%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="4.5198%" y="549" width="0.2421%" height="15" fill="rgb(213,182,44)" fg:x="56" fg:w="3"/><text x="4.7698%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.6812%" y="533" width="0.0807%" height="15" fill="rgb(243,51,15)" fg:x="58" fg:w="1"/><text x="4.9312%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.6812%" y="517" width="0.0807%" height="15" fill="rgb(241,13,14)" fg:x="58" fg:w="1"/><text x="4.9312%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.6812%" y="501" width="0.0807%" height="15" fill="rgb(239,147,24)" fg:x="58" fg:w="1"/><text x="4.9312%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.6812%" y="485" width="0.0807%" height="15" fill="rgb(223,129,16)" fg:x="58" fg:w="1"/><text x="4.9312%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.6812%" y="469" width="0.0807%" height="15" fill="rgb(209,169,13)" fg:x="58" fg:w="1"/><text x="4.9312%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.6812%" y="453" width="0.0807%" height="15" fill="rgb(235,159,41)" fg:x="58" fg:w="1"/><text x="4.9312%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.7619%" y="501" width="0.0807%" height="15" fill="rgb(223,219,48)" fg:x="59" fg:w="1"/><text x="5.0119%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.7619%" y="485" width="0.0807%" height="15" fill="rgb(236,80,13)" fg:x="59" fg:w="1"/><text x="5.0119%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.7619%" y="469" width="0.0807%" height="15" fill="rgb(213,5,6)" fg:x="59" fg:w="1"/><text x="5.0119%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="4.7619%" y="533" width="0.1614%" height="15" fill="rgb(205,59,21)" fg:x="59" fg:w="2"/><text x="5.0119%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="4.7619%" y="517" width="0.1614%" height="15" fill="rgb(247,137,35)" fg:x="59" fg:w="2"/><text x="5.0119%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="4.8426%" y="501" width="0.0807%" height="15" fill="rgb(242,208,28)" fg:x="60" fg:w="1"/><text x="5.0926%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.8426%" y="485" width="0.0807%" height="15" fill="rgb(245,62,25)" fg:x="60" fg:w="1"/><text x="5.0926%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="4.9233%" y="533" width="0.2421%" height="15" fill="rgb(233,99,54)" fg:x="61" fg:w="3"/><text x="5.1733%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="4.9233%" y="517" width="0.2421%" height="15" fill="rgb(213,10,37)" fg:x="61" fg:w="3"/><text x="5.1733%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.0847%" y="501" width="0.0807%" height="15" fill="rgb(235,143,30)" fg:x="63" fg:w="1"/><text x="5.3347%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="5.1655%" y="517" width="0.0807%" height="15" fill="rgb(250,146,33)" fg:x="64" fg:w="1"/><text x="5.4155%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.45%)</title><rect x="3.9548%" y="581" width="1.4528%" height="15" fill="rgb(226,198,42)" fg:x="49" fg:w="18"/><text x="4.2048%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="4.3584%" y="565" width="1.0492%" height="15" fill="rgb(222,55,6)" fg:x="54" fg:w="13"/><text x="4.6084%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.65%)</title><rect x="4.7619%" y="549" width="0.6457%" height="15" fill="rgb(213,224,31)" fg:x="59" fg:w="8"/><text x="5.0119%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="5.1655%" y="533" width="0.2421%" height="15" fill="rgb(226,103,35)" fg:x="64" fg:w="3"/><text x="5.4155%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.2462%" y="517" width="0.1614%" height="15" fill="rgb(205,66,45)" fg:x="65" fg:w="2"/><text x="5.4962%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.4076%" y="533" width="0.0807%" height="15" fill="rgb(226,51,42)" fg:x="67" fg:w="1"/><text x="5.6576%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.4076%" y="517" width="0.0807%" height="15" fill="rgb(206,69,1)" fg:x="67" fg:w="1"/><text x="5.6576%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.4883%" y="517" width="0.0807%" height="15" fill="rgb(213,228,47)" fg:x="68" fg:w="1"/><text x="5.7383%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="5.5690%" y="517" width="0.0807%" height="15" fill="rgb(224,204,18)" fg:x="69" fg:w="1"/><text x="5.8190%" y="527.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="5.6497%" y="501" width="0.2421%" height="15" fill="rgb(253,187,47)" fg:x="70" fg:w="3"/><text x="5.8997%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="5.8918%" y="501" width="0.0807%" height="15" fill="rgb(232,61,2)" fg:x="73" fg:w="1"/><text x="6.1418%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="5.8918%" y="485" width="0.0807%" height="15" fill="rgb(213,132,35)" fg:x="73" fg:w="1"/><text x="6.1418%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="5.8918%" y="469" width="0.0807%" height="15" fill="rgb(247,33,21)" fg:x="73" fg:w="1"/><text x="6.1418%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="5.4076%" y="581" width="0.6457%" height="15" fill="rgb(233,71,46)" fg:x="67" fg:w="8"/><text x="5.6576%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.65%)</title><rect x="5.4076%" y="565" width="0.6457%" height="15" fill="rgb(222,173,43)" fg:x="67" fg:w="8"/><text x="5.6576%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="5.4076%" y="549" width="0.6457%" height="15" fill="rgb(249,218,47)" fg:x="67" fg:w="8"/><text x="5.6576%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="5.4883%" y="533" width="0.5650%" height="15" fill="rgb(254,185,48)" fg:x="68" fg:w="7"/><text x="5.7383%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="5.6497%" y="517" width="0.4036%" height="15" fill="rgb(252,165,50)" fg:x="70" fg:w="5"/><text x="5.8997%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="5.9726%" y="501" width="0.0807%" height="15" fill="rgb(206,219,6)" fg:x="74" fg:w="1"/><text x="6.2226%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.1340%" y="533" width="0.0807%" height="15" fill="rgb(212,212,45)" fg:x="76" fg:w="1"/><text x="6.3840%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="6.2147%" y="517" width="0.0807%" height="15" fill="rgb(221,31,9)" fg:x="77" fg:w="1"/><text x="6.4647%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="6.2147%" y="533" width="0.2421%" height="15" fill="rgb(234,198,39)" fg:x="77" fg:w="3"/><text x="6.4647%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="6.2954%" y="517" width="0.1614%" height="15" fill="rgb(252,145,46)" fg:x="78" fg:w="2"/><text x="6.5454%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="6.2954%" y="501" width="0.1614%" height="15" fill="rgb(237,149,0)" fg:x="78" fg:w="2"/><text x="6.5454%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.3761%" y="485" width="0.0807%" height="15" fill="rgb(229,65,5)" fg:x="79" fg:w="1"/><text x="6.6261%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="6.4568%" y="501" width="0.1614%" height="15" fill="rgb(235,60,36)" fg:x="80" fg:w="2"/><text x="6.7068%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (4 samples, 0.32%)</title><rect x="6.4568%" y="533" width="0.3228%" height="15" fill="rgb(222,47,18)" fg:x="80" fg:w="4"/><text x="6.7068%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="6.4568%" y="517" width="0.3228%" height="15" fill="rgb(235,114,22)" fg:x="80" fg:w="4"/><text x="6.7068%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="6.6182%" y="501" width="0.1614%" height="15" fill="rgb(209,167,11)" fg:x="82" fg:w="2"/><text x="6.8682%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="6.6990%" y="485" width="0.0807%" height="15" fill="rgb(251,73,18)" fg:x="83" fg:w="1"/><text x="6.9490%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.0218%" y="453" width="0.0807%" height="15" fill="rgb(217,60,17)" fg:x="87" fg:w="1"/><text x="7.2718%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.0218%" y="437" width="0.0807%" height="15" fill="rgb(224,36,37)" fg:x="87" fg:w="1"/><text x="7.2718%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="7.0218%" y="485" width="0.1614%" height="15" fill="rgb(211,21,32)" fg:x="87" fg:w="2"/><text x="7.2718%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="7.0218%" y="469" width="0.1614%" height="15" fill="rgb(231,55,48)" fg:x="87" fg:w="2"/><text x="7.2718%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.1025%" y="453" width="0.0807%" height="15" fill="rgb(227,42,18)" fg:x="88" fg:w="1"/><text x="7.3525%" y="463.50"></text></g><g><title>kernel::compare::any_entity_changes (17 samples, 1.37%)</title><rect x="6.0533%" y="581" width="1.3721%" height="15" fill="rgb(217,2,27)" fg:x="75" fg:w="17"/><text x="6.3033%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (17 samples, 1.37%)</title><rect x="6.0533%" y="565" width="1.3721%" height="15" fill="rgb(251,138,23)" fg:x="75" fg:w="17"/><text x="6.3033%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.37%)</title><rect x="6.0533%" y="549" width="1.3721%" height="15" fill="rgb(226,184,11)" fg:x="75" fg:w="17"/><text x="6.3033%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.65%)</title><rect x="6.7797%" y="533" width="0.6457%" height="15" fill="rgb(242,142,12)" fg:x="84" fg:w="8"/><text x="7.0297%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (5 samples, 0.40%)</title><rect x="7.0218%" y="517" width="0.4036%" height="15" fill="rgb(234,187,18)" fg:x="87" fg:w="5"/><text x="7.2718%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="7.0218%" y="501" width="0.4036%" height="15" fill="rgb(237,44,42)" fg:x="87" fg:w="5"/><text x="7.2718%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="7.1832%" y="485" width="0.2421%" height="15" fill="rgb(211,90,23)" fg:x="89" fg:w="3"/><text x="7.4332%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="7.1832%" y="469" width="0.2421%" height="15" fill="rgb(207,81,18)" fg:x="89" fg:w="3"/><text x="7.4332%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="7.1832%" y="453" width="0.2421%" height="15" fill="rgb(222,107,28)" fg:x="89" fg:w="3"/><text x="7.4332%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="7.2639%" y="437" width="0.1614%" height="15" fill="rgb(237,83,52)" fg:x="90" fg:w="2"/><text x="7.5139%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="7.2639%" y="421" width="0.1614%" height="15" fill="rgb(208,67,11)" fg:x="90" fg:w="2"/><text x="7.5139%" y="431.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (44 samples, 3.55%)</title><rect x="3.9548%" y="613" width="3.5513%" height="15" fill="rgb(249,157,49)" fg:x="49" fg:w="44"/><text x="4.2048%" y="623.50">engi..</text></g><g><title>engine::session::Session::check_for_changes (44 samples, 3.55%)</title><rect x="3.9548%" y="597" width="3.5513%" height="15" fill="rgb(243,200,1)" fg:x="49" fg:w="44"/><text x="4.2048%" y="607.50">engi..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="7.4253%" y="581" width="0.0807%" height="15" fill="rgb(225,162,37)" fg:x="92" fg:w="1"/><text x="7.6753%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.4253%" y="565" width="0.0807%" height="15" fill="rgb(242,92,13)" fg:x="92" fg:w="1"/><text x="7.6753%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="7.5061%" y="581" width="0.0807%" height="15" fill="rgb(220,43,36)" fg:x="93" fg:w="1"/><text x="7.7561%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.5061%" y="565" width="0.0807%" height="15" fill="rgb(213,165,48)" fg:x="93" fg:w="1"/><text x="7.7561%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.5061%" y="549" width="0.0807%" height="15" fill="rgb(227,200,9)" fg:x="93" fg:w="1"/><text x="7.7561%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.5061%" y="533" width="0.0807%" height="15" fill="rgb(221,222,28)" fg:x="93" fg:w="1"/><text x="7.7561%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.5061%" y="517" width="0.0807%" height="15" fill="rgb(223,142,26)" fg:x="93" fg:w="1"/><text x="7.7561%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.5061%" y="501" width="0.0807%" height="15" fill="rgb(243,46,9)" fg:x="93" fg:w="1"/><text x="7.7561%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.5061%" y="485" width="0.0807%" height="15" fill="rgb(250,56,11)" fg:x="93" fg:w="1"/><text x="7.7561%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.5061%" y="469" width="0.0807%" height="15" fill="rgb(229,113,5)" fg:x="93" fg:w="1"/><text x="7.7561%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="7.5061%" y="453" width="0.0807%" height="15" fill="rgb(244,108,28)" fg:x="93" fg:w="1"/><text x="7.7561%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="7.5061%" y="437" width="0.0807%" height="15" fill="rgb(242,119,50)" fg:x="93" fg:w="1"/><text x="7.7561%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="7.5061%" y="421" width="0.0807%" height="15" fill="rgb(224,164,23)" fg:x="93" fg:w="1"/><text x="7.7561%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="7.5061%" y="405" width="0.0807%" height="15" fill="rgb(214,227,44)" fg:x="93" fg:w="1"/><text x="7.7561%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.5061%" y="389" width="0.0807%" height="15" fill="rgb(238,202,4)" fg:x="93" fg:w="1"/><text x="7.7561%" y="399.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="7.5061%" y="613" width="0.1614%" height="15" fill="rgb(213,190,30)" fg:x="93" fg:w="2"/><text x="7.7561%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="7.5061%" y="597" width="0.1614%" height="15" fill="rgb(239,15,2)" fg:x="93" fg:w="2"/><text x="7.7561%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="7.5868%" y="581" width="0.0807%" height="15" fill="rgb(249,229,4)" fg:x="94" fg:w="1"/><text x="7.8368%" y="591.50"></text></g><g><title>engine::session::Session::flush (51 samples, 4.12%)</title><rect x="3.7127%" y="645" width="4.1162%" height="15" fill="rgb(239,75,44)" fg:x="46" fg:w="51"/><text x="3.9627%" y="655.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (51 samples, 4.12%)</title><rect x="3.7127%" y="629" width="4.1162%" height="15" fill="rgb(251,206,23)" fg:x="46" fg:w="51"/><text x="3.9627%" y="639.50">engi..</text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="7.6675%" y="613" width="0.1614%" height="15" fill="rgb(215,208,0)" fg:x="95" fg:w="2"/><text x="7.9175%" y="623.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="7.6675%" y="597" width="0.1614%" height="15" fill="rgb(230,75,50)" fg:x="95" fg:w="2"/><text x="7.9175%" y="607.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="7.6675%" y="581" width="0.1614%" height="15" fill="rgb(246,180,39)" fg:x="95" fg:w="2"/><text x="7.9175%" y="591.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="7.6675%" y="565" width="0.1614%" height="15" fill="rgb(249,175,24)" fg:x="95" fg:w="2"/><text x="7.9175%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="7.6675%" y="549" width="0.1614%" height="15" fill="rgb(247,176,22)" fg:x="95" fg:w="2"/><text x="7.9175%" y="559.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="7.6675%" y="533" width="0.1614%" height="15" fill="rgb(241,100,24)" fg:x="95" fg:w="2"/><text x="7.9175%" y="543.50"></text></g><g><title>getenv (2 samples, 0.16%)</title><rect x="7.6675%" y="517" width="0.1614%" height="15" fill="rgb(233,4,35)" fg:x="95" fg:w="2"/><text x="7.9175%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="7.8289%" y="629" width="0.0807%" height="15" fill="rgb(211,164,46)" fg:x="97" fg:w="1"/><text x="8.0789%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="7.8289%" y="613" width="0.0807%" height="15" fill="rgb(242,99,53)" fg:x="97" fg:w="1"/><text x="8.0789%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.8289%" y="597" width="0.0807%" height="15" fill="rgb(243,45,33)" fg:x="97" fg:w="1"/><text x="8.0789%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.8289%" y="581" width="0.0807%" height="15" fill="rgb(217,55,21)" fg:x="97" fg:w="1"/><text x="8.0789%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.8289%" y="565" width="0.0807%" height="15" fill="rgb(245,145,46)" fg:x="97" fg:w="1"/><text x="8.0789%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.8289%" y="549" width="0.0807%" height="15" fill="rgb(215,112,45)" fg:x="97" fg:w="1"/><text x="8.0789%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.8289%" y="533" width="0.0807%" height="15" fill="rgb(228,104,16)" fg:x="97" fg:w="1"/><text x="8.0789%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.8289%" y="517" width="0.0807%" height="15" fill="rgb(239,186,38)" fg:x="97" fg:w="1"/><text x="8.0789%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.8289%" y="501" width="0.0807%" height="15" fill="rgb(228,38,35)" fg:x="97" fg:w="1"/><text x="8.0789%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="7.8289%" y="485" width="0.0807%" height="15" fill="rgb(251,42,40)" fg:x="97" fg:w="1"/><text x="8.0789%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="7.8289%" y="469" width="0.0807%" height="15" fill="rgb(210,51,19)" fg:x="97" fg:w="1"/><text x="8.0789%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="7.8289%" y="453" width="0.0807%" height="15" fill="rgb(236,94,42)" fg:x="97" fg:w="1"/><text x="8.0789%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="7.8289%" y="437" width="0.0807%" height="15" fill="rgb(239,167,16)" fg:x="97" fg:w="1"/><text x="8.0789%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.8289%" y="421" width="0.0807%" height="15" fill="rgb(252,175,31)" fg:x="97" fg:w="1"/><text x="8.0789%" y="431.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="7.9096%" y="613" width="0.2421%" height="15" fill="rgb(206,166,30)" fg:x="98" fg:w="3"/><text x="8.1596%" y="623.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.24%)</title><rect x="7.9096%" y="597" width="0.2421%" height="15" fill="rgb(206,209,37)" fg:x="98" fg:w="3"/><text x="8.1596%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (3 samples, 0.24%)</title><rect x="7.9096%" y="581" width="0.2421%" height="15" fill="rgb(226,91,4)" fg:x="98" fg:w="3"/><text x="8.1596%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="7.9096%" y="565" width="0.2421%" height="15" fill="rgb(222,167,0)" fg:x="98" fg:w="3"/><text x="8.1596%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="7.9096%" y="549" width="0.2421%" height="15" fill="rgb(211,70,14)" fg:x="98" fg:w="3"/><text x="8.1596%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="7.9096%" y="533" width="0.2421%" height="15" fill="rgb(214,84,42)" fg:x="98" fg:w="3"/><text x="8.1596%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="7.9903%" y="517" width="0.1614%" height="15" fill="rgb(235,157,37)" fg:x="99" fg:w="2"/><text x="8.2403%" y="527.50"></text></g><g><title>plugins_core::build::Build::holding (5 samples, 0.40%)</title><rect x="7.8289%" y="645" width="0.4036%" height="15" fill="rgb(225,13,6)" fg:x="97" fg:w="5"/><text x="8.0789%" y="655.50"></text></g><g><title>plugins_core::tools::set_container (4 samples, 0.32%)</title><rect x="7.9096%" y="629" width="0.3228%" height="15" fill="rgb(205,202,1)" fg:x="98" fg:w="4"/><text x="8.1596%" y="639.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="8.1517%" y="613" width="0.0807%" height="15" fill="rgb(232,195,26)" fg:x="101" fg:w="1"/><text x="8.4017%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="8.1517%" y="597" width="0.0807%" height="15" fill="rgb(208,102,26)" fg:x="101" fg:w="1"/><text x="8.4017%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="8.1517%" y="581" width="0.0807%" height="15" fill="rgb(215,41,39)" fg:x="101" fg:w="1"/><text x="8.4017%" y="591.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="8.1517%" y="565" width="0.0807%" height="15" fill="rgb(247,139,11)" fg:x="101" fg:w="1"/><text x="8.4017%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="8.1517%" y="549" width="0.0807%" height="15" fill="rgb(243,99,6)" fg:x="101" fg:w="1"/><text x="8.4017%" y="559.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="8.1517%" y="533" width="0.0807%" height="15" fill="rgb(230,168,48)" fg:x="101" fg:w="1"/><text x="8.4017%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="8.1517%" y="517" width="0.0807%" height="15" fill="rgb(238,227,13)" fg:x="101" fg:w="1"/><text x="8.4017%" y="527.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="8.1517%" y="501" width="0.0807%" height="15" fill="rgb(209,109,13)" fg:x="101" fg:w="1"/><text x="8.4017%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="8.1517%" y="485" width="0.0807%" height="15" fill="rgb(228,195,1)" fg:x="101" fg:w="1"/><text x="8.4017%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.1517%" y="469" width="0.0807%" height="15" fill="rgb(230,218,0)" fg:x="101" fg:w="1"/><text x="8.4017%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.1517%" y="453" width="0.0807%" height="15" fill="rgb(206,1,45)" fg:x="101" fg:w="1"/><text x="8.4017%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.1517%" y="437" width="0.0807%" height="15" fill="rgb(209,124,26)" fg:x="101" fg:w="1"/><text x="8.4017%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.1517%" y="421" width="0.0807%" height="15" fill="rgb(220,59,8)" fg:x="101" fg:w="1"/><text x="8.4017%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.1517%" y="405" width="0.0807%" height="15" fill="rgb(251,41,37)" fg:x="101" fg:w="1"/><text x="8.4017%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.1517%" y="389" width="0.0807%" height="15" fill="rgb(239,152,21)" fg:x="101" fg:w="1"/><text x="8.4017%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.1517%" y="373" width="0.0807%" height="15" fill="rgb(226,32,1)" fg:x="101" fg:w="1"/><text x="8.4017%" y="383.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="8.2324%" y="645" width="0.0807%" height="15" fill="rgb(230,154,36)" fg:x="102" fg:w="1"/><text x="8.4824%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="8.2324%" y="629" width="0.0807%" height="15" fill="rgb(208,228,43)" fg:x="102" fg:w="1"/><text x="8.4824%" y="639.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="8.2324%" y="613" width="0.0807%" height="15" fill="rgb(214,203,3)" fg:x="102" fg:w="1"/><text x="8.4824%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.2324%" y="597" width="0.0807%" height="15" fill="rgb(207,149,29)" fg:x="102" fg:w="1"/><text x="8.4824%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="8.2324%" y="581" width="0.0807%" height="15" fill="rgb(250,105,7)" fg:x="102" fg:w="1"/><text x="8.4824%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="8.3132%" y="629" width="0.0807%" height="15" fill="rgb(232,222,16)" fg:x="103" fg:w="1"/><text x="8.5632%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="8.3132%" y="613" width="0.0807%" height="15" fill="rgb(209,32,24)" fg:x="103" fg:w="1"/><text x="8.5632%" y="623.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="8.3132%" y="597" width="0.0807%" height="15" fill="rgb(225,13,6)" fg:x="103" fg:w="1"/><text x="8.5632%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.3132%" y="581" width="0.0807%" height="15" fill="rgb(245,226,26)" fg:x="103" fg:w="1"/><text x="8.5632%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.3132%" y="565" width="0.0807%" height="15" fill="rgb(229,178,27)" fg:x="103" fg:w="1"/><text x="8.5632%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.3132%" y="549" width="0.0807%" height="15" fill="rgb(205,227,28)" fg:x="103" fg:w="1"/><text x="8.5632%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.3132%" y="533" width="0.0807%" height="15" fill="rgb(210,191,45)" fg:x="103" fg:w="1"/><text x="8.5632%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.3132%" y="517" width="0.0807%" height="15" fill="rgb(206,124,16)" fg:x="103" fg:w="1"/><text x="8.5632%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="8.3132%" y="501" width="0.0807%" height="15" fill="rgb(210,162,0)" fg:x="103" fg:w="1"/><text x="8.5632%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="8.3132%" y="485" width="0.0807%" height="15" fill="rgb(211,54,38)" fg:x="103" fg:w="1"/><text x="8.5632%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.4746%" y="581" width="0.0807%" height="15" fill="rgb(248,192,3)" fg:x="105" fg:w="1"/><text x="8.7246%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.4746%" y="565" width="0.0807%" height="15" fill="rgb(233,187,18)" fg:x="105" fg:w="1"/><text x="8.7246%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="8.5553%" y="581" width="0.1614%" height="15" fill="rgb(237,208,14)" fg:x="106" fg:w="2"/><text x="8.8053%" y="591.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="8.6360%" y="565" width="0.0807%" height="15" fill="rgb(212,77,1)" fg:x="107" fg:w="1"/><text x="8.8860%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.40%)</title><rect x="8.3939%" y="629" width="0.4036%" height="15" fill="rgb(210,163,22)" fg:x="104" fg:w="5"/><text x="8.6439%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="8.3939%" y="613" width="0.4036%" height="15" fill="rgb(250,58,28)" fg:x="104" fg:w="5"/><text x="8.6439%" y="623.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.40%)</title><rect x="8.3939%" y="597" width="0.4036%" height="15" fill="rgb(254,28,41)" fg:x="104" fg:w="5"/><text x="8.6439%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="8.7167%" y="581" width="0.0807%" height="15" fill="rgb(237,162,36)" fg:x="108" fg:w="1"/><text x="8.9667%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="8.7167%" y="565" width="0.0807%" height="15" fill="rgb(232,56,6)" fg:x="108" fg:w="1"/><text x="8.9667%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="8.7167%" y="549" width="0.0807%" height="15" fill="rgb(216,127,42)" fg:x="108" fg:w="1"/><text x="8.9667%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="8.7167%" y="533" width="0.0807%" height="15" fill="rgb(241,69,15)" fg:x="108" fg:w="1"/><text x="8.9667%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="8.7974%" y="629" width="0.0807%" height="15" fill="rgb(227,180,19)" fg:x="109" fg:w="1"/><text x="9.0474%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="8.7974%" y="613" width="0.0807%" height="15" fill="rgb(231,188,29)" fg:x="109" fg:w="1"/><text x="9.0474%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="8.7974%" y="597" width="0.0807%" height="15" fill="rgb(224,176,27)" fg:x="109" fg:w="1"/><text x="9.0474%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.7974%" y="581" width="0.0807%" height="15" fill="rgb(249,214,19)" fg:x="109" fg:w="1"/><text x="9.0474%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="8.9588%" y="597" width="0.0807%" height="15" fill="rgb(240,0,4)" fg:x="111" fg:w="1"/><text x="9.2088%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.0395%" y="581" width="0.0807%" height="15" fill="rgb(233,28,41)" fg:x="112" fg:w="1"/><text x="9.2895%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.0395%" y="565" width="0.0807%" height="15" fill="rgb(220,90,51)" fg:x="112" fg:w="1"/><text x="9.2895%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="9.0395%" y="549" width="0.0807%" height="15" fill="rgb(250,52,22)" fg:x="112" fg:w="1"/><text x="9.2895%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="9.0395%" y="533" width="0.0807%" height="15" fill="rgb(231,152,36)" fg:x="112" fg:w="1"/><text x="9.2895%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="9.0395%" y="517" width="0.0807%" height="15" fill="rgb(250,218,4)" fg:x="112" fg:w="1"/><text x="9.2895%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="9.0395%" y="501" width="0.0807%" height="15" fill="rgb(210,38,21)" fg:x="112" fg:w="1"/><text x="9.2895%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="9.0395%" y="485" width="0.0807%" height="15" fill="rgb(230,75,13)" fg:x="112" fg:w="1"/><text x="9.2895%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.1203%" y="581" width="0.0807%" height="15" fill="rgb(250,68,53)" fg:x="113" fg:w="1"/><text x="9.3703%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="9.0395%" y="597" width="0.2421%" height="15" fill="rgb(250,210,16)" fg:x="112" fg:w="3"/><text x="9.2895%" y="607.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="9.2010%" y="581" width="0.0807%" height="15" fill="rgb(240,132,5)" fg:x="114" fg:w="1"/><text x="9.4510%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="9.2817%" y="581" width="0.0807%" height="15" fill="rgb(222,148,48)" fg:x="115" fg:w="1"/><text x="9.5317%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="9.2817%" y="565" width="0.0807%" height="15" fill="rgb(247,181,24)" fg:x="115" fg:w="1"/><text x="9.5317%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="9.2817%" y="549" width="0.0807%" height="15" fill="rgb(239,5,31)" fg:x="115" fg:w="1"/><text x="9.5317%" y="559.50"></text></g><g><title>engine::identifiers::model::set_gid (2 samples, 0.16%)</title><rect x="9.2817%" y="597" width="0.1614%" height="15" fill="rgb(241,152,38)" fg:x="115" fg:w="2"/><text x="9.5317%" y="607.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="9.3624%" y="581" width="0.0807%" height="15" fill="rgb(246,200,37)" fg:x="116" fg:w="1"/><text x="9.6124%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="9.3624%" y="565" width="0.0807%" height="15" fill="rgb(243,210,26)" fg:x="116" fg:w="1"/><text x="9.6124%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="9.4431%" y="549" width="0.1614%" height="15" fill="rgb(222,22,22)" fg:x="117" fg:w="2"/><text x="9.6931%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="9.6045%" y="549" width="0.1614%" height="15" fill="rgb(208,129,28)" fg:x="119" fg:w="2"/><text x="9.8545%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="9.6045%" y="533" width="0.1614%" height="15" fill="rgb(254,169,28)" fg:x="119" fg:w="2"/><text x="9.8545%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.6045%" y="517" width="0.1614%" height="15" fill="rgb(225,45,17)" fg:x="119" fg:w="2"/><text x="9.8545%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.6852%" y="501" width="0.0807%" height="15" fill="rgb(232,199,2)" fg:x="120" fg:w="1"/><text x="9.9352%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.6852%" y="485" width="0.0807%" height="15" fill="rgb(235,33,40)" fg:x="120" fg:w="1"/><text x="9.9352%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.6852%" y="469" width="0.0807%" height="15" fill="rgb(237,89,50)" fg:x="120" fg:w="1"/><text x="9.9352%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.6852%" y="453" width="0.0807%" height="15" fill="rgb(238,126,5)" fg:x="120" fg:w="1"/><text x="9.9352%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.6852%" y="437" width="0.0807%" height="15" fill="rgb(247,214,42)" fg:x="120" fg:w="1"/><text x="9.9352%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.7659%" y="533" width="0.0807%" height="15" fill="rgb(238,60,45)" fg:x="121" fg:w="1"/><text x="10.0159%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.8467%" y="533" width="0.0807%" height="15" fill="rgb(225,69,44)" fg:x="122" fg:w="1"/><text x="10.0967%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.8467%" y="517" width="0.0807%" height="15" fill="rgb(241,13,44)" fg:x="122" fg:w="1"/><text x="10.0967%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.8467%" y="501" width="0.0807%" height="15" fill="rgb(227,121,22)" fg:x="122" fg:w="1"/><text x="10.0967%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="9.9274%" y="533" width="0.3228%" height="15" fill="rgb(231,160,23)" fg:x="123" fg:w="4"/><text x="10.1774%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.0081%" y="517" width="0.2421%" height="15" fill="rgb(250,179,43)" fg:x="124" fg:w="3"/><text x="10.2581%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="10.0081%" y="501" width="0.2421%" height="15" fill="rgb(233,54,46)" fg:x="124" fg:w="3"/><text x="10.2581%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="10.0888%" y="485" width="0.1614%" height="15" fill="rgb(247,120,42)" fg:x="125" fg:w="2"/><text x="10.3388%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.3309%" y="485" width="0.0807%" height="15" fill="rgb(221,219,12)" fg:x="128" fg:w="1"/><text x="10.5809%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="10.4116%" y="485" width="0.1614%" height="15" fill="rgb(211,126,8)" fg:x="129" fg:w="2"/><text x="10.6616%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="10.4116%" y="469" width="0.1614%" height="15" fill="rgb(218,154,33)" fg:x="129" fg:w="2"/><text x="10.6616%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.4116%" y="453" width="0.1614%" height="15" fill="rgb(212,199,16)" fg:x="129" fg:w="2"/><text x="10.6616%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.4923%" y="437" width="0.0807%" height="15" fill="rgb(236,215,46)" fg:x="130" fg:w="1"/><text x="10.7423%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.4923%" y="421" width="0.0807%" height="15" fill="rgb(232,32,22)" fg:x="130" fg:w="1"/><text x="10.7423%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="10.3309%" y="517" width="0.3228%" height="15" fill="rgb(234,79,15)" fg:x="128" fg:w="4"/><text x="10.5809%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="10.3309%" y="501" width="0.3228%" height="15" fill="rgb(235,187,47)" fg:x="128" fg:w="4"/><text x="10.5809%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.5730%" y="485" width="0.0807%" height="15" fill="rgb(244,69,37)" fg:x="131" fg:w="1"/><text x="10.8230%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="10.6538%" y="517" width="0.1614%" height="15" fill="rgb(249,140,25)" fg:x="132" fg:w="2"/><text x="10.9038%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.7345%" y="501" width="0.0807%" height="15" fill="rgb(213,69,8)" fg:x="133" fg:w="1"/><text x="10.9845%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="10.8959%" y="501" width="0.1614%" height="15" fill="rgb(220,136,2)" fg:x="135" fg:w="2"/><text x="11.1459%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.8959%" y="485" width="0.1614%" height="15" fill="rgb(237,50,36)" fg:x="135" fg:w="2"/><text x="11.1459%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.9766%" y="469" width="0.0807%" height="15" fill="rgb(226,18,11)" fg:x="136" fg:w="1"/><text x="11.2266%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.9766%" y="453" width="0.0807%" height="15" fill="rgb(243,156,2)" fg:x="136" fg:w="1"/><text x="11.2266%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="11.0573%" y="485" width="0.1614%" height="15" fill="rgb(218,8,34)" fg:x="137" fg:w="2"/><text x="11.3073%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.1380%" y="469" width="0.0807%" height="15" fill="rgb(250,94,35)" fg:x="138" fg:w="1"/><text x="11.3880%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.1380%" y="453" width="0.0807%" height="15" fill="rgb(229,127,21)" fg:x="138" fg:w="1"/><text x="11.3880%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="11.2187%" y="485" width="0.0807%" height="15" fill="rgb(234,49,5)" fg:x="139" fg:w="1"/><text x="11.4687%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.13%)</title><rect x="10.2502%" y="533" width="1.1299%" height="15" fill="rgb(248,12,16)" fg:x="127" fg:w="14"/><text x="10.5002%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="10.8152%" y="517" width="0.5650%" height="15" fill="rgb(208,220,31)" fg:x="134" fg:w="7"/><text x="11.0652%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="11.0573%" y="501" width="0.3228%" height="15" fill="rgb(243,184,0)" fg:x="137" fg:w="4"/><text x="11.3073%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.2994%" y="485" width="0.0807%" height="15" fill="rgb(217,38,21)" fg:x="140" fg:w="1"/><text x="11.5494%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.2994%" y="469" width="0.0807%" height="15" fill="rgb(239,120,45)" fg:x="140" fg:w="1"/><text x="11.5494%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (29 samples, 2.34%)</title><rect x="9.4431%" y="565" width="2.3406%" height="15" fill="rgb(235,33,2)" fg:x="117" fg:w="29"/><text x="9.6931%" y="575.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 2.02%)</title><rect x="9.7659%" y="549" width="2.0178%" height="15" fill="rgb(249,161,5)" fg:x="121" fg:w="25"/><text x="10.0159%" y="559.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="11.3801%" y="533" width="0.4036%" height="15" fill="rgb(250,165,48)" fg:x="141" fg:w="5"/><text x="11.6301%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="11.3801%" y="517" width="0.4036%" height="15" fill="rgb(221,23,45)" fg:x="141" fg:w="5"/><text x="11.6301%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="11.4609%" y="501" width="0.3228%" height="15" fill="rgb(217,108,46)" fg:x="142" fg:w="4"/><text x="11.7109%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.7030%" y="485" width="0.0807%" height="15" fill="rgb(254,26,35)" fg:x="145" fg:w="1"/><text x="11.9530%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.7030%" y="469" width="0.0807%" height="15" fill="rgb(218,223,28)" fg:x="145" fg:w="1"/><text x="11.9530%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="11.7030%" y="453" width="0.0807%" height="15" fill="rgb(242,27,47)" fg:x="145" fg:w="1"/><text x="11.9530%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.8644%" y="533" width="0.0807%" height="15" fill="rgb(218,39,35)" fg:x="147" fg:w="1"/><text x="12.1144%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.0258%" y="517" width="0.0807%" height="15" fill="rgb(232,127,16)" fg:x="149" fg:w="1"/><text x="12.2758%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="12.1065%" y="517" width="0.1614%" height="15" fill="rgb(231,219,51)" fg:x="150" fg:w="2"/><text x="12.3565%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.1872%" y="501" width="0.0807%" height="15" fill="rgb(217,220,46)" fg:x="151" fg:w="1"/><text x="12.4372%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.3487%" y="485" width="0.0807%" height="15" fill="rgb(230,75,1)" fg:x="153" fg:w="1"/><text x="12.5987%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.3487%" y="469" width="0.0807%" height="15" fill="rgb(218,2,8)" fg:x="153" fg:w="1"/><text x="12.5987%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="11.7837%" y="565" width="0.7264%" height="15" fill="rgb(206,111,30)" fg:x="146" fg:w="9"/><text x="12.0337%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.73%)</title><rect x="11.7837%" y="549" width="0.7264%" height="15" fill="rgb(209,135,6)" fg:x="146" fg:w="9"/><text x="12.0337%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="11.9451%" y="533" width="0.5650%" height="15" fill="rgb(205,169,10)" fg:x="148" fg:w="7"/><text x="12.1951%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="12.2680%" y="517" width="0.2421%" height="15" fill="rgb(212,204,38)" fg:x="152" fg:w="3"/><text x="12.5180%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="12.2680%" y="501" width="0.2421%" height="15" fill="rgb(205,199,14)" fg:x="152" fg:w="3"/><text x="12.5180%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="12.4294%" y="485" width="0.0807%" height="15" fill="rgb(212,4,6)" fg:x="154" fg:w="1"/><text x="12.6794%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.4294%" y="469" width="0.0807%" height="15" fill="rgb(250,15,10)" fg:x="154" fg:w="1"/><text x="12.6794%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.5908%" y="549" width="0.0807%" height="15" fill="rgb(212,49,51)" fg:x="156" fg:w="1"/><text x="12.8408%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9136%" y="517" width="0.0807%" height="15" fill="rgb(235,21,9)" fg:x="160" fg:w="1"/><text x="13.1636%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="12.9944%" y="517" width="0.3228%" height="15" fill="rgb(251,31,32)" fg:x="161" fg:w="4"/><text x="13.2444%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="13.0751%" y="501" width="0.2421%" height="15" fill="rgb(246,23,9)" fg:x="162" fg:w="3"/><text x="13.3251%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="13.1558%" y="485" width="0.1614%" height="15" fill="rgb(225,216,14)" fg:x="163" fg:w="2"/><text x="13.4058%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="13.3172%" y="517" width="0.0807%" height="15" fill="rgb(215,200,26)" fg:x="165" fg:w="1"/><text x="13.5672%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.3172%" y="501" width="0.0807%" height="15" fill="rgb(237,130,47)" fg:x="165" fg:w="1"/><text x="13.5672%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.3172%" y="485" width="0.0807%" height="15" fill="rgb(247,74,14)" fg:x="165" fg:w="1"/><text x="13.5672%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="13.3979%" y="517" width="0.0807%" height="15" fill="rgb(254,97,46)" fg:x="166" fg:w="1"/><text x="13.6479%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.3979%" y="501" width="0.0807%" height="15" fill="rgb(234,191,1)" fg:x="166" fg:w="1"/><text x="13.6479%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.3979%" y="485" width="0.0807%" height="15" fill="rgb(215,165,14)" fg:x="166" fg:w="1"/><text x="13.6479%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.3979%" y="469" width="0.0807%" height="15" fill="rgb(230,182,6)" fg:x="166" fg:w="1"/><text x="13.6479%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.3979%" y="453" width="0.0807%" height="15" fill="rgb(210,127,39)" fg:x="166" fg:w="1"/><text x="13.6479%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.5593%" y="469" width="0.0807%" height="15" fill="rgb(223,212,51)" fg:x="168" fg:w="1"/><text x="13.8093%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.5593%" y="453" width="0.0807%" height="15" fill="rgb(226,176,43)" fg:x="168" fg:w="1"/><text x="13.8093%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5593%" y="437" width="0.0807%" height="15" fill="rgb(222,155,4)" fg:x="168" fg:w="1"/><text x="13.8093%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="13.4786%" y="517" width="0.2421%" height="15" fill="rgb(215,149,7)" fg:x="167" fg:w="3"/><text x="13.7286%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="13.4786%" y="501" width="0.2421%" height="15" fill="rgb(252,199,23)" fg:x="167" fg:w="3"/><text x="13.7286%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="13.4786%" y="485" width="0.2421%" height="15" fill="rgb(245,52,29)" fg:x="167" fg:w="3"/><text x="13.7286%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="13.6400%" y="469" width="0.0807%" height="15" fill="rgb(221,228,19)" fg:x="169" fg:w="1"/><text x="13.8900%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.6400%" y="453" width="0.0807%" height="15" fill="rgb(253,101,6)" fg:x="169" fg:w="1"/><text x="13.8900%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="13.6400%" y="437" width="0.0807%" height="15" fill="rgb(211,130,8)" fg:x="169" fg:w="1"/><text x="13.8900%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.6400%" y="421" width="0.0807%" height="15" fill="rgb(238,37,53)" fg:x="169" fg:w="1"/><text x="13.8900%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.6400%" y="405" width="0.0807%" height="15" fill="rgb(235,145,5)" fg:x="169" fg:w="1"/><text x="13.8900%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.8015%" y="469" width="0.0807%" height="15" fill="rgb(244,12,43)" fg:x="171" fg:w="1"/><text x="14.0515%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.8015%" y="453" width="0.0807%" height="15" fill="rgb(246,195,24)" fg:x="171" fg:w="1"/><text x="14.0515%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.8015%" y="437" width="0.0807%" height="15" fill="rgb(235,163,6)" fg:x="171" fg:w="1"/><text x="14.0515%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.8822%" y="469" width="0.0807%" height="15" fill="rgb(236,218,17)" fg:x="172" fg:w="1"/><text x="14.1322%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="13.8822%" y="453" width="0.0807%" height="15" fill="rgb(235,12,38)" fg:x="172" fg:w="1"/><text x="14.1322%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="13.8822%" y="437" width="0.0807%" height="15" fill="rgb(225,195,33)" fg:x="172" fg:w="1"/><text x="14.1322%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="13.8822%" y="421" width="0.0807%" height="15" fill="rgb(238,54,35)" fg:x="172" fg:w="1"/><text x="14.1322%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.8822%" y="405" width="0.0807%" height="15" fill="rgb(238,33,7)" fg:x="172" fg:w="1"/><text x="14.1322%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="13.9629%" y="453" width="0.0807%" height="15" fill="rgb(245,5,14)" fg:x="173" fg:w="1"/><text x="14.2129%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="13.8015%" y="485" width="0.3228%" height="15" fill="rgb(251,95,31)" fg:x="171" fg:w="4"/><text x="14.0515%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="13.9629%" y="469" width="0.1614%" height="15" fill="rgb(222,15,46)" fg:x="173" fg:w="2"/><text x="14.2129%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="14.0436%" y="453" width="0.0807%" height="15" fill="rgb(226,182,24)" fg:x="174" fg:w="1"/><text x="14.2936%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.0436%" y="437" width="0.0807%" height="15" fill="rgb(229,105,41)" fg:x="174" fg:w="1"/><text x="14.2936%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.0436%" y="421" width="0.0807%" height="15" fill="rgb(216,99,53)" fg:x="174" fg:w="1"/><text x="14.2936%" y="431.50"></text></g><g><title>kernel::compare::any_entity_changes (21 samples, 1.69%)</title><rect x="12.5101%" y="565" width="1.6949%" height="15" fill="rgb(253,26,20)" fg:x="155" fg:w="21"/><text x="12.7601%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (19 samples, 1.53%)</title><rect x="12.6715%" y="549" width="1.5335%" height="15" fill="rgb(249,155,28)" fg:x="157" fg:w="19"/><text x="12.9215%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.53%)</title><rect x="12.6715%" y="533" width="1.5335%" height="15" fill="rgb(241,221,2)" fg:x="157" fg:w="19"/><text x="12.9215%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="13.7207%" y="517" width="0.4843%" height="15" fill="rgb(219,124,6)" fg:x="170" fg:w="6"/><text x="13.9707%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (5 samples, 0.40%)</title><rect x="13.8015%" y="501" width="0.4036%" height="15" fill="rgb(233,37,6)" fg:x="171" fg:w="5"/><text x="14.0515%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="14.1243%" y="485" width="0.0807%" height="15" fill="rgb(238,20,14)" fg:x="175" fg:w="1"/><text x="14.3743%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.1243%" y="469" width="0.0807%" height="15" fill="rgb(232,106,27)" fg:x="175" fg:w="1"/><text x="14.3743%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.2050%" y="533" width="0.0807%" height="15" fill="rgb(246,157,24)" fg:x="176" fg:w="1"/><text x="14.4550%" y="543.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (61 samples, 4.92%)</title><rect x="9.4431%" y="597" width="4.9233%" height="15" fill="rgb(214,153,10)" fg:x="117" fg:w="61"/><text x="9.6931%" y="607.50">engine..</text></g><g><title>engine::session::Session::check_for_changes (61 samples, 4.92%)</title><rect x="9.4431%" y="581" width="4.9233%" height="15" fill="rgb(212,94,6)" fg:x="117" fg:w="61"/><text x="9.6931%" y="591.50">engine..</text></g><g><title>kernel::model::Entity::set_gid (2 samples, 0.16%)</title><rect x="14.2050%" y="565" width="0.1614%" height="15" fill="rgb(254,25,27)" fg:x="176" fg:w="2"/><text x="14.4550%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.2050%" y="549" width="0.1614%" height="15" fill="rgb(250,43,52)" fg:x="176" fg:w="2"/><text x="14.4550%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.2857%" y="533" width="0.0807%" height="15" fill="rgb(221,226,40)" fg:x="177" fg:w="1"/><text x="14.5357%" y="543.50"></text></g><g><title>engine::session::Session::flush (69 samples, 5.57%)</title><rect x="8.8781%" y="629" width="5.5690%" height="15" fill="rgb(235,162,34)" fg:x="110" fg:w="69"/><text x="9.1281%" y="639.50">engine:..</text></g><g><title>engine::session::Session::save_entity_changes (69 samples, 5.57%)</title><rect x="8.8781%" y="613" width="5.5690%" height="15" fill="rgb(239,24,26)" fg:x="110" fg:w="69"/><text x="9.1281%" y="623.50">engine:..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="14.3664%" y="597" width="0.0807%" height="15" fill="rgb(244,226,11)" fg:x="178" fg:w="1"/><text x="14.6164%" y="607.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="14.3664%" y="581" width="0.0807%" height="15" fill="rgb(225,23,10)" fg:x="178" fg:w="1"/><text x="14.6164%" y="591.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="14.3664%" y="565" width="0.0807%" height="15" fill="rgb(249,125,6)" fg:x="178" fg:w="1"/><text x="14.6164%" y="575.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="14.3664%" y="549" width="0.0807%" height="15" fill="rgb(246,212,12)" fg:x="178" fg:w="1"/><text x="14.6164%" y="559.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="14.3664%" y="533" width="0.0807%" height="15" fill="rgb(230,43,32)" fg:x="178" fg:w="1"/><text x="14.6164%" y="543.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="14.3664%" y="517" width="0.0807%" height="15" fill="rgb(210,95,23)" fg:x="178" fg:w="1"/><text x="14.6164%" y="527.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="14.3664%" y="501" width="0.0807%" height="15" fill="rgb(229,103,33)" fg:x="178" fg:w="1"/><text x="14.6164%" y="511.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="14.4471%" y="629" width="0.0807%" height="15" fill="rgb(222,104,27)" fg:x="179" fg:w="1"/><text x="14.6971%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="14.4471%" y="613" width="0.0807%" height="15" fill="rgb(239,221,23)" fg:x="179" fg:w="1"/><text x="14.6971%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4471%" y="597" width="0.0807%" height="15" fill="rgb(222,98,21)" fg:x="179" fg:w="1"/><text x="14.6971%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.4471%" y="581" width="0.0807%" height="15" fill="rgb(231,101,20)" fg:x="179" fg:w="1"/><text x="14.6971%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.4471%" y="565" width="0.0807%" height="15" fill="rgb(215,150,22)" fg:x="179" fg:w="1"/><text x="14.6971%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.4471%" y="549" width="0.0807%" height="15" fill="rgb(248,3,34)" fg:x="179" fg:w="1"/><text x="14.6971%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.4471%" y="533" width="0.0807%" height="15" fill="rgb(220,141,21)" fg:x="179" fg:w="1"/><text x="14.6971%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.4471%" y="517" width="0.0807%" height="15" fill="rgb(223,41,48)" fg:x="179" fg:w="1"/><text x="14.6971%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.4471%" y="501" width="0.0807%" height="15" fill="rgb(247,12,5)" fg:x="179" fg:w="1"/><text x="14.6971%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.4471%" y="485" width="0.0807%" height="15" fill="rgb(206,173,10)" fg:x="179" fg:w="1"/><text x="14.6971%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.4471%" y="469" width="0.0807%" height="15" fill="rgb(233,214,37)" fg:x="179" fg:w="1"/><text x="14.6971%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.4471%" y="453" width="0.0807%" height="15" fill="rgb(238,86,43)" fg:x="179" fg:w="1"/><text x="14.6971%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.4471%" y="437" width="0.0807%" height="15" fill="rgb(212,182,8)" fg:x="179" fg:w="1"/><text x="14.6971%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.4471%" y="421" width="0.0807%" height="15" fill="rgb(240,91,47)" fg:x="179" fg:w="1"/><text x="14.6971%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="14.5278%" y="613" width="0.5650%" height="15" fill="rgb(209,138,26)" fg:x="180" fg:w="7"/><text x="14.7778%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="14.5278%" y="597" width="0.5650%" height="15" fill="rgb(231,163,20)" fg:x="180" fg:w="7"/><text x="14.7778%" y="607.50"></text></g><g><title>engine::internal::EntityMap::add_entity (7 samples, 0.56%)</title><rect x="14.5278%" y="581" width="0.5650%" height="15" fill="rgb(214,91,54)" fg:x="180" fg:w="7"/><text x="14.7778%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="14.6086%" y="565" width="0.4843%" height="15" fill="rgb(230,32,17)" fg:x="181" fg:w="6"/><text x="14.8586%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.48%)</title><rect x="14.6086%" y="549" width="0.4843%" height="15" fill="rgb(231,34,34)" fg:x="181" fg:w="6"/><text x="14.8586%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="14.6086%" y="533" width="0.4843%" height="15" fill="rgb(224,228,27)" fg:x="181" fg:w="6"/><text x="14.8586%" y="543.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="14.6086%" y="517" width="0.4843%" height="15" fill="rgb(219,35,40)" fg:x="181" fg:w="6"/><text x="14.8586%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="15.1735%" y="597" width="0.0807%" height="15" fill="rgb(234,42,8)" fg:x="188" fg:w="1"/><text x="15.4235%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="15.1735%" y="581" width="0.0807%" height="15" fill="rgb(226,75,22)" fg:x="188" fg:w="1"/><text x="15.4235%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="15.1735%" y="565" width="0.0807%" height="15" fill="rgb(242,203,28)" fg:x="188" fg:w="1"/><text x="15.4235%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.1735%" y="549" width="0.0807%" height="15" fill="rgb(221,3,9)" fg:x="188" fg:w="1"/><text x="15.4235%" y="559.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="15.2542%" y="565" width="0.0807%" height="15" fill="rgb(214,34,31)" fg:x="189" fg:w="1"/><text x="15.5042%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.2542%" y="549" width="0.0807%" height="15" fill="rgb(252,119,15)" fg:x="189" fg:w="1"/><text x="15.5042%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2542%" y="533" width="0.0807%" height="15" fill="rgb(244,224,31)" fg:x="189" fg:w="1"/><text x="15.5042%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.3349%" y="533" width="0.0807%" height="15" fill="rgb(215,8,51)" fg:x="190" fg:w="1"/><text x="15.5849%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.3349%" y="517" width="0.0807%" height="15" fill="rgb(207,24,1)" fg:x="190" fg:w="1"/><text x="15.5849%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3349%" y="501" width="0.0807%" height="15" fill="rgb(245,90,0)" fg:x="190" fg:w="1"/><text x="15.5849%" y="511.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="15.2542%" y="597" width="0.2421%" height="15" fill="rgb(246,43,48)" fg:x="189" fg:w="3"/><text x="15.5042%" y="607.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.24%)</title><rect x="15.2542%" y="581" width="0.2421%" height="15" fill="rgb(252,218,10)" fg:x="189" fg:w="3"/><text x="15.5042%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="15.3349%" y="565" width="0.1614%" height="15" fill="rgb(231,24,35)" fg:x="190" fg:w="2"/><text x="15.5849%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="15.3349%" y="549" width="0.1614%" height="15" fill="rgb(225,66,19)" fg:x="190" fg:w="2"/><text x="15.5849%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="15.4157%" y="533" width="0.0807%" height="15" fill="rgb(214,96,51)" fg:x="191" fg:w="1"/><text x="15.6657%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.4157%" y="517" width="0.0807%" height="15" fill="rgb(251,151,47)" fg:x="191" fg:w="1"/><text x="15.6657%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.4157%" y="501" width="0.0807%" height="15" fill="rgb(236,79,14)" fg:x="191" fg:w="1"/><text x="15.6657%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="15.4964%" y="581" width="0.0807%" height="15" fill="rgb(210,205,11)" fg:x="192" fg:w="1"/><text x="15.7464%" y="591.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="15.4964%" y="565" width="0.0807%" height="15" fill="rgb(233,142,53)" fg:x="192" fg:w="1"/><text x="15.7464%" y="575.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="15.4964%" y="549" width="0.0807%" height="15" fill="rgb(212,116,48)" fg:x="192" fg:w="1"/><text x="15.7464%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.4964%" y="533" width="0.0807%" height="15" fill="rgb(234,55,33)" fg:x="192" fg:w="1"/><text x="15.7464%" y="543.50"></text></g><g><title>plugins_core::build::Build::holding (14 samples, 1.13%)</title><rect x="14.5278%" y="629" width="1.1299%" height="15" fill="rgb(253,92,27)" fg:x="180" fg:w="14"/><text x="14.7778%" y="639.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="15.0928%" y="613" width="0.5650%" height="15" fill="rgb(220,7,35)" fg:x="187" fg:w="7"/><text x="15.3428%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="15.4964%" y="597" width="0.1614%" height="15" fill="rgb(246,124,6)" fg:x="192" fg:w="2"/><text x="15.7464%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="15.5771%" y="581" width="0.0807%" height="15" fill="rgb(212,111,51)" fg:x="193" fg:w="1"/><text x="15.8271%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="15.5771%" y="565" width="0.0807%" height="15" fill="rgb(253,116,7)" fg:x="193" fg:w="1"/><text x="15.8271%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="15.5771%" y="549" width="0.0807%" height="15" fill="rgb(213,145,18)" fg:x="193" fg:w="1"/><text x="15.8271%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="15.5771%" y="533" width="0.0807%" height="15" fill="rgb(219,149,7)" fg:x="193" fg:w="1"/><text x="15.8271%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="15.5771%" y="517" width="0.0807%" height="15" fill="rgb(225,156,20)" fg:x="193" fg:w="1"/><text x="15.8271%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="15.5771%" y="501" width="0.0807%" height="15" fill="rgb(211,98,19)" fg:x="193" fg:w="1"/><text x="15.8271%" y="511.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="15.5771%" y="485" width="0.0807%" height="15" fill="rgb(231,192,31)" fg:x="193" fg:w="1"/><text x="15.8271%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="15.5771%" y="469" width="0.0807%" height="15" fill="rgb(249,95,19)" fg:x="193" fg:w="1"/><text x="15.8271%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.5771%" y="453" width="0.0807%" height="15" fill="rgb(247,101,36)" fg:x="193" fg:w="1"/><text x="15.8271%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.5771%" y="437" width="0.0807%" height="15" fill="rgb(221,45,43)" fg:x="193" fg:w="1"/><text x="15.8271%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.5771%" y="421" width="0.0807%" height="15" fill="rgb(220,42,1)" fg:x="193" fg:w="1"/><text x="15.8271%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.5771%" y="405" width="0.0807%" height="15" fill="rgb(236,19,24)" fg:x="193" fg:w="1"/><text x="15.8271%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.5771%" y="389" width="0.0807%" height="15" fill="rgb(225,192,6)" fg:x="193" fg:w="1"/><text x="15.8271%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.5771%" y="373" width="0.0807%" height="15" fill="rgb(242,30,19)" fg:x="193" fg:w="1"/><text x="15.8271%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.5771%" y="357" width="0.0807%" height="15" fill="rgb(240,36,6)" fg:x="193" fg:w="1"/><text x="15.8271%" y="367.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="15.6578%" y="581" width="0.0807%" height="15" fill="rgb(246,40,28)" fg:x="194" fg:w="1"/><text x="15.9078%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="15.6578%" y="629" width="0.1614%" height="15" fill="rgb(225,155,33)" fg:x="194" fg:w="2"/><text x="15.9078%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="15.6578%" y="613" width="0.1614%" height="15" fill="rgb(240,65,18)" fg:x="194" fg:w="2"/><text x="15.9078%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="15.6578%" y="597" width="0.1614%" height="15" fill="rgb(217,0,48)" fg:x="194" fg:w="2"/><text x="15.9078%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="15.7385%" y="581" width="0.0807%" height="15" fill="rgb(217,80,15)" fg:x="195" fg:w="1"/><text x="15.9885%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="15.7385%" y="565" width="0.0807%" height="15" fill="rgb(253,43,51)" fg:x="195" fg:w="1"/><text x="15.9885%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="15.7385%" y="549" width="0.0807%" height="15" fill="rgb(246,60,4)" fg:x="195" fg:w="1"/><text x="15.9885%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.7385%" y="533" width="0.0807%" height="15" fill="rgb(230,40,54)" fg:x="195" fg:w="1"/><text x="15.9885%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.7385%" y="517" width="0.0807%" height="15" fill="rgb(208,20,44)" fg:x="195" fg:w="1"/><text x="15.9885%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="15.7385%" y="501" width="0.0807%" height="15" fill="rgb(230,22,22)" fg:x="195" fg:w="1"/><text x="15.9885%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.7385%" y="485" width="0.0807%" height="15" fill="rgb(207,57,4)" fg:x="195" fg:w="1"/><text x="15.9885%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.7385%" y="469" width="0.0807%" height="15" fill="rgb(242,130,33)" fg:x="195" fg:w="1"/><text x="15.9885%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.7385%" y="453" width="0.0807%" height="15" fill="rgb(218,66,43)" fg:x="195" fg:w="1"/><text x="15.9885%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="15.7385%" y="437" width="0.0807%" height="15" fill="rgb(236,105,16)" fg:x="195" fg:w="1"/><text x="15.9885%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.7385%" y="421" width="0.0807%" height="15" fill="rgb(230,46,15)" fg:x="195" fg:w="1"/><text x="15.9885%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.7385%" y="405" width="0.0807%" height="15" fill="rgb(251,172,40)" fg:x="195" fg:w="1"/><text x="15.9885%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.7385%" y="389" width="0.0807%" height="15" fill="rgb(225,217,32)" fg:x="195" fg:w="1"/><text x="15.9885%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.7385%" y="373" width="0.0807%" height="15" fill="rgb(243,10,29)" fg:x="195" fg:w="1"/><text x="15.9885%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.7385%" y="357" width="0.0807%" height="15" fill="rgb(207,102,10)" fg:x="195" fg:w="1"/><text x="15.9885%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="15.7385%" y="341" width="0.0807%" height="15" fill="rgb(241,125,5)" fg:x="195" fg:w="1"/><text x="15.9885%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="15.7385%" y="325" width="0.0807%" height="15" fill="rgb(230,125,29)" fg:x="195" fg:w="1"/><text x="15.9885%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="15.7385%" y="309" width="0.0807%" height="15" fill="rgb(223,65,44)" fg:x="195" fg:w="1"/><text x="15.9885%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="15.7385%" y="293" width="0.0807%" height="15" fill="rgb(224,188,28)" fg:x="195" fg:w="1"/><text x="15.9885%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="15.7385%" y="277" width="0.0807%" height="15" fill="rgb(254,197,27)" fg:x="195" fg:w="1"/><text x="15.9885%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="15.7385%" y="261" width="0.0807%" height="15" fill="rgb(220,200,25)" fg:x="195" fg:w="1"/><text x="15.9885%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.7385%" y="245" width="0.0807%" height="15" fill="rgb(239,225,54)" fg:x="195" fg:w="1"/><text x="15.9885%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="15.7385%" y="229" width="0.0807%" height="15" fill="rgb(211,59,40)" fg:x="195" fg:w="1"/><text x="15.9885%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.7385%" y="213" width="0.0807%" height="15" fill="rgb(213,176,46)" fg:x="195" fg:w="1"/><text x="15.9885%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="15.7385%" y="197" width="0.0807%" height="15" fill="rgb(226,99,4)" fg:x="195" fg:w="1"/><text x="15.9885%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="15.7385%" y="181" width="0.0807%" height="15" fill="rgb(239,203,43)" fg:x="195" fg:w="1"/><text x="15.9885%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="15.7385%" y="165" width="0.0807%" height="15" fill="rgb(246,1,45)" fg:x="195" fg:w="1"/><text x="15.9885%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.7385%" y="149" width="0.0807%" height="15" fill="rgb(231,42,52)" fg:x="195" fg:w="1"/><text x="15.9885%" y="159.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="15.8192%" y="613" width="0.0807%" height="15" fill="rgb(240,13,50)" fg:x="196" fg:w="1"/><text x="16.0692%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="15.8192%" y="597" width="0.0807%" height="15" fill="rgb(225,81,14)" fg:x="196" fg:w="1"/><text x="16.0692%" y="607.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="15.8192%" y="581" width="0.0807%" height="15" fill="rgb(216,182,23)" fg:x="196" fg:w="1"/><text x="16.0692%" y="591.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="15.8192%" y="565" width="0.0807%" height="15" fill="rgb(233,137,19)" fg:x="196" fg:w="1"/><text x="16.0692%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.8192%" y="549" width="0.0807%" height="15" fill="rgb(242,61,46)" fg:x="196" fg:w="1"/><text x="16.0692%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="15.8192%" y="533" width="0.0807%" height="15" fill="rgb(221,168,51)" fg:x="196" fg:w="1"/><text x="16.0692%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="15.8999%" y="597" width="0.0807%" height="15" fill="rgb(238,48,15)" fg:x="197" fg:w="1"/><text x="16.1499%" y="607.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="15.8999%" y="581" width="0.0807%" height="15" fill="rgb(216,13,16)" fg:x="197" fg:w="1"/><text x="16.1499%" y="591.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="15.8999%" y="565" width="0.0807%" height="15" fill="rgb(223,185,34)" fg:x="197" fg:w="1"/><text x="16.1499%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.8999%" y="549" width="0.0807%" height="15" fill="rgb(228,94,42)" fg:x="197" fg:w="1"/><text x="16.1499%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="15.9806%" y="597" width="0.0807%" height="15" fill="rgb(218,166,43)" fg:x="198" fg:w="1"/><text x="16.2306%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="15.9806%" y="581" width="0.0807%" height="15" fill="rgb(232,30,50)" fg:x="198" fg:w="1"/><text x="16.2306%" y="591.50"></text></g><g><title>plugins_core::build::Build::occupying (4 samples, 0.32%)</title><rect x="15.8192%" y="629" width="0.3228%" height="15" fill="rgb(245,206,45)" fg:x="196" fg:w="4"/><text x="16.0692%" y="639.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.24%)</title><rect x="15.8999%" y="613" width="0.2421%" height="15" fill="rgb(220,56,22)" fg:x="197" fg:w="3"/><text x="16.1499%" y="623.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="16.0613%" y="597" width="0.0807%" height="15" fill="rgb(239,129,38)" fg:x="199" fg:w="1"/><text x="16.3113%" y="607.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="16.0613%" y="581" width="0.0807%" height="15" fill="rgb(207,68,41)" fg:x="199" fg:w="1"/><text x="16.3113%" y="591.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="16.0613%" y="565" width="0.0807%" height="15" fill="rgb(221,21,7)" fg:x="199" fg:w="1"/><text x="16.3113%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.0613%" y="549" width="0.0807%" height="15" fill="rgb(240,33,25)" fg:x="199" fg:w="1"/><text x="16.3113%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="16.0613%" y="533" width="0.0807%" height="15" fill="rgb(242,119,10)" fg:x="199" fg:w="1"/><text x="16.3113%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="16.0613%" y="517" width="0.0807%" height="15" fill="rgb(214,149,40)" fg:x="199" fg:w="1"/><text x="16.3113%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.0613%" y="501" width="0.0807%" height="15" fill="rgb(228,25,36)" fg:x="199" fg:w="1"/><text x="16.3113%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.0613%" y="485" width="0.0807%" height="15" fill="rgb(222,59,15)" fg:x="199" fg:w="1"/><text x="16.3113%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="16.2228%" y="613" width="0.0807%" height="15" fill="rgb(218,170,0)" fg:x="201" fg:w="1"/><text x="16.4728%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="16.2228%" y="597" width="0.0807%" height="15" fill="rgb(232,173,23)" fg:x="201" fg:w="1"/><text x="16.4728%" y="607.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="16.2228%" y="581" width="0.0807%" height="15" fill="rgb(218,116,1)" fg:x="201" fg:w="1"/><text x="16.4728%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.2228%" y="565" width="0.0807%" height="15" fill="rgb(207,34,4)" fg:x="201" fg:w="1"/><text x="16.4728%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.2228%" y="549" width="0.0807%" height="15" fill="rgb(229,54,52)" fg:x="201" fg:w="1"/><text x="16.4728%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (100 samples, 8.07%)</title><rect x="8.3132%" y="645" width="8.0710%" height="15" fill="rgb(211,86,23)" fg:x="103" fg:w="100"/><text x="8.5632%" y="655.50">plugins_cor..</text></g><g><title>plugins_core::build::Build::with_username (3 samples, 0.24%)</title><rect x="16.1421%" y="629" width="0.2421%" height="15" fill="rgb(254,153,34)" fg:x="200" fg:w="3"/><text x="16.3921%" y="639.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="16.3035%" y="613" width="0.0807%" height="15" fill="rgb(219,220,14)" fg:x="202" fg:w="1"/><text x="16.5535%" y="623.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="16.3842%" y="549" width="0.0807%" height="15" fill="rgb(247,8,26)" fg:x="203" fg:w="1"/><text x="16.6342%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="16.3842%" y="533" width="0.0807%" height="15" fill="rgb(213,129,42)" fg:x="203" fg:w="1"/><text x="16.6342%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.3842%" y="517" width="0.0807%" height="15" fill="rgb(225,95,41)" fg:x="203" fg:w="1"/><text x="16.6342%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.3842%" y="501" width="0.0807%" height="15" fill="rgb(215,134,24)" fg:x="203" fg:w="1"/><text x="16.6342%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.3842%" y="485" width="0.0807%" height="15" fill="rgb(235,23,54)" fg:x="203" fg:w="1"/><text x="16.6342%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.3842%" y="469" width="0.0807%" height="15" fill="rgb(229,96,31)" fg:x="203" fg:w="1"/><text x="16.6342%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.3842%" y="453" width="0.0807%" height="15" fill="rgb(206,111,12)" fg:x="203" fg:w="1"/><text x="16.6342%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.3842%" y="437" width="0.0807%" height="15" fill="rgb(222,177,8)" fg:x="203" fg:w="1"/><text x="16.6342%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.3842%" y="421" width="0.0807%" height="15" fill="rgb(251,36,52)" fg:x="203" fg:w="1"/><text x="16.6342%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="16.3842%" y="565" width="0.1614%" height="15" fill="rgb(216,182,29)" fg:x="203" fg:w="2"/><text x="16.6342%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="16.4649%" y="549" width="0.0807%" height="15" fill="rgb(241,145,50)" fg:x="204" fg:w="1"/><text x="16.7149%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.4649%" y="533" width="0.0807%" height="15" fill="rgb(231,71,35)" fg:x="204" fg:w="1"/><text x="16.7149%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.4649%" y="517" width="0.0807%" height="15" fill="rgb(218,22,17)" fg:x="204" fg:w="1"/><text x="16.7149%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.4649%" y="501" width="0.0807%" height="15" fill="rgb(225,227,6)" fg:x="204" fg:w="1"/><text x="16.7149%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="16.4649%" y="485" width="0.0807%" height="15" fill="rgb(224,204,17)" fg:x="204" fg:w="1"/><text x="16.7149%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="16.4649%" y="469" width="0.0807%" height="15" fill="rgb(227,61,28)" fg:x="204" fg:w="1"/><text x="16.7149%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="16.4649%" y="453" width="0.0807%" height="15" fill="rgb(242,148,23)" fg:x="204" fg:w="1"/><text x="16.7149%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="16.4649%" y="437" width="0.0807%" height="15" fill="rgb(237,105,33)" fg:x="204" fg:w="1"/><text x="16.7149%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="16.4649%" y="421" width="0.0807%" height="15" fill="rgb(238,218,40)" fg:x="204" fg:w="1"/><text x="16.7149%" y="431.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.24%)</title><rect x="16.3842%" y="645" width="0.2421%" height="15" fill="rgb(209,126,11)" fg:x="203" fg:w="3"/><text x="16.6342%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="16.3842%" y="629" width="0.2421%" height="15" fill="rgb(245,90,11)" fg:x="203" fg:w="3"/><text x="16.6342%" y="639.50"></text></g><g><title>kernel::model::Entity::new_blank (3 samples, 0.24%)</title><rect x="16.3842%" y="613" width="0.2421%" height="15" fill="rgb(211,195,10)" fg:x="203" fg:w="3"/><text x="16.6342%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (3 samples, 0.24%)</title><rect x="16.3842%" y="597" width="0.2421%" height="15" fill="rgb(231,45,45)" fg:x="203" fg:w="3"/><text x="16.6342%" y="607.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (3 samples, 0.24%)</title><rect x="16.3842%" y="581" width="0.2421%" height="15" fill="rgb(246,100,43)" fg:x="203" fg:w="3"/><text x="16.6342%" y="591.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="16.5456%" y="565" width="0.0807%" height="15" fill="rgb(241,193,8)" fg:x="205" fg:w="1"/><text x="16.7956%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5456%" y="549" width="0.0807%" height="15" fill="rgb(208,76,19)" fg:x="205" fg:w="1"/><text x="16.7956%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="16.6263%" y="613" width="0.0807%" height="15" fill="rgb(223,69,40)" fg:x="206" fg:w="1"/><text x="16.8763%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="16.6263%" y="597" width="0.0807%" height="15" fill="rgb(207,120,39)" fg:x="206" fg:w="1"/><text x="16.8763%" y="607.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="16.6263%" y="581" width="0.0807%" height="15" fill="rgb(212,209,28)" fg:x="206" fg:w="1"/><text x="16.8763%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.6263%" y="565" width="0.0807%" height="15" fill="rgb(246,82,29)" fg:x="206" fg:w="1"/><text x="16.8763%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.6263%" y="549" width="0.0807%" height="15" fill="rgb(239,6,40)" fg:x="206" fg:w="1"/><text x="16.8763%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.6263%" y="533" width="0.0807%" height="15" fill="rgb(228,181,35)" fg:x="206" fg:w="1"/><text x="16.8763%" y="543.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (166 samples, 13.40%)</title><rect x="3.3898%" y="661" width="13.3979%" height="15" fill="rgb(238,151,2)" fg:x="42" fg:w="166"/><text x="3.6398%" y="671.50">&lt;tests::HoldingKeyIn..</text></g><g><title>plugins_core::build::BuildSurroundings::make (2 samples, 0.16%)</title><rect x="16.6263%" y="645" width="0.1614%" height="15" fill="rgb(236,94,18)" fg:x="206" fg:w="2"/><text x="16.8763%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="16.6263%" y="629" width="0.1614%" height="15" fill="rgb(208,38,14)" fg:x="206" fg:w="2"/><text x="16.8763%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="16.7070%" y="613" width="0.0807%" height="15" fill="rgb(234,215,27)" fg:x="207" fg:w="1"/><text x="16.9570%" y="623.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="16.7070%" y="597" width="0.0807%" height="15" fill="rgb(254,211,53)" fg:x="207" fg:w="1"/><text x="16.9570%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7070%" y="581" width="0.0807%" height="15" fill="rgb(216,175,11)" fg:x="207" fg:w="1"/><text x="16.9570%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7070%" y="565" width="0.0807%" height="15" fill="rgb(246,179,26)" fg:x="207" fg:w="1"/><text x="16.9570%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="16.7877%" y="661" width="0.0807%" height="15" fill="rgb(249,19,52)" fg:x="208" fg:w="1"/><text x="17.0377%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="16.7877%" y="645" width="0.0807%" height="15" fill="rgb(230,42,52)" fg:x="208" fg:w="1"/><text x="17.0377%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="16.7877%" y="629" width="0.0807%" height="15" fill="rgb(221,171,0)" fg:x="208" fg:w="1"/><text x="17.0377%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="16.7877%" y="613" width="0.0807%" height="15" fill="rgb(222,177,40)" fg:x="208" fg:w="1"/><text x="17.0377%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.7877%" y="597" width="0.0807%" height="15" fill="rgb(247,34,16)" fg:x="208" fg:w="1"/><text x="17.0377%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="16.9492%" y="389" width="0.0807%" height="15" fill="rgb(213,217,37)" fg:x="210" fg:w="1"/><text x="17.1992%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="16.9492%" y="373" width="0.0807%" height="15" fill="rgb(231,189,24)" fg:x="210" fg:w="1"/><text x="17.1992%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.9492%" y="357" width="0.0807%" height="15" fill="rgb(214,22,9)" fg:x="210" fg:w="1"/><text x="17.1992%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="16.9492%" y="341" width="0.0807%" height="15" fill="rgb(212,70,22)" fg:x="210" fg:w="1"/><text x="17.1992%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="16.9492%" y="629" width="0.1614%" height="15" fill="rgb(249,64,51)" fg:x="210" fg:w="2"/><text x="17.1992%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="16.9492%" y="613" width="0.1614%" height="15" fill="rgb(249,148,20)" fg:x="210" fg:w="2"/><text x="17.1992%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="16.9492%" y="597" width="0.1614%" height="15" fill="rgb(246,46,48)" fg:x="210" fg:w="2"/><text x="17.1992%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="16.9492%" y="581" width="0.1614%" height="15" fill="rgb(217,34,48)" fg:x="210" fg:w="2"/><text x="17.1992%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="16.9492%" y="565" width="0.1614%" height="15" fill="rgb(222,45,26)" fg:x="210" fg:w="2"/><text x="17.1992%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="16.9492%" y="549" width="0.1614%" height="15" fill="rgb(230,201,36)" fg:x="210" fg:w="2"/><text x="17.1992%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="16.9492%" y="533" width="0.1614%" height="15" fill="rgb(217,30,43)" fg:x="210" fg:w="2"/><text x="17.1992%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="16.9492%" y="517" width="0.1614%" height="15" fill="rgb(230,197,40)" fg:x="210" fg:w="2"/><text x="17.1992%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="16.9492%" y="501" width="0.1614%" height="15" fill="rgb(239,181,18)" fg:x="210" fg:w="2"/><text x="17.1992%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="16.9492%" y="485" width="0.1614%" height="15" fill="rgb(222,60,39)" fg:x="210" fg:w="2"/><text x="17.1992%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="16.9492%" y="469" width="0.1614%" height="15" fill="rgb(210,60,22)" fg:x="210" fg:w="2"/><text x="17.1992%" y="479.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="16.9492%" y="453" width="0.1614%" height="15" fill="rgb(239,213,48)" fg:x="210" fg:w="2"/><text x="17.1992%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="16.9492%" y="437" width="0.1614%" height="15" fill="rgb(253,214,23)" fg:x="210" fg:w="2"/><text x="17.1992%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="16.9492%" y="421" width="0.1614%" height="15" fill="rgb(211,98,45)" fg:x="210" fg:w="2"/><text x="17.1992%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="16.9492%" y="405" width="0.1614%" height="15" fill="rgb(239,130,44)" fg:x="210" fg:w="2"/><text x="17.1992%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.0299%" y="389" width="0.0807%" height="15" fill="rgb(222,181,35)" fg:x="211" fg:w="1"/><text x="17.2799%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.1913%" y="565" width="0.0807%" height="15" fill="rgb(219,219,49)" fg:x="213" fg:w="1"/><text x="17.4413%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.2720%" y="533" width="0.0807%" height="15" fill="rgb(227,161,51)" fg:x="214" fg:w="1"/><text x="17.5220%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.2720%" y="517" width="0.0807%" height="15" fill="rgb(239,112,27)" fg:x="214" fg:w="1"/><text x="17.5220%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.2720%" y="501" width="0.0807%" height="15" fill="rgb(248,122,18)" fg:x="214" fg:w="1"/><text x="17.5220%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.2720%" y="485" width="0.0807%" height="15" fill="rgb(245,130,23)" fg:x="214" fg:w="1"/><text x="17.5220%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.2720%" y="469" width="0.0807%" height="15" fill="rgb(211,225,28)" fg:x="214" fg:w="1"/><text x="17.5220%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="17.2720%" y="453" width="0.0807%" height="15" fill="rgb(242,105,44)" fg:x="214" fg:w="1"/><text x="17.5220%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.2720%" y="437" width="0.0807%" height="15" fill="rgb(216,183,46)" fg:x="214" fg:w="1"/><text x="17.5220%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="17.1913%" y="581" width="0.2421%" height="15" fill="rgb(227,112,9)" fg:x="213" fg:w="3"/><text x="17.4413%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="17.2720%" y="565" width="0.1614%" height="15" fill="rgb(244,21,0)" fg:x="214" fg:w="2"/><text x="17.5220%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.2720%" y="549" width="0.1614%" height="15" fill="rgb(236,185,14)" fg:x="214" fg:w="2"/><text x="17.5220%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.3527%" y="533" width="0.0807%" height="15" fill="rgb(236,170,30)" fg:x="215" fg:w="1"/><text x="17.6027%" y="543.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="17.4334%" y="581" width="0.0807%" height="15" fill="rgb(209,198,51)" fg:x="216" fg:w="1"/><text x="17.6834%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="17.4334%" y="565" width="0.0807%" height="15" fill="rgb(205,171,26)" fg:x="216" fg:w="1"/><text x="17.6834%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.4334%" y="549" width="0.0807%" height="15" fill="rgb(246,41,49)" fg:x="216" fg:w="1"/><text x="17.6834%" y="559.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (8 samples, 0.65%)</title><rect x="16.9492%" y="645" width="0.6457%" height="15" fill="rgb(240,229,12)" fg:x="210" fg:w="8"/><text x="17.1992%" y="655.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (6 samples, 0.48%)</title><rect x="17.1106%" y="629" width="0.4843%" height="15" fill="rgb(212,8,54)" fg:x="212" fg:w="6"/><text x="17.3606%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="17.1106%" y="613" width="0.4843%" height="15" fill="rgb(230,114,13)" fg:x="212" fg:w="6"/><text x="17.3606%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="17.1913%" y="597" width="0.4036%" height="15" fill="rgb(229,130,28)" fg:x="213" fg:w="5"/><text x="17.4413%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.5141%" y="581" width="0.0807%" height="15" fill="rgb(206,139,15)" fg:x="217" fg:w="1"/><text x="17.7641%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.5141%" y="565" width="0.0807%" height="15" fill="rgb(241,188,35)" fg:x="217" fg:w="1"/><text x="17.7641%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="17.5141%" y="549" width="0.0807%" height="15" fill="rgb(208,224,26)" fg:x="217" fg:w="1"/><text x="17.7641%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="17.5141%" y="533" width="0.0807%" height="15" fill="rgb(251,131,28)" fg:x="217" fg:w="1"/><text x="17.7641%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="17.5141%" y="517" width="0.0807%" height="15" fill="rgb(208,153,1)" fg:x="217" fg:w="1"/><text x="17.7641%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.5141%" y="501" width="0.0807%" height="15" fill="rgb(234,33,36)" fg:x="217" fg:w="1"/><text x="17.7641%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.5141%" y="485" width="0.0807%" height="15" fill="rgb(246,42,29)" fg:x="217" fg:w="1"/><text x="17.7641%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.5948%" y="645" width="0.0807%" height="15" fill="rgb(251,114,16)" fg:x="218" fg:w="1"/><text x="17.8448%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="17.6755%" y="645" width="0.0807%" height="15" fill="rgb(233,13,38)" fg:x="219" fg:w="1"/><text x="17.9255%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.6755%" y="629" width="0.0807%" height="15" fill="rgb(247,120,19)" fg:x="219" fg:w="1"/><text x="17.9255%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.6755%" y="613" width="0.0807%" height="15" fill="rgb(205,11,16)" fg:x="219" fg:w="1"/><text x="17.9255%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.6755%" y="597" width="0.0807%" height="15" fill="rgb(228,185,19)" fg:x="219" fg:w="1"/><text x="17.9255%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="17.6755%" y="581" width="0.0807%" height="15" fill="rgb(239,88,52)" fg:x="219" fg:w="1"/><text x="17.9255%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="17.6755%" y="565" width="0.0807%" height="15" fill="rgb(219,23,1)" fg:x="219" fg:w="1"/><text x="17.9255%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::RaisedEvent&gt; (2 samples, 0.16%)</title><rect x="17.7563%" y="645" width="0.1614%" height="15" fill="rgb(253,177,16)" fg:x="220" fg:w="2"/><text x="18.0063%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::carrying::model::CarryingEvent&gt; (2 samples, 0.16%)</title><rect x="17.7563%" y="629" width="0.1614%" height="15" fill="rgb(225,150,40)" fg:x="220" fg:w="2"/><text x="18.0063%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="17.7563%" y="613" width="0.1614%" height="15" fill="rgb(208,108,30)" fg:x="220" fg:w="2"/><text x="18.0063%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="17.7563%" y="597" width="0.1614%" height="15" fill="rgb(214,122,4)" fg:x="220" fg:w="2"/><text x="18.0063%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="17.7563%" y="581" width="0.1614%" height="15" fill="rgb(229,74,37)" fg:x="220" fg:w="2"/><text x="18.0063%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="17.9984%" y="629" width="0.0807%" height="15" fill="rgb(233,61,41)" fg:x="223" fg:w="1"/><text x="18.2484%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.0791%" y="581" width="0.0807%" height="15" fill="rgb(238,191,5)" fg:x="224" fg:w="1"/><text x="18.3291%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="18.0791%" y="565" width="0.0807%" height="15" fill="rgb(233,78,24)" fg:x="224" fg:w="1"/><text x="18.3291%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.2405%" y="565" width="0.0807%" height="15" fill="rgb(211,142,8)" fg:x="226" fg:w="1"/><text x="18.4905%" y="575.50"></text></g><g><title>engine::identifiers::model::get_gid (4 samples, 0.32%)</title><rect x="18.0791%" y="629" width="0.3228%" height="15" fill="rgb(253,38,53)" fg:x="224" fg:w="4"/><text x="18.3291%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="18.0791%" y="613" width="0.3228%" height="15" fill="rgb(234,63,51)" fg:x="224" fg:w="4"/><text x="18.3291%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="18.0791%" y="597" width="0.3228%" height="15" fill="rgb(205,23,31)" fg:x="224" fg:w="4"/><text x="18.3291%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="18.1598%" y="581" width="0.2421%" height="15" fill="rgb(210,184,50)" fg:x="225" fg:w="3"/><text x="18.4098%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.3212%" y="565" width="0.0807%" height="15" fill="rgb(222,112,26)" fg:x="227" fg:w="1"/><text x="18.5712%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="18.3212%" y="549" width="0.0807%" height="15" fill="rgb(250,98,18)" fg:x="227" fg:w="1"/><text x="18.5712%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="18.4019%" y="613" width="0.0807%" height="15" fill="rgb(250,34,12)" fg:x="228" fg:w="1"/><text x="18.6519%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.4019%" y="597" width="0.0807%" height="15" fill="rgb(236,141,30)" fg:x="228" fg:w="1"/><text x="18.6519%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.4019%" y="581" width="0.0807%" height="15" fill="rgb(246,134,38)" fg:x="228" fg:w="1"/><text x="18.6519%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="18.8055%" y="517" width="0.1614%" height="15" fill="rgb(240,114,4)" fg:x="233" fg:w="2"/><text x="19.0555%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="18.8055%" y="501" width="0.1614%" height="15" fill="rgb(243,113,39)" fg:x="233" fg:w="2"/><text x="19.0555%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.8862%" y="485" width="0.0807%" height="15" fill="rgb(239,215,4)" fg:x="234" fg:w="1"/><text x="19.1362%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.8862%" y="469" width="0.0807%" height="15" fill="rgb(236,229,45)" fg:x="234" fg:w="1"/><text x="19.1362%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="18.6441%" y="565" width="0.4036%" height="15" fill="rgb(242,2,6)" fg:x="231" fg:w="5"/><text x="18.8941%" y="575.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="18.6441%" y="549" width="0.4036%" height="15" fill="rgb(239,108,21)" fg:x="231" fg:w="5"/><text x="18.8941%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="18.7248%" y="533" width="0.3228%" height="15" fill="rgb(215,168,34)" fg:x="232" fg:w="4"/><text x="18.9748%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="18.9669%" y="517" width="0.0807%" height="15" fill="rgb(238,31,17)" fg:x="235" fg:w="1"/><text x="19.2169%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="18.5634%" y="581" width="0.5650%" height="15" fill="rgb(220,133,11)" fg:x="230" fg:w="7"/><text x="18.8134%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.0476%" y="565" width="0.0807%" height="15" fill="rgb(212,158,23)" fg:x="236" fg:w="1"/><text x="19.2976%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.1283%" y="565" width="0.0807%" height="15" fill="rgb(223,172,7)" fg:x="237" fg:w="1"/><text x="19.3783%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.1283%" y="549" width="0.0807%" height="15" fill="rgb(244,3,52)" fg:x="237" fg:w="1"/><text x="19.3783%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="19.2090%" y="565" width="0.5650%" height="15" fill="rgb(207,69,27)" fg:x="238" fg:w="7"/><text x="19.4590%" y="575.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="19.2897%" y="549" width="0.4843%" height="15" fill="rgb(213,136,45)" fg:x="239" fg:w="6"/><text x="19.5397%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="19.4512%" y="533" width="0.3228%" height="15" fill="rgb(218,79,17)" fg:x="241" fg:w="4"/><text x="19.7012%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="19.5319%" y="517" width="0.2421%" height="15" fill="rgb(216,106,36)" fg:x="242" fg:w="3"/><text x="19.7819%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="19.6126%" y="501" width="0.1614%" height="15" fill="rgb(251,27,45)" fg:x="243" fg:w="2"/><text x="19.8626%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="19.6126%" y="485" width="0.1614%" height="15" fill="rgb(232,21,34)" fg:x="243" fg:w="2"/><text x="19.8626%" y="495.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="19.6126%" y="469" width="0.1614%" height="15" fill="rgb(249,191,16)" fg:x="243" fg:w="2"/><text x="19.8626%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="19.8547%" y="517" width="0.2421%" height="15" fill="rgb(224,88,20)" fg:x="246" fg:w="3"/><text x="20.1047%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.9354%" y="501" width="0.1614%" height="15" fill="rgb(237,93,27)" fg:x="247" fg:w="2"/><text x="20.1854%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="19.8547%" y="549" width="0.4036%" height="15" fill="rgb(226,198,48)" fg:x="246" fg:w="5"/><text x="20.1047%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="19.8547%" y="533" width="0.4036%" height="15" fill="rgb(207,162,53)" fg:x="246" fg:w="5"/><text x="20.1047%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="20.0969%" y="517" width="0.1614%" height="15" fill="rgb(207,169,9)" fg:x="249" fg:w="2"/><text x="20.3469%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="20.0969%" y="501" width="0.1614%" height="15" fill="rgb(224,166,46)" fg:x="249" fg:w="2"/><text x="20.3469%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.0969%" y="485" width="0.1614%" height="15" fill="rgb(233,26,6)" fg:x="249" fg:w="2"/><text x="20.3469%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.0969%" y="469" width="0.1614%" height="15" fill="rgb(218,106,45)" fg:x="249" fg:w="2"/><text x="20.3469%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="20.0969%" y="453" width="0.1614%" height="15" fill="rgb(240,217,4)" fg:x="249" fg:w="2"/><text x="20.3469%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="20.2583%" y="549" width="0.1614%" height="15" fill="rgb(246,171,10)" fg:x="251" fg:w="2"/><text x="20.5083%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.2583%" y="533" width="0.1614%" height="15" fill="rgb(223,197,30)" fg:x="251" fg:w="2"/><text x="20.5083%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.3390%" y="517" width="0.0807%" height="15" fill="rgb(207,92,16)" fg:x="252" fg:w="1"/><text x="20.5890%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="20.8232%" y="485" width="0.1614%" height="15" fill="rgb(211,6,44)" fg:x="258" fg:w="2"/><text x="21.0732%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="20.5811%" y="533" width="0.4843%" height="15" fill="rgb(219,139,2)" fg:x="255" fg:w="6"/><text x="20.8311%" y="543.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="20.6618%" y="517" width="0.4036%" height="15" fill="rgb(224,103,21)" fg:x="256" fg:w="5"/><text x="20.9118%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="20.6618%" y="501" width="0.4036%" height="15" fill="rgb(254,110,48)" fg:x="256" fg:w="5"/><text x="20.9118%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="20.9847%" y="485" width="0.0807%" height="15" fill="rgb(212,88,19)" fg:x="260" fg:w="1"/><text x="21.2347%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="21.0654%" y="533" width="0.0807%" height="15" fill="rgb(248,103,6)" fg:x="261" fg:w="1"/><text x="21.3154%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="21.0654%" y="517" width="0.0807%" height="15" fill="rgb(214,53,46)" fg:x="261" fg:w="1"/><text x="21.3154%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="20.4197%" y="549" width="0.8878%" height="15" fill="rgb(236,190,24)" fg:x="253" fg:w="11"/><text x="20.6697%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="21.1461%" y="533" width="0.1614%" height="15" fill="rgb(254,58,28)" fg:x="262" fg:w="2"/><text x="21.3961%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.69%)</title><rect x="19.7740%" y="565" width="1.6949%" height="15" fill="rgb(243,63,27)" fg:x="245" fg:w="21"/><text x="20.0240%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="21.3075%" y="549" width="0.1614%" height="15" fill="rgb(206,81,20)" fg:x="264" fg:w="2"/><text x="21.5575%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.3882%" y="533" width="0.0807%" height="15" fill="rgb(252,69,51)" fg:x="265" fg:w="1"/><text x="21.6382%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.3882%" y="517" width="0.0807%" height="15" fill="rgb(222,213,4)" fg:x="265" fg:w="1"/><text x="21.6382%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (39 samples, 3.15%)</title><rect x="18.5634%" y="597" width="3.1477%" height="15" fill="rgb(226,198,12)" fg:x="230" fg:w="39"/><text x="18.8134%" y="607.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.58%)</title><rect x="19.1283%" y="581" width="2.5827%" height="15" fill="rgb(248,115,11)" fg:x="237" fg:w="32"/><text x="19.3783%" y="591.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="21.4689%" y="565" width="0.2421%" height="15" fill="rgb(221,148,54)" fg:x="266" fg:w="3"/><text x="21.7189%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.5496%" y="549" width="0.1614%" height="15" fill="rgb(214,209,51)" fg:x="267" fg:w="2"/><text x="21.7996%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="21.5496%" y="533" width="0.1614%" height="15" fill="rgb(249,116,53)" fg:x="267" fg:w="2"/><text x="21.7996%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.6303%" y="517" width="0.0807%" height="15" fill="rgb(248,170,1)" fg:x="268" fg:w="1"/><text x="21.8803%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.6303%" y="501" width="0.0807%" height="15" fill="rgb(244,105,10)" fg:x="268" fg:w="1"/><text x="21.8803%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="21.6303%" y="485" width="0.0807%" height="15" fill="rgb(229,100,5)" fg:x="268" fg:w="1"/><text x="21.8803%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="21.7111%" y="565" width="0.1614%" height="15" fill="rgb(233,221,39)" fg:x="269" fg:w="2"/><text x="21.9611%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.8725%" y="549" width="0.0807%" height="15" fill="rgb(233,88,21)" fg:x="271" fg:w="1"/><text x="22.1225%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.8725%" y="533" width="0.0807%" height="15" fill="rgb(206,13,0)" fg:x="271" fg:w="1"/><text x="22.1225%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="22.1953%" y="533" width="0.1614%" height="15" fill="rgb(242,15,35)" fg:x="275" fg:w="2"/><text x="22.4453%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.2760%" y="517" width="0.0807%" height="15" fill="rgb(247,142,41)" fg:x="276" fg:w="1"/><text x="22.5260%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="21.7111%" y="597" width="0.7264%" height="15" fill="rgb(245,51,29)" fg:x="269" fg:w="9"/><text x="21.9611%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.73%)</title><rect x="21.7111%" y="581" width="0.7264%" height="15" fill="rgb(228,209,43)" fg:x="269" fg:w="9"/><text x="21.9611%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="21.8725%" y="565" width="0.5650%" height="15" fill="rgb(233,185,9)" fg:x="271" fg:w="7"/><text x="22.1225%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="21.9532%" y="549" width="0.4843%" height="15" fill="rgb(226,93,0)" fg:x="272" fg:w="6"/><text x="22.2032%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.3567%" y="533" width="0.0807%" height="15" fill="rgb(245,194,43)" fg:x="277" fg:w="1"/><text x="22.6067%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.3567%" y="517" width="0.0807%" height="15" fill="rgb(211,145,34)" fg:x="277" fg:w="1"/><text x="22.6067%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.7603%" y="549" width="0.0807%" height="15" fill="rgb(231,228,28)" fg:x="282" fg:w="1"/><text x="23.0103%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.9217%" y="533" width="0.0807%" height="15" fill="rgb(236,149,4)" fg:x="284" fg:w="1"/><text x="23.1717%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="23.0024%" y="517" width="0.1614%" height="15" fill="rgb(234,114,38)" fg:x="285" fg:w="2"/><text x="23.2524%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.1638%" y="501" width="0.0807%" height="15" fill="rgb(246,132,51)" fg:x="287" fg:w="1"/><text x="23.4138%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="23.2446%" y="501" width="0.1614%" height="15" fill="rgb(251,137,22)" fg:x="288" fg:w="2"/><text x="23.4946%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.3253%" y="485" width="0.0807%" height="15" fill="rgb(243,59,52)" fg:x="289" fg:w="1"/><text x="23.5753%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="22.6796%" y="581" width="0.8071%" height="15" fill="rgb(239,56,28)" fg:x="281" fg:w="10"/><text x="22.9296%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.73%)</title><rect x="22.7603%" y="565" width="0.7264%" height="15" fill="rgb(218,168,27)" fg:x="282" fg:w="9"/><text x="23.0103%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="22.8410%" y="549" width="0.6457%" height="15" fill="rgb(232,165,11)" fg:x="283" fg:w="8"/><text x="23.0910%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="23.0024%" y="533" width="0.4843%" height="15" fill="rgb(253,55,41)" fg:x="285" fg:w="6"/><text x="23.2524%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="23.1638%" y="517" width="0.3228%" height="15" fill="rgb(233,206,24)" fg:x="287" fg:w="4"/><text x="23.4138%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.4060%" y="501" width="0.0807%" height="15" fill="rgb(220,199,8)" fg:x="290" fg:w="1"/><text x="23.6560%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.4060%" y="485" width="0.0807%" height="15" fill="rgb(254,65,26)" fg:x="290" fg:w="1"/><text x="23.6560%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.4867%" y="581" width="0.0807%" height="15" fill="rgb(253,102,23)" fg:x="291" fg:w="1"/><text x="23.7367%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.4867%" y="565" width="0.0807%" height="15" fill="rgb(231,103,35)" fg:x="291" fg:w="1"/><text x="23.7367%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="23.6481%" y="549" width="0.1614%" height="15" fill="rgb(238,26,10)" fg:x="293" fg:w="2"/><text x="23.8981%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.8095%" y="549" width="0.1614%" height="15" fill="rgb(234,191,34)" fg:x="295" fg:w="2"/><text x="24.0595%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.8095%" y="533" width="0.1614%" height="15" fill="rgb(206,210,9)" fg:x="295" fg:w="2"/><text x="24.0595%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="23.8095%" y="517" width="0.1614%" height="15" fill="rgb(219,155,3)" fg:x="295" fg:w="2"/><text x="24.0595%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="23.9709%" y="549" width="0.0807%" height="15" fill="rgb(221,62,52)" fg:x="297" fg:w="1"/><text x="24.2209%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="23.9709%" y="533" width="0.0807%" height="15" fill="rgb(215,197,36)" fg:x="297" fg:w="1"/><text x="24.2209%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="24.0517%" y="533" width="0.0807%" height="15" fill="rgb(226,222,6)" fg:x="298" fg:w="1"/><text x="24.3017%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.1324%" y="517" width="0.0807%" height="15" fill="rgb(215,58,28)" fg:x="299" fg:w="1"/><text x="24.3824%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="24.0517%" y="549" width="0.3228%" height="15" fill="rgb(212,148,2)" fg:x="298" fg:w="4"/><text x="24.3017%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="24.1324%" y="533" width="0.2421%" height="15" fill="rgb(208,21,42)" fg:x="299" fg:w="3"/><text x="24.3824%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.2131%" y="517" width="0.1614%" height="15" fill="rgb(209,107,26)" fg:x="300" fg:w="2"/><text x="24.4631%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.2938%" y="501" width="0.0807%" height="15" fill="rgb(254,60,47)" fg:x="301" fg:w="1"/><text x="24.5438%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="24.2938%" y="485" width="0.0807%" height="15" fill="rgb(207,226,45)" fg:x="301" fg:w="1"/><text x="24.5438%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.3745%" y="517" width="0.0807%" height="15" fill="rgb(223,124,22)" fg:x="302" fg:w="1"/><text x="24.6245%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.3745%" y="501" width="0.0807%" height="15" fill="rgb(240,162,13)" fg:x="302" fg:w="1"/><text x="24.6245%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.3745%" y="485" width="0.0807%" height="15" fill="rgb(244,199,31)" fg:x="302" fg:w="1"/><text x="24.6245%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6973%" y="501" width="0.0807%" height="15" fill="rgb(207,92,16)" fg:x="306" fg:w="1"/><text x="24.9473%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.8588%" y="453" width="0.1614%" height="15" fill="rgb(215,31,19)" fg:x="308" fg:w="2"/><text x="25.1088%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="24.8588%" y="437" width="0.1614%" height="15" fill="rgb(245,118,14)" fg:x="308" fg:w="2"/><text x="25.1088%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="24.8588%" y="485" width="0.2421%" height="15" fill="rgb(248,12,46)" fg:x="308" fg:w="3"/><text x="25.1088%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (3 samples, 0.24%)</title><rect x="24.8588%" y="469" width="0.2421%" height="15" fill="rgb(209,119,0)" fg:x="308" fg:w="3"/><text x="25.1088%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="25.0202%" y="453" width="0.0807%" height="15" fill="rgb(254,51,44)" fg:x="310" fg:w="1"/><text x="25.2702%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (10 samples, 0.81%)</title><rect x="24.3745%" y="549" width="0.8071%" height="15" fill="rgb(253,182,35)" fg:x="302" fg:w="10"/><text x="24.6245%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.81%)</title><rect x="24.3745%" y="533" width="0.8071%" height="15" fill="rgb(205,198,39)" fg:x="302" fg:w="10"/><text x="24.6245%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.73%)</title><rect x="24.4552%" y="517" width="0.7264%" height="15" fill="rgb(251,175,48)" fg:x="303" fg:w="9"/><text x="24.7052%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (5 samples, 0.40%)</title><rect x="24.7780%" y="501" width="0.4036%" height="15" fill="rgb(239,38,17)" fg:x="307" fg:w="5"/><text x="25.0280%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1009%" y="485" width="0.0807%" height="15" fill="rgb(212,101,8)" fg:x="311" fg:w="1"/><text x="25.3509%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="25.1816%" y="549" width="0.0807%" height="15" fill="rgb(228,35,17)" fg:x="312" fg:w="1"/><text x="25.4316%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.1816%" y="533" width="0.0807%" height="15" fill="rgb(214,95,8)" fg:x="312" fg:w="1"/><text x="25.4316%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.1816%" y="517" width="0.0807%" height="15" fill="rgb(210,176,35)" fg:x="312" fg:w="1"/><text x="25.4316%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.1816%" y="501" width="0.0807%" height="15" fill="rgb(226,4,3)" fg:x="312" fg:w="1"/><text x="25.4316%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1816%" y="485" width="0.0807%" height="15" fill="rgb(232,133,14)" fg:x="312" fg:w="1"/><text x="25.4316%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.4237%" y="533" width="0.0807%" height="15" fill="rgb(250,191,8)" fg:x="315" fg:w="1"/><text x="25.6737%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.4237%" y="517" width="0.0807%" height="15" fill="rgb(213,12,45)" fg:x="315" fg:w="1"/><text x="25.6737%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.4237%" y="501" width="0.0807%" height="15" fill="rgb(233,78,26)" fg:x="315" fg:w="1"/><text x="25.6737%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="25.5044%" y="501" width="0.1614%" height="15" fill="rgb(245,222,11)" fg:x="316" fg:w="2"/><text x="25.7544%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="25.5851%" y="485" width="0.0807%" height="15" fill="rgb(216,174,12)" fg:x="317" fg:w="1"/><text x="25.8351%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="25.5851%" y="469" width="0.0807%" height="15" fill="rgb(213,15,9)" fg:x="317" fg:w="1"/><text x="25.8351%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.5851%" y="453" width="0.0807%" height="15" fill="rgb(238,103,32)" fg:x="317" fg:w="1"/><text x="25.8351%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="25.8273%" y="485" width="0.0807%" height="15" fill="rgb(245,85,15)" fg:x="320" fg:w="1"/><text x="26.0773%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="26.0694%" y="469" width="0.3228%" height="15" fill="rgb(254,204,5)" fg:x="323" fg:w="4"/><text x="26.3194%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.3115%" y="453" width="0.0807%" height="15" fill="rgb(231,178,15)" fg:x="326" fg:w="1"/><text x="26.5615%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.3115%" y="437" width="0.0807%" height="15" fill="rgb(248,151,3)" fg:x="326" fg:w="1"/><text x="26.5615%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.97%)</title><rect x="25.5044%" y="517" width="0.9685%" height="15" fill="rgb(250,139,13)" fg:x="316" fg:w="12"/><text x="25.7544%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.81%)</title><rect x="25.6659%" y="501" width="0.8071%" height="15" fill="rgb(243,107,53)" fg:x="318" fg:w="10"/><text x="25.9159%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="25.9080%" y="485" width="0.5650%" height="15" fill="rgb(232,81,15)" fg:x="321" fg:w="7"/><text x="26.1580%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="26.3923%" y="469" width="0.0807%" height="15" fill="rgb(225,187,48)" fg:x="327" fg:w="1"/><text x="26.6423%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="26.3923%" y="453" width="0.0807%" height="15" fill="rgb(205,116,12)" fg:x="327" fg:w="1"/><text x="26.6423%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.45%)</title><rect x="25.2623%" y="549" width="1.4528%" height="15" fill="rgb(220,222,31)" fg:x="313" fg:w="18"/><text x="25.5123%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (15 samples, 1.21%)</title><rect x="25.5044%" y="533" width="1.2107%" height="15" fill="rgb(233,187,49)" fg:x="316" fg:w="15"/><text x="25.7544%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="26.4730%" y="517" width="0.2421%" height="15" fill="rgb(211,168,53)" fg:x="328" fg:w="3"/><text x="26.7230%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (40 samples, 3.23%)</title><rect x="23.5674%" y="581" width="3.2284%" height="15" fill="rgb(206,160,16)" fg:x="292" fg:w="40"/><text x="23.8174%" y="591.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (40 samples, 3.23%)</title><rect x="23.5674%" y="565" width="3.2284%" height="15" fill="rgb(254,164,13)" fg:x="292" fg:w="40"/><text x="23.8174%" y="575.50">&lt;se..</text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="26.7151%" y="549" width="0.0807%" height="15" fill="rgb(229,45,30)" fg:x="331" fg:w="1"/><text x="26.9651%" y="559.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="26.7151%" y="533" width="0.0807%" height="15" fill="rgb(237,32,10)" fg:x="331" fg:w="1"/><text x="26.9651%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="26.9572%" y="437" width="0.1614%" height="15" fill="rgb(251,20,47)" fg:x="334" fg:w="2"/><text x="27.2072%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="27.0379%" y="421" width="0.0807%" height="15" fill="rgb(251,116,12)" fg:x="335" fg:w="1"/><text x="27.2879%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="27.0379%" y="405" width="0.0807%" height="15" fill="rgb(214,227,27)" fg:x="335" fg:w="1"/><text x="27.2879%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.0379%" y="389" width="0.0807%" height="15" fill="rgb(248,10,53)" fg:x="335" fg:w="1"/><text x="27.2879%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="27.1994%" y="421" width="0.1614%" height="15" fill="rgb(221,176,25)" fg:x="337" fg:w="2"/><text x="27.4494%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="27.1994%" y="405" width="0.1614%" height="15" fill="rgb(205,70,46)" fg:x="337" fg:w="2"/><text x="27.4494%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="26.9572%" y="453" width="0.4843%" height="15" fill="rgb(217,45,38)" fg:x="334" fg:w="6"/><text x="27.2072%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="27.1186%" y="437" width="0.3228%" height="15" fill="rgb(243,6,54)" fg:x="336" fg:w="4"/><text x="27.3686%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.3608%" y="421" width="0.0807%" height="15" fill="rgb(242,76,23)" fg:x="339" fg:w="1"/><text x="27.6108%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.3608%" y="405" width="0.0807%" height="15" fill="rgb(239,166,0)" fg:x="339" fg:w="1"/><text x="27.6108%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.3608%" y="389" width="0.0807%" height="15" fill="rgb(238,174,32)" fg:x="339" fg:w="1"/><text x="27.6108%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="27.4415%" y="453" width="0.0807%" height="15" fill="rgb(238,124,44)" fg:x="340" fg:w="1"/><text x="27.6915%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="27.4415%" y="437" width="0.0807%" height="15" fill="rgb(206,185,9)" fg:x="340" fg:w="1"/><text x="27.6915%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.73%)</title><rect x="26.9572%" y="485" width="0.7264%" height="15" fill="rgb(215,157,17)" fg:x="334" fg:w="9"/><text x="27.2072%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="26.9572%" y="469" width="0.7264%" height="15" fill="rgb(251,17,29)" fg:x="334" fg:w="9"/><text x="27.2072%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="27.5222%" y="453" width="0.1614%" height="15" fill="rgb(227,113,27)" fg:x="341" fg:w="2"/><text x="27.7722%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.6029%" y="437" width="0.0807%" height="15" fill="rgb(217,226,24)" fg:x="342" fg:w="1"/><text x="27.8529%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.6029%" y="421" width="0.0807%" height="15" fill="rgb(251,99,38)" fg:x="342" fg:w="1"/><text x="27.8529%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="28.0065%" y="469" width="0.0807%" height="15" fill="rgb(231,147,19)" fg:x="347" fg:w="1"/><text x="28.2565%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (7 samples, 0.56%)</title><rect x="27.6836%" y="485" width="0.5650%" height="15" fill="rgb(230,86,8)" fg:x="343" fg:w="7"/><text x="27.9336%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="28.0872%" y="469" width="0.1614%" height="15" fill="rgb(237,159,39)" fg:x="348" fg:w="2"/><text x="28.3372%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.4100%" y="453" width="0.0807%" height="15" fill="rgb(247,179,47)" fg:x="352" fg:w="1"/><text x="28.6600%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22 samples, 1.78%)</title><rect x="26.7958%" y="517" width="1.7756%" height="15" fill="rgb(253,152,26)" fg:x="332" fg:w="22"/><text x="27.0458%" y="527.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20 samples, 1.61%)</title><rect x="26.9572%" y="501" width="1.6142%" height="15" fill="rgb(222,211,15)" fg:x="334" fg:w="20"/><text x="27.2072%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="28.2486%" y="485" width="0.3228%" height="15" fill="rgb(236,193,6)" fg:x="350" fg:w="4"/><text x="28.4986%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="28.2486%" y="469" width="0.3228%" height="15" fill="rgb(226,206,10)" fg:x="350" fg:w="4"/><text x="28.4986%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="28.4907%" y="453" width="0.0807%" height="15" fill="rgb(213,125,22)" fg:x="353" fg:w="1"/><text x="28.7407%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="28.5714%" y="517" width="0.1614%" height="15" fill="rgb(221,66,28)" fg:x="354" fg:w="2"/><text x="28.8214%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="28.6521%" y="501" width="0.0807%" height="15" fill="rgb(222,84,53)" fg:x="355" fg:w="1"/><text x="28.9021%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (25 samples, 2.02%)</title><rect x="26.7958%" y="581" width="2.0178%" height="15" fill="rgb(243,50,15)" fg:x="332" fg:w="25"/><text x="27.0458%" y="591.50">s..</text></g><g><title>serde_json::de::from_trait (25 samples, 2.02%)</title><rect x="26.7958%" y="565" width="2.0178%" height="15" fill="rgb(208,184,23)" fg:x="332" fg:w="25"/><text x="27.0458%" y="575.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25 samples, 2.02%)</title><rect x="26.7958%" y="549" width="2.0178%" height="15" fill="rgb(221,83,2)" fg:x="332" fg:w="25"/><text x="27.0458%" y="559.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (25 samples, 2.02%)</title><rect x="26.7958%" y="533" width="2.0178%" height="15" fill="rgb(236,53,24)" fg:x="332" fg:w="25"/><text x="27.0458%" y="543.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.7328%" y="517" width="0.0807%" height="15" fill="rgb(244,171,29)" fg:x="356" fg:w="1"/><text x="28.9828%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.7328%" y="501" width="0.0807%" height="15" fill="rgb(205,19,11)" fg:x="356" fg:w="1"/><text x="28.9828%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="28.7328%" y="485" width="0.0807%" height="15" fill="rgb(207,108,29)" fg:x="356" fg:w="1"/><text x="28.9828%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="28.9750%" y="565" width="0.2421%" height="15" fill="rgb(236,215,43)" fg:x="359" fg:w="3"/><text x="29.2250%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="29.0557%" y="549" width="0.1614%" height="15" fill="rgb(213,58,35)" fg:x="360" fg:w="2"/><text x="29.3057%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="29.1364%" y="533" width="0.0807%" height="15" fill="rgb(220,211,46)" fg:x="361" fg:w="1"/><text x="29.3864%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="29.1364%" y="517" width="0.0807%" height="15" fill="rgb(212,134,16)" fg:x="361" fg:w="1"/><text x="29.3864%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (2 samples, 0.16%)</title><rect x="29.2171%" y="565" width="0.1614%" height="15" fill="rgb(232,90,44)" fg:x="362" fg:w="2"/><text x="29.4671%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.3785%" y="549" width="0.0807%" height="15" fill="rgb(212,18,36)" fg:x="364" fg:w="1"/><text x="29.6285%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="29.3785%" y="565" width="0.1614%" height="15" fill="rgb(206,112,24)" fg:x="364" fg:w="2"/><text x="29.6285%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.4592%" y="549" width="0.0807%" height="15" fill="rgb(238,223,40)" fg:x="365" fg:w="1"/><text x="29.7092%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.5400%" y="565" width="0.0807%" height="15" fill="rgb(226,169,20)" fg:x="366" fg:w="1"/><text x="29.7900%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.24%)</title><rect x="29.6207%" y="565" width="0.2421%" height="15" fill="rgb(241,64,52)" fg:x="367" fg:w="3"/><text x="29.8707%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="29.6207%" y="549" width="0.2421%" height="15" fill="rgb(228,120,25)" fg:x="367" fg:w="3"/><text x="29.8707%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7821%" y="533" width="0.0807%" height="15" fill="rgb(234,108,19)" fg:x="369" fg:w="1"/><text x="30.0321%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="29.8628%" y="549" width="0.0807%" height="15" fill="rgb(236,133,29)" fg:x="370" fg:w="1"/><text x="30.1128%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.9435%" y="549" width="0.0807%" height="15" fill="rgb(246,174,53)" fg:x="371" fg:w="1"/><text x="30.1935%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.9435%" y="533" width="0.0807%" height="15" fill="rgb(210,105,35)" fg:x="371" fg:w="1"/><text x="30.1935%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.9435%" y="517" width="0.0807%" height="15" fill="rgb(225,27,26)" fg:x="371" fg:w="1"/><text x="30.1935%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.9435%" y="501" width="0.0807%" height="15" fill="rgb(233,2,39)" fg:x="371" fg:w="1"/><text x="30.1935%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.9435%" y="485" width="0.0807%" height="15" fill="rgb(219,164,26)" fg:x="371" fg:w="1"/><text x="30.1935%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.9435%" y="469" width="0.0807%" height="15" fill="rgb(236,211,5)" fg:x="371" fg:w="1"/><text x="30.1935%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.9435%" y="453" width="0.0807%" height="15" fill="rgb(244,227,23)" fg:x="371" fg:w="1"/><text x="30.1935%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.9435%" y="437" width="0.0807%" height="15" fill="rgb(230,184,8)" fg:x="371" fg:w="1"/><text x="30.1935%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.9435%" y="421" width="0.0807%" height="15" fill="rgb(217,125,48)" fg:x="371" fg:w="1"/><text x="30.1935%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.9435%" y="405" width="0.0807%" height="15" fill="rgb(223,192,47)" fg:x="371" fg:w="1"/><text x="30.1935%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.9435%" y="389" width="0.0807%" height="15" fill="rgb(226,119,10)" fg:x="371" fg:w="1"/><text x="30.1935%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.9435%" y="373" width="0.0807%" height="15" fill="rgb(221,49,29)" fg:x="371" fg:w="1"/><text x="30.1935%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.9435%" y="357" width="0.0807%" height="15" fill="rgb(217,205,19)" fg:x="371" fg:w="1"/><text x="30.1935%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.0242%" y="533" width="0.0807%" height="15" fill="rgb(242,104,7)" fg:x="372" fg:w="1"/><text x="30.2742%" y="543.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="30.1049%" y="517" width="0.1614%" height="15" fill="rgb(209,154,48)" fg:x="373" fg:w="2"/><text x="30.3549%" y="527.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (148 samples, 11.95%)</title><rect x="18.4019%" y="629" width="11.9451%" height="15" fill="rgb(219,213,46)" fg:x="228" fg:w="148"/><text x="18.6519%" y="639.50">engine::internal::..</text></g><g><title>engine::session::Session::check_for_changes (147 samples, 11.86%)</title><rect x="18.4826%" y="613" width="11.8644%" height="15" fill="rgb(229,105,38)" fg:x="229" fg:w="147"/><text x="18.7326%" y="623.50">engine::session::S..</text></g><g><title>kernel::compare::any_entity_changes (98 samples, 7.91%)</title><rect x="22.4374%" y="597" width="7.9096%" height="15" fill="rgb(205,151,5)" fg:x="278" fg:w="98"/><text x="22.6874%" y="607.50">kernel::com..</text></g><g><title>treediff::diff::diff (19 samples, 1.53%)</title><rect x="28.8136%" y="581" width="1.5335%" height="15" fill="rgb(248,115,40)" fg:x="357" fg:w="19"/><text x="29.0636%" y="591.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="29.8628%" y="565" width="0.4843%" height="15" fill="rgb(206,179,2)" fg:x="370" fg:w="6"/><text x="30.1128%" y="575.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="30.0242%" y="549" width="0.3228%" height="15" fill="rgb(230,103,24)" fg:x="372" fg:w="4"/><text x="30.2742%" y="559.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="30.1049%" y="533" width="0.2421%" height="15" fill="rgb(218,152,4)" fg:x="373" fg:w="3"/><text x="30.3549%" y="543.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="30.2663%" y="517" width="0.0807%" height="15" fill="rgb(236,161,54)" fg:x="375" fg:w="1"/><text x="30.5163%" y="527.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="30.3471%" y="597" width="0.0807%" height="15" fill="rgb(226,65,17)" fg:x="376" fg:w="1"/><text x="30.5971%" y="607.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="30.3471%" y="581" width="0.0807%" height="15" fill="rgb(221,134,44)" fg:x="376" fg:w="1"/><text x="30.5971%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.3471%" y="565" width="0.0807%" height="15" fill="rgb(251,129,4)" fg:x="376" fg:w="1"/><text x="30.5971%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.3471%" y="549" width="0.0807%" height="15" fill="rgb(244,32,34)" fg:x="376" fg:w="1"/><text x="30.5971%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.3471%" y="533" width="0.0807%" height="15" fill="rgb(251,224,37)" fg:x="376" fg:w="1"/><text x="30.5971%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.3471%" y="517" width="0.0807%" height="15" fill="rgb(248,117,31)" fg:x="376" fg:w="1"/><text x="30.5971%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.3471%" y="501" width="0.0807%" height="15" fill="rgb(222,208,37)" fg:x="376" fg:w="1"/><text x="30.5971%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.3471%" y="485" width="0.0807%" height="15" fill="rgb(234,211,25)" fg:x="376" fg:w="1"/><text x="30.5971%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.3471%" y="469" width="0.0807%" height="15" fill="rgb(211,72,6)" fg:x="376" fg:w="1"/><text x="30.5971%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.3471%" y="453" width="0.0807%" height="15" fill="rgb(249,198,38)" fg:x="376" fg:w="1"/><text x="30.5971%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.3471%" y="437" width="0.0807%" height="15" fill="rgb(221,86,51)" fg:x="376" fg:w="1"/><text x="30.5971%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.3471%" y="421" width="0.0807%" height="15" fill="rgb(226,178,43)" fg:x="376" fg:w="1"/><text x="30.5971%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.3471%" y="405" width="0.0807%" height="15" fill="rgb(215,145,7)" fg:x="376" fg:w="1"/><text x="30.5971%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.3471%" y="389" width="0.0807%" height="15" fill="rgb(250,202,36)" fg:x="376" fg:w="1"/><text x="30.5971%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.3471%" y="373" width="0.0807%" height="15" fill="rgb(215,86,13)" fg:x="376" fg:w="1"/><text x="30.5971%" y="383.50"></text></g><g><title>engine::session::Session::close (169 samples, 13.64%)</title><rect x="16.8684%" y="661" width="13.6400%" height="15" fill="rgb(221,134,12)" fg:x="209" fg:w="169"/><text x="17.1184%" y="671.50">engine::session::Sess..</text></g><g><title>engine::session::Session::save_entity_changes (156 samples, 12.59%)</title><rect x="17.9177%" y="645" width="12.5908%" height="15" fill="rgb(213,82,10)" fg:x="222" fg:w="156"/><text x="18.1677%" y="655.50">engine::session::Se..</text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="30.3471%" y="629" width="0.1614%" height="15" fill="rgb(214,142,0)" fg:x="376" fg:w="2"/><text x="30.5971%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="30.3471%" y="613" width="0.1614%" height="15" fill="rgb(205,145,9)" fg:x="376" fg:w="2"/><text x="30.5971%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="30.4278%" y="597" width="0.0807%" height="15" fill="rgb(244,214,8)" fg:x="377" fg:w="1"/><text x="30.6778%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.4278%" y="581" width="0.0807%" height="15" fill="rgb(224,72,51)" fg:x="377" fg:w="1"/><text x="30.6778%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.4278%" y="565" width="0.0807%" height="15" fill="rgb(233,137,37)" fg:x="377" fg:w="1"/><text x="30.6778%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.4278%" y="549" width="0.0807%" height="15" fill="rgb(208,71,28)" fg:x="377" fg:w="1"/><text x="30.6778%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.4278%" y="533" width="0.0807%" height="15" fill="rgb(226,31,7)" fg:x="377" fg:w="1"/><text x="30.6778%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="30.4278%" y="517" width="0.0807%" height="15" fill="rgb(229,62,18)" fg:x="377" fg:w="1"/><text x="30.6778%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.4278%" y="501" width="0.0807%" height="15" fill="rgb(226,74,28)" fg:x="377" fg:w="1"/><text x="30.6778%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.4278%" y="485" width="0.0807%" height="15" fill="rgb(214,170,18)" fg:x="377" fg:w="1"/><text x="30.6778%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.4278%" y="469" width="0.0807%" height="15" fill="rgb(227,229,35)" fg:x="377" fg:w="1"/><text x="30.6778%" y="479.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="30.4278%" y="453" width="0.0807%" height="15" fill="rgb(225,181,39)" fg:x="377" fg:w="1"/><text x="30.6778%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="30.5892%" y="613" width="0.0807%" height="15" fill="rgb(253,124,44)" fg:x="379" fg:w="1"/><text x="30.8392%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="30.7506%" y="485" width="0.0807%" height="15" fill="rgb(220,75,18)" fg:x="381" fg:w="1"/><text x="31.0006%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="30.7506%" y="469" width="0.0807%" height="15" fill="rgb(239,175,43)" fg:x="381" fg:w="1"/><text x="31.0006%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.7506%" y="453" width="0.0807%" height="15" fill="rgb(228,112,50)" fg:x="381" fg:w="1"/><text x="31.0006%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8313%" y="469" width="0.0807%" height="15" fill="rgb(232,105,36)" fg:x="382" fg:w="1"/><text x="31.0813%" y="479.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8313%" y="453" width="0.0807%" height="15" fill="rgb(227,137,47)" fg:x="382" fg:w="1"/><text x="31.0813%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8313%" y="437" width="0.0807%" height="15" fill="rgb(217,51,9)" fg:x="382" fg:w="1"/><text x="31.0813%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8313%" y="421" width="0.0807%" height="15" fill="rgb(245,117,0)" fg:x="382" fg:w="1"/><text x="31.0813%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.8313%" y="405" width="0.0807%" height="15" fill="rgb(252,52,30)" fg:x="382" fg:w="1"/><text x="31.0813%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.8313%" y="389" width="0.0807%" height="15" fill="rgb(227,85,33)" fg:x="382" fg:w="1"/><text x="31.0813%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.8313%" y="373" width="0.0807%" height="15" fill="rgb(220,157,20)" fg:x="382" fg:w="1"/><text x="31.0813%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.8313%" y="357" width="0.0807%" height="15" fill="rgb(254,14,34)" fg:x="382" fg:w="1"/><text x="31.0813%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.8313%" y="341" width="0.0807%" height="15" fill="rgb(216,103,41)" fg:x="382" fg:w="1"/><text x="31.0813%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.8313%" y="325" width="0.0807%" height="15" fill="rgb(245,221,9)" fg:x="382" fg:w="1"/><text x="31.0813%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.8313%" y="309" width="0.0807%" height="15" fill="rgb(254,136,47)" fg:x="382" fg:w="1"/><text x="31.0813%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.8313%" y="293" width="0.0807%" height="15" fill="rgb(235,71,46)" fg:x="382" fg:w="1"/><text x="31.0813%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.8313%" y="277" width="0.0807%" height="15" fill="rgb(242,154,29)" fg:x="382" fg:w="1"/><text x="31.0813%" y="287.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="30.8313%" y="261" width="0.0807%" height="15" fill="rgb(210,65,31)" fg:x="382" fg:w="1"/><text x="31.0813%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 1.13%)</title><rect x="30.9120%" y="469" width="1.1299%" height="15" fill="rgb(244,9,50)" fg:x="383" fg:w="14"/><text x="31.1620%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 1.13%)</title><rect x="30.9120%" y="453" width="1.1299%" height="15" fill="rgb(215,141,38)" fg:x="383" fg:w="14"/><text x="31.1620%" y="463.50"></text></g><g><title>realloc (14 samples, 1.13%)</title><rect x="30.9120%" y="437" width="1.1299%" height="15" fill="rgb(241,129,6)" fg:x="383" fg:w="14"/><text x="31.1620%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="32.1227%" y="453" width="0.0807%" height="15" fill="rgb(253,169,4)" fg:x="398" fg:w="1"/><text x="32.3727%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="32.1227%" y="437" width="0.0807%" height="15" fill="rgb(237,82,36)" fg:x="398" fg:w="1"/><text x="32.3727%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="32.2034%" y="453" width="0.0807%" height="15" fill="rgb(209,171,11)" fg:x="399" fg:w="1"/><text x="32.4534%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="32.2034%" y="437" width="0.0807%" height="15" fill="rgb(242,19,22)" fg:x="399" fg:w="1"/><text x="32.4534%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.2034%" y="421" width="0.0807%" height="15" fill="rgb(251,122,24)" fg:x="399" fg:w="1"/><text x="32.4534%" y="431.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.16%)</title><rect x="32.2841%" y="453" width="0.1614%" height="15" fill="rgb(226,166,42)" fg:x="400" fg:w="2"/><text x="32.5341%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="32.2841%" y="437" width="0.1614%" height="15" fill="rgb(244,101,48)" fg:x="400" fg:w="2"/><text x="32.5341%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="32.2841%" y="421" width="0.1614%" height="15" fill="rgb(227,125,1)" fg:x="400" fg:w="2"/><text x="32.5341%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="32.2841%" y="405" width="0.1614%" height="15" fill="rgb(206,79,43)" fg:x="400" fg:w="2"/><text x="32.5341%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="32.2841%" y="389" width="0.1614%" height="15" fill="rgb(241,109,41)" fg:x="400" fg:w="2"/><text x="32.5341%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="32.2841%" y="373" width="0.1614%" height="15" fill="rgb(219,73,4)" fg:x="400" fg:w="2"/><text x="32.5341%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="32.2841%" y="357" width="0.1614%" height="15" fill="rgb(239,25,41)" fg:x="400" fg:w="2"/><text x="32.5341%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="32.2841%" y="341" width="0.1614%" height="15" fill="rgb(208,88,46)" fg:x="400" fg:w="2"/><text x="32.5341%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="32.2841%" y="325" width="0.1614%" height="15" fill="rgb(239,184,9)" fg:x="400" fg:w="2"/><text x="32.5341%" y="335.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="32.2841%" y="309" width="0.1614%" height="15" fill="rgb(223,114,13)" fg:x="400" fg:w="2"/><text x="32.5341%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="32.2841%" y="293" width="0.1614%" height="15" fill="rgb(214,28,42)" fg:x="400" fg:w="2"/><text x="32.5341%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="32.2841%" y="277" width="0.1614%" height="15" fill="rgb(252,32,44)" fg:x="400" fg:w="2"/><text x="32.5341%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="32.2841%" y="261" width="0.1614%" height="15" fill="rgb(231,159,4)" fg:x="400" fg:w="2"/><text x="32.5341%" y="271.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="32.2841%" y="245" width="0.1614%" height="15" fill="rgb(210,35,26)" fg:x="400" fg:w="2"/><text x="32.5341%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="32.2841%" y="229" width="0.1614%" height="15" fill="rgb(208,190,37)" fg:x="400" fg:w="2"/><text x="32.5341%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="32.2841%" y="213" width="0.1614%" height="15" fill="rgb(226,148,22)" fg:x="400" fg:w="2"/><text x="32.5341%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="32.2841%" y="197" width="0.1614%" height="15" fill="rgb(242,153,24)" fg:x="400" fg:w="2"/><text x="32.5341%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="32.2841%" y="181" width="0.1614%" height="15" fill="rgb(213,133,7)" fg:x="400" fg:w="2"/><text x="32.5341%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="32.2841%" y="165" width="0.1614%" height="15" fill="rgb(248,206,18)" fg:x="400" fg:w="2"/><text x="32.5341%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="32.3648%" y="149" width="0.0807%" height="15" fill="rgb(233,157,4)" fg:x="401" fg:w="1"/><text x="32.6148%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="32.3648%" y="133" width="0.0807%" height="15" fill="rgb(249,179,32)" fg:x="401" fg:w="1"/><text x="32.6148%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="32.3648%" y="117" width="0.0807%" height="15" fill="rgb(248,69,35)" fg:x="401" fg:w="1"/><text x="32.6148%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="32.3648%" y="101" width="0.0807%" height="15" fill="rgb(249,158,38)" fg:x="401" fg:w="1"/><text x="32.6148%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="32.3648%" y="85" width="0.0807%" height="15" fill="rgb(223,18,43)" fg:x="401" fg:w="1"/><text x="32.6148%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="32.3648%" y="69" width="0.0807%" height="15" fill="rgb(238,42,45)" fg:x="401" fg:w="1"/><text x="32.6148%" y="79.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="32.3648%" y="53" width="0.0807%" height="15" fill="rgb(219,65,47)" fg:x="401" fg:w="1"/><text x="32.6148%" y="63.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (22 samples, 1.78%)</title><rect x="30.8313%" y="485" width="1.7756%" height="15" fill="rgb(248,153,12)" fg:x="382" fg:w="22"/><text x="31.0813%" y="495.50">p..</text></g><g><title>plugins_core::tools::contained_by (7 samples, 0.56%)</title><rect x="32.0420%" y="469" width="0.5650%" height="15" fill="rgb(240,118,4)" fg:x="397" fg:w="7"/><text x="32.2920%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="32.4455%" y="453" width="0.1614%" height="15" fill="rgb(250,96,34)" fg:x="402" fg:w="2"/><text x="32.6955%" y="463.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="32.4455%" y="437" width="0.1614%" height="15" fill="rgb(221,15,4)" fg:x="402" fg:w="2"/><text x="32.6955%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.5262%" y="421" width="0.0807%" height="15" fill="rgb(217,149,33)" fg:x="403" fg:w="1"/><text x="32.7762%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.5262%" y="405" width="0.0807%" height="15" fill="rgb(213,58,29)" fg:x="403" fg:w="1"/><text x="32.7762%" y="415.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="32.6069%" y="485" width="0.3228%" height="15" fill="rgb(236,218,9)" fg:x="404" fg:w="4"/><text x="32.8569%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="32.6069%" y="469" width="0.3228%" height="15" fill="rgb(248,40,19)" fg:x="404" fg:w="4"/><text x="32.8569%" y="479.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="32.6877%" y="453" width="0.2421%" height="15" fill="rgb(212,17,6)" fg:x="405" fg:w="3"/><text x="32.9377%" y="463.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (29 samples, 2.34%)</title><rect x="30.6699%" y="501" width="2.3406%" height="15" fill="rgb(206,212,20)" fg:x="380" fg:w="29"/><text x="30.9199%" y="511.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="32.9298%" y="485" width="0.0807%" height="15" fill="rgb(229,80,37)" fg:x="408" fg:w="1"/><text x="33.1798%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.9298%" y="469" width="0.0807%" height="15" fill="rgb(253,8,37)" fg:x="408" fg:w="1"/><text x="33.1798%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.9298%" y="453" width="0.0807%" height="15" fill="rgb(215,16,43)" fg:x="408" fg:w="1"/><text x="33.1798%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.9298%" y="437" width="0.0807%" height="15" fill="rgb(236,219,16)" fg:x="408" fg:w="1"/><text x="33.1798%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.9298%" y="421" width="0.0807%" height="15" fill="rgb(251,0,3)" fg:x="408" fg:w="1"/><text x="33.1798%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.9298%" y="405" width="0.0807%" height="15" fill="rgb(207,133,37)" fg:x="408" fg:w="1"/><text x="33.1798%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.9298%" y="389" width="0.0807%" height="15" fill="rgb(250,143,20)" fg:x="408" fg:w="1"/><text x="33.1798%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.9298%" y="373" width="0.0807%" height="15" fill="rgb(242,19,50)" fg:x="408" fg:w="1"/><text x="33.1798%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.9298%" y="357" width="0.0807%" height="15" fill="rgb(206,124,43)" fg:x="408" fg:w="1"/><text x="33.1798%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.9298%" y="341" width="0.0807%" height="15" fill="rgb(229,4,38)" fg:x="408" fg:w="1"/><text x="33.1798%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.9298%" y="325" width="0.0807%" height="15" fill="rgb(247,220,45)" fg:x="408" fg:w="1"/><text x="33.1798%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.9298%" y="309" width="0.0807%" height="15" fill="rgb(247,195,0)" fg:x="408" fg:w="1"/><text x="33.1798%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.9298%" y="293" width="0.0807%" height="15" fill="rgb(252,12,19)" fg:x="408" fg:w="1"/><text x="33.1798%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.9298%" y="277" width="0.0807%" height="15" fill="rgb(222,49,50)" fg:x="408" fg:w="1"/><text x="33.1798%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (30 samples, 2.42%)</title><rect x="30.6699%" y="517" width="2.4213%" height="15" fill="rgb(209,157,28)" fg:x="380" fg:w="30"/><text x="30.9199%" y="527.50">&lt;e..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::DomainError&gt; (1 samples, 0.08%)</title><rect x="33.0105%" y="501" width="0.0807%" height="15" fill="rgb(238,174,24)" fg:x="409" fg:w="1"/><text x="33.2605%" y="511.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="33.0912%" y="517" width="0.1614%" height="15" fill="rgb(224,17,28)" fg:x="410" fg:w="2"/><text x="33.3412%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.0912%" y="501" width="0.1614%" height="15" fill="rgb(249,7,29)" fg:x="410" fg:w="2"/><text x="33.3412%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.1719%" y="485" width="0.0807%" height="15" fill="rgb(243,178,4)" fg:x="411" fg:w="1"/><text x="33.4219%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.1719%" y="469" width="0.0807%" height="15" fill="rgb(246,138,35)" fg:x="411" fg:w="1"/><text x="33.4219%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.1719%" y="453" width="0.0807%" height="15" fill="rgb(251,85,18)" fg:x="411" fg:w="1"/><text x="33.4219%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.1719%" y="437" width="0.0807%" height="15" fill="rgb(254,55,9)" fg:x="411" fg:w="1"/><text x="33.4219%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.1719%" y="421" width="0.0807%" height="15" fill="rgb(248,4,50)" fg:x="411" fg:w="1"/><text x="33.4219%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.1719%" y="405" width="0.0807%" height="15" fill="rgb(215,208,14)" fg:x="411" fg:w="1"/><text x="33.4219%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.1719%" y="389" width="0.0807%" height="15" fill="rgb(218,37,18)" fg:x="411" fg:w="1"/><text x="33.4219%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.1719%" y="373" width="0.0807%" height="15" fill="rgb(206,104,13)" fg:x="411" fg:w="1"/><text x="33.4219%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.1719%" y="357" width="0.0807%" height="15" fill="rgb(248,94,22)" fg:x="411" fg:w="1"/><text x="33.4219%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.1719%" y="341" width="0.0807%" height="15" fill="rgb(235,42,46)" fg:x="411" fg:w="1"/><text x="33.4219%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.1719%" y="325" width="0.0807%" height="15" fill="rgb(220,228,48)" fg:x="411" fg:w="1"/><text x="33.4219%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.1719%" y="309" width="0.0807%" height="15" fill="rgb(216,58,12)" fg:x="411" fg:w="1"/><text x="33.4219%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.2526%" y="485" width="0.0807%" height="15" fill="rgb(223,97,52)" fg:x="412" fg:w="1"/><text x="33.5026%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="33.2526%" y="501" width="0.1614%" height="15" fill="rgb(208,159,17)" fg:x="412" fg:w="2"/><text x="33.5026%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="33.3333%" y="485" width="0.0807%" height="15" fill="rgb(215,172,9)" fg:x="413" fg:w="1"/><text x="33.5833%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="33.3333%" y="469" width="0.0807%" height="15" fill="rgb(252,175,30)" fg:x="413" fg:w="1"/><text x="33.5833%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4948%" y="469" width="0.0807%" height="15" fill="rgb(209,159,10)" fg:x="415" fg:w="1"/><text x="33.7448%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4948%" y="453" width="0.0807%" height="15" fill="rgb(229,73,51)" fg:x="415" fg:w="1"/><text x="33.7448%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4948%" y="437" width="0.0807%" height="15" fill="rgb(208,212,43)" fg:x="415" fg:w="1"/><text x="33.7448%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4948%" y="421" width="0.0807%" height="15" fill="rgb(254,123,53)" fg:x="415" fg:w="1"/><text x="33.7448%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.4948%" y="405" width="0.0807%" height="15" fill="rgb(254,128,49)" fg:x="415" fg:w="1"/><text x="33.7448%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.4948%" y="389" width="0.0807%" height="15" fill="rgb(246,16,16)" fg:x="415" fg:w="1"/><text x="33.7448%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.4948%" y="373" width="0.0807%" height="15" fill="rgb(209,200,1)" fg:x="415" fg:w="1"/><text x="33.7448%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="33.4948%" y="357" width="0.0807%" height="15" fill="rgb(235,9,3)" fg:x="415" fg:w="1"/><text x="33.7448%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="33.4948%" y="341" width="0.0807%" height="15" fill="rgb(233,121,54)" fg:x="415" fg:w="1"/><text x="33.7448%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="33.4140%" y="501" width="0.3228%" height="15" fill="rgb(236,80,25)" fg:x="414" fg:w="4"/><text x="33.6640%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="33.4140%" y="485" width="0.3228%" height="15" fill="rgb(220,44,24)" fg:x="414" fg:w="4"/><text x="33.6640%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.5755%" y="469" width="0.1614%" height="15" fill="rgb(236,225,16)" fg:x="416" fg:w="2"/><text x="33.8255%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.5755%" y="453" width="0.1614%" height="15" fill="rgb(237,140,0)" fg:x="416" fg:w="2"/><text x="33.8255%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="33.6562%" y="437" width="0.0807%" height="15" fill="rgb(243,225,53)" fg:x="417" fg:w="1"/><text x="33.9062%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="33.6562%" y="421" width="0.0807%" height="15" fill="rgb(240,140,30)" fg:x="417" fg:w="1"/><text x="33.9062%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="33.6562%" y="405" width="0.0807%" height="15" fill="rgb(217,51,16)" fg:x="417" fg:w="1"/><text x="33.9062%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.6562%" y="389" width="0.0807%" height="15" fill="rgb(245,75,50)" fg:x="417" fg:w="1"/><text x="33.9062%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.6562%" y="373" width="0.0807%" height="15" fill="rgb(208,174,22)" fg:x="417" fg:w="1"/><text x="33.9062%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="33.6562%" y="357" width="0.0807%" height="15" fill="rgb(219,98,50)" fg:x="417" fg:w="1"/><text x="33.9062%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7369%" y="389" width="0.0807%" height="15" fill="rgb(243,138,3)" fg:x="418" fg:w="1"/><text x="33.9869%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.7369%" y="469" width="0.1614%" height="15" fill="rgb(243,132,26)" fg:x="418" fg:w="2"/><text x="33.9869%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="33.7369%" y="453" width="0.1614%" height="15" fill="rgb(250,201,8)" fg:x="418" fg:w="2"/><text x="33.9869%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.7369%" y="437" width="0.1614%" height="15" fill="rgb(213,91,26)" fg:x="418" fg:w="2"/><text x="33.9869%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="33.7369%" y="421" width="0.1614%" height="15" fill="rgb(229,117,1)" fg:x="418" fg:w="2"/><text x="33.9869%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="33.7369%" y="405" width="0.1614%" height="15" fill="rgb(229,24,6)" fg:x="418" fg:w="2"/><text x="33.9869%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.8176%" y="389" width="0.0807%" height="15" fill="rgb(206,69,11)" fg:x="419" fg:w="1"/><text x="34.0676%" y="399.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="33.8983%" y="469" width="0.0807%" height="15" fill="rgb(234,111,34)" fg:x="420" fg:w="1"/><text x="34.1483%" y="479.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (7 samples, 0.56%)</title><rect x="33.7369%" y="501" width="0.5650%" height="15" fill="rgb(213,187,51)" fg:x="418" fg:w="7"/><text x="33.9869%" y="511.50"></text></g><g><title>kernel::model::Entity::replace_scope (7 samples, 0.56%)</title><rect x="33.7369%" y="485" width="0.5650%" height="15" fill="rgb(207,45,11)" fg:x="418" fg:w="7"/><text x="33.9869%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.32%)</title><rect x="33.9790%" y="469" width="0.3228%" height="15" fill="rgb(225,151,47)" fg:x="421" fg:w="4"/><text x="34.2290%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="33.9790%" y="453" width="0.3228%" height="15" fill="rgb(211,226,5)" fg:x="421" fg:w="4"/><text x="34.2290%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.2211%" y="437" width="0.0807%" height="15" fill="rgb(214,83,52)" fg:x="424" fg:w="1"/><text x="34.4711%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.3019%" y="485" width="0.0807%" height="15" fill="rgb(229,49,53)" fg:x="425" fg:w="1"/><text x="34.5519%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="34.3826%" y="485" width="0.1614%" height="15" fill="rgb(246,8,28)" fg:x="426" fg:w="2"/><text x="34.6326%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="34.3826%" y="469" width="0.1614%" height="15" fill="rgb(207,28,41)" fg:x="426" fg:w="2"/><text x="34.6326%" y="479.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="34.4633%" y="453" width="0.0807%" height="15" fill="rgb(254,22,25)" fg:x="427" fg:w="1"/><text x="34.7133%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="34.4633%" y="437" width="0.0807%" height="15" fill="rgb(209,120,42)" fg:x="427" fg:w="1"/><text x="34.7133%" y="447.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="34.4633%" y="421" width="0.0807%" height="15" fill="rgb(216,194,18)" fg:x="427" fg:w="1"/><text x="34.7133%" y="431.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="34.4633%" y="405" width="0.0807%" height="15" fill="rgb(213,70,17)" fg:x="427" fg:w="1"/><text x="34.7133%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.4633%" y="389" width="0.0807%" height="15" fill="rgb(228,66,19)" fg:x="427" fg:w="1"/><text x="34.7133%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.4633%" y="373" width="0.0807%" height="15" fill="rgb(236,221,54)" fg:x="427" fg:w="1"/><text x="34.7133%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.4633%" y="357" width="0.0807%" height="15" fill="rgb(207,175,15)" fg:x="427" fg:w="1"/><text x="34.7133%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.4633%" y="341" width="0.0807%" height="15" fill="rgb(234,76,8)" fg:x="427" fg:w="1"/><text x="34.7133%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.4633%" y="325" width="0.0807%" height="15" fill="rgb(243,106,0)" fg:x="427" fg:w="1"/><text x="34.7133%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.4633%" y="309" width="0.0807%" height="15" fill="rgb(208,48,19)" fg:x="427" fg:w="1"/><text x="34.7133%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.4633%" y="293" width="0.0807%" height="15" fill="rgb(251,50,29)" fg:x="427" fg:w="1"/><text x="34.7133%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.4633%" y="277" width="0.0807%" height="15" fill="rgb(222,31,49)" fg:x="427" fg:w="1"/><text x="34.7133%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.4633%" y="261" width="0.0807%" height="15" fill="rgb(232,33,18)" fg:x="427" fg:w="1"/><text x="34.7133%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.4633%" y="245" width="0.0807%" height="15" fill="rgb(209,1,44)" fg:x="427" fg:w="1"/><text x="34.7133%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.4633%" y="229" width="0.0807%" height="15" fill="rgb(211,7,1)" fg:x="427" fg:w="1"/><text x="34.7133%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.4633%" y="213" width="0.0807%" height="15" fill="rgb(224,111,27)" fg:x="427" fg:w="1"/><text x="34.7133%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4633%" y="197" width="0.0807%" height="15" fill="rgb(252,195,39)" fg:x="427" fg:w="1"/><text x="34.7133%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="34.5440%" y="437" width="0.0807%" height="15" fill="rgb(237,198,5)" fg:x="428" fg:w="1"/><text x="34.7940%" y="447.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="34.5440%" y="421" width="0.0807%" height="15" fill="rgb(232,148,1)" fg:x="428" fg:w="1"/><text x="34.7940%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.5440%" y="405" width="0.0807%" height="15" fill="rgb(249,41,3)" fg:x="428" fg:w="1"/><text x="34.7940%" y="415.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="34.5440%" y="389" width="0.0807%" height="15" fill="rgb(215,14,33)" fg:x="428" fg:w="1"/><text x="34.7940%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="34.5440%" y="373" width="0.0807%" height="15" fill="rgb(209,146,24)" fg:x="428" fg:w="1"/><text x="34.7940%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.5440%" y="357" width="0.0807%" height="15" fill="rgb(219,51,47)" fg:x="428" fg:w="1"/><text x="34.7940%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.5440%" y="341" width="0.0807%" height="15" fill="rgb(234,217,40)" fg:x="428" fg:w="1"/><text x="34.7940%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.5440%" y="325" width="0.0807%" height="15" fill="rgb(228,34,26)" fg:x="428" fg:w="1"/><text x="34.7940%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.5440%" y="309" width="0.0807%" height="15" fill="rgb(224,50,29)" fg:x="428" fg:w="1"/><text x="34.7940%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.5440%" y="293" width="0.0807%" height="15" fill="rgb(205,79,51)" fg:x="428" fg:w="1"/><text x="34.7940%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.5440%" y="277" width="0.0807%" height="15" fill="rgb(218,136,28)" fg:x="428" fg:w="1"/><text x="34.7940%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.5440%" y="261" width="0.0807%" height="15" fill="rgb(220,150,10)" fg:x="428" fg:w="1"/><text x="34.7940%" y="271.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="34.3019%" y="501" width="0.4036%" height="15" fill="rgb(242,158,47)" fg:x="425" fg:w="5"/><text x="34.5519%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="34.5440%" y="485" width="0.1614%" height="15" fill="rgb(209,68,0)" fg:x="428" fg:w="2"/><text x="34.7940%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="34.5440%" y="469" width="0.1614%" height="15" fill="rgb(208,13,41)" fg:x="428" fg:w="2"/><text x="34.7940%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (2 samples, 0.16%)</title><rect x="34.5440%" y="453" width="0.1614%" height="15" fill="rgb(226,201,7)" fg:x="428" fg:w="2"/><text x="34.7940%" y="463.50"></text></g><g><title>kernel::model::Kind::new (1 samples, 0.08%)</title><rect x="34.6247%" y="437" width="0.0807%" height="15" fill="rgb(236,103,26)" fg:x="429" fg:w="1"/><text x="34.8747%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (52 samples, 4.20%)</title><rect x="30.6699%" y="533" width="4.1969%" height="15" fill="rgb(243,162,8)" fg:x="380" fg:w="52"/><text x="30.9199%" y="543.50">&lt;plug..</text></g><g><title>plugins_core::tools::move_between (20 samples, 1.61%)</title><rect x="33.2526%" y="517" width="1.6142%" height="15" fill="rgb(237,225,11)" fg:x="412" fg:w="20"/><text x="33.5026%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="34.7054%" y="501" width="0.1614%" height="15" fill="rgb(247,186,32)" fg:x="430" fg:w="2"/><text x="34.9554%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="34.7861%" y="485" width="0.0807%" height="15" fill="rgb(215,26,28)" fg:x="431" fg:w="1"/><text x="35.0361%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.7861%" y="469" width="0.0807%" height="15" fill="rgb(208,121,6)" fg:x="431" fg:w="1"/><text x="35.0361%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="34.7861%" y="453" width="0.0807%" height="15" fill="rgb(225,91,3)" fg:x="431" fg:w="1"/><text x="35.0361%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::key (1 samples, 0.08%)</title><rect x="34.7861%" y="437" width="0.0807%" height="15" fill="rgb(246,119,36)" fg:x="431" fg:w="1"/><text x="35.0361%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="34.9475%" y="485" width="0.0807%" height="15" fill="rgb(254,173,2)" fg:x="433" fg:w="1"/><text x="35.1975%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="35.0282%" y="469" width="0.4036%" height="15" fill="rgb(209,87,54)" fg:x="434" fg:w="5"/><text x="35.2782%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="35.0282%" y="453" width="0.4036%" height="15" fill="rgb(223,216,20)" fg:x="434" fg:w="5"/><text x="35.2782%" y="463.50"></text></g><g><title>realloc (5 samples, 0.40%)</title><rect x="35.0282%" y="437" width="0.4036%" height="15" fill="rgb(220,31,8)" fg:x="434" fg:w="5"/><text x="35.2782%" y="447.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="35.4318%" y="453" width="0.0807%" height="15" fill="rgb(220,185,15)" fg:x="439" fg:w="1"/><text x="35.6818%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="35.4318%" y="437" width="0.0807%" height="15" fill="rgb(247,190,50)" fg:x="439" fg:w="1"/><text x="35.6818%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="35.4318%" y="421" width="0.0807%" height="15" fill="rgb(239,173,47)" fg:x="439" fg:w="1"/><text x="35.6818%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="35.4318%" y="405" width="0.0807%" height="15" fill="rgb(218,190,42)" fg:x="439" fg:w="1"/><text x="35.6818%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="35.4318%" y="389" width="0.0807%" height="15" fill="rgb(251,207,16)" fg:x="439" fg:w="1"/><text x="35.6818%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.4318%" y="373" width="0.0807%" height="15" fill="rgb(222,199,47)" fg:x="439" fg:w="1"/><text x="35.6818%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="35.4318%" y="357" width="0.0807%" height="15" fill="rgb(245,190,7)" fg:x="439" fg:w="1"/><text x="35.6818%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="35.4318%" y="341" width="0.0807%" height="15" fill="rgb(239,85,38)" fg:x="439" fg:w="1"/><text x="35.6818%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="35.4318%" y="325" width="0.0807%" height="15" fill="rgb(229,69,51)" fg:x="439" fg:w="1"/><text x="35.6818%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="35.4318%" y="309" width="0.0807%" height="15" fill="rgb(231,104,51)" fg:x="439" fg:w="1"/><text x="35.6818%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="35.5932%" y="421" width="0.0807%" height="15" fill="rgb(235,49,4)" fg:x="441" fg:w="1"/><text x="35.8432%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="35.5932%" y="405" width="0.0807%" height="15" fill="rgb(246,166,20)" fg:x="441" fg:w="1"/><text x="35.8432%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="35.5932%" y="389" width="0.0807%" height="15" fill="rgb(230,119,37)" fg:x="441" fg:w="1"/><text x="35.8432%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.6739%" y="421" width="0.0807%" height="15" fill="rgb(234,77,34)" fg:x="442" fg:w="1"/><text x="35.9239%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="35.6739%" y="405" width="0.0807%" height="15" fill="rgb(211,222,33)" fg:x="442" fg:w="1"/><text x="35.9239%" y="415.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (10 samples, 0.81%)</title><rect x="35.0282%" y="485" width="0.8071%" height="15" fill="rgb(226,45,42)" fg:x="434" fg:w="10"/><text x="35.2782%" y="495.50"></text></g><g><title>plugins_core::tools::contained_by (5 samples, 0.40%)</title><rect x="35.4318%" y="469" width="0.4036%" height="15" fill="rgb(215,174,28)" fg:x="439" fg:w="5"/><text x="35.6818%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="35.5125%" y="453" width="0.3228%" height="15" fill="rgb(254,173,49)" fg:x="440" fg:w="4"/><text x="35.7625%" y="463.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="35.5932%" y="437" width="0.2421%" height="15" fill="rgb(229,191,6)" fg:x="441" fg:w="3"/><text x="35.8432%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.7546%" y="421" width="0.0807%" height="15" fill="rgb(212,145,22)" fg:x="443" fg:w="1"/><text x="36.0046%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.7546%" y="405" width="0.0807%" height="15" fill="rgb(226,6,51)" fg:x="443" fg:w="1"/><text x="36.0046%" y="415.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (13 samples, 1.05%)</title><rect x="34.8668%" y="501" width="1.0492%" height="15" fill="rgb(227,128,8)" fg:x="432" fg:w="13"/><text x="35.1168%" y="511.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (1 samples, 0.08%)</title><rect x="35.8354%" y="485" width="0.0807%" height="15" fill="rgb(205,24,10)" fg:x="444" fg:w="1"/><text x="36.0854%" y="495.50"></text></g><g><title>plugins_core::finding::matches_description (1 samples, 0.08%)</title><rect x="35.8354%" y="469" width="0.0807%" height="15" fill="rgb(217,147,27)" fg:x="444" fg:w="1"/><text x="36.0854%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="35.8354%" y="453" width="0.0807%" height="15" fill="rgb(250,82,42)" fg:x="444" fg:w="1"/><text x="36.0854%" y="463.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="35.8354%" y="437" width="0.0807%" height="15" fill="rgb(248,93,17)" fg:x="444" fg:w="1"/><text x="36.0854%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (14 samples, 1.13%)</title><rect x="34.8668%" y="517" width="1.1299%" height="15" fill="rgb(254,212,40)" fg:x="432" fg:w="14"/><text x="35.1168%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::DomainError&gt; (1 samples, 0.08%)</title><rect x="35.9161%" y="501" width="0.0807%" height="15" fill="rgb(229,209,2)" fg:x="445" fg:w="1"/><text x="36.1661%" y="511.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="35.9968%" y="517" width="0.1614%" height="15" fill="rgb(211,50,43)" fg:x="446" fg:w="2"/><text x="36.2468%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="35.9968%" y="501" width="0.1614%" height="15" fill="rgb(245,196,29)" fg:x="446" fg:w="2"/><text x="36.2468%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="35.9968%" y="485" width="0.1614%" height="15" fill="rgb(216,132,13)" fg:x="446" fg:w="2"/><text x="36.2468%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="35.9968%" y="469" width="0.1614%" height="15" fill="rgb(251,108,21)" fg:x="446" fg:w="2"/><text x="36.2468%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="35.9968%" y="453" width="0.1614%" height="15" fill="rgb(229,174,54)" fg:x="446" fg:w="2"/><text x="36.2468%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="35.9968%" y="437" width="0.1614%" height="15" fill="rgb(211,175,47)" fg:x="446" fg:w="2"/><text x="36.2468%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="35.9968%" y="421" width="0.1614%" height="15" fill="rgb(234,5,37)" fg:x="446" fg:w="2"/><text x="36.2468%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="35.9968%" y="405" width="0.1614%" height="15" fill="rgb(244,150,43)" fg:x="446" fg:w="2"/><text x="36.2468%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="35.9968%" y="389" width="0.1614%" height="15" fill="rgb(242,172,38)" fg:x="446" fg:w="2"/><text x="36.2468%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="35.9968%" y="373" width="0.1614%" height="15" fill="rgb(205,27,8)" fg:x="446" fg:w="2"/><text x="36.2468%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="35.9968%" y="357" width="0.1614%" height="15" fill="rgb(217,57,3)" fg:x="446" fg:w="2"/><text x="36.2468%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="35.9968%" y="341" width="0.1614%" height="15" fill="rgb(242,21,38)" fg:x="446" fg:w="2"/><text x="36.2468%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="35.9968%" y="325" width="0.1614%" height="15" fill="rgb(209,64,43)" fg:x="446" fg:w="2"/><text x="36.2468%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.9968%" y="309" width="0.1614%" height="15" fill="rgb(222,2,46)" fg:x="446" fg:w="2"/><text x="36.2468%" y="319.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="36.1582%" y="517" width="0.0807%" height="15" fill="rgb(218,19,44)" fg:x="448" fg:w="1"/><text x="36.4082%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="36.1582%" y="501" width="0.0807%" height="15" fill="rgb(240,203,42)" fg:x="448" fg:w="1"/><text x="36.4082%" y="511.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="36.1582%" y="485" width="0.0807%" height="15" fill="rgb(229,23,45)" fg:x="448" fg:w="1"/><text x="36.4082%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.1582%" y="469" width="0.0807%" height="15" fill="rgb(205,228,51)" fg:x="448" fg:w="1"/><text x="36.4082%" y="479.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.2389%" y="485" width="0.0807%" height="15" fill="rgb(239,36,20)" fg:x="449" fg:w="1"/><text x="36.4889%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.2389%" y="469" width="0.0807%" height="15" fill="rgb(248,172,27)" fg:x="449" fg:w="1"/><text x="36.4889%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.2389%" y="453" width="0.0807%" height="15" fill="rgb(244,55,32)" fg:x="449" fg:w="1"/><text x="36.4889%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.2389%" y="437" width="0.0807%" height="15" fill="rgb(215,97,16)" fg:x="449" fg:w="1"/><text x="36.4889%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.2389%" y="421" width="0.0807%" height="15" fill="rgb(224,80,29)" fg:x="449" fg:w="1"/><text x="36.4889%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.2389%" y="405" width="0.0807%" height="15" fill="rgb(216,93,47)" fg:x="449" fg:w="1"/><text x="36.4889%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.2389%" y="389" width="0.0807%" height="15" fill="rgb(238,159,10)" fg:x="449" fg:w="1"/><text x="36.4889%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.2389%" y="373" width="0.0807%" height="15" fill="rgb(223,98,29)" fg:x="449" fg:w="1"/><text x="36.4889%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.4003%" y="469" width="0.0807%" height="15" fill="rgb(210,176,23)" fg:x="451" fg:w="1"/><text x="36.6503%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.4003%" y="453" width="0.0807%" height="15" fill="rgb(242,162,27)" fg:x="451" fg:w="1"/><text x="36.6503%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.4003%" y="437" width="0.0807%" height="15" fill="rgb(245,109,32)" fg:x="451" fg:w="1"/><text x="36.6503%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.4003%" y="421" width="0.0807%" height="15" fill="rgb(248,87,8)" fg:x="451" fg:w="1"/><text x="36.6503%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.4003%" y="405" width="0.0807%" height="15" fill="rgb(250,160,50)" fg:x="451" fg:w="1"/><text x="36.6503%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.4003%" y="389" width="0.0807%" height="15" fill="rgb(246,165,25)" fg:x="451" fg:w="1"/><text x="36.6503%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.4003%" y="373" width="0.0807%" height="15" fill="rgb(249,219,3)" fg:x="451" fg:w="1"/><text x="36.6503%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.4003%" y="357" width="0.0807%" height="15" fill="rgb(226,66,5)" fg:x="451" fg:w="1"/><text x="36.6503%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.4003%" y="341" width="0.0807%" height="15" fill="rgb(250,220,43)" fg:x="451" fg:w="1"/><text x="36.6503%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.4003%" y="325" width="0.0807%" height="15" fill="rgb(225,111,31)" fg:x="451" fg:w="1"/><text x="36.6503%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.4003%" y="309" width="0.0807%" height="15" fill="rgb(248,106,18)" fg:x="451" fg:w="1"/><text x="36.6503%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.4003%" y="293" width="0.0807%" height="15" fill="rgb(220,226,45)" fg:x="451" fg:w="1"/><text x="36.6503%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.4003%" y="277" width="0.0807%" height="15" fill="rgb(208,58,53)" fg:x="451" fg:w="1"/><text x="36.6503%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.4003%" y="261" width="0.0807%" height="15" fill="rgb(209,133,1)" fg:x="451" fg:w="1"/><text x="36.6503%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.4003%" y="245" width="0.0807%" height="15" fill="rgb(228,216,27)" fg:x="451" fg:w="1"/><text x="36.6503%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="36.4810%" y="469" width="0.0807%" height="15" fill="rgb(238,155,2)" fg:x="452" fg:w="1"/><text x="36.7310%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="36.4810%" y="453" width="0.0807%" height="15" fill="rgb(244,99,37)" fg:x="452" fg:w="1"/><text x="36.7310%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="36.4810%" y="437" width="0.0807%" height="15" fill="rgb(254,32,3)" fg:x="452" fg:w="1"/><text x="36.7310%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="36.4810%" y="421" width="0.0807%" height="15" fill="rgb(234,46,50)" fg:x="452" fg:w="1"/><text x="36.7310%" y="431.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="36.4810%" y="405" width="0.0807%" height="15" fill="rgb(232,118,51)" fg:x="452" fg:w="1"/><text x="36.7310%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.5617%" y="469" width="0.0807%" height="15" fill="rgb(207,24,32)" fg:x="453" fg:w="1"/><text x="36.8117%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="36.5617%" y="453" width="0.0807%" height="15" fill="rgb(208,107,43)" fg:x="453" fg:w="1"/><text x="36.8117%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="36.6425%" y="437" width="0.0807%" height="15" fill="rgb(231,28,9)" fg:x="454" fg:w="1"/><text x="36.8925%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="36.6425%" y="421" width="0.0807%" height="15" fill="rgb(241,204,15)" fg:x="454" fg:w="1"/><text x="36.8925%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="36.6425%" y="405" width="0.0807%" height="15" fill="rgb(214,54,15)" fg:x="454" fg:w="1"/><text x="36.8925%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.6425%" y="389" width="0.0807%" height="15" fill="rgb(230,12,28)" fg:x="454" fg:w="1"/><text x="36.8925%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.6425%" y="373" width="0.0807%" height="15" fill="rgb(221,171,5)" fg:x="454" fg:w="1"/><text x="36.8925%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (7 samples, 0.56%)</title><rect x="36.2389%" y="501" width="0.5650%" height="15" fill="rgb(207,72,25)" fg:x="449" fg:w="7"/><text x="36.4889%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.48%)</title><rect x="36.3196%" y="485" width="0.4843%" height="15" fill="rgb(249,79,37)" fg:x="450" fg:w="6"/><text x="36.5696%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.6425%" y="469" width="0.1614%" height="15" fill="rgb(209,98,49)" fg:x="454" fg:w="2"/><text x="36.8925%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.6425%" y="453" width="0.1614%" height="15" fill="rgb(221,62,13)" fg:x="454" fg:w="2"/><text x="36.8925%" y="463.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="36.7232%" y="437" width="0.0807%" height="15" fill="rgb(223,39,6)" fg:x="455" fg:w="1"/><text x="36.9732%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="36.8846%" y="469" width="0.1614%" height="15" fill="rgb(246,163,20)" fg:x="457" fg:w="2"/><text x="37.1346%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="36.9653%" y="453" width="0.0807%" height="15" fill="rgb(211,111,29)" fg:x="458" fg:w="1"/><text x="37.2153%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="36.9653%" y="437" width="0.0807%" height="15" fill="rgb(243,118,5)" fg:x="458" fg:w="1"/><text x="37.2153%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.9653%" y="421" width="0.0807%" height="15" fill="rgb(240,144,52)" fg:x="458" fg:w="1"/><text x="37.2153%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.1267%" y="437" width="0.0807%" height="15" fill="rgb(244,158,36)" fg:x="460" fg:w="1"/><text x="37.3767%" y="447.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (8 samples, 0.65%)</title><rect x="36.8039%" y="501" width="0.6457%" height="15" fill="rgb(241,109,37)" fg:x="456" fg:w="8"/><text x="37.0539%" y="511.50"></text></g><g><title>kernel::model::Entity::replace_scope (7 samples, 0.56%)</title><rect x="36.8846%" y="485" width="0.5650%" height="15" fill="rgb(213,95,32)" fg:x="457" fg:w="7"/><text x="37.1346%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (5 samples, 0.40%)</title><rect x="37.0460%" y="469" width="0.4036%" height="15" fill="rgb(252,193,9)" fg:x="459" fg:w="5"/><text x="37.2960%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="37.0460%" y="453" width="0.4036%" height="15" fill="rgb(225,213,21)" fg:x="459" fg:w="5"/><text x="37.2960%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="37.2074%" y="437" width="0.2421%" height="15" fill="rgb(220,172,46)" fg:x="461" fg:w="3"/><text x="37.4574%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="37.2074%" y="421" width="0.2421%" height="15" fill="rgb(235,75,41)" fg:x="461" fg:w="3"/><text x="37.4574%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="37.2074%" y="405" width="0.2421%" height="15" fill="rgb(213,86,9)" fg:x="461" fg:w="3"/><text x="37.4574%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.3688%" y="389" width="0.0807%" height="15" fill="rgb(238,127,51)" fg:x="463" fg:w="1"/><text x="37.6188%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (33 samples, 2.66%)</title><rect x="34.8668%" y="533" width="2.6634%" height="15" fill="rgb(215,2,54)" fg:x="432" fg:w="33"/><text x="35.1168%" y="543.50">&lt;p..</text></g><g><title>plugins_core::tools::move_between (16 samples, 1.29%)</title><rect x="36.2389%" y="517" width="1.2914%" height="15" fill="rgb(245,80,6)" fg:x="449" fg:w="16"/><text x="36.4889%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="37.4496%" y="501" width="0.0807%" height="15" fill="rgb(233,106,42)" fg:x="464" fg:w="1"/><text x="37.6996%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="37.4496%" y="485" width="0.0807%" height="15" fill="rgb(244,86,38)" fg:x="464" fg:w="1"/><text x="37.6996%" y="495.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="37.4496%" y="469" width="0.0807%" height="15" fill="rgb(242,167,7)" fg:x="464" fg:w="1"/><text x="37.6996%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.4496%" y="453" width="0.0807%" height="15" fill="rgb(218,216,3)" fg:x="464" fg:w="1"/><text x="37.6996%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.4496%" y="437" width="0.0807%" height="15" fill="rgb(206,136,36)" fg:x="464" fg:w="1"/><text x="37.6996%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.4496%" y="421" width="0.0807%" height="15" fill="rgb(206,206,15)" fg:x="464" fg:w="1"/><text x="37.6996%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.4496%" y="405" width="0.0807%" height="15" fill="rgb(207,163,34)" fg:x="464" fg:w="1"/><text x="37.6996%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.4496%" y="389" width="0.0807%" height="15" fill="rgb(240,127,22)" fg:x="464" fg:w="1"/><text x="37.6996%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.4496%" y="373" width="0.0807%" height="15" fill="rgb(227,49,5)" fg:x="464" fg:w="1"/><text x="37.6996%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.4496%" y="357" width="0.0807%" height="15" fill="rgb(231,8,6)" fg:x="464" fg:w="1"/><text x="37.6996%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.4496%" y="341" width="0.0807%" height="15" fill="rgb(223,21,24)" fg:x="464" fg:w="1"/><text x="37.6996%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.4496%" y="325" width="0.0807%" height="15" fill="rgb(244,44,52)" fg:x="464" fg:w="1"/><text x="37.6996%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.4496%" y="309" width="0.0807%" height="15" fill="rgb(207,73,28)" fg:x="464" fg:w="1"/><text x="37.6996%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.4496%" y="293" width="0.0807%" height="15" fill="rgb(234,215,10)" fg:x="464" fg:w="1"/><text x="37.6996%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4496%" y="277" width="0.0807%" height="15" fill="rgb(236,85,3)" fg:x="464" fg:w="1"/><text x="37.6996%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="37.5303%" y="533" width="0.0807%" height="15" fill="rgb(236,102,39)" fg:x="465" fg:w="1"/><text x="37.7803%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.5303%" y="517" width="0.0807%" height="15" fill="rgb(243,50,8)" fg:x="465" fg:w="1"/><text x="37.7803%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6110%" y="517" width="0.0807%" height="15" fill="rgb(207,111,4)" fg:x="466" fg:w="1"/><text x="37.8610%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6110%" y="501" width="0.0807%" height="15" fill="rgb(230,52,42)" fg:x="466" fg:w="1"/><text x="37.8610%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.6110%" y="485" width="0.0807%" height="15" fill="rgb(252,178,50)" fg:x="466" fg:w="1"/><text x="37.8610%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.6110%" y="469" width="0.0807%" height="15" fill="rgb(234,46,35)" fg:x="466" fg:w="1"/><text x="37.8610%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.6110%" y="453" width="0.0807%" height="15" fill="rgb(228,69,37)" fg:x="466" fg:w="1"/><text x="37.8610%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6110%" y="437" width="0.0807%" height="15" fill="rgb(221,21,11)" fg:x="466" fg:w="1"/><text x="37.8610%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6110%" y="421" width="0.0807%" height="15" fill="rgb(223,56,9)" fg:x="466" fg:w="1"/><text x="37.8610%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.6110%" y="405" width="0.0807%" height="15" fill="rgb(234,30,19)" fg:x="466" fg:w="1"/><text x="37.8610%" y="415.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="37.6917%" y="437" width="0.0807%" height="15" fill="rgb(211,64,54)" fg:x="467" fg:w="1"/><text x="37.9417%" y="447.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.08%)</title><rect x="37.6917%" y="421" width="0.0807%" height="15" fill="rgb(250,189,5)" fg:x="467" fg:w="1"/><text x="37.9417%" y="431.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.16%)</title><rect x="37.6917%" y="501" width="0.1614%" height="15" fill="rgb(214,180,13)" fg:x="467" fg:w="2"/><text x="37.9417%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="37.6917%" y="485" width="0.1614%" height="15" fill="rgb(238,40,40)" fg:x="467" fg:w="2"/><text x="37.9417%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="37.6917%" y="469" width="0.1614%" height="15" fill="rgb(214,101,38)" fg:x="467" fg:w="2"/><text x="37.9417%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="37.6917%" y="453" width="0.1614%" height="15" fill="rgb(242,65,53)" fg:x="467" fg:w="2"/><text x="37.9417%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.7724%" y="437" width="0.0807%" height="15" fill="rgb(230,22,45)" fg:x="468" fg:w="1"/><text x="38.0224%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.7724%" y="421" width="0.0807%" height="15" fill="rgb(223,77,1)" fg:x="468" fg:w="1"/><text x="38.0224%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.7724%" y="405" width="0.0807%" height="15" fill="rgb(227,33,37)" fg:x="468" fg:w="1"/><text x="38.0224%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="37.7724%" y="389" width="0.0807%" height="15" fill="rgb(224,148,39)" fg:x="468" fg:w="1"/><text x="38.0224%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="37.7724%" y="373" width="0.0807%" height="15" fill="rgb(232,212,39)" fg:x="468" fg:w="1"/><text x="38.0224%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.7724%" y="357" width="0.0807%" height="15" fill="rgb(251,172,7)" fg:x="468" fg:w="1"/><text x="38.0224%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.7724%" y="341" width="0.0807%" height="15" fill="rgb(219,39,9)" fg:x="468" fg:w="1"/><text x="38.0224%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.7724%" y="325" width="0.0807%" height="15" fill="rgb(228,118,14)" fg:x="468" fg:w="1"/><text x="38.0224%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="37.7724%" y="309" width="0.0807%" height="15" fill="rgb(207,140,10)" fg:x="468" fg:w="1"/><text x="38.0224%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="37.7724%" y="293" width="0.0807%" height="15" fill="rgb(227,111,53)" fg:x="468" fg:w="1"/><text x="38.0224%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="37.7724%" y="277" width="0.0807%" height="15" fill="rgb(216,165,16)" fg:x="468" fg:w="1"/><text x="38.0224%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="37.7724%" y="261" width="0.0807%" height="15" fill="rgb(226,111,18)" fg:x="468" fg:w="1"/><text x="38.0224%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.7724%" y="245" width="0.0807%" height="15" fill="rgb(251,27,17)" fg:x="468" fg:w="1"/><text x="38.0224%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.7724%" y="229" width="0.0807%" height="15" fill="rgb(254,69,9)" fg:x="468" fg:w="1"/><text x="38.0224%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.7724%" y="213" width="0.0807%" height="15" fill="rgb(234,140,37)" fg:x="468" fg:w="1"/><text x="38.0224%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="37.7724%" y="197" width="0.0807%" height="15" fill="rgb(220,93,8)" fg:x="468" fg:w="1"/><text x="38.0224%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.7724%" y="181" width="0.0807%" height="15" fill="rgb(236,113,3)" fg:x="468" fg:w="1"/><text x="38.0224%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="37.7724%" y="165" width="0.0807%" height="15" fill="rgb(234,108,23)" fg:x="468" fg:w="1"/><text x="38.0224%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="37.7724%" y="149" width="0.0807%" height="15" fill="rgb(205,114,34)" fg:x="468" fg:w="1"/><text x="38.0224%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="37.7724%" y="133" width="0.0807%" height="15" fill="rgb(236,200,45)" fg:x="468" fg:w="1"/><text x="38.0224%" y="143.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="37.7724%" y="117" width="0.0807%" height="15" fill="rgb(227,194,29)" fg:x="468" fg:w="1"/><text x="38.0224%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="37.9338%" y="309" width="0.0807%" height="15" fill="rgb(250,76,42)" fg:x="470" fg:w="1"/><text x="38.1838%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="37.9338%" y="357" width="0.1614%" height="15" fill="rgb(208,128,8)" fg:x="470" fg:w="2"/><text x="38.1838%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.9338%" y="341" width="0.1614%" height="15" fill="rgb(229,209,35)" fg:x="470" fg:w="2"/><text x="38.1838%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="37.9338%" y="325" width="0.1614%" height="15" fill="rgb(215,39,53)" fg:x="470" fg:w="2"/><text x="38.1838%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.0145%" y="309" width="0.0807%" height="15" fill="rgb(219,123,41)" fg:x="471" fg:w="1"/><text x="38.2645%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.0145%" y="293" width="0.0807%" height="15" fill="rgb(212,158,18)" fg:x="471" fg:w="1"/><text x="38.2645%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.0145%" y="277" width="0.0807%" height="15" fill="rgb(234,196,53)" fg:x="471" fg:w="1"/><text x="38.2645%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.1759%" y="325" width="0.0807%" height="15" fill="rgb(210,139,12)" fg:x="473" fg:w="1"/><text x="38.4259%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.1759%" y="309" width="0.0807%" height="15" fill="rgb(220,116,54)" fg:x="473" fg:w="1"/><text x="38.4259%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.56%)</title><rect x="37.8531%" y="421" width="0.5650%" height="15" fill="rgb(247,103,28)" fg:x="469" fg:w="7"/><text x="38.1031%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.56%)</title><rect x="37.8531%" y="405" width="0.5650%" height="15" fill="rgb(253,156,45)" fg:x="469" fg:w="7"/><text x="38.1031%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="37.9338%" y="389" width="0.4843%" height="15" fill="rgb(237,157,52)" fg:x="470" fg:w="6"/><text x="38.1838%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="37.9338%" y="373" width="0.4843%" height="15" fill="rgb(253,112,16)" fg:x="470" fg:w="6"/><text x="38.1838%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="38.0952%" y="357" width="0.3228%" height="15" fill="rgb(234,70,18)" fg:x="472" fg:w="4"/><text x="38.3452%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.1759%" y="341" width="0.2421%" height="15" fill="rgb(247,138,19)" fg:x="473" fg:w="3"/><text x="38.4259%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="38.2567%" y="325" width="0.1614%" height="15" fill="rgb(207,171,1)" fg:x="474" fg:w="2"/><text x="38.5067%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.2567%" y="309" width="0.1614%" height="15" fill="rgb(239,213,3)" fg:x="474" fg:w="2"/><text x="38.5067%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.2567%" y="293" width="0.1614%" height="15" fill="rgb(226,112,4)" fg:x="474" fg:w="2"/><text x="38.5067%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.2567%" y="277" width="0.1614%" height="15" fill="rgb(252,170,12)" fg:x="474" fg:w="2"/><text x="38.5067%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.3374%" y="261" width="0.0807%" height="15" fill="rgb(241,106,13)" fg:x="475" fg:w="1"/><text x="38.5874%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.4181%" y="293" width="0.0807%" height="15" fill="rgb(225,73,23)" fg:x="476" fg:w="1"/><text x="38.6681%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.4181%" y="277" width="0.0807%" height="15" fill="rgb(251,227,29)" fg:x="476" fg:w="1"/><text x="38.6681%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.4181%" y="261" width="0.0807%" height="15" fill="rgb(237,144,13)" fg:x="476" fg:w="1"/><text x="38.6681%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.4181%" y="245" width="0.0807%" height="15" fill="rgb(232,106,46)" fg:x="476" fg:w="1"/><text x="38.6681%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (9 samples, 0.73%)</title><rect x="37.8531%" y="469" width="0.7264%" height="15" fill="rgb(245,154,53)" fg:x="469" fg:w="9"/><text x="38.1031%" y="479.50"></text></g><g><title>engine::internal::Entities::prepare_entity (9 samples, 0.73%)</title><rect x="37.8531%" y="453" width="0.7264%" height="15" fill="rgb(212,119,47)" fg:x="469" fg:w="9"/><text x="38.1031%" y="463.50"></text></g><g><title>kernel::model::deserialize_entity (9 samples, 0.73%)</title><rect x="37.8531%" y="437" width="0.7264%" height="15" fill="rgb(253,135,25)" fg:x="469" fg:w="9"/><text x="38.1031%" y="447.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="38.4181%" y="421" width="0.1614%" height="15" fill="rgb(253,208,39)" fg:x="476" fg:w="2"/><text x="38.6681%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="38.4181%" y="405" width="0.1614%" height="15" fill="rgb(226,64,12)" fg:x="476" fg:w="2"/><text x="38.6681%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="38.4181%" y="389" width="0.1614%" height="15" fill="rgb(214,162,37)" fg:x="476" fg:w="2"/><text x="38.6681%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="38.4181%" y="373" width="0.1614%" height="15" fill="rgb(250,104,5)" fg:x="476" fg:w="2"/><text x="38.6681%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="38.4181%" y="357" width="0.1614%" height="15" fill="rgb(220,202,50)" fg:x="476" fg:w="2"/><text x="38.6681%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="38.4181%" y="341" width="0.1614%" height="15" fill="rgb(248,67,38)" fg:x="476" fg:w="2"/><text x="38.6681%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="38.4181%" y="325" width="0.1614%" height="15" fill="rgb(242,94,35)" fg:x="476" fg:w="2"/><text x="38.6681%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="38.4181%" y="309" width="0.1614%" height="15" fill="rgb(209,78,37)" fg:x="476" fg:w="2"/><text x="38.6681%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.4988%" y="293" width="0.0807%" height="15" fill="rgb(230,126,47)" fg:x="477" fg:w="1"/><text x="38.7488%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.4988%" y="277" width="0.0807%" height="15" fill="rgb(222,110,35)" fg:x="477" fg:w="1"/><text x="38.7488%" y="287.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (12 samples, 0.97%)</title><rect x="37.6917%" y="517" width="0.9685%" height="15" fill="rgb(233,154,20)" fg:x="467" fg:w="12"/><text x="37.9417%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.81%)</title><rect x="37.8531%" y="501" width="0.8071%" height="15" fill="rgb(223,53,50)" fg:x="469" fg:w="10"/><text x="38.1031%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (10 samples, 0.81%)</title><rect x="37.8531%" y="485" width="0.8071%" height="15" fill="rgb(251,27,26)" fg:x="469" fg:w="10"/><text x="38.1031%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="38.5795%" y="469" width="0.0807%" height="15" fill="rgb(223,189,16)" fg:x="478" fg:w="1"/><text x="38.8295%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.5795%" y="453" width="0.0807%" height="15" fill="rgb(207,5,54)" fg:x="478" fg:w="1"/><text x="38.8295%" y="463.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="38.6602%" y="485" width="0.0807%" height="15" fill="rgb(254,124,50)" fg:x="479" fg:w="1"/><text x="38.9102%" y="495.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="38.6602%" y="469" width="0.0807%" height="15" fill="rgb(253,193,24)" fg:x="479" fg:w="1"/><text x="38.9102%" y="479.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (16 samples, 1.29%)</title><rect x="37.6110%" y="533" width="1.2914%" height="15" fill="rgb(235,170,24)" fg:x="466" fg:w="16"/><text x="37.8610%" y="543.50"></text></g><g><title>engine::session::Session::world (3 samples, 0.24%)</title><rect x="38.6602%" y="517" width="0.2421%" height="15" fill="rgb(222,212,52)" fg:x="479" fg:w="3"/><text x="38.9102%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="38.6602%" y="501" width="0.2421%" height="15" fill="rgb(223,17,45)" fg:x="479" fg:w="3"/><text x="38.9102%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="38.7409%" y="485" width="0.1614%" height="15" fill="rgb(227,103,26)" fg:x="480" fg:w="2"/><text x="38.9909%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="38.7409%" y="469" width="0.1614%" height="15" fill="rgb(251,151,25)" fg:x="480" fg:w="2"/><text x="38.9909%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="38.8216%" y="453" width="0.0807%" height="15" fill="rgb(248,144,29)" fg:x="481" fg:w="1"/><text x="39.0716%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.8216%" y="437" width="0.0807%" height="15" fill="rgb(245,97,16)" fg:x="481" fg:w="1"/><text x="39.0716%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.8216%" y="421" width="0.0807%" height="15" fill="rgb(220,200,29)" fg:x="481" fg:w="1"/><text x="39.0716%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="38.8216%" y="405" width="0.0807%" height="15" fill="rgb(206,38,29)" fg:x="481" fg:w="1"/><text x="39.0716%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.8216%" y="389" width="0.0807%" height="15" fill="rgb(245,19,52)" fg:x="481" fg:w="1"/><text x="39.0716%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.8216%" y="373" width="0.0807%" height="15" fill="rgb(205,67,43)" fg:x="481" fg:w="1"/><text x="39.0716%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.8216%" y="357" width="0.0807%" height="15" fill="rgb(217,128,23)" fg:x="481" fg:w="1"/><text x="39.0716%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.8216%" y="341" width="0.0807%" height="15" fill="rgb(210,109,28)" fg:x="481" fg:w="1"/><text x="39.0716%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.8216%" y="325" width="0.0807%" height="15" fill="rgb(233,181,7)" fg:x="481" fg:w="1"/><text x="39.0716%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="38.8216%" y="309" width="0.0807%" height="15" fill="rgb(244,11,22)" fg:x="481" fg:w="1"/><text x="39.0716%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="38.8216%" y="293" width="0.0807%" height="15" fill="rgb(205,124,54)" fg:x="481" fg:w="1"/><text x="39.0716%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="38.8216%" y="277" width="0.0807%" height="15" fill="rgb(218,21,27)" fg:x="481" fg:w="1"/><text x="39.0716%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="38.8216%" y="261" width="0.0807%" height="15" fill="rgb(224,153,33)" fg:x="481" fg:w="1"/><text x="39.0716%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="38.8216%" y="245" width="0.0807%" height="15" fill="rgb(240,219,28)" fg:x="481" fg:w="1"/><text x="39.0716%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="38.8216%" y="229" width="0.0807%" height="15" fill="rgb(214,80,29)" fg:x="481" fg:w="1"/><text x="39.0716%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="38.8216%" y="213" width="0.0807%" height="15" fill="rgb(247,148,44)" fg:x="481" fg:w="1"/><text x="39.0716%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="38.8216%" y="197" width="0.0807%" height="15" fill="rgb(243,110,30)" fg:x="481" fg:w="1"/><text x="39.0716%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.08%)</title><rect x="38.8216%" y="181" width="0.0807%" height="15" fill="rgb(243,173,41)" fg:x="481" fg:w="1"/><text x="39.0716%" y="191.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.08%)</title><rect x="38.8216%" y="165" width="0.0807%" height="15" fill="rgb(225,160,47)" fg:x="481" fg:w="1"/><text x="39.0716%" y="175.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="39.9516%" y="421" width="0.1614%" height="15" fill="rgb(215,44,21)" fg:x="495" fg:w="2"/><text x="40.2016%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="40.0323%" y="405" width="0.0807%" height="15" fill="rgb(248,90,3)" fg:x="496" fg:w="1"/><text x="40.2823%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.81%)</title><rect x="39.7094%" y="437" width="0.8071%" height="15" fill="rgb(220,196,49)" fg:x="492" fg:w="10"/><text x="39.9594%" y="447.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="40.1130%" y="421" width="0.4036%" height="15" fill="rgb(217,138,14)" fg:x="497" fg:w="5"/><text x="40.3630%" y="431.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="40.5165%" y="437" width="0.4036%" height="15" fill="rgb(219,111,20)" fg:x="502" fg:w="5"/><text x="40.7665%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.0008%" y="421" width="0.0807%" height="15" fill="rgb(218,114,4)" fg:x="508" fg:w="1"/><text x="41.2508%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.0008%" y="405" width="0.0807%" height="15" fill="rgb(238,133,3)" fg:x="508" fg:w="1"/><text x="41.2508%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.69%)</title><rect x="39.5480%" y="453" width="1.6949%" height="15" fill="rgb(224,95,0)" fg:x="490" fg:w="21"/><text x="39.7980%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (4 samples, 0.32%)</title><rect x="40.9201%" y="437" width="0.3228%" height="15" fill="rgb(220,169,35)" fg:x="507" fg:w="4"/><text x="41.1701%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="41.0815%" y="421" width="0.1614%" height="15" fill="rgb(242,116,47)" fg:x="509" fg:w="2"/><text x="41.3315%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 2.42%)</title><rect x="39.0638%" y="469" width="2.4213%" height="15" fill="rgb(251,42,20)" fg:x="484" fg:w="30"/><text x="39.3138%" y="479.50">&lt;h..</text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="41.2429%" y="453" width="0.2421%" height="15" fill="rgb(234,7,34)" fg:x="511" fg:w="3"/><text x="41.4929%" y="463.50"></text></g><g><title>__libc_free (6 samples, 0.48%)</title><rect x="41.4851%" y="469" width="0.4843%" height="15" fill="rgb(243,208,13)" fg:x="514" fg:w="6"/><text x="41.7351%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 3.07%)</title><rect x="38.9831%" y="485" width="3.0670%" height="15" fill="rgb(227,33,28)" fg:x="483" fg:w="38"/><text x="39.2331%" y="495.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="41.9693%" y="469" width="0.0807%" height="15" fill="rgb(250,47,37)" fg:x="520" fg:w="1"/><text x="42.2193%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (40 samples, 3.23%)</title><rect x="38.9831%" y="501" width="3.2284%" height="15" fill="rgb(235,111,52)" fg:x="483" fg:w="40"/><text x="39.2331%" y="511.50">cor..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="42.0500%" y="485" width="0.1614%" height="15" fill="rgb(223,64,28)" fg:x="521" fg:w="2"/><text x="42.3000%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.3729%" y="485" width="0.0807%" height="15" fill="rgb(236,67,22)" fg:x="525" fg:w="1"/><text x="42.6229%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.3729%" y="469" width="0.0807%" height="15" fill="rgb(243,79,24)" fg:x="525" fg:w="1"/><text x="42.6229%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.3729%" y="453" width="0.0807%" height="15" fill="rgb(241,225,22)" fg:x="525" fg:w="1"/><text x="42.6229%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.3729%" y="437" width="0.0807%" height="15" fill="rgb(228,214,26)" fg:x="525" fg:w="1"/><text x="42.6229%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.3729%" y="421" width="0.0807%" height="15" fill="rgb(219,84,52)" fg:x="525" fg:w="1"/><text x="42.6229%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.3729%" y="405" width="0.0807%" height="15" fill="rgb(220,12,22)" fg:x="525" fg:w="1"/><text x="42.6229%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.3729%" y="389" width="0.0807%" height="15" fill="rgb(219,9,49)" fg:x="525" fg:w="1"/><text x="42.6229%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.3729%" y="373" width="0.0807%" height="15" fill="rgb(237,40,43)" fg:x="525" fg:w="1"/><text x="42.6229%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.3729%" y="357" width="0.0807%" height="15" fill="rgb(212,189,32)" fg:x="525" fg:w="1"/><text x="42.6229%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.3729%" y="341" width="0.0807%" height="15" fill="rgb(247,48,9)" fg:x="525" fg:w="1"/><text x="42.6229%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.3729%" y="325" width="0.0807%" height="15" fill="rgb(247,112,3)" fg:x="525" fg:w="1"/><text x="42.6229%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.3729%" y="309" width="0.0807%" height="15" fill="rgb(243,110,18)" fg:x="525" fg:w="1"/><text x="42.6229%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="42.5343%" y="453" width="0.0807%" height="15" fill="rgb(233,223,44)" fg:x="527" fg:w="1"/><text x="42.7843%" y="463.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="42.6150%" y="453" width="0.4036%" height="15" fill="rgb(245,160,20)" fg:x="528" fg:w="5"/><text x="42.8650%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.0993%" y="325" width="0.0807%" height="15" fill="rgb(225,37,1)" fg:x="534" fg:w="1"/><text x="43.3493%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="43.0186%" y="437" width="0.2421%" height="15" fill="rgb(253,227,39)" fg:x="533" fg:w="3"/><text x="43.2686%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="43.0186%" y="421" width="0.2421%" height="15" fill="rgb(240,179,26)" fg:x="533" fg:w="3"/><text x="43.2686%" y="431.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="43.0186%" y="405" width="0.2421%" height="15" fill="rgb(237,212,23)" fg:x="533" fg:w="3"/><text x="43.2686%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="43.0186%" y="389" width="0.2421%" height="15" fill="rgb(221,38,11)" fg:x="533" fg:w="3"/><text x="43.2686%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="43.0993%" y="373" width="0.1614%" height="15" fill="rgb(215,85,6)" fg:x="534" fg:w="2"/><text x="43.3493%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="43.0993%" y="357" width="0.1614%" height="15" fill="rgb(239,64,14)" fg:x="534" fg:w="2"/><text x="43.3493%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="43.0993%" y="341" width="0.1614%" height="15" fill="rgb(215,150,32)" fg:x="534" fg:w="2"/><text x="43.3493%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="43.1800%" y="325" width="0.0807%" height="15" fill="rgb(238,15,13)" fg:x="535" fg:w="1"/><text x="43.4300%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="43.1800%" y="309" width="0.0807%" height="15" fill="rgb(251,87,8)" fg:x="535" fg:w="1"/><text x="43.4300%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.81%)</title><rect x="42.5343%" y="469" width="0.8071%" height="15" fill="rgb(206,86,1)" fg:x="527" fg:w="10"/><text x="42.7843%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.32%)</title><rect x="43.0186%" y="453" width="0.3228%" height="15" fill="rgb(208,151,45)" fg:x="533" fg:w="4"/><text x="43.2686%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.2607%" y="437" width="0.0807%" height="15" fill="rgb(231,181,24)" fg:x="536" fg:w="1"/><text x="43.5107%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.3414%" y="437" width="0.0807%" height="15" fill="rgb(240,106,29)" fg:x="537" fg:w="1"/><text x="43.5914%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="43.3414%" y="421" width="0.0807%" height="15" fill="rgb(227,166,11)" fg:x="537" fg:w="1"/><text x="43.5914%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="43.3414%" y="469" width="0.1614%" height="15" fill="rgb(254,14,34)" fg:x="537" fg:w="2"/><text x="43.5914%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="43.3414%" y="453" width="0.1614%" height="15" fill="rgb(223,222,6)" fg:x="537" fg:w="2"/><text x="43.5914%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.4221%" y="437" width="0.0807%" height="15" fill="rgb(245,69,24)" fg:x="538" fg:w="1"/><text x="43.6721%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="43.4221%" y="421" width="0.0807%" height="15" fill="rgb(213,193,7)" fg:x="538" fg:w="1"/><text x="43.6721%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.4221%" y="405" width="0.0807%" height="15" fill="rgb(237,92,51)" fg:x="538" fg:w="1"/><text x="43.6721%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="43.4221%" y="389" width="0.0807%" height="15" fill="rgb(225,194,6)" fg:x="538" fg:w="1"/><text x="43.6721%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.5835%" y="437" width="0.0807%" height="15" fill="rgb(205,159,49)" fg:x="540" fg:w="1"/><text x="43.8335%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="43.5028%" y="469" width="0.2421%" height="15" fill="rgb(219,69,2)" fg:x="539" fg:w="3"/><text x="43.7528%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="43.5028%" y="453" width="0.2421%" height="15" fill="rgb(215,107,24)" fg:x="539" fg:w="3"/><text x="43.7528%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="43.6642%" y="437" width="0.0807%" height="15" fill="rgb(249,208,29)" fg:x="541" fg:w="1"/><text x="43.9142%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="43.6642%" y="421" width="0.0807%" height="15" fill="rgb(213,147,10)" fg:x="541" fg:w="1"/><text x="43.9142%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.6642%" y="405" width="0.0807%" height="15" fill="rgb(254,140,42)" fg:x="541" fg:w="1"/><text x="43.9142%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="43.9871%" y="405" width="0.0807%" height="15" fill="rgb(249,9,15)" fg:x="545" fg:w="1"/><text x="44.2371%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="44.1485%" y="341" width="0.1614%" height="15" fill="rgb(210,19,33)" fg:x="547" fg:w="2"/><text x="44.3985%" y="351.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="44.1485%" y="325" width="0.1614%" height="15" fill="rgb(241,121,22)" fg:x="547" fg:w="2"/><text x="44.3985%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.1485%" y="309" width="0.1614%" height="15" fill="rgb(244,69,52)" fg:x="547" fg:w="2"/><text x="44.3985%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.2292%" y="293" width="0.0807%" height="15" fill="rgb(244,191,54)" fg:x="548" fg:w="1"/><text x="44.4792%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.2292%" y="277" width="0.0807%" height="15" fill="rgb(250,3,53)" fg:x="548" fg:w="1"/><text x="44.4792%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.2292%" y="261" width="0.0807%" height="15" fill="rgb(205,77,3)" fg:x="548" fg:w="1"/><text x="44.4792%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.2292%" y="245" width="0.0807%" height="15" fill="rgb(207,155,3)" fg:x="548" fg:w="1"/><text x="44.4792%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.2292%" y="229" width="0.0807%" height="15" fill="rgb(224,79,2)" fg:x="548" fg:w="1"/><text x="44.4792%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.2292%" y="213" width="0.0807%" height="15" fill="rgb(243,172,5)" fg:x="548" fg:w="1"/><text x="44.4792%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.2292%" y="197" width="0.0807%" height="15" fill="rgb(217,23,43)" fg:x="548" fg:w="1"/><text x="44.4792%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.2292%" y="181" width="0.0807%" height="15" fill="rgb(223,109,20)" fg:x="548" fg:w="1"/><text x="44.4792%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.2292%" y="165" width="0.0807%" height="15" fill="rgb(232,159,21)" fg:x="548" fg:w="1"/><text x="44.4792%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.2292%" y="149" width="0.0807%" height="15" fill="rgb(219,58,2)" fg:x="548" fg:w="1"/><text x="44.4792%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.2292%" y="133" width="0.0807%" height="15" fill="rgb(241,56,8)" fg:x="548" fg:w="1"/><text x="44.4792%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.2292%" y="117" width="0.0807%" height="15" fill="rgb(249,10,27)" fg:x="548" fg:w="1"/><text x="44.4792%" y="127.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="44.3099%" y="341" width="0.0807%" height="15" fill="rgb(248,177,5)" fg:x="549" fg:w="1"/><text x="44.5599%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.3099%" y="325" width="0.0807%" height="15" fill="rgb(239,12,30)" fg:x="549" fg:w="1"/><text x="44.5599%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.3099%" y="309" width="0.0807%" height="15" fill="rgb(229,164,25)" fg:x="549" fg:w="1"/><text x="44.5599%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.3099%" y="293" width="0.0807%" height="15" fill="rgb(231,217,50)" fg:x="549" fg:w="1"/><text x="44.5599%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.3099%" y="277" width="0.0807%" height="15" fill="rgb(247,99,32)" fg:x="549" fg:w="1"/><text x="44.5599%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.3099%" y="261" width="0.0807%" height="15" fill="rgb(240,74,50)" fg:x="549" fg:w="1"/><text x="44.5599%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.3906%" y="325" width="0.1614%" height="15" fill="rgb(218,54,8)" fg:x="550" fg:w="2"/><text x="44.6406%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.3906%" y="309" width="0.1614%" height="15" fill="rgb(227,132,20)" fg:x="550" fg:w="2"/><text x="44.6406%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="44.3906%" y="293" width="0.1614%" height="15" fill="rgb(232,134,12)" fg:x="550" fg:w="2"/><text x="44.6406%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="44.3906%" y="277" width="0.1614%" height="15" fill="rgb(250,129,18)" fg:x="550" fg:w="2"/><text x="44.6406%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="44.3906%" y="261" width="0.1614%" height="15" fill="rgb(232,129,47)" fg:x="550" fg:w="2"/><text x="44.6406%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="44.3906%" y="245" width="0.1614%" height="15" fill="rgb(230,31,40)" fg:x="550" fg:w="2"/><text x="44.6406%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="44.3906%" y="229" width="0.1614%" height="15" fill="rgb(232,126,10)" fg:x="550" fg:w="2"/><text x="44.6406%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="44.3906%" y="213" width="0.1614%" height="15" fill="rgb(205,46,31)" fg:x="550" fg:w="2"/><text x="44.6406%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="44.3906%" y="197" width="0.1614%" height="15" fill="rgb(232,37,37)" fg:x="550" fg:w="2"/><text x="44.6406%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="44.3906%" y="181" width="0.1614%" height="15" fill="rgb(240,91,16)" fg:x="550" fg:w="2"/><text x="44.6406%" y="191.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="44.3906%" y="165" width="0.1614%" height="15" fill="rgb(224,160,9)" fg:x="550" fg:w="2"/><text x="44.6406%" y="175.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.3906%" y="149" width="0.1614%" height="15" fill="rgb(215,116,14)" fg:x="550" fg:w="2"/><text x="44.6406%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="44.1485%" y="389" width="0.4843%" height="15" fill="rgb(235,46,36)" fg:x="547" fg:w="6"/><text x="44.3985%" y="399.50"></text></g><g><title>kernel::model::EntityRef::into_entry (6 samples, 0.48%)</title><rect x="44.1485%" y="373" width="0.4843%" height="15" fill="rgb(238,39,28)" fg:x="547" fg:w="6"/><text x="44.3985%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (6 samples, 0.48%)</title><rect x="44.1485%" y="357" width="0.4843%" height="15" fill="rgb(242,125,29)" fg:x="547" fg:w="6"/><text x="44.3985%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="44.3906%" y="341" width="0.2421%" height="15" fill="rgb(238,211,30)" fg:x="550" fg:w="3"/><text x="44.6406%" y="351.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="44.5521%" y="325" width="0.0807%" height="15" fill="rgb(227,201,28)" fg:x="552" fg:w="1"/><text x="44.8021%" y="335.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="44.5521%" y="309" width="0.0807%" height="15" fill="rgb(238,77,29)" fg:x="552" fg:w="1"/><text x="44.8021%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.5521%" y="293" width="0.0807%" height="15" fill="rgb(213,221,40)" fg:x="552" fg:w="1"/><text x="44.8021%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="44.5521%" y="277" width="0.0807%" height="15" fill="rgb(226,220,44)" fg:x="552" fg:w="1"/><text x="44.8021%" y="287.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="44.5521%" y="261" width="0.0807%" height="15" fill="rgb(228,90,23)" fg:x="552" fg:w="1"/><text x="44.8021%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="44.5521%" y="245" width="0.0807%" height="15" fill="rgb(235,72,29)" fg:x="552" fg:w="1"/><text x="44.8021%" y="255.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="44.5521%" y="229" width="0.0807%" height="15" fill="rgb(248,117,39)" fg:x="552" fg:w="1"/><text x="44.8021%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.5521%" y="213" width="0.0807%" height="15" fill="rgb(225,43,28)" fg:x="552" fg:w="1"/><text x="44.8021%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.5521%" y="197" width="0.0807%" height="15" fill="rgb(240,93,4)" fg:x="552" fg:w="1"/><text x="44.8021%" y="207.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="44.5521%" y="181" width="0.0807%" height="15" fill="rgb(234,178,27)" fg:x="552" fg:w="1"/><text x="44.8021%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="44.5521%" y="165" width="0.0807%" height="15" fill="rgb(254,88,22)" fg:x="552" fg:w="1"/><text x="44.8021%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="44.5521%" y="149" width="0.0807%" height="15" fill="rgb(240,206,50)" fg:x="552" fg:w="1"/><text x="44.8021%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="44.5521%" y="133" width="0.0807%" height="15" fill="rgb(249,103,8)" fg:x="552" fg:w="1"/><text x="44.8021%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="44.5521%" y="117" width="0.0807%" height="15" fill="rgb(241,178,36)" fg:x="552" fg:w="1"/><text x="44.8021%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="44.5521%" y="101" width="0.0807%" height="15" fill="rgb(246,110,15)" fg:x="552" fg:w="1"/><text x="44.8021%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="44.5521%" y="85" width="0.0807%" height="15" fill="rgb(207,14,43)" fg:x="552" fg:w="1"/><text x="44.8021%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="44.5521%" y="69" width="0.0807%" height="15" fill="rgb(253,219,19)" fg:x="552" fg:w="1"/><text x="44.8021%" y="79.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.5521%" y="53" width="0.0807%" height="15" fill="rgb(216,126,5)" fg:x="552" fg:w="1"/><text x="44.8021%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.5521%" y="37" width="0.0807%" height="15" fill="rgb(218,78,42)" fg:x="552" fg:w="1"/><text x="44.8021%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="44.7135%" y="373" width="0.1614%" height="15" fill="rgb(215,154,40)" fg:x="554" fg:w="2"/><text x="44.9635%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="44.7135%" y="357" width="0.1614%" height="15" fill="rgb(235,129,32)" fg:x="554" fg:w="2"/><text x="44.9635%" y="367.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.7135%" y="341" width="0.1614%" height="15" fill="rgb(218,51,8)" fg:x="554" fg:w="2"/><text x="44.9635%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.9556%" y="325" width="0.0807%" height="15" fill="rgb(245,48,4)" fg:x="557" fg:w="1"/><text x="45.2056%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.9556%" y="309" width="0.0807%" height="15" fill="rgb(250,175,12)" fg:x="557" fg:w="1"/><text x="45.2056%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.9556%" y="293" width="0.0807%" height="15" fill="rgb(237,95,40)" fg:x="557" fg:w="1"/><text x="45.2056%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.9556%" y="277" width="0.0807%" height="15" fill="rgb(244,120,0)" fg:x="557" fg:w="1"/><text x="45.2056%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.9556%" y="261" width="0.0807%" height="15" fill="rgb(241,19,42)" fg:x="557" fg:w="1"/><text x="45.2056%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.9556%" y="245" width="0.0807%" height="15" fill="rgb(217,174,48)" fg:x="557" fg:w="1"/><text x="45.2056%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.9556%" y="229" width="0.0807%" height="15" fill="rgb(239,36,38)" fg:x="557" fg:w="1"/><text x="45.2056%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.9556%" y="213" width="0.0807%" height="15" fill="rgb(220,63,49)" fg:x="557" fg:w="1"/><text x="45.2056%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.9556%" y="197" width="0.0807%" height="15" fill="rgb(240,101,13)" fg:x="557" fg:w="1"/><text x="45.2056%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.9556%" y="181" width="0.0807%" height="15" fill="rgb(209,184,51)" fg:x="557" fg:w="1"/><text x="45.2056%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.9556%" y="165" width="0.0807%" height="15" fill="rgb(206,136,39)" fg:x="557" fg:w="1"/><text x="45.2056%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.9556%" y="149" width="0.0807%" height="15" fill="rgb(254,47,45)" fg:x="557" fg:w="1"/><text x="45.2056%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.9556%" y="133" width="0.0807%" height="15" fill="rgb(252,103,20)" fg:x="557" fg:w="1"/><text x="45.2056%" y="143.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="44.9556%" y="117" width="0.0807%" height="15" fill="rgb(230,69,12)" fg:x="557" fg:w="1"/><text x="45.2056%" y="127.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="45.0363%" y="293" width="0.0807%" height="15" fill="rgb(219,2,28)" fg:x="558" fg:w="1"/><text x="45.2863%" y="303.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="45.1170%" y="293" width="0.0807%" height="15" fill="rgb(210,9,12)" fg:x="559" fg:w="1"/><text x="45.3670%" y="303.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="45.1977%" y="277" width="0.1614%" height="15" fill="rgb(235,99,33)" fg:x="560" fg:w="2"/><text x="45.4477%" y="287.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="45.1977%" y="261" width="0.1614%" height="15" fill="rgb(230,11,38)" fg:x="560" fg:w="2"/><text x="45.4477%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="45.1977%" y="245" width="0.1614%" height="15" fill="rgb(217,129,0)" fg:x="560" fg:w="2"/><text x="45.4477%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.1977%" y="229" width="0.1614%" height="15" fill="rgb(222,198,4)" fg:x="560" fg:w="2"/><text x="45.4477%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.2785%" y="213" width="0.0807%" height="15" fill="rgb(246,170,27)" fg:x="561" fg:w="1"/><text x="45.5285%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.2785%" y="197" width="0.0807%" height="15" fill="rgb(229,17,28)" fg:x="561" fg:w="1"/><text x="45.5285%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="45.2785%" y="181" width="0.0807%" height="15" fill="rgb(233,198,48)" fg:x="561" fg:w="1"/><text x="45.5285%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.2785%" y="165" width="0.0807%" height="15" fill="rgb(238,103,23)" fg:x="561" fg:w="1"/><text x="45.5285%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.2785%" y="149" width="0.0807%" height="15" fill="rgb(206,91,41)" fg:x="561" fg:w="1"/><text x="45.5285%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.2785%" y="133" width="0.0807%" height="15" fill="rgb(227,34,25)" fg:x="561" fg:w="1"/><text x="45.5285%" y="143.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.3592%" y="197" width="0.0807%" height="15" fill="rgb(210,110,44)" fg:x="562" fg:w="1"/><text x="45.6092%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.3592%" y="181" width="0.0807%" height="15" fill="rgb(216,189,8)" fg:x="562" fg:w="1"/><text x="45.6092%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.48%)</title><rect x="45.0363%" y="325" width="0.4843%" height="15" fill="rgb(234,9,46)" fg:x="558" fg:w="6"/><text x="45.2863%" y="335.50"></text></g><g><title>engine::internal::Entities::prepare_entity (6 samples, 0.48%)</title><rect x="45.0363%" y="309" width="0.4843%" height="15" fill="rgb(251,200,5)" fg:x="558" fg:w="6"/><text x="45.2863%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.32%)</title><rect x="45.1977%" y="293" width="0.3228%" height="15" fill="rgb(238,165,37)" fg:x="560" fg:w="4"/><text x="45.4477%" y="303.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="45.3592%" y="277" width="0.1614%" height="15" fill="rgb(232,77,38)" fg:x="562" fg:w="2"/><text x="45.6092%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="45.3592%" y="261" width="0.1614%" height="15" fill="rgb(253,179,33)" fg:x="562" fg:w="2"/><text x="45.6092%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="45.3592%" y="245" width="0.1614%" height="15" fill="rgb(240,13,35)" fg:x="562" fg:w="2"/><text x="45.6092%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="45.3592%" y="229" width="0.1614%" height="15" fill="rgb(242,150,49)" fg:x="562" fg:w="2"/><text x="45.6092%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="45.3592%" y="213" width="0.1614%" height="15" fill="rgb(237,176,28)" fg:x="562" fg:w="2"/><text x="45.6092%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.4399%" y="197" width="0.0807%" height="15" fill="rgb(214,176,33)" fg:x="563" fg:w="1"/><text x="45.6899%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.4399%" y="181" width="0.0807%" height="15" fill="rgb(214,25,12)" fg:x="563" fg:w="1"/><text x="45.6899%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.4399%" y="165" width="0.0807%" height="15" fill="rgb(238,190,20)" fg:x="563" fg:w="1"/><text x="45.6899%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.4399%" y="149" width="0.0807%" height="15" fill="rgb(208,11,19)" fg:x="563" fg:w="1"/><text x="45.6899%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.4399%" y="133" width="0.0807%" height="15" fill="rgb(239,90,4)" fg:x="563" fg:w="1"/><text x="45.6899%" y="143.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.4399%" y="117" width="0.0807%" height="15" fill="rgb(248,110,3)" fg:x="563" fg:w="1"/><text x="45.6899%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.4399%" y="101" width="0.0807%" height="15" fill="rgb(210,41,30)" fg:x="563" fg:w="1"/><text x="45.6899%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.5206%" y="325" width="0.0807%" height="15" fill="rgb(239,36,8)" fg:x="564" fg:w="1"/><text x="45.7706%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="45.5206%" y="309" width="0.0807%" height="15" fill="rgb(237,201,47)" fg:x="564" fg:w="1"/><text x="45.7706%" y="319.50"></text></g><g><title>core::iter::adapters::try_process (20 samples, 1.61%)</title><rect x="44.0678%" y="405" width="1.6142%" height="15" fill="rgb(224,140,29)" fg:x="546" fg:w="20"/><text x="44.3178%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (13 samples, 1.05%)</title><rect x="44.6328%" y="389" width="1.0492%" height="15" fill="rgb(231,209,17)" fg:x="553" fg:w="13"/><text x="44.8828%" y="399.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (10 samples, 0.81%)</title><rect x="44.8749%" y="373" width="0.8071%" height="15" fill="rgb(249,196,1)" fg:x="556" fg:w="10"/><text x="45.1249%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (10 samples, 0.81%)</title><rect x="44.8749%" y="357" width="0.8071%" height="15" fill="rgb(223,207,51)" fg:x="556" fg:w="10"/><text x="45.1249%" y="367.50"></text></g><g><title>kernel::model::Entity::load_scope (10 samples, 0.81%)</title><rect x="44.8749%" y="341" width="0.8071%" height="15" fill="rgb(210,14,40)" fg:x="556" fg:w="10"/><text x="45.1249%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.6013%" y="325" width="0.0807%" height="15" fill="rgb(250,20,52)" fg:x="565" fg:w="1"/><text x="45.8513%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.6013%" y="309" width="0.0807%" height="15" fill="rgb(241,46,11)" fg:x="565" fg:w="1"/><text x="45.8513%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.6013%" y="293" width="0.0807%" height="15" fill="rgb(219,105,5)" fg:x="565" fg:w="1"/><text x="45.8513%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.9241%" y="357" width="0.0807%" height="15" fill="rgb(252,77,35)" fg:x="569" fg:w="1"/><text x="46.1741%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.9241%" y="341" width="0.0807%" height="15" fill="rgb(243,119,2)" fg:x="569" fg:w="1"/><text x="46.1741%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.9241%" y="325" width="0.0807%" height="15" fill="rgb(206,82,28)" fg:x="569" fg:w="1"/><text x="46.1741%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.9241%" y="309" width="0.0807%" height="15" fill="rgb(227,120,12)" fg:x="569" fg:w="1"/><text x="46.1741%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.9241%" y="293" width="0.0807%" height="15" fill="rgb(229,134,41)" fg:x="569" fg:w="1"/><text x="46.1741%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.9241%" y="277" width="0.0807%" height="15" fill="rgb(239,96,32)" fg:x="569" fg:w="1"/><text x="46.1741%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.9241%" y="261" width="0.0807%" height="15" fill="rgb(225,46,27)" fg:x="569" fg:w="1"/><text x="46.1741%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.9241%" y="245" width="0.0807%" height="15" fill="rgb(215,168,2)" fg:x="569" fg:w="1"/><text x="46.1741%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="45.9241%" y="229" width="0.0807%" height="15" fill="rgb(207,170,52)" fg:x="569" fg:w="1"/><text x="46.1741%" y="239.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="45.9241%" y="213" width="0.0807%" height="15" fill="rgb(237,198,36)" fg:x="569" fg:w="1"/><text x="46.1741%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="45.7627%" y="373" width="0.5650%" height="15" fill="rgb(213,27,14)" fg:x="567" fg:w="7"/><text x="46.0127%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="46.0048%" y="357" width="0.3228%" height="15" fill="rgb(218,77,5)" fg:x="570" fg:w="4"/><text x="46.2548%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="46.0048%" y="341" width="0.3228%" height="15" fill="rgb(230,219,39)" fg:x="570" fg:w="4"/><text x="46.2548%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="46.0856%" y="325" width="0.2421%" height="15" fill="rgb(245,177,7)" fg:x="571" fg:w="3"/><text x="46.3356%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="46.0856%" y="309" width="0.2421%" height="15" fill="rgb(246,44,46)" fg:x="571" fg:w="3"/><text x="46.3356%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="46.0856%" y="293" width="0.2421%" height="15" fill="rgb(207,173,15)" fg:x="571" fg:w="3"/><text x="46.3356%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="46.0856%" y="277" width="0.2421%" height="15" fill="rgb(245,170,50)" fg:x="571" fg:w="3"/><text x="46.3356%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="46.0856%" y="261" width="0.2421%" height="15" fill="rgb(233,156,21)" fg:x="571" fg:w="3"/><text x="46.3356%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="46.0856%" y="245" width="0.2421%" height="15" fill="rgb(253,146,27)" fg:x="571" fg:w="3"/><text x="46.3356%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="46.0856%" y="229" width="0.2421%" height="15" fill="rgb(247,66,29)" fg:x="571" fg:w="3"/><text x="46.3356%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="46.0856%" y="213" width="0.2421%" height="15" fill="rgb(218,207,26)" fg:x="571" fg:w="3"/><text x="46.3356%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="46.0856%" y="197" width="0.2421%" height="15" fill="rgb(234,93,26)" fg:x="571" fg:w="3"/><text x="46.3356%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="46.0856%" y="181" width="0.2421%" height="15" fill="rgb(214,75,48)" fg:x="571" fg:w="3"/><text x="46.3356%" y="191.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="46.0856%" y="165" width="0.2421%" height="15" fill="rgb(229,119,22)" fg:x="571" fg:w="3"/><text x="46.3356%" y="175.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="46.0856%" y="149" width="0.2421%" height="15" fill="rgb(226,153,19)" fg:x="571" fg:w="3"/><text x="46.3356%" y="159.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="46.4084%" y="309" width="0.0807%" height="15" fill="rgb(220,204,36)" fg:x="575" fg:w="1"/><text x="46.6584%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.4084%" y="293" width="0.0807%" height="15" fill="rgb(253,181,43)" fg:x="575" fg:w="1"/><text x="46.6584%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.4084%" y="277" width="0.0807%" height="15" fill="rgb(211,41,51)" fg:x="575" fg:w="1"/><text x="46.6584%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.4084%" y="261" width="0.0807%" height="15" fill="rgb(207,215,0)" fg:x="575" fg:w="1"/><text x="46.6584%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.4084%" y="245" width="0.0807%" height="15" fill="rgb(212,153,10)" fg:x="575" fg:w="1"/><text x="46.6584%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.4084%" y="229" width="0.0807%" height="15" fill="rgb(251,171,36)" fg:x="575" fg:w="1"/><text x="46.6584%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.4084%" y="213" width="0.0807%" height="15" fill="rgb(225,219,41)" fg:x="575" fg:w="1"/><text x="46.6584%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.4084%" y="197" width="0.0807%" height="15" fill="rgb(208,200,1)" fg:x="575" fg:w="1"/><text x="46.6584%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.4084%" y="181" width="0.0807%" height="15" fill="rgb(206,75,47)" fg:x="575" fg:w="1"/><text x="46.6584%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.4084%" y="165" width="0.0807%" height="15" fill="rgb(248,3,16)" fg:x="575" fg:w="1"/><text x="46.6584%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.4084%" y="149" width="0.0807%" height="15" fill="rgb(242,157,36)" fg:x="575" fg:w="1"/><text x="46.6584%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.4084%" y="133" width="0.0807%" height="15" fill="rgb(215,175,11)" fg:x="575" fg:w="1"/><text x="46.6584%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.4084%" y="117" width="0.0807%" height="15" fill="rgb(252,222,22)" fg:x="575" fg:w="1"/><text x="46.6584%" y="127.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.4891%" y="309" width="0.0807%" height="15" fill="rgb(250,121,35)" fg:x="576" fg:w="1"/><text x="46.7391%" y="319.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.40%)</title><rect x="46.3277%" y="357" width="0.4036%" height="15" fill="rgb(233,120,49)" fg:x="574" fg:w="5"/><text x="46.5777%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="46.3277%" y="341" width="0.4036%" height="15" fill="rgb(205,201,14)" fg:x="574" fg:w="5"/><text x="46.5777%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="46.4084%" y="325" width="0.3228%" height="15" fill="rgb(219,58,45)" fg:x="575" fg:w="4"/><text x="46.6584%" y="335.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="46.5698%" y="309" width="0.1614%" height="15" fill="rgb(251,65,12)" fg:x="577" fg:w="2"/><text x="46.8198%" y="319.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="46.5698%" y="293" width="0.1614%" height="15" fill="rgb(224,47,31)" fg:x="577" fg:w="2"/><text x="46.8198%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="46.5698%" y="277" width="0.1614%" height="15" fill="rgb(233,74,26)" fg:x="577" fg:w="2"/><text x="46.8198%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="46.5698%" y="261" width="0.1614%" height="15" fill="rgb(231,211,31)" fg:x="577" fg:w="2"/><text x="46.8198%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="46.5698%" y="245" width="0.1614%" height="15" fill="rgb(239,167,5)" fg:x="577" fg:w="2"/><text x="46.8198%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="46.5698%" y="229" width="0.1614%" height="15" fill="rgb(241,85,0)" fg:x="577" fg:w="2"/><text x="46.8198%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="46.5698%" y="213" width="0.1614%" height="15" fill="rgb(229,130,21)" fg:x="577" fg:w="2"/><text x="46.8198%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="46.5698%" y="197" width="0.1614%" height="15" fill="rgb(254,84,49)" fg:x="577" fg:w="2"/><text x="46.8198%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="46.5698%" y="181" width="0.1614%" height="15" fill="rgb(235,85,21)" fg:x="577" fg:w="2"/><text x="46.8198%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="46.5698%" y="165" width="0.1614%" height="15" fill="rgb(246,128,52)" fg:x="577" fg:w="2"/><text x="46.8198%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="46.5698%" y="149" width="0.1614%" height="15" fill="rgb(243,114,49)" fg:x="577" fg:w="2"/><text x="46.8198%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="46.5698%" y="133" width="0.1614%" height="15" fill="rgb(240,224,22)" fg:x="577" fg:w="2"/><text x="46.8198%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="46.5698%" y="117" width="0.1614%" height="15" fill="rgb(247,201,52)" fg:x="577" fg:w="2"/><text x="46.8198%" y="127.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="46.5698%" y="101" width="0.1614%" height="15" fill="rgb(231,70,45)" fg:x="577" fg:w="2"/><text x="46.8198%" y="111.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.5698%" y="85" width="0.1614%" height="15" fill="rgb(217,215,20)" fg:x="577" fg:w="2"/><text x="46.8198%" y="95.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (6 samples, 0.48%)</title><rect x="46.3277%" y="373" width="0.4843%" height="15" fill="rgb(226,170,30)" fg:x="574" fg:w="6"/><text x="46.5777%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="46.7312%" y="357" width="0.0807%" height="15" fill="rgb(220,190,43)" fg:x="579" fg:w="1"/><text x="46.9812%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.8119%" y="373" width="0.0807%" height="15" fill="rgb(218,20,18)" fg:x="580" fg:w="1"/><text x="47.0619%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="46.8119%" y="357" width="0.0807%" height="15" fill="rgb(245,37,26)" fg:x="580" fg:w="1"/><text x="47.0619%" y="367.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (40 samples, 3.23%)</title><rect x="43.9064%" y="421" width="3.2284%" height="15" fill="rgb(241,127,29)" fg:x="544" fg:w="40"/><text x="44.1564%" y="431.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (18 samples, 1.45%)</title><rect x="45.6820%" y="405" width="1.4528%" height="15" fill="rgb(241,33,26)" fg:x="566" fg:w="18"/><text x="45.9320%" y="415.50"></text></g><g><title>kernel::model::Entity::load_scope (18 samples, 1.45%)</title><rect x="45.6820%" y="389" width="1.4528%" height="15" fill="rgb(220,106,21)" fg:x="566" fg:w="18"/><text x="45.9320%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="46.8927%" y="373" width="0.2421%" height="15" fill="rgb(225,125,35)" fg:x="581" fg:w="3"/><text x="47.1427%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="46.8927%" y="357" width="0.2421%" height="15" fill="rgb(248,80,22)" fg:x="581" fg:w="3"/><text x="47.1427%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="47.0541%" y="341" width="0.0807%" height="15" fill="rgb(231,117,39)" fg:x="583" fg:w="1"/><text x="47.3041%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.0541%" y="325" width="0.0807%" height="15" fill="rgb(239,183,16)" fg:x="583" fg:w="1"/><text x="47.3041%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="47.1348%" y="405" width="0.0807%" height="15" fill="rgb(221,61,19)" fg:x="584" fg:w="1"/><text x="47.3848%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="47.1348%" y="389" width="0.0807%" height="15" fill="rgb(239,196,44)" fg:x="584" fg:w="1"/><text x="47.3848%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.1348%" y="373" width="0.0807%" height="15" fill="rgb(206,113,19)" fg:x="584" fg:w="1"/><text x="47.3848%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="47.2155%" y="341" width="0.3228%" height="15" fill="rgb(245,114,12)" fg:x="585" fg:w="4"/><text x="47.4655%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="47.2962%" y="325" width="0.2421%" height="15" fill="rgb(247,89,39)" fg:x="586" fg:w="3"/><text x="47.5462%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="47.2962%" y="309" width="0.2421%" height="15" fill="rgb(213,85,14)" fg:x="586" fg:w="3"/><text x="47.5462%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="47.2962%" y="293" width="0.2421%" height="15" fill="rgb(249,206,33)" fg:x="586" fg:w="3"/><text x="47.5462%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="47.2962%" y="277" width="0.2421%" height="15" fill="rgb(235,167,47)" fg:x="586" fg:w="3"/><text x="47.5462%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="47.2962%" y="261" width="0.2421%" height="15" fill="rgb(217,177,16)" fg:x="586" fg:w="3"/><text x="47.5462%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="47.2962%" y="245" width="0.2421%" height="15" fill="rgb(250,228,29)" fg:x="586" fg:w="3"/><text x="47.5462%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="47.2962%" y="229" width="0.2421%" height="15" fill="rgb(216,195,42)" fg:x="586" fg:w="3"/><text x="47.5462%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="47.2962%" y="213" width="0.2421%" height="15" fill="rgb(232,192,32)" fg:x="586" fg:w="3"/><text x="47.5462%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="47.2962%" y="197" width="0.2421%" height="15" fill="rgb(211,8,47)" fg:x="586" fg:w="3"/><text x="47.5462%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="47.2962%" y="181" width="0.2421%" height="15" fill="rgb(251,201,9)" fg:x="586" fg:w="3"/><text x="47.5462%" y="191.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="47.2962%" y="165" width="0.2421%" height="15" fill="rgb(206,185,47)" fg:x="586" fg:w="3"/><text x="47.5462%" y="175.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="47.2962%" y="149" width="0.2421%" height="15" fill="rgb(245,54,32)" fg:x="586" fg:w="3"/><text x="47.5462%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="47.2155%" y="357" width="0.4036%" height="15" fill="rgb(208,1,8)" fg:x="585" fg:w="5"/><text x="47.4655%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.5383%" y="341" width="0.0807%" height="15" fill="rgb(228,57,24)" fg:x="589" fg:w="1"/><text x="47.7883%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="47.2155%" y="373" width="0.4843%" height="15" fill="rgb(251,24,8)" fg:x="585" fg:w="6"/><text x="47.4655%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.6190%" y="357" width="0.0807%" height="15" fill="rgb(236,196,50)" fg:x="590" fg:w="1"/><text x="47.8690%" y="367.50"></text></g><g><title>engine::internal::Maps::lookup_entity (3 samples, 0.24%)</title><rect x="47.9419%" y="293" width="0.2421%" height="15" fill="rgb(246,222,29)" fg:x="594" fg:w="3"/><text x="48.1919%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="48.1033%" y="277" width="0.0807%" height="15" fill="rgb(211,34,40)" fg:x="596" fg:w="1"/><text x="48.3533%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="48.1840%" y="213" width="0.1614%" height="15" fill="rgb(210,66,51)" fg:x="597" fg:w="2"/><text x="48.4340%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.3454%" y="181" width="0.0807%" height="15" fill="rgb(250,56,43)" fg:x="599" fg:w="1"/><text x="48.5954%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.3454%" y="165" width="0.0807%" height="15" fill="rgb(240,111,50)" fg:x="599" fg:w="1"/><text x="48.5954%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="48.4262%" y="165" width="0.0807%" height="15" fill="rgb(209,117,13)" fg:x="600" fg:w="1"/><text x="48.6762%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="48.4262%" y="149" width="0.0807%" height="15" fill="rgb(232,164,45)" fg:x="600" fg:w="1"/><text x="48.6762%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="48.3454%" y="213" width="0.2421%" height="15" fill="rgb(205,69,32)" fg:x="599" fg:w="3"/><text x="48.5954%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="48.3454%" y="197" width="0.2421%" height="15" fill="rgb(240,147,45)" fg:x="599" fg:w="3"/><text x="48.5954%" y="207.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="48.4262%" y="181" width="0.1614%" height="15" fill="rgb(221,94,48)" fg:x="600" fg:w="2"/><text x="48.6762%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="48.5069%" y="165" width="0.0807%" height="15" fill="rgb(249,209,17)" fg:x="601" fg:w="1"/><text x="48.7569%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="48.5069%" y="149" width="0.0807%" height="15" fill="rgb(228,57,28)" fg:x="601" fg:w="1"/><text x="48.7569%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="48.5069%" y="133" width="0.0807%" height="15" fill="rgb(250,133,26)" fg:x="601" fg:w="1"/><text x="48.7569%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="48.5069%" y="117" width="0.0807%" height="15" fill="rgb(254,15,16)" fg:x="601" fg:w="1"/><text x="48.7569%" y="127.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.6683%" y="181" width="0.0807%" height="15" fill="rgb(209,147,42)" fg:x="603" fg:w="1"/><text x="48.9183%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.6683%" y="165" width="0.0807%" height="15" fill="rgb(208,5,29)" fg:x="603" fg:w="1"/><text x="48.9183%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.7490%" y="149" width="0.0807%" height="15" fill="rgb(250,73,31)" fg:x="604" fg:w="1"/><text x="48.9990%" y="159.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="48.7490%" y="133" width="0.0807%" height="15" fill="rgb(238,45,10)" fg:x="604" fg:w="1"/><text x="48.9990%" y="143.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="48.7490%" y="117" width="0.0807%" height="15" fill="rgb(214,104,5)" fg:x="604" fg:w="1"/><text x="48.9990%" y="127.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.9104%" y="117" width="0.0807%" height="15" fill="rgb(242,217,19)" fg:x="606" fg:w="1"/><text x="49.1604%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.9104%" y="101" width="0.0807%" height="15" fill="rgb(246,113,27)" fg:x="606" fg:w="1"/><text x="49.1604%" y="111.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.9104%" y="85" width="0.0807%" height="15" fill="rgb(221,34,27)" fg:x="606" fg:w="1"/><text x="49.1604%" y="95.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (11 samples, 0.89%)</title><rect x="48.1840%" y="277" width="0.8878%" height="15" fill="rgb(246,109,6)" fg:x="597" fg:w="11"/><text x="48.4340%" y="287.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (11 samples, 0.89%)</title><rect x="48.1840%" y="261" width="0.8878%" height="15" fill="rgb(217,12,25)" fg:x="597" fg:w="11"/><text x="48.4340%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.89%)</title><rect x="48.1840%" y="245" width="0.8878%" height="15" fill="rgb(250,195,5)" fg:x="597" fg:w="11"/><text x="48.4340%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.89%)</title><rect x="48.1840%" y="229" width="0.8878%" height="15" fill="rgb(244,140,45)" fg:x="597" fg:w="11"/><text x="48.4340%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="48.5876%" y="213" width="0.4843%" height="15" fill="rgb(230,64,14)" fg:x="602" fg:w="6"/><text x="48.8376%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="48.5876%" y="197" width="0.4843%" height="15" fill="rgb(206,27,27)" fg:x="602" fg:w="6"/><text x="48.8376%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="48.7490%" y="181" width="0.3228%" height="15" fill="rgb(230,14,50)" fg:x="604" fg:w="4"/><text x="48.9990%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="48.7490%" y="165" width="0.3228%" height="15" fill="rgb(237,172,14)" fg:x="604" fg:w="4"/><text x="48.9990%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="48.8297%" y="149" width="0.2421%" height="15" fill="rgb(209,25,21)" fg:x="605" fg:w="3"/><text x="49.0797%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.9104%" y="133" width="0.1614%" height="15" fill="rgb(248,148,22)" fg:x="606" fg:w="2"/><text x="49.1604%" y="143.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="48.9911%" y="117" width="0.0807%" height="15" fill="rgb(234,100,22)" fg:x="607" fg:w="1"/><text x="49.2411%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.1525%" y="229" width="0.0807%" height="15" fill="rgb(210,20,30)" fg:x="609" fg:w="1"/><text x="49.4025%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.2333%" y="197" width="0.1614%" height="15" fill="rgb(232,58,0)" fg:x="610" fg:w="2"/><text x="49.4833%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.2333%" y="181" width="0.1614%" height="15" fill="rgb(221,68,13)" fg:x="610" fg:w="2"/><text x="49.4833%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="49.2333%" y="165" width="0.1614%" height="15" fill="rgb(231,194,11)" fg:x="610" fg:w="2"/><text x="49.4833%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.5561%" y="165" width="0.0807%" height="15" fill="rgb(235,51,41)" fg:x="614" fg:w="1"/><text x="49.8061%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.5561%" y="149" width="0.0807%" height="15" fill="rgb(240,50,32)" fg:x="614" fg:w="1"/><text x="49.8061%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.5561%" y="133" width="0.0807%" height="15" fill="rgb(240,185,36)" fg:x="614" fg:w="1"/><text x="49.8061%" y="143.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="49.7175%" y="117" width="0.1614%" height="15" fill="rgb(211,168,15)" fg:x="616" fg:w="2"/><text x="49.9675%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="49.7175%" y="133" width="0.2421%" height="15" fill="rgb(221,70,0)" fg:x="616" fg:w="3"/><text x="49.9675%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.8789%" y="117" width="0.0807%" height="15" fill="rgb(205,21,33)" fg:x="618" fg:w="1"/><text x="50.1289%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.9596%" y="133" width="0.0807%" height="15" fill="rgb(225,106,10)" fg:x="619" fg:w="1"/><text x="50.2096%" y="143.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.9596%" y="117" width="0.0807%" height="15" fill="rgb(236,200,50)" fg:x="619" fg:w="1"/><text x="50.2096%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.9596%" y="101" width="0.0807%" height="15" fill="rgb(249,93,23)" fg:x="619" fg:w="1"/><text x="50.2096%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.1211%" y="101" width="0.0807%" height="15" fill="rgb(244,115,35)" fg:x="621" fg:w="1"/><text x="50.3711%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.0404%" y="117" width="0.2421%" height="15" fill="rgb(231,129,47)" fg:x="620" fg:w="3"/><text x="50.2904%" y="127.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="50.2018%" y="101" width="0.0807%" height="15" fill="rgb(225,160,50)" fg:x="622" fg:w="1"/><text x="50.4518%" y="111.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (31 samples, 2.50%)</title><rect x="47.9419%" y="325" width="2.5020%" height="15" fill="rgb(218,135,23)" fg:x="594" fg:w="31"/><text x="48.1919%" y="335.50">&lt;e..</text></g><g><title>engine::internal::Entities::prepare_entity (31 samples, 2.50%)</title><rect x="47.9419%" y="309" width="2.5020%" height="15" fill="rgb(227,119,14)" fg:x="594" fg:w="31"/><text x="48.1919%" y="319.50">en..</text></g><g><title>kernel::model::deserialize_entity (28 samples, 2.26%)</title><rect x="48.1840%" y="293" width="2.2599%" height="15" fill="rgb(242,138,13)" fg:x="597" fg:w="28"/><text x="48.4340%" y="303.50">k..</text></g><g><title>serde_json::de::from_trait (17 samples, 1.37%)</title><rect x="49.0718%" y="277" width="1.3721%" height="15" fill="rgb(215,11,16)" fg:x="608" fg:w="17"/><text x="49.3218%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17 samples, 1.37%)</title><rect x="49.0718%" y="261" width="1.3721%" height="15" fill="rgb(234,170,50)" fg:x="608" fg:w="17"/><text x="49.3218%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.29%)</title><rect x="49.1525%" y="245" width="1.2914%" height="15" fill="rgb(233,34,20)" fg:x="609" fg:w="16"/><text x="49.4025%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15 samples, 1.21%)</title><rect x="49.2333%" y="229" width="1.2107%" height="15" fill="rgb(237,100,45)" fg:x="610" fg:w="15"/><text x="49.4833%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.21%)</title><rect x="49.2333%" y="213" width="1.2107%" height="15" fill="rgb(231,184,36)" fg:x="610" fg:w="15"/><text x="49.4833%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.05%)</title><rect x="49.3947%" y="197" width="1.0492%" height="15" fill="rgb(252,93,2)" fg:x="612" fg:w="13"/><text x="49.6447%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.05%)</title><rect x="49.3947%" y="181" width="1.0492%" height="15" fill="rgb(248,176,47)" fg:x="612" fg:w="13"/><text x="49.6447%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.81%)</title><rect x="49.6368%" y="165" width="0.8071%" height="15" fill="rgb(249,125,23)" fg:x="615" fg:w="10"/><text x="49.8868%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.81%)</title><rect x="49.6368%" y="149" width="0.8071%" height="15" fill="rgb(239,67,42)" fg:x="615" fg:w="10"/><text x="49.8868%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="50.0404%" y="133" width="0.4036%" height="15" fill="rgb(244,162,4)" fg:x="620" fg:w="5"/><text x="50.2904%" y="143.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.2825%" y="117" width="0.1614%" height="15" fill="rgb(214,150,38)" fg:x="623" fg:w="2"/><text x="50.5325%" y="127.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (35 samples, 2.82%)</title><rect x="47.6998%" y="373" width="2.8249%" height="15" fill="rgb(228,211,28)" fg:x="591" fg:w="35"/><text x="47.9498%" y="383.50">&lt;p..</text></g><g><title>core::iter::adapters::try_process (34 samples, 2.74%)</title><rect x="47.7805%" y="357" width="2.7441%" height="15" fill="rgb(212,98,48)" fg:x="592" fg:w="34"/><text x="48.0305%" y="367.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34 samples, 2.74%)</title><rect x="47.7805%" y="341" width="2.7441%" height="15" fill="rgb(213,45,13)" fg:x="592" fg:w="34"/><text x="48.0305%" y="351.50">&lt;a..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.4439%" y="325" width="0.0807%" height="15" fill="rgb(218,35,29)" fg:x="625" fg:w="1"/><text x="50.6939%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="50.5246%" y="373" width="0.0807%" height="15" fill="rgb(244,13,3)" fg:x="626" fg:w="1"/><text x="50.7746%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="50.5246%" y="357" width="0.0807%" height="15" fill="rgb(235,170,19)" fg:x="626" fg:w="1"/><text x="50.7746%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.6053%" y="341" width="0.0807%" height="15" fill="rgb(233,193,43)" fg:x="627" fg:w="1"/><text x="50.8553%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="50.6860%" y="341" width="0.0807%" height="15" fill="rgb(228,223,20)" fg:x="628" fg:w="1"/><text x="50.9360%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.6860%" y="325" width="0.0807%" height="15" fill="rgb(208,85,54)" fg:x="628" fg:w="1"/><text x="50.9360%" y="335.50"></text></g><g><title>plugins_core::tools::get_contained_keys (48 samples, 3.87%)</title><rect x="47.1348%" y="421" width="3.8741%" height="15" fill="rgb(254,14,45)" fg:x="584" fg:w="48"/><text x="47.3848%" y="431.50">plug..</text></g><g><title>kernel::model::entry::Entry::scope (47 samples, 3.79%)</title><rect x="47.2155%" y="405" width="3.7934%" height="15" fill="rgb(247,99,29)" fg:x="585" fg:w="47"/><text x="47.4655%" y="415.50">kern..</text></g><g><title>kernel::model::Entity::load_scope (47 samples, 3.79%)</title><rect x="47.2155%" y="389" width="3.7934%" height="15" fill="rgb(225,180,54)" fg:x="585" fg:w="47"/><text x="47.4655%" y="399.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="50.6053%" y="373" width="0.4036%" height="15" fill="rgb(239,88,43)" fg:x="627" fg:w="5"/><text x="50.8553%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="50.6053%" y="357" width="0.4036%" height="15" fill="rgb(209,47,11)" fg:x="627" fg:w="5"/><text x="50.8553%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="50.7667%" y="341" width="0.2421%" height="15" fill="rgb(219,179,23)" fg:x="629" fg:w="3"/><text x="51.0167%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="50.7667%" y="325" width="0.2421%" height="15" fill="rgb(213,183,19)" fg:x="629" fg:w="3"/><text x="51.0167%" y="335.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="50.7667%" y="309" width="0.2421%" height="15" fill="rgb(210,11,9)" fg:x="629" fg:w="3"/><text x="51.0167%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="50.7667%" y="293" width="0.2421%" height="15" fill="rgb(239,194,16)" fg:x="629" fg:w="3"/><text x="51.0167%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="50.7667%" y="277" width="0.2421%" height="15" fill="rgb(246,23,50)" fg:x="629" fg:w="3"/><text x="51.0167%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="51.0896%" y="405" width="0.0807%" height="15" fill="rgb(245,10,41)" fg:x="633" fg:w="1"/><text x="51.3396%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="51.0896%" y="389" width="0.0807%" height="15" fill="rgb(228,43,24)" fg:x="633" fg:w="1"/><text x="51.3396%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.0896%" y="373" width="0.0807%" height="15" fill="rgb(220,151,0)" fg:x="633" fg:w="1"/><text x="51.3396%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.3317%" y="373" width="0.1614%" height="15" fill="rgb(232,219,10)" fg:x="636" fg:w="2"/><text x="51.5817%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.3317%" y="357" width="0.1614%" height="15" fill="rgb(227,217,48)" fg:x="636" fg:w="2"/><text x="51.5817%" y="367.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="51.4931%" y="373" width="0.0807%" height="15" fill="rgb(210,66,35)" fg:x="638" fg:w="1"/><text x="51.7431%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="51.4931%" y="357" width="0.0807%" height="15" fill="rgb(254,6,7)" fg:x="638" fg:w="1"/><text x="51.7431%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="51.4931%" y="341" width="0.0807%" height="15" fill="rgb(235,222,42)" fg:x="638" fg:w="1"/><text x="51.7431%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="51.4931%" y="325" width="0.0807%" height="15" fill="rgb(245,126,5)" fg:x="638" fg:w="1"/><text x="51.7431%" y="335.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="51.4931%" y="309" width="0.0807%" height="15" fill="rgb(215,73,17)" fg:x="638" fg:w="1"/><text x="51.7431%" y="319.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="51.4931%" y="293" width="0.0807%" height="15" fill="rgb(219,198,52)" fg:x="638" fg:w="1"/><text x="51.7431%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.5738%" y="373" width="0.0807%" height="15" fill="rgb(217,159,18)" fg:x="639" fg:w="1"/><text x="51.8238%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="51.5738%" y="357" width="0.0807%" height="15" fill="rgb(212,177,18)" fg:x="639" fg:w="1"/><text x="51.8238%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.6546%" y="341" width="0.0807%" height="15" fill="rgb(241,10,11)" fg:x="640" fg:w="1"/><text x="51.9046%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (100 samples, 8.07%)</title><rect x="43.7450%" y="453" width="8.0710%" height="15" fill="rgb(232,114,35)" fg:x="542" fg:w="100"/><text x="43.9950%" y="463.50">&lt;alloc::vec..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (99 samples, 7.99%)</title><rect x="43.8257%" y="437" width="7.9903%" height="15" fill="rgb(238,222,8)" fg:x="543" fg:w="99"/><text x="44.0757%" y="447.50">&lt;core::iter..</text></g><g><title>plugins_core::tools::get_occupant_keys (10 samples, 0.81%)</title><rect x="51.0089%" y="421" width="0.8071%" height="15" fill="rgb(251,153,44)" fg:x="632" fg:w="10"/><text x="51.2589%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.65%)</title><rect x="51.1703%" y="405" width="0.6457%" height="15" fill="rgb(210,140,51)" fg:x="634" fg:w="8"/><text x="51.4203%" y="415.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.65%)</title><rect x="51.1703%" y="389" width="0.6457%" height="15" fill="rgb(222,63,0)" fg:x="634" fg:w="8"/><text x="51.4203%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.6546%" y="373" width="0.1614%" height="15" fill="rgb(240,18,40)" fg:x="640" fg:w="2"/><text x="51.9046%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.6546%" y="357" width="0.1614%" height="15" fill="rgb(237,88,16)" fg:x="640" fg:w="2"/><text x="51.9046%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="51.7353%" y="341" width="0.0807%" height="15" fill="rgb(251,117,13)" fg:x="641" fg:w="1"/><text x="51.9853%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="51.7353%" y="325" width="0.0807%" height="15" fill="rgb(251,228,8)" fg:x="641" fg:w="1"/><text x="51.9853%" y="335.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="51.7353%" y="309" width="0.0807%" height="15" fill="rgb(205,107,49)" fg:x="641" fg:w="1"/><text x="51.9853%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.7353%" y="293" width="0.0807%" height="15" fill="rgb(238,72,41)" fg:x="641" fg:w="1"/><text x="51.9853%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.7353%" y="277" width="0.0807%" height="15" fill="rgb(248,183,52)" fg:x="641" fg:w="1"/><text x="51.9853%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="51.7353%" y="261" width="0.0807%" height="15" fill="rgb(215,58,20)" fg:x="641" fg:w="1"/><text x="51.9853%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="52.3002%" y="325" width="0.2421%" height="15" fill="rgb(209,49,13)" fg:x="648" fg:w="3"/><text x="52.5502%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="52.3002%" y="309" width="0.2421%" height="15" fill="rgb(208,113,17)" fg:x="648" fg:w="3"/><text x="52.5502%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="52.3002%" y="293" width="0.2421%" height="15" fill="rgb(208,14,22)" fg:x="648" fg:w="3"/><text x="52.5502%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.4617%" y="277" width="0.0807%" height="15" fill="rgb(222,95,2)" fg:x="650" fg:w="1"/><text x="52.7117%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.4617%" y="261" width="0.0807%" height="15" fill="rgb(253,180,37)" fg:x="650" fg:w="1"/><text x="52.7117%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.4617%" y="245" width="0.0807%" height="15" fill="rgb(250,81,33)" fg:x="650" fg:w="1"/><text x="52.7117%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.4617%" y="229" width="0.0807%" height="15" fill="rgb(251,151,41)" fg:x="650" fg:w="1"/><text x="52.7117%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="52.3002%" y="405" width="0.4036%" height="15" fill="rgb(210,135,17)" fg:x="648" fg:w="5"/><text x="52.5502%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="52.3002%" y="389" width="0.4036%" height="15" fill="rgb(239,21,29)" fg:x="648" fg:w="5"/><text x="52.5502%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.40%)</title><rect x="52.3002%" y="373" width="0.4036%" height="15" fill="rgb(231,215,16)" fg:x="648" fg:w="5"/><text x="52.5502%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.40%)</title><rect x="52.3002%" y="357" width="0.4036%" height="15" fill="rgb(239,151,54)" fg:x="648" fg:w="5"/><text x="52.5502%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.40%)</title><rect x="52.3002%" y="341" width="0.4036%" height="15" fill="rgb(222,122,38)" fg:x="648" fg:w="5"/><text x="52.5502%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="52.5424%" y="325" width="0.1614%" height="15" fill="rgb(243,128,1)" fg:x="651" fg:w="2"/><text x="52.7924%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="52.5424%" y="309" width="0.1614%" height="15" fill="rgb(225,74,21)" fg:x="651" fg:w="2"/><text x="52.7924%" y="319.50"></text></g><g><title>engine::internal::Entities::prepare_entity (3 samples, 0.24%)</title><rect x="52.7038%" y="389" width="0.2421%" height="15" fill="rgb(216,210,10)" fg:x="653" fg:w="3"/><text x="52.9538%" y="399.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="52.7845%" y="373" width="0.1614%" height="15" fill="rgb(228,76,19)" fg:x="654" fg:w="2"/><text x="53.0345%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8652%" y="357" width="0.0807%" height="15" fill="rgb(236,80,34)" fg:x="655" fg:w="1"/><text x="53.1152%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8652%" y="341" width="0.0807%" height="15" fill="rgb(225,173,23)" fg:x="655" fg:w="1"/><text x="53.1152%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8652%" y="325" width="0.0807%" height="15" fill="rgb(253,38,1)" fg:x="655" fg:w="1"/><text x="53.1152%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.8652%" y="309" width="0.0807%" height="15" fill="rgb(206,155,35)" fg:x="655" fg:w="1"/><text x="53.1152%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.8652%" y="293" width="0.0807%" height="15" fill="rgb(254,27,53)" fg:x="655" fg:w="1"/><text x="53.1152%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.8652%" y="277" width="0.0807%" height="15" fill="rgb(225,52,41)" fg:x="655" fg:w="1"/><text x="53.1152%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="52.8652%" y="261" width="0.0807%" height="15" fill="rgb(244,53,18)" fg:x="655" fg:w="1"/><text x="53.1152%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="52.8652%" y="245" width="0.0807%" height="15" fill="rgb(254,206,48)" fg:x="655" fg:w="1"/><text x="53.1152%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.9459%" y="373" width="0.0807%" height="15" fill="rgb(236,182,23)" fg:x="656" fg:w="1"/><text x="53.1959%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.9459%" y="357" width="0.0807%" height="15" fill="rgb(236,191,37)" fg:x="656" fg:w="1"/><text x="53.1959%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.9459%" y="341" width="0.0807%" height="15" fill="rgb(245,53,8)" fg:x="656" fg:w="1"/><text x="53.1959%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.9459%" y="325" width="0.0807%" height="15" fill="rgb(245,147,9)" fg:x="656" fg:w="1"/><text x="53.1959%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.9459%" y="309" width="0.0807%" height="15" fill="rgb(218,24,48)" fg:x="656" fg:w="1"/><text x="53.1959%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.9459%" y="293" width="0.0807%" height="15" fill="rgb(254,23,9)" fg:x="656" fg:w="1"/><text x="53.1959%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.9459%" y="277" width="0.0807%" height="15" fill="rgb(244,105,9)" fg:x="656" fg:w="1"/><text x="53.1959%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.9459%" y="261" width="0.0807%" height="15" fill="rgb(212,142,22)" fg:x="656" fg:w="1"/><text x="53.1959%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.9459%" y="245" width="0.0807%" height="15" fill="rgb(221,114,49)" fg:x="656" fg:w="1"/><text x="53.1959%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.9459%" y="229" width="0.0807%" height="15" fill="rgb(223,210,25)" fg:x="656" fg:w="1"/><text x="53.1959%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.9459%" y="213" width="0.0807%" height="15" fill="rgb(235,162,44)" fg:x="656" fg:w="1"/><text x="53.1959%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.9459%" y="197" width="0.0807%" height="15" fill="rgb(237,65,45)" fg:x="656" fg:w="1"/><text x="53.1959%" y="207.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="53.2688%" y="261" width="0.1614%" height="15" fill="rgb(208,79,9)" fg:x="660" fg:w="2"/><text x="53.5188%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="53.2688%" y="245" width="0.1614%" height="15" fill="rgb(215,228,8)" fg:x="660" fg:w="2"/><text x="53.5188%" y="255.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="53.2688%" y="229" width="0.1614%" height="15" fill="rgb(205,185,17)" fg:x="660" fg:w="2"/><text x="53.5188%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="53.2688%" y="213" width="0.1614%" height="15" fill="rgb(213,62,36)" fg:x="660" fg:w="2"/><text x="53.5188%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="53.2688%" y="197" width="0.1614%" height="15" fill="rgb(209,34,9)" fg:x="660" fg:w="2"/><text x="53.5188%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="53.2688%" y="181" width="0.1614%" height="15" fill="rgb(246,151,27)" fg:x="660" fg:w="2"/><text x="53.5188%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="53.2688%" y="165" width="0.1614%" height="15" fill="rgb(218,206,3)" fg:x="660" fg:w="2"/><text x="53.5188%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="53.2688%" y="149" width="0.1614%" height="15" fill="rgb(242,202,1)" fg:x="660" fg:w="2"/><text x="53.5188%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="53.2688%" y="133" width="0.1614%" height="15" fill="rgb(227,185,16)" fg:x="660" fg:w="2"/><text x="53.5188%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="53.2688%" y="117" width="0.1614%" height="15" fill="rgb(241,1,14)" fg:x="660" fg:w="2"/><text x="53.5188%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="53.2688%" y="101" width="0.1614%" height="15" fill="rgb(212,113,25)" fg:x="660" fg:w="2"/><text x="53.5188%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.3495%" y="85" width="0.0807%" height="15" fill="rgb(247,37,43)" fg:x="661" fg:w="1"/><text x="53.5995%" y="95.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (11 samples, 0.89%)</title><rect x="52.7038%" y="405" width="0.8878%" height="15" fill="rgb(226,54,8)" fg:x="653" fg:w="11"/><text x="52.9538%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.65%)</title><rect x="52.9459%" y="389" width="0.6457%" height="15" fill="rgb(251,205,25)" fg:x="656" fg:w="8"/><text x="53.1959%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (7 samples, 0.56%)</title><rect x="53.0266%" y="373" width="0.5650%" height="15" fill="rgb(246,87,35)" fg:x="657" fg:w="7"/><text x="53.2766%" y="383.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.48%)</title><rect x="53.1073%" y="357" width="0.4843%" height="15" fill="rgb(251,145,46)" fg:x="658" fg:w="6"/><text x="53.3573%" y="367.50"></text></g><g><title>core::fmt::write (6 samples, 0.48%)</title><rect x="53.1073%" y="341" width="0.4843%" height="15" fill="rgb(210,210,33)" fg:x="658" fg:w="6"/><text x="53.3573%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.48%)</title><rect x="53.1073%" y="325" width="0.4843%" height="15" fill="rgb(221,151,11)" fg:x="658" fg:w="6"/><text x="53.3573%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (6 samples, 0.48%)</title><rect x="53.1073%" y="309" width="0.4843%" height="15" fill="rgb(208,160,28)" fg:x="658" fg:w="6"/><text x="53.3573%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (6 samples, 0.48%)</title><rect x="53.1073%" y="293" width="0.4843%" height="15" fill="rgb(243,69,29)" fg:x="658" fg:w="6"/><text x="53.3573%" y="303.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="53.1881%" y="277" width="0.4036%" height="15" fill="rgb(224,144,4)" fg:x="659" fg:w="5"/><text x="53.4381%" y="287.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="53.4302%" y="261" width="0.1614%" height="15" fill="rgb(211,140,38)" fg:x="662" fg:w="2"/><text x="53.6802%" y="271.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="53.4302%" y="245" width="0.1614%" height="15" fill="rgb(252,189,15)" fg:x="662" fg:w="2"/><text x="53.6802%" y="255.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="53.4302%" y="229" width="0.1614%" height="15" fill="rgb(251,175,23)" fg:x="662" fg:w="2"/><text x="53.6802%" y="239.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="53.4302%" y="213" width="0.1614%" height="15" fill="rgb(212,184,11)" fg:x="662" fg:w="2"/><text x="53.6802%" y="223.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="53.5109%" y="197" width="0.0807%" height="15" fill="rgb(217,205,6)" fg:x="663" fg:w="1"/><text x="53.7609%" y="207.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="53.5109%" y="181" width="0.0807%" height="15" fill="rgb(235,45,45)" fg:x="663" fg:w="1"/><text x="53.7609%" y="191.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="53.5109%" y="165" width="0.0807%" height="15" fill="rgb(211,157,53)" fg:x="663" fg:w="1"/><text x="53.7609%" y="175.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.5109%" y="149" width="0.0807%" height="15" fill="rgb(212,13,8)" fg:x="663" fg:w="1"/><text x="53.7609%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.5109%" y="133" width="0.0807%" height="15" fill="rgb(218,80,36)" fg:x="663" fg:w="1"/><text x="53.7609%" y="143.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="53.5109%" y="117" width="0.0807%" height="15" fill="rgb(211,123,43)" fg:x="663" fg:w="1"/><text x="53.7609%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="53.5109%" y="101" width="0.0807%" height="15" fill="rgb(206,165,2)" fg:x="663" fg:w="1"/><text x="53.7609%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="53.5109%" y="85" width="0.0807%" height="15" fill="rgb(248,63,35)" fg:x="663" fg:w="1"/><text x="53.7609%" y="95.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="53.5109%" y="69" width="0.0807%" height="15" fill="rgb(219,133,41)" fg:x="663" fg:w="1"/><text x="53.7609%" y="79.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="53.5109%" y="53" width="0.0807%" height="15" fill="rgb(206,175,46)" fg:x="663" fg:w="1"/><text x="53.7609%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="54.8830%" y="293" width="0.1614%" height="15" fill="rgb(224,41,35)" fg:x="680" fg:w="2"/><text x="55.1330%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.9637%" y="277" width="0.0807%" height="15" fill="rgb(226,113,24)" fg:x="681" fg:w="1"/><text x="55.2137%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (3 samples, 0.24%)</title><rect x="56.3358%" y="149" width="0.2421%" height="15" fill="rgb(219,51,41)" fg:x="698" fg:w="3"/><text x="56.5858%" y="159.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="56.4165%" y="133" width="0.1614%" height="15" fill="rgb(220,145,47)" fg:x="699" fg:w="2"/><text x="56.6665%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="56.5779%" y="149" width="0.1614%" height="15" fill="rgb(239,121,47)" fg:x="701" fg:w="2"/><text x="56.8279%" y="159.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="56.5779%" y="133" width="0.1614%" height="15" fill="rgb(207,60,40)" fg:x="701" fg:w="2"/><text x="56.8279%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.56%)</title><rect x="56.2550%" y="165" width="0.5650%" height="15" fill="rgb(224,229,11)" fg:x="697" fg:w="7"/><text x="56.5050%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.7393%" y="149" width="0.0807%" height="15" fill="rgb(252,28,32)" fg:x="703" fg:w="1"/><text x="56.9893%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.7393%" y="133" width="0.0807%" height="15" fill="rgb(207,52,49)" fg:x="703" fg:w="1"/><text x="56.9893%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="56.7393%" y="117" width="0.0807%" height="15" fill="rgb(243,51,50)" fg:x="703" fg:w="1"/><text x="56.9893%" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.73%)</title><rect x="56.2550%" y="181" width="0.7264%" height="15" fill="rgb(212,92,21)" fg:x="697" fg:w="9"/><text x="56.5050%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="56.8200%" y="165" width="0.1614%" height="15" fill="rgb(230,183,50)" fg:x="704" fg:w="2"/><text x="57.0700%" y="175.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (11 samples, 0.89%)</title><rect x="56.1743%" y="197" width="0.8878%" height="15" fill="rgb(225,48,9)" fg:x="696" fg:w="11"/><text x="56.4243%" y="207.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="56.9814%" y="181" width="0.0807%" height="15" fill="rgb(254,44,4)" fg:x="706" fg:w="1"/><text x="57.2314%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="57.0621%" y="197" width="0.1614%" height="15" fill="rgb(252,128,37)" fg:x="707" fg:w="2"/><text x="57.3121%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 1.53%)</title><rect x="55.9322%" y="213" width="1.5335%" height="15" fill="rgb(227,178,8)" fg:x="693" fg:w="19"/><text x="56.1822%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="57.2236%" y="197" width="0.2421%" height="15" fill="rgb(205,206,32)" fg:x="709" fg:w="3"/><text x="57.4736%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="57.2236%" y="181" width="0.2421%" height="15" fill="rgb(220,218,22)" fg:x="709" fg:w="3"/><text x="57.4736%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="57.3850%" y="165" width="0.0807%" height="15" fill="rgb(236,41,28)" fg:x="711" fg:w="1"/><text x="57.6350%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (24 samples, 1.94%)</title><rect x="55.9322%" y="229" width="1.9370%" height="15" fill="rgb(219,37,7)" fg:x="693" fg:w="24"/><text x="56.1822%" y="239.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="57.4657%" y="213" width="0.4036%" height="15" fill="rgb(206,160,15)" fg:x="712" fg:w="5"/><text x="57.7157%" y="223.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="57.5464%" y="197" width="0.3228%" height="15" fill="rgb(208,82,21)" fg:x="713" fg:w="4"/><text x="57.7964%" y="207.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="57.8692%" y="149" width="0.0807%" height="15" fill="rgb(226,130,25)" fg:x="717" fg:w="1"/><text x="58.1192%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.9500%" y="149" width="0.0807%" height="15" fill="rgb(212,72,24)" fg:x="718" fg:w="1"/><text x="58.2000%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="58.0307%" y="133" width="0.1614%" height="15" fill="rgb(206,28,16)" fg:x="719" fg:w="2"/><text x="58.2807%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="58.1114%" y="117" width="0.0807%" height="15" fill="rgb(249,41,5)" fg:x="720" fg:w="1"/><text x="58.3614%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.40%)</title><rect x="57.8692%" y="165" width="0.4036%" height="15" fill="rgb(233,96,48)" fg:x="717" fg:w="5"/><text x="58.1192%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="58.0307%" y="149" width="0.2421%" height="15" fill="rgb(240,198,11)" fg:x="719" fg:w="3"/><text x="58.2807%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.1921%" y="133" width="0.0807%" height="15" fill="rgb(209,175,35)" fg:x="721" fg:w="1"/><text x="58.4421%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.48%)</title><rect x="57.8692%" y="213" width="0.4843%" height="15" fill="rgb(214,40,51)" fg:x="717" fg:w="6"/><text x="58.1192%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (6 samples, 0.48%)</title><rect x="57.8692%" y="197" width="0.4843%" height="15" fill="rgb(252,56,4)" fg:x="717" fg:w="6"/><text x="58.1192%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="57.8692%" y="181" width="0.4843%" height="15" fill="rgb(219,131,5)" fg:x="717" fg:w="6"/><text x="58.1192%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="58.2728%" y="165" width="0.0807%" height="15" fill="rgb(223,67,53)" fg:x="722" fg:w="1"/><text x="58.5228%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.2728%" y="149" width="0.0807%" height="15" fill="rgb(227,154,8)" fg:x="722" fg:w="1"/><text x="58.5228%" y="159.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (32 samples, 2.58%)</title><rect x="55.8515%" y="245" width="2.5827%" height="15" fill="rgb(216,174,51)" fg:x="692" fg:w="32"/><text x="56.1015%" y="255.50">&lt;r..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="57.8692%" y="229" width="0.5650%" height="15" fill="rgb(239,60,34)" fg:x="717" fg:w="7"/><text x="58.1192%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.3535%" y="213" width="0.0807%" height="15" fill="rgb(236,165,48)" fg:x="723" fg:w="1"/><text x="58.6035%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="58.4342%" y="245" width="0.2421%" height="15" fill="rgb(210,37,26)" fg:x="724" fg:w="3"/><text x="58.6842%" y="255.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="58.4342%" y="229" width="0.2421%" height="15" fill="rgb(211,3,17)" fg:x="724" fg:w="3"/><text x="58.6842%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (46 samples, 3.71%)</title><rect x="55.3672%" y="261" width="3.7127%" height="15" fill="rgb(234,88,49)" fg:x="686" fg:w="46"/><text x="55.6172%" y="271.50">&lt;cor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="58.6764%" y="245" width="0.4036%" height="15" fill="rgb(233,40,17)" fg:x="727" fg:w="5"/><text x="58.9264%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.9992%" y="229" width="0.0807%" height="15" fill="rgb(235,127,31)" fg:x="731" fg:w="1"/><text x="59.2492%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (59 samples, 4.76%)</title><rect x="55.2058%" y="277" width="4.7619%" height="15" fill="rgb(248,167,17)" fg:x="684" fg:w="59"/><text x="55.4558%" y="287.50">&lt;std::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.89%)</title><rect x="59.0799%" y="261" width="0.8878%" height="15" fill="rgb(218,179,8)" fg:x="732" fg:w="11"/><text x="59.3299%" y="271.50"></text></g><g><title>__libc_malloc (9 samples, 0.73%)</title><rect x="59.2413%" y="245" width="0.7264%" height="15" fill="rgb(216,92,14)" fg:x="734" fg:w="9"/><text x="59.4913%" y="255.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (62 samples, 5.00%)</title><rect x="55.0444%" y="293" width="5.0040%" height="15" fill="rgb(221,198,46)" fg:x="682" fg:w="62"/><text x="55.2944%" y="303.50">&lt;rpc_p..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="59.9677%" y="277" width="0.0807%" height="15" fill="rgb(244,7,25)" fg:x="743" fg:w="1"/><text x="60.2177%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="60.0484%" y="293" width="0.2421%" height="15" fill="rgb(233,75,6)" fg:x="744" fg:w="3"/><text x="60.2984%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.32%)</title><rect x="60.5327%" y="277" width="0.3228%" height="15" fill="rgb(240,189,41)" fg:x="750" fg:w="4"/><text x="60.7827%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="60.6941%" y="261" width="0.1614%" height="15" fill="rgb(237,157,21)" fg:x="752" fg:w="2"/><text x="60.9441%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (81 samples, 6.54%)</title><rect x="54.3987%" y="309" width="6.5375%" height="15" fill="rgb(210,136,49)" fg:x="674" fg:w="81"/><text x="54.6487%" y="319.50">&lt;core::it..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.65%)</title><rect x="60.2906%" y="293" width="0.6457%" height="15" fill="rgb(210,68,29)" fg:x="747" fg:w="8"/><text x="60.5406%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.8555%" y="277" width="0.0807%" height="15" fill="rgb(247,207,20)" fg:x="754" fg:w="1"/><text x="61.1055%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (93 samples, 7.51%)</title><rect x="54.1566%" y="341" width="7.5061%" height="15" fill="rgb(224,73,48)" fg:x="671" fg:w="93"/><text x="54.4066%" y="351.50">&lt;rpc_proto..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (91 samples, 7.34%)</title><rect x="54.3180%" y="325" width="7.3446%" height="15" fill="rgb(215,136,47)" fg:x="673" fg:w="91"/><text x="54.5680%" y="335.50">&lt;std::coll..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.73%)</title><rect x="60.9362%" y="309" width="0.7264%" height="15" fill="rgb(232,222,16)" fg:x="755" fg:w="9"/><text x="61.1862%" y="319.50"></text></g><g><title>__libc_malloc (7 samples, 0.56%)</title><rect x="61.0977%" y="293" width="0.5650%" height="15" fill="rgb(249,202,47)" fg:x="757" fg:w="7"/><text x="61.3477%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.6626%" y="341" width="0.0807%" height="15" fill="rgb(236,56,8)" fg:x="764" fg:w="1"/><text x="61.9126%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.8241%" y="325" width="0.0807%" height="15" fill="rgb(222,6,3)" fg:x="766" fg:w="1"/><text x="62.0741%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (103 samples, 8.31%)</title><rect x="53.7530%" y="357" width="8.3132%" height="15" fill="rgb(254,222,28)" fg:x="666" fg:w="103"/><text x="54.0030%" y="367.50">&lt;core::iter:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="61.7433%" y="341" width="0.3228%" height="15" fill="rgb(219,57,23)" fg:x="765" fg:w="4"/><text x="61.9933%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.9048%" y="325" width="0.1614%" height="15" fill="rgb(251,106,48)" fg:x="767" fg:w="2"/><text x="62.1548%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (113 samples, 9.12%)</title><rect x="53.6723%" y="389" width="9.1203%" height="15" fill="rgb(242,2,23)" fg:x="665" fg:w="113"/><text x="53.9223%" y="399.50">&lt;rpc_proto::J..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (112 samples, 9.04%)</title><rect x="53.7530%" y="373" width="9.0395%" height="15" fill="rgb(212,109,31)" fg:x="666" fg:w="112"/><text x="54.0030%" y="383.50">&lt;std::collect..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.73%)</title><rect x="62.0662%" y="357" width="0.7264%" height="15" fill="rgb(241,9,22)" fg:x="769" fg:w="9"/><text x="62.3162%" y="367.50"></text></g><g><title>__libc_malloc (8 samples, 0.65%)</title><rect x="62.1469%" y="341" width="0.6457%" height="15" fill="rgb(209,64,27)" fg:x="770" fg:w="8"/><text x="62.3969%" y="351.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="63.3575%" y="341" width="0.4036%" height="15" fill="rgb(248,13,44)" fg:x="785" fg:w="5"/><text x="63.6075%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (14 samples, 1.13%)</title><rect x="63.7611%" y="341" width="1.1299%" height="15" fill="rgb(213,86,6)" fg:x="790" fg:w="14"/><text x="64.0111%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="64.4068%" y="325" width="0.4843%" height="15" fill="rgb(247,11,18)" fg:x="798" fg:w="6"/><text x="64.6568%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="64.6489%" y="309" width="0.2421%" height="15" fill="rgb(252,31,11)" fg:x="801" fg:w="3"/><text x="64.8989%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.8910%" y="309" width="0.0807%" height="15" fill="rgb(215,63,51)" fg:x="804" fg:w="1"/><text x="65.1410%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.9718%" y="309" width="0.0807%" height="15" fill="rgb(222,180,4)" fg:x="805" fg:w="1"/><text x="65.2218%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.9718%" y="293" width="0.0807%" height="15" fill="rgb(233,4,23)" fg:x="805" fg:w="1"/><text x="65.2218%" y="303.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="64.8910%" y="341" width="0.3228%" height="15" fill="rgb(230,116,22)" fg:x="804" fg:w="4"/><text x="65.1410%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="64.8910%" y="325" width="0.3228%" height="15" fill="rgb(222,20,14)" fg:x="804" fg:w="4"/><text x="65.1410%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="65.0525%" y="309" width="0.1614%" height="15" fill="rgb(210,176,43)" fg:x="806" fg:w="2"/><text x="65.3025%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (2 samples, 0.16%)</title><rect x="65.0525%" y="293" width="0.1614%" height="15" fill="rgb(219,67,32)" fg:x="806" fg:w="2"/><text x="65.3025%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="65.2139%" y="325" width="0.0807%" height="15" fill="rgb(228,91,39)" fg:x="808" fg:w="1"/><text x="65.4639%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (3 samples, 0.24%)</title><rect x="65.2139%" y="341" width="0.2421%" height="15" fill="rgb(254,63,14)" fg:x="808" fg:w="3"/><text x="65.4639%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="65.2946%" y="325" width="0.1614%" height="15" fill="rgb(216,171,39)" fg:x="809" fg:w="2"/><text x="65.5446%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.3753%" y="309" width="0.0807%" height="15" fill="rgb(248,68,25)" fg:x="810" fg:w="1"/><text x="65.6253%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.6174%" y="309" width="0.1614%" height="15" fill="rgb(239,63,16)" fg:x="813" fg:w="2"/><text x="65.8674%" y="319.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (5 samples, 0.40%)</title><rect x="65.4560%" y="341" width="0.4036%" height="15" fill="rgb(225,111,43)" fg:x="811" fg:w="5"/><text x="65.7060%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="65.4560%" y="325" width="0.4036%" height="15" fill="rgb(246,165,17)" fg:x="811" fg:w="5"/><text x="65.7060%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.7789%" y="309" width="0.0807%" height="15" fill="rgb(208,124,1)" fg:x="815" fg:w="1"/><text x="66.0289%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.7789%" y="293" width="0.0807%" height="15" fill="rgb(234,147,33)" fg:x="815" fg:w="1"/><text x="66.0289%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7789%" y="277" width="0.0807%" height="15" fill="rgb(240,86,30)" fg:x="815" fg:w="1"/><text x="66.0289%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="66.0210%" y="293" width="0.0807%" height="15" fill="rgb(237,34,51)" fg:x="818" fg:w="1"/><text x="66.2710%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.1017%" y="293" width="0.0807%" height="15" fill="rgb(232,131,41)" fg:x="819" fg:w="1"/><text x="66.3517%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.3438%" y="261" width="0.0807%" height="15" fill="rgb(227,129,53)" fg:x="822" fg:w="1"/><text x="66.5938%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.3438%" y="245" width="0.0807%" height="15" fill="rgb(230,90,35)" fg:x="822" fg:w="1"/><text x="66.5938%" y="255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="66.3438%" y="229" width="0.0807%" height="15" fill="rgb(248,88,27)" fg:x="822" fg:w="1"/><text x="66.5938%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="66.3438%" y="277" width="0.2421%" height="15" fill="rgb(223,18,17)" fg:x="822" fg:w="3"/><text x="66.5938%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="66.4245%" y="261" width="0.1614%" height="15" fill="rgb(241,11,10)" fg:x="823" fg:w="2"/><text x="66.6745%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="66.5860%" y="277" width="0.0807%" height="15" fill="rgb(232,111,52)" fg:x="825" fg:w="1"/><text x="66.8360%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.6667%" y="261" width="0.0807%" height="15" fill="rgb(228,67,8)" fg:x="826" fg:w="1"/><text x="66.9167%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="66.7474%" y="261" width="0.1614%" height="15" fill="rgb(251,168,31)" fg:x="827" fg:w="2"/><text x="66.9974%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.8281%" y="245" width="0.0807%" height="15" fill="rgb(249,164,11)" fg:x="828" fg:w="1"/><text x="67.0781%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.8281%" y="229" width="0.0807%" height="15" fill="rgb(239,81,9)" fg:x="828" fg:w="1"/><text x="67.0781%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="66.6667%" y="277" width="0.5650%" height="15" fill="rgb(222,145,38)" fg:x="826" fg:w="7"/><text x="66.9167%" y="287.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="66.9088%" y="261" width="0.3228%" height="15" fill="rgb(238,80,54)" fg:x="829" fg:w="4"/><text x="67.1588%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.1509%" y="245" width="0.0807%" height="15" fill="rgb(237,116,16)" fg:x="832" fg:w="1"/><text x="67.4009%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.1509%" y="229" width="0.0807%" height="15" fill="rgb(218,135,19)" fg:x="832" fg:w="1"/><text x="67.4009%" y="239.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (18 samples, 1.45%)</title><rect x="65.8596%" y="341" width="1.4528%" height="15" fill="rgb(216,207,44)" fg:x="816" fg:w="18"/><text x="66.1096%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.37%)</title><rect x="65.9403%" y="325" width="1.3721%" height="15" fill="rgb(226,152,40)" fg:x="817" fg:w="17"/><text x="66.1903%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_map (17 samples, 1.37%)</title><rect x="65.9403%" y="309" width="1.3721%" height="15" fill="rgb(219,98,35)" fg:x="817" fg:w="17"/><text x="66.1903%" y="319.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (14 samples, 1.13%)</title><rect x="66.1824%" y="293" width="1.1299%" height="15" fill="rgb(222,136,46)" fg:x="820" fg:w="14"/><text x="66.4324%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.2316%" y="277" width="0.0807%" height="15" fill="rgb(222,71,8)" fg:x="833" fg:w="1"/><text x="67.4816%" y="287.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (3 samples, 0.24%)</title><rect x="67.3123%" y="341" width="0.2421%" height="15" fill="rgb(209,89,53)" fg:x="834" fg:w="3"/><text x="67.5623%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.4738%" y="325" width="0.0807%" height="15" fill="rgb(210,97,51)" fg:x="836" fg:w="1"/><text x="67.7238%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.7159%" y="293" width="0.1614%" height="15" fill="rgb(248,65,21)" fg:x="839" fg:w="2"/><text x="67.9659%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.7159%" y="277" width="0.1614%" height="15" fill="rgb(222,5,31)" fg:x="839" fg:w="2"/><text x="67.9659%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="67.7159%" y="261" width="0.1614%" height="15" fill="rgb(241,16,30)" fg:x="839" fg:w="2"/><text x="67.9659%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="68.0387%" y="261" width="0.1614%" height="15" fill="rgb(215,86,30)" fg:x="843" fg:w="2"/><text x="68.2887%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (4 samples, 0.32%)</title><rect x="67.9580%" y="277" width="0.3228%" height="15" fill="rgb(235,26,44)" fg:x="842" fg:w="4"/><text x="68.2080%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="68.2002%" y="261" width="0.0807%" height="15" fill="rgb(228,147,14)" fg:x="845" fg:w="1"/><text x="68.4502%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="68.2002%" y="245" width="0.0807%" height="15" fill="rgb(253,38,50)" fg:x="845" fg:w="1"/><text x="68.4502%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.5230%" y="245" width="0.1614%" height="15" fill="rgb(251,151,16)" fg:x="849" fg:w="2"/><text x="68.7730%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.5230%" y="229" width="0.1614%" height="15" fill="rgb(224,64,19)" fg:x="849" fg:w="2"/><text x="68.7730%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="68.5230%" y="213" width="0.1614%" height="15" fill="rgb(235,214,47)" fg:x="849" fg:w="2"/><text x="68.7730%" y="223.50"></text></g><g><title>serde::ser::Serializer::collect_seq (13 samples, 1.05%)</title><rect x="67.8773%" y="293" width="1.0492%" height="15" fill="rgb(218,15,19)" fg:x="841" fg:w="13"/><text x="68.1273%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.65%)</title><rect x="68.2809%" y="277" width="0.6457%" height="15" fill="rgb(247,209,3)" fg:x="846" fg:w="8"/><text x="68.5309%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.65%)</title><rect x="68.2809%" y="261" width="0.6457%" height="15" fill="rgb(217,29,2)" fg:x="846" fg:w="8"/><text x="68.5309%" y="271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="68.6844%" y="245" width="0.2421%" height="15" fill="rgb(234,9,9)" fg:x="851" fg:w="3"/><text x="68.9344%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.8458%" y="229" width="0.0807%" height="15" fill="rgb(207,43,14)" fg:x="853" fg:w="1"/><text x="69.0958%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="69.0880%" y="277" width="0.0807%" height="15" fill="rgb(216,219,36)" fg:x="856" fg:w="1"/><text x="69.3380%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="69.4915%" y="261" width="0.4036%" height="15" fill="rgb(238,12,26)" fg:x="861" fg:w="5"/><text x="69.7415%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.7337%" y="245" width="0.1614%" height="15" fill="rgb(226,67,30)" fg:x="864" fg:w="2"/><text x="69.9837%" y="255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="69.8144%" y="229" width="0.0807%" height="15" fill="rgb(229,154,7)" fg:x="865" fg:w="1"/><text x="70.0644%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.8951%" y="245" width="0.1614%" height="15" fill="rgb(249,90,18)" fg:x="866" fg:w="2"/><text x="70.1451%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.97%)</title><rect x="69.1687%" y="277" width="0.9685%" height="15" fill="rgb(223,53,15)" fg:x="857" fg:w="12"/><text x="69.4187%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="69.8951%" y="261" width="0.2421%" height="15" fill="rgb(253,86,38)" fg:x="866" fg:w="3"/><text x="70.1451%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="70.0565%" y="245" width="0.0807%" height="15" fill="rgb(222,198,9)" fg:x="868" fg:w="1"/><text x="70.3065%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="70.0565%" y="229" width="0.0807%" height="15" fill="rgb(240,146,25)" fg:x="868" fg:w="1"/><text x="70.3065%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (34 samples, 2.74%)</title><rect x="67.6352%" y="309" width="2.7441%" height="15" fill="rgb(225,38,10)" fg:x="838" fg:w="34"/><text x="67.8852%" y="319.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (18 samples, 1.45%)</title><rect x="68.9266%" y="293" width="1.4528%" height="15" fill="rgb(246,93,4)" fg:x="854" fg:w="18"/><text x="69.1766%" y="303.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="70.1372%" y="277" width="0.2421%" height="15" fill="rgb(222,55,18)" fg:x="869" fg:w="3"/><text x="70.3872%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.4600%" y="293" width="0.0807%" height="15" fill="rgb(233,137,48)" fg:x="873" fg:w="1"/><text x="70.7100%" y="303.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (211 samples, 17.03%)</title><rect x="53.5916%" y="405" width="17.0299%" height="15" fill="rgb(214,8,54)" fg:x="664" fg:w="211"/><text x="53.8416%" y="415.50">&lt;rpc_proto::Json as core::..</text></g><g><title>kernel::model::EntityPtr::to_json_value (97 samples, 7.83%)</title><rect x="62.7926%" y="389" width="7.8289%" height="15" fill="rgb(206,75,4)" fg:x="778" fg:w="97"/><text x="63.0426%" y="399.50">kernel::mod..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (97 samples, 7.83%)</title><rect x="62.7926%" y="373" width="7.8289%" height="15" fill="rgb(238,171,14)" fg:x="778" fg:w="97"/><text x="63.0426%" y="383.50">kernel::mod..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (97 samples, 7.83%)</title><rect x="62.7926%" y="357" width="7.8289%" height="15" fill="rgb(233,70,41)" fg:x="778" fg:w="97"/><text x="63.0426%" y="367.50">&lt;serde_json..</text></g><g><title>serde::ser::Serializer::collect_map (38 samples, 3.07%)</title><rect x="67.5545%" y="341" width="3.0670%" height="15" fill="rgb(214,68,36)" fg:x="837" fg:w="38"/><text x="67.8045%" y="351.50">ser..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (38 samples, 3.07%)</title><rect x="67.5545%" y="325" width="3.0670%" height="15" fill="rgb(223,29,5)" fg:x="837" fg:w="38"/><text x="67.8045%" y="335.50">ker..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="70.3793%" y="309" width="0.2421%" height="15" fill="rgb(251,22,40)" fg:x="872" fg:w="3"/><text x="70.6293%" y="319.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="70.5408%" y="293" width="0.0807%" height="15" fill="rgb(210,67,41)" fg:x="874" fg:w="1"/><text x="70.7908%" y="303.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="70.5408%" y="277" width="0.0807%" height="15" fill="rgb(225,177,31)" fg:x="874" fg:w="1"/><text x="70.7908%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="70.6215%" y="405" width="0.1614%" height="15" fill="rgb(221,229,11)" fg:x="875" fg:w="2"/><text x="70.8715%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="70.6215%" y="389" width="0.1614%" height="15" fill="rgb(247,172,52)" fg:x="875" fg:w="2"/><text x="70.8715%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.7022%" y="373" width="0.0807%" height="15" fill="rgb(212,73,19)" fg:x="876" fg:w="1"/><text x="70.9522%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (235 samples, 18.97%)</title><rect x="51.8967%" y="437" width="18.9669%" height="15" fill="rgb(244,7,46)" fg:x="643" fg:w="235"/><text x="52.1467%" y="447.50">&lt;core::iter::adapters::map::Ma..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (234 samples, 18.89%)</title><rect x="51.9774%" y="421" width="18.8862%" height="15" fill="rgb(230,113,20)" fg:x="644" fg:w="234"/><text x="52.2274%" y="431.50">plugins_rpc::sessions::Session..</text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="70.7829%" y="405" width="0.0807%" height="15" fill="rgb(209,97,30)" fg:x="877" fg:w="1"/><text x="71.0329%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (337 samples, 27.20%)</title><rect x="43.7450%" y="469" width="27.1994%" height="15" fill="rgb(243,89,12)" fg:x="542" fg:w="337"/><text x="43.9950%" y="479.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (237 samples, 19.13%)</title><rect x="51.8160%" y="453" width="19.1283%" height="15" fill="rgb(228,32,19)" fg:x="642" fg:w="237"/><text x="52.0660%" y="463.50">alloc::vec::in_place_collect::..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.8636%" y="437" width="0.0807%" height="15" fill="rgb(248,25,17)" fg:x="878" fg:w="1"/><text x="71.1136%" y="447.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="70.9443%" y="469" width="0.0807%" height="15" fill="rgb(232,161,29)" fg:x="879" fg:w="1"/><text x="71.1943%" y="479.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (355 samples, 28.65%)</title><rect x="42.4536%" y="485" width="28.6521%" height="15" fill="rgb(251,192,11)" fg:x="526" fg:w="355"/><text x="42.7036%" y="495.50">&lt;plugins_rpc::sessions::SessionServices as plu..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.0250%" y="469" width="0.0807%" height="15" fill="rgb(240,47,32)" fg:x="880" fg:w="1"/><text x="71.2750%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.0250%" y="453" width="0.0807%" height="15" fill="rgb(250,16,45)" fg:x="880" fg:w="1"/><text x="71.2750%" y="463.50"></text></g><g><title>&lt;rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="71.1057%" y="485" width="0.0807%" height="15" fill="rgb(227,217,42)" fg:x="881" fg:w="1"/><text x="71.3557%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="71.1057%" y="469" width="0.0807%" height="15" fill="rgb(206,82,54)" fg:x="881" fg:w="1"/><text x="71.3557%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="71.1057%" y="453" width="0.0807%" height="15" fill="rgb(243,145,25)" fg:x="881" fg:w="1"/><text x="71.3557%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.1057%" y="437" width="0.0807%" height="15" fill="rgb(207,166,24)" fg:x="881" fg:w="1"/><text x="71.3557%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="71.1864%" y="485" width="0.0807%" height="15" fill="rgb(215,191,44)" fg:x="882" fg:w="1"/><text x="71.4364%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.1864%" y="469" width="0.0807%" height="15" fill="rgb(234,218,51)" fg:x="882" fg:w="1"/><text x="71.4364%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="71.1864%" y="453" width="0.0807%" height="15" fill="rgb(245,133,21)" fg:x="882" fg:w="1"/><text x="71.4364%" y="463.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (504 samples, 40.68%)</title><rect x="30.6699%" y="549" width="40.6780%" height="15" fill="rgb(230,136,45)" fg:x="380" fg:w="504"/><text x="30.9199%" y="559.50">&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;:..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (402 samples, 32.45%)</title><rect x="38.9023%" y="533" width="32.4455%" height="15" fill="rgb(247,63,43)" fg:x="482" fg:w="402"/><text x="39.1523%" y="543.50">kernel::plugins::SessionPlugins::have_surroundings</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (401 samples, 32.36%)</title><rect x="38.9831%" y="517" width="32.3648%" height="15" fill="rgb(254,223,31)" fg:x="483" fg:w="401"/><text x="39.2331%" y="527.50">&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::P..</text></g><g><title>plugins_rpc::querying::have_surroundings (361 samples, 29.14%)</title><rect x="42.2115%" y="501" width="29.1364%" height="15" fill="rgb(236,185,0)" fg:x="523" fg:w="361"/><text x="42.4615%" y="511.50">plugins_rpc::querying::have_surroundings</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.2672%" y="485" width="0.0807%" height="15" fill="rgb(231,139,46)" fg:x="883" fg:w="1"/><text x="71.5172%" y="495.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (1 samples, 0.08%)</title><rect x="71.2672%" y="469" width="0.0807%" height="15" fill="rgb(236,147,31)" fg:x="883" fg:w="1"/><text x="71.5172%" y="479.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;kernel::model::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="71.2672%" y="453" width="0.0807%" height="15" fill="rgb(225,222,22)" fg:x="883" fg:w="1"/><text x="71.5172%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="71.2672%" y="437" width="0.0807%" height="15" fill="rgb(225,193,14)" fg:x="883" fg:w="1"/><text x="71.5172%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="71.3479%" y="501" width="0.0807%" height="15" fill="rgb(253,193,46)" fg:x="884" fg:w="1"/><text x="71.5979%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3479%" y="485" width="0.0807%" height="15" fill="rgb(218,187,39)" fg:x="884" fg:w="1"/><text x="71.5979%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3479%" y="469" width="0.0807%" height="15" fill="rgb(227,162,48)" fg:x="884" fg:w="1"/><text x="71.5979%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.3479%" y="453" width="0.0807%" height="15" fill="rgb(222,25,5)" fg:x="884" fg:w="1"/><text x="71.5979%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.3479%" y="437" width="0.0807%" height="15" fill="rgb(211,205,16)" fg:x="884" fg:w="1"/><text x="71.5979%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.3479%" y="421" width="0.0807%" height="15" fill="rgb(244,191,2)" fg:x="884" fg:w="1"/><text x="71.5979%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.3479%" y="405" width="0.0807%" height="15" fill="rgb(248,159,12)" fg:x="884" fg:w="1"/><text x="71.5979%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.3479%" y="389" width="0.0807%" height="15" fill="rgb(235,204,17)" fg:x="884" fg:w="1"/><text x="71.5979%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.3479%" y="373" width="0.0807%" height="15" fill="rgb(240,21,27)" fg:x="884" fg:w="1"/><text x="71.5979%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.3479%" y="357" width="0.0807%" height="15" fill="rgb(224,170,31)" fg:x="884" fg:w="1"/><text x="71.5979%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.3479%" y="341" width="0.0807%" height="15" fill="rgb(223,145,32)" fg:x="884" fg:w="1"/><text x="71.5979%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.3479%" y="325" width="0.0807%" height="15" fill="rgb(243,100,5)" fg:x="884" fg:w="1"/><text x="71.5979%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3479%" y="309" width="0.0807%" height="15" fill="rgb(242,131,51)" fg:x="884" fg:w="1"/><text x="71.5979%" y="319.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="71.4286%" y="501" width="0.0807%" height="15" fill="rgb(223,156,46)" fg:x="885" fg:w="1"/><text x="71.6786%" y="511.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="71.4286%" y="485" width="0.0807%" height="15" fill="rgb(215,10,40)" fg:x="885" fg:w="1"/><text x="71.6786%" y="495.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="71.4286%" y="469" width="0.0807%" height="15" fill="rgb(233,155,0)" fg:x="885" fg:w="1"/><text x="71.6786%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.4286%" y="453" width="0.0807%" height="15" fill="rgb(247,78,6)" fg:x="885" fg:w="1"/><text x="71.6786%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="71.5093%" y="373" width="0.0807%" height="15" fill="rgb(237,217,21)" fg:x="886" fg:w="1"/><text x="71.7593%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="71.5093%" y="357" width="0.0807%" height="15" fill="rgb(212,1,21)" fg:x="886" fg:w="1"/><text x="71.7593%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="71.5093%" y="341" width="0.0807%" height="15" fill="rgb(213,7,14)" fg:x="886" fg:w="1"/><text x="71.7593%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="71.5093%" y="325" width="0.0807%" height="15" fill="rgb(225,84,14)" fg:x="886" fg:w="1"/><text x="71.7593%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="71.5093%" y="421" width="0.1614%" height="15" fill="rgb(239,216,39)" fg:x="886" fg:w="2"/><text x="71.7593%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.5093%" y="405" width="0.1614%" height="15" fill="rgb(253,29,23)" fg:x="886" fg:w="2"/><text x="71.7593%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="71.5093%" y="389" width="0.1614%" height="15" fill="rgb(220,167,50)" fg:x="886" fg:w="2"/><text x="71.7593%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.5900%" y="373" width="0.0807%" height="15" fill="rgb(232,141,1)" fg:x="887" fg:w="1"/><text x="71.8400%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.5900%" y="357" width="0.0807%" height="15" fill="rgb(222,210,1)" fg:x="887" fg:w="1"/><text x="71.8400%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.5900%" y="341" width="0.0807%" height="15" fill="rgb(219,84,10)" fg:x="887" fg:w="1"/><text x="71.8400%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="71.5093%" y="485" width="0.2421%" height="15" fill="rgb(245,188,6)" fg:x="886" fg:w="3"/><text x="71.7593%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="71.5093%" y="469" width="0.2421%" height="15" fill="rgb(252,139,39)" fg:x="886" fg:w="3"/><text x="71.7593%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="71.5093%" y="453" width="0.2421%" height="15" fill="rgb(218,42,26)" fg:x="886" fg:w="3"/><text x="71.7593%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="71.5093%" y="437" width="0.2421%" height="15" fill="rgb(237,226,51)" fg:x="886" fg:w="3"/><text x="71.7593%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.6707%" y="421" width="0.0807%" height="15" fill="rgb(246,15,17)" fg:x="888" fg:w="1"/><text x="71.9207%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.6707%" y="405" width="0.0807%" height="15" fill="rgb(228,170,42)" fg:x="888" fg:w="1"/><text x="71.9207%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.6707%" y="389" width="0.0807%" height="15" fill="rgb(248,118,53)" fg:x="888" fg:w="1"/><text x="71.9207%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.6707%" y="373" width="0.0807%" height="15" fill="rgb(207,30,10)" fg:x="888" fg:w="1"/><text x="71.9207%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.6707%" y="357" width="0.0807%" height="15" fill="rgb(217,104,38)" fg:x="888" fg:w="1"/><text x="71.9207%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.6707%" y="341" width="0.0807%" height="15" fill="rgb(211,165,26)" fg:x="888" fg:w="1"/><text x="71.9207%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.6707%" y="325" width="0.0807%" height="15" fill="rgb(247,38,9)" fg:x="888" fg:w="1"/><text x="71.9207%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.6707%" y="309" width="0.0807%" height="15" fill="rgb(218,187,8)" fg:x="888" fg:w="1"/><text x="71.9207%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.6707%" y="293" width="0.0807%" height="15" fill="rgb(247,94,28)" fg:x="888" fg:w="1"/><text x="71.9207%" y="303.50"></text></g><g><title>engine::internal::Entities::prepare_entity (6 samples, 0.48%)</title><rect x="71.3479%" y="517" width="0.4843%" height="15" fill="rgb(218,173,30)" fg:x="884" fg:w="6"/><text x="71.5979%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.32%)</title><rect x="71.5093%" y="501" width="0.3228%" height="15" fill="rgb(245,45,36)" fg:x="886" fg:w="4"/><text x="71.7593%" y="511.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="71.7514%" y="485" width="0.0807%" height="15" fill="rgb(221,172,44)" fg:x="889" fg:w="1"/><text x="72.0014%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.7514%" y="469" width="0.0807%" height="15" fill="rgb(222,45,12)" fg:x="889" fg:w="1"/><text x="72.0014%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.7514%" y="453" width="0.0807%" height="15" fill="rgb(250,10,22)" fg:x="889" fg:w="1"/><text x="72.0014%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.7514%" y="437" width="0.0807%" height="15" fill="rgb(239,27,0)" fg:x="889" fg:w="1"/><text x="72.0014%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.7514%" y="421" width="0.0807%" height="15" fill="rgb(223,118,22)" fg:x="889" fg:w="1"/><text x="72.0014%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.7514%" y="405" width="0.0807%" height="15" fill="rgb(251,81,25)" fg:x="889" fg:w="1"/><text x="72.0014%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.7514%" y="389" width="0.0807%" height="15" fill="rgb(237,225,53)" fg:x="889" fg:w="1"/><text x="72.0014%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.7514%" y="373" width="0.0807%" height="15" fill="rgb(237,186,51)" fg:x="889" fg:w="1"/><text x="72.0014%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.7514%" y="357" width="0.0807%" height="15" fill="rgb(247,209,11)" fg:x="889" fg:w="1"/><text x="72.0014%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (7 samples, 0.56%)</title><rect x="71.3479%" y="533" width="0.5650%" height="15" fill="rgb(223,109,27)" fg:x="884" fg:w="7"/><text x="71.5979%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="71.8321%" y="517" width="0.0807%" height="15" fill="rgb(246,181,13)" fg:x="890" fg:w="1"/><text x="72.0821%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="71.8321%" y="501" width="0.0807%" height="15" fill="rgb(234,57,44)" fg:x="890" fg:w="1"/><text x="72.0821%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="71.8321%" y="485" width="0.0807%" height="15" fill="rgb(211,227,50)" fg:x="890" fg:w="1"/><text x="72.0821%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.8321%" y="469" width="0.0807%" height="15" fill="rgb(254,57,34)" fg:x="890" fg:w="1"/><text x="72.0821%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.8321%" y="453" width="0.0807%" height="15" fill="rgb(227,212,26)" fg:x="890" fg:w="1"/><text x="72.0821%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="71.8321%" y="437" width="0.0807%" height="15" fill="rgb(244,169,44)" fg:x="890" fg:w="1"/><text x="72.0821%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="71.8321%" y="421" width="0.0807%" height="15" fill="rgb(236,135,50)" fg:x="890" fg:w="1"/><text x="72.0821%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.8321%" y="405" width="0.0807%" height="15" fill="rgb(241,89,30)" fg:x="890" fg:w="1"/><text x="72.0821%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.8321%" y="389" width="0.0807%" height="15" fill="rgb(206,113,34)" fg:x="890" fg:w="1"/><text x="72.0821%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.8321%" y="373" width="0.0807%" height="15" fill="rgb(218,104,52)" fg:x="890" fg:w="1"/><text x="72.0821%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="71.8321%" y="357" width="0.0807%" height="15" fill="rgb(223,82,32)" fg:x="890" fg:w="1"/><text x="72.0821%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="71.8321%" y="341" width="0.0807%" height="15" fill="rgb(249,219,30)" fg:x="890" fg:w="1"/><text x="72.0821%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="71.8321%" y="325" width="0.0807%" height="15" fill="rgb(233,141,21)" fg:x="890" fg:w="1"/><text x="72.0821%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="71.8321%" y="309" width="0.0807%" height="15" fill="rgb(252,87,44)" fg:x="890" fg:w="1"/><text x="72.0821%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="71.8321%" y="293" width="0.0807%" height="15" fill="rgb(229,48,33)" fg:x="890" fg:w="1"/><text x="72.0821%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="71.9128%" y="533" width="0.0807%" height="15" fill="rgb(229,23,22)" fg:x="891" fg:w="1"/><text x="72.1628%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="71.9935%" y="517" width="0.0807%" height="15" fill="rgb(244,116,16)" fg:x="892" fg:w="1"/><text x="72.2435%" y="527.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="71.9935%" y="501" width="0.0807%" height="15" fill="rgb(247,45,10)" fg:x="892" fg:w="1"/><text x="72.2435%" y="511.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="71.9935%" y="485" width="0.0807%" height="15" fill="rgb(228,60,29)" fg:x="892" fg:w="1"/><text x="72.2435%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.9935%" y="469" width="0.0807%" height="15" fill="rgb(205,129,15)" fg:x="892" fg:w="1"/><text x="72.2435%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.9935%" y="453" width="0.0807%" height="15" fill="rgb(206,229,4)" fg:x="892" fg:w="1"/><text x="72.2435%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.9935%" y="437" width="0.0807%" height="15" fill="rgb(249,191,30)" fg:x="892" fg:w="1"/><text x="72.2435%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.9935%" y="421" width="0.0807%" height="15" fill="rgb(250,84,54)" fg:x="892" fg:w="1"/><text x="72.2435%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.9935%" y="405" width="0.0807%" height="15" fill="rgb(207,25,53)" fg:x="892" fg:w="1"/><text x="72.2435%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.9935%" y="389" width="0.0807%" height="15" fill="rgb(235,40,8)" fg:x="892" fg:w="1"/><text x="72.2435%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.9935%" y="373" width="0.0807%" height="15" fill="rgb(226,169,33)" fg:x="892" fg:w="1"/><text x="72.2435%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.9935%" y="357" width="0.0807%" height="15" fill="rgb(238,110,8)" fg:x="892" fg:w="1"/><text x="72.2435%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.9935%" y="341" width="0.0807%" height="15" fill="rgb(251,206,12)" fg:x="892" fg:w="1"/><text x="72.2435%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.9935%" y="325" width="0.0807%" height="15" fill="rgb(248,171,18)" fg:x="892" fg:w="1"/><text x="72.2435%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.9935%" y="309" width="0.0807%" height="15" fill="rgb(213,65,46)" fg:x="892" fg:w="1"/><text x="72.2435%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.9935%" y="293" width="0.0807%" height="15" fill="rgb(211,154,15)" fg:x="892" fg:w="1"/><text x="72.2435%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="71.9935%" y="277" width="0.0807%" height="15" fill="rgb(217,75,43)" fg:x="892" fg:w="1"/><text x="72.2435%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="71.9935%" y="261" width="0.0807%" height="15" fill="rgb(230,32,33)" fg:x="892" fg:w="1"/><text x="72.2435%" y="271.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="72.0743%" y="517" width="0.0807%" height="15" fill="rgb(221,100,16)" fg:x="893" fg:w="1"/><text x="72.3243%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.0743%" y="501" width="0.0807%" height="15" fill="rgb(212,129,47)" fg:x="893" fg:w="1"/><text x="72.3243%" y="511.50"></text></g><g><title>engine::session::Session::world (3 samples, 0.24%)</title><rect x="71.9935%" y="533" width="0.2421%" height="15" fill="rgb(239,217,47)" fg:x="892" fg:w="3"/><text x="72.2435%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.1550%" y="517" width="0.0807%" height="15" fill="rgb(230,84,24)" fg:x="894" fg:w="1"/><text x="72.4050%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.2357%" y="485" width="0.1614%" height="15" fill="rgb(214,153,51)" fg:x="895" fg:w="2"/><text x="72.4857%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.3164%" y="469" width="0.0807%" height="15" fill="rgb(231,6,35)" fg:x="896" fg:w="1"/><text x="72.5664%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.3164%" y="453" width="0.0807%" height="15" fill="rgb(229,122,30)" fg:x="896" fg:w="1"/><text x="72.5664%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.3164%" y="437" width="0.0807%" height="15" fill="rgb(234,71,10)" fg:x="896" fg:w="1"/><text x="72.5664%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.3164%" y="421" width="0.0807%" height="15" fill="rgb(215,173,26)" fg:x="896" fg:w="1"/><text x="72.5664%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.3164%" y="405" width="0.0807%" height="15" fill="rgb(248,118,52)" fg:x="896" fg:w="1"/><text x="72.5664%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.3164%" y="389" width="0.0807%" height="15" fill="rgb(237,55,46)" fg:x="896" fg:w="1"/><text x="72.5664%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.3164%" y="373" width="0.0807%" height="15" fill="rgb(243,214,43)" fg:x="896" fg:w="1"/><text x="72.5664%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.3164%" y="357" width="0.0807%" height="15" fill="rgb(252,123,30)" fg:x="896" fg:w="1"/><text x="72.5664%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.3164%" y="341" width="0.0807%" height="15" fill="rgb(215,73,39)" fg:x="896" fg:w="1"/><text x="72.5664%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.3164%" y="325" width="0.0807%" height="15" fill="rgb(251,194,29)" fg:x="896" fg:w="1"/><text x="72.5664%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.3164%" y="309" width="0.0807%" height="15" fill="rgb(224,58,52)" fg:x="896" fg:w="1"/><text x="72.5664%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.3164%" y="293" width="0.0807%" height="15" fill="rgb(248,106,46)" fg:x="896" fg:w="1"/><text x="72.5664%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.3164%" y="277" width="0.0807%" height="15" fill="rgb(223,80,29)" fg:x="896" fg:w="1"/><text x="72.5664%" y="287.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (518 samples, 41.81%)</title><rect x="30.6699%" y="565" width="41.8079%" height="15" fill="rgb(243,137,9)" fg:x="380" fg:w="518"/><text x="30.9199%" y="575.50">&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::p..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (14 samples, 1.13%)</title><rect x="71.3479%" y="549" width="1.1299%" height="15" fill="rgb(235,121,28)" fg:x="884" fg:w="14"/><text x="71.5979%" y="559.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="72.2357%" y="533" width="0.2421%" height="15" fill="rgb(219,121,41)" fg:x="895" fg:w="3"/><text x="72.4857%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="72.2357%" y="517" width="0.2421%" height="15" fill="rgb(251,60,6)" fg:x="895" fg:w="3"/><text x="72.4857%" y="527.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="72.2357%" y="501" width="0.2421%" height="15" fill="rgb(208,12,30)" fg:x="895" fg:w="3"/><text x="72.4857%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.3971%" y="485" width="0.0807%" height="15" fill="rgb(207,176,36)" fg:x="897" fg:w="1"/><text x="72.6471%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.3971%" y="469" width="0.0807%" height="15" fill="rgb(211,188,29)" fg:x="897" fg:w="1"/><text x="72.6471%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="72.4778%" y="549" width="0.2421%" height="15" fill="rgb(220,184,37)" fg:x="898" fg:w="3"/><text x="72.7278%" y="559.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (3 samples, 0.24%)</title><rect x="72.4778%" y="533" width="0.2421%" height="15" fill="rgb(239,87,37)" fg:x="898" fg:w="3"/><text x="72.7278%" y="543.50"></text></g><g><title>plugins_core::library::parser::word (2 samples, 0.16%)</title><rect x="72.5585%" y="517" width="0.1614%" height="15" fill="rgb(232,113,44)" fg:x="899" fg:w="2"/><text x="72.8085%" y="527.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (2 samples, 0.16%)</title><rect x="72.5585%" y="501" width="0.1614%" height="15" fill="rgb(246,25,39)" fg:x="899" fg:w="2"/><text x="72.8085%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (523 samples, 42.21%)</title><rect x="30.6699%" y="581" width="42.2115%" height="15" fill="rgb(247,30,13)" fg:x="380" fg:w="523"/><text x="30.9199%" y="591.50">&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (5 samples, 0.40%)</title><rect x="72.4778%" y="565" width="0.4036%" height="15" fill="rgb(230,176,35)" fg:x="898" fg:w="5"/><text x="72.7278%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="72.7199%" y="549" width="0.1614%" height="15" fill="rgb(222,23,18)" fg:x="901" fg:w="2"/><text x="72.9699%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="72.7199%" y="533" width="0.1614%" height="15" fill="rgb(234,86,8)" fg:x="901" fg:w="2"/><text x="72.9699%" y="543.50"></text></g><g><title>plugins_core::library::parser::word (1 samples, 0.08%)</title><rect x="72.8006%" y="517" width="0.0807%" height="15" fill="rgb(206,218,47)" fg:x="902" fg:w="1"/><text x="73.0506%" y="527.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (1 samples, 0.08%)</title><rect x="72.8006%" y="501" width="0.0807%" height="15" fill="rgb(229,35,31)" fg:x="902" fg:w="1"/><text x="73.0506%" y="511.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="72.8006%" y="485" width="0.0807%" height="15" fill="rgb(242,81,7)" fg:x="902" fg:w="1"/><text x="73.0506%" y="495.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Evaluator&gt;::evaluate (2 samples, 0.16%)</title><rect x="72.8814%" y="581" width="0.1614%" height="15" fill="rgb(231,11,35)" fg:x="903" fg:w="2"/><text x="73.1314%" y="591.50"></text></g><g><title>&lt;plugins_core::moving::parser::GoActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="72.8814%" y="565" width="0.1614%" height="15" fill="rgb(219,218,17)" fg:x="903" fg:w="2"/><text x="73.1314%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="73.0428%" y="581" width="0.0807%" height="15" fill="rgb(221,83,32)" fg:x="905" fg:w="1"/><text x="73.2928%" y="591.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (529 samples, 42.70%)</title><rect x="30.5085%" y="661" width="42.6957%" height="15" fill="rgb(233,49,54)" fg:x="378" fg:w="529"/><text x="30.7585%" y="671.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (529 samples, 42.70%)</title><rect x="30.5085%" y="645" width="42.6957%" height="15" fill="rgb(206,18,51)" fg:x="378" fg:w="529"/><text x="30.7585%" y="655.50">engine::perform::StandardPerformer::evaluate_and_perform</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (528 samples, 42.62%)</title><rect x="30.5892%" y="629" width="42.6150%" height="15" fill="rgb(249,193,15)" fg:x="379" fg:w="528"/><text x="30.8392%" y="639.50">&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evalu..</text></g><g><title>core::iter::adapters::try_process (527 samples, 42.53%)</title><rect x="30.6699%" y="613" width="42.5343%" height="15" fill="rgb(245,186,19)" fg:x="380" fg:w="527"/><text x="30.9199%" y="623.50">core::iter::adapters::try_process</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (527 samples, 42.53%)</title><rect x="30.6699%" y="597" width="42.5343%" height="15" fill="rgb(230,4,24)" fg:x="380" fg:w="527"/><text x="30.9199%" y="607.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.1235%" y="581" width="0.0807%" height="15" fill="rgb(234,75,27)" fg:x="906" fg:w="1"/><text x="73.3735%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.2042%" y="645" width="0.0807%" height="15" fill="rgb(244,187,35)" fg:x="907" fg:w="1"/><text x="73.4542%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (909 samples, 73.37%)</title><rect x="0.0000%" y="709" width="73.3656%" height="15" fill="rgb(241,97,43)" fg:x="0" fg:w="909"/><text x="0.2500%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (909 samples, 73.37%)</title><rect x="0.0000%" y="693" width="73.3656%" height="15" fill="rgb(236,94,2)" fg:x="0" fg:w="909"/><text x="0.2500%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (909 samples, 73.37%)</title><rect x="0.0000%" y="677" width="73.3656%" height="15" fill="rgb(231,175,7)" fg:x="0" fg:w="909"/><text x="0.2500%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.16%)</title><rect x="73.2042%" y="661" width="0.1614%" height="15" fill="rgb(236,89,47)" fg:x="907" fg:w="2"/><text x="73.4542%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="73.2849%" y="645" width="0.0807%" height="15" fill="rgb(213,191,37)" fg:x="908" fg:w="1"/><text x="73.5349%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.2849%" y="629" width="0.0807%" height="15" fill="rgb(252,0,34)" fg:x="908" fg:w="1"/><text x="73.5349%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.2849%" y="613" width="0.0807%" height="15" fill="rgb(208,145,44)" fg:x="908" fg:w="1"/><text x="73.5349%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="73.3656%" y="533" width="0.1614%" height="15" fill="rgb(227,95,50)" fg:x="909" fg:w="2"/><text x="73.6156%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="73.3656%" y="629" width="0.3228%" height="15" fill="rgb(222,136,24)" fg:x="909" fg:w="4"/><text x="73.6156%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (4 samples, 0.32%)</title><rect x="73.3656%" y="613" width="0.3228%" height="15" fill="rgb(218,105,10)" fg:x="909" fg:w="4"/><text x="73.6156%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="73.3656%" y="597" width="0.3228%" height="15" fill="rgb(216,65,28)" fg:x="909" fg:w="4"/><text x="73.6156%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="73.3656%" y="581" width="0.3228%" height="15" fill="rgb(229,6,28)" fg:x="909" fg:w="4"/><text x="73.6156%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.3656%" y="565" width="0.3228%" height="15" fill="rgb(222,160,42)" fg:x="909" fg:w="4"/><text x="73.6156%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="73.3656%" y="549" width="0.3228%" height="15" fill="rgb(235,83,49)" fg:x="909" fg:w="4"/><text x="73.6156%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="73.5270%" y="533" width="0.1614%" height="15" fill="rgb(236,86,36)" fg:x="911" fg:w="2"/><text x="73.7770%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="73.5270%" y="517" width="0.1614%" height="15" fill="rgb(236,19,41)" fg:x="911" fg:w="2"/><text x="73.7770%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="73.5270%" y="501" width="0.1614%" height="15" fill="rgb(217,71,31)" fg:x="911" fg:w="2"/><text x="73.7770%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="73.5270%" y="485" width="0.1614%" height="15" fill="rgb(236,209,25)" fg:x="911" fg:w="2"/><text x="73.7770%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="73.3656%" y="661" width="0.4036%" height="15" fill="rgb(247,104,21)" fg:x="909" fg:w="5"/><text x="73.6156%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (5 samples, 0.40%)</title><rect x="73.3656%" y="645" width="0.4036%" height="15" fill="rgb(243,80,38)" fg:x="909" fg:w="5"/><text x="73.6156%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.6885%" y="629" width="0.0807%" height="15" fill="rgb(232,109,38)" fg:x="913" fg:w="1"/><text x="73.9385%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="73.7692%" y="517" width="0.0807%" height="15" fill="rgb(212,177,53)" fg:x="914" fg:w="1"/><text x="74.0192%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.7692%" y="501" width="0.0807%" height="15" fill="rgb(227,30,34)" fg:x="914" fg:w="1"/><text x="74.0192%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.9306%" y="485" width="0.0807%" height="15" fill="rgb(205,175,25)" fg:x="916" fg:w="1"/><text x="74.1806%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.32%)</title><rect x="73.7692%" y="581" width="0.3228%" height="15" fill="rgb(249,39,54)" fg:x="914" fg:w="4"/><text x="74.0192%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="73.7692%" y="565" width="0.3228%" height="15" fill="rgb(215,54,37)" fg:x="914" fg:w="4"/><text x="74.0192%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="73.7692%" y="549" width="0.3228%" height="15" fill="rgb(205,60,46)" fg:x="914" fg:w="4"/><text x="74.0192%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="73.7692%" y="533" width="0.3228%" height="15" fill="rgb(238,89,29)" fg:x="914" fg:w="4"/><text x="74.0192%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="73.8499%" y="517" width="0.2421%" height="15" fill="rgb(212,48,10)" fg:x="915" fg:w="3"/><text x="74.0999%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.9306%" y="501" width="0.1614%" height="15" fill="rgb(237,186,28)" fg:x="916" fg:w="2"/><text x="74.1806%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.0113%" y="485" width="0.0807%" height="15" fill="rgb(237,204,4)" fg:x="917" fg:w="1"/><text x="74.2613%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.0113%" y="469" width="0.0807%" height="15" fill="rgb(237,15,47)" fg:x="917" fg:w="1"/><text x="74.2613%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.0113%" y="453" width="0.0807%" height="15" fill="rgb(244,110,25)" fg:x="917" fg:w="1"/><text x="74.2613%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.0113%" y="437" width="0.0807%" height="15" fill="rgb(241,12,16)" fg:x="917" fg:w="1"/><text x="74.2613%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.0113%" y="421" width="0.0807%" height="15" fill="rgb(235,25,9)" fg:x="917" fg:w="1"/><text x="74.2613%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0920%" y="533" width="0.0807%" height="15" fill="rgb(245,159,19)" fg:x="918" fg:w="1"/><text x="74.3420%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (6 samples, 0.48%)</title><rect x="73.7692%" y="629" width="0.4843%" height="15" fill="rgb(236,63,32)" fg:x="914" fg:w="6"/><text x="74.0192%" y="639.50"></text></g><g><title>engine::internal::Entities::prepare_entity (6 samples, 0.48%)</title><rect x="73.7692%" y="613" width="0.4843%" height="15" fill="rgb(235,32,52)" fg:x="914" fg:w="6"/><text x="74.0192%" y="623.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.48%)</title><rect x="73.7692%" y="597" width="0.4843%" height="15" fill="rgb(209,176,21)" fg:x="914" fg:w="6"/><text x="74.0192%" y="607.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="74.0920%" y="581" width="0.1614%" height="15" fill="rgb(205,90,42)" fg:x="918" fg:w="2"/><text x="74.3420%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.0920%" y="565" width="0.1614%" height="15" fill="rgb(213,132,16)" fg:x="918" fg:w="2"/><text x="74.3420%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.0920%" y="549" width="0.1614%" height="15" fill="rgb(232,11,22)" fg:x="918" fg:w="2"/><text x="74.3420%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.1727%" y="533" width="0.0807%" height="15" fill="rgb(248,167,41)" fg:x="919" fg:w="1"/><text x="74.4227%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.1727%" y="517" width="0.0807%" height="15" fill="rgb(209,127,6)" fg:x="919" fg:w="1"/><text x="74.4227%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.1727%" y="501" width="0.0807%" height="15" fill="rgb(246,210,34)" fg:x="919" fg:w="1"/><text x="74.4227%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.1727%" y="485" width="0.0807%" height="15" fill="rgb(238,165,13)" fg:x="919" fg:w="1"/><text x="74.4227%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.1727%" y="469" width="0.0807%" height="15" fill="rgb(233,98,15)" fg:x="919" fg:w="1"/><text x="74.4227%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.1727%" y="453" width="0.0807%" height="15" fill="rgb(215,215,51)" fg:x="919" fg:w="1"/><text x="74.4227%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.1727%" y="437" width="0.0807%" height="15" fill="rgb(217,161,25)" fg:x="919" fg:w="1"/><text x="74.4227%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="74.1727%" y="421" width="0.0807%" height="15" fill="rgb(217,167,48)" fg:x="919" fg:w="1"/><text x="74.4227%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="74.2534%" y="629" width="0.0807%" height="15" fill="rgb(205,163,34)" fg:x="920" fg:w="1"/><text x="74.5034%" y="639.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="74.3341%" y="629" width="0.0807%" height="15" fill="rgb(241,197,31)" fg:x="921" fg:w="1"/><text x="74.5841%" y="639.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="74.4149%" y="629" width="0.0807%" height="15" fill="rgb(225,123,11)" fg:x="922" fg:w="1"/><text x="74.6649%" y="639.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="74.4956%" y="565" width="0.0807%" height="15" fill="rgb(217,4,20)" fg:x="923" fg:w="1"/><text x="74.7456%" y="575.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (13 samples, 1.05%)</title><rect x="73.7692%" y="661" width="1.0492%" height="15" fill="rgb(215,55,9)" fg:x="914" fg:w="13"/><text x="74.0192%" y="671.50"></text></g><g><title>engine::session::Session::new (13 samples, 1.05%)</title><rect x="73.7692%" y="645" width="1.0492%" height="15" fill="rgb(218,165,5)" fg:x="914" fg:w="13"/><text x="74.0192%" y="655.50"></text></g><g><title>engine::session::Session::initialize (4 samples, 0.32%)</title><rect x="74.4956%" y="629" width="0.3228%" height="15" fill="rgb(222,175,15)" fg:x="923" fg:w="4"/><text x="74.7456%" y="639.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (4 samples, 0.32%)</title><rect x="74.4956%" y="613" width="0.3228%" height="15" fill="rgb(223,85,34)" fg:x="923" fg:w="4"/><text x="74.7456%" y="623.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (4 samples, 0.32%)</title><rect x="74.4956%" y="597" width="0.3228%" height="15" fill="rgb(234,228,29)" fg:x="923" fg:w="4"/><text x="74.7456%" y="607.50"></text></g><g><title>libloading::os::unix::Library::open (4 samples, 0.32%)</title><rect x="74.4956%" y="581" width="0.3228%" height="15" fill="rgb(239,7,28)" fg:x="923" fg:w="4"/><text x="74.7456%" y="591.50"></text></g><g><title>dlopen (3 samples, 0.24%)</title><rect x="74.5763%" y="565" width="0.2421%" height="15" fill="rgb(252,222,53)" fg:x="924" fg:w="3"/><text x="74.8263%" y="575.50"></text></g><g><title>_dl_catch_error (3 samples, 0.24%)</title><rect x="74.5763%" y="549" width="0.2421%" height="15" fill="rgb(232,146,44)" fg:x="924" fg:w="3"/><text x="74.8263%" y="559.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="74.5763%" y="533" width="0.2421%" height="15" fill="rgb(243,223,53)" fg:x="924" fg:w="3"/><text x="74.8263%" y="543.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="74.5763%" y="517" width="0.2421%" height="15" fill="rgb(219,128,25)" fg:x="924" fg:w="3"/><text x="74.8263%" y="527.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="74.5763%" y="501" width="0.2421%" height="15" fill="rgb(223,56,32)" fg:x="924" fg:w="3"/><text x="74.8263%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="74.8184%" y="613" width="0.0807%" height="15" fill="rgb(237,41,3)" fg:x="927" fg:w="1"/><text x="75.0684%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8184%" y="597" width="0.0807%" height="15" fill="rgb(235,138,9)" fg:x="927" fg:w="1"/><text x="75.0684%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8184%" y="581" width="0.0807%" height="15" fill="rgb(214,131,10)" fg:x="927" fg:w="1"/><text x="75.0684%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.8184%" y="565" width="0.0807%" height="15" fill="rgb(229,89,7)" fg:x="927" fg:w="1"/><text x="75.0684%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.8184%" y="549" width="0.0807%" height="15" fill="rgb(240,24,42)" fg:x="927" fg:w="1"/><text x="75.0684%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.8184%" y="533" width="0.0807%" height="15" fill="rgb(243,188,54)" fg:x="927" fg:w="1"/><text x="75.0684%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.8184%" y="517" width="0.0807%" height="15" fill="rgb(246,92,22)" fg:x="927" fg:w="1"/><text x="75.0684%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.8184%" y="501" width="0.0807%" height="15" fill="rgb(211,176,51)" fg:x="927" fg:w="1"/><text x="75.0684%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.8184%" y="485" width="0.0807%" height="15" fill="rgb(246,207,34)" fg:x="927" fg:w="1"/><text x="75.0684%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.8184%" y="469" width="0.0807%" height="15" fill="rgb(239,95,2)" fg:x="927" fg:w="1"/><text x="75.0684%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.8184%" y="453" width="0.0807%" height="15" fill="rgb(211,124,25)" fg:x="927" fg:w="1"/><text x="75.0684%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.8184%" y="437" width="0.0807%" height="15" fill="rgb(231,221,19)" fg:x="927" fg:w="1"/><text x="75.0684%" y="447.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="74.8184%" y="421" width="0.0807%" height="15" fill="rgb(239,183,19)" fg:x="927" fg:w="1"/><text x="75.0684%" y="431.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="74.8991%" y="613" width="0.0807%" height="15" fill="rgb(221,130,29)" fg:x="928" fg:w="1"/><text x="75.1491%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="74.8991%" y="597" width="0.0807%" height="15" fill="rgb(206,130,36)" fg:x="928" fg:w="1"/><text x="75.1491%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="74.8991%" y="581" width="0.0807%" height="15" fill="rgb(215,70,19)" fg:x="928" fg:w="1"/><text x="75.1491%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.8991%" y="565" width="0.0807%" height="15" fill="rgb(244,16,43)" fg:x="928" fg:w="1"/><text x="75.1491%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="74.9798%" y="565" width="0.0807%" height="15" fill="rgb(222,115,32)" fg:x="929" fg:w="1"/><text x="75.2298%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.9798%" y="549" width="0.0807%" height="15" fill="rgb(247,48,25)" fg:x="929" fg:w="1"/><text x="75.2298%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="75.1412%" y="501" width="0.0807%" height="15" fill="rgb(226,180,51)" fg:x="931" fg:w="1"/><text x="75.3912%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.1412%" y="485" width="0.0807%" height="15" fill="rgb(217,142,42)" fg:x="931" fg:w="1"/><text x="75.3912%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="75.1412%" y="533" width="0.1614%" height="15" fill="rgb(220,178,3)" fg:x="931" fg:w="2"/><text x="75.3912%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="75.1412%" y="517" width="0.1614%" height="15" fill="rgb(217,221,4)" fg:x="931" fg:w="2"/><text x="75.3912%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.2220%" y="501" width="0.0807%" height="15" fill="rgb(237,63,43)" fg:x="932" fg:w="1"/><text x="75.4720%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.2220%" y="485" width="0.0807%" height="15" fill="rgb(220,57,8)" fg:x="932" fg:w="1"/><text x="75.4720%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.2220%" y="469" width="0.0807%" height="15" fill="rgb(254,186,27)" fg:x="932" fg:w="1"/><text x="75.4720%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="75.3027%" y="533" width="0.1614%" height="15" fill="rgb(251,57,28)" fg:x="933" fg:w="2"/><text x="75.5527%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="75.3027%" y="517" width="0.1614%" height="15" fill="rgb(215,228,0)" fg:x="933" fg:w="2"/><text x="75.5527%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.3834%" y="501" width="0.0807%" height="15" fill="rgb(237,218,39)" fg:x="934" fg:w="1"/><text x="75.6334%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="75.4641%" y="517" width="0.0807%" height="15" fill="rgb(207,2,54)" fg:x="935" fg:w="1"/><text x="75.7141%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.5448%" y="517" width="0.0807%" height="15" fill="rgb(232,76,50)" fg:x="936" fg:w="1"/><text x="75.7948%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="75.4641%" y="533" width="0.3228%" height="15" fill="rgb(211,85,31)" fg:x="935" fg:w="4"/><text x="75.7141%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="75.6255%" y="517" width="0.1614%" height="15" fill="rgb(223,210,27)" fg:x="937" fg:w="2"/><text x="75.8755%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.7062%" y="501" width="0.0807%" height="15" fill="rgb(254,36,8)" fg:x="938" fg:w="1"/><text x="75.9562%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.7062%" y="485" width="0.0807%" height="15" fill="rgb(213,4,25)" fg:x="938" fg:w="1"/><text x="75.9562%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="75.1412%" y="549" width="0.8071%" height="15" fill="rgb(224,2,39)" fg:x="931" fg:w="10"/><text x="75.3912%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="75.7869%" y="533" width="0.1614%" height="15" fill="rgb(208,8,39)" fg:x="939" fg:w="2"/><text x="76.0369%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.8676%" y="517" width="0.0807%" height="15" fill="rgb(216,226,3)" fg:x="940" fg:w="1"/><text x="76.1176%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.05%)</title><rect x="74.9798%" y="581" width="1.0492%" height="15" fill="rgb(249,139,31)" fg:x="929" fg:w="13"/><text x="75.2298%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="75.0605%" y="565" width="0.9685%" height="15" fill="rgb(242,170,35)" fg:x="930" fg:w="12"/><text x="75.3105%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.9483%" y="549" width="0.0807%" height="15" fill="rgb(238,14,9)" fg:x="941" fg:w="1"/><text x="76.1983%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.9483%" y="533" width="0.0807%" height="15" fill="rgb(251,81,46)" fg:x="941" fg:w="1"/><text x="76.1983%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.9483%" y="517" width="0.0807%" height="15" fill="rgb(230,23,4)" fg:x="941" fg:w="1"/><text x="76.1983%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.0291%" y="549" width="0.0807%" height="15" fill="rgb(211,85,25)" fg:x="942" fg:w="1"/><text x="76.2791%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.0291%" y="533" width="0.0807%" height="15" fill="rgb(252,23,31)" fg:x="942" fg:w="1"/><text x="76.2791%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.1098%" y="517" width="0.0807%" height="15" fill="rgb(234,163,38)" fg:x="943" fg:w="1"/><text x="76.3598%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="76.0291%" y="581" width="0.2421%" height="15" fill="rgb(210,190,50)" fg:x="942" fg:w="3"/><text x="76.2791%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="76.0291%" y="565" width="0.2421%" height="15" fill="rgb(228,158,3)" fg:x="942" fg:w="3"/><text x="76.2791%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.1098%" y="549" width="0.1614%" height="15" fill="rgb(216,130,0)" fg:x="943" fg:w="2"/><text x="76.3598%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.1098%" y="533" width="0.1614%" height="15" fill="rgb(224,184,10)" fg:x="943" fg:w="2"/><text x="76.3598%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.1905%" y="517" width="0.0807%" height="15" fill="rgb(214,202,18)" fg:x="944" fg:w="1"/><text x="76.4405%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.1905%" y="501" width="0.0807%" height="15" fill="rgb(213,229,54)" fg:x="944" fg:w="1"/><text x="76.4405%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3519%" y="533" width="0.0807%" height="15" fill="rgb(246,120,0)" fg:x="946" fg:w="1"/><text x="76.6019%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="76.4326%" y="533" width="0.0807%" height="15" fill="rgb(237,6,15)" fg:x="947" fg:w="1"/><text x="76.6826%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.4326%" y="517" width="0.0807%" height="15" fill="rgb(252,156,15)" fg:x="947" fg:w="1"/><text x="76.6826%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.4326%" y="501" width="0.0807%" height="15" fill="rgb(249,78,18)" fg:x="947" fg:w="1"/><text x="76.6826%" y="511.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (22 samples, 1.78%)</title><rect x="74.9798%" y="613" width="1.7756%" height="15" fill="rgb(230,223,44)" fg:x="929" fg:w="22"/><text x="75.2298%" y="623.50">e..</text></g><g><title>engine::session::Session::check_for_changes (22 samples, 1.78%)</title><rect x="74.9798%" y="597" width="1.7756%" height="15" fill="rgb(230,222,32)" fg:x="929" fg:w="22"/><text x="75.2298%" y="607.50">e..</text></g><g><title>kernel::compare::any_entity_changes (6 samples, 0.48%)</title><rect x="76.2712%" y="581" width="0.4843%" height="15" fill="rgb(247,54,6)" fg:x="945" fg:w="6"/><text x="76.5212%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (6 samples, 0.48%)</title><rect x="76.2712%" y="565" width="0.4843%" height="15" fill="rgb(247,115,45)" fg:x="945" fg:w="6"/><text x="76.5212%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="76.2712%" y="549" width="0.4843%" height="15" fill="rgb(213,203,37)" fg:x="945" fg:w="6"/><text x="76.5212%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="76.5133%" y="533" width="0.2421%" height="15" fill="rgb(248,188,18)" fg:x="948" fg:w="3"/><text x="76.7633%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (3 samples, 0.24%)</title><rect x="76.5133%" y="517" width="0.2421%" height="15" fill="rgb(206,80,8)" fg:x="948" fg:w="3"/><text x="76.7633%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="76.5133%" y="501" width="0.2421%" height="15" fill="rgb(245,217,31)" fg:x="948" fg:w="3"/><text x="76.7633%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.5940%" y="485" width="0.1614%" height="15" fill="rgb(220,193,15)" fg:x="949" fg:w="2"/><text x="76.8440%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.6747%" y="469" width="0.0807%" height="15" fill="rgb(226,7,19)" fg:x="950" fg:w="1"/><text x="76.9247%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.6747%" y="453" width="0.0807%" height="15" fill="rgb(222,145,31)" fg:x="950" fg:w="1"/><text x="76.9247%" y="463.50"></text></g><g><title>engine::session::Session::flush (25 samples, 2.02%)</title><rect x="74.8184%" y="645" width="2.0178%" height="15" fill="rgb(241,193,36)" fg:x="927" fg:w="25"/><text x="75.0684%" y="655.50">e..</text></g><g><title>engine::session::Session::save_entity_changes (25 samples, 2.02%)</title><rect x="74.8184%" y="629" width="2.0178%" height="15" fill="rgb(225,123,33)" fg:x="927" fg:w="25"/><text x="75.0684%" y="639.50">e..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="76.7554%" y="613" width="0.0807%" height="15" fill="rgb(246,136,38)" fg:x="951" fg:w="1"/><text x="77.0054%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="76.7554%" y="597" width="0.0807%" height="15" fill="rgb(243,56,24)" fg:x="951" fg:w="1"/><text x="77.0054%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="76.7554%" y="581" width="0.0807%" height="15" fill="rgb(215,147,2)" fg:x="951" fg:w="1"/><text x="77.0054%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="76.7554%" y="565" width="0.0807%" height="15" fill="rgb(209,155,27)" fg:x="951" fg:w="1"/><text x="77.0054%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="76.7554%" y="549" width="0.0807%" height="15" fill="rgb(222,177,11)" fg:x="951" fg:w="1"/><text x="77.0054%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.7554%" y="533" width="0.0807%" height="15" fill="rgb(212,227,15)" fg:x="951" fg:w="1"/><text x="77.0054%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="76.7554%" y="517" width="0.0807%" height="15" fill="rgb(214,138,20)" fg:x="951" fg:w="1"/><text x="77.0054%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="76.7554%" y="501" width="0.0807%" height="15" fill="rgb(221,170,31)" fg:x="951" fg:w="1"/><text x="77.0054%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="76.7554%" y="485" width="0.0807%" height="15" fill="rgb(253,207,5)" fg:x="951" fg:w="1"/><text x="77.0054%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.7554%" y="469" width="0.0807%" height="15" fill="rgb(212,64,37)" fg:x="951" fg:w="1"/><text x="77.0054%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.7554%" y="453" width="0.0807%" height="15" fill="rgb(208,113,51)" fg:x="951" fg:w="1"/><text x="77.0054%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.7554%" y="437" width="0.0807%" height="15" fill="rgb(237,15,5)" fg:x="951" fg:w="1"/><text x="77.0054%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="76.7554%" y="421" width="0.0807%" height="15" fill="rgb(238,33,18)" fg:x="951" fg:w="1"/><text x="77.0054%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="76.7554%" y="405" width="0.0807%" height="15" fill="rgb(253,206,50)" fg:x="951" fg:w="1"/><text x="77.0054%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="76.7554%" y="389" width="0.0807%" height="15" fill="rgb(242,158,43)" fg:x="951" fg:w="1"/><text x="77.0054%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="76.7554%" y="373" width="0.0807%" height="15" fill="rgb(213,125,27)" fg:x="951" fg:w="1"/><text x="77.0054%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="76.7554%" y="357" width="0.0807%" height="15" fill="rgb(233,161,31)" fg:x="951" fg:w="1"/><text x="77.0054%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="76.8362%" y="629" width="0.0807%" height="15" fill="rgb(218,135,6)" fg:x="952" fg:w="1"/><text x="77.0862%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="76.8362%" y="613" width="0.0807%" height="15" fill="rgb(222,73,53)" fg:x="952" fg:w="1"/><text x="77.0862%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.8362%" y="597" width="0.0807%" height="15" fill="rgb(229,66,53)" fg:x="952" fg:w="1"/><text x="77.0862%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.8362%" y="581" width="0.0807%" height="15" fill="rgb(208,128,19)" fg:x="952" fg:w="1"/><text x="77.0862%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (2 samples, 0.16%)</title><rect x="76.8362%" y="645" width="0.1614%" height="15" fill="rgb(235,70,27)" fg:x="952" fg:w="2"/><text x="77.0862%" y="655.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="76.9169%" y="629" width="0.0807%" height="15" fill="rgb(241,130,30)" fg:x="953" fg:w="1"/><text x="77.1669%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="76.9169%" y="613" width="0.0807%" height="15" fill="rgb(222,57,48)" fg:x="953" fg:w="1"/><text x="77.1669%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9169%" y="597" width="0.0807%" height="15" fill="rgb(225,204,29)" fg:x="953" fg:w="1"/><text x="77.1669%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9169%" y="581" width="0.0807%" height="15" fill="rgb(240,196,35)" fg:x="953" fg:w="1"/><text x="77.1669%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9169%" y="565" width="0.0807%" height="15" fill="rgb(215,150,16)" fg:x="953" fg:w="1"/><text x="77.1669%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.9169%" y="549" width="0.0807%" height="15" fill="rgb(209,170,13)" fg:x="953" fg:w="1"/><text x="77.1669%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.9169%" y="533" width="0.0807%" height="15" fill="rgb(235,75,31)" fg:x="953" fg:w="1"/><text x="77.1669%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.9169%" y="517" width="0.0807%" height="15" fill="rgb(252,1,47)" fg:x="953" fg:w="1"/><text x="77.1669%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.9169%" y="501" width="0.0807%" height="15" fill="rgb(241,2,36)" fg:x="953" fg:w="1"/><text x="77.1669%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.9169%" y="485" width="0.0807%" height="15" fill="rgb(236,191,4)" fg:x="953" fg:w="1"/><text x="77.1669%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.9169%" y="469" width="0.0807%" height="15" fill="rgb(212,65,35)" fg:x="953" fg:w="1"/><text x="77.1669%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.9169%" y="453" width="0.0807%" height="15" fill="rgb(209,49,33)" fg:x="953" fg:w="1"/><text x="77.1669%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.9169%" y="437" width="0.0807%" height="15" fill="rgb(208,36,46)" fg:x="953" fg:w="1"/><text x="77.1669%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.9169%" y="421" width="0.0807%" height="15" fill="rgb(210,125,2)" fg:x="953" fg:w="1"/><text x="77.1669%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9169%" y="405" width="0.0807%" height="15" fill="rgb(225,62,6)" fg:x="953" fg:w="1"/><text x="77.1669%" y="415.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="76.9976%" y="645" width="0.0807%" height="15" fill="rgb(210,54,27)" fg:x="954" fg:w="1"/><text x="77.2476%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="76.9976%" y="629" width="0.0807%" height="15" fill="rgb(249,189,52)" fg:x="954" fg:w="1"/><text x="77.2476%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="76.9976%" y="613" width="0.0807%" height="15" fill="rgb(225,134,40)" fg:x="954" fg:w="1"/><text x="77.2476%" y="623.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="76.9976%" y="597" width="0.0807%" height="15" fill="rgb(206,13,37)" fg:x="954" fg:w="1"/><text x="77.2476%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9976%" y="581" width="0.0807%" height="15" fill="rgb(232,114,28)" fg:x="954" fg:w="1"/><text x="77.2476%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9976%" y="565" width="0.0807%" height="15" fill="rgb(253,215,8)" fg:x="954" fg:w="1"/><text x="77.2476%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.9976%" y="549" width="0.0807%" height="15" fill="rgb(254,64,19)" fg:x="954" fg:w="1"/><text x="77.2476%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.9976%" y="533" width="0.0807%" height="15" fill="rgb(242,18,46)" fg:x="954" fg:w="1"/><text x="77.2476%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.9976%" y="517" width="0.0807%" height="15" fill="rgb(239,192,30)" fg:x="954" fg:w="1"/><text x="77.2476%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.9976%" y="501" width="0.0807%" height="15" fill="rgb(232,73,14)" fg:x="954" fg:w="1"/><text x="77.2476%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.9976%" y="485" width="0.0807%" height="15" fill="rgb(225,51,9)" fg:x="954" fg:w="1"/><text x="77.2476%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.9976%" y="469" width="0.0807%" height="15" fill="rgb(242,217,54)" fg:x="954" fg:w="1"/><text x="77.2476%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.9976%" y="453" width="0.0807%" height="15" fill="rgb(216,93,3)" fg:x="954" fg:w="1"/><text x="77.2476%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.9976%" y="437" width="0.0807%" height="15" fill="rgb(230,119,33)" fg:x="954" fg:w="1"/><text x="77.2476%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.9976%" y="421" width="0.0807%" height="15" fill="rgb(238,170,27)" fg:x="954" fg:w="1"/><text x="77.2476%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9976%" y="405" width="0.0807%" height="15" fill="rgb(229,8,2)" fg:x="954" fg:w="1"/><text x="77.2476%" y="415.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="77.0783%" y="645" width="0.0807%" height="15" fill="rgb(205,214,42)" fg:x="955" fg:w="1"/><text x="77.3283%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="77.0783%" y="629" width="0.0807%" height="15" fill="rgb(245,113,1)" fg:x="955" fg:w="1"/><text x="77.3283%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="77.0783%" y="613" width="0.0807%" height="15" fill="rgb(252,50,2)" fg:x="955" fg:w="1"/><text x="77.3283%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.0783%" y="597" width="0.0807%" height="15" fill="rgb(225,122,24)" fg:x="955" fg:w="1"/><text x="77.3283%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="77.1590%" y="565" width="0.0807%" height="15" fill="rgb(234,129,31)" fg:x="956" fg:w="1"/><text x="77.4090%" y="575.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="77.1590%" y="549" width="0.0807%" height="15" fill="rgb(219,177,4)" fg:x="956" fg:w="1"/><text x="77.4090%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="77.1590%" y="533" width="0.0807%" height="15" fill="rgb(225,142,27)" fg:x="956" fg:w="1"/><text x="77.4090%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.1590%" y="517" width="0.0807%" height="15" fill="rgb(205,107,51)" fg:x="956" fg:w="1"/><text x="77.4090%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="77.1590%" y="629" width="0.1614%" height="15" fill="rgb(236,223,15)" fg:x="956" fg:w="2"/><text x="77.4090%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="77.1590%" y="613" width="0.1614%" height="15" fill="rgb(235,133,11)" fg:x="956" fg:w="2"/><text x="77.4090%" y="623.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="77.1590%" y="597" width="0.1614%" height="15" fill="rgb(247,172,13)" fg:x="956" fg:w="2"/><text x="77.4090%" y="607.50"></text></g><g><title>plugins_core::build::Build::leads_to (2 samples, 0.16%)</title><rect x="77.1590%" y="581" width="0.1614%" height="15" fill="rgb(233,191,41)" fg:x="956" fg:w="2"/><text x="77.4090%" y="591.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="77.2397%" y="565" width="0.0807%" height="15" fill="rgb(250,65,16)" fg:x="957" fg:w="1"/><text x="77.4897%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="77.2397%" y="549" width="0.0807%" height="15" fill="rgb(206,10,27)" fg:x="957" fg:w="1"/><text x="77.4897%" y="559.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="77.2397%" y="533" width="0.0807%" height="15" fill="rgb(212,96,22)" fg:x="957" fg:w="1"/><text x="77.4897%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.2397%" y="517" width="0.0807%" height="15" fill="rgb(206,50,0)" fg:x="957" fg:w="1"/><text x="77.4897%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.2397%" y="501" width="0.0807%" height="15" fill="rgb(249,105,52)" fg:x="957" fg:w="1"/><text x="77.4897%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.2397%" y="485" width="0.0807%" height="15" fill="rgb(216,93,51)" fg:x="957" fg:w="1"/><text x="77.4897%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.2397%" y="469" width="0.0807%" height="15" fill="rgb(217,172,13)" fg:x="957" fg:w="1"/><text x="77.4897%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.2397%" y="453" width="0.0807%" height="15" fill="rgb(235,199,38)" fg:x="957" fg:w="1"/><text x="77.4897%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.2397%" y="437" width="0.0807%" height="15" fill="rgb(221,97,33)" fg:x="957" fg:w="1"/><text x="77.4897%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.2397%" y="421" width="0.0807%" height="15" fill="rgb(205,156,50)" fg:x="957" fg:w="1"/><text x="77.4897%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.2397%" y="405" width="0.0807%" height="15" fill="rgb(215,142,19)" fg:x="957" fg:w="1"/><text x="77.4897%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.2397%" y="389" width="0.0807%" height="15" fill="rgb(232,170,7)" fg:x="957" fg:w="1"/><text x="77.4897%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.2397%" y="373" width="0.0807%" height="15" fill="rgb(223,50,17)" fg:x="957" fg:w="1"/><text x="77.4897%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.2397%" y="357" width="0.0807%" height="15" fill="rgb(230,103,46)" fg:x="957" fg:w="1"/><text x="77.4897%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.2397%" y="341" width="0.0807%" height="15" fill="rgb(254,30,34)" fg:x="957" fg:w="1"/><text x="77.4897%" y="351.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="77.3204%" y="597" width="0.0807%" height="15" fill="rgb(235,198,1)" fg:x="958" fg:w="1"/><text x="77.5704%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="77.3204%" y="581" width="0.0807%" height="15" fill="rgb(217,105,47)" fg:x="958" fg:w="1"/><text x="77.5704%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::OpenedScopeMut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.3204%" y="565" width="0.0807%" height="15" fill="rgb(231,18,12)" fg:x="958" fg:w="1"/><text x="77.5704%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="77.4818%" y="533" width="0.1614%" height="15" fill="rgb(218,196,1)" fg:x="960" fg:w="2"/><text x="77.7318%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.5626%" y="517" width="0.0807%" height="15" fill="rgb(210,32,3)" fg:x="961" fg:w="1"/><text x="77.8126%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.5626%" y="501" width="0.0807%" height="15" fill="rgb(227,178,30)" fg:x="961" fg:w="1"/><text x="77.8126%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.5626%" y="485" width="0.0807%" height="15" fill="rgb(231,140,27)" fg:x="961" fg:w="1"/><text x="77.8126%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="77.4818%" y="549" width="0.2421%" height="15" fill="rgb(206,66,35)" fg:x="960" fg:w="3"/><text x="77.7318%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.6433%" y="533" width="0.0807%" height="15" fill="rgb(212,34,2)" fg:x="962" fg:w="1"/><text x="77.8933%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.7240%" y="517" width="0.0807%" height="15" fill="rgb(207,201,33)" fg:x="963" fg:w="1"/><text x="77.9740%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.7240%" y="501" width="0.0807%" height="15" fill="rgb(221,135,32)" fg:x="963" fg:w="1"/><text x="77.9740%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.7240%" y="485" width="0.0807%" height="15" fill="rgb(206,77,31)" fg:x="963" fg:w="1"/><text x="77.9740%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.7240%" y="469" width="0.0807%" height="15" fill="rgb(252,198,50)" fg:x="963" fg:w="1"/><text x="77.9740%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="77.8047%" y="517" width="0.0807%" height="15" fill="rgb(206,79,27)" fg:x="964" fg:w="1"/><text x="78.0547%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="77.8047%" y="501" width="0.0807%" height="15" fill="rgb(228,108,9)" fg:x="964" fg:w="1"/><text x="78.0547%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.8047%" y="485" width="0.0807%" height="15" fill="rgb(213,9,39)" fg:x="964" fg:w="1"/><text x="78.0547%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.8047%" y="469" width="0.0807%" height="15" fill="rgb(252,51,13)" fg:x="964" fg:w="1"/><text x="78.0547%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.8047%" y="453" width="0.0807%" height="15" fill="rgb(218,202,39)" fg:x="964" fg:w="1"/><text x="78.0547%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.8047%" y="437" width="0.0807%" height="15" fill="rgb(214,122,21)" fg:x="964" fg:w="1"/><text x="78.0547%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="77.7240%" y="533" width="0.2421%" height="15" fill="rgb(217,205,48)" fg:x="963" fg:w="3"/><text x="77.9740%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.8854%" y="517" width="0.0807%" height="15" fill="rgb(230,216,13)" fg:x="965" fg:w="1"/><text x="78.1354%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.8854%" y="501" width="0.0807%" height="15" fill="rgb(249,118,4)" fg:x="965" fg:w="1"/><text x="78.1354%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (8 samples, 0.65%)</title><rect x="77.4818%" y="565" width="0.6457%" height="15" fill="rgb(212,207,40)" fg:x="960" fg:w="8"/><text x="77.7318%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="77.7240%" y="549" width="0.4036%" height="15" fill="rgb(217,156,26)" fg:x="963" fg:w="5"/><text x="77.9740%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.9661%" y="533" width="0.1614%" height="15" fill="rgb(226,86,34)" fg:x="966" fg:w="2"/><text x="78.2161%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.9661%" y="517" width="0.1614%" height="15" fill="rgb(217,111,30)" fg:x="966" fg:w="2"/><text x="78.2161%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.0468%" y="501" width="0.0807%" height="15" fill="rgb(228,64,18)" fg:x="967" fg:w="1"/><text x="78.2968%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.0468%" y="485" width="0.0807%" height="15" fill="rgb(254,217,48)" fg:x="967" fg:w="1"/><text x="78.2968%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.0468%" y="469" width="0.0807%" height="15" fill="rgb(226,156,48)" fg:x="967" fg:w="1"/><text x="78.2968%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.0468%" y="453" width="0.0807%" height="15" fill="rgb(236,168,20)" fg:x="967" fg:w="1"/><text x="78.2968%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.1275%" y="517" width="0.0807%" height="15" fill="rgb(239,210,33)" fg:x="968" fg:w="1"/><text x="78.3775%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="78.2082%" y="501" width="0.1614%" height="15" fill="rgb(242,85,17)" fg:x="969" fg:w="2"/><text x="78.4582%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="78.3697%" y="485" width="0.0807%" height="15" fill="rgb(221,196,15)" fg:x="971" fg:w="1"/><text x="78.6197%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.3697%" y="469" width="0.0807%" height="15" fill="rgb(249,76,21)" fg:x="971" fg:w="1"/><text x="78.6197%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.1275%" y="565" width="0.4036%" height="15" fill="rgb(243,67,29)" fg:x="968" fg:w="5"/><text x="78.3775%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="78.1275%" y="549" width="0.4036%" height="15" fill="rgb(240,159,2)" fg:x="968" fg:w="5"/><text x="78.3775%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.1275%" y="533" width="0.4036%" height="15" fill="rgb(244,64,3)" fg:x="968" fg:w="5"/><text x="78.3775%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="78.2082%" y="517" width="0.3228%" height="15" fill="rgb(220,86,40)" fg:x="969" fg:w="4"/><text x="78.4582%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.3697%" y="501" width="0.1614%" height="15" fill="rgb(222,194,51)" fg:x="971" fg:w="2"/><text x="78.6197%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.4504%" y="485" width="0.0807%" height="15" fill="rgb(207,154,19)" fg:x="972" fg:w="1"/><text x="78.7004%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.4504%" y="469" width="0.0807%" height="15" fill="rgb(206,178,36)" fg:x="972" fg:w="1"/><text x="78.7004%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="78.5311%" y="517" width="0.0807%" height="15" fill="rgb(218,8,24)" fg:x="973" fg:w="1"/><text x="78.7811%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.5311%" y="501" width="0.0807%" height="15" fill="rgb(226,83,41)" fg:x="973" fg:w="1"/><text x="78.7811%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="78.5311%" y="485" width="0.0807%" height="15" fill="rgb(224,23,22)" fg:x="973" fg:w="1"/><text x="78.7811%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.6118%" y="453" width="0.0807%" height="15" fill="rgb(218,198,45)" fg:x="974" fg:w="1"/><text x="78.8618%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.6118%" y="437" width="0.0807%" height="15" fill="rgb(249,147,41)" fg:x="974" fg:w="1"/><text x="78.8618%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="78.6118%" y="517" width="0.1614%" height="15" fill="rgb(244,224,13)" fg:x="974" fg:w="2"/><text x="78.8618%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="78.6118%" y="501" width="0.1614%" height="15" fill="rgb(225,97,27)" fg:x="974" fg:w="2"/><text x="78.8618%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="78.6118%" y="485" width="0.1614%" height="15" fill="rgb(254,64,0)" fg:x="974" fg:w="2"/><text x="78.8618%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="78.6118%" y="469" width="0.1614%" height="15" fill="rgb(208,130,43)" fg:x="974" fg:w="2"/><text x="78.8618%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.6925%" y="453" width="0.0807%" height="15" fill="rgb(247,91,25)" fg:x="975" fg:w="1"/><text x="78.9425%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="78.6925%" y="437" width="0.0807%" height="15" fill="rgb(215,218,42)" fg:x="975" fg:w="1"/><text x="78.9425%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.6925%" y="421" width="0.0807%" height="15" fill="rgb(233,9,24)" fg:x="975" fg:w="1"/><text x="78.9425%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.7732%" y="485" width="0.0807%" height="15" fill="rgb(252,105,38)" fg:x="976" fg:w="1"/><text x="79.0232%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="78.7732%" y="469" width="0.0807%" height="15" fill="rgb(225,40,49)" fg:x="976" fg:w="1"/><text x="79.0232%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7732%" y="453" width="0.0807%" height="15" fill="rgb(232,196,19)" fg:x="976" fg:w="1"/><text x="79.0232%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.7732%" y="437" width="0.0807%" height="15" fill="rgb(207,35,15)" fg:x="976" fg:w="1"/><text x="79.0232%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.7732%" y="421" width="0.0807%" height="15" fill="rgb(238,68,36)" fg:x="976" fg:w="1"/><text x="79.0232%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.7732%" y="405" width="0.0807%" height="15" fill="rgb(205,158,20)" fg:x="976" fg:w="1"/><text x="79.0232%" y="415.50"></text></g><g><title>engine::session::Session::flush (20 samples, 1.61%)</title><rect x="77.3204%" y="629" width="1.6142%" height="15" fill="rgb(232,32,22)" fg:x="958" fg:w="20"/><text x="77.5704%" y="639.50"></text></g><g><title>engine::session::Session::save_entity_changes (20 samples, 1.61%)</title><rect x="77.3204%" y="613" width="1.6142%" height="15" fill="rgb(210,169,6)" fg:x="958" fg:w="20"/><text x="77.5704%" y="623.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (19 samples, 1.53%)</title><rect x="77.4011%" y="597" width="1.5335%" height="15" fill="rgb(229,28,12)" fg:x="959" fg:w="19"/><text x="77.6511%" y="607.50"></text></g><g><title>engine::session::Session::check_for_changes (19 samples, 1.53%)</title><rect x="77.4011%" y="581" width="1.5335%" height="15" fill="rgb(229,78,10)" fg:x="959" fg:w="19"/><text x="77.6511%" y="591.50"></text></g><g><title>kernel::compare::any_entity_changes (5 samples, 0.40%)</title><rect x="78.5311%" y="565" width="0.4036%" height="15" fill="rgb(223,139,54)" fg:x="973" fg:w="5"/><text x="78.7811%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="78.5311%" y="549" width="0.4036%" height="15" fill="rgb(207,110,4)" fg:x="973" fg:w="5"/><text x="78.7811%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="78.5311%" y="533" width="0.4036%" height="15" fill="rgb(248,30,41)" fg:x="973" fg:w="5"/><text x="78.7811%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="78.7732%" y="517" width="0.1614%" height="15" fill="rgb(235,54,25)" fg:x="976" fg:w="2"/><text x="79.0232%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (2 samples, 0.16%)</title><rect x="78.7732%" y="501" width="0.1614%" height="15" fill="rgb(213,107,41)" fg:x="976" fg:w="2"/><text x="79.0232%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.8539%" y="485" width="0.0807%" height="15" fill="rgb(237,102,9)" fg:x="977" fg:w="1"/><text x="79.1039%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.8539%" y="469" width="0.0807%" height="15" fill="rgb(252,137,49)" fg:x="977" fg:w="1"/><text x="79.1039%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="78.9346%" y="613" width="0.0807%" height="15" fill="rgb(233,202,33)" fg:x="978" fg:w="1"/><text x="79.1846%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="78.9346%" y="597" width="0.0807%" height="15" fill="rgb(223,14,51)" fg:x="978" fg:w="1"/><text x="79.1846%" y="607.50"></text></g><g><title>plugins_core::build::Build::holding (2 samples, 0.16%)</title><rect x="78.9346%" y="629" width="0.1614%" height="15" fill="rgb(248,70,23)" fg:x="978" fg:w="2"/><text x="79.1846%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.0153%" y="613" width="0.0807%" height="15" fill="rgb(209,207,47)" fg:x="979" fg:w="1"/><text x="79.2653%" y="623.50"></text></g><g><title>plugins_core::build::Build::occupying (1 samples, 0.08%)</title><rect x="79.0960%" y="629" width="0.0807%" height="15" fill="rgb(245,124,2)" fg:x="980" fg:w="1"/><text x="79.3460%" y="639.50"></text></g><g><title>plugins_core::tools::set_occupying (1 samples, 0.08%)</title><rect x="79.0960%" y="613" width="0.0807%" height="15" fill="rgb(249,208,11)" fg:x="980" fg:w="1"/><text x="79.3460%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="79.0960%" y="597" width="0.0807%" height="15" fill="rgb(247,112,7)" fg:x="980" fg:w="1"/><text x="79.3460%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="79.0960%" y="581" width="0.0807%" height="15" fill="rgb(209,192,31)" fg:x="980" fg:w="1"/><text x="79.3460%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="79.0960%" y="565" width="0.0807%" height="15" fill="rgb(236,55,19)" fg:x="980" fg:w="1"/><text x="79.3460%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.0960%" y="549" width="0.0807%" height="15" fill="rgb(252,89,41)" fg:x="980" fg:w="1"/><text x="79.3460%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (26 samples, 2.10%)</title><rect x="77.1590%" y="645" width="2.0985%" height="15" fill="rgb(220,172,14)" fg:x="956" fg:w="26"/><text x="77.4090%" y="655.50">p..</text></g><g><title>plugins_core::build::Build::with_username (1 samples, 0.08%)</title><rect x="79.1768%" y="629" width="0.0807%" height="15" fill="rgb(252,65,2)" fg:x="981" fg:w="1"/><text x="79.4268%" y="639.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="79.1768%" y="613" width="0.0807%" height="15" fill="rgb(250,20,8)" fg:x="981" fg:w="1"/><text x="79.4268%" y="623.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="79.1768%" y="597" width="0.0807%" height="15" fill="rgb(234,149,13)" fg:x="981" fg:w="1"/><text x="79.4268%" y="607.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="79.1768%" y="581" width="0.0807%" height="15" fill="rgb(223,219,12)" fg:x="981" fg:w="1"/><text x="79.4268%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.1768%" y="565" width="0.0807%" height="15" fill="rgb(234,13,49)" fg:x="981" fg:w="1"/><text x="79.4268%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.1768%" y="549" width="0.0807%" height="15" fill="rgb(214,41,25)" fg:x="981" fg:w="1"/><text x="79.4268%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="79.1768%" y="533" width="0.0807%" height="15" fill="rgb(232,198,52)" fg:x="981" fg:w="1"/><text x="79.4268%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="79.2575%" y="597" width="0.0807%" height="15" fill="rgb(236,111,46)" fg:x="982" fg:w="1"/><text x="79.5075%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.2575%" y="581" width="0.0807%" height="15" fill="rgb(253,30,20)" fg:x="982" fg:w="1"/><text x="79.5075%" y="591.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (57 samples, 4.60%)</title><rect x="74.8184%" y="661" width="4.6005%" height="15" fill="rgb(247,141,17)" fg:x="927" fg:w="57"/><text x="75.0684%" y="671.50">&lt;test..</text></g><g><title>plugins_core::build::BuildSurroundings::make (2 samples, 0.16%)</title><rect x="79.2575%" y="645" width="0.1614%" height="15" fill="rgb(214,195,21)" fg:x="982" fg:w="2"/><text x="79.5075%" y="655.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="79.2575%" y="629" width="0.1614%" height="15" fill="rgb(214,98,12)" fg:x="982" fg:w="2"/><text x="79.5075%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::set_name (2 samples, 0.16%)</title><rect x="79.2575%" y="613" width="0.1614%" height="15" fill="rgb(239,4,26)" fg:x="982" fg:w="2"/><text x="79.5075%" y="623.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="79.3382%" y="597" width="0.0807%" height="15" fill="rgb(234,210,35)" fg:x="983" fg:w="1"/><text x="79.5882%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.3382%" y="581" width="0.0807%" height="15" fill="rgb(252,178,27)" fg:x="983" fg:w="1"/><text x="79.5882%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::RaisedEvent&gt; (1 samples, 0.08%)</title><rect x="79.4996%" y="645" width="0.0807%" height="15" fill="rgb(217,50,1)" fg:x="985" fg:w="1"/><text x="79.7496%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::carrying::model::CarryingEvent&gt; (1 samples, 0.08%)</title><rect x="79.4996%" y="629" width="0.0807%" height="15" fill="rgb(233,137,5)" fg:x="985" fg:w="1"/><text x="79.7496%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="79.4996%" y="613" width="0.0807%" height="15" fill="rgb(217,227,25)" fg:x="985" fg:w="1"/><text x="79.7496%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="79.4996%" y="597" width="0.0807%" height="15" fill="rgb(242,89,38)" fg:x="985" fg:w="1"/><text x="79.7496%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4996%" y="581" width="0.0807%" height="15" fill="rgb(212,190,30)" fg:x="985" fg:w="1"/><text x="79.7496%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.5803%" y="629" width="0.0807%" height="15" fill="rgb(222,120,8)" fg:x="986" fg:w="1"/><text x="79.8303%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="79.5803%" y="613" width="0.0807%" height="15" fill="rgb(227,181,9)" fg:x="986" fg:w="1"/><text x="79.8303%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="79.5803%" y="597" width="0.0807%" height="15" fill="rgb(222,125,29)" fg:x="986" fg:w="1"/><text x="79.8303%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="79.6610%" y="597" width="0.0807%" height="15" fill="rgb(215,153,31)" fg:x="987" fg:w="1"/><text x="79.9110%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="79.6610%" y="581" width="0.0807%" height="15" fill="rgb(228,77,30)" fg:x="987" fg:w="1"/><text x="79.9110%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.6610%" y="565" width="0.0807%" height="15" fill="rgb(226,110,9)" fg:x="987" fg:w="1"/><text x="79.9110%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="79.7417%" y="581" width="0.0807%" height="15" fill="rgb(219,111,7)" fg:x="988" fg:w="1"/><text x="79.9917%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.7417%" y="565" width="0.0807%" height="15" fill="rgb(229,167,25)" fg:x="988" fg:w="1"/><text x="79.9917%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.9839%" y="565" width="0.0807%" height="15" fill="rgb(209,77,43)" fg:x="991" fg:w="1"/><text x="80.2339%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.0646%" y="549" width="0.0807%" height="15" fill="rgb(233,70,39)" fg:x="992" fg:w="1"/><text x="80.3146%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.0646%" y="533" width="0.0807%" height="15" fill="rgb(207,171,44)" fg:x="992" fg:w="1"/><text x="80.3146%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.0646%" y="517" width="0.0807%" height="15" fill="rgb(244,91,6)" fg:x="992" fg:w="1"/><text x="80.3146%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.0646%" y="501" width="0.0807%" height="15" fill="rgb(234,136,12)" fg:x="992" fg:w="1"/><text x="80.3146%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.0646%" y="565" width="0.1614%" height="15" fill="rgb(216,210,38)" fg:x="992" fg:w="2"/><text x="80.3146%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.1453%" y="549" width="0.0807%" height="15" fill="rgb(241,227,7)" fg:x="993" fg:w="1"/><text x="80.3953%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.1453%" y="533" width="0.0807%" height="15" fill="rgb(241,222,11)" fg:x="993" fg:w="1"/><text x="80.3953%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.1453%" y="517" width="0.0807%" height="15" fill="rgb(246,86,18)" fg:x="993" fg:w="1"/><text x="80.3953%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (7 samples, 0.56%)</title><rect x="79.7417%" y="597" width="0.5650%" height="15" fill="rgb(224,151,49)" fg:x="988" fg:w="7"/><text x="79.9917%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="79.8224%" y="581" width="0.4843%" height="15" fill="rgb(235,4,41)" fg:x="989" fg:w="6"/><text x="80.0724%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.2260%" y="565" width="0.0807%" height="15" fill="rgb(218,30,52)" fg:x="994" fg:w="1"/><text x="80.4760%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.2260%" y="549" width="0.0807%" height="15" fill="rgb(205,124,51)" fg:x="994" fg:w="1"/><text x="80.4760%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.2260%" y="533" width="0.0807%" height="15" fill="rgb(237,126,51)" fg:x="994" fg:w="1"/><text x="80.4760%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="80.3067%" y="597" width="0.2421%" height="15" fill="rgb(225,32,46)" fg:x="995" fg:w="3"/><text x="80.5567%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="80.3067%" y="581" width="0.2421%" height="15" fill="rgb(251,60,49)" fg:x="995" fg:w="3"/><text x="80.5567%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="80.3067%" y="565" width="0.2421%" height="15" fill="rgb(234,18,23)" fg:x="995" fg:w="3"/><text x="80.5567%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="80.3067%" y="549" width="0.2421%" height="15" fill="rgb(234,25,23)" fg:x="995" fg:w="3"/><text x="80.5567%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.3874%" y="533" width="0.1614%" height="15" fill="rgb(210,43,52)" fg:x="996" fg:w="2"/><text x="80.6374%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.5488%" y="581" width="0.0807%" height="15" fill="rgb(237,198,21)" fg:x="998" fg:w="1"/><text x="80.7988%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.6295%" y="581" width="0.0807%" height="15" fill="rgb(211,20,34)" fg:x="999" fg:w="1"/><text x="80.8795%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.6295%" y="565" width="0.0807%" height="15" fill="rgb(221,155,50)" fg:x="999" fg:w="1"/><text x="80.8795%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.6295%" y="549" width="0.0807%" height="15" fill="rgb(213,214,53)" fg:x="999" fg:w="1"/><text x="80.8795%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.6295%" y="533" width="0.0807%" height="15" fill="rgb(215,229,48)" fg:x="999" fg:w="1"/><text x="80.8795%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.6295%" y="517" width="0.0807%" height="15" fill="rgb(243,88,5)" fg:x="999" fg:w="1"/><text x="80.8795%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.6295%" y="501" width="0.0807%" height="15" fill="rgb(216,199,8)" fg:x="999" fg:w="1"/><text x="80.8795%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.7910%" y="549" width="0.0807%" height="15" fill="rgb(241,22,4)" fg:x="1001" fg:w="1"/><text x="81.0410%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="80.8717%" y="549" width="0.0807%" height="15" fill="rgb(209,190,22)" fg:x="1002" fg:w="1"/><text x="81.1217%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.8717%" y="533" width="0.0807%" height="15" fill="rgb(251,138,45)" fg:x="1002" fg:w="1"/><text x="81.1217%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.8717%" y="517" width="0.0807%" height="15" fill="rgb(219,111,22)" fg:x="1002" fg:w="1"/><text x="81.1217%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="80.9524%" y="549" width="0.0807%" height="15" fill="rgb(253,29,49)" fg:x="1003" fg:w="1"/><text x="81.2024%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.9524%" y="533" width="0.0807%" height="15" fill="rgb(238,129,49)" fg:x="1003" fg:w="1"/><text x="81.2024%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.9524%" y="517" width="0.0807%" height="15" fill="rgb(240,26,41)" fg:x="1003" fg:w="1"/><text x="81.2024%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.0331%" y="501" width="0.0807%" height="15" fill="rgb(221,47,33)" fg:x="1004" fg:w="1"/><text x="81.2831%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.1138%" y="501" width="0.0807%" height="15" fill="rgb(216,200,17)" fg:x="1005" fg:w="1"/><text x="81.3638%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.1138%" y="485" width="0.0807%" height="15" fill="rgb(230,151,26)" fg:x="1005" fg:w="1"/><text x="81.3638%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.1138%" y="469" width="0.0807%" height="15" fill="rgb(242,182,16)" fg:x="1005" fg:w="1"/><text x="81.3638%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="81.1945%" y="485" width="0.0807%" height="15" fill="rgb(236,35,53)" fg:x="1006" fg:w="1"/><text x="81.4445%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (4 samples, 0.32%)</title><rect x="81.0331%" y="549" width="0.3228%" height="15" fill="rgb(214,180,28)" fg:x="1004" fg:w="4"/><text x="81.2831%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="81.0331%" y="533" width="0.3228%" height="15" fill="rgb(208,173,36)" fg:x="1004" fg:w="4"/><text x="81.2831%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="81.0331%" y="517" width="0.3228%" height="15" fill="rgb(218,39,15)" fg:x="1004" fg:w="4"/><text x="81.2831%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="81.1945%" y="501" width="0.1614%" height="15" fill="rgb(213,145,15)" fg:x="1006" fg:w="2"/><text x="81.4445%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.2752%" y="485" width="0.0807%" height="15" fill="rgb(242,110,37)" fg:x="1007" fg:w="1"/><text x="81.5252%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.2752%" y="469" width="0.0807%" height="15" fill="rgb(247,146,22)" fg:x="1007" fg:w="1"/><text x="81.5252%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.3559%" y="533" width="0.0807%" height="15" fill="rgb(215,191,7)" fg:x="1008" fg:w="1"/><text x="81.6059%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.4366%" y="501" width="0.1614%" height="15" fill="rgb(240,158,1)" fg:x="1009" fg:w="2"/><text x="81.6866%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.4366%" y="485" width="0.1614%" height="15" fill="rgb(241,78,32)" fg:x="1009" fg:w="2"/><text x="81.6866%" y="495.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="81.5174%" y="469" width="0.0807%" height="15" fill="rgb(248,83,10)" fg:x="1010" fg:w="1"/><text x="81.7674%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="81.5174%" y="453" width="0.0807%" height="15" fill="rgb(241,52,0)" fg:x="1010" fg:w="1"/><text x="81.7674%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.5981%" y="501" width="0.0807%" height="15" fill="rgb(238,37,13)" fg:x="1011" fg:w="1"/><text x="81.8481%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.5981%" y="485" width="0.0807%" height="15" fill="rgb(242,194,17)" fg:x="1011" fg:w="1"/><text x="81.8481%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.5981%" y="469" width="0.0807%" height="15" fill="rgb(236,96,3)" fg:x="1011" fg:w="1"/><text x="81.8481%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.5981%" y="453" width="0.0807%" height="15" fill="rgb(235,148,34)" fg:x="1011" fg:w="1"/><text x="81.8481%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (13 samples, 1.05%)</title><rect x="80.7103%" y="581" width="1.0492%" height="15" fill="rgb(254,12,11)" fg:x="1000" fg:w="13"/><text x="80.9603%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.97%)</title><rect x="80.7910%" y="565" width="0.9685%" height="15" fill="rgb(207,31,54)" fg:x="1001" fg:w="12"/><text x="81.0410%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="81.3559%" y="549" width="0.4036%" height="15" fill="rgb(252,14,28)" fg:x="1008" fg:w="5"/><text x="81.6059%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (4 samples, 0.32%)</title><rect x="81.4366%" y="533" width="0.3228%" height="15" fill="rgb(252,108,36)" fg:x="1009" fg:w="4"/><text x="81.6866%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="81.4366%" y="517" width="0.3228%" height="15" fill="rgb(214,149,7)" fg:x="1009" fg:w="4"/><text x="81.6866%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6788%" y="501" width="0.0807%" height="15" fill="rgb(243,94,12)" fg:x="1012" fg:w="1"/><text x="81.9288%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="81.7595%" y="421" width="0.0807%" height="15" fill="rgb(208,36,10)" fg:x="1013" fg:w="1"/><text x="82.0095%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="81.7595%" y="453" width="0.1614%" height="15" fill="rgb(233,185,52)" fg:x="1013" fg:w="2"/><text x="82.0095%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="81.7595%" y="437" width="0.1614%" height="15" fill="rgb(234,50,45)" fg:x="1013" fg:w="2"/><text x="82.0095%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8402%" y="421" width="0.0807%" height="15" fill="rgb(228,92,54)" fg:x="1014" fg:w="1"/><text x="82.0902%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8402%" y="405" width="0.0807%" height="15" fill="rgb(224,85,25)" fg:x="1014" fg:w="1"/><text x="82.0902%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.8402%" y="389" width="0.0807%" height="15" fill="rgb(246,1,45)" fg:x="1014" fg:w="1"/><text x="82.0902%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="81.7595%" y="485" width="0.2421%" height="15" fill="rgb(240,66,23)" fg:x="1013" fg:w="3"/><text x="82.0095%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="81.7595%" y="469" width="0.2421%" height="15" fill="rgb(222,96,27)" fg:x="1013" fg:w="3"/><text x="82.0095%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9209%" y="453" width="0.0807%" height="15" fill="rgb(212,136,10)" fg:x="1015" fg:w="1"/><text x="82.1709%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9209%" y="437" width="0.0807%" height="15" fill="rgb(226,192,50)" fg:x="1015" fg:w="1"/><text x="82.1709%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="82.0016%" y="485" width="0.0807%" height="15" fill="rgb(241,182,31)" fg:x="1016" fg:w="1"/><text x="82.2516%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.0016%" y="469" width="0.0807%" height="15" fill="rgb(219,205,47)" fg:x="1016" fg:w="1"/><text x="82.2516%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="81.7595%" y="517" width="0.4843%" height="15" fill="rgb(207,96,14)" fg:x="1013" fg:w="6"/><text x="82.0095%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="81.7595%" y="501" width="0.4843%" height="15" fill="rgb(216,119,9)" fg:x="1013" fg:w="6"/><text x="82.0095%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.0823%" y="485" width="0.1614%" height="15" fill="rgb(235,62,36)" fg:x="1017" fg:w="2"/><text x="82.3323%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1630%" y="469" width="0.0807%" height="15" fill="rgb(214,41,27)" fg:x="1018" fg:w="1"/><text x="82.4130%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1630%" y="453" width="0.0807%" height="15" fill="rgb(214,174,37)" fg:x="1018" fg:w="1"/><text x="82.4130%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="82.2437%" y="517" width="0.0807%" height="15" fill="rgb(212,11,25)" fg:x="1019" fg:w="1"/><text x="82.4937%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (8 samples, 0.65%)</title><rect x="81.7595%" y="581" width="0.6457%" height="15" fill="rgb(217,71,35)" fg:x="1013" fg:w="8"/><text x="82.0095%" y="591.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.65%)</title><rect x="81.7595%" y="565" width="0.6457%" height="15" fill="rgb(234,152,9)" fg:x="1013" fg:w="8"/><text x="82.0095%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.65%)</title><rect x="81.7595%" y="549" width="0.6457%" height="15" fill="rgb(228,32,51)" fg:x="1013" fg:w="8"/><text x="82.0095%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="81.7595%" y="533" width="0.6457%" height="15" fill="rgb(209,14,47)" fg:x="1013" fg:w="8"/><text x="82.0095%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.3245%" y="517" width="0.0807%" height="15" fill="rgb(218,201,17)" fg:x="1020" fg:w="1"/><text x="82.5745%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="82.4859%" y="517" width="0.0807%" height="15" fill="rgb(218,98,15)" fg:x="1022" fg:w="1"/><text x="82.7359%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="82.4052%" y="565" width="0.2421%" height="15" fill="rgb(233,202,29)" fg:x="1021" fg:w="3"/><text x="82.6552%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="82.4859%" y="549" width="0.1614%" height="15" fill="rgb(207,196,44)" fg:x="1022" fg:w="2"/><text x="82.7359%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="82.4859%" y="533" width="0.1614%" height="15" fill="rgb(218,63,34)" fg:x="1022" fg:w="2"/><text x="82.7359%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.5666%" y="517" width="0.0807%" height="15" fill="rgb(209,10,5)" fg:x="1023" fg:w="1"/><text x="82.8166%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="82.6473%" y="565" width="0.0807%" height="15" fill="rgb(224,36,28)" fg:x="1024" fg:w="1"/><text x="82.8973%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="82.7280%" y="565" width="0.1614%" height="15" fill="rgb(249,178,7)" fg:x="1025" fg:w="2"/><text x="82.9780%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.8087%" y="549" width="0.0807%" height="15" fill="rgb(253,163,10)" fg:x="1026" fg:w="1"/><text x="83.0587%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.8894%" y="549" width="0.0807%" height="15" fill="rgb(245,67,46)" fg:x="1027" fg:w="1"/><text x="83.1394%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="82.9701%" y="533" width="0.0807%" height="15" fill="rgb(225,14,18)" fg:x="1028" fg:w="1"/><text x="83.2201%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.9701%" y="517" width="0.0807%" height="15" fill="rgb(217,41,54)" fg:x="1028" fg:w="1"/><text x="83.2201%" y="527.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (1 samples, 0.08%)</title><rect x="83.0508%" y="533" width="0.0807%" height="15" fill="rgb(222,111,11)" fg:x="1029" fg:w="1"/><text x="83.3008%" y="543.50"></text></g><g><title>kernel::compare::any_entity_changes (33 samples, 2.66%)</title><rect x="80.5488%" y="597" width="2.6634%" height="15" fill="rgb(211,85,31)" fg:x="998" fg:w="33"/><text x="80.7988%" y="607.50">ke..</text></g><g><title>treediff::diff::diff (10 samples, 0.81%)</title><rect x="82.4052%" y="581" width="0.8071%" height="15" fill="rgb(223,29,26)" fg:x="1021" fg:w="10"/><text x="82.6552%" y="591.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="82.8894%" y="565" width="0.3228%" height="15" fill="rgb(236,124,50)" fg:x="1027" fg:w="4"/><text x="83.1394%" y="575.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="82.9701%" y="549" width="0.2421%" height="15" fill="rgb(219,148,15)" fg:x="1028" fg:w="3"/><text x="83.2201%" y="559.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="83.1316%" y="533" width="0.0807%" height="15" fill="rgb(248,159,33)" fg:x="1030" fg:w="1"/><text x="83.3816%" y="543.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (1 samples, 0.08%)</title><rect x="83.1316%" y="517" width="0.0807%" height="15" fill="rgb(252,65,8)" fg:x="1030" fg:w="1"/><text x="83.3816%" y="527.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (45 samples, 3.63%)</title><rect x="79.6610%" y="629" width="3.6320%" height="15" fill="rgb(236,45,7)" fg:x="987" fg:w="45"/><text x="79.9110%" y="639.50">engi..</text></g><g><title>engine::session::Session::check_for_changes (45 samples, 3.63%)</title><rect x="79.6610%" y="613" width="3.6320%" height="15" fill="rgb(244,3,48)" fg:x="987" fg:w="45"/><text x="79.9110%" y="623.50">engi..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="83.2123%" y="597" width="0.0807%" height="15" fill="rgb(224,123,53)" fg:x="1031" fg:w="1"/><text x="83.4623%" y="607.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="83.2930%" y="629" width="0.0807%" height="15" fill="rgb(223,173,15)" fg:x="1032" fg:w="1"/><text x="83.5430%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="83.2930%" y="613" width="0.0807%" height="15" fill="rgb(254,181,5)" fg:x="1032" fg:w="1"/><text x="83.5430%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.2930%" y="597" width="0.0807%" height="15" fill="rgb(243,124,33)" fg:x="1032" fg:w="1"/><text x="83.5430%" y="607.50"></text></g><g><title>engine::session::Session::save_entity_changes (48 samples, 3.87%)</title><rect x="79.5803%" y="645" width="3.8741%" height="15" fill="rgb(253,220,11)" fg:x="986" fg:w="48"/><text x="79.8303%" y="655.50">engi..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="83.3737%" y="629" width="0.0807%" height="15" fill="rgb(217,14,4)" fg:x="1033" fg:w="1"/><text x="83.6237%" y="639.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="83.3737%" y="613" width="0.0807%" height="15" fill="rgb(209,196,12)" fg:x="1033" fg:w="1"/><text x="83.6237%" y="623.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="83.3737%" y="597" width="0.0807%" height="15" fill="rgb(237,108,29)" fg:x="1033" fg:w="1"/><text x="83.6237%" y="607.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="83.3737%" y="581" width="0.0807%" height="15" fill="rgb(216,173,20)" fg:x="1033" fg:w="1"/><text x="83.6237%" y="591.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="83.3737%" y="565" width="0.0807%" height="15" fill="rgb(245,27,6)" fg:x="1033" fg:w="1"/><text x="83.6237%" y="575.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="83.3737%" y="549" width="0.0807%" height="15" fill="rgb(210,181,20)" fg:x="1033" fg:w="1"/><text x="83.6237%" y="559.50"></text></g><g><title>std::sys::unix::os::env_read_lock (1 samples, 0.08%)</title><rect x="83.3737%" y="533" width="0.0807%" height="15" fill="rgb(235,213,1)" fg:x="1033" fg:w="1"/><text x="83.6237%" y="543.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.08%)</title><rect x="83.3737%" y="517" width="0.0807%" height="15" fill="rgb(239,68,43)" fg:x="1033" fg:w="1"/><text x="83.6237%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (1 samples, 0.08%)</title><rect x="83.3737%" y="501" width="0.0807%" height="15" fill="rgb(254,137,43)" fg:x="1033" fg:w="1"/><text x="83.6237%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (1 samples, 0.08%)</title><rect x="83.3737%" y="485" width="0.0807%" height="15" fill="rgb(252,170,38)" fg:x="1033" fg:w="1"/><text x="83.6237%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.08%)</title><rect x="83.3737%" y="469" width="0.0807%" height="15" fill="rgb(234,21,42)" fg:x="1033" fg:w="1"/><text x="83.6237%" y="479.50"></text></g><g><title>engine::session::Session::close (51 samples, 4.12%)</title><rect x="79.4189%" y="661" width="4.1162%" height="15" fill="rgb(216,145,40)" fg:x="984" fg:w="51"/><text x="79.6689%" y="671.50">engi..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="83.4544%" y="645" width="0.0807%" height="15" fill="rgb(251,73,9)" fg:x="1034" fg:w="1"/><text x="83.7044%" y="655.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="83.4544%" y="629" width="0.0807%" height="15" fill="rgb(242,54,6)" fg:x="1034" fg:w="1"/><text x="83.7044%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="83.4544%" y="613" width="0.0807%" height="15" fill="rgb(239,70,7)" fg:x="1034" fg:w="1"/><text x="83.7044%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="83.4544%" y="597" width="0.0807%" height="15" fill="rgb(216,159,35)" fg:x="1034" fg:w="1"/><text x="83.7044%" y="607.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="83.4544%" y="581" width="0.0807%" height="15" fill="rgb(224,50,39)" fg:x="1034" fg:w="1"/><text x="83.7044%" y="591.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="83.5351%" y="581" width="0.0807%" height="15" fill="rgb(235,9,35)" fg:x="1035" fg:w="1"/><text x="83.7851%" y="591.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="83.5351%" y="565" width="0.0807%" height="15" fill="rgb(239,34,21)" fg:x="1035" fg:w="1"/><text x="83.7851%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="83.8579%" y="485" width="0.0807%" height="15" fill="rgb(218,162,43)" fg:x="1039" fg:w="1"/><text x="84.1079%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.8579%" y="469" width="0.0807%" height="15" fill="rgb(219,89,33)" fg:x="1039" fg:w="1"/><text x="84.1079%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="83.9387%" y="469" width="0.4036%" height="15" fill="rgb(226,125,37)" fg:x="1040" fg:w="5"/><text x="84.1887%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="83.9387%" y="453" width="0.4036%" height="15" fill="rgb(233,149,30)" fg:x="1040" fg:w="5"/><text x="84.1887%" y="463.50"></text></g><g><title>realloc (5 samples, 0.40%)</title><rect x="83.9387%" y="437" width="0.4036%" height="15" fill="rgb(236,8,18)" fg:x="1040" fg:w="5"/><text x="84.1887%" y="447.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="84.3422%" y="453" width="0.0807%" height="15" fill="rgb(205,176,9)" fg:x="1045" fg:w="1"/><text x="84.5922%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="84.3422%" y="437" width="0.0807%" height="15" fill="rgb(252,103,44)" fg:x="1045" fg:w="1"/><text x="84.5922%" y="447.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="84.3422%" y="421" width="0.0807%" height="15" fill="rgb(207,68,53)" fg:x="1045" fg:w="1"/><text x="84.5922%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="84.5036%" y="421" width="0.0807%" height="15" fill="rgb(218,193,48)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="84.5036%" y="405" width="0.0807%" height="15" fill="rgb(234,121,52)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.5036%" y="389" width="0.0807%" height="15" fill="rgb(227,218,49)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="84.5036%" y="373" width="0.0807%" height="15" fill="rgb(221,8,7)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="383.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="84.5036%" y="357" width="0.0807%" height="15" fill="rgb(217,151,36)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="367.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="84.5036%" y="341" width="0.0807%" height="15" fill="rgb(213,71,5)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.5036%" y="325" width="0.0807%" height="15" fill="rgb(225,145,43)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.5036%" y="309" width="0.0807%" height="15" fill="rgb(235,118,19)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.5036%" y="293" width="0.0807%" height="15" fill="rgb(214,102,36)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.5036%" y="277" width="0.0807%" height="15" fill="rgb(220,56,43)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.5036%" y="261" width="0.0807%" height="15" fill="rgb(246,136,46)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.5036%" y="245" width="0.0807%" height="15" fill="rgb(249,99,12)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.5036%" y="229" width="0.0807%" height="15" fill="rgb(224,31,42)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.5036%" y="213" width="0.0807%" height="15" fill="rgb(208,96,21)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.5036%" y="197" width="0.0807%" height="15" fill="rgb(237,229,7)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.5036%" y="181" width="0.0807%" height="15" fill="rgb(210,12,6)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.5036%" y="165" width="0.0807%" height="15" fill="rgb(240,9,34)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.5036%" y="149" width="0.0807%" height="15" fill="rgb(211,68,37)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5036%" y="133" width="0.0807%" height="15" fill="rgb(249,138,50)" fg:x="1047" fg:w="1"/><text x="84.7536%" y="143.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (9 samples, 0.73%)</title><rect x="83.9387%" y="485" width="0.7264%" height="15" fill="rgb(243,185,40)" fg:x="1040" fg:w="9"/><text x="84.1887%" y="495.50"></text></g><g><title>plugins_core::tools::contained_by (4 samples, 0.32%)</title><rect x="84.3422%" y="469" width="0.3228%" height="15" fill="rgb(242,92,35)" fg:x="1045" fg:w="4"/><text x="84.5922%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="84.4229%" y="453" width="0.2421%" height="15" fill="rgb(244,98,5)" fg:x="1046" fg:w="3"/><text x="84.6729%" y="463.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="84.4229%" y="437" width="0.2421%" height="15" fill="rgb(228,186,29)" fg:x="1046" fg:w="3"/><text x="84.6729%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5843%" y="421" width="0.0807%" height="15" fill="rgb(253,7,44)" fg:x="1048" fg:w="1"/><text x="84.8343%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5843%" y="405" width="0.0807%" height="15" fill="rgb(216,11,45)" fg:x="1048" fg:w="1"/><text x="84.8343%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="84.5843%" y="389" width="0.0807%" height="15" fill="rgb(205,67,3)" fg:x="1048" fg:w="1"/><text x="84.8343%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="84.5843%" y="373" width="0.0807%" height="15" fill="rgb(250,18,3)" fg:x="1048" fg:w="1"/><text x="84.8343%" y="383.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="84.5843%" y="357" width="0.0807%" height="15" fill="rgb(241,222,43)" fg:x="1048" fg:w="1"/><text x="84.8343%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.5843%" y="341" width="0.0807%" height="15" fill="rgb(233,115,3)" fg:x="1048" fg:w="1"/><text x="84.8343%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.5843%" y="325" width="0.0807%" height="15" fill="rgb(215,165,25)" fg:x="1048" fg:w="1"/><text x="84.8343%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.5843%" y="309" width="0.0807%" height="15" fill="rgb(234,179,6)" fg:x="1048" fg:w="1"/><text x="84.8343%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.5843%" y="293" width="0.0807%" height="15" fill="rgb(215,82,23)" fg:x="1048" fg:w="1"/><text x="84.8343%" y="303.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (1 samples, 0.08%)</title><rect x="84.6651%" y="485" width="0.0807%" height="15" fill="rgb(211,47,18)" fg:x="1049" fg:w="1"/><text x="84.9151%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.6651%" y="469" width="0.0807%" height="15" fill="rgb(248,17,9)" fg:x="1049" fg:w="1"/><text x="84.9151%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (15 samples, 1.21%)</title><rect x="83.7772%" y="517" width="1.2107%" height="15" fill="rgb(210,212,12)" fg:x="1038" fg:w="15"/><text x="84.0272%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (14 samples, 1.13%)</title><rect x="83.8579%" y="501" width="1.1299%" height="15" fill="rgb(230,135,45)" fg:x="1039" fg:w="14"/><text x="84.1079%" y="511.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (3 samples, 0.24%)</title><rect x="84.7458%" y="485" width="0.2421%" height="15" fill="rgb(214,121,41)" fg:x="1050" fg:w="3"/><text x="84.9958%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="84.7458%" y="469" width="0.2421%" height="15" fill="rgb(239,165,45)" fg:x="1050" fg:w="3"/><text x="84.9958%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="84.7458%" y="453" width="0.2421%" height="15" fill="rgb(214,85,51)" fg:x="1050" fg:w="3"/><text x="84.9958%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="84.7458%" y="437" width="0.2421%" height="15" fill="rgb(223,90,27)" fg:x="1050" fg:w="3"/><text x="84.9958%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="84.7458%" y="421" width="0.2421%" height="15" fill="rgb(244,84,11)" fg:x="1050" fg:w="3"/><text x="84.9958%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="84.7458%" y="405" width="0.2421%" height="15" fill="rgb(253,41,47)" fg:x="1050" fg:w="3"/><text x="84.9958%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="84.7458%" y="389" width="0.2421%" height="15" fill="rgb(232,39,5)" fg:x="1050" fg:w="3"/><text x="84.9958%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="84.7458%" y="373" width="0.2421%" height="15" fill="rgb(211,93,4)" fg:x="1050" fg:w="3"/><text x="84.9958%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="84.7458%" y="357" width="0.2421%" height="15" fill="rgb(219,50,49)" fg:x="1050" fg:w="3"/><text x="84.9958%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="84.7458%" y="341" width="0.2421%" height="15" fill="rgb(232,80,19)" fg:x="1050" fg:w="3"/><text x="84.9958%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="84.7458%" y="325" width="0.2421%" height="15" fill="rgb(215,227,39)" fg:x="1050" fg:w="3"/><text x="84.9958%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="84.7458%" y="309" width="0.2421%" height="15" fill="rgb(211,99,12)" fg:x="1050" fg:w="3"/><text x="84.9958%" y="319.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="84.7458%" y="293" width="0.2421%" height="15" fill="rgb(214,158,5)" fg:x="1050" fg:w="3"/><text x="84.9958%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="84.8265%" y="277" width="0.1614%" height="15" fill="rgb(242,19,53)" fg:x="1051" fg:w="2"/><text x="85.0765%" y="287.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="84.9879%" y="517" width="0.0807%" height="15" fill="rgb(208,18,20)" fg:x="1053" fg:w="1"/><text x="85.2379%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9879%" y="501" width="0.0807%" height="15" fill="rgb(250,44,11)" fg:x="1053" fg:w="1"/><text x="85.2379%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9879%" y="485" width="0.0807%" height="15" fill="rgb(238,159,13)" fg:x="1053" fg:w="1"/><text x="85.2379%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9879%" y="469" width="0.0807%" height="15" fill="rgb(231,74,18)" fg:x="1053" fg:w="1"/><text x="85.2379%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.9879%" y="453" width="0.0807%" height="15" fill="rgb(229,219,45)" fg:x="1053" fg:w="1"/><text x="85.2379%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.9879%" y="437" width="0.0807%" height="15" fill="rgb(210,221,1)" fg:x="1053" fg:w="1"/><text x="85.2379%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.9879%" y="421" width="0.0807%" height="15" fill="rgb(209,60,51)" fg:x="1053" fg:w="1"/><text x="85.2379%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9879%" y="405" width="0.0807%" height="15" fill="rgb(252,97,34)" fg:x="1053" fg:w="1"/><text x="85.2379%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9879%" y="389" width="0.0807%" height="15" fill="rgb(243,211,37)" fg:x="1053" fg:w="1"/><text x="85.2379%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.9879%" y="373" width="0.0807%" height="15" fill="rgb(210,229,37)" fg:x="1053" fg:w="1"/><text x="85.2379%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.9879%" y="357" width="0.0807%" height="15" fill="rgb(220,208,43)" fg:x="1053" fg:w="1"/><text x="85.2379%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.9879%" y="341" width="0.0807%" height="15" fill="rgb(218,118,50)" fg:x="1053" fg:w="1"/><text x="85.2379%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.9879%" y="325" width="0.0807%" height="15" fill="rgb(254,169,52)" fg:x="1053" fg:w="1"/><text x="85.2379%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9879%" y="309" width="0.0807%" height="15" fill="rgb(221,214,37)" fg:x="1053" fg:w="1"/><text x="85.2379%" y="319.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="85.0686%" y="517" width="0.0807%" height="15" fill="rgb(254,186,32)" fg:x="1054" fg:w="1"/><text x="85.3186%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="85.0686%" y="501" width="0.0807%" height="15" fill="rgb(215,144,43)" fg:x="1054" fg:w="1"/><text x="85.3186%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="85.1493%" y="501" width="0.0807%" height="15" fill="rgb(252,21,46)" fg:x="1055" fg:w="1"/><text x="85.3993%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="85.1493%" y="485" width="0.0807%" height="15" fill="rgb(207,166,46)" fg:x="1055" fg:w="1"/><text x="85.3993%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1493%" y="469" width="0.0807%" height="15" fill="rgb(253,37,49)" fg:x="1055" fg:w="1"/><text x="85.3993%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1493%" y="453" width="0.0807%" height="15" fill="rgb(222,97,20)" fg:x="1055" fg:w="1"/><text x="85.3993%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="85.1493%" y="437" width="0.0807%" height="15" fill="rgb(244,181,26)" fg:x="1055" fg:w="1"/><text x="85.3993%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="85.1493%" y="421" width="0.0807%" height="15" fill="rgb(241,22,29)" fg:x="1055" fg:w="1"/><text x="85.3993%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="85.1493%" y="405" width="0.0807%" height="15" fill="rgb(206,200,43)" fg:x="1055" fg:w="1"/><text x="85.3993%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.1493%" y="389" width="0.0807%" height="15" fill="rgb(226,224,43)" fg:x="1055" fg:w="1"/><text x="85.3993%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.1493%" y="373" width="0.0807%" height="15" fill="rgb(253,129,28)" fg:x="1055" fg:w="1"/><text x="85.3993%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.1493%" y="357" width="0.0807%" height="15" fill="rgb(252,99,33)" fg:x="1055" fg:w="1"/><text x="85.3993%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.2300%" y="469" width="0.0807%" height="15" fill="rgb(208,123,45)" fg:x="1056" fg:w="1"/><text x="85.4800%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.2300%" y="453" width="0.0807%" height="15" fill="rgb(251,106,12)" fg:x="1056" fg:w="1"/><text x="85.4800%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.2300%" y="437" width="0.0807%" height="15" fill="rgb(240,209,35)" fg:x="1056" fg:w="1"/><text x="85.4800%" y="447.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="85.2300%" y="501" width="0.1614%" height="15" fill="rgb(214,52,50)" fg:x="1056" fg:w="2"/><text x="85.4800%" y="511.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="85.2300%" y="485" width="0.1614%" height="15" fill="rgb(234,119,4)" fg:x="1056" fg:w="2"/><text x="85.4800%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="85.3107%" y="469" width="0.0807%" height="15" fill="rgb(228,181,36)" fg:x="1057" fg:w="1"/><text x="85.5607%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.3107%" y="453" width="0.0807%" height="15" fill="rgb(213,171,42)" fg:x="1057" fg:w="1"/><text x="85.5607%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.3107%" y="437" width="0.0807%" height="15" fill="rgb(239,14,41)" fg:x="1057" fg:w="1"/><text x="85.5607%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="85.3107%" y="421" width="0.0807%" height="15" fill="rgb(239,111,46)" fg:x="1057" fg:w="1"/><text x="85.5607%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.3107%" y="405" width="0.0807%" height="15" fill="rgb(214,72,7)" fg:x="1057" fg:w="1"/><text x="85.5607%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (1 samples, 0.08%)</title><rect x="85.4722%" y="485" width="0.0807%" height="15" fill="rgb(221,114,1)" fg:x="1059" fg:w="1"/><text x="85.7222%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.4722%" y="469" width="0.0807%" height="15" fill="rgb(213,143,14)" fg:x="1059" fg:w="1"/><text x="85.7222%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (24 samples, 1.94%)</title><rect x="83.6965%" y="533" width="1.9370%" height="15" fill="rgb(220,221,53)" fg:x="1037" fg:w="24"/><text x="83.9465%" y="543.50">&lt;..</text></g><g><title>plugins_core::tools::move_between (6 samples, 0.48%)</title><rect x="85.1493%" y="517" width="0.4843%" height="15" fill="rgb(236,189,27)" fg:x="1055" fg:w="6"/><text x="85.3993%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (3 samples, 0.24%)</title><rect x="85.3914%" y="501" width="0.2421%" height="15" fill="rgb(252,139,49)" fg:x="1058" fg:w="3"/><text x="85.6414%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="85.5529%" y="485" width="0.0807%" height="15" fill="rgb(231,158,33)" fg:x="1060" fg:w="1"/><text x="85.8029%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="85.5529%" y="469" width="0.0807%" height="15" fill="rgb(207,201,15)" fg:x="1060" fg:w="1"/><text x="85.8029%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="85.5529%" y="453" width="0.0807%" height="15" fill="rgb(218,43,48)" fg:x="1060" fg:w="1"/><text x="85.8029%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="85.5529%" y="437" width="0.0807%" height="15" fill="rgb(244,63,52)" fg:x="1060" fg:w="1"/><text x="85.8029%" y="447.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="85.5529%" y="421" width="0.0807%" height="15" fill="rgb(236,60,17)" fg:x="1060" fg:w="1"/><text x="85.8029%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.5529%" y="405" width="0.0807%" height="15" fill="rgb(205,206,29)" fg:x="1060" fg:w="1"/><text x="85.8029%" y="415.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="85.5529%" y="389" width="0.0807%" height="15" fill="rgb(205,209,35)" fg:x="1060" fg:w="1"/><text x="85.8029%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="85.5529%" y="373" width="0.0807%" height="15" fill="rgb(227,112,14)" fg:x="1060" fg:w="1"/><text x="85.8029%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.5529%" y="357" width="0.0807%" height="15" fill="rgb(248,151,9)" fg:x="1060" fg:w="1"/><text x="85.8029%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.5529%" y="341" width="0.0807%" height="15" fill="rgb(247,45,40)" fg:x="1060" fg:w="1"/><text x="85.8029%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.5529%" y="325" width="0.0807%" height="15" fill="rgb(232,185,16)" fg:x="1060" fg:w="1"/><text x="85.8029%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.5529%" y="309" width="0.0807%" height="15" fill="rgb(215,45,44)" fg:x="1060" fg:w="1"/><text x="85.8029%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.5529%" y="293" width="0.0807%" height="15" fill="rgb(206,69,32)" fg:x="1060" fg:w="1"/><text x="85.8029%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.5529%" y="277" width="0.0807%" height="15" fill="rgb(233,98,50)" fg:x="1060" fg:w="1"/><text x="85.8029%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.5529%" y="261" width="0.0807%" height="15" fill="rgb(232,217,52)" fg:x="1060" fg:w="1"/><text x="85.8029%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.6336%" y="469" width="0.0807%" height="15" fill="rgb(250,42,51)" fg:x="1061" fg:w="1"/><text x="85.8836%" y="479.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.6336%" y="453" width="0.0807%" height="15" fill="rgb(241,200,26)" fg:x="1061" fg:w="1"/><text x="85.8836%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.6336%" y="437" width="0.0807%" height="15" fill="rgb(207,10,32)" fg:x="1061" fg:w="1"/><text x="85.8836%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.6336%" y="421" width="0.0807%" height="15" fill="rgb(214,63,15)" fg:x="1061" fg:w="1"/><text x="85.8836%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.6336%" y="405" width="0.0807%" height="15" fill="rgb(234,176,14)" fg:x="1061" fg:w="1"/><text x="85.8836%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.6336%" y="389" width="0.0807%" height="15" fill="rgb(226,104,52)" fg:x="1061" fg:w="1"/><text x="85.8836%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.6336%" y="373" width="0.0807%" height="15" fill="rgb(211,222,1)" fg:x="1061" fg:w="1"/><text x="85.8836%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.6336%" y="357" width="0.0807%" height="15" fill="rgb(237,7,3)" fg:x="1061" fg:w="1"/><text x="85.8836%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.6336%" y="341" width="0.0807%" height="15" fill="rgb(218,143,7)" fg:x="1061" fg:w="1"/><text x="85.8836%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.6336%" y="325" width="0.0807%" height="15" fill="rgb(208,25,22)" fg:x="1061" fg:w="1"/><text x="85.8836%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.6336%" y="309" width="0.0807%" height="15" fill="rgb(228,127,16)" fg:x="1061" fg:w="1"/><text x="85.8836%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.6336%" y="293" width="0.0807%" height="15" fill="rgb(237,86,27)" fg:x="1061" fg:w="1"/><text x="85.8836%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.6336%" y="277" width="0.0807%" height="15" fill="rgb(207,125,19)" fg:x="1061" fg:w="1"/><text x="85.8836%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.6336%" y="261" width="0.0807%" height="15" fill="rgb(243,195,0)" fg:x="1061" fg:w="1"/><text x="85.8836%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="85.7143%" y="469" width="0.4036%" height="15" fill="rgb(230,95,18)" fg:x="1062" fg:w="5"/><text x="85.9643%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="85.7143%" y="453" width="0.4036%" height="15" fill="rgb(232,157,21)" fg:x="1062" fg:w="5"/><text x="85.9643%" y="463.50"></text></g><g><title>realloc (5 samples, 0.40%)</title><rect x="85.7143%" y="437" width="0.4036%" height="15" fill="rgb(212,120,50)" fg:x="1062" fg:w="5"/><text x="85.9643%" y="447.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="86.1178%" y="453" width="0.0807%" height="15" fill="rgb(222,204,44)" fg:x="1067" fg:w="1"/><text x="86.3678%" y="463.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="86.1178%" y="437" width="0.0807%" height="15" fill="rgb(236,6,33)" fg:x="1067" fg:w="1"/><text x="86.3678%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (8 samples, 0.65%)</title><rect x="85.6336%" y="485" width="0.6457%" height="15" fill="rgb(247,11,38)" fg:x="1061" fg:w="8"/><text x="85.8836%" y="495.50"></text></g><g><title>plugins_core::tools::contained_by (2 samples, 0.16%)</title><rect x="86.1178%" y="469" width="0.1614%" height="15" fill="rgb(215,111,0)" fg:x="1067" fg:w="2"/><text x="86.3678%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="86.1985%" y="453" width="0.0807%" height="15" fill="rgb(211,65,46)" fg:x="1068" fg:w="1"/><text x="86.4485%" y="463.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="86.1985%" y="437" width="0.0807%" height="15" fill="rgb(216,5,12)" fg:x="1068" fg:w="1"/><text x="86.4485%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="86.1985%" y="421" width="0.0807%" height="15" fill="rgb(226,7,2)" fg:x="1068" fg:w="1"/><text x="86.4485%" y="431.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (1 samples, 0.08%)</title><rect x="86.2793%" y="485" width="0.0807%" height="15" fill="rgb(242,116,12)" fg:x="1069" fg:w="1"/><text x="86.5293%" y="495.50"></text></g><g><title>plugins_core::finding::matches_description (1 samples, 0.08%)</title><rect x="86.2793%" y="469" width="0.0807%" height="15" fill="rgb(249,209,7)" fg:x="1069" fg:w="1"/><text x="86.5293%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="86.2793%" y="453" width="0.0807%" height="15" fill="rgb(232,73,17)" fg:x="1069" fg:w="1"/><text x="86.5293%" y="463.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="86.2793%" y="437" width="0.0807%" height="15" fill="rgb(214,13,32)" fg:x="1069" fg:w="1"/><text x="86.5293%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.2793%" y="421" width="0.0807%" height="15" fill="rgb(221,125,10)" fg:x="1069" fg:w="1"/><text x="86.5293%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (10 samples, 0.81%)</title><rect x="85.6336%" y="517" width="0.8071%" height="15" fill="rgb(246,7,44)" fg:x="1061" fg:w="10"/><text x="85.8836%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (10 samples, 0.81%)</title><rect x="85.6336%" y="501" width="0.8071%" height="15" fill="rgb(239,18,35)" fg:x="1061" fg:w="10"/><text x="85.8836%" y="511.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="86.3600%" y="485" width="0.0807%" height="15" fill="rgb(250,222,16)" fg:x="1070" fg:w="1"/><text x="86.6100%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.3600%" y="469" width="0.0807%" height="15" fill="rgb(219,100,8)" fg:x="1070" fg:w="1"/><text x="86.6100%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.3600%" y="453" width="0.0807%" height="15" fill="rgb(240,62,13)" fg:x="1070" fg:w="1"/><text x="86.6100%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.3600%" y="437" width="0.0807%" height="15" fill="rgb(253,194,2)" fg:x="1070" fg:w="1"/><text x="86.6100%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.3600%" y="421" width="0.0807%" height="15" fill="rgb(235,58,31)" fg:x="1070" fg:w="1"/><text x="86.6100%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.3600%" y="405" width="0.0807%" height="15" fill="rgb(231,37,11)" fg:x="1070" fg:w="1"/><text x="86.6100%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.3600%" y="389" width="0.0807%" height="15" fill="rgb(235,133,0)" fg:x="1070" fg:w="1"/><text x="86.6100%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.3600%" y="373" width="0.0807%" height="15" fill="rgb(212,185,40)" fg:x="1070" fg:w="1"/><text x="86.6100%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.3600%" y="357" width="0.0807%" height="15" fill="rgb(216,68,42)" fg:x="1070" fg:w="1"/><text x="86.6100%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.3600%" y="341" width="0.0807%" height="15" fill="rgb(239,81,4)" fg:x="1070" fg:w="1"/><text x="86.6100%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.3600%" y="325" width="0.0807%" height="15" fill="rgb(206,86,6)" fg:x="1070" fg:w="1"/><text x="86.6100%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.3600%" y="309" width="0.0807%" height="15" fill="rgb(249,95,27)" fg:x="1070" fg:w="1"/><text x="86.6100%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.3600%" y="293" width="0.0807%" height="15" fill="rgb(205,155,45)" fg:x="1070" fg:w="1"/><text x="86.6100%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.3600%" y="277" width="0.0807%" height="15" fill="rgb(213,55,42)" fg:x="1070" fg:w="1"/><text x="86.6100%" y="287.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="86.4407%" y="501" width="0.0807%" height="15" fill="rgb(249,197,4)" fg:x="1071" fg:w="1"/><text x="86.6907%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="86.4407%" y="485" width="0.0807%" height="15" fill="rgb(212,128,32)" fg:x="1071" fg:w="1"/><text x="86.6907%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.5214%" y="469" width="0.0807%" height="15" fill="rgb(252,47,30)" fg:x="1072" fg:w="1"/><text x="86.7714%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.5214%" y="453" width="0.0807%" height="15" fill="rgb(209,79,18)" fg:x="1072" fg:w="1"/><text x="86.7714%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.5214%" y="437" width="0.0807%" height="15" fill="rgb(225,81,38)" fg:x="1072" fg:w="1"/><text x="86.7714%" y="447.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="86.6021%" y="469" width="0.0807%" height="15" fill="rgb(205,95,16)" fg:x="1073" fg:w="1"/><text x="86.8521%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.6021%" y="453" width="0.0807%" height="15" fill="rgb(214,30,4)" fg:x="1073" fg:w="1"/><text x="86.8521%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.6021%" y="437" width="0.0807%" height="15" fill="rgb(232,137,22)" fg:x="1073" fg:w="1"/><text x="86.8521%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="86.6021%" y="421" width="0.0807%" height="15" fill="rgb(232,156,19)" fg:x="1073" fg:w="1"/><text x="86.8521%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.6021%" y="405" width="0.0807%" height="15" fill="rgb(248,157,26)" fg:x="1073" fg:w="1"/><text x="86.8521%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.6021%" y="389" width="0.0807%" height="15" fill="rgb(242,24,3)" fg:x="1073" fg:w="1"/><text x="86.8521%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (14 samples, 1.13%)</title><rect x="85.6336%" y="533" width="1.1299%" height="15" fill="rgb(218,195,48)" fg:x="1061" fg:w="14"/><text x="85.8836%" y="543.50"></text></g><g><title>plugins_core::tools::move_between (4 samples, 0.32%)</title><rect x="86.4407%" y="517" width="0.3228%" height="15" fill="rgb(214,193,36)" fg:x="1071" fg:w="4"/><text x="86.6907%" y="527.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="86.5214%" y="501" width="0.2421%" height="15" fill="rgb(242,110,40)" fg:x="1072" fg:w="3"/><text x="86.7714%" y="511.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.24%)</title><rect x="86.5214%" y="485" width="0.2421%" height="15" fill="rgb(233,150,26)" fg:x="1072" fg:w="3"/><text x="86.7714%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="86.6828%" y="469" width="0.0807%" height="15" fill="rgb(239,200,30)" fg:x="1074" fg:w="1"/><text x="86.9328%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.6828%" y="453" width="0.0807%" height="15" fill="rgb(226,28,11)" fg:x="1074" fg:w="1"/><text x="86.9328%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="86.6828%" y="437" width="0.0807%" height="15" fill="rgb(220,26,48)" fg:x="1074" fg:w="1"/><text x="86.9328%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="86.6828%" y="421" width="0.0807%" height="15" fill="rgb(232,10,11)" fg:x="1074" fg:w="1"/><text x="86.9328%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="86.7635%" y="533" width="0.0807%" height="15" fill="rgb(252,143,50)" fg:x="1075" fg:w="1"/><text x="87.0135%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="86.7635%" y="517" width="0.0807%" height="15" fill="rgb(206,58,22)" fg:x="1075" fg:w="1"/><text x="87.0135%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.7635%" y="501" width="0.0807%" height="15" fill="rgb(250,9,45)" fg:x="1075" fg:w="1"/><text x="87.0135%" y="511.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="86.9249%" y="437" width="0.0807%" height="15" fill="rgb(225,148,14)" fg:x="1077" fg:w="1"/><text x="87.1749%" y="447.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="86.9249%" y="421" width="0.0807%" height="15" fill="rgb(205,178,40)" fg:x="1077" fg:w="1"/><text x="87.1749%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.0056%" y="357" width="0.0807%" height="15" fill="rgb(215,201,4)" fg:x="1078" fg:w="1"/><text x="87.2556%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0056%" y="341" width="0.0807%" height="15" fill="rgb(219,223,24)" fg:x="1078" fg:w="1"/><text x="87.2556%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.0056%" y="325" width="0.0807%" height="15" fill="rgb(217,19,31)" fg:x="1078" fg:w="1"/><text x="87.2556%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="87.0056%" y="309" width="0.0807%" height="15" fill="rgb(235,33,3)" fg:x="1078" fg:w="1"/><text x="87.2556%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.0056%" y="293" width="0.0807%" height="15" fill="rgb(221,39,18)" fg:x="1078" fg:w="1"/><text x="87.2556%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="87.0056%" y="277" width="0.0807%" height="15" fill="rgb(242,162,33)" fg:x="1078" fg:w="1"/><text x="87.2556%" y="287.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="87.0056%" y="421" width="0.1614%" height="15" fill="rgb(233,215,28)" fg:x="1078" fg:w="2"/><text x="87.2556%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="87.0056%" y="405" width="0.1614%" height="15" fill="rgb(212,117,9)" fg:x="1078" fg:w="2"/><text x="87.2556%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="87.0056%" y="389" width="0.1614%" height="15" fill="rgb(237,70,47)" fg:x="1078" fg:w="2"/><text x="87.2556%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.0056%" y="373" width="0.1614%" height="15" fill="rgb(206,177,13)" fg:x="1078" fg:w="2"/><text x="87.2556%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.0864%" y="357" width="0.0807%" height="15" fill="rgb(209,174,33)" fg:x="1079" fg:w="1"/><text x="87.3364%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0864%" y="341" width="0.0807%" height="15" fill="rgb(226,6,11)" fg:x="1079" fg:w="1"/><text x="87.3364%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.0864%" y="325" width="0.0807%" height="15" fill="rgb(240,214,6)" fg:x="1079" fg:w="1"/><text x="87.3364%" y="335.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (8 samples, 0.65%)</title><rect x="86.8442%" y="517" width="0.6457%" height="15" fill="rgb(254,214,40)" fg:x="1076" fg:w="8"/><text x="87.0942%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.65%)</title><rect x="86.8442%" y="501" width="0.6457%" height="15" fill="rgb(230,187,15)" fg:x="1076" fg:w="8"/><text x="87.0942%" y="511.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.65%)</title><rect x="86.8442%" y="485" width="0.6457%" height="15" fill="rgb(250,11,27)" fg:x="1076" fg:w="8"/><text x="87.0942%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.56%)</title><rect x="86.9249%" y="469" width="0.5650%" height="15" fill="rgb(243,107,19)" fg:x="1077" fg:w="7"/><text x="87.1749%" y="479.50"></text></g><g><title>engine::internal::Entities::prepare_entity (7 samples, 0.56%)</title><rect x="86.9249%" y="453" width="0.5650%" height="15" fill="rgb(253,66,26)" fg:x="1077" fg:w="7"/><text x="87.1749%" y="463.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.48%)</title><rect x="87.0056%" y="437" width="0.4843%" height="15" fill="rgb(228,43,8)" fg:x="1078" fg:w="6"/><text x="87.2556%" y="447.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="87.1671%" y="421" width="0.3228%" height="15" fill="rgb(232,197,36)" fg:x="1080" fg:w="4"/><text x="87.4171%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="87.1671%" y="405" width="0.3228%" height="15" fill="rgb(221,182,31)" fg:x="1080" fg:w="4"/><text x="87.4171%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="87.1671%" y="389" width="0.3228%" height="15" fill="rgb(244,25,36)" fg:x="1080" fg:w="4"/><text x="87.4171%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="87.1671%" y="373" width="0.3228%" height="15" fill="rgb(247,101,19)" fg:x="1080" fg:w="4"/><text x="87.4171%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="87.1671%" y="357" width="0.3228%" height="15" fill="rgb(223,117,19)" fg:x="1080" fg:w="4"/><text x="87.4171%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="87.2478%" y="341" width="0.2421%" height="15" fill="rgb(249,63,38)" fg:x="1081" fg:w="3"/><text x="87.4978%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="87.2478%" y="325" width="0.2421%" height="15" fill="rgb(220,143,23)" fg:x="1081" fg:w="3"/><text x="87.4978%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="87.2478%" y="309" width="0.2421%" height="15" fill="rgb(252,183,22)" fg:x="1081" fg:w="3"/><text x="87.4978%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="87.3285%" y="293" width="0.1614%" height="15" fill="rgb(243,176,15)" fg:x="1082" fg:w="2"/><text x="87.5785%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.4092%" y="277" width="0.0807%" height="15" fill="rgb(244,204,46)" fg:x="1083" fg:w="1"/><text x="87.6592%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="87.4092%" y="261" width="0.0807%" height="15" fill="rgb(227,28,54)" fg:x="1083" fg:w="1"/><text x="87.6592%" y="271.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (9 samples, 0.73%)</title><rect x="86.8442%" y="533" width="0.7264%" height="15" fill="rgb(231,10,15)" fg:x="1076" fg:w="9"/><text x="87.0942%" y="543.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="87.4899%" y="517" width="0.0807%" height="15" fill="rgb(210,200,17)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="87.4899%" y="501" width="0.0807%" height="15" fill="rgb(251,106,46)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.4899%" y="485" width="0.0807%" height="15" fill="rgb(218,211,15)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.4899%" y="469" width="0.0807%" height="15" fill="rgb(239,62,10)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.4899%" y="453" width="0.0807%" height="15" fill="rgb(225,53,53)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.4899%" y="437" width="0.0807%" height="15" fill="rgb(207,16,24)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.4899%" y="421" width="0.0807%" height="15" fill="rgb(217,52,28)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.4899%" y="405" width="0.0807%" height="15" fill="rgb(246,1,5)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.4899%" y="389" width="0.0807%" height="15" fill="rgb(221,29,26)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.4899%" y="373" width="0.0807%" height="15" fill="rgb(250,133,32)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.4899%" y="357" width="0.0807%" height="15" fill="rgb(236,63,16)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.4899%" y="341" width="0.0807%" height="15" fill="rgb(231,159,14)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.4899%" y="325" width="0.0807%" height="15" fill="rgb(207,102,36)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="87.4899%" y="309" width="0.0807%" height="15" fill="rgb(230,224,31)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="87.4899%" y="293" width="0.0807%" height="15" fill="rgb(215,182,16)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="87.4899%" y="277" width="0.0807%" height="15" fill="rgb(226,113,2)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="87.4899%" y="261" width="0.0807%" height="15" fill="rgb(241,18,35)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="87.4899%" y="245" width="0.0807%" height="15" fill="rgb(240,165,44)" fg:x="1084" fg:w="1"/><text x="87.7399%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.2163%" y="405" width="0.0807%" height="15" fill="rgb(229,130,47)" fg:x="1093" fg:w="1"/><text x="88.4663%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="88.2163%" y="421" width="0.1614%" height="15" fill="rgb(223,93,7)" fg:x="1093" fg:w="2"/><text x="88.4663%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="88.2970%" y="405" width="0.0807%" height="15" fill="rgb(205,180,36)" fg:x="1094" fg:w="1"/><text x="88.5470%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="87.9742%" y="437" width="0.4843%" height="15" fill="rgb(221,103,28)" fg:x="1090" fg:w="6"/><text x="88.2242%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.3777%" y="421" width="0.0807%" height="15" fill="rgb(212,4,3)" fg:x="1095" fg:w="1"/><text x="88.6277%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="87.9742%" y="453" width="0.5650%" height="15" fill="rgb(209,221,53)" fg:x="1090" fg:w="7"/><text x="88.2242%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.4584%" y="437" width="0.0807%" height="15" fill="rgb(233,229,52)" fg:x="1096" fg:w="1"/><text x="88.7084%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5391%" y="453" width="0.0807%" height="15" fill="rgb(254,127,37)" fg:x="1097" fg:w="1"/><text x="88.7891%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.89%)</title><rect x="87.8935%" y="469" width="0.8878%" height="15" fill="rgb(207,161,26)" fg:x="1089" fg:w="11"/><text x="88.1435%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (2 samples, 0.16%)</title><rect x="88.6199%" y="453" width="0.1614%" height="15" fill="rgb(223,75,5)" fg:x="1098" fg:w="2"/><text x="88.8699%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (15 samples, 1.21%)</title><rect x="87.6513%" y="501" width="1.2107%" height="15" fill="rgb(235,115,52)" fg:x="1086" fg:w="15"/><text x="87.9013%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.21%)</title><rect x="87.6513%" y="485" width="1.2107%" height="15" fill="rgb(240,91,46)" fg:x="1086" fg:w="15"/><text x="87.9013%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.7813%" y="469" width="0.0807%" height="15" fill="rgb(251,144,21)" fg:x="1100" fg:w="1"/><text x="89.0313%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.8620%" y="485" width="0.0807%" height="15" fill="rgb(247,220,47)" fg:x="1101" fg:w="1"/><text x="89.1120%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.8620%" y="469" width="0.0807%" height="15" fill="rgb(253,122,1)" fg:x="1101" fg:w="1"/><text x="89.1120%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.8620%" y="453" width="0.0807%" height="15" fill="rgb(221,0,24)" fg:x="1101" fg:w="1"/><text x="89.1120%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.8620%" y="437" width="0.0807%" height="15" fill="rgb(220,204,54)" fg:x="1101" fg:w="1"/><text x="89.1120%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.8620%" y="421" width="0.0807%" height="15" fill="rgb(205,96,25)" fg:x="1101" fg:w="1"/><text x="89.1120%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.8620%" y="405" width="0.0807%" height="15" fill="rgb(247,77,20)" fg:x="1101" fg:w="1"/><text x="89.1120%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.8620%" y="389" width="0.0807%" height="15" fill="rgb(245,151,8)" fg:x="1101" fg:w="1"/><text x="89.1120%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.8620%" y="373" width="0.0807%" height="15" fill="rgb(242,158,39)" fg:x="1101" fg:w="1"/><text x="89.1120%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.8620%" y="357" width="0.0807%" height="15" fill="rgb(222,214,50)" fg:x="1101" fg:w="1"/><text x="89.1120%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.8620%" y="341" width="0.0807%" height="15" fill="rgb(229,60,39)" fg:x="1101" fg:w="1"/><text x="89.1120%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.8620%" y="325" width="0.0807%" height="15" fill="rgb(240,148,18)" fg:x="1101" fg:w="1"/><text x="89.1120%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.8620%" y="309" width="0.0807%" height="15" fill="rgb(215,96,11)" fg:x="1101" fg:w="1"/><text x="89.1120%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="89.0234%" y="453" width="0.2421%" height="15" fill="rgb(238,162,53)" fg:x="1103" fg:w="3"/><text x="89.2734%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.2655%" y="453" width="0.0807%" height="15" fill="rgb(214,83,18)" fg:x="1106" fg:w="1"/><text x="89.5155%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="89.0234%" y="469" width="0.4036%" height="15" fill="rgb(248,117,24)" fg:x="1103" fg:w="5"/><text x="89.2734%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="89.3462%" y="453" width="0.0807%" height="15" fill="rgb(238,190,6)" fg:x="1107" fg:w="1"/><text x="89.5962%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="89.3462%" y="437" width="0.0807%" height="15" fill="rgb(213,51,6)" fg:x="1107" fg:w="1"/><text x="89.5962%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="89.3462%" y="421" width="0.0807%" height="15" fill="rgb(212,136,1)" fg:x="1107" fg:w="1"/><text x="89.5962%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.3462%" y="405" width="0.0807%" height="15" fill="rgb(221,192,14)" fg:x="1107" fg:w="1"/><text x="89.5962%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.3462%" y="389" width="0.0807%" height="15" fill="rgb(244,38,54)" fg:x="1107" fg:w="1"/><text x="89.5962%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.3462%" y="373" width="0.0807%" height="15" fill="rgb(240,45,28)" fg:x="1107" fg:w="1"/><text x="89.5962%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.3462%" y="357" width="0.0807%" height="15" fill="rgb(240,123,12)" fg:x="1107" fg:w="1"/><text x="89.5962%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="89.4270%" y="437" width="0.0807%" height="15" fill="rgb(216,14,30)" fg:x="1108" fg:w="1"/><text x="89.6770%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="89.4270%" y="421" width="0.0807%" height="15" fill="rgb(212,50,24)" fg:x="1108" fg:w="1"/><text x="89.6770%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="89.4270%" y="469" width="0.1614%" height="15" fill="rgb(253,229,47)" fg:x="1108" fg:w="2"/><text x="89.6770%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="89.4270%" y="453" width="0.1614%" height="15" fill="rgb(214,26,17)" fg:x="1108" fg:w="2"/><text x="89.6770%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.5077%" y="437" width="0.0807%" height="15" fill="rgb(252,60,11)" fg:x="1109" fg:w="1"/><text x="89.7577%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="89.5077%" y="421" width="0.0807%" height="15" fill="rgb(209,59,37)" fg:x="1109" fg:w="1"/><text x="89.7577%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.5077%" y="405" width="0.0807%" height="15" fill="rgb(228,126,53)" fg:x="1109" fg:w="1"/><text x="89.7577%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="89.5884%" y="469" width="0.0807%" height="15" fill="rgb(233,99,2)" fg:x="1110" fg:w="1"/><text x="89.8384%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="89.5884%" y="453" width="0.0807%" height="15" fill="rgb(217,106,34)" fg:x="1110" fg:w="1"/><text x="89.8384%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="89.5884%" y="437" width="0.0807%" height="15" fill="rgb(222,46,19)" fg:x="1110" fg:w="1"/><text x="89.8384%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.5884%" y="421" width="0.0807%" height="15" fill="rgb(251,87,31)" fg:x="1110" fg:w="1"/><text x="89.8384%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.7498%" y="405" width="0.0807%" height="15" fill="rgb(213,70,51)" fg:x="1112" fg:w="1"/><text x="89.9998%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="89.8305%" y="277" width="0.0807%" height="15" fill="rgb(229,144,18)" fg:x="1113" fg:w="1"/><text x="90.0805%" y="287.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="89.8305%" y="261" width="0.0807%" height="15" fill="rgb(254,60,26)" fg:x="1113" fg:w="1"/><text x="90.0805%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.8305%" y="245" width="0.0807%" height="15" fill="rgb(243,127,51)" fg:x="1113" fg:w="1"/><text x="90.0805%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.8305%" y="229" width="0.0807%" height="15" fill="rgb(221,51,25)" fg:x="1113" fg:w="1"/><text x="90.0805%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.8305%" y="213" width="0.0807%" height="15" fill="rgb(205,42,7)" fg:x="1113" fg:w="1"/><text x="90.0805%" y="223.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="89.8305%" y="405" width="0.1614%" height="15" fill="rgb(236,177,48)" fg:x="1113" fg:w="2"/><text x="90.0805%" y="415.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="89.8305%" y="389" width="0.1614%" height="15" fill="rgb(226,79,31)" fg:x="1113" fg:w="2"/><text x="90.0805%" y="399.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (2 samples, 0.16%)</title><rect x="89.8305%" y="373" width="0.1614%" height="15" fill="rgb(216,170,12)" fg:x="1113" fg:w="2"/><text x="90.0805%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (2 samples, 0.16%)</title><rect x="89.8305%" y="357" width="0.1614%" height="15" fill="rgb(208,62,51)" fg:x="1113" fg:w="2"/><text x="90.0805%" y="367.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="89.8305%" y="341" width="0.1614%" height="15" fill="rgb(254,129,9)" fg:x="1113" fg:w="2"/><text x="90.0805%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="89.8305%" y="325" width="0.1614%" height="15" fill="rgb(243,209,31)" fg:x="1113" fg:w="2"/><text x="90.0805%" y="335.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="89.8305%" y="309" width="0.1614%" height="15" fill="rgb(213,159,23)" fg:x="1113" fg:w="2"/><text x="90.0805%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity (2 samples, 0.16%)</title><rect x="89.8305%" y="293" width="0.1614%" height="15" fill="rgb(249,77,39)" fg:x="1113" fg:w="2"/><text x="90.0805%" y="303.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="89.9112%" y="277" width="0.0807%" height="15" fill="rgb(230,13,33)" fg:x="1114" fg:w="1"/><text x="90.1612%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.9112%" y="261" width="0.0807%" height="15" fill="rgb(215,215,7)" fg:x="1114" fg:w="1"/><text x="90.1612%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.9112%" y="245" width="0.0807%" height="15" fill="rgb(222,92,25)" fg:x="1114" fg:w="1"/><text x="90.1612%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.9112%" y="229" width="0.0807%" height="15" fill="rgb(215,173,22)" fg:x="1114" fg:w="1"/><text x="90.1612%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.9112%" y="213" width="0.0807%" height="15" fill="rgb(247,205,52)" fg:x="1114" fg:w="1"/><text x="90.1612%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.9112%" y="197" width="0.0807%" height="15" fill="rgb(240,210,37)" fg:x="1114" fg:w="1"/><text x="90.1612%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.9112%" y="181" width="0.0807%" height="15" fill="rgb(224,13,10)" fg:x="1114" fg:w="1"/><text x="90.1612%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.9112%" y="165" width="0.0807%" height="15" fill="rgb(209,48,33)" fg:x="1114" fg:w="1"/><text x="90.1612%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.9112%" y="149" width="0.0807%" height="15" fill="rgb(228,219,23)" fg:x="1114" fg:w="1"/><text x="90.1612%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.9112%" y="133" width="0.0807%" height="15" fill="rgb(239,46,49)" fg:x="1114" fg:w="1"/><text x="90.1612%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.9112%" y="117" width="0.0807%" height="15" fill="rgb(206,172,51)" fg:x="1114" fg:w="1"/><text x="90.1612%" y="127.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="89.9919%" y="373" width="0.0807%" height="15" fill="rgb(213,212,35)" fg:x="1115" fg:w="1"/><text x="90.2419%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="89.9919%" y="357" width="0.0807%" height="15" fill="rgb(252,40,27)" fg:x="1115" fg:w="1"/><text x="90.2419%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="90.0726%" y="373" width="0.1614%" height="15" fill="rgb(212,33,41)" fg:x="1116" fg:w="2"/><text x="90.3226%" y="383.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (7 samples, 0.56%)</title><rect x="89.7498%" y="421" width="0.5650%" height="15" fill="rgb(232,160,27)" fg:x="1112" fg:w="7"/><text x="89.9998%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="89.9919%" y="405" width="0.3228%" height="15" fill="rgb(244,160,20)" fg:x="1115" fg:w="4"/><text x="90.2419%" y="415.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="89.9919%" y="389" width="0.3228%" height="15" fill="rgb(205,66,20)" fg:x="1115" fg:w="4"/><text x="90.2419%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.2341%" y="373" width="0.0807%" height="15" fill="rgb(236,158,6)" fg:x="1118" fg:w="1"/><text x="90.4841%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.2341%" y="357" width="0.0807%" height="15" fill="rgb(232,25,36)" fg:x="1118" fg:w="1"/><text x="90.4841%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="90.2341%" y="341" width="0.0807%" height="15" fill="rgb(220,153,35)" fg:x="1118" fg:w="1"/><text x="90.4841%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="90.2341%" y="325" width="0.0807%" height="15" fill="rgb(216,5,8)" fg:x="1118" fg:w="1"/><text x="90.4841%" y="335.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="90.2341%" y="309" width="0.0807%" height="15" fill="rgb(240,97,3)" fg:x="1118" fg:w="1"/><text x="90.4841%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="90.3148%" y="405" width="0.0807%" height="15" fill="rgb(220,99,26)" fg:x="1119" fg:w="1"/><text x="90.5648%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.3148%" y="389" width="0.0807%" height="15" fill="rgb(237,96,2)" fg:x="1119" fg:w="1"/><text x="90.5648%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.3148%" y="373" width="0.0807%" height="15" fill="rgb(217,197,47)" fg:x="1119" fg:w="1"/><text x="90.5648%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.3148%" y="357" width="0.0807%" height="15" fill="rgb(252,133,54)" fg:x="1119" fg:w="1"/><text x="90.5648%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.3148%" y="341" width="0.0807%" height="15" fill="rgb(233,37,30)" fg:x="1119" fg:w="1"/><text x="90.5648%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.3148%" y="325" width="0.0807%" height="15" fill="rgb(239,182,12)" fg:x="1119" fg:w="1"/><text x="90.5648%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.3148%" y="309" width="0.0807%" height="15" fill="rgb(245,83,39)" fg:x="1119" fg:w="1"/><text x="90.5648%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.3148%" y="293" width="0.0807%" height="15" fill="rgb(222,109,36)" fg:x="1119" fg:w="1"/><text x="90.5648%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.3148%" y="277" width="0.0807%" height="15" fill="rgb(237,95,44)" fg:x="1119" fg:w="1"/><text x="90.5648%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.3148%" y="261" width="0.0807%" height="15" fill="rgb(216,36,54)" fg:x="1119" fg:w="1"/><text x="90.5648%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.3148%" y="245" width="0.0807%" height="15" fill="rgb(236,164,3)" fg:x="1119" fg:w="1"/><text x="90.5648%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.3148%" y="229" width="0.0807%" height="15" fill="rgb(223,15,21)" fg:x="1119" fg:w="1"/><text x="90.5648%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3148%" y="213" width="0.0807%" height="15" fill="rgb(239,191,12)" fg:x="1119" fg:w="1"/><text x="90.5648%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.5569%" y="309" width="0.0807%" height="15" fill="rgb(231,191,37)" fg:x="1122" fg:w="1"/><text x="90.8069%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7183%" y="165" width="0.0807%" height="15" fill="rgb(209,155,36)" fg:x="1124" fg:w="1"/><text x="90.9683%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7183%" y="149" width="0.0807%" height="15" fill="rgb(216,222,49)" fg:x="1124" fg:w="1"/><text x="90.9683%" y="159.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="90.7990%" y="117" width="0.0807%" height="15" fill="rgb(218,181,2)" fg:x="1125" fg:w="1"/><text x="91.0490%" y="127.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (6 samples, 0.48%)</title><rect x="90.4762%" y="373" width="0.4843%" height="15" fill="rgb(239,125,9)" fg:x="1121" fg:w="6"/><text x="90.7262%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="90.4762%" y="357" width="0.4843%" height="15" fill="rgb(233,103,7)" fg:x="1121" fg:w="6"/><text x="90.7262%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="90.4762%" y="341" width="0.4843%" height="15" fill="rgb(209,223,5)" fg:x="1121" fg:w="6"/><text x="90.7262%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.48%)</title><rect x="90.4762%" y="325" width="0.4843%" height="15" fill="rgb(234,71,27)" fg:x="1121" fg:w="6"/><text x="90.7262%" y="335.50"></text></g><g><title>engine::internal::Entities::prepare_entity (4 samples, 0.32%)</title><rect x="90.6376%" y="309" width="0.3228%" height="15" fill="rgb(251,202,16)" fg:x="1123" fg:w="4"/><text x="90.8876%" y="319.50"></text></g><g><title>kernel::model::deserialize_entity (3 samples, 0.24%)</title><rect x="90.7183%" y="293" width="0.2421%" height="15" fill="rgb(231,180,0)" fg:x="1124" fg:w="3"/><text x="90.9683%" y="303.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="90.7183%" y="277" width="0.2421%" height="15" fill="rgb(223,58,28)" fg:x="1124" fg:w="3"/><text x="90.9683%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="90.7183%" y="261" width="0.2421%" height="15" fill="rgb(250,34,24)" fg:x="1124" fg:w="3"/><text x="90.9683%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.7183%" y="245" width="0.2421%" height="15" fill="rgb(235,24,16)" fg:x="1124" fg:w="3"/><text x="90.9683%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="90.7183%" y="229" width="0.2421%" height="15" fill="rgb(219,28,33)" fg:x="1124" fg:w="3"/><text x="90.9683%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.7183%" y="213" width="0.2421%" height="15" fill="rgb(228,150,43)" fg:x="1124" fg:w="3"/><text x="90.9683%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="90.7183%" y="197" width="0.2421%" height="15" fill="rgb(221,228,36)" fg:x="1124" fg:w="3"/><text x="90.9683%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.7183%" y="181" width="0.2421%" height="15" fill="rgb(232,116,17)" fg:x="1124" fg:w="3"/><text x="90.9683%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="90.7990%" y="165" width="0.1614%" height="15" fill="rgb(220,110,51)" fg:x="1125" fg:w="2"/><text x="91.0490%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.7990%" y="149" width="0.1614%" height="15" fill="rgb(207,26,25)" fg:x="1125" fg:w="2"/><text x="91.0490%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="90.7990%" y="133" width="0.1614%" height="15" fill="rgb(223,58,19)" fg:x="1125" fg:w="2"/><text x="91.0490%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8797%" y="117" width="0.0807%" height="15" fill="rgb(234,125,39)" fg:x="1126" fg:w="1"/><text x="91.1297%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.9605%" y="373" width="0.0807%" height="15" fill="rgb(241,48,36)" fg:x="1127" fg:w="1"/><text x="91.2105%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.0412%" y="341" width="0.0807%" height="15" fill="rgb(217,148,51)" fg:x="1128" fg:w="1"/><text x="91.2912%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.1219%" y="341" width="0.0807%" height="15" fill="rgb(247,17,25)" fg:x="1129" fg:w="1"/><text x="91.3719%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.1219%" y="325" width="0.0807%" height="15" fill="rgb(219,89,38)" fg:x="1129" fg:w="1"/><text x="91.3719%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.2026%" y="341" width="0.0807%" height="15" fill="rgb(220,145,2)" fg:x="1130" fg:w="1"/><text x="91.4526%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.2026%" y="325" width="0.0807%" height="15" fill="rgb(244,66,47)" fg:x="1130" fg:w="1"/><text x="91.4526%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5254%" y="261" width="0.0807%" height="15" fill="rgb(226,182,5)" fg:x="1134" fg:w="1"/><text x="91.7754%" y="271.50"></text></g><g><title>plugins_core::tools::get_contained_keys (17 samples, 1.37%)</title><rect x="90.3148%" y="421" width="1.3721%" height="15" fill="rgb(211,98,20)" fg:x="1119" fg:w="17"/><text x="90.5648%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope (16 samples, 1.29%)</title><rect x="90.3955%" y="405" width="1.2914%" height="15" fill="rgb(217,103,52)" fg:x="1120" fg:w="16"/><text x="90.6455%" y="415.50"></text></g><g><title>kernel::model::Entity::load_scope (16 samples, 1.29%)</title><rect x="90.3955%" y="389" width="1.2914%" height="15" fill="rgb(208,125,52)" fg:x="1120" fg:w="16"/><text x="90.6455%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.65%)</title><rect x="91.0412%" y="373" width="0.6457%" height="15" fill="rgb(244,70,13)" fg:x="1128" fg:w="8"/><text x="91.2912%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.65%)</title><rect x="91.0412%" y="357" width="0.6457%" height="15" fill="rgb(253,124,3)" fg:x="1128" fg:w="8"/><text x="91.2912%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (5 samples, 0.40%)</title><rect x="91.2833%" y="341" width="0.4036%" height="15" fill="rgb(222,145,32)" fg:x="1131" fg:w="5"/><text x="91.5333%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (5 samples, 0.40%)</title><rect x="91.2833%" y="325" width="0.4036%" height="15" fill="rgb(232,183,47)" fg:x="1131" fg:w="5"/><text x="91.5333%" y="335.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.32%)</title><rect x="91.3640%" y="309" width="0.3228%" height="15" fill="rgb(246,226,4)" fg:x="1132" fg:w="4"/><text x="91.6140%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="91.4447%" y="293" width="0.2421%" height="15" fill="rgb(228,185,46)" fg:x="1133" fg:w="3"/><text x="91.6947%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="91.4447%" y="277" width="0.2421%" height="15" fill="rgb(213,196,4)" fg:x="1133" fg:w="3"/><text x="91.6947%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="91.6061%" y="261" width="0.0807%" height="15" fill="rgb(212,2,45)" fg:x="1135" fg:w="1"/><text x="91.8561%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.6868%" y="357" width="0.0807%" height="15" fill="rgb(217,145,50)" fg:x="1136" fg:w="1"/><text x="91.9368%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.6868%" y="341" width="0.0807%" height="15" fill="rgb(242,10,46)" fg:x="1136" fg:w="1"/><text x="91.9368%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.6868%" y="325" width="0.0807%" height="15" fill="rgb(252,91,48)" fg:x="1136" fg:w="1"/><text x="91.9368%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.6868%" y="309" width="0.0807%" height="15" fill="rgb(216,72,13)" fg:x="1136" fg:w="1"/><text x="91.9368%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.6868%" y="293" width="0.0807%" height="15" fill="rgb(219,6,37)" fg:x="1136" fg:w="1"/><text x="91.9368%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="91.6868%" y="277" width="0.0807%" height="15" fill="rgb(236,185,40)" fg:x="1136" fg:w="1"/><text x="91.9368%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="91.6868%" y="261" width="0.0807%" height="15" fill="rgb(208,81,48)" fg:x="1136" fg:w="1"/><text x="91.9368%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.6868%" y="373" width="0.1614%" height="15" fill="rgb(211,42,33)" fg:x="1136" fg:w="2"/><text x="91.9368%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.7676%" y="357" width="0.0807%" height="15" fill="rgb(211,90,39)" fg:x="1137" fg:w="1"/><text x="92.0176%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.7676%" y="341" width="0.0807%" height="15" fill="rgb(218,136,12)" fg:x="1137" fg:w="1"/><text x="92.0176%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (28 samples, 2.26%)</title><rect x="89.6691%" y="437" width="2.2599%" height="15" fill="rgb(234,12,32)" fg:x="1111" fg:w="28"/><text x="89.9191%" y="447.50">&lt;..</text></g><g><title>plugins_core::tools::get_occupant_keys (3 samples, 0.24%)</title><rect x="91.6868%" y="421" width="0.2421%" height="15" fill="rgb(221,164,18)" fg:x="1136" fg:w="3"/><text x="91.9368%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="91.6868%" y="405" width="0.2421%" height="15" fill="rgb(239,135,14)" fg:x="1136" fg:w="3"/><text x="91.9368%" y="415.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="91.6868%" y="389" width="0.2421%" height="15" fill="rgb(226,198,47)" fg:x="1136" fg:w="3"/><text x="91.9368%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="91.8483%" y="373" width="0.0807%" height="15" fill="rgb(244,121,47)" fg:x="1138" fg:w="1"/><text x="92.0983%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 2.34%)</title><rect x="89.6691%" y="453" width="2.3406%" height="15" fill="rgb(226,21,48)" fg:x="1111" fg:w="29"/><text x="89.9191%" y="463.50">&lt;..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9290%" y="437" width="0.0807%" height="15" fill="rgb(215,178,47)" fg:x="1139" fg:w="1"/><text x="92.1790%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.3325%" y="325" width="0.0807%" height="15" fill="rgb(206,212,19)" fg:x="1144" fg:w="1"/><text x="92.5825%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.3325%" y="309" width="0.0807%" height="15" fill="rgb(230,104,34)" fg:x="1144" fg:w="1"/><text x="92.5825%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.3325%" y="293" width="0.0807%" height="15" fill="rgb(210,96,51)" fg:x="1144" fg:w="1"/><text x="92.5825%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.3325%" y="277" width="0.0807%" height="15" fill="rgb(229,111,47)" fg:x="1144" fg:w="1"/><text x="92.5825%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.3325%" y="261" width="0.0807%" height="15" fill="rgb(218,174,45)" fg:x="1144" fg:w="1"/><text x="92.5825%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.3325%" y="245" width="0.0807%" height="15" fill="rgb(215,21,32)" fg:x="1144" fg:w="1"/><text x="92.5825%" y="255.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="92.3325%" y="229" width="0.0807%" height="15" fill="rgb(235,72,21)" fg:x="1144" fg:w="1"/><text x="92.5825%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="92.3325%" y="213" width="0.0807%" height="15" fill="rgb(250,113,30)" fg:x="1144" fg:w="1"/><text x="92.5825%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="92.1711%" y="405" width="0.3228%" height="15" fill="rgb(244,136,34)" fg:x="1142" fg:w="4"/><text x="92.4211%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.3325%" y="389" width="0.1614%" height="15" fill="rgb(213,226,47)" fg:x="1144" fg:w="2"/><text x="92.5825%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="92.3325%" y="373" width="0.1614%" height="15" fill="rgb(224,136,40)" fg:x="1144" fg:w="2"/><text x="92.5825%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="92.3325%" y="357" width="0.1614%" height="15" fill="rgb(253,124,12)" fg:x="1144" fg:w="2"/><text x="92.5825%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="92.3325%" y="341" width="0.1614%" height="15" fill="rgb(210,67,8)" fg:x="1144" fg:w="2"/><text x="92.5825%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="92.4132%" y="325" width="0.0807%" height="15" fill="rgb(210,204,0)" fg:x="1145" fg:w="1"/><text x="92.6632%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.4132%" y="309" width="0.0807%" height="15" fill="rgb(217,179,22)" fg:x="1145" fg:w="1"/><text x="92.6632%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="92.4939%" y="405" width="0.1614%" height="15" fill="rgb(237,192,33)" fg:x="1146" fg:w="2"/><text x="92.7439%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="92.5747%" y="389" width="0.0807%" height="15" fill="rgb(211,104,28)" fg:x="1147" fg:w="1"/><text x="92.8247%" y="399.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="92.5747%" y="373" width="0.0807%" height="15" fill="rgb(214,75,30)" fg:x="1147" fg:w="1"/><text x="92.8247%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.5747%" y="357" width="0.0807%" height="15" fill="rgb(220,227,12)" fg:x="1147" fg:w="1"/><text x="92.8247%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="92.5747%" y="341" width="0.0807%" height="15" fill="rgb(233,134,28)" fg:x="1147" fg:w="1"/><text x="92.8247%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="93.4625%" y="197" width="0.0807%" height="15" fill="rgb(215,146,24)" fg:x="1158" fg:w="1"/><text x="93.7125%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="93.4625%" y="181" width="0.0807%" height="15" fill="rgb(248,227,20)" fg:x="1158" fg:w="1"/><text x="93.7125%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="93.4625%" y="165" width="0.0807%" height="15" fill="rgb(250,44,42)" fg:x="1158" fg:w="1"/><text x="93.7125%" y="175.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="93.4625%" y="149" width="0.0807%" height="15" fill="rgb(219,5,35)" fg:x="1158" fg:w="1"/><text x="93.7125%" y="159.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="93.4625%" y="133" width="0.0807%" height="15" fill="rgb(241,132,32)" fg:x="1158" fg:w="1"/><text x="93.7125%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="93.5432%" y="197" width="0.1614%" height="15" fill="rgb(234,212,51)" fg:x="1159" fg:w="2"/><text x="93.7932%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.6239%" y="181" width="0.0807%" height="15" fill="rgb(242,173,29)" fg:x="1160" fg:w="1"/><text x="93.8739%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.73%)</title><rect x="93.2203%" y="213" width="0.7264%" height="15" fill="rgb(212,159,2)" fg:x="1155" fg:w="9"/><text x="93.4703%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="93.7046%" y="197" width="0.2421%" height="15" fill="rgb(238,165,31)" fg:x="1161" fg:w="3"/><text x="93.9546%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="93.7046%" y="181" width="0.2421%" height="15" fill="rgb(241,57,36)" fg:x="1161" fg:w="3"/><text x="93.9546%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="93.7853%" y="165" width="0.1614%" height="15" fill="rgb(249,7,4)" fg:x="1162" fg:w="2"/><text x="94.0353%" y="175.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="94.0274%" y="197" width="0.1614%" height="15" fill="rgb(250,137,44)" fg:x="1165" fg:w="2"/><text x="94.2774%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (13 samples, 1.05%)</title><rect x="93.2203%" y="229" width="1.0492%" height="15" fill="rgb(244,185,1)" fg:x="1155" fg:w="13"/><text x="93.4703%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="93.9467%" y="213" width="0.3228%" height="15" fill="rgb(216,5,53)" fg:x="1164" fg:w="4"/><text x="94.1967%" y="223.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="94.1889%" y="197" width="0.0807%" height="15" fill="rgb(234,89,21)" fg:x="1167" fg:w="1"/><text x="94.4389%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="94.1889%" y="181" width="0.0807%" height="15" fill="rgb(250,81,43)" fg:x="1167" fg:w="1"/><text x="94.4389%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="94.2696%" y="165" width="0.0807%" height="15" fill="rgb(243,132,11)" fg:x="1168" fg:w="1"/><text x="94.5196%" y="175.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (15 samples, 1.21%)</title><rect x="93.2203%" y="245" width="1.2107%" height="15" fill="rgb(253,159,28)" fg:x="1155" fg:w="15"/><text x="93.4703%" y="255.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="94.2696%" y="229" width="0.1614%" height="15" fill="rgb(237,167,34)" fg:x="1168" fg:w="2"/><text x="94.5196%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="94.2696%" y="213" width="0.1614%" height="15" fill="rgb(237,16,50)" fg:x="1168" fg:w="2"/><text x="94.5196%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="94.2696%" y="197" width="0.1614%" height="15" fill="rgb(247,125,2)" fg:x="1168" fg:w="2"/><text x="94.5196%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="94.2696%" y="181" width="0.1614%" height="15" fill="rgb(254,35,3)" fg:x="1168" fg:w="2"/><text x="94.5196%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="94.3503%" y="165" width="0.0807%" height="15" fill="rgb(237,209,21)" fg:x="1169" fg:w="1"/><text x="94.6003%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.3503%" y="149" width="0.0807%" height="15" fill="rgb(224,122,20)" fg:x="1169" fg:w="1"/><text x="94.6003%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="94.4310%" y="245" width="0.1614%" height="15" fill="rgb(224,11,46)" fg:x="1170" fg:w="2"/><text x="94.6810%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.5117%" y="229" width="0.0807%" height="15" fill="rgb(248,21,33)" fg:x="1171" fg:w="1"/><text x="94.7617%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 1.53%)</title><rect x="93.1396%" y="261" width="1.5335%" height="15" fill="rgb(222,144,7)" fg:x="1154" fg:w="19"/><text x="93.3896%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5924%" y="245" width="0.0807%" height="15" fill="rgb(205,141,37)" fg:x="1172" fg:w="1"/><text x="94.8424%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5924%" y="229" width="0.0807%" height="15" fill="rgb(237,130,8)" fg:x="1172" fg:w="1"/><text x="94.8424%" y="239.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (24 samples, 1.94%)</title><rect x="92.9782%" y="293" width="1.9370%" height="15" fill="rgb(209,179,39)" fg:x="1152" fg:w="24"/><text x="93.2282%" y="303.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (22 samples, 1.78%)</title><rect x="93.1396%" y="277" width="1.7756%" height="15" fill="rgb(207,52,17)" fg:x="1154" fg:w="22"/><text x="93.3896%" y="287.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="94.6731%" y="261" width="0.2421%" height="15" fill="rgb(253,158,17)" fg:x="1173" fg:w="3"/><text x="94.9231%" y="271.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="94.6731%" y="245" width="0.2421%" height="15" fill="rgb(208,19,53)" fg:x="1173" fg:w="3"/><text x="94.9231%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.9153%" y="293" width="0.0807%" height="15" fill="rgb(233,152,13)" fg:x="1176" fg:w="1"/><text x="95.1653%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.9153%" y="277" width="0.0807%" height="15" fill="rgb(231,84,1)" fg:x="1176" fg:w="1"/><text x="95.1653%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 2.66%)</title><rect x="92.6554%" y="309" width="2.6634%" height="15" fill="rgb(229,142,48)" fg:x="1148" fg:w="33"/><text x="92.9054%" y="319.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="94.9960%" y="293" width="0.3228%" height="15" fill="rgb(248,70,29)" fg:x="1177" fg:w="4"/><text x="95.2460%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.32%)</title><rect x="94.9960%" y="277" width="0.3228%" height="15" fill="rgb(250,85,7)" fg:x="1177" fg:w="4"/><text x="95.2460%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.24%)</title><rect x="95.0767%" y="261" width="0.2421%" height="15" fill="rgb(235,140,43)" fg:x="1178" fg:w="3"/><text x="95.3267%" y="271.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (41 samples, 3.31%)</title><rect x="92.6554%" y="341" width="3.3091%" height="15" fill="rgb(216,0,5)" fg:x="1148" fg:w="41"/><text x="92.9054%" y="351.50">&lt;rp..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (41 samples, 3.31%)</title><rect x="92.6554%" y="325" width="3.3091%" height="15" fill="rgb(223,167,29)" fg:x="1148" fg:w="41"/><text x="92.9054%" y="335.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.65%)</title><rect x="95.3188%" y="309" width="0.6457%" height="15" fill="rgb(229,150,33)" fg:x="1181" fg:w="8"/><text x="95.5688%" y="319.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="95.5609%" y="293" width="0.4036%" height="15" fill="rgb(227,26,52)" fg:x="1184" fg:w="5"/><text x="95.8109%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.9645%" y="341" width="0.0807%" height="15" fill="rgb(250,60,52)" fg:x="1189" fg:w="1"/><text x="96.2145%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.40%)</title><rect x="96.2066%" y="325" width="0.4036%" height="15" fill="rgb(228,81,46)" fg:x="1192" fg:w="5"/><text x="96.4566%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.5295%" y="309" width="0.0807%" height="15" fill="rgb(225,218,31)" fg:x="1196" fg:w="1"/><text x="96.7795%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50 samples, 4.04%)</title><rect x="92.6554%" y="357" width="4.0355%" height="15" fill="rgb(230,35,16)" fg:x="1148" fg:w="50"/><text x="92.9054%" y="367.50">&lt;cor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.65%)</title><rect x="96.0452%" y="341" width="0.6457%" height="15" fill="rgb(247,100,0)" fg:x="1190" fg:w="8"/><text x="96.2952%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6102%" y="325" width="0.0807%" height="15" fill="rgb(223,135,11)" fg:x="1197" fg:w="1"/><text x="96.8602%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (54 samples, 4.36%)</title><rect x="92.6554%" y="389" width="4.3584%" height="15" fill="rgb(207,136,0)" fg:x="1148" fg:w="54"/><text x="92.9054%" y="399.50">&lt;rpc_..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (54 samples, 4.36%)</title><rect x="92.6554%" y="373" width="4.3584%" height="15" fill="rgb(246,131,25)" fg:x="1148" fg:w="54"/><text x="92.9054%" y="383.50">&lt;std:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="96.6909%" y="357" width="0.3228%" height="15" fill="rgb(209,47,12)" fg:x="1198" fg:w="4"/><text x="96.9409%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="96.8523%" y="341" width="0.1614%" height="15" fill="rgb(221,25,16)" fg:x="1200" fg:w="2"/><text x="97.1023%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="97.0944%" y="341" width="0.1614%" height="15" fill="rgb(223,164,33)" fg:x="1203" fg:w="2"/><text x="97.3444%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="97.2559%" y="341" width="0.0807%" height="15" fill="rgb(220,26,23)" fg:x="1205" fg:w="1"/><text x="97.5059%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="97.2559%" y="325" width="0.0807%" height="15" fill="rgb(231,224,1)" fg:x="1205" fg:w="1"/><text x="97.5059%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="97.3366%" y="341" width="0.3228%" height="15" fill="rgb(229,221,24)" fg:x="1206" fg:w="4"/><text x="97.5866%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="97.4173%" y="325" width="0.2421%" height="15" fill="rgb(213,34,10)" fg:x="1207" fg:w="3"/><text x="97.6673%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="97.5787%" y="309" width="0.0807%" height="15" fill="rgb(215,33,11)" fg:x="1209" fg:w="1"/><text x="97.8287%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="97.6594%" y="325" width="0.0807%" height="15" fill="rgb(216,20,41)" fg:x="1210" fg:w="1"/><text x="97.9094%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="97.6594%" y="341" width="0.1614%" height="15" fill="rgb(228,43,31)" fg:x="1210" fg:w="2"/><text x="97.9094%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.7401%" y="325" width="0.0807%" height="15" fill="rgb(227,83,26)" fg:x="1211" fg:w="1"/><text x="97.9901%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="97.7401%" y="309" width="0.0807%" height="15" fill="rgb(217,168,19)" fg:x="1211" fg:w="1"/><text x="97.9901%" y="319.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="97.8208%" y="341" width="0.0807%" height="15" fill="rgb(231,34,33)" fg:x="1212" fg:w="1"/><text x="98.0708%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="97.9015%" y="341" width="0.0807%" height="15" fill="rgb(230,120,51)" fg:x="1213" fg:w="1"/><text x="98.1515%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.9015%" y="325" width="0.0807%" height="15" fill="rgb(215,138,27)" fg:x="1213" fg:w="1"/><text x="98.1515%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9015%" y="309" width="0.0807%" height="15" fill="rgb(246,80,47)" fg:x="1213" fg:w="1"/><text x="98.1515%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9822%" y="309" width="0.0807%" height="15" fill="rgb(215,57,53)" fg:x="1214" fg:w="1"/><text x="98.2322%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0630%" y="293" width="0.0807%" height="15" fill="rgb(229,137,5)" fg:x="1215" fg:w="1"/><text x="98.3130%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.1437%" y="293" width="0.0807%" height="15" fill="rgb(210,86,2)" fg:x="1216" fg:w="1"/><text x="98.3937%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.1437%" y="277" width="0.0807%" height="15" fill="rgb(231,226,51)" fg:x="1216" fg:w="1"/><text x="98.3937%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.1437%" y="261" width="0.0807%" height="15" fill="rgb(216,62,29)" fg:x="1216" fg:w="1"/><text x="98.3937%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2244%" y="261" width="0.0807%" height="15" fill="rgb(248,202,3)" fg:x="1217" fg:w="1"/><text x="98.4744%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2244%" y="245" width="0.0807%" height="15" fill="rgb(225,181,7)" fg:x="1217" fg:w="1"/><text x="98.4744%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2244%" y="229" width="0.0807%" height="15" fill="rgb(247,170,54)" fg:x="1217" fg:w="1"/><text x="98.4744%" y="239.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="98.3051%" y="229" width="0.0807%" height="15" fill="rgb(236,204,33)" fg:x="1218" fg:w="1"/><text x="98.5551%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="98.3051%" y="213" width="0.0807%" height="15" fill="rgb(216,45,30)" fg:x="1218" fg:w="1"/><text x="98.5551%" y="223.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="98.2244%" y="277" width="0.2421%" height="15" fill="rgb(213,203,16)" fg:x="1217" fg:w="3"/><text x="98.4744%" y="287.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="98.3051%" y="261" width="0.1614%" height="15" fill="rgb(215,46,16)" fg:x="1218" fg:w="2"/><text x="98.5551%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="98.3051%" y="245" width="0.1614%" height="15" fill="rgb(217,162,46)" fg:x="1218" fg:w="2"/><text x="98.5551%" y="255.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="98.3858%" y="229" width="0.0807%" height="15" fill="rgb(224,189,20)" fg:x="1219" fg:w="1"/><text x="98.6358%" y="239.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="98.3858%" y="213" width="0.0807%" height="15" fill="rgb(232,35,51)" fg:x="1219" fg:w="1"/><text x="98.6358%" y="223.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (7 samples, 0.56%)</title><rect x="97.9822%" y="341" width="0.5650%" height="15" fill="rgb(243,221,46)" fg:x="1214" fg:w="7"/><text x="98.2322%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="97.9822%" y="325" width="0.5650%" height="15" fill="rgb(248,16,16)" fg:x="1214" fg:w="7"/><text x="98.2322%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="98.0630%" y="309" width="0.4843%" height="15" fill="rgb(220,168,13)" fg:x="1215" fg:w="6"/><text x="98.3130%" y="319.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (4 samples, 0.32%)</title><rect x="98.2244%" y="293" width="0.3228%" height="15" fill="rgb(243,102,39)" fg:x="1217" fg:w="4"/><text x="98.4744%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.4665%" y="277" width="0.0807%" height="15" fill="rgb(245,82,32)" fg:x="1220" fg:w="1"/><text x="98.7165%" y="287.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="98.5472%" y="341" width="0.0807%" height="15" fill="rgb(230,164,19)" fg:x="1221" fg:w="1"/><text x="98.7972%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="98.6279%" y="309" width="0.0807%" height="15" fill="rgb(221,9,41)" fg:x="1222" fg:w="1"/><text x="98.8779%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="98.7086%" y="309" width="0.0807%" height="15" fill="rgb(216,93,0)" fg:x="1223" fg:w="1"/><text x="98.9586%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="98.7893%" y="261" width="0.1614%" height="15" fill="rgb(235,113,9)" fg:x="1224" fg:w="2"/><text x="99.0393%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.7893%" y="245" width="0.1614%" height="15" fill="rgb(209,224,10)" fg:x="1224" fg:w="2"/><text x="99.0393%" y="255.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="98.7893%" y="293" width="0.2421%" height="15" fill="rgb(226,54,34)" fg:x="1224" fg:w="3"/><text x="99.0393%" y="303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="98.7893%" y="277" width="0.2421%" height="15" fill="rgb(222,60,8)" fg:x="1224" fg:w="3"/><text x="99.0393%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9508%" y="261" width="0.0807%" height="15" fill="rgb(248,228,41)" fg:x="1226" fg:w="1"/><text x="99.2008%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="99.1122%" y="277" width="0.0807%" height="15" fill="rgb(226,31,32)" fg:x="1228" fg:w="1"/><text x="99.3622%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.1929%" y="261" width="0.1614%" height="15" fill="rgb(242,132,49)" fg:x="1229" fg:w="2"/><text x="99.4429%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.1929%" y="245" width="0.1614%" height="15" fill="rgb(224,194,19)" fg:x="1229" fg:w="2"/><text x="99.4429%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="99.1929%" y="229" width="0.1614%" height="15" fill="rgb(232,200,51)" fg:x="1229" fg:w="2"/><text x="99.4429%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="99.1929%" y="277" width="0.3228%" height="15" fill="rgb(235,60,46)" fg:x="1229" fg:w="4"/><text x="99.4429%" y="287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="99.3543%" y="261" width="0.1614%" height="15" fill="rgb(240,109,52)" fg:x="1231" fg:w="2"/><text x="99.6043%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="99.3543%" y="245" width="0.1614%" height="15" fill="rgb(215,78,37)" fg:x="1231" fg:w="2"/><text x="99.6043%" y="255.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="98.7893%" y="309" width="0.8071%" height="15" fill="rgb(225,141,7)" fg:x="1224" fg:w="10"/><text x="99.0393%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="99.0315%" y="293" width="0.5650%" height="15" fill="rgb(216,102,54)" fg:x="1227" fg:w="7"/><text x="99.2815%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5157%" y="277" width="0.0807%" height="15" fill="rgb(238,143,13)" fg:x="1233" fg:w="1"/><text x="99.7657%" y="287.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (133 samples, 10.73%)</title><rect x="88.9427%" y="485" width="10.7345%" height="15" fill="rgb(219,45,51)" fg:x="1102" fg:w="133"/><text x="89.1927%" y="495.50">&lt;plugins_rpc::se..</text></g><g><title>core::iter::adapters::try_process (124 samples, 10.01%)</title><rect x="89.6691%" y="469" width="10.0081%" height="15" fill="rgb(242,105,46)" fg:x="1111" fg:w="124"/><text x="89.9191%" y="479.50">core::iter::ad..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (95 samples, 7.67%)</title><rect x="92.0097%" y="453" width="7.6675%" height="15" fill="rgb(206,154,49)" fg:x="1140" fg:w="95"/><text x="92.2597%" y="463.50">alloc::vec..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (95 samples, 7.67%)</title><rect x="92.0097%" y="437" width="7.6675%" height="15" fill="rgb(239,215,4)" fg:x="1140" fg:w="95"/><text x="92.2597%" y="447.50">&lt;core::ite..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (93 samples, 7.51%)</title><rect x="92.1711%" y="421" width="7.5061%" height="15" fill="rgb(238,82,17)" fg:x="1142" fg:w="93"/><text x="92.4211%" y="431.50">plugins_rp..</text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (87 samples, 7.02%)</title><rect x="92.6554%" y="405" width="7.0218%" height="15" fill="rgb(242,49,30)" fg:x="1148" fg:w="87"/><text x="92.9054%" y="415.50">&lt;rpc_prot..</text></g><g><title>kernel::model::EntityPtr::to_json_value (33 samples, 2.66%)</title><rect x="97.0137%" y="389" width="2.6634%" height="15" fill="rgb(248,5,16)" fg:x="1202" fg:w="33"/><text x="97.2637%" y="399.50">ke..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (33 samples, 2.66%)</title><rect x="97.0137%" y="373" width="2.6634%" height="15" fill="rgb(237,138,32)" fg:x="1202" fg:w="33"/><text x="97.2637%" y="383.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (33 samples, 2.66%)</title><rect x="97.0137%" y="357" width="2.6634%" height="15" fill="rgb(235,79,45)" fg:x="1202" fg:w="33"/><text x="97.2637%" y="367.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.05%)</title><rect x="98.6279%" y="341" width="1.0492%" height="15" fill="rgb(213,105,25)" fg:x="1222" fg:w="13"/><text x="98.8779%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (13 samples, 1.05%)</title><rect x="98.6279%" y="325" width="1.0492%" height="15" fill="rgb(251,131,7)" fg:x="1222" fg:w="13"/><text x="98.8779%" y="335.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="99.5964%" y="309" width="0.0807%" height="15" fill="rgb(211,155,7)" fg:x="1234" fg:w="1"/><text x="99.8464%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5964%" y="293" width="0.0807%" height="15" fill="rgb(243,70,15)" fg:x="1234" fg:w="1"/><text x="99.8464%" y="303.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (199 samples, 16.06%)</title><rect x="83.6965%" y="549" width="16.0613%" height="15" fill="rgb(215,171,2)" fg:x="1037" fg:w="199"/><text x="83.9465%" y="559.50">&lt;engine::perform::Standar..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (151 samples, 12.19%)</title><rect x="87.5706%" y="533" width="12.1872%" height="15" fill="rgb(244,121,35)" fg:x="1085" fg:w="151"/><text x="87.8206%" y="543.50">kernel::plugins::S..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (151 samples, 12.19%)</title><rect x="87.5706%" y="517" width="12.1872%" height="15" fill="rgb(249,147,17)" fg:x="1085" fg:w="151"/><text x="87.8206%" y="527.50">&lt;plugins_dynlib::D..</text></g><g><title>plugins_rpc::querying::have_surroundings (135 samples, 10.90%)</title><rect x="88.8620%" y="501" width="10.8959%" height="15" fill="rgb(241,193,52)" fg:x="1101" fg:w="135"/><text x="89.1120%" y="511.50">plugins_rpc::que..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="99.6772%" y="485" width="0.0807%" height="15" fill="rgb(217,159,39)" fg:x="1235" fg:w="1"/><text x="99.9272%" y="495.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (1 samples, 0.08%)</title><rect x="99.6772%" y="469" width="0.0807%" height="15" fill="rgb(248,110,0)" fg:x="1235" fg:w="1"/><text x="99.9272%" y="479.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;kernel::model::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="99.6772%" y="453" width="0.0807%" height="15" fill="rgb(233,227,0)" fg:x="1235" fg:w="1"/><text x="99.9272%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.6772%" y="437" width="0.0807%" height="15" fill="rgb(252,55,2)" fg:x="1235" fg:w="1"/><text x="99.9272%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.6772%" y="421" width="0.0807%" height="15" fill="rgb(224,194,24)" fg:x="1235" fg:w="1"/><text x="99.9272%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.6772%" y="405" width="0.0807%" height="15" fill="rgb(247,5,33)" fg:x="1235" fg:w="1"/><text x="99.9272%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.6772%" y="389" width="0.0807%" height="15" fill="rgb(242,66,47)" fg:x="1235" fg:w="1"/><text x="99.9272%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.6772%" y="373" width="0.0807%" height="15" fill="rgb(213,107,12)" fg:x="1235" fg:w="1"/><text x="99.9272%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.6772%" y="357" width="0.0807%" height="15" fill="rgb(206,131,1)" fg:x="1235" fg:w="1"/><text x="99.9272%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6772%" y="341" width="0.0807%" height="15" fill="rgb(214,9,36)" fg:x="1235" fg:w="1"/><text x="99.9272%" y="351.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (201 samples, 16.22%)</title><rect x="83.6158%" y="565" width="16.2228%" height="15" fill="rgb(251,215,18)" fg:x="1036" fg:w="201"/><text x="83.8658%" y="575.50">&lt;engine::perform::Standar..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (1 samples, 0.08%)</title><rect x="99.7579%" y="549" width="0.0807%" height="15" fill="rgb(251,64,9)" fg:x="1236" fg:w="1"/><text x="100.0079%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="99.7579%" y="533" width="0.0807%" height="15" fill="rgb(235,68,21)" fg:x="1236" fg:w="1"/><text x="100.0079%" y="543.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="99.7579%" y="517" width="0.0807%" height="15" fill="rgb(240,69,38)" fg:x="1236" fg:w="1"/><text x="100.0079%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity (1 samples, 0.08%)</title><rect x="99.7579%" y="501" width="0.0807%" height="15" fill="rgb(231,18,27)" fg:x="1236" fg:w="1"/><text x="100.0079%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="99.7579%" y="485" width="0.0807%" height="15" fill="rgb(215,154,25)" fg:x="1236" fg:w="1"/><text x="100.0079%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="99.7579%" y="469" width="0.0807%" height="15" fill="rgb(224,33,46)" fg:x="1236" fg:w="1"/><text x="100.0079%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.7579%" y="453" width="0.0807%" height="15" fill="rgb(248,191,53)" fg:x="1236" fg:w="1"/><text x="100.0079%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.7579%" y="437" width="0.0807%" height="15" fill="rgb(231,3,37)" fg:x="1236" fg:w="1"/><text x="100.0079%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.7579%" y="421" width="0.0807%" height="15" fill="rgb(209,152,2)" fg:x="1236" fg:w="1"/><text x="100.0079%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.7579%" y="405" width="0.0807%" height="15" fill="rgb(212,208,43)" fg:x="1236" fg:w="1"/><text x="100.0079%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.7579%" y="389" width="0.0807%" height="15" fill="rgb(208,60,49)" fg:x="1236" fg:w="1"/><text x="100.0079%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (202 samples, 16.30%)</title><rect x="83.6158%" y="581" width="16.3035%" height="15" fill="rgb(245,135,6)" fg:x="1036" fg:w="202"/><text x="83.8658%" y="591.50">&lt;plugins_core::carrying::..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.8386%" y="565" width="0.0807%" height="15" fill="rgb(243,86,23)" fg:x="1237" fg:w="1"/><text x="100.0886%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.8386%" y="549" width="0.0807%" height="15" fill="rgb(223,7,20)" fg:x="1237" fg:w="1"/><text x="100.0886%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.8386%" y="533" width="0.0807%" height="15" fill="rgb(212,182,17)" fg:x="1237" fg:w="1"/><text x="100.0886%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.8386%" y="517" width="0.0807%" height="15" fill="rgb(237,94,50)" fg:x="1237" fg:w="1"/><text x="100.0886%" y="527.50"></text></g><g><title>all (1,239 samples, 100%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(232,185,44)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="1023.50"></text></g><g><title>simple-bd24e590 (1,239 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(205,50,36)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="1007.50">simple-bd24e590</text></g><g><title>_start (1,239 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(252,32,32)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="991.50">_start</text></g><g><title>__libc_start_main (1,239 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(241,123,33)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="975.50">__libc_start_main</text></g><g><title>main (1,239 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(212,140,16)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="959.50">main</text></g><g><title>std::rt::lang_start_internal (1,239 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(247,132,5)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="943.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,239 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(209,137,38)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,239 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(248,32,42)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,239 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(216,188,40)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="895.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,239 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(209,127,53)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="879.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,239 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(254,162,9)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,239 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(219,183,10)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,239 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(217,192,21)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,239 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(251,89,27)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,239 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(253,55,28)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="799.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,239 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(216,159,8)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,239 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(231,228,44)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="767.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,239 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(247,34,48)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="751.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,239 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(247,222,18)" fg:x="0" fg:w="1239"/><text x="0.2500%" y="735.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (330 samples, 26.63%)</title><rect x="73.3656%" y="709" width="26.6344%" height="15" fill="rgb(227,49,4)" fg:x="909" fg:w="330"/><text x="73.6156%" y="719.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as cri..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (330 samples, 26.63%)</title><rect x="73.3656%" y="693" width="26.6344%" height="15" fill="rgb(219,189,53)" fg:x="909" fg:w="330"/><text x="73.6156%" y="703.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (330 samples, 26.63%)</title><rect x="73.3656%" y="677" width="26.6344%" height="15" fill="rgb(241,160,53)" fg:x="909" fg:w="330"/><text x="73.6156%" y="687.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (204 samples, 16.46%)</title><rect x="83.5351%" y="661" width="16.4649%" height="15" fill="rgb(227,115,4)" fg:x="1035" fg:w="204"/><text x="83.7851%" y="671.50">engine::session::Session:..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (204 samples, 16.46%)</title><rect x="83.5351%" y="645" width="16.4649%" height="15" fill="rgb(215,28,28)" fg:x="1035" fg:w="204"/><text x="83.7851%" y="655.50">engine::perform::Standard..</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (204 samples, 16.46%)</title><rect x="83.5351%" y="629" width="16.4649%" height="15" fill="rgb(237,143,40)" fg:x="1035" fg:w="204"/><text x="83.7851%" y="639.50">&lt;kernel::plugins::Session..</text></g><g><title>core::iter::adapters::try_process (204 samples, 16.46%)</title><rect x="83.5351%" y="613" width="16.4649%" height="15" fill="rgb(205,107,24)" fg:x="1035" fg:w="204"/><text x="83.7851%" y="623.50">core::iter::adapters::try..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (204 samples, 16.46%)</title><rect x="83.5351%" y="597" width="16.4649%" height="15" fill="rgb(209,112,35)" fg:x="1035" fg:w="204"/><text x="83.7851%" y="607.50">&lt;alloc::vec::Vec&lt;T&gt; as al..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="99.9193%" y="581" width="0.0807%" height="15" fill="rgb(206,135,5)" fg:x="1238" fg:w="1"/><text x="100.1693%" y="591.50"></text></g></svg></svg>