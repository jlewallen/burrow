<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1126" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1109.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1109.00"> </text><svg id="frames" x="10" width="1180" total_samples="1246"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.1605%" y="709" width="0.0803%" height="15" fill="rgb(251,86,24)" fg:x="2" fg:w="1"/><text x="0.4105%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.1605%" y="693" width="0.0803%" height="15" fill="rgb(206,217,17)" fg:x="2" fg:w="1"/><text x="0.4105%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4013%" y="629" width="0.0803%" height="15" fill="rgb(248,92,38)" fg:x="5" fg:w="1"/><text x="0.6513%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.4815%" y="629" width="0.0803%" height="15" fill="rgb(214,25,29)" fg:x="6" fg:w="1"/><text x="0.7315%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4815%" y="613" width="0.0803%" height="15" fill="rgb(245,117,13)" fg:x="6" fg:w="1"/><text x="0.7315%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.5618%" y="613" width="0.1605%" height="15" fill="rgb(205,169,9)" fg:x="7" fg:w="2"/><text x="0.8118%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.8026%" y="581" width="0.1605%" height="15" fill="rgb(223,134,38)" fg:x="10" fg:w="2"/><text x="1.0526%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.8026%" y="565" width="0.1605%" height="15" fill="rgb(249,129,49)" fg:x="10" fg:w="2"/><text x="1.0526%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.8026%" y="549" width="0.1605%" height="15" fill="rgb(229,157,45)" fg:x="10" fg:w="2"/><text x="1.0526%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9631%" y="581" width="0.0803%" height="15" fill="rgb(232,159,11)" fg:x="12" fg:w="1"/><text x="1.2131%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.0433%" y="581" width="0.0803%" height="15" fill="rgb(230,134,26)" fg:x="13" fg:w="1"/><text x="1.2933%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="0.4013%" y="645" width="0.8026%" height="15" fill="rgb(234,149,40)" fg:x="5" fg:w="10"/><text x="0.6513%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="0.5618%" y="629" width="0.6421%" height="15" fill="rgb(221,122,15)" fg:x="7" fg:w="8"/><text x="0.8118%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="0.7223%" y="613" width="0.4815%" height="15" fill="rgb(228,127,0)" fg:x="9" fg:w="6"/><text x="0.9723%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="0.8026%" y="597" width="0.4013%" height="15" fill="rgb(248,37,7)" fg:x="10" fg:w="5"/><text x="1.0526%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.1236%" y="581" width="0.0803%" height="15" fill="rgb(215,140,49)" fg:x="14" fg:w="1"/><text x="1.3736%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3644%" y="613" width="0.0803%" height="15" fill="rgb(236,65,39)" fg:x="17" fg:w="1"/><text x="1.6144%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="1.4446%" y="613" width="0.2408%" height="15" fill="rgb(253,102,38)" fg:x="18" fg:w="3"/><text x="1.6946%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="1.7657%" y="597" width="0.1605%" height="15" fill="rgb(244,100,34)" fg:x="22" fg:w="2"/><text x="2.0157%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="1.7657%" y="581" width="0.1605%" height="15" fill="rgb(210,179,47)" fg:x="22" fg:w="2"/><text x="2.0157%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.8459%" y="565" width="0.0803%" height="15" fill="rgb(231,41,37)" fg:x="23" fg:w="1"/><text x="2.0959%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.9262%" y="597" width="0.1605%" height="15" fill="rgb(226,209,17)" fg:x="24" fg:w="2"/><text x="2.1762%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="2.0867%" y="597" width="0.2408%" height="15" fill="rgb(231,154,20)" fg:x="26" fg:w="3"/><text x="2.3367%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.2472%" y="581" width="0.0803%" height="15" fill="rgb(216,134,24)" fg:x="28" fg:w="1"/><text x="2.4972%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.28%)</title><rect x="1.2039%" y="645" width="1.2841%" height="15" fill="rgb(224,71,42)" fg:x="15" fg:w="16"/><text x="1.4539%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.28%)</title><rect x="1.2039%" y="629" width="1.2841%" height="15" fill="rgb(250,65,23)" fg:x="15" fg:w="16"/><text x="1.4539%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="1.6854%" y="613" width="0.8026%" height="15" fill="rgb(209,160,35)" fg:x="21" fg:w="10"/><text x="1.9354%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="2.3274%" y="597" width="0.1605%" height="15" fill="rgb(215,8,11)" fg:x="29" fg:w="2"/><text x="2.5774%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.3274%" y="581" width="0.1605%" height="15" fill="rgb(227,27,12)" fg:x="29" fg:w="2"/><text x="2.5774%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.3274%" y="565" width="0.1605%" height="15" fill="rgb(226,111,41)" fg:x="29" fg:w="2"/><text x="2.5774%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 2.41%)</title><rect x="0.2408%" y="693" width="2.4077%" height="15" fill="rgb(212,195,15)" fg:x="3" fg:w="30"/><text x="0.4908%" y="703.50">&lt;h..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (29 samples, 2.33%)</title><rect x="0.3210%" y="677" width="2.3274%" height="15" fill="rgb(216,191,17)" fg:x="4" fg:w="29"/><text x="0.5710%" y="687.50">c..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 2.33%)</title><rect x="0.3210%" y="661" width="2.3274%" height="15" fill="rgb(215,57,44)" fg:x="4" fg:w="29"/><text x="0.5710%" y="671.50">&lt;..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.4880%" y="645" width="0.1605%" height="15" fill="rgb(209,38,4)" fg:x="31" fg:w="2"/><text x="2.7380%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 2.65%)</title><rect x="0.1605%" y="725" width="2.6485%" height="15" fill="rgb(238,49,31)" fg:x="2" fg:w="33"/><text x="0.4105%" y="735.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (32 samples, 2.57%)</title><rect x="0.2408%" y="709" width="2.5682%" height="15" fill="rgb(219,48,39)" fg:x="3" fg:w="32"/><text x="0.4908%" y="719.50">co..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.6485%" y="693" width="0.1605%" height="15" fill="rgb(252,223,43)" fg:x="33" fg:w="2"/><text x="2.8985%" y="703.50"></text></g><g><title>anyhow::error::object_drop (1 samples, 0.08%)</title><rect x="2.8892%" y="629" width="0.0803%" height="15" fill="rgb(247,205,46)" fg:x="36" fg:w="1"/><text x="3.1392%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;libloading::error::Error&gt; (1 samples, 0.08%)</title><rect x="2.8892%" y="613" width="0.0803%" height="15" fill="rgb(231,16,40)" fg:x="36" fg:w="1"/><text x="3.1392%" y="623.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="2.9695%" y="613" width="0.0803%" height="15" fill="rgb(231,115,5)" fg:x="37" fg:w="1"/><text x="3.2195%" y="623.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="2.9695%" y="597" width="0.0803%" height="15" fill="rgb(206,127,43)" fg:x="37" fg:w="1"/><text x="3.2195%" y="607.50"></text></g><g><title>libloading::safe::Library::new (5 samples, 0.40%)</title><rect x="2.9695%" y="629" width="0.4013%" height="15" fill="rgb(218,101,9)" fg:x="37" fg:w="5"/><text x="3.2195%" y="639.50"></text></g><g><title>dlopen (4 samples, 0.32%)</title><rect x="3.0498%" y="613" width="0.3210%" height="15" fill="rgb(235,138,50)" fg:x="38" fg:w="4"/><text x="3.2998%" y="623.50"></text></g><g><title>_dl_catch_error (4 samples, 0.32%)</title><rect x="3.0498%" y="597" width="0.3210%" height="15" fill="rgb(214,197,52)" fg:x="38" fg:w="4"/><text x="3.2998%" y="607.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="3.0498%" y="581" width="0.3210%" height="15" fill="rgb(230,80,19)" fg:x="38" fg:w="4"/><text x="3.2998%" y="591.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="3.0498%" y="565" width="0.3210%" height="15" fill="rgb(224,77,16)" fg:x="38" fg:w="4"/><text x="3.2998%" y="575.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="3.0498%" y="549" width="0.3210%" height="15" fill="rgb(246,4,13)" fg:x="38" fg:w="4"/><text x="3.2998%" y="559.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (7 samples, 0.56%)</title><rect x="2.8892%" y="645" width="0.5618%" height="15" fill="rgb(220,177,26)" fg:x="36" fg:w="7"/><text x="3.1392%" y="655.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="3.3708%" y="629" width="0.0803%" height="15" fill="rgb(215,114,45)" fg:x="42" fg:w="1"/><text x="3.6208%" y="639.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="3.3708%" y="613" width="0.0803%" height="15" fill="rgb(215,71,54)" fg:x="42" fg:w="1"/><text x="3.6208%" y="623.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="3.3708%" y="597" width="0.0803%" height="15" fill="rgb(211,155,22)" fg:x="42" fg:w="1"/><text x="3.6208%" y="607.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (8 samples, 0.64%)</title><rect x="2.8892%" y="661" width="0.6421%" height="15" fill="rgb(245,206,18)" fg:x="36" fg:w="8"/><text x="3.1392%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="3.4510%" y="645" width="0.0803%" height="15" fill="rgb(248,216,48)" fg:x="43" fg:w="1"/><text x="3.7010%" y="655.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="3.4510%" y="629" width="0.0803%" height="15" fill="rgb(244,84,45)" fg:x="43" fg:w="1"/><text x="3.7010%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.5313%" y="645" width="0.0803%" height="15" fill="rgb(245,13,45)" fg:x="44" fg:w="1"/><text x="3.7813%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="3.5313%" y="629" width="0.0803%" height="15" fill="rgb(247,163,2)" fg:x="44" fg:w="1"/><text x="3.7813%" y="639.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="3.5313%" y="613" width="0.0803%" height="15" fill="rgb(211,175,10)" fg:x="44" fg:w="1"/><text x="3.7813%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.6918%" y="613" width="0.0803%" height="15" fill="rgb(215,186,31)" fg:x="46" fg:w="1"/><text x="3.9418%" y="623.50"></text></g><g><title>engine::session::Session::initialize (14 samples, 1.12%)</title><rect x="2.8892%" y="677" width="1.1236%" height="15" fill="rgb(207,42,11)" fg:x="36" fg:w="14"/><text x="3.1392%" y="687.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (6 samples, 0.48%)</title><rect x="3.5313%" y="661" width="0.4815%" height="15" fill="rgb(224,197,20)" fg:x="44" fg:w="6"/><text x="3.7813%" y="671.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.40%)</title><rect x="3.6116%" y="645" width="0.4013%" height="15" fill="rgb(244,119,36)" fg:x="45" fg:w="5"/><text x="3.8616%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="3.6116%" y="629" width="0.4013%" height="15" fill="rgb(250,60,27)" fg:x="45" fg:w="5"/><text x="3.8616%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="3.7721%" y="613" width="0.2408%" height="15" fill="rgb(252,202,1)" fg:x="47" fg:w="3"/><text x="4.0221%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="3.7721%" y="597" width="0.2408%" height="15" fill="rgb(206,53,25)" fg:x="47" fg:w="3"/><text x="4.0221%" y="607.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="3.7721%" y="581" width="0.2408%" height="15" fill="rgb(210,88,4)" fg:x="47" fg:w="3"/><text x="4.0221%" y="591.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (16 samples, 1.28%)</title><rect x="2.8090%" y="725" width="1.2841%" height="15" fill="rgb(211,144,28)" fg:x="35" fg:w="16"/><text x="3.0590%" y="735.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (16 samples, 1.28%)</title><rect x="2.8090%" y="709" width="1.2841%" height="15" fill="rgb(247,81,32)" fg:x="35" fg:w="16"/><text x="3.0590%" y="719.50"></text></g><g><title>engine::session::Session::new (15 samples, 1.20%)</title><rect x="2.8892%" y="693" width="1.2039%" height="15" fill="rgb(225,192,11)" fg:x="36" fg:w="15"/><text x="3.1392%" y="703.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="4.0128%" y="677" width="0.0803%" height="15" fill="rgb(232,212,27)" fg:x="50" fg:w="1"/><text x="4.2628%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="4.0128%" y="661" width="0.0803%" height="15" fill="rgb(239,3,29)" fg:x="50" fg:w="1"/><text x="4.2628%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.0128%" y="645" width="0.0803%" height="15" fill="rgb(252,225,29)" fg:x="50" fg:w="1"/><text x="4.2628%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="4.0931%" y="709" width="0.0803%" height="15" fill="rgb(205,151,9)" fg:x="51" fg:w="1"/><text x="4.3431%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="4.1734%" y="709" width="0.0803%" height="15" fill="rgb(216,171,47)" fg:x="52" fg:w="1"/><text x="4.4234%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="4.1734%" y="693" width="0.0803%" height="15" fill="rgb(206,181,1)" fg:x="52" fg:w="1"/><text x="4.4234%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.2536%" y="693" width="0.0803%" height="15" fill="rgb(232,218,10)" fg:x="53" fg:w="1"/><text x="4.5036%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.3339%" y="677" width="0.0803%" height="15" fill="rgb(244,222,51)" fg:x="54" fg:w="1"/><text x="4.5839%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="4.3339%" y="693" width="0.2408%" height="15" fill="rgb(252,215,16)" fg:x="54" fg:w="3"/><text x="4.5839%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="4.4141%" y="677" width="0.1605%" height="15" fill="rgb(212,130,13)" fg:x="55" fg:w="2"/><text x="4.6641%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.4944%" y="661" width="0.0803%" height="15" fill="rgb(227,103,37)" fg:x="56" fg:w="1"/><text x="4.7444%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.5746%" y="661" width="0.0803%" height="15" fill="rgb(249,48,15)" fg:x="57" fg:w="1"/><text x="4.8246%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.5746%" y="645" width="0.0803%" height="15" fill="rgb(225,96,9)" fg:x="57" fg:w="1"/><text x="4.8246%" y="655.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="4.5746%" y="629" width="0.0803%" height="15" fill="rgb(213,81,41)" fg:x="57" fg:w="1"/><text x="4.8246%" y="639.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="4.5746%" y="613" width="0.0803%" height="15" fill="rgb(230,15,12)" fg:x="57" fg:w="1"/><text x="4.8246%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.6549%" y="549" width="0.0803%" height="15" fill="rgb(218,106,37)" fg:x="58" fg:w="1"/><text x="4.9049%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="4.6549%" y="581" width="0.1605%" height="15" fill="rgb(223,172,47)" fg:x="58" fg:w="2"/><text x="4.9049%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="4.6549%" y="565" width="0.1605%" height="15" fill="rgb(246,180,49)" fg:x="58" fg:w="2"/><text x="4.9049%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="4.7352%" y="549" width="0.0803%" height="15" fill="rgb(231,63,37)" fg:x="59" fg:w="1"/><text x="4.9852%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="4.7352%" y="533" width="0.0803%" height="15" fill="rgb(235,70,40)" fg:x="59" fg:w="1"/><text x="4.9852%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.7352%" y="517" width="0.0803%" height="15" fill="rgb(250,54,26)" fg:x="59" fg:w="1"/><text x="4.9852%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.7352%" y="501" width="0.0803%" height="15" fill="rgb(214,190,1)" fg:x="59" fg:w="1"/><text x="4.9852%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.8154%" y="533" width="0.0803%" height="15" fill="rgb(212,40,35)" fg:x="60" fg:w="1"/><text x="5.0654%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.8154%" y="517" width="0.0803%" height="15" fill="rgb(239,183,47)" fg:x="60" fg:w="1"/><text x="5.0654%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="4.8154%" y="501" width="0.0803%" height="15" fill="rgb(211,171,49)" fg:x="60" fg:w="1"/><text x="5.0654%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="4.6549%" y="613" width="0.3210%" height="15" fill="rgb(249,186,27)" fg:x="58" fg:w="4"/><text x="4.9049%" y="623.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (4 samples, 0.32%)</title><rect x="4.6549%" y="597" width="0.3210%" height="15" fill="rgb(223,23,48)" fg:x="58" fg:w="4"/><text x="4.9049%" y="607.50"></text></g><g><title>kernel::model::any_entity_changes (2 samples, 0.16%)</title><rect x="4.8154%" y="581" width="0.1605%" height="15" fill="rgb(209,203,21)" fg:x="60" fg:w="2"/><text x="5.0654%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="4.8154%" y="565" width="0.1605%" height="15" fill="rgb(229,33,27)" fg:x="60" fg:w="2"/><text x="5.0654%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="4.8154%" y="549" width="0.1605%" height="15" fill="rgb(207,8,53)" fg:x="60" fg:w="2"/><text x="5.0654%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="4.8957%" y="533" width="0.0803%" height="15" fill="rgb(221,42,0)" fg:x="61" fg:w="1"/><text x="5.1457%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="4.8957%" y="517" width="0.0803%" height="15" fill="rgb(223,115,3)" fg:x="61" fg:w="1"/><text x="5.1457%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="4.8957%" y="501" width="0.0803%" height="15" fill="rgb(239,35,26)" fg:x="61" fg:w="1"/><text x="5.1457%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="4.8957%" y="485" width="0.0803%" height="15" fill="rgb(233,22,9)" fg:x="61" fg:w="1"/><text x="5.1457%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="4.8957%" y="469" width="0.0803%" height="15" fill="rgb(236,221,48)" fg:x="61" fg:w="1"/><text x="5.1457%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="4.8957%" y="453" width="0.0803%" height="15" fill="rgb(235,52,30)" fg:x="61" fg:w="1"/><text x="5.1457%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.8957%" y="437" width="0.0803%" height="15" fill="rgb(238,133,51)" fg:x="61" fg:w="1"/><text x="5.1457%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.8957%" y="421" width="0.0803%" height="15" fill="rgb(213,122,23)" fg:x="61" fg:w="1"/><text x="5.1457%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.1364%" y="565" width="0.0803%" height="15" fill="rgb(225,8,15)" fg:x="64" fg:w="1"/><text x="5.3864%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.1364%" y="549" width="0.0803%" height="15" fill="rgb(219,126,35)" fg:x="64" fg:w="1"/><text x="5.3864%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.1364%" y="533" width="0.0803%" height="15" fill="rgb(246,113,21)" fg:x="64" fg:w="1"/><text x="5.3864%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="5.0562%" y="581" width="0.4013%" height="15" fill="rgb(241,193,32)" fg:x="63" fg:w="5"/><text x="5.3062%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.2167%" y="565" width="0.2408%" height="15" fill="rgb(218,99,18)" fg:x="65" fg:w="3"/><text x="5.4667%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="5.2167%" y="549" width="0.2408%" height="15" fill="rgb(225,114,4)" fg:x="65" fg:w="3"/><text x="5.4667%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.3772%" y="533" width="0.0803%" height="15" fill="rgb(235,0,15)" fg:x="67" fg:w="1"/><text x="5.6272%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.4575%" y="565" width="0.1605%" height="15" fill="rgb(247,45,27)" fg:x="68" fg:w="2"/><text x="5.7075%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.5377%" y="549" width="0.0803%" height="15" fill="rgb(249,88,53)" fg:x="69" fg:w="1"/><text x="5.7877%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.6180%" y="549" width="0.1605%" height="15" fill="rgb(207,58,45)" fg:x="70" fg:w="2"/><text x="5.8680%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.6180%" y="533" width="0.1605%" height="15" fill="rgb(216,7,11)" fg:x="70" fg:w="2"/><text x="5.8680%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.6180%" y="517" width="0.1605%" height="15" fill="rgb(230,40,33)" fg:x="70" fg:w="2"/><text x="5.8680%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.6180%" y="501" width="0.1605%" height="15" fill="rgb(232,24,46)" fg:x="70" fg:w="2"/><text x="5.8680%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="5.6180%" y="485" width="0.1605%" height="15" fill="rgb(219,222,45)" fg:x="70" fg:w="2"/><text x="5.8680%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.6180%" y="469" width="0.1605%" height="15" fill="rgb(229,85,44)" fg:x="70" fg:w="2"/><text x="5.8680%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="5.6180%" y="453" width="0.1605%" height="15" fill="rgb(243,71,36)" fg:x="70" fg:w="2"/><text x="5.8680%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.7785%" y="533" width="0.1605%" height="15" fill="rgb(230,203,45)" fg:x="72" fg:w="2"/><text x="6.0285%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.7785%" y="517" width="0.1605%" height="15" fill="rgb(224,77,49)" fg:x="72" fg:w="2"/><text x="6.0285%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.8587%" y="501" width="0.0803%" height="15" fill="rgb(210,186,47)" fg:x="73" fg:w="1"/><text x="6.1087%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.8587%" y="485" width="0.0803%" height="15" fill="rgb(232,146,10)" fg:x="73" fg:w="1"/><text x="6.1087%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="5.9390%" y="533" width="0.1605%" height="15" fill="rgb(236,185,51)" fg:x="74" fg:w="2"/><text x="6.1890%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.0193%" y="517" width="0.0803%" height="15" fill="rgb(223,206,43)" fg:x="75" fg:w="1"/><text x="6.2693%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="5.7785%" y="549" width="0.4013%" height="15" fill="rgb(227,212,9)" fg:x="72" fg:w="5"/><text x="6.0285%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.0995%" y="533" width="0.0803%" height="15" fill="rgb(205,82,3)" fg:x="76" fg:w="1"/><text x="6.3495%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.0995%" y="517" width="0.0803%" height="15" fill="rgb(214,2,27)" fg:x="76" fg:w="1"/><text x="6.3495%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="6.0995%" y="501" width="0.0803%" height="15" fill="rgb(241,37,22)" fg:x="76" fg:w="1"/><text x="6.3495%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="5.6180%" y="565" width="0.6421%" height="15" fill="rgb(219,182,1)" fg:x="70" fg:w="8"/><text x="5.8680%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.1798%" y="549" width="0.0803%" height="15" fill="rgb(208,224,23)" fg:x="77" fg:w="1"/><text x="6.4298%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.1798%" y="533" width="0.0803%" height="15" fill="rgb(219,121,32)" fg:x="77" fg:w="1"/><text x="6.4298%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.1798%" y="517" width="0.0803%" height="15" fill="rgb(253,13,40)" fg:x="77" fg:w="1"/><text x="6.4298%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.28%)</title><rect x="5.0562%" y="597" width="1.2841%" height="15" fill="rgb(233,6,28)" fg:x="63" fg:w="16"/><text x="5.3062%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="5.4575%" y="581" width="0.8828%" height="15" fill="rgb(233,73,8)" fg:x="68" fg:w="11"/><text x="5.7075%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.2600%" y="565" width="0.0803%" height="15" fill="rgb(223,48,27)" fg:x="78" fg:w="1"/><text x="6.5100%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.2600%" y="549" width="0.0803%" height="15" fill="rgb(231,98,37)" fg:x="78" fg:w="1"/><text x="6.5100%" y="559.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="6.3403%" y="597" width="0.0803%" height="15" fill="rgb(249,43,32)" fg:x="79" fg:w="1"/><text x="6.5903%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.5811%" y="533" width="0.0803%" height="15" fill="rgb(246,184,20)" fg:x="82" fg:w="1"/><text x="6.8311%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="6.6613%" y="533" width="0.0803%" height="15" fill="rgb(251,216,0)" fg:x="83" fg:w="1"/><text x="6.9113%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="6.4205%" y="597" width="0.4013%" height="15" fill="rgb(238,41,42)" fg:x="80" fg:w="5"/><text x="6.6705%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="6.4205%" y="581" width="0.4013%" height="15" fill="rgb(227,224,50)" fg:x="80" fg:w="5"/><text x="6.6705%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="6.4205%" y="565" width="0.4013%" height="15" fill="rgb(237,189,18)" fg:x="80" fg:w="5"/><text x="6.6705%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="6.5008%" y="549" width="0.3210%" height="15" fill="rgb(238,108,6)" fg:x="81" fg:w="4"/><text x="6.7508%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="6.7416%" y="533" width="0.0803%" height="15" fill="rgb(214,197,53)" fg:x="84" fg:w="1"/><text x="6.9916%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="6.7416%" y="517" width="0.0803%" height="15" fill="rgb(206,183,15)" fg:x="84" fg:w="1"/><text x="6.9916%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.8218%" y="549" width="0.0803%" height="15" fill="rgb(208,130,32)" fg:x="85" fg:w="1"/><text x="7.0718%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.8218%" y="533" width="0.0803%" height="15" fill="rgb(226,128,52)" fg:x="85" fg:w="1"/><text x="7.0718%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="6.8218%" y="517" width="0.0803%" height="15" fill="rgb(231,183,21)" fg:x="85" fg:w="1"/><text x="7.0718%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.9021%" y="533" width="0.0803%" height="15" fill="rgb(216,8,35)" fg:x="86" fg:w="1"/><text x="7.1521%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="7.0626%" y="501" width="0.0803%" height="15" fill="rgb(224,221,8)" fg:x="88" fg:w="1"/><text x="7.3126%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.0626%" y="485" width="0.0803%" height="15" fill="rgb(210,111,33)" fg:x="88" fg:w="1"/><text x="7.3126%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.0626%" y="469" width="0.0803%" height="15" fill="rgb(232,211,38)" fg:x="88" fg:w="1"/><text x="7.3126%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="7.2231%" y="453" width="0.0803%" height="15" fill="rgb(216,190,27)" fg:x="90" fg:w="1"/><text x="7.4731%" y="463.50"></text></g><g><title>engine::session::Session::flush (40 samples, 3.21%)</title><rect x="4.2536%" y="709" width="3.2103%" height="15" fill="rgb(237,215,27)" fg:x="53" fg:w="40"/><text x="4.5036%" y="719.50">eng..</text></g><g><title>engine::session::state::State::close (36 samples, 2.89%)</title><rect x="4.5746%" y="693" width="2.8892%" height="15" fill="rgb(251,121,39)" fg:x="57" fg:w="36"/><text x="4.8246%" y="703.50">en..</text></g><g><title>engine::session::state::State::flush_entities (36 samples, 2.89%)</title><rect x="4.5746%" y="677" width="2.8892%" height="15" fill="rgb(244,21,14)" fg:x="57" fg:w="36"/><text x="4.8246%" y="687.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (35 samples, 2.81%)</title><rect x="4.6549%" y="661" width="2.8090%" height="15" fill="rgb(221,192,22)" fg:x="58" fg:w="35"/><text x="4.9049%" y="671.50">en..</text></g><g><title>core::iter::adapters::try_process (35 samples, 2.81%)</title><rect x="4.6549%" y="645" width="2.8090%" height="15" fill="rgb(251,190,28)" fg:x="58" fg:w="35"/><text x="4.9049%" y="655.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (35 samples, 2.81%)</title><rect x="4.6549%" y="629" width="2.8090%" height="15" fill="rgb(217,4,51)" fg:x="58" fg:w="35"/><text x="4.9049%" y="639.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (31 samples, 2.49%)</title><rect x="4.9759%" y="613" width="2.4880%" height="15" fill="rgb(215,183,49)" fg:x="62" fg:w="31"/><text x="5.2259%" y="623.50">en..</text></g><g><title>kernel::model::any_entity_changes (8 samples, 0.64%)</title><rect x="6.8218%" y="597" width="0.6421%" height="15" fill="rgb(249,28,49)" fg:x="85" fg:w="8"/><text x="7.0718%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="6.8218%" y="581" width="0.6421%" height="15" fill="rgb(214,42,20)" fg:x="85" fg:w="8"/><text x="7.0718%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="6.8218%" y="565" width="0.6421%" height="15" fill="rgb(222,77,27)" fg:x="85" fg:w="8"/><text x="7.0718%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="6.9021%" y="549" width="0.5618%" height="15" fill="rgb(252,198,32)" fg:x="86" fg:w="7"/><text x="7.1521%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="6.9823%" y="533" width="0.4815%" height="15" fill="rgb(207,140,50)" fg:x="87" fg:w="6"/><text x="7.2323%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="7.0626%" y="517" width="0.4013%" height="15" fill="rgb(251,170,16)" fg:x="88" fg:w="5"/><text x="7.3126%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="7.1429%" y="501" width="0.3210%" height="15" fill="rgb(249,111,45)" fg:x="89" fg:w="4"/><text x="7.3929%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="7.1429%" y="485" width="0.3210%" height="15" fill="rgb(241,99,35)" fg:x="89" fg:w="4"/><text x="7.3929%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="7.1429%" y="469" width="0.3210%" height="15" fill="rgb(216,188,17)" fg:x="89" fg:w="4"/><text x="7.3929%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="7.3034%" y="453" width="0.1605%" height="15" fill="rgb(254,209,53)" fg:x="91" fg:w="2"/><text x="7.5534%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.3836%" y="437" width="0.0803%" height="15" fill="rgb(231,105,41)" fg:x="92" fg:w="1"/><text x="7.6336%" y="447.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="7.5441%" y="661" width="0.0803%" height="15" fill="rgb(242,93,23)" fg:x="94" fg:w="1"/><text x="7.7941%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="7.5441%" y="645" width="0.0803%" height="15" fill="rgb(218,159,11)" fg:x="94" fg:w="1"/><text x="7.7941%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="7.5441%" y="629" width="0.0803%" height="15" fill="rgb(209,90,32)" fg:x="94" fg:w="1"/><text x="7.7941%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="7.5441%" y="613" width="0.0803%" height="15" fill="rgb(253,118,46)" fg:x="94" fg:w="1"/><text x="7.7941%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="7.5441%" y="597" width="0.0803%" height="15" fill="rgb(219,121,2)" fg:x="94" fg:w="1"/><text x="7.7941%" y="607.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="7.6244%" y="645" width="0.0803%" height="15" fill="rgb(207,57,47)" fg:x="95" fg:w="1"/><text x="7.8744%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.6244%" y="629" width="0.0803%" height="15" fill="rgb(235,113,43)" fg:x="95" fg:w="1"/><text x="7.8744%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.6244%" y="613" width="0.0803%" height="15" fill="rgb(238,30,50)" fg:x="95" fg:w="1"/><text x="7.8744%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="7.6244%" y="597" width="0.0803%" height="15" fill="rgb(237,47,29)" fg:x="95" fg:w="1"/><text x="7.8744%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="7.6244%" y="581" width="0.0803%" height="15" fill="rgb(245,102,24)" fg:x="95" fg:w="1"/><text x="7.8744%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="7.7047%" y="613" width="0.0803%" height="15" fill="rgb(245,152,9)" fg:x="96" fg:w="1"/><text x="7.9547%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.7047%" y="597" width="0.0803%" height="15" fill="rgb(223,213,17)" fg:x="96" fg:w="1"/><text x="7.9547%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.7047%" y="581" width="0.0803%" height="15" fill="rgb(241,164,4)" fg:x="96" fg:w="1"/><text x="7.9547%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.7849%" y="581" width="0.0803%" height="15" fill="rgb(205,209,31)" fg:x="97" fg:w="1"/><text x="8.0349%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="7.7849%" y="613" width="0.1605%" height="15" fill="rgb(248,173,2)" fg:x="97" fg:w="2"/><text x="8.0349%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="7.7849%" y="597" width="0.1605%" height="15" fill="rgb(207,67,32)" fg:x="97" fg:w="2"/><text x="8.0349%" y="607.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="7.8652%" y="581" width="0.0803%" height="15" fill="rgb(239,109,13)" fg:x="98" fg:w="1"/><text x="8.1152%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="7.8652%" y="565" width="0.0803%" height="15" fill="rgb(233,123,24)" fg:x="98" fg:w="1"/><text x="8.1152%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="7.6244%" y="661" width="0.4013%" height="15" fill="rgb(232,120,19)" fg:x="95" fg:w="5"/><text x="7.8744%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="7.7047%" y="645" width="0.3210%" height="15" fill="rgb(225,17,50)" fg:x="96" fg:w="4"/><text x="7.9547%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="7.7047%" y="629" width="0.3210%" height="15" fill="rgb(239,216,13)" fg:x="96" fg:w="4"/><text x="7.9547%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="7.9454%" y="613" width="0.0803%" height="15" fill="rgb(232,213,26)" fg:x="99" fg:w="1"/><text x="8.1954%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.9454%" y="597" width="0.0803%" height="15" fill="rgb(244,59,39)" fg:x="99" fg:w="1"/><text x="8.1954%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.1059%" y="581" width="0.0803%" height="15" fill="rgb(234,61,35)" fg:x="101" fg:w="1"/><text x="8.3559%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="8.1059%" y="613" width="0.1605%" height="15" fill="rgb(245,94,24)" fg:x="101" fg:w="2"/><text x="8.3559%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="8.1059%" y="597" width="0.1605%" height="15" fill="rgb(238,190,44)" fg:x="101" fg:w="2"/><text x="8.3559%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.1862%" y="581" width="0.0803%" height="15" fill="rgb(205,145,25)" fg:x="102" fg:w="1"/><text x="8.4362%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.1862%" y="565" width="0.0803%" height="15" fill="rgb(229,158,41)" fg:x="102" fg:w="1"/><text x="8.4362%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.1862%" y="549" width="0.0803%" height="15" fill="rgb(224,121,5)" fg:x="102" fg:w="1"/><text x="8.4362%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.1862%" y="533" width="0.0803%" height="15" fill="rgb(238,168,35)" fg:x="102" fg:w="1"/><text x="8.4362%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="8.0257%" y="661" width="0.3210%" height="15" fill="rgb(231,11,42)" fg:x="100" fg:w="4"/><text x="8.2757%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="8.0257%" y="645" width="0.3210%" height="15" fill="rgb(241,105,19)" fg:x="100" fg:w="4"/><text x="8.2757%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="8.0257%" y="629" width="0.3210%" height="15" fill="rgb(253,210,20)" fg:x="100" fg:w="4"/><text x="8.2757%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.2665%" y="613" width="0.0803%" height="15" fill="rgb(215,72,52)" fg:x="103" fg:w="1"/><text x="8.5165%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.2665%" y="597" width="0.0803%" height="15" fill="rgb(223,225,30)" fg:x="103" fg:w="1"/><text x="8.5165%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="8.2665%" y="581" width="0.0803%" height="15" fill="rgb(220,138,44)" fg:x="103" fg:w="1"/><text x="8.5165%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.2665%" y="565" width="0.0803%" height="15" fill="rgb(206,128,12)" fg:x="103" fg:w="1"/><text x="8.5165%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="8.3467%" y="629" width="0.0803%" height="15" fill="rgb(245,194,0)" fg:x="104" fg:w="1"/><text x="8.5967%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="8.3467%" y="613" width="0.0803%" height="15" fill="rgb(235,175,41)" fg:x="104" fg:w="1"/><text x="8.5967%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.3467%" y="597" width="0.0803%" height="15" fill="rgb(216,15,48)" fg:x="104" fg:w="1"/><text x="8.5967%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.3467%" y="581" width="0.0803%" height="15" fill="rgb(223,179,5)" fg:x="104" fg:w="1"/><text x="8.5967%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.3467%" y="565" width="0.0803%" height="15" fill="rgb(220,80,15)" fg:x="104" fg:w="1"/><text x="8.5967%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.3467%" y="549" width="0.0803%" height="15" fill="rgb(228,20,30)" fg:x="104" fg:w="1"/><text x="8.5967%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.3467%" y="533" width="0.0803%" height="15" fill="rgb(229,194,27)" fg:x="104" fg:w="1"/><text x="8.5967%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.3467%" y="517" width="0.0803%" height="15" fill="rgb(238,202,32)" fg:x="104" fg:w="1"/><text x="8.5967%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.3467%" y="501" width="0.0803%" height="15" fill="rgb(207,82,27)" fg:x="104" fg:w="1"/><text x="8.5967%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.3467%" y="485" width="0.0803%" height="15" fill="rgb(246,122,46)" fg:x="104" fg:w="1"/><text x="8.5967%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.3467%" y="469" width="0.0803%" height="15" fill="rgb(220,101,26)" fg:x="104" fg:w="1"/><text x="8.5967%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.3467%" y="453" width="0.0803%" height="15" fill="rgb(251,63,9)" fg:x="104" fg:w="1"/><text x="8.5967%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.3467%" y="437" width="0.0803%" height="15" fill="rgb(235,186,5)" fg:x="104" fg:w="1"/><text x="8.5967%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.3467%" y="421" width="0.0803%" height="15" fill="rgb(241,139,37)" fg:x="104" fg:w="1"/><text x="8.5967%" y="431.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="8.3467%" y="405" width="0.0803%" height="15" fill="rgb(252,177,51)" fg:x="104" fg:w="1"/><text x="8.5967%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="8.3467%" y="389" width="0.0803%" height="15" fill="rgb(214,131,22)" fg:x="104" fg:w="1"/><text x="8.5967%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.4270%" y="597" width="0.0803%" height="15" fill="rgb(246,53,19)" fg:x="105" fg:w="1"/><text x="8.6770%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="8.4270%" y="629" width="0.1605%" height="15" fill="rgb(231,158,27)" fg:x="105" fg:w="2"/><text x="8.6770%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="8.4270%" y="613" width="0.1605%" height="15" fill="rgb(226,166,46)" fg:x="105" fg:w="2"/><text x="8.6770%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.5072%" y="597" width="0.0803%" height="15" fill="rgb(218,178,26)" fg:x="106" fg:w="1"/><text x="8.7572%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.5072%" y="581" width="0.0803%" height="15" fill="rgb(206,25,39)" fg:x="106" fg:w="1"/><text x="8.7572%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="8.5072%" y="565" width="0.0803%" height="15" fill="rgb(232,218,41)" fg:x="106" fg:w="1"/><text x="8.7572%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.5072%" y="549" width="0.0803%" height="15" fill="rgb(212,151,15)" fg:x="106" fg:w="1"/><text x="8.7572%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.5072%" y="533" width="0.0803%" height="15" fill="rgb(213,49,22)" fg:x="106" fg:w="1"/><text x="8.7572%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.5072%" y="517" width="0.0803%" height="15" fill="rgb(247,116,21)" fg:x="106" fg:w="1"/><text x="8.7572%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.12%)</title><rect x="7.5441%" y="677" width="1.1236%" height="15" fill="rgb(248,98,14)" fg:x="94" fg:w="14"/><text x="7.7941%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (4 samples, 0.32%)</title><rect x="8.3467%" y="661" width="0.3210%" height="15" fill="rgb(247,72,6)" fg:x="104" fg:w="4"/><text x="8.5967%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="8.3467%" y="645" width="0.3210%" height="15" fill="rgb(213,9,22)" fg:x="104" fg:w="4"/><text x="8.5967%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.5875%" y="629" width="0.0803%" height="15" fill="rgb(213,122,30)" fg:x="107" fg:w="1"/><text x="8.8375%" y="639.50"></text></g><g><title>plugins_core::build::Build::into_entry (15 samples, 1.20%)</title><rect x="7.5441%" y="693" width="1.2039%" height="15" fill="rgb(244,11,30)" fg:x="94" fg:w="15"/><text x="7.7941%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="8.6677%" y="677" width="0.0803%" height="15" fill="rgb(236,102,26)" fg:x="108" fg:w="1"/><text x="8.9177%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="8.6677%" y="661" width="0.0803%" height="15" fill="rgb(231,166,37)" fg:x="108" fg:w="1"/><text x="8.9177%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="8.6677%" y="645" width="0.0803%" height="15" fill="rgb(220,224,29)" fg:x="108" fg:w="1"/><text x="8.9177%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="8.6677%" y="629" width="0.0803%" height="15" fill="rgb(227,30,40)" fg:x="108" fg:w="1"/><text x="8.9177%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="8.7480%" y="677" width="0.0803%" height="15" fill="rgb(235,8,36)" fg:x="109" fg:w="1"/><text x="8.9980%" y="687.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="8.7480%" y="661" width="0.0803%" height="15" fill="rgb(232,175,19)" fg:x="109" fg:w="1"/><text x="8.9980%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="8.7480%" y="645" width="0.0803%" height="15" fill="rgb(217,114,10)" fg:x="109" fg:w="1"/><text x="8.9980%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="8.7480%" y="629" width="0.0803%" height="15" fill="rgb(214,112,41)" fg:x="109" fg:w="1"/><text x="8.9980%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.7480%" y="613" width="0.0803%" height="15" fill="rgb(226,69,34)" fg:x="109" fg:w="1"/><text x="8.9980%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.7480%" y="597" width="0.0803%" height="15" fill="rgb(219,23,46)" fg:x="109" fg:w="1"/><text x="8.9980%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.7480%" y="581" width="0.0803%" height="15" fill="rgb(233,3,8)" fg:x="109" fg:w="1"/><text x="8.9980%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.7480%" y="565" width="0.0803%" height="15" fill="rgb(251,34,42)" fg:x="109" fg:w="1"/><text x="8.9980%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.7480%" y="549" width="0.0803%" height="15" fill="rgb(215,84,9)" fg:x="109" fg:w="1"/><text x="8.9980%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.7480%" y="533" width="0.0803%" height="15" fill="rgb(231,75,52)" fg:x="109" fg:w="1"/><text x="8.9980%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.7480%" y="517" width="0.0803%" height="15" fill="rgb(247,201,31)" fg:x="109" fg:w="1"/><text x="8.9980%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.7480%" y="501" width="0.0803%" height="15" fill="rgb(215,171,37)" fg:x="109" fg:w="1"/><text x="8.9980%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.7480%" y="485" width="0.0803%" height="15" fill="rgb(208,208,44)" fg:x="109" fg:w="1"/><text x="8.9980%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.7480%" y="469" width="0.0803%" height="15" fill="rgb(247,146,54)" fg:x="109" fg:w="1"/><text x="8.9980%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.7480%" y="453" width="0.0803%" height="15" fill="rgb(209,0,40)" fg:x="109" fg:w="1"/><text x="8.9980%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.7480%" y="437" width="0.0803%" height="15" fill="rgb(221,59,4)" fg:x="109" fg:w="1"/><text x="8.9980%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.7480%" y="421" width="0.0803%" height="15" fill="rgb(227,153,47)" fg:x="109" fg:w="1"/><text x="8.9980%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.7480%" y="405" width="0.0803%" height="15" fill="rgb(253,225,10)" fg:x="109" fg:w="1"/><text x="8.9980%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.7480%" y="389" width="0.0803%" height="15" fill="rgb(237,201,24)" fg:x="109" fg:w="1"/><text x="8.9980%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="8.8283%" y="629" width="0.0803%" height="15" fill="rgb(238,23,27)" fg:x="110" fg:w="1"/><text x="9.0783%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="8.8283%" y="613" width="0.0803%" height="15" fill="rgb(236,54,50)" fg:x="110" fg:w="1"/><text x="9.0783%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.8283%" y="597" width="0.0803%" height="15" fill="rgb(216,106,0)" fg:x="110" fg:w="1"/><text x="9.0783%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.8283%" y="581" width="0.0803%" height="15" fill="rgb(234,179,35)" fg:x="110" fg:w="1"/><text x="9.0783%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.8283%" y="565" width="0.0803%" height="15" fill="rgb(210,35,8)" fg:x="110" fg:w="1"/><text x="9.0783%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.8283%" y="549" width="0.0803%" height="15" fill="rgb(238,144,16)" fg:x="110" fg:w="1"/><text x="9.0783%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.8283%" y="533" width="0.0803%" height="15" fill="rgb(244,54,7)" fg:x="110" fg:w="1"/><text x="9.0783%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.8283%" y="517" width="0.0803%" height="15" fill="rgb(233,225,40)" fg:x="110" fg:w="1"/><text x="9.0783%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.8283%" y="501" width="0.0803%" height="15" fill="rgb(249,227,23)" fg:x="110" fg:w="1"/><text x="9.0783%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.8283%" y="485" width="0.0803%" height="15" fill="rgb(215,42,44)" fg:x="110" fg:w="1"/><text x="9.0783%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.8283%" y="469" width="0.0803%" height="15" fill="rgb(220,145,40)" fg:x="110" fg:w="1"/><text x="9.0783%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.8283%" y="453" width="0.0803%" height="15" fill="rgb(228,218,40)" fg:x="110" fg:w="1"/><text x="9.0783%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.8283%" y="437" width="0.0803%" height="15" fill="rgb(217,52,54)" fg:x="110" fg:w="1"/><text x="9.0783%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.8283%" y="421" width="0.0803%" height="15" fill="rgb(223,90,22)" fg:x="110" fg:w="1"/><text x="9.0783%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.8283%" y="405" width="0.0803%" height="15" fill="rgb(232,114,35)" fg:x="110" fg:w="1"/><text x="9.0783%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.8283%" y="389" width="0.0803%" height="15" fill="rgb(227,223,50)" fg:x="110" fg:w="1"/><text x="9.0783%" y="399.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="8.9085%" y="613" width="0.0803%" height="15" fill="rgb(249,175,7)" fg:x="111" fg:w="1"/><text x="9.1585%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="8.9085%" y="597" width="0.0803%" height="15" fill="rgb(249,173,15)" fg:x="111" fg:w="1"/><text x="9.1585%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="8.8283%" y="677" width="0.2408%" height="15" fill="rgb(240,131,6)" fg:x="110" fg:w="3"/><text x="9.0783%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="8.8283%" y="661" width="0.2408%" height="15" fill="rgb(246,117,16)" fg:x="110" fg:w="3"/><text x="9.0783%" y="671.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="8.8283%" y="645" width="0.2408%" height="15" fill="rgb(209,32,16)" fg:x="110" fg:w="3"/><text x="9.0783%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="8.9085%" y="629" width="0.1605%" height="15" fill="rgb(207,45,44)" fg:x="111" fg:w="2"/><text x="9.1585%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="8.9888%" y="613" width="0.0803%" height="15" fill="rgb(210,66,3)" fg:x="112" fg:w="1"/><text x="9.2388%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.9888%" y="597" width="0.0803%" height="15" fill="rgb(246,133,30)" fg:x="112" fg:w="1"/><text x="9.2388%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.9888%" y="581" width="0.0803%" height="15" fill="rgb(224,37,17)" fg:x="112" fg:w="1"/><text x="9.2388%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="9.0690%" y="661" width="0.0803%" height="15" fill="rgb(237,218,18)" fg:x="113" fg:w="1"/><text x="9.3190%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="9.0690%" y="645" width="0.0803%" height="15" fill="rgb(240,57,8)" fg:x="113" fg:w="1"/><text x="9.3190%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (22 samples, 1.77%)</title><rect x="7.4639%" y="709" width="1.7657%" height="15" fill="rgb(231,51,38)" fg:x="93" fg:w="22"/><text x="7.7139%" y="719.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.48%)</title><rect x="8.7480%" y="693" width="0.4815%" height="15" fill="rgb(230,89,50)" fg:x="109" fg:w="6"/><text x="8.9980%" y="703.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="9.0690%" y="677" width="0.1605%" height="15" fill="rgb(234,103,34)" fg:x="113" fg:w="2"/><text x="9.3190%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="9.1493%" y="661" width="0.0803%" height="15" fill="rgb(220,45,48)" fg:x="114" fg:w="1"/><text x="9.3993%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="9.1493%" y="645" width="0.0803%" height="15" fill="rgb(250,210,3)" fg:x="114" fg:w="1"/><text x="9.3993%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="9.1493%" y="629" width="0.0803%" height="15" fill="rgb(210,118,12)" fg:x="114" fg:w="1"/><text x="9.3993%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="9.1493%" y="613" width="0.0803%" height="15" fill="rgb(238,154,21)" fg:x="114" fg:w="1"/><text x="9.3993%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.2295%" y="677" width="0.0803%" height="15" fill="rgb(227,220,4)" fg:x="115" fg:w="1"/><text x="9.4795%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="9.3098%" y="661" width="0.0803%" height="15" fill="rgb(207,179,27)" fg:x="116" fg:w="1"/><text x="9.5598%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="9.3098%" y="645" width="0.0803%" height="15" fill="rgb(240,111,30)" fg:x="116" fg:w="1"/><text x="9.5598%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="9.3098%" y="629" width="0.0803%" height="15" fill="rgb(251,29,1)" fg:x="116" fg:w="1"/><text x="9.5598%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="9.3098%" y="613" width="0.0803%" height="15" fill="rgb(224,141,39)" fg:x="116" fg:w="1"/><text x="9.5598%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="9.3098%" y="597" width="0.0803%" height="15" fill="rgb(207,98,26)" fg:x="116" fg:w="1"/><text x="9.5598%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.3098%" y="581" width="0.0803%" height="15" fill="rgb(221,37,6)" fg:x="116" fg:w="1"/><text x="9.5598%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="9.3098%" y="565" width="0.0803%" height="15" fill="rgb(217,32,44)" fg:x="116" fg:w="1"/><text x="9.5598%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="9.3098%" y="549" width="0.0803%" height="15" fill="rgb(253,149,2)" fg:x="116" fg:w="1"/><text x="9.5598%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="9.3098%" y="533" width="0.0803%" height="15" fill="rgb(220,165,39)" fg:x="116" fg:w="1"/><text x="9.5598%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.3098%" y="517" width="0.0803%" height="15" fill="rgb(235,33,48)" fg:x="116" fg:w="1"/><text x="9.5598%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="9.3900%" y="629" width="0.0803%" height="15" fill="rgb(221,89,6)" fg:x="117" fg:w="1"/><text x="9.6400%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="9.3098%" y="677" width="0.2408%" height="15" fill="rgb(215,214,6)" fg:x="116" fg:w="3"/><text x="9.5598%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="9.3900%" y="661" width="0.1605%" height="15" fill="rgb(241,1,30)" fg:x="117" fg:w="2"/><text x="9.6400%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="9.3900%" y="645" width="0.1605%" height="15" fill="rgb(211,140,32)" fg:x="117" fg:w="2"/><text x="9.6400%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="9.4703%" y="629" width="0.0803%" height="15" fill="rgb(232,48,21)" fg:x="118" fg:w="1"/><text x="9.7203%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="9.4703%" y="613" width="0.0803%" height="15" fill="rgb(252,217,9)" fg:x="118" fg:w="1"/><text x="9.7203%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="9.4703%" y="597" width="0.0803%" height="15" fill="rgb(206,123,34)" fg:x="118" fg:w="1"/><text x="9.7203%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="9.4703%" y="581" width="0.0803%" height="15" fill="rgb(245,161,38)" fg:x="118" fg:w="1"/><text x="9.7203%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="9.4703%" y="565" width="0.0803%" height="15" fill="rgb(233,205,7)" fg:x="118" fg:w="1"/><text x="9.7203%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="9.4703%" y="549" width="0.0803%" height="15" fill="rgb(217,119,18)" fg:x="118" fg:w="1"/><text x="9.7203%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="9.4703%" y="533" width="0.0803%" height="15" fill="rgb(252,126,3)" fg:x="118" fg:w="1"/><text x="9.7203%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="9.4703%" y="517" width="0.0803%" height="15" fill="rgb(252,188,15)" fg:x="118" fg:w="1"/><text x="9.7203%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.4703%" y="501" width="0.0803%" height="15" fill="rgb(228,1,48)" fg:x="118" fg:w="1"/><text x="9.7203%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="9.5506%" y="677" width="0.0803%" height="15" fill="rgb(205,187,8)" fg:x="119" fg:w="1"/><text x="9.8006%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="9.5506%" y="661" width="0.0803%" height="15" fill="rgb(205,105,50)" fg:x="119" fg:w="1"/><text x="9.8006%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="9.5506%" y="645" width="0.0803%" height="15" fill="rgb(211,31,46)" fg:x="119" fg:w="1"/><text x="9.8006%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.5506%" y="629" width="0.0803%" height="15" fill="rgb(213,126,5)" fg:x="119" fg:w="1"/><text x="9.8006%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="9.5506%" y="613" width="0.0803%" height="15" fill="rgb(231,87,9)" fg:x="119" fg:w="1"/><text x="9.8006%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.5506%" y="597" width="0.0803%" height="15" fill="rgb(219,224,20)" fg:x="119" fg:w="1"/><text x="9.8006%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.5506%" y="581" width="0.0803%" height="15" fill="rgb(230,84,21)" fg:x="119" fg:w="1"/><text x="9.8006%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="9.2295%" y="693" width="0.5618%" height="15" fill="rgb(224,169,42)" fg:x="115" fg:w="7"/><text x="9.4795%" y="703.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="9.6308%" y="677" width="0.1605%" height="15" fill="rgb(227,182,13)" fg:x="120" fg:w="2"/><text x="9.8808%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="9.6308%" y="661" width="0.1605%" height="15" fill="rgb(249,57,41)" fg:x="120" fg:w="2"/><text x="9.8808%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="9.6308%" y="645" width="0.1605%" height="15" fill="rgb(214,93,52)" fg:x="120" fg:w="2"/><text x="9.8808%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="9.6308%" y="629" width="0.1605%" height="15" fill="rgb(229,161,34)" fg:x="120" fg:w="2"/><text x="9.8808%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="9.6308%" y="613" width="0.1605%" height="15" fill="rgb(227,193,17)" fg:x="120" fg:w="2"/><text x="9.8808%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.6308%" y="597" width="0.1605%" height="15" fill="rgb(242,164,46)" fg:x="120" fg:w="2"/><text x="9.8808%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="9.7111%" y="581" width="0.0803%" height="15" fill="rgb(242,142,47)" fg:x="121" fg:w="1"/><text x="9.9611%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.7111%" y="565" width="0.0803%" height="15" fill="rgb(208,23,18)" fg:x="121" fg:w="1"/><text x="9.9611%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="9.7111%" y="549" width="0.0803%" height="15" fill="rgb(219,54,38)" fg:x="121" fg:w="1"/><text x="9.9611%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.7111%" y="533" width="0.0803%" height="15" fill="rgb(206,97,35)" fg:x="121" fg:w="1"/><text x="9.9611%" y="543.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.64%)</title><rect x="9.2295%" y="709" width="0.6421%" height="15" fill="rgb(208,76,8)" fg:x="115" fg:w="8"/><text x="9.4795%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="9.7913%" y="693" width="0.0803%" height="15" fill="rgb(220,92,28)" fg:x="122" fg:w="1"/><text x="10.0413%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="9.7913%" y="677" width="0.0803%" height="15" fill="rgb(209,158,39)" fg:x="122" fg:w="1"/><text x="10.0413%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.7913%" y="661" width="0.0803%" height="15" fill="rgb(238,175,9)" fg:x="122" fg:w="1"/><text x="10.0413%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.7913%" y="645" width="0.0803%" height="15" fill="rgb(240,116,17)" fg:x="122" fg:w="1"/><text x="10.0413%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="9.7913%" y="629" width="0.0803%" height="15" fill="rgb(208,7,2)" fg:x="122" fg:w="1"/><text x="10.0413%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.7913%" y="613" width="0.0803%" height="15" fill="rgb(252,52,4)" fg:x="122" fg:w="1"/><text x="10.0413%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="9.7913%" y="597" width="0.0803%" height="15" fill="rgb(222,68,34)" fg:x="122" fg:w="1"/><text x="10.0413%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.7913%" y="581" width="0.0803%" height="15" fill="rgb(242,154,35)" fg:x="122" fg:w="1"/><text x="10.0413%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.7913%" y="565" width="0.0803%" height="15" fill="rgb(210,125,54)" fg:x="122" fg:w="1"/><text x="10.0413%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="9.8716%" y="709" width="0.0803%" height="15" fill="rgb(247,121,18)" fg:x="123" fg:w="1"/><text x="10.1216%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="9.8716%" y="693" width="0.0803%" height="15" fill="rgb(223,48,51)" fg:x="123" fg:w="1"/><text x="10.1216%" y="703.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="9.8716%" y="677" width="0.0803%" height="15" fill="rgb(211,156,48)" fg:x="123" fg:w="1"/><text x="10.1216%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.8716%" y="661" width="0.0803%" height="15" fill="rgb(236,56,31)" fg:x="123" fg:w="1"/><text x="10.1216%" y="671.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="9.9518%" y="693" width="0.0803%" height="15" fill="rgb(247,157,52)" fg:x="124" fg:w="1"/><text x="10.2018%" y="703.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="9.9518%" y="677" width="0.0803%" height="15" fill="rgb(244,121,39)" fg:x="124" fg:w="1"/><text x="10.2018%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.9518%" y="661" width="0.0803%" height="15" fill="rgb(239,4,40)" fg:x="124" fg:w="1"/><text x="10.2018%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.9518%" y="645" width="0.0803%" height="15" fill="rgb(213,204,45)" fg:x="124" fg:w="1"/><text x="10.2018%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="9.9518%" y="629" width="0.0803%" height="15" fill="rgb(242,107,0)" fg:x="124" fg:w="1"/><text x="10.2018%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.1124%" y="533" width="0.0803%" height="15" fill="rgb(215,152,25)" fg:x="126" fg:w="1"/><text x="10.3624%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.1124%" y="517" width="0.0803%" height="15" fill="rgb(233,151,6)" fg:x="126" fg:w="1"/><text x="10.3624%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="10.1124%" y="597" width="0.1605%" height="15" fill="rgb(206,126,44)" fg:x="126" fg:w="2"/><text x="10.3624%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="10.1124%" y="581" width="0.1605%" height="15" fill="rgb(209,145,15)" fg:x="126" fg:w="2"/><text x="10.3624%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="10.1124%" y="565" width="0.1605%" height="15" fill="rgb(235,214,8)" fg:x="126" fg:w="2"/><text x="10.3624%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="10.1124%" y="549" width="0.1605%" height="15" fill="rgb(216,140,51)" fg:x="126" fg:w="2"/><text x="10.3624%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.1926%" y="533" width="0.0803%" height="15" fill="rgb(213,83,34)" fg:x="127" fg:w="1"/><text x="10.4426%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.1926%" y="517" width="0.0803%" height="15" fill="rgb(218,186,44)" fg:x="127" fg:w="1"/><text x="10.4426%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.1926%" y="501" width="0.0803%" height="15" fill="rgb(225,147,10)" fg:x="127" fg:w="1"/><text x="10.4426%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.1926%" y="485" width="0.0803%" height="15" fill="rgb(209,214,20)" fg:x="127" fg:w="1"/><text x="10.4426%" y="495.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="10.2729%" y="597" width="0.0803%" height="15" fill="rgb(252,61,32)" fg:x="128" fg:w="1"/><text x="10.5229%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="10.2729%" y="581" width="0.0803%" height="15" fill="rgb(237,204,10)" fg:x="128" fg:w="1"/><text x="10.5229%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.2729%" y="565" width="0.0803%" height="15" fill="rgb(246,118,16)" fg:x="128" fg:w="1"/><text x="10.5229%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="10.2729%" y="549" width="0.0803%" height="15" fill="rgb(214,50,9)" fg:x="128" fg:w="1"/><text x="10.5229%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.2729%" y="533" width="0.0803%" height="15" fill="rgb(212,41,1)" fg:x="128" fg:w="1"/><text x="10.5229%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.2729%" y="517" width="0.0803%" height="15" fill="rgb(228,172,32)" fg:x="128" fg:w="1"/><text x="10.5229%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.2729%" y="501" width="0.0803%" height="15" fill="rgb(231,85,38)" fg:x="128" fg:w="1"/><text x="10.5229%" y="511.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="10.3531%" y="597" width="0.0803%" height="15" fill="rgb(223,120,31)" fg:x="129" fg:w="1"/><text x="10.6031%" y="607.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="10.3531%" y="581" width="0.0803%" height="15" fill="rgb(254,174,9)" fg:x="129" fg:w="1"/><text x="10.6031%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="10.4334%" y="581" width="0.1605%" height="15" fill="rgb(243,197,0)" fg:x="130" fg:w="2"/><text x="10.6834%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="10.4334%" y="565" width="0.1605%" height="15" fill="rgb(226,186,17)" fg:x="130" fg:w="2"/><text x="10.6834%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="10.4334%" y="549" width="0.1605%" height="15" fill="rgb(229,38,38)" fg:x="130" fg:w="2"/><text x="10.6834%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="10.4334%" y="533" width="0.1605%" height="15" fill="rgb(238,82,14)" fg:x="130" fg:w="2"/><text x="10.6834%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="10.4334%" y="517" width="0.1605%" height="15" fill="rgb(230,154,54)" fg:x="130" fg:w="2"/><text x="10.6834%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.5136%" y="501" width="0.0803%" height="15" fill="rgb(243,84,17)" fg:x="131" fg:w="1"/><text x="10.7636%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.5136%" y="485" width="0.0803%" height="15" fill="rgb(226,41,37)" fg:x="131" fg:w="1"/><text x="10.7636%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="10.5136%" y="469" width="0.0803%" height="15" fill="rgb(219,20,18)" fg:x="131" fg:w="1"/><text x="10.7636%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.5136%" y="453" width="0.0803%" height="15" fill="rgb(243,173,39)" fg:x="131" fg:w="1"/><text x="10.7636%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.5939%" y="469" width="0.0803%" height="15" fill="rgb(245,79,20)" fg:x="132" fg:w="1"/><text x="10.8439%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.5939%" y="453" width="0.0803%" height="15" fill="rgb(229,101,45)" fg:x="132" fg:w="1"/><text x="10.8439%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.5939%" y="437" width="0.0803%" height="15" fill="rgb(215,123,52)" fg:x="132" fg:w="1"/><text x="10.8439%" y="447.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="10.4334%" y="597" width="0.3210%" height="15" fill="rgb(215,11,33)" fg:x="130" fg:w="4"/><text x="10.6834%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="10.5939%" y="581" width="0.1605%" height="15" fill="rgb(245,105,20)" fg:x="132" fg:w="2"/><text x="10.8439%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="10.5939%" y="565" width="0.1605%" height="15" fill="rgb(231,132,30)" fg:x="132" fg:w="2"/><text x="10.8439%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="10.5939%" y="549" width="0.1605%" height="15" fill="rgb(224,62,21)" fg:x="132" fg:w="2"/><text x="10.8439%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="10.5939%" y="533" width="0.1605%" height="15" fill="rgb(209,221,38)" fg:x="132" fg:w="2"/><text x="10.8439%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="10.5939%" y="517" width="0.1605%" height="15" fill="rgb(229,200,30)" fg:x="132" fg:w="2"/><text x="10.8439%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="10.5939%" y="501" width="0.1605%" height="15" fill="rgb(237,142,41)" fg:x="132" fg:w="2"/><text x="10.8439%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="10.5939%" y="485" width="0.1605%" height="15" fill="rgb(238,37,22)" fg:x="132" fg:w="2"/><text x="10.8439%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="10.6742%" y="469" width="0.0803%" height="15" fill="rgb(234,182,17)" fg:x="133" fg:w="1"/><text x="10.9242%" y="479.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="10.6742%" y="453" width="0.0803%" height="15" fill="rgb(237,58,48)" fg:x="133" fg:w="1"/><text x="10.9242%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="10.6742%" y="437" width="0.0803%" height="15" fill="rgb(226,112,37)" fg:x="133" fg:w="1"/><text x="10.9242%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.7544%" y="533" width="0.1605%" height="15" fill="rgb(230,201,20)" fg:x="134" fg:w="2"/><text x="11.0044%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.8347%" y="517" width="0.0803%" height="15" fill="rgb(252,95,39)" fg:x="135" fg:w="1"/><text x="11.0847%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.8347%" y="501" width="0.0803%" height="15" fill="rgb(240,150,33)" fg:x="135" fg:w="1"/><text x="11.0847%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="10.7544%" y="581" width="0.2408%" height="15" fill="rgb(208,202,37)" fg:x="134" fg:w="3"/><text x="11.0044%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="10.7544%" y="565" width="0.2408%" height="15" fill="rgb(251,37,12)" fg:x="134" fg:w="3"/><text x="11.0044%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="10.7544%" y="549" width="0.2408%" height="15" fill="rgb(247,150,26)" fg:x="134" fg:w="3"/><text x="11.0044%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.9149%" y="533" width="0.0803%" height="15" fill="rgb(232,28,8)" fg:x="136" fg:w="1"/><text x="11.1649%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.9149%" y="517" width="0.0803%" height="15" fill="rgb(226,121,34)" fg:x="136" fg:w="1"/><text x="11.1649%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="10.9149%" y="501" width="0.0803%" height="15" fill="rgb(237,23,13)" fg:x="136" fg:w="1"/><text x="11.1649%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="10.9149%" y="485" width="0.0803%" height="15" fill="rgb(214,42,29)" fg:x="136" fg:w="1"/><text x="11.1649%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="10.9149%" y="469" width="0.0803%" height="15" fill="rgb(246,204,29)" fg:x="136" fg:w="1"/><text x="11.1649%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.9149%" y="453" width="0.0803%" height="15" fill="rgb(242,28,40)" fg:x="136" fg:w="1"/><text x="11.1649%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.9149%" y="437" width="0.0803%" height="15" fill="rgb(243,64,49)" fg:x="136" fg:w="1"/><text x="11.1649%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="10.9149%" y="421" width="0.0803%" height="15" fill="rgb(226,93,13)" fg:x="136" fg:w="1"/><text x="11.1649%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="10.9149%" y="405" width="0.0803%" height="15" fill="rgb(241,113,26)" fg:x="136" fg:w="1"/><text x="11.1649%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="10.9149%" y="389" width="0.0803%" height="15" fill="rgb(209,209,0)" fg:x="136" fg:w="1"/><text x="11.1649%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="10.9149%" y="373" width="0.0803%" height="15" fill="rgb(251,183,50)" fg:x="136" fg:w="1"/><text x="11.1649%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.9149%" y="357" width="0.0803%" height="15" fill="rgb(248,24,43)" fg:x="136" fg:w="1"/><text x="11.1649%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.9952%" y="549" width="0.0803%" height="15" fill="rgb(218,102,9)" fg:x="137" fg:w="1"/><text x="11.2452%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.9952%" y="533" width="0.0803%" height="15" fill="rgb(249,209,39)" fg:x="137" fg:w="1"/><text x="11.2452%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.9952%" y="517" width="0.0803%" height="15" fill="rgb(210,37,6)" fg:x="137" fg:w="1"/><text x="11.2452%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="10.9952%" y="581" width="0.1605%" height="15" fill="rgb(212,99,4)" fg:x="137" fg:w="2"/><text x="11.2452%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="10.9952%" y="565" width="0.1605%" height="15" fill="rgb(253,59,46)" fg:x="137" fg:w="2"/><text x="11.2452%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.0754%" y="549" width="0.0803%" height="15" fill="rgb(229,96,9)" fg:x="138" fg:w="1"/><text x="11.3254%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.0754%" y="533" width="0.0803%" height="15" fill="rgb(207,103,49)" fg:x="138" fg:w="1"/><text x="11.3254%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="11.0754%" y="517" width="0.0803%" height="15" fill="rgb(250,226,20)" fg:x="138" fg:w="1"/><text x="11.3254%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.0754%" y="501" width="0.0803%" height="15" fill="rgb(238,220,11)" fg:x="138" fg:w="1"/><text x="11.3254%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.0754%" y="485" width="0.0803%" height="15" fill="rgb(236,74,15)" fg:x="138" fg:w="1"/><text x="11.3254%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.0754%" y="469" width="0.0803%" height="15" fill="rgb(218,43,40)" fg:x="138" fg:w="1"/><text x="11.3254%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.0754%" y="453" width="0.0803%" height="15" fill="rgb(245,206,37)" fg:x="138" fg:w="1"/><text x="11.3254%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="10.7544%" y="597" width="0.4815%" height="15" fill="rgb(206,30,3)" fg:x="134" fg:w="6"/><text x="11.0044%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="11.1557%" y="581" width="0.0803%" height="15" fill="rgb(211,29,35)" fg:x="139" fg:w="1"/><text x="11.4057%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="11.1557%" y="565" width="0.0803%" height="15" fill="rgb(218,49,50)" fg:x="139" fg:w="1"/><text x="11.4057%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.1557%" y="549" width="0.0803%" height="15" fill="rgb(211,114,30)" fg:x="139" fg:w="1"/><text x="11.4057%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="11.1557%" y="533" width="0.0803%" height="15" fill="rgb(238,70,33)" fg:x="139" fg:w="1"/><text x="11.4057%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="11.1557%" y="517" width="0.0803%" height="15" fill="rgb(238,141,50)" fg:x="139" fg:w="1"/><text x="11.4057%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="11.1557%" y="501" width="0.0803%" height="15" fill="rgb(205,69,6)" fg:x="139" fg:w="1"/><text x="11.4057%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.1557%" y="485" width="0.0803%" height="15" fill="rgb(229,65,0)" fg:x="139" fg:w="1"/><text x="11.4057%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="11.1557%" y="469" width="0.0803%" height="15" fill="rgb(211,3,37)" fg:x="139" fg:w="1"/><text x="11.4057%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="11.1557%" y="453" width="0.0803%" height="15" fill="rgb(223,196,42)" fg:x="139" fg:w="1"/><text x="11.4057%" y="463.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="11.1557%" y="437" width="0.0803%" height="15" fill="rgb(227,191,15)" fg:x="139" fg:w="1"/><text x="11.4057%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.1557%" y="421" width="0.0803%" height="15" fill="rgb(229,210,53)" fg:x="139" fg:w="1"/><text x="11.4057%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="11.2360%" y="549" width="0.0803%" height="15" fill="rgb(250,203,10)" fg:x="140" fg:w="1"/><text x="11.4860%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2360%" y="533" width="0.0803%" height="15" fill="rgb(247,8,37)" fg:x="140" fg:w="1"/><text x="11.4860%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.28%)</title><rect x="10.1124%" y="613" width="1.2841%" height="15" fill="rgb(240,52,9)" fg:x="126" fg:w="16"/><text x="10.3624%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="11.2360%" y="597" width="0.1605%" height="15" fill="rgb(243,100,52)" fg:x="140" fg:w="2"/><text x="11.4860%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="11.2360%" y="581" width="0.1605%" height="15" fill="rgb(224,149,30)" fg:x="140" fg:w="2"/><text x="11.4860%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="11.2360%" y="565" width="0.1605%" height="15" fill="rgb(232,27,45)" fg:x="140" fg:w="2"/><text x="11.4860%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.3162%" y="549" width="0.0803%" height="15" fill="rgb(242,161,36)" fg:x="141" fg:w="1"/><text x="11.5662%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.3162%" y="533" width="0.0803%" height="15" fill="rgb(235,223,32)" fg:x="141" fg:w="1"/><text x="11.5662%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="11.3162%" y="517" width="0.0803%" height="15" fill="rgb(242,78,19)" fg:x="141" fg:w="1"/><text x="11.5662%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.3965%" y="581" width="0.0803%" height="15" fill="rgb(233,157,47)" fg:x="142" fg:w="1"/><text x="11.6465%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.3965%" y="565" width="0.0803%" height="15" fill="rgb(251,213,5)" fg:x="142" fg:w="1"/><text x="11.6465%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.3965%" y="549" width="0.0803%" height="15" fill="rgb(215,223,5)" fg:x="142" fg:w="1"/><text x="11.6465%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.3965%" y="533" width="0.0803%" height="15" fill="rgb(230,14,7)" fg:x="142" fg:w="1"/><text x="11.6465%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.3965%" y="517" width="0.0803%" height="15" fill="rgb(249,179,20)" fg:x="142" fg:w="1"/><text x="11.6465%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.3965%" y="501" width="0.0803%" height="15" fill="rgb(230,204,44)" fg:x="142" fg:w="1"/><text x="11.6465%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.3965%" y="485" width="0.0803%" height="15" fill="rgb(233,229,46)" fg:x="142" fg:w="1"/><text x="11.6465%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.3965%" y="469" width="0.0803%" height="15" fill="rgb(210,154,35)" fg:x="142" fg:w="1"/><text x="11.6465%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.3965%" y="453" width="0.0803%" height="15" fill="rgb(220,178,16)" fg:x="142" fg:w="1"/><text x="11.6465%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.3965%" y="437" width="0.0803%" height="15" fill="rgb(243,0,53)" fg:x="142" fg:w="1"/><text x="11.6465%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.3965%" y="421" width="0.0803%" height="15" fill="rgb(223,221,47)" fg:x="142" fg:w="1"/><text x="11.6465%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.3965%" y="405" width="0.0803%" height="15" fill="rgb(233,82,15)" fg:x="142" fg:w="1"/><text x="11.6465%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.3965%" y="389" width="0.0803%" height="15" fill="rgb(222,8,38)" fg:x="142" fg:w="1"/><text x="11.6465%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (19 samples, 1.52%)</title><rect x="10.1124%" y="629" width="1.5249%" height="15" fill="rgb(241,28,48)" fg:x="126" fg:w="19"/><text x="10.3624%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="11.3965%" y="613" width="0.2408%" height="15" fill="rgb(209,227,15)" fg:x="142" fg:w="3"/><text x="11.6465%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="11.3965%" y="597" width="0.2408%" height="15" fill="rgb(234,189,48)" fg:x="142" fg:w="3"/><text x="11.6465%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="11.4767%" y="581" width="0.1605%" height="15" fill="rgb(212,27,44)" fg:x="143" fg:w="2"/><text x="11.7267%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="11.4767%" y="565" width="0.1605%" height="15" fill="rgb(249,55,42)" fg:x="143" fg:w="2"/><text x="11.7267%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="11.4767%" y="549" width="0.1605%" height="15" fill="rgb(215,211,28)" fg:x="143" fg:w="2"/><text x="11.7267%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="11.4767%" y="533" width="0.1605%" height="15" fill="rgb(221,155,16)" fg:x="143" fg:w="2"/><text x="11.7267%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.5570%" y="517" width="0.0803%" height="15" fill="rgb(247,106,30)" fg:x="144" fg:w="1"/><text x="11.8070%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.5570%" y="501" width="0.0803%" height="15" fill="rgb(230,76,31)" fg:x="144" fg:w="1"/><text x="11.8070%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="11.5570%" y="485" width="0.0803%" height="15" fill="rgb(222,6,48)" fg:x="144" fg:w="1"/><text x="11.8070%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (21 samples, 1.69%)</title><rect x="10.0321%" y="693" width="1.6854%" height="15" fill="rgb(228,82,3)" fg:x="125" fg:w="21"/><text x="10.2821%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 1.61%)</title><rect x="10.1124%" y="677" width="1.6051%" height="15" fill="rgb(245,208,52)" fg:x="126" fg:w="20"/><text x="10.3624%" y="687.50"></text></g><g><title>plugins_core::build::QuickThing::make (20 samples, 1.61%)</title><rect x="10.1124%" y="661" width="1.6051%" height="15" fill="rgb(218,65,17)" fg:x="126" fg:w="20"/><text x="10.3624%" y="671.50"></text></g><g><title>plugins_core::build::Build::leads_to (20 samples, 1.61%)</title><rect x="10.1124%" y="645" width="1.6051%" height="15" fill="rgb(242,63,26)" fg:x="126" fg:w="20"/><text x="10.3624%" y="655.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="11.6372%" y="629" width="0.0803%" height="15" fill="rgb(224,119,39)" fg:x="145" fg:w="1"/><text x="11.8872%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="11.6372%" y="613" width="0.0803%" height="15" fill="rgb(229,106,3)" fg:x="145" fg:w="1"/><text x="11.8872%" y="623.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="11.6372%" y="597" width="0.0803%" height="15" fill="rgb(248,6,33)" fg:x="145" fg:w="1"/><text x="11.8872%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.6372%" y="581" width="0.0803%" height="15" fill="rgb(226,3,49)" fg:x="145" fg:w="1"/><text x="11.8872%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.6372%" y="565" width="0.0803%" height="15" fill="rgb(228,142,14)" fg:x="145" fg:w="1"/><text x="11.8872%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.6372%" y="549" width="0.0803%" height="15" fill="rgb(241,141,54)" fg:x="145" fg:w="1"/><text x="11.8872%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.6372%" y="533" width="0.0803%" height="15" fill="rgb(252,17,50)" fg:x="145" fg:w="1"/><text x="11.8872%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.6372%" y="517" width="0.0803%" height="15" fill="rgb(221,120,48)" fg:x="145" fg:w="1"/><text x="11.8872%" y="527.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="11.6372%" y="501" width="0.0803%" height="15" fill="rgb(229,171,33)" fg:x="145" fg:w="1"/><text x="11.8872%" y="511.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="11.6372%" y="485" width="0.0803%" height="15" fill="rgb(236,207,21)" fg:x="145" fg:w="1"/><text x="11.8872%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="11.7175%" y="693" width="0.0803%" height="15" fill="rgb(218,93,35)" fg:x="146" fg:w="1"/><text x="11.9675%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="11.7175%" y="677" width="0.0803%" height="15" fill="rgb(207,101,8)" fg:x="146" fg:w="1"/><text x="11.9675%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.7175%" y="661" width="0.0803%" height="15" fill="rgb(237,67,44)" fg:x="146" fg:w="1"/><text x="11.9675%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.7978%" y="661" width="0.0803%" height="15" fill="rgb(236,218,7)" fg:x="147" fg:w="1"/><text x="12.0478%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="11.7978%" y="677" width="0.1605%" height="15" fill="rgb(252,207,10)" fg:x="147" fg:w="2"/><text x="12.0478%" y="687.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="11.8780%" y="661" width="0.0803%" height="15" fill="rgb(221,175,6)" fg:x="148" fg:w="1"/><text x="12.1280%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="11.9583%" y="629" width="0.1605%" height="15" fill="rgb(230,105,53)" fg:x="149" fg:w="2"/><text x="12.2083%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="11.9583%" y="613" width="0.1605%" height="15" fill="rgb(253,83,6)" fg:x="149" fg:w="2"/><text x="12.2083%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="11.9583%" y="597" width="0.1605%" height="15" fill="rgb(206,198,44)" fg:x="149" fg:w="2"/><text x="12.2083%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.0385%" y="581" width="0.0803%" height="15" fill="rgb(206,164,29)" fg:x="150" fg:w="1"/><text x="12.2885%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.0385%" y="565" width="0.0803%" height="15" fill="rgb(215,2,50)" fg:x="150" fg:w="1"/><text x="12.2885%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.0385%" y="549" width="0.0803%" height="15" fill="rgb(246,127,18)" fg:x="150" fg:w="1"/><text x="12.2885%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.0385%" y="533" width="0.0803%" height="15" fill="rgb(232,6,21)" fg:x="150" fg:w="1"/><text x="12.2885%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.0385%" y="517" width="0.0803%" height="15" fill="rgb(224,154,1)" fg:x="150" fg:w="1"/><text x="12.2885%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.0385%" y="501" width="0.0803%" height="15" fill="rgb(248,135,32)" fg:x="150" fg:w="1"/><text x="12.2885%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.0385%" y="485" width="0.0803%" height="15" fill="rgb(253,129,38)" fg:x="150" fg:w="1"/><text x="12.2885%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.0385%" y="469" width="0.0803%" height="15" fill="rgb(214,110,11)" fg:x="150" fg:w="1"/><text x="12.2885%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.0385%" y="453" width="0.0803%" height="15" fill="rgb(246,150,22)" fg:x="150" fg:w="1"/><text x="12.2885%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.0385%" y="437" width="0.0803%" height="15" fill="rgb(219,170,39)" fg:x="150" fg:w="1"/><text x="12.2885%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.0385%" y="421" width="0.0803%" height="15" fill="rgb(221,143,52)" fg:x="150" fg:w="1"/><text x="12.2885%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0385%" y="405" width="0.0803%" height="15" fill="rgb(237,122,11)" fg:x="150" fg:w="1"/><text x="12.2885%" y="415.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="12.1990%" y="533" width="0.1605%" height="15" fill="rgb(217,114,13)" fg:x="152" fg:w="2"/><text x="12.4490%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="12.2793%" y="517" width="0.0803%" height="15" fill="rgb(218,184,28)" fg:x="153" fg:w="1"/><text x="12.5293%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="12.2793%" y="501" width="0.0803%" height="15" fill="rgb(237,33,22)" fg:x="153" fg:w="1"/><text x="12.5293%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="12.2793%" y="485" width="0.0803%" height="15" fill="rgb(224,56,42)" fg:x="153" fg:w="1"/><text x="12.5293%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.2793%" y="469" width="0.0803%" height="15" fill="rgb(216,138,53)" fg:x="153" fg:w="1"/><text x="12.5293%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.2793%" y="453" width="0.0803%" height="15" fill="rgb(233,229,40)" fg:x="153" fg:w="1"/><text x="12.5293%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.2793%" y="437" width="0.0803%" height="15" fill="rgb(252,105,0)" fg:x="153" fg:w="1"/><text x="12.5293%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="12.1990%" y="549" width="0.2408%" height="15" fill="rgb(212,75,24)" fg:x="152" fg:w="3"/><text x="12.4490%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.3596%" y="533" width="0.0803%" height="15" fill="rgb(235,168,50)" fg:x="154" fg:w="1"/><text x="12.6096%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="12.3596%" y="517" width="0.0803%" height="15" fill="rgb(247,204,12)" fg:x="154" fg:w="1"/><text x="12.6096%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.3596%" y="501" width="0.0803%" height="15" fill="rgb(250,203,27)" fg:x="154" fg:w="1"/><text x="12.6096%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.3596%" y="485" width="0.0803%" height="15" fill="rgb(221,215,2)" fg:x="154" fg:w="1"/><text x="12.6096%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.5201%" y="501" width="0.0803%" height="15" fill="rgb(242,163,47)" fg:x="156" fg:w="1"/><text x="12.7701%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.5201%" y="485" width="0.0803%" height="15" fill="rgb(237,136,50)" fg:x="156" fg:w="1"/><text x="12.7701%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="12.4398%" y="549" width="0.2408%" height="15" fill="rgb(217,201,47)" fg:x="155" fg:w="3"/><text x="12.6898%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="12.4398%" y="533" width="0.2408%" height="15" fill="rgb(212,38,47)" fg:x="155" fg:w="3"/><text x="12.6898%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="12.5201%" y="517" width="0.1605%" height="15" fill="rgb(254,113,41)" fg:x="156" fg:w="2"/><text x="12.7701%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.6003%" y="501" width="0.0803%" height="15" fill="rgb(236,7,22)" fg:x="157" fg:w="1"/><text x="12.8503%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.6003%" y="485" width="0.0803%" height="15" fill="rgb(235,81,25)" fg:x="157" fg:w="1"/><text x="12.8503%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.64%)</title><rect x="12.1188%" y="581" width="0.6421%" height="15" fill="rgb(216,41,31)" fg:x="151" fg:w="8"/><text x="12.3688%" y="591.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (8 samples, 0.64%)</title><rect x="12.1188%" y="565" width="0.6421%" height="15" fill="rgb(249,219,15)" fg:x="151" fg:w="8"/><text x="12.3688%" y="575.50"></text></g><g><title>kernel::model::any_entity_changes (1 samples, 0.08%)</title><rect x="12.6806%" y="549" width="0.0803%" height="15" fill="rgb(248,201,3)" fg:x="158" fg:w="1"/><text x="12.9306%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="12.6806%" y="533" width="0.0803%" height="15" fill="rgb(249,141,18)" fg:x="158" fg:w="1"/><text x="12.9306%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.6806%" y="517" width="0.0803%" height="15" fill="rgb(222,32,39)" fg:x="158" fg:w="1"/><text x="12.9306%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="12.6806%" y="501" width="0.0803%" height="15" fill="rgb(237,139,51)" fg:x="158" fg:w="1"/><text x="12.9306%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6806%" y="485" width="0.0803%" height="15" fill="rgb(218,210,4)" fg:x="158" fg:w="1"/><text x="12.9306%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6806%" y="469" width="0.0803%" height="15" fill="rgb(217,199,13)" fg:x="158" fg:w="1"/><text x="12.9306%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.6806%" y="453" width="0.0803%" height="15" fill="rgb(222,118,25)" fg:x="158" fg:w="1"/><text x="12.9306%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="12.7608%" y="581" width="0.0803%" height="15" fill="rgb(241,70,28)" fg:x="159" fg:w="1"/><text x="13.0108%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="12.9213%" y="533" width="0.0803%" height="15" fill="rgb(205,51,41)" fg:x="161" fg:w="1"/><text x="13.1713%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="12.9213%" y="517" width="0.0803%" height="15" fill="rgb(237,165,49)" fg:x="161" fg:w="1"/><text x="13.1713%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="12.9213%" y="549" width="0.1605%" height="15" fill="rgb(213,10,51)" fg:x="161" fg:w="2"/><text x="13.1713%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.0016%" y="533" width="0.0803%" height="15" fill="rgb(245,89,32)" fg:x="162" fg:w="1"/><text x="13.2516%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.0016%" y="517" width="0.0803%" height="15" fill="rgb(249,81,54)" fg:x="162" fg:w="1"/><text x="13.2516%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.0016%" y="501" width="0.0803%" height="15" fill="rgb(223,134,14)" fg:x="162" fg:w="1"/><text x="13.2516%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="13.1621%" y="533" width="0.0803%" height="15" fill="rgb(233,62,37)" fg:x="164" fg:w="1"/><text x="13.4121%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.2424%" y="517" width="0.0803%" height="15" fill="rgb(219,117,42)" fg:x="165" fg:w="1"/><text x="13.4924%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.2424%" y="501" width="0.0803%" height="15" fill="rgb(248,40,28)" fg:x="165" fg:w="1"/><text x="13.4924%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.2424%" y="485" width="0.0803%" height="15" fill="rgb(246,66,35)" fg:x="165" fg:w="1"/><text x="13.4924%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.2424%" y="469" width="0.0803%" height="15" fill="rgb(250,229,22)" fg:x="165" fg:w="1"/><text x="13.4924%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="13.3226%" y="517" width="0.2408%" height="15" fill="rgb(213,89,18)" fg:x="166" fg:w="3"/><text x="13.5726%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="13.4029%" y="501" width="0.1605%" height="15" fill="rgb(213,122,9)" fg:x="167" fg:w="2"/><text x="13.6529%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="13.4029%" y="485" width="0.1605%" height="15" fill="rgb(220,213,48)" fg:x="167" fg:w="2"/><text x="13.6529%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="13.5634%" y="485" width="0.4013%" height="15" fill="rgb(244,109,54)" fg:x="169" fg:w="5"/><text x="13.8134%" y="495.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="13.6437%" y="469" width="0.3210%" height="15" fill="rgb(254,104,49)" fg:x="170" fg:w="4"/><text x="13.8937%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="13.7239%" y="453" width="0.2408%" height="15" fill="rgb(219,28,32)" fg:x="171" fg:w="3"/><text x="13.9739%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="13.8042%" y="437" width="0.1605%" height="15" fill="rgb(249,153,33)" fg:x="172" fg:w="2"/><text x="14.0542%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="13.5634%" y="501" width="0.4815%" height="15" fill="rgb(230,116,21)" fg:x="169" fg:w="6"/><text x="13.8134%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="13.9647%" y="485" width="0.0803%" height="15" fill="rgb(247,110,3)" fg:x="174" fg:w="1"/><text x="14.2147%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="13.9647%" y="469" width="0.0803%" height="15" fill="rgb(227,128,3)" fg:x="174" fg:w="1"/><text x="14.2147%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="13.5634%" y="517" width="0.5618%" height="15" fill="rgb(208,21,1)" fg:x="169" fg:w="7"/><text x="13.8134%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.0449%" y="501" width="0.0803%" height="15" fill="rgb(225,24,20)" fg:x="175" fg:w="1"/><text x="14.2949%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.0449%" y="485" width="0.0803%" height="15" fill="rgb(250,159,24)" fg:x="175" fg:w="1"/><text x="14.2949%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.0449%" y="469" width="0.0803%" height="15" fill="rgb(214,30,53)" fg:x="175" fg:w="1"/><text x="14.2949%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="13.2424%" y="533" width="0.9631%" height="15" fill="rgb(243,198,11)" fg:x="165" fg:w="12"/><text x="13.4924%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.1252%" y="517" width="0.0803%" height="15" fill="rgb(232,33,1)" fg:x="176" fg:w="1"/><text x="14.3752%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.44%)</title><rect x="12.8411%" y="565" width="1.4446%" height="15" fill="rgb(242,60,11)" fg:x="160" fg:w="18"/><text x="13.0911%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="13.0819%" y="549" width="1.2039%" height="15" fill="rgb(241,229,34)" fg:x="163" fg:w="15"/><text x="13.3319%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.2055%" y="533" width="0.0803%" height="15" fill="rgb(230,92,51)" fg:x="177" fg:w="1"/><text x="14.4555%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.2055%" y="517" width="0.0803%" height="15" fill="rgb(212,209,8)" fg:x="177" fg:w="1"/><text x="14.4555%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.2055%" y="501" width="0.0803%" height="15" fill="rgb(241,55,35)" fg:x="177" fg:w="1"/><text x="14.4555%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.3660%" y="517" width="0.0803%" height="15" fill="rgb(208,187,52)" fg:x="179" fg:w="1"/><text x="14.6160%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="14.5265%" y="485" width="0.1605%" height="15" fill="rgb(251,110,17)" fg:x="181" fg:w="2"/><text x="14.7765%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.6870%" y="453" width="0.0803%" height="15" fill="rgb(246,225,54)" fg:x="183" fg:w="1"/><text x="14.9370%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="14.6870%" y="485" width="0.1605%" height="15" fill="rgb(220,109,6)" fg:x="183" fg:w="2"/><text x="14.9370%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="14.6870%" y="469" width="0.1605%" height="15" fill="rgb(228,56,50)" fg:x="183" fg:w="2"/><text x="14.9370%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.7673%" y="453" width="0.0803%" height="15" fill="rgb(230,34,30)" fg:x="184" fg:w="1"/><text x="15.0173%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="14.2857%" y="565" width="0.6421%" height="15" fill="rgb(205,28,42)" fg:x="178" fg:w="8"/><text x="14.5357%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="14.2857%" y="549" width="0.6421%" height="15" fill="rgb(215,68,0)" fg:x="178" fg:w="8"/><text x="14.5357%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="14.2857%" y="533" width="0.6421%" height="15" fill="rgb(206,91,47)" fg:x="178" fg:w="8"/><text x="14.5357%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="14.4462%" y="517" width="0.4815%" height="15" fill="rgb(241,159,43)" fg:x="180" fg:w="6"/><text x="14.6962%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="14.4462%" y="501" width="0.4815%" height="15" fill="rgb(232,191,38)" fg:x="180" fg:w="6"/><text x="14.6962%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.8475%" y="485" width="0.0803%" height="15" fill="rgb(212,180,41)" fg:x="185" fg:w="1"/><text x="15.0975%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.8475%" y="469" width="0.0803%" height="15" fill="rgb(236,134,49)" fg:x="185" fg:w="1"/><text x="15.0975%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.0883%" y="517" width="0.1605%" height="15" fill="rgb(221,83,26)" fg:x="188" fg:w="2"/><text x="15.3383%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.3291%" y="469" width="0.0803%" height="15" fill="rgb(215,87,39)" fg:x="191" fg:w="1"/><text x="15.5791%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.3291%" y="453" width="0.0803%" height="15" fill="rgb(242,28,29)" fg:x="191" fg:w="1"/><text x="15.5791%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3291%" y="437" width="0.0803%" height="15" fill="rgb(212,219,47)" fg:x="191" fg:w="1"/><text x="15.5791%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.5698%" y="437" width="0.1605%" height="15" fill="rgb(221,35,20)" fg:x="194" fg:w="2"/><text x="15.8198%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.6501%" y="421" width="0.0803%" height="15" fill="rgb(234,144,13)" fg:x="195" fg:w="1"/><text x="15.9001%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.6501%" y="405" width="0.0803%" height="15" fill="rgb(237,41,27)" fg:x="195" fg:w="1"/><text x="15.9001%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="15.3291%" y="485" width="0.4815%" height="15" fill="rgb(253,175,5)" fg:x="191" fg:w="6"/><text x="15.5791%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="15.4093%" y="469" width="0.4013%" height="15" fill="rgb(235,210,51)" fg:x="192" fg:w="5"/><text x="15.6593%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="15.4896%" y="453" width="0.3210%" height="15" fill="rgb(241,180,35)" fg:x="193" fg:w="4"/><text x="15.7396%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7303%" y="437" width="0.0803%" height="15" fill="rgb(219,45,16)" fg:x="196" fg:w="1"/><text x="15.9803%" y="447.50"></text></g><g><title>engine::session::Session::flush (51 samples, 4.09%)</title><rect x="11.7978%" y="693" width="4.0931%" height="15" fill="rgb(247,212,4)" fg:x="147" fg:w="51"/><text x="12.0478%" y="703.50">engi..</text></g><g><title>engine::session::Session::save_changes (49 samples, 3.93%)</title><rect x="11.9583%" y="677" width="3.9326%" height="15" fill="rgb(224,211,1)" fg:x="149" fg:w="49"/><text x="12.2083%" y="687.50">engi..</text></g><g><title>engine::session::state::State::close (49 samples, 3.93%)</title><rect x="11.9583%" y="661" width="3.9326%" height="15" fill="rgb(210,193,36)" fg:x="149" fg:w="49"/><text x="12.2083%" y="671.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (49 samples, 3.93%)</title><rect x="11.9583%" y="645" width="3.9326%" height="15" fill="rgb(215,121,20)" fg:x="149" fg:w="49"/><text x="12.2083%" y="655.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (47 samples, 3.77%)</title><rect x="12.1188%" y="629" width="3.7721%" height="15" fill="rgb(238,146,2)" fg:x="151" fg:w="47"/><text x="12.3688%" y="639.50">engi..</text></g><g><title>core::iter::adapters::try_process (47 samples, 3.77%)</title><rect x="12.1188%" y="613" width="3.7721%" height="15" fill="rgb(254,123,45)" fg:x="151" fg:w="47"/><text x="12.3688%" y="623.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (47 samples, 3.77%)</title><rect x="12.1188%" y="597" width="3.7721%" height="15" fill="rgb(225,126,11)" fg:x="151" fg:w="47"/><text x="12.3688%" y="607.50">&lt;all..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (38 samples, 3.05%)</title><rect x="12.8411%" y="581" width="3.0498%" height="15" fill="rgb(239,12,5)" fg:x="160" fg:w="38"/><text x="13.0911%" y="591.50">eng..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.96%)</title><rect x="14.9278%" y="565" width="0.9631%" height="15" fill="rgb(241,207,14)" fg:x="186" fg:w="12"/><text x="15.1778%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.96%)</title><rect x="14.9278%" y="549" width="0.9631%" height="15" fill="rgb(227,134,33)" fg:x="186" fg:w="12"/><text x="15.1778%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.96%)</title><rect x="14.9278%" y="533" width="0.9631%" height="15" fill="rgb(221,40,52)" fg:x="186" fg:w="12"/><text x="15.1778%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="15.2488%" y="517" width="0.6421%" height="15" fill="rgb(206,93,8)" fg:x="190" fg:w="8"/><text x="15.4988%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="15.3291%" y="501" width="0.5618%" height="15" fill="rgb(242,160,22)" fg:x="191" fg:w="7"/><text x="15.5791%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="15.8106%" y="485" width="0.0803%" height="15" fill="rgb(232,204,40)" fg:x="197" fg:w="1"/><text x="16.0606%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="15.8106%" y="469" width="0.0803%" height="15" fill="rgb(247,210,47)" fg:x="197" fg:w="1"/><text x="16.0606%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="15.8909%" y="661" width="0.0803%" height="15" fill="rgb(211,91,7)" fg:x="198" fg:w="1"/><text x="16.1409%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="15.8909%" y="645" width="0.0803%" height="15" fill="rgb(252,160,34)" fg:x="198" fg:w="1"/><text x="16.1409%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.8909%" y="629" width="0.0803%" height="15" fill="rgb(220,34,39)" fg:x="198" fg:w="1"/><text x="16.1409%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.9711%" y="581" width="0.0803%" height="15" fill="rgb(247,49,38)" fg:x="199" fg:w="1"/><text x="16.2211%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.9711%" y="565" width="0.0803%" height="15" fill="rgb(228,175,44)" fg:x="199" fg:w="1"/><text x="16.2211%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.9711%" y="549" width="0.0803%" height="15" fill="rgb(218,214,32)" fg:x="199" fg:w="1"/><text x="16.2211%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.9711%" y="533" width="0.0803%" height="15" fill="rgb(213,50,12)" fg:x="199" fg:w="1"/><text x="16.2211%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="16.0514%" y="517" width="0.1605%" height="15" fill="rgb(219,35,41)" fg:x="200" fg:w="2"/><text x="16.3014%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.1316%" y="501" width="0.0803%" height="15" fill="rgb(219,18,38)" fg:x="201" fg:w="1"/><text x="16.3816%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (5 samples, 0.40%)</title><rect x="15.8909%" y="693" width="0.4013%" height="15" fill="rgb(223,217,6)" fg:x="198" fg:w="5"/><text x="16.1409%" y="703.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="15.8909%" y="677" width="0.4013%" height="15" fill="rgb(208,193,35)" fg:x="198" fg:w="5"/><text x="16.1409%" y="687.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="15.9711%" y="661" width="0.3210%" height="15" fill="rgb(254,212,54)" fg:x="199" fg:w="4"/><text x="16.2211%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="15.9711%" y="645" width="0.3210%" height="15" fill="rgb(205,10,2)" fg:x="199" fg:w="4"/><text x="16.2211%" y="655.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="15.9711%" y="629" width="0.3210%" height="15" fill="rgb(230,133,29)" fg:x="199" fg:w="4"/><text x="16.2211%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="15.9711%" y="613" width="0.3210%" height="15" fill="rgb(226,14,15)" fg:x="199" fg:w="4"/><text x="16.2211%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="15.9711%" y="597" width="0.3210%" height="15" fill="rgb(226,140,54)" fg:x="199" fg:w="4"/><text x="16.2211%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="16.0514%" y="581" width="0.2408%" height="15" fill="rgb(250,47,41)" fg:x="200" fg:w="3"/><text x="16.3014%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="16.0514%" y="565" width="0.2408%" height="15" fill="rgb(227,218,41)" fg:x="200" fg:w="3"/><text x="16.3014%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="16.0514%" y="549" width="0.2408%" height="15" fill="rgb(254,183,7)" fg:x="200" fg:w="3"/><text x="16.3014%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="16.0514%" y="533" width="0.2408%" height="15" fill="rgb(206,84,53)" fg:x="200" fg:w="3"/><text x="16.3014%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.2119%" y="517" width="0.0803%" height="15" fill="rgb(213,177,2)" fg:x="202" fg:w="1"/><text x="16.4619%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.2119%" y="501" width="0.0803%" height="15" fill="rgb(234,28,29)" fg:x="202" fg:w="1"/><text x="16.4619%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="16.2921%" y="693" width="0.0803%" height="15" fill="rgb(248,211,38)" fg:x="203" fg:w="1"/><text x="16.5421%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="16.2921%" y="677" width="0.0803%" height="15" fill="rgb(246,30,0)" fg:x="203" fg:w="1"/><text x="16.5421%" y="687.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="16.2921%" y="661" width="0.0803%" height="15" fill="rgb(244,115,24)" fg:x="203" fg:w="1"/><text x="16.5421%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.2921%" y="645" width="0.0803%" height="15" fill="rgb(226,193,14)" fg:x="203" fg:w="1"/><text x="16.5421%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.2921%" y="629" width="0.0803%" height="15" fill="rgb(211,196,48)" fg:x="203" fg:w="1"/><text x="16.5421%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.2921%" y="613" width="0.0803%" height="15" fill="rgb(235,32,20)" fg:x="203" fg:w="1"/><text x="16.5421%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.2921%" y="597" width="0.0803%" height="15" fill="rgb(251,151,49)" fg:x="203" fg:w="1"/><text x="16.5421%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="16.2921%" y="581" width="0.0803%" height="15" fill="rgb(254,141,38)" fg:x="203" fg:w="1"/><text x="16.5421%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="16.2921%" y="565" width="0.0803%" height="15" fill="rgb(209,118,44)" fg:x="203" fg:w="1"/><text x="16.5421%" y="575.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="16.3724%" y="693" width="0.0803%" height="15" fill="rgb(205,81,4)" fg:x="204" fg:w="1"/><text x="16.6224%" y="703.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="16.3724%" y="677" width="0.0803%" height="15" fill="rgb(241,25,6)" fg:x="204" fg:w="1"/><text x="16.6224%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.4526%" y="677" width="0.0803%" height="15" fill="rgb(212,179,29)" fg:x="205" fg:w="1"/><text x="16.7026%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="16.5329%" y="645" width="0.0803%" height="15" fill="rgb(241,40,32)" fg:x="206" fg:w="1"/><text x="16.7829%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="16.5329%" y="629" width="0.0803%" height="15" fill="rgb(223,35,2)" fg:x="206" fg:w="1"/><text x="16.7829%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.5329%" y="613" width="0.0803%" height="15" fill="rgb(221,125,54)" fg:x="206" fg:w="1"/><text x="16.7829%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.5329%" y="597" width="0.0803%" height="15" fill="rgb(230,5,49)" fg:x="206" fg:w="1"/><text x="16.7829%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.5329%" y="581" width="0.0803%" height="15" fill="rgb(221,157,7)" fg:x="206" fg:w="1"/><text x="16.7829%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="16.6132%" y="645" width="0.0803%" height="15" fill="rgb(242,163,10)" fg:x="207" fg:w="1"/><text x="16.8632%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="16.6132%" y="629" width="0.0803%" height="15" fill="rgb(232,30,2)" fg:x="207" fg:w="1"/><text x="16.8632%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.6132%" y="613" width="0.0803%" height="15" fill="rgb(245,102,40)" fg:x="207" fg:w="1"/><text x="16.8632%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="16.6132%" y="597" width="0.0803%" height="15" fill="rgb(242,10,41)" fg:x="207" fg:w="1"/><text x="16.8632%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.6132%" y="581" width="0.0803%" height="15" fill="rgb(236,184,36)" fg:x="207" fg:w="1"/><text x="16.8632%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="16.6934%" y="645" width="0.1605%" height="15" fill="rgb(247,147,48)" fg:x="208" fg:w="2"/><text x="16.9434%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="16.6934%" y="629" width="0.1605%" height="15" fill="rgb(226,166,2)" fg:x="208" fg:w="2"/><text x="16.9434%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.6934%" y="613" width="0.1605%" height="15" fill="rgb(251,196,7)" fg:x="208" fg:w="2"/><text x="16.9434%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.6934%" y="597" width="0.1605%" height="15" fill="rgb(241,40,13)" fg:x="208" fg:w="2"/><text x="16.9434%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.7737%" y="581" width="0.0803%" height="15" fill="rgb(254,4,12)" fg:x="209" fg:w="1"/><text x="17.0237%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7737%" y="565" width="0.0803%" height="15" fill="rgb(244,139,49)" fg:x="209" fg:w="1"/><text x="17.0237%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7737%" y="549" width="0.0803%" height="15" fill="rgb(227,28,42)" fg:x="209" fg:w="1"/><text x="17.0237%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.7737%" y="533" width="0.0803%" height="15" fill="rgb(231,135,32)" fg:x="209" fg:w="1"/><text x="17.0237%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.7737%" y="517" width="0.0803%" height="15" fill="rgb(244,182,3)" fg:x="209" fg:w="1"/><text x="17.0237%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.7737%" y="501" width="0.0803%" height="15" fill="rgb(247,46,19)" fg:x="209" fg:w="1"/><text x="17.0237%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.7737%" y="485" width="0.0803%" height="15" fill="rgb(251,179,10)" fg:x="209" fg:w="1"/><text x="17.0237%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.7737%" y="469" width="0.0803%" height="15" fill="rgb(229,222,18)" fg:x="209" fg:w="1"/><text x="17.0237%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.7737%" y="453" width="0.0803%" height="15" fill="rgb(251,107,20)" fg:x="209" fg:w="1"/><text x="17.0237%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.7737%" y="437" width="0.0803%" height="15" fill="rgb(233,193,19)" fg:x="209" fg:w="1"/><text x="17.0237%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.7737%" y="421" width="0.0803%" height="15" fill="rgb(229,146,53)" fg:x="209" fg:w="1"/><text x="17.0237%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.7737%" y="405" width="0.0803%" height="15" fill="rgb(244,52,11)" fg:x="209" fg:w="1"/><text x="17.0237%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.7737%" y="389" width="0.0803%" height="15" fill="rgb(245,211,46)" fg:x="209" fg:w="1"/><text x="17.0237%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="16.5329%" y="661" width="0.4013%" height="15" fill="rgb(213,8,31)" fg:x="206" fg:w="5"/><text x="16.7829%" y="671.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="16.8539%" y="645" width="0.0803%" height="15" fill="rgb(205,101,39)" fg:x="210" fg:w="1"/><text x="17.1039%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="16.8539%" y="629" width="0.0803%" height="15" fill="rgb(212,157,1)" fg:x="210" fg:w="1"/><text x="17.1039%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.8539%" y="613" width="0.0803%" height="15" fill="rgb(232,30,46)" fg:x="210" fg:w="1"/><text x="17.1039%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.8539%" y="597" width="0.0803%" height="15" fill="rgb(216,201,6)" fg:x="210" fg:w="1"/><text x="17.1039%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8539%" y="581" width="0.0803%" height="15" fill="rgb(209,18,6)" fg:x="210" fg:w="1"/><text x="17.1039%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="16.5329%" y="677" width="0.4815%" height="15" fill="rgb(219,138,3)" fg:x="206" fg:w="6"/><text x="16.7829%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.9342%" y="661" width="0.0803%" height="15" fill="rgb(210,91,46)" fg:x="211" fg:w="1"/><text x="17.1842%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.9342%" y="645" width="0.0803%" height="15" fill="rgb(241,80,44)" fg:x="211" fg:w="1"/><text x="17.1842%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.9342%" y="629" width="0.0803%" height="15" fill="rgb(236,205,36)" fg:x="211" fg:w="1"/><text x="17.1842%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.9342%" y="613" width="0.0803%" height="15" fill="rgb(205,59,37)" fg:x="211" fg:w="1"/><text x="17.1842%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.9342%" y="597" width="0.0803%" height="15" fill="rgb(239,166,39)" fg:x="211" fg:w="1"/><text x="17.1842%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.9342%" y="581" width="0.0803%" height="15" fill="rgb(239,146,40)" fg:x="211" fg:w="1"/><text x="17.1842%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.9342%" y="565" width="0.0803%" height="15" fill="rgb(231,11,52)" fg:x="211" fg:w="1"/><text x="17.1842%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.9342%" y="549" width="0.0803%" height="15" fill="rgb(253,21,37)" fg:x="211" fg:w="1"/><text x="17.1842%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.9342%" y="533" width="0.0803%" height="15" fill="rgb(224,87,39)" fg:x="211" fg:w="1"/><text x="17.1842%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.9342%" y="517" width="0.0803%" height="15" fill="rgb(249,15,46)" fg:x="211" fg:w="1"/><text x="17.1842%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.9342%" y="501" width="0.0803%" height="15" fill="rgb(250,37,51)" fg:x="211" fg:w="1"/><text x="17.1842%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.9342%" y="485" width="0.0803%" height="15" fill="rgb(205,185,43)" fg:x="211" fg:w="1"/><text x="17.1842%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.9342%" y="469" width="0.0803%" height="15" fill="rgb(206,65,41)" fg:x="211" fg:w="1"/><text x="17.1842%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.9342%" y="453" width="0.0803%" height="15" fill="rgb(236,159,32)" fg:x="211" fg:w="1"/><text x="17.1842%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.9342%" y="437" width="0.0803%" height="15" fill="rgb(228,199,27)" fg:x="211" fg:w="1"/><text x="17.1842%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.9342%" y="421" width="0.0803%" height="15" fill="rgb(212,0,37)" fg:x="211" fg:w="1"/><text x="17.1842%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.9342%" y="405" width="0.0803%" height="15" fill="rgb(248,50,11)" fg:x="211" fg:w="1"/><text x="17.1842%" y="415.50"></text></g><g><title>&lt;plugins_core::moving::model::MovingHooks as plugins_core::moving::model::AfterMoveHook&gt;::after_move (1 samples, 0.08%)</title><rect x="17.0144%" y="661" width="0.0803%" height="15" fill="rgb(231,164,25)" fg:x="212" fg:w="1"/><text x="17.2644%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="17.0947%" y="661" width="0.0803%" height="15" fill="rgb(238,38,39)" fg:x="213" fg:w="1"/><text x="17.3447%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="17.1750%" y="661" width="0.0803%" height="15" fill="rgb(210,15,50)" fg:x="214" fg:w="1"/><text x="17.4250%" y="671.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="17.1750%" y="645" width="0.0803%" height="15" fill="rgb(251,126,36)" fg:x="214" fg:w="1"/><text x="17.4250%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="17.1750%" y="629" width="0.0803%" height="15" fill="rgb(243,59,26)" fg:x="214" fg:w="1"/><text x="17.4250%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.1750%" y="613" width="0.0803%" height="15" fill="rgb(215,24,30)" fg:x="214" fg:w="1"/><text x="17.4250%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.1750%" y="597" width="0.0803%" height="15" fill="rgb(253,50,51)" fg:x="214" fg:w="1"/><text x="17.4250%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.1750%" y="581" width="0.0803%" height="15" fill="rgb(252,2,16)" fg:x="214" fg:w="1"/><text x="17.4250%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.1750%" y="565" width="0.0803%" height="15" fill="rgb(209,123,36)" fg:x="214" fg:w="1"/><text x="17.4250%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.1750%" y="549" width="0.0803%" height="15" fill="rgb(245,60,15)" fg:x="214" fg:w="1"/><text x="17.4250%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.1750%" y="533" width="0.0803%" height="15" fill="rgb(246,4,13)" fg:x="214" fg:w="1"/><text x="17.4250%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.1750%" y="517" width="0.0803%" height="15" fill="rgb(210,223,46)" fg:x="214" fg:w="1"/><text x="17.4250%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.2552%" y="645" width="0.0803%" height="15" fill="rgb(248,1,9)" fg:x="215" fg:w="1"/><text x="17.5052%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="17.2552%" y="629" width="0.0803%" height="15" fill="rgb(254,2,34)" fg:x="215" fg:w="1"/><text x="17.5052%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="17.2552%" y="661" width="0.2408%" height="15" fill="rgb(239,176,1)" fg:x="215" fg:w="3"/><text x="17.5052%" y="671.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="17.3355%" y="645" width="0.1605%" height="15" fill="rgb(250,25,32)" fg:x="216" fg:w="2"/><text x="17.5855%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="17.3355%" y="629" width="0.1605%" height="15" fill="rgb(225,28,39)" fg:x="216" fg:w="2"/><text x="17.5855%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.4157%" y="613" width="0.0803%" height="15" fill="rgb(230,166,37)" fg:x="217" fg:w="1"/><text x="17.6657%" y="623.50"></text></g><g><title>plugins_core::build::Build::occupying (15 samples, 1.20%)</title><rect x="16.4526%" y="693" width="1.2039%" height="15" fill="rgb(246,220,4)" fg:x="205" fg:w="15"/><text x="16.7026%" y="703.50"></text></g><g><title>plugins_core::tools::set_occupying (8 samples, 0.64%)</title><rect x="17.0144%" y="677" width="0.6421%" height="15" fill="rgb(219,119,33)" fg:x="212" fg:w="8"/><text x="17.2644%" y="687.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="17.4960%" y="661" width="0.1605%" height="15" fill="rgb(221,207,38)" fg:x="218" fg:w="2"/><text x="17.7460%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="17.4960%" y="645" width="0.1605%" height="15" fill="rgb(214,153,5)" fg:x="218" fg:w="2"/><text x="17.7460%" y="655.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="17.5762%" y="629" width="0.0803%" height="15" fill="rgb(223,50,16)" fg:x="219" fg:w="1"/><text x="17.8262%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="17.5762%" y="613" width="0.0803%" height="15" fill="rgb(209,207,12)" fg:x="219" fg:w="1"/><text x="17.8262%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.5762%" y="597" width="0.0803%" height="15" fill="rgb(207,3,46)" fg:x="219" fg:w="1"/><text x="17.8262%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.5762%" y="581" width="0.0803%" height="15" fill="rgb(232,45,53)" fg:x="219" fg:w="1"/><text x="17.8262%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.5762%" y="565" width="0.0803%" height="15" fill="rgb(206,140,15)" fg:x="219" fg:w="1"/><text x="17.8262%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.5762%" y="549" width="0.0803%" height="15" fill="rgb(245,66,17)" fg:x="219" fg:w="1"/><text x="17.8262%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.5762%" y="533" width="0.0803%" height="15" fill="rgb(221,25,37)" fg:x="219" fg:w="1"/><text x="17.8262%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.5762%" y="517" width="0.0803%" height="15" fill="rgb(215,99,47)" fg:x="219" fg:w="1"/><text x="17.8262%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.5762%" y="501" width="0.0803%" height="15" fill="rgb(219,154,44)" fg:x="219" fg:w="1"/><text x="17.8262%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="17.6565%" y="645" width="0.0803%" height="15" fill="rgb(210,197,36)" fg:x="220" fg:w="1"/><text x="17.9065%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="17.6565%" y="629" width="0.0803%" height="15" fill="rgb(217,137,10)" fg:x="220" fg:w="1"/><text x="17.9065%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.6565%" y="613" width="0.0803%" height="15" fill="rgb(240,216,26)" fg:x="220" fg:w="1"/><text x="17.9065%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.6565%" y="597" width="0.0803%" height="15" fill="rgb(242,76,17)" fg:x="220" fg:w="1"/><text x="17.9065%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7368%" y="565" width="0.0803%" height="15" fill="rgb(243,142,51)" fg:x="221" fg:w="1"/><text x="17.9868%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.7368%" y="549" width="0.0803%" height="15" fill="rgb(233,109,46)" fg:x="221" fg:w="1"/><text x="17.9868%" y="559.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="17.7368%" y="597" width="0.1605%" height="15" fill="rgb(252,45,32)" fg:x="221" fg:w="2"/><text x="17.9868%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="17.7368%" y="581" width="0.1605%" height="15" fill="rgb(210,69,52)" fg:x="221" fg:w="2"/><text x="17.9868%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8170%" y="565" width="0.0803%" height="15" fill="rgb(242,30,2)" fg:x="222" fg:w="1"/><text x="18.0670%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.8170%" y="549" width="0.0803%" height="15" fill="rgb(246,137,1)" fg:x="222" fg:w="1"/><text x="18.0670%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8170%" y="533" width="0.0803%" height="15" fill="rgb(221,205,25)" fg:x="222" fg:w="1"/><text x="18.0670%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.8170%" y="517" width="0.0803%" height="15" fill="rgb(224,44,43)" fg:x="222" fg:w="1"/><text x="18.0670%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.8170%" y="501" width="0.0803%" height="15" fill="rgb(209,81,13)" fg:x="222" fg:w="1"/><text x="18.0670%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8170%" y="485" width="0.0803%" height="15" fill="rgb(227,88,4)" fg:x="222" fg:w="1"/><text x="18.0670%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.9775%" y="549" width="0.0803%" height="15" fill="rgb(228,118,49)" fg:x="224" fg:w="1"/><text x="18.2275%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="17.7368%" y="629" width="0.4013%" height="15" fill="rgb(225,215,27)" fg:x="221" fg:w="5"/><text x="17.9868%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="17.7368%" y="613" width="0.4013%" height="15" fill="rgb(235,226,1)" fg:x="221" fg:w="5"/><text x="17.9868%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="17.8973%" y="597" width="0.2408%" height="15" fill="rgb(205,107,17)" fg:x="223" fg:w="3"/><text x="18.1473%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.9775%" y="581" width="0.1605%" height="15" fill="rgb(247,85,8)" fg:x="224" fg:w="2"/><text x="18.2275%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.9775%" y="565" width="0.1605%" height="15" fill="rgb(230,220,20)" fg:x="224" fg:w="2"/><text x="18.2275%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="18.0578%" y="549" width="0.0803%" height="15" fill="rgb(237,22,6)" fg:x="225" fg:w="1"/><text x="18.3078%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0578%" y="533" width="0.0803%" height="15" fill="rgb(253,39,1)" fg:x="225" fg:w="1"/><text x="18.3078%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="18.1380%" y="629" width="0.0803%" height="15" fill="rgb(251,206,50)" fg:x="226" fg:w="1"/><text x="18.3880%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.2183%" y="597" width="0.0803%" height="15" fill="rgb(239,162,11)" fg:x="227" fg:w="1"/><text x="18.4683%" y="607.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="17.7368%" y="645" width="0.6421%" height="15" fill="rgb(234,164,6)" fg:x="221" fg:w="8"/><text x="17.9868%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="18.2183%" y="629" width="0.1605%" height="15" fill="rgb(238,112,10)" fg:x="227" fg:w="2"/><text x="18.4683%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="18.2183%" y="613" width="0.1605%" height="15" fill="rgb(232,78,29)" fg:x="227" fg:w="2"/><text x="18.4683%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="18.2986%" y="597" width="0.0803%" height="15" fill="rgb(232,20,13)" fg:x="228" fg:w="1"/><text x="18.5486%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.2986%" y="581" width="0.0803%" height="15" fill="rgb(222,175,9)" fg:x="228" fg:w="1"/><text x="18.5486%" y="591.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="18.3788%" y="613" width="0.0803%" height="15" fill="rgb(233,61,14)" fg:x="229" fg:w="1"/><text x="18.6288%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.3788%" y="597" width="0.0803%" height="15" fill="rgb(224,152,29)" fg:x="229" fg:w="1"/><text x="18.6288%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="18.3788%" y="581" width="0.0803%" height="15" fill="rgb(232,26,6)" fg:x="229" fg:w="1"/><text x="18.6288%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.3788%" y="629" width="0.1605%" height="15" fill="rgb(210,116,11)" fg:x="229" fg:w="2"/><text x="18.6288%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.4591%" y="613" width="0.0803%" height="15" fill="rgb(238,213,15)" fg:x="230" fg:w="1"/><text x="18.7091%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.4591%" y="597" width="0.0803%" height="15" fill="rgb(236,177,32)" fg:x="230" fg:w="1"/><text x="18.7091%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.4591%" y="581" width="0.0803%" height="15" fill="rgb(230,36,43)" fg:x="230" fg:w="1"/><text x="18.7091%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.4591%" y="565" width="0.0803%" height="15" fill="rgb(212,76,23)" fg:x="230" fg:w="1"/><text x="18.7091%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.4591%" y="549" width="0.0803%" height="15" fill="rgb(225,168,24)" fg:x="230" fg:w="1"/><text x="18.7091%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="18.3788%" y="645" width="0.2408%" height="15" fill="rgb(206,40,44)" fg:x="229" fg:w="3"/><text x="18.6288%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.5393%" y="629" width="0.0803%" height="15" fill="rgb(251,213,6)" fg:x="231" fg:w="1"/><text x="18.7893%" y="639.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="18.6196%" y="629" width="0.0803%" height="15" fill="rgb(220,7,47)" fg:x="232" fg:w="1"/><text x="18.8696%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.6196%" y="613" width="0.0803%" height="15" fill="rgb(254,130,53)" fg:x="232" fg:w="1"/><text x="18.8696%" y="623.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="18.6998%" y="597" width="0.0803%" height="15" fill="rgb(240,2,46)" fg:x="233" fg:w="1"/><text x="18.9498%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.20%)</title><rect x="17.6565%" y="661" width="1.2039%" height="15" fill="rgb(252,144,40)" fg:x="220" fg:w="15"/><text x="17.9065%" y="671.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="18.6196%" y="645" width="0.2408%" height="15" fill="rgb(226,23,10)" fg:x="232" fg:w="3"/><text x="18.8696%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="18.6998%" y="629" width="0.1605%" height="15" fill="rgb(212,204,35)" fg:x="233" fg:w="2"/><text x="18.9498%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="18.6998%" y="613" width="0.1605%" height="15" fill="rgb(218,201,15)" fg:x="233" fg:w="2"/><text x="18.9498%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.7801%" y="597" width="0.0803%" height="15" fill="rgb(224,197,5)" fg:x="234" fg:w="1"/><text x="19.0301%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="18.7801%" y="581" width="0.0803%" height="15" fill="rgb(224,185,18)" fg:x="234" fg:w="1"/><text x="19.0301%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.7801%" y="565" width="0.0803%" height="15" fill="rgb(251,71,45)" fg:x="234" fg:w="1"/><text x="19.0301%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.7801%" y="549" width="0.0803%" height="15" fill="rgb(216,74,24)" fg:x="234" fg:w="1"/><text x="19.0301%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.7801%" y="533" width="0.0803%" height="15" fill="rgb(250,36,51)" fg:x="234" fg:w="1"/><text x="19.0301%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.7801%" y="517" width="0.0803%" height="15" fill="rgb(209,224,28)" fg:x="234" fg:w="1"/><text x="19.0301%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.7801%" y="501" width="0.0803%" height="15" fill="rgb(228,5,10)" fg:x="234" fg:w="1"/><text x="19.0301%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.7801%" y="485" width="0.0803%" height="15" fill="rgb(250,57,40)" fg:x="234" fg:w="1"/><text x="19.0301%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.7801%" y="469" width="0.0803%" height="15" fill="rgb(228,194,41)" fg:x="234" fg:w="1"/><text x="19.0301%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.7801%" y="453" width="0.0803%" height="15" fill="rgb(206,68,23)" fg:x="234" fg:w="1"/><text x="19.0301%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.7801%" y="437" width="0.0803%" height="15" fill="rgb(230,33,29)" fg:x="234" fg:w="1"/><text x="19.0301%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.7801%" y="421" width="0.0803%" height="15" fill="rgb(210,39,32)" fg:x="234" fg:w="1"/><text x="19.0301%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.7801%" y="405" width="0.0803%" height="15" fill="rgb(236,89,23)" fg:x="234" fg:w="1"/><text x="19.0301%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7801%" y="389" width="0.0803%" height="15" fill="rgb(218,52,52)" fg:x="234" fg:w="1"/><text x="19.0301%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.8604%" y="629" width="0.0803%" height="15" fill="rgb(235,154,5)" fg:x="235" fg:w="1"/><text x="19.1104%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.9406%" y="629" width="0.0803%" height="15" fill="rgb(223,168,9)" fg:x="236" fg:w="1"/><text x="19.1906%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.9406%" y="613" width="0.0803%" height="15" fill="rgb(220,8,33)" fg:x="236" fg:w="1"/><text x="19.1906%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (114 samples, 9.15%)</title><rect x="9.9518%" y="709" width="9.1493%" height="15" fill="rgb(216,176,3)" fg:x="124" fg:w="114"/><text x="10.2018%" y="719.50">plugins_core:..</text></g><g><title>plugins_core::build::Build::wearing (18 samples, 1.44%)</title><rect x="17.6565%" y="693" width="1.4446%" height="15" fill="rgb(254,150,22)" fg:x="220" fg:w="18"/><text x="17.9065%" y="703.50"></text></g><g><title>plugins_core::build::Build::into_entry (18 samples, 1.44%)</title><rect x="17.6565%" y="677" width="1.4446%" height="15" fill="rgb(231,61,53)" fg:x="220" fg:w="18"/><text x="17.9065%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="18.8604%" y="661" width="0.2408%" height="15" fill="rgb(249,177,41)" fg:x="235" fg:w="3"/><text x="19.1104%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="18.8604%" y="645" width="0.2408%" height="15" fill="rgb(221,122,7)" fg:x="235" fg:w="3"/><text x="19.1104%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.0209%" y="629" width="0.0803%" height="15" fill="rgb(215,115,7)" fg:x="237" fg:w="1"/><text x="19.2709%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0209%" y="613" width="0.0803%" height="15" fill="rgb(218,108,33)" fg:x="237" fg:w="1"/><text x="19.2709%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.0209%" y="597" width="0.0803%" height="15" fill="rgb(221,205,39)" fg:x="237" fg:w="1"/><text x="19.2709%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0209%" y="581" width="0.0803%" height="15" fill="rgb(220,171,18)" fg:x="237" fg:w="1"/><text x="19.2709%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.0209%" y="565" width="0.0803%" height="15" fill="rgb(236,188,29)" fg:x="237" fg:w="1"/><text x="19.2709%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0209%" y="549" width="0.0803%" height="15" fill="rgb(239,29,5)" fg:x="237" fg:w="1"/><text x="19.2709%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.0209%" y="533" width="0.0803%" height="15" fill="rgb(236,114,44)" fg:x="237" fg:w="1"/><text x="19.2709%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="19.1011%" y="709" width="0.0803%" height="15" fill="rgb(239,214,48)" fg:x="238" fg:w="1"/><text x="19.3511%" y="719.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="19.1011%" y="693" width="0.0803%" height="15" fill="rgb(241,56,8)" fg:x="238" fg:w="1"/><text x="19.3511%" y="703.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="19.1011%" y="677" width="0.0803%" height="15" fill="rgb(228,201,0)" fg:x="238" fg:w="1"/><text x="19.3511%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="19.1011%" y="661" width="0.0803%" height="15" fill="rgb(226,219,34)" fg:x="238" fg:w="1"/><text x="19.3511%" y="671.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="19.1011%" y="645" width="0.0803%" height="15" fill="rgb(209,204,54)" fg:x="238" fg:w="1"/><text x="19.3511%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="19.1011%" y="629" width="0.0803%" height="15" fill="rgb(251,160,17)" fg:x="238" fg:w="1"/><text x="19.3511%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="19.1011%" y="613" width="0.0803%" height="15" fill="rgb(235,15,25)" fg:x="238" fg:w="1"/><text x="19.3511%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="19.1011%" y="597" width="0.0803%" height="15" fill="rgb(216,209,28)" fg:x="238" fg:w="1"/><text x="19.3511%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="19.1011%" y="581" width="0.0803%" height="15" fill="rgb(248,123,21)" fg:x="238" fg:w="1"/><text x="19.3511%" y="591.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="19.1011%" y="565" width="0.0803%" height="15" fill="rgb(226,138,44)" fg:x="238" fg:w="1"/><text x="19.3511%" y="575.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="19.1011%" y="549" width="0.0803%" height="15" fill="rgb(211,104,54)" fg:x="238" fg:w="1"/><text x="19.3511%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.1011%" y="533" width="0.0803%" height="15" fill="rgb(241,198,15)" fg:x="238" fg:w="1"/><text x="19.3511%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.1011%" y="517" width="0.0803%" height="15" fill="rgb(227,155,54)" fg:x="238" fg:w="1"/><text x="19.3511%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="19.1011%" y="501" width="0.0803%" height="15" fill="rgb(225,131,31)" fg:x="238" fg:w="1"/><text x="19.3511%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="19.1011%" y="485" width="0.0803%" height="15" fill="rgb(242,40,17)" fg:x="238" fg:w="1"/><text x="19.3511%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="19.1011%" y="469" width="0.0803%" height="15" fill="rgb(254,57,35)" fg:x="238" fg:w="1"/><text x="19.3511%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="19.1011%" y="453" width="0.0803%" height="15" fill="rgb(240,64,32)" fg:x="238" fg:w="1"/><text x="19.3511%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2616%" y="661" width="0.0803%" height="15" fill="rgb(251,136,26)" fg:x="240" fg:w="1"/><text x="19.5116%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="19.3419%" y="645" width="0.0803%" height="15" fill="rgb(208,60,54)" fg:x="241" fg:w="1"/><text x="19.5919%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.3419%" y="629" width="0.0803%" height="15" fill="rgb(220,13,12)" fg:x="241" fg:w="1"/><text x="19.5919%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.3419%" y="613" width="0.0803%" height="15" fill="rgb(213,149,1)" fg:x="241" fg:w="1"/><text x="19.5919%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.3419%" y="597" width="0.0803%" height="15" fill="rgb(212,191,39)" fg:x="241" fg:w="1"/><text x="19.5919%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.3419%" y="581" width="0.0803%" height="15" fill="rgb(215,221,42)" fg:x="241" fg:w="1"/><text x="19.5919%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.3419%" y="565" width="0.0803%" height="15" fill="rgb(244,79,23)" fg:x="241" fg:w="1"/><text x="19.5919%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="19.3419%" y="549" width="0.0803%" height="15" fill="rgb(247,17,29)" fg:x="241" fg:w="1"/><text x="19.5919%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="19.4222%" y="581" width="0.0803%" height="15" fill="rgb(251,221,21)" fg:x="242" fg:w="1"/><text x="19.6722%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="19.5024%" y="565" width="0.0803%" height="15" fill="rgb(207,202,34)" fg:x="243" fg:w="1"/><text x="19.7524%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.5827%" y="565" width="0.0803%" height="15" fill="rgb(217,4,34)" fg:x="244" fg:w="1"/><text x="19.8327%" y="575.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="19.4222%" y="597" width="0.3210%" height="15" fill="rgb(253,17,16)" fg:x="242" fg:w="4"/><text x="19.6722%" y="607.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="19.5024%" y="581" width="0.2408%" height="15" fill="rgb(223,91,48)" fg:x="243" fg:w="3"/><text x="19.7524%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="19.6629%" y="565" width="0.0803%" height="15" fill="rgb(244,191,22)" fg:x="245" fg:w="1"/><text x="19.9129%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.6629%" y="549" width="0.0803%" height="15" fill="rgb(211,107,14)" fg:x="245" fg:w="1"/><text x="19.9129%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="19.6629%" y="533" width="0.0803%" height="15" fill="rgb(232,81,23)" fg:x="245" fg:w="1"/><text x="19.9129%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="19.6629%" y="517" width="0.0803%" height="15" fill="rgb(237,126,14)" fg:x="245" fg:w="1"/><text x="19.9129%" y="527.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="19.4222%" y="629" width="0.4013%" height="15" fill="rgb(230,65,39)" fg:x="242" fg:w="5"/><text x="19.6722%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="19.4222%" y="613" width="0.4013%" height="15" fill="rgb(208,106,41)" fg:x="242" fg:w="5"/><text x="19.6722%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.7432%" y="597" width="0.0803%" height="15" fill="rgb(206,125,25)" fg:x="246" fg:w="1"/><text x="19.9932%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.7432%" y="581" width="0.0803%" height="15" fill="rgb(250,24,29)" fg:x="246" fg:w="1"/><text x="19.9932%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7432%" y="565" width="0.0803%" height="15" fill="rgb(226,49,32)" fg:x="246" fg:w="1"/><text x="19.9932%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="19.7432%" y="549" width="0.0803%" height="15" fill="rgb(217,110,16)" fg:x="246" fg:w="1"/><text x="19.9932%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7432%" y="533" width="0.0803%" height="15" fill="rgb(252,16,53)" fg:x="246" fg:w="1"/><text x="19.9932%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.7432%" y="517" width="0.0803%" height="15" fill="rgb(238,163,11)" fg:x="246" fg:w="1"/><text x="19.9932%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.8234%" y="597" width="0.0803%" height="15" fill="rgb(206,210,1)" fg:x="247" fg:w="1"/><text x="20.0734%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="19.9037%" y="597" width="0.0803%" height="15" fill="rgb(229,8,25)" fg:x="248" fg:w="1"/><text x="20.1537%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.9037%" y="581" width="0.0803%" height="15" fill="rgb(247,155,23)" fg:x="248" fg:w="1"/><text x="20.1537%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.9037%" y="565" width="0.0803%" height="15" fill="rgb(207,26,7)" fg:x="248" fg:w="1"/><text x="20.1537%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="19.4222%" y="645" width="0.6421%" height="15" fill="rgb(215,179,12)" fg:x="242" fg:w="8"/><text x="19.6722%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="19.8234%" y="629" width="0.2408%" height="15" fill="rgb(238,208,11)" fg:x="247" fg:w="3"/><text x="20.0734%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="19.8234%" y="613" width="0.2408%" height="15" fill="rgb(238,102,42)" fg:x="247" fg:w="3"/><text x="20.0734%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="19.9839%" y="597" width="0.0803%" height="15" fill="rgb(239,35,9)" fg:x="249" fg:w="1"/><text x="20.2339%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="19.9839%" y="581" width="0.0803%" height="15" fill="rgb(244,182,30)" fg:x="249" fg:w="1"/><text x="20.2339%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="19.9839%" y="565" width="0.0803%" height="15" fill="rgb(232,181,23)" fg:x="249" fg:w="1"/><text x="20.2339%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.9839%" y="549" width="0.0803%" height="15" fill="rgb(242,154,29)" fg:x="249" fg:w="1"/><text x="20.2339%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.9839%" y="533" width="0.0803%" height="15" fill="rgb(219,23,2)" fg:x="249" fg:w="1"/><text x="20.2339%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.9839%" y="517" width="0.0803%" height="15" fill="rgb(234,94,43)" fg:x="249" fg:w="1"/><text x="20.2339%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="20.0642%" y="645" width="0.0803%" height="15" fill="rgb(223,55,45)" fg:x="250" fg:w="1"/><text x="20.3142%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="20.0642%" y="629" width="0.0803%" height="15" fill="rgb(241,215,54)" fg:x="250" fg:w="1"/><text x="20.3142%" y="639.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="20.0642%" y="613" width="0.0803%" height="15" fill="rgb(247,63,53)" fg:x="250" fg:w="1"/><text x="20.3142%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="20.1445%" y="613" width="0.0803%" height="15" fill="rgb(220,166,7)" fg:x="251" fg:w="1"/><text x="20.3945%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.1445%" y="597" width="0.0803%" height="15" fill="rgb(248,53,45)" fg:x="251" fg:w="1"/><text x="20.3945%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.1445%" y="581" width="0.0803%" height="15" fill="rgb(224,207,20)" fg:x="251" fg:w="1"/><text x="20.3945%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.1445%" y="565" width="0.0803%" height="15" fill="rgb(244,185,11)" fg:x="251" fg:w="1"/><text x="20.3945%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.1445%" y="549" width="0.0803%" height="15" fill="rgb(230,13,42)" fg:x="251" fg:w="1"/><text x="20.3945%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.2247%" y="581" width="0.0803%" height="15" fill="rgb(243,191,18)" fg:x="252" fg:w="1"/><text x="20.4747%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.2247%" y="565" width="0.0803%" height="15" fill="rgb(249,135,15)" fg:x="252" fg:w="1"/><text x="20.4747%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.2247%" y="549" width="0.0803%" height="15" fill="rgb(229,26,35)" fg:x="252" fg:w="1"/><text x="20.4747%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.04%)</title><rect x="19.3419%" y="661" width="1.0433%" height="15" fill="rgb(216,191,16)" fg:x="241" fg:w="13"/><text x="19.5919%" y="671.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="20.1445%" y="645" width="0.2408%" height="15" fill="rgb(242,18,7)" fg:x="251" fg:w="3"/><text x="20.3945%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="20.1445%" y="629" width="0.2408%" height="15" fill="rgb(205,128,17)" fg:x="251" fg:w="3"/><text x="20.3945%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="20.2247%" y="613" width="0.1605%" height="15" fill="rgb(229,199,44)" fg:x="252" fg:w="2"/><text x="20.4747%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.2247%" y="597" width="0.1605%" height="15" fill="rgb(234,222,3)" fg:x="252" fg:w="2"/><text x="20.4747%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.3050%" y="581" width="0.0803%" height="15" fill="rgb(220,170,20)" fg:x="253" fg:w="1"/><text x="20.5550%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.3050%" y="565" width="0.0803%" height="15" fill="rgb(207,138,8)" fg:x="253" fg:w="1"/><text x="20.5550%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (16 samples, 1.28%)</title><rect x="19.1814%" y="677" width="1.2841%" height="15" fill="rgb(244,130,36)" fg:x="239" fg:w="16"/><text x="19.4314%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="20.3852%" y="661" width="0.0803%" height="15" fill="rgb(207,197,52)" fg:x="254" fg:w="1"/><text x="20.6352%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.3852%" y="645" width="0.0803%" height="15" fill="rgb(206,9,21)" fg:x="254" fg:w="1"/><text x="20.6352%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.3852%" y="629" width="0.0803%" height="15" fill="rgb(250,15,47)" fg:x="254" fg:w="1"/><text x="20.6352%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.3852%" y="613" width="0.0803%" height="15" fill="rgb(235,202,14)" fg:x="254" fg:w="1"/><text x="20.6352%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.3852%" y="597" width="0.0803%" height="15" fill="rgb(211,180,47)" fg:x="254" fg:w="1"/><text x="20.6352%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.3852%" y="581" width="0.0803%" height="15" fill="rgb(209,61,11)" fg:x="254" fg:w="1"/><text x="20.6352%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (17 samples, 1.36%)</title><rect x="19.1814%" y="709" width="1.3644%" height="15" fill="rgb(243,197,29)" fg:x="239" fg:w="17"/><text x="19.4314%" y="719.50"></text></g><g><title>plugins_core::build::QuickThing::make (17 samples, 1.36%)</title><rect x="19.1814%" y="693" width="1.3644%" height="15" fill="rgb(216,185,16)" fg:x="239" fg:w="17"/><text x="19.4314%" y="703.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="20.4655%" y="677" width="0.0803%" height="15" fill="rgb(248,5,15)" fg:x="255" fg:w="1"/><text x="20.7155%" y="687.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="20.4655%" y="661" width="0.0803%" height="15" fill="rgb(240,39,41)" fg:x="255" fg:w="1"/><text x="20.7155%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="20.5457%" y="677" width="0.0803%" height="15" fill="rgb(224,220,43)" fg:x="256" fg:w="1"/><text x="20.7957%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="20.5457%" y="661" width="0.0803%" height="15" fill="rgb(215,21,24)" fg:x="256" fg:w="1"/><text x="20.7957%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.5457%" y="645" width="0.0803%" height="15" fill="rgb(220,102,8)" fg:x="256" fg:w="1"/><text x="20.7957%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.5457%" y="629" width="0.0803%" height="15" fill="rgb(225,185,10)" fg:x="256" fg:w="1"/><text x="20.7957%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="20.5457%" y="693" width="0.1605%" height="15" fill="rgb(212,108,24)" fg:x="256" fg:w="2"/><text x="20.7957%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.6260%" y="677" width="0.0803%" height="15" fill="rgb(237,27,0)" fg:x="257" fg:w="1"/><text x="20.8760%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.6260%" y="661" width="0.0803%" height="15" fill="rgb(212,106,38)" fg:x="257" fg:w="1"/><text x="20.8760%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.6260%" y="645" width="0.0803%" height="15" fill="rgb(210,125,30)" fg:x="257" fg:w="1"/><text x="20.8760%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.6260%" y="629" width="0.0803%" height="15" fill="rgb(215,219,1)" fg:x="257" fg:w="1"/><text x="20.8760%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="20.7063%" y="661" width="0.0803%" height="15" fill="rgb(223,10,12)" fg:x="258" fg:w="1"/><text x="20.9563%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.7063%" y="645" width="0.0803%" height="15" fill="rgb(245,40,34)" fg:x="258" fg:w="1"/><text x="20.9563%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.7063%" y="629" width="0.0803%" height="15" fill="rgb(211,185,19)" fg:x="258" fg:w="1"/><text x="20.9563%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7063%" y="613" width="0.0803%" height="15" fill="rgb(243,190,43)" fg:x="258" fg:w="1"/><text x="20.9563%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.7063%" y="597" width="0.0803%" height="15" fill="rgb(232,208,29)" fg:x="258" fg:w="1"/><text x="20.9563%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7063%" y="581" width="0.0803%" height="15" fill="rgb(234,134,27)" fg:x="258" fg:w="1"/><text x="20.9563%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.7063%" y="565" width="0.0803%" height="15" fill="rgb(225,41,29)" fg:x="258" fg:w="1"/><text x="20.9563%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7063%" y="549" width="0.0803%" height="15" fill="rgb(241,214,44)" fg:x="258" fg:w="1"/><text x="20.9563%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.7063%" y="533" width="0.0803%" height="15" fill="rgb(205,219,41)" fg:x="258" fg:w="1"/><text x="20.9563%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="20.7063%" y="677" width="0.2408%" height="15" fill="rgb(226,15,26)" fg:x="258" fg:w="3"/><text x="20.9563%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="20.7865%" y="661" width="0.1605%" height="15" fill="rgb(210,83,41)" fg:x="259" fg:w="2"/><text x="21.0365%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="20.8668%" y="645" width="0.0803%" height="15" fill="rgb(247,9,39)" fg:x="260" fg:w="1"/><text x="21.1168%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="20.8668%" y="629" width="0.0803%" height="15" fill="rgb(209,37,30)" fg:x="260" fg:w="1"/><text x="21.1168%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="20.8668%" y="613" width="0.0803%" height="15" fill="rgb(248,170,46)" fg:x="260" fg:w="1"/><text x="21.1168%" y="623.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (212 samples, 17.01%)</title><rect x="4.0931%" y="725" width="17.0144%" height="15" fill="rgb(237,129,44)" fg:x="51" fg:w="212"/><text x="4.3431%" y="735.50">&lt;tests::HoldingKeyInVessel..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (7 samples, 0.56%)</title><rect x="20.5457%" y="709" width="0.5618%" height="15" fill="rgb(225,117,51)" fg:x="256" fg:w="7"/><text x="20.7957%" y="719.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="20.7063%" y="693" width="0.4013%" height="15" fill="rgb(212,165,2)" fg:x="258" fg:w="5"/><text x="20.9563%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="20.9470%" y="677" width="0.1605%" height="15" fill="rgb(213,53,45)" fg:x="261" fg:w="2"/><text x="21.1970%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.9470%" y="661" width="0.1605%" height="15" fill="rgb(220,148,3)" fg:x="261" fg:w="2"/><text x="21.1970%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.9470%" y="645" width="0.1605%" height="15" fill="rgb(228,37,29)" fg:x="261" fg:w="2"/><text x="21.1970%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.9470%" y="629" width="0.1605%" height="15" fill="rgb(209,76,29)" fg:x="261" fg:w="2"/><text x="21.1970%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="20.9470%" y="613" width="0.1605%" height="15" fill="rgb(215,90,5)" fg:x="261" fg:w="2"/><text x="21.1970%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.9470%" y="597" width="0.1605%" height="15" fill="rgb(227,207,32)" fg:x="261" fg:w="2"/><text x="21.1970%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.9470%" y="581" width="0.1605%" height="15" fill="rgb(251,218,44)" fg:x="261" fg:w="2"/><text x="21.1970%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.9470%" y="565" width="0.1605%" height="15" fill="rgb(211,44,16)" fg:x="261" fg:w="2"/><text x="21.1970%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="21.1878%" y="709" width="0.0803%" height="15" fill="rgb(242,170,37)" fg:x="264" fg:w="1"/><text x="21.4378%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="21.2681%" y="597" width="0.0803%" height="15" fill="rgb(205,181,22)" fg:x="265" fg:w="1"/><text x="21.5181%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.2681%" y="581" width="0.0803%" height="15" fill="rgb(228,130,19)" fg:x="265" fg:w="1"/><text x="21.5181%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="21.2681%" y="709" width="0.1605%" height="15" fill="rgb(228,9,15)" fg:x="265" fg:w="2"/><text x="21.5181%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="21.2681%" y="693" width="0.1605%" height="15" fill="rgb(219,66,48)" fg:x="265" fg:w="2"/><text x="21.5181%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="21.2681%" y="677" width="0.1605%" height="15" fill="rgb(234,203,10)" fg:x="265" fg:w="2"/><text x="21.5181%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="21.2681%" y="661" width="0.1605%" height="15" fill="rgb(219,209,1)" fg:x="265" fg:w="2"/><text x="21.5181%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="21.2681%" y="645" width="0.1605%" height="15" fill="rgb(206,167,9)" fg:x="265" fg:w="2"/><text x="21.5181%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="21.2681%" y="629" width="0.1605%" height="15" fill="rgb(210,11,39)" fg:x="265" fg:w="2"/><text x="21.5181%" y="639.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="21.2681%" y="613" width="0.1605%" height="15" fill="rgb(251,90,47)" fg:x="265" fg:w="2"/><text x="21.5181%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="21.3483%" y="597" width="0.0803%" height="15" fill="rgb(237,7,4)" fg:x="266" fg:w="1"/><text x="21.5983%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="21.3483%" y="581" width="0.0803%" height="15" fill="rgb(232,205,47)" fg:x="266" fg:w="1"/><text x="21.5983%" y="591.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="21.3483%" y="565" width="0.0803%" height="15" fill="rgb(215,86,48)" fg:x="266" fg:w="1"/><text x="21.5983%" y="575.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="21.3483%" y="549" width="0.0803%" height="15" fill="rgb(232,14,47)" fg:x="266" fg:w="1"/><text x="21.5983%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="21.3483%" y="533" width="0.0803%" height="15" fill="rgb(240,28,46)" fg:x="266" fg:w="1"/><text x="21.5983%" y="543.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="21.4286%" y="709" width="0.0803%" height="15" fill="rgb(224,85,5)" fg:x="267" fg:w="1"/><text x="21.6786%" y="719.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="21.4286%" y="693" width="0.0803%" height="15" fill="rgb(219,34,25)" fg:x="267" fg:w="1"/><text x="21.6786%" y="703.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="21.4286%" y="677" width="0.0803%" height="15" fill="rgb(247,137,45)" fg:x="267" fg:w="1"/><text x="21.6786%" y="687.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="21.4286%" y="661" width="0.0803%" height="15" fill="rgb(237,121,47)" fg:x="267" fg:w="1"/><text x="21.6786%" y="671.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="21.4286%" y="645" width="0.0803%" height="15" fill="rgb(247,148,27)" fg:x="267" fg:w="1"/><text x="21.6786%" y="655.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="21.4286%" y="629" width="0.0803%" height="15" fill="rgb(220,44,0)" fg:x="267" fg:w="1"/><text x="21.6786%" y="639.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="21.4286%" y="613" width="0.0803%" height="15" fill="rgb(236,61,29)" fg:x="267" fg:w="1"/><text x="21.6786%" y="623.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="21.4286%" y="597" width="0.0803%" height="15" fill="rgb(244,180,35)" fg:x="267" fg:w="1"/><text x="21.6786%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="21.5891%" y="677" width="0.1605%" height="15" fill="rgb(242,14,54)" fg:x="269" fg:w="2"/><text x="21.8391%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="21.5891%" y="661" width="0.1605%" height="15" fill="rgb(206,24,45)" fg:x="269" fg:w="2"/><text x="21.8391%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="21.5088%" y="693" width="0.3210%" height="15" fill="rgb(215,211,6)" fg:x="268" fg:w="4"/><text x="21.7588%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.7496%" y="677" width="0.0803%" height="15" fill="rgb(207,56,2)" fg:x="271" fg:w="1"/><text x="21.9996%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.7496%" y="661" width="0.0803%" height="15" fill="rgb(220,135,9)" fg:x="271" fg:w="1"/><text x="21.9996%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.7496%" y="645" width="0.0803%" height="15" fill="rgb(214,145,52)" fg:x="271" fg:w="1"/><text x="21.9996%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.8299%" y="677" width="0.0803%" height="15" fill="rgb(241,83,53)" fg:x="272" fg:w="1"/><text x="22.0799%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.9101%" y="613" width="0.1605%" height="15" fill="rgb(222,66,13)" fg:x="273" fg:w="2"/><text x="22.1601%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.9101%" y="597" width="0.1605%" height="15" fill="rgb(239,164,54)" fg:x="273" fg:w="2"/><text x="22.1601%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.9904%" y="581" width="0.0803%" height="15" fill="rgb(216,189,13)" fg:x="274" fg:w="1"/><text x="22.2404%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.9904%" y="565" width="0.0803%" height="15" fill="rgb(228,212,51)" fg:x="274" fg:w="1"/><text x="22.2404%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.9904%" y="549" width="0.0803%" height="15" fill="rgb(207,190,21)" fg:x="274" fg:w="1"/><text x="22.2404%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.9904%" y="533" width="0.0803%" height="15" fill="rgb(245,28,35)" fg:x="274" fg:w="1"/><text x="22.2404%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.9904%" y="517" width="0.0803%" height="15" fill="rgb(239,23,40)" fg:x="274" fg:w="1"/><text x="22.2404%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.9904%" y="501" width="0.0803%" height="15" fill="rgb(242,10,51)" fg:x="274" fg:w="1"/><text x="22.2404%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.9904%" y="485" width="0.0803%" height="15" fill="rgb(207,186,5)" fg:x="274" fg:w="1"/><text x="22.2404%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.9904%" y="469" width="0.0803%" height="15" fill="rgb(242,21,16)" fg:x="274" fg:w="1"/><text x="22.2404%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.9904%" y="453" width="0.0803%" height="15" fill="rgb(237,0,53)" fg:x="274" fg:w="1"/><text x="22.2404%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.9904%" y="437" width="0.0803%" height="15" fill="rgb(215,8,52)" fg:x="274" fg:w="1"/><text x="22.2404%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.9904%" y="421" width="0.0803%" height="15" fill="rgb(248,62,44)" fg:x="274" fg:w="1"/><text x="22.2404%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.9904%" y="405" width="0.0803%" height="15" fill="rgb(224,83,15)" fg:x="274" fg:w="1"/><text x="22.2404%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.9904%" y="389" width="0.0803%" height="15" fill="rgb(249,100,46)" fg:x="274" fg:w="1"/><text x="22.2404%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.0706%" y="613" width="0.0803%" height="15" fill="rgb(213,35,48)" fg:x="275" fg:w="1"/><text x="22.3206%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="21.9101%" y="645" width="0.3210%" height="15" fill="rgb(251,2,13)" fg:x="273" fg:w="4"/><text x="22.1601%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="21.9101%" y="629" width="0.3210%" height="15" fill="rgb(212,132,21)" fg:x="273" fg:w="4"/><text x="22.1601%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.1509%" y="613" width="0.0803%" height="15" fill="rgb(247,17,21)" fg:x="276" fg:w="1"/><text x="22.4009%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.1509%" y="597" width="0.0803%" height="15" fill="rgb(220,177,38)" fg:x="276" fg:w="1"/><text x="22.4009%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.2311%" y="613" width="0.0803%" height="15" fill="rgb(233,219,21)" fg:x="277" fg:w="1"/><text x="22.4811%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.2311%" y="597" width="0.0803%" height="15" fill="rgb(246,17,7)" fg:x="277" fg:w="1"/><text x="22.4811%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.2311%" y="581" width="0.0803%" height="15" fill="rgb(212,4,22)" fg:x="277" fg:w="1"/><text x="22.4811%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="22.2311%" y="645" width="0.1605%" height="15" fill="rgb(243,85,21)" fg:x="277" fg:w="2"/><text x="22.4811%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.2311%" y="629" width="0.1605%" height="15" fill="rgb(232,218,2)" fg:x="277" fg:w="2"/><text x="22.4811%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.3114%" y="613" width="0.0803%" height="15" fill="rgb(253,168,47)" fg:x="278" fg:w="1"/><text x="22.5614%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.3114%" y="597" width="0.0803%" height="15" fill="rgb(238,101,25)" fg:x="278" fg:w="1"/><text x="22.5614%" y="607.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (7 samples, 0.56%)</title><rect x="21.9101%" y="677" width="0.5618%" height="15" fill="rgb(251,86,12)" fg:x="273" fg:w="7"/><text x="22.1601%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="21.9101%" y="661" width="0.5618%" height="15" fill="rgb(241,112,44)" fg:x="273" fg:w="7"/><text x="22.1601%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="22.3917%" y="645" width="0.0803%" height="15" fill="rgb(224,28,25)" fg:x="279" fg:w="1"/><text x="22.6417%" y="655.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="22.3917%" y="629" width="0.0803%" height="15" fill="rgb(209,201,1)" fg:x="279" fg:w="1"/><text x="22.6417%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="22.3917%" y="613" width="0.0803%" height="15" fill="rgb(231,30,22)" fg:x="279" fg:w="1"/><text x="22.6417%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.3917%" y="597" width="0.0803%" height="15" fill="rgb(247,96,31)" fg:x="279" fg:w="1"/><text x="22.6417%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.3917%" y="581" width="0.0803%" height="15" fill="rgb(251,100,12)" fg:x="279" fg:w="1"/><text x="22.6417%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.3917%" y="565" width="0.0803%" height="15" fill="rgb(224,174,7)" fg:x="279" fg:w="1"/><text x="22.6417%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.3917%" y="549" width="0.0803%" height="15" fill="rgb(231,168,19)" fg:x="279" fg:w="1"/><text x="22.6417%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.3917%" y="533" width="0.0803%" height="15" fill="rgb(226,85,5)" fg:x="279" fg:w="1"/><text x="22.6417%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.3917%" y="517" width="0.0803%" height="15" fill="rgb(210,215,5)" fg:x="279" fg:w="1"/><text x="22.6417%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.3917%" y="501" width="0.0803%" height="15" fill="rgb(233,70,8)" fg:x="279" fg:w="1"/><text x="22.6417%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="22.5522%" y="533" width="0.0803%" height="15" fill="rgb(229,109,53)" fg:x="281" fg:w="1"/><text x="22.8022%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.5522%" y="517" width="0.0803%" height="15" fill="rgb(213,125,35)" fg:x="281" fg:w="1"/><text x="22.8022%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.5522%" y="501" width="0.0803%" height="15" fill="rgb(215,12,48)" fg:x="281" fg:w="1"/><text x="22.8022%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5522%" y="485" width="0.0803%" height="15" fill="rgb(207,12,38)" fg:x="281" fg:w="1"/><text x="22.8022%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.5522%" y="469" width="0.0803%" height="15" fill="rgb(216,229,2)" fg:x="281" fg:w="1"/><text x="22.8022%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.5522%" y="453" width="0.0803%" height="15" fill="rgb(229,209,31)" fg:x="281" fg:w="1"/><text x="22.8022%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="22.5522%" y="437" width="0.0803%" height="15" fill="rgb(239,57,22)" fg:x="281" fg:w="1"/><text x="22.8022%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.5522%" y="421" width="0.0803%" height="15" fill="rgb(239,119,54)" fg:x="281" fg:w="1"/><text x="22.8022%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.6324%" y="517" width="0.0803%" height="15" fill="rgb(231,80,45)" fg:x="282" fg:w="1"/><text x="22.8824%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.7127%" y="501" width="0.0803%" height="15" fill="rgb(219,138,19)" fg:x="283" fg:w="1"/><text x="22.9627%" y="511.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (5 samples, 0.40%)</title><rect x="22.4719%" y="629" width="0.4013%" height="15" fill="rgb(216,53,26)" fg:x="280" fg:w="5"/><text x="22.7219%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="22.5522%" y="613" width="0.3210%" height="15" fill="rgb(224,30,16)" fg:x="281" fg:w="4"/><text x="22.8022%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="22.5522%" y="597" width="0.3210%" height="15" fill="rgb(224,151,24)" fg:x="281" fg:w="4"/><text x="22.8022%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="22.5522%" y="581" width="0.3210%" height="15" fill="rgb(236,75,7)" fg:x="281" fg:w="4"/><text x="22.8022%" y="591.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (4 samples, 0.32%)</title><rect x="22.5522%" y="565" width="0.3210%" height="15" fill="rgb(248,106,42)" fg:x="281" fg:w="4"/><text x="22.8022%" y="575.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="22.5522%" y="549" width="0.3210%" height="15" fill="rgb(222,217,11)" fg:x="281" fg:w="4"/><text x="22.8022%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="22.6324%" y="533" width="0.2408%" height="15" fill="rgb(234,143,31)" fg:x="282" fg:w="3"/><text x="22.8824%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.7127%" y="517" width="0.1605%" height="15" fill="rgb(237,148,28)" fg:x="283" fg:w="2"/><text x="22.9627%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7929%" y="501" width="0.0803%" height="15" fill="rgb(241,151,6)" fg:x="284" fg:w="1"/><text x="23.0429%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7929%" y="485" width="0.0803%" height="15" fill="rgb(226,55,18)" fg:x="284" fg:w="1"/><text x="23.0429%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.7929%" y="469" width="0.0803%" height="15" fill="rgb(226,196,6)" fg:x="284" fg:w="1"/><text x="23.0429%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7929%" y="453" width="0.0803%" height="15" fill="rgb(251,228,11)" fg:x="284" fg:w="1"/><text x="23.0429%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7929%" y="437" width="0.0803%" height="15" fill="rgb(219,197,15)" fg:x="284" fg:w="1"/><text x="23.0429%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7929%" y="421" width="0.0803%" height="15" fill="rgb(243,105,44)" fg:x="284" fg:w="1"/><text x="23.0429%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.8732%" y="629" width="0.0803%" height="15" fill="rgb(205,183,40)" fg:x="285" fg:w="1"/><text x="23.1232%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_audience (16 samples, 1.28%)</title><rect x="21.8299%" y="693" width="1.2841%" height="15" fill="rgb(232,138,46)" fg:x="272" fg:w="16"/><text x="22.0799%" y="703.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (8 samples, 0.64%)</title><rect x="22.4719%" y="677" width="0.6421%" height="15" fill="rgb(234,161,14)" fg:x="280" fg:w="8"/><text x="22.7219%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.64%)</title><rect x="22.4719%" y="661" width="0.6421%" height="15" fill="rgb(238,211,18)" fg:x="280" fg:w="8"/><text x="22.7219%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="22.4719%" y="645" width="0.6421%" height="15" fill="rgb(217,130,2)" fg:x="280" fg:w="8"/><text x="22.7219%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.9535%" y="629" width="0.1605%" height="15" fill="rgb(251,17,29)" fg:x="286" fg:w="2"/><text x="23.2035%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.9535%" y="613" width="0.1605%" height="15" fill="rgb(243,18,0)" fg:x="286" fg:w="2"/><text x="23.2035%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="23.0337%" y="597" width="0.0803%" height="15" fill="rgb(227,220,45)" fg:x="287" fg:w="1"/><text x="23.2837%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.0337%" y="581" width="0.0803%" height="15" fill="rgb(212,34,2)" fg:x="287" fg:w="1"/><text x="23.2837%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="23.0337%" y="565" width="0.0803%" height="15" fill="rgb(236,23,8)" fg:x="287" fg:w="1"/><text x="23.2837%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.0337%" y="549" width="0.0803%" height="15" fill="rgb(210,113,39)" fg:x="287" fg:w="1"/><text x="23.2837%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="23.1942%" y="597" width="0.1605%" height="15" fill="rgb(243,123,48)" fg:x="289" fg:w="2"/><text x="23.4442%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="23.1942%" y="581" width="0.1605%" height="15" fill="rgb(223,175,36)" fg:x="289" fg:w="2"/><text x="23.4442%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="23.2745%" y="565" width="0.0803%" height="15" fill="rgb(226,100,30)" fg:x="290" fg:w="1"/><text x="23.5245%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="23.2745%" y="549" width="0.0803%" height="15" fill="rgb(221,225,39)" fg:x="290" fg:w="1"/><text x="23.5245%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="23.2745%" y="533" width="0.0803%" height="15" fill="rgb(224,222,42)" fg:x="290" fg:w="1"/><text x="23.5245%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.3547%" y="597" width="0.0803%" height="15" fill="rgb(221,53,1)" fg:x="291" fg:w="1"/><text x="23.6047%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.3547%" y="581" width="0.0803%" height="15" fill="rgb(216,187,48)" fg:x="291" fg:w="1"/><text x="23.6047%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.3547%" y="565" width="0.0803%" height="15" fill="rgb(220,108,2)" fg:x="291" fg:w="1"/><text x="23.6047%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.4350%" y="517" width="0.0803%" height="15" fill="rgb(216,13,42)" fg:x="292" fg:w="1"/><text x="23.6850%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.4350%" y="501" width="0.0803%" height="15" fill="rgb(205,14,29)" fg:x="292" fg:w="1"/><text x="23.6850%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.5152%" y="501" width="0.0803%" height="15" fill="rgb(217,168,30)" fg:x="293" fg:w="1"/><text x="23.7652%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.5152%" y="485" width="0.0803%" height="15" fill="rgb(246,173,54)" fg:x="293" fg:w="1"/><text x="23.7652%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="23.4350%" y="565" width="0.2408%" height="15" fill="rgb(227,177,11)" fg:x="292" fg:w="3"/><text x="23.6850%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="23.4350%" y="549" width="0.2408%" height="15" fill="rgb(223,215,51)" fg:x="292" fg:w="3"/><text x="23.6850%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="23.4350%" y="533" width="0.2408%" height="15" fill="rgb(253,4,17)" fg:x="292" fg:w="3"/><text x="23.6850%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="23.5152%" y="517" width="0.1605%" height="15" fill="rgb(206,150,43)" fg:x="293" fg:w="2"/><text x="23.7652%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.5955%" y="501" width="0.0803%" height="15" fill="rgb(241,100,52)" fg:x="294" fg:w="1"/><text x="23.8455%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.5955%" y="485" width="0.0803%" height="15" fill="rgb(234,120,21)" fg:x="294" fg:w="1"/><text x="23.8455%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (4 samples, 0.32%)</title><rect x="23.4350%" y="581" width="0.3210%" height="15" fill="rgb(231,60,11)" fg:x="292" fg:w="4"/><text x="23.6850%" y="591.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="23.6758%" y="565" width="0.0803%" height="15" fill="rgb(247,77,50)" fg:x="295" fg:w="1"/><text x="23.9258%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="23.6758%" y="549" width="0.0803%" height="15" fill="rgb(251,199,54)" fg:x="295" fg:w="1"/><text x="23.9258%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="23.6758%" y="533" width="0.0803%" height="15" fill="rgb(212,120,38)" fg:x="295" fg:w="1"/><text x="23.9258%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="23.6758%" y="517" width="0.0803%" height="15" fill="rgb(250,161,37)" fg:x="295" fg:w="1"/><text x="23.9258%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="23.6758%" y="501" width="0.0803%" height="15" fill="rgb(232,158,45)" fg:x="295" fg:w="1"/><text x="23.9258%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="23.6758%" y="485" width="0.0803%" height="15" fill="rgb(233,114,2)" fg:x="295" fg:w="1"/><text x="23.9258%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="23.6758%" y="469" width="0.0803%" height="15" fill="rgb(248,139,0)" fg:x="295" fg:w="1"/><text x="23.9258%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.7560%" y="533" width="0.0803%" height="15" fill="rgb(222,164,18)" fg:x="296" fg:w="1"/><text x="24.0060%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="23.8363%" y="501" width="0.0803%" height="15" fill="rgb(221,140,42)" fg:x="297" fg:w="1"/><text x="24.0863%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="23.8363%" y="485" width="0.0803%" height="15" fill="rgb(209,186,11)" fg:x="297" fg:w="1"/><text x="24.0863%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="23.8363%" y="469" width="0.0803%" height="15" fill="rgb(254,212,38)" fg:x="297" fg:w="1"/><text x="24.0863%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="23.8363%" y="453" width="0.0803%" height="15" fill="rgb(219,156,31)" fg:x="297" fg:w="1"/><text x="24.0863%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.8363%" y="437" width="0.0803%" height="15" fill="rgb(222,148,42)" fg:x="297" fg:w="1"/><text x="24.0863%" y="447.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="23.7560%" y="581" width="0.2408%" height="15" fill="rgb(225,65,5)" fg:x="296" fg:w="3"/><text x="24.0060%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="23.7560%" y="565" width="0.2408%" height="15" fill="rgb(235,28,12)" fg:x="296" fg:w="3"/><text x="24.0060%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="23.7560%" y="549" width="0.2408%" height="15" fill="rgb(245,58,4)" fg:x="296" fg:w="3"/><text x="24.0060%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="23.8363%" y="533" width="0.1605%" height="15" fill="rgb(235,118,5)" fg:x="297" fg:w="2"/><text x="24.0863%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="23.8363%" y="517" width="0.1605%" height="15" fill="rgb(253,196,3)" fg:x="297" fg:w="2"/><text x="24.0863%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="23.9165%" y="501" width="0.0803%" height="15" fill="rgb(238,90,28)" fg:x="298" fg:w="1"/><text x="24.1665%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="23.9165%" y="485" width="0.0803%" height="15" fill="rgb(254,227,4)" fg:x="298" fg:w="1"/><text x="24.1665%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="23.9968%" y="405" width="0.0803%" height="15" fill="rgb(237,114,35)" fg:x="299" fg:w="1"/><text x="24.2468%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="23.9968%" y="389" width="0.0803%" height="15" fill="rgb(221,147,29)" fg:x="299" fg:w="1"/><text x="24.2468%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="23.9968%" y="373" width="0.0803%" height="15" fill="rgb(216,201,17)" fg:x="299" fg:w="1"/><text x="24.2468%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="23.9968%" y="421" width="0.1605%" height="15" fill="rgb(251,46,50)" fg:x="299" fg:w="2"/><text x="24.2468%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.0770%" y="405" width="0.0803%" height="15" fill="rgb(216,143,48)" fg:x="300" fg:w="1"/><text x="24.3270%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="23.9968%" y="469" width="0.2408%" height="15" fill="rgb(224,62,51)" fg:x="299" fg:w="3"/><text x="24.2468%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="23.9968%" y="453" width="0.2408%" height="15" fill="rgb(232,152,20)" fg:x="299" fg:w="3"/><text x="24.2468%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="23.9968%" y="437" width="0.2408%" height="15" fill="rgb(233,194,7)" fg:x="299" fg:w="3"/><text x="24.2468%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.1573%" y="421" width="0.0803%" height="15" fill="rgb(207,33,22)" fg:x="301" fg:w="1"/><text x="24.4073%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="23.9968%" y="485" width="0.3210%" height="15" fill="rgb(226,54,34)" fg:x="299" fg:w="4"/><text x="24.2468%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.2376%" y="469" width="0.0803%" height="15" fill="rgb(227,161,47)" fg:x="302" fg:w="1"/><text x="24.4876%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="23.9968%" y="501" width="0.4013%" height="15" fill="rgb(218,58,37)" fg:x="299" fg:w="5"/><text x="24.2468%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.3178%" y="485" width="0.0803%" height="15" fill="rgb(208,173,18)" fg:x="303" fg:w="1"/><text x="24.5678%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.3178%" y="469" width="0.0803%" height="15" fill="rgb(230,159,11)" fg:x="303" fg:w="1"/><text x="24.5678%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.3178%" y="453" width="0.0803%" height="15" fill="rgb(238,90,51)" fg:x="303" fg:w="1"/><text x="24.5678%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="23.9968%" y="517" width="0.4815%" height="15" fill="rgb(225,97,36)" fg:x="299" fg:w="6"/><text x="24.2468%" y="527.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="24.3981%" y="501" width="0.0803%" height="15" fill="rgb(211,205,42)" fg:x="304" fg:w="1"/><text x="24.6481%" y="511.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="24.3981%" y="485" width="0.0803%" height="15" fill="rgb(219,152,7)" fg:x="304" fg:w="1"/><text x="24.6481%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 1.36%)</title><rect x="23.1942%" y="629" width="1.3644%" height="15" fill="rgb(222,79,10)" fg:x="289" fg:w="17"/><text x="23.4442%" y="639.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (17 samples, 1.36%)</title><rect x="23.1942%" y="613" width="1.3644%" height="15" fill="rgb(242,13,11)" fg:x="289" fg:w="17"/><text x="23.4442%" y="623.50"></text></g><g><title>kernel::model::any_entity_changes (14 samples, 1.12%)</title><rect x="23.4350%" y="597" width="1.1236%" height="15" fill="rgb(231,143,41)" fg:x="292" fg:w="14"/><text x="23.6850%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (7 samples, 0.56%)</title><rect x="23.9968%" y="581" width="0.5618%" height="15" fill="rgb(222,147,19)" fg:x="299" fg:w="7"/><text x="24.2468%" y="591.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="23.9968%" y="565" width="0.5618%" height="15" fill="rgb(235,5,39)" fg:x="299" fg:w="7"/><text x="24.2468%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="23.9968%" y="549" width="0.5618%" height="15" fill="rgb(246,155,51)" fg:x="299" fg:w="7"/><text x="24.2468%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="23.9968%" y="533" width="0.5618%" height="15" fill="rgb(218,157,4)" fg:x="299" fg:w="7"/><text x="24.2468%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="24.4783%" y="517" width="0.0803%" height="15" fill="rgb(226,184,4)" fg:x="305" fg:w="1"/><text x="24.7283%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="24.4783%" y="501" width="0.0803%" height="15" fill="rgb(210,103,26)" fg:x="305" fg:w="1"/><text x="24.7283%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="24.5586%" y="581" width="0.0803%" height="15" fill="rgb(228,23,31)" fg:x="306" fg:w="1"/><text x="24.8086%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="24.5586%" y="597" width="0.1605%" height="15" fill="rgb(205,176,34)" fg:x="306" fg:w="2"/><text x="24.8086%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="24.6388%" y="581" width="0.0803%" height="15" fill="rgb(246,213,37)" fg:x="307" fg:w="1"/><text x="24.8888%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.6388%" y="565" width="0.0803%" height="15" fill="rgb(213,52,45)" fg:x="307" fg:w="1"/><text x="24.8888%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.6388%" y="549" width="0.0803%" height="15" fill="rgb(249,9,52)" fg:x="307" fg:w="1"/><text x="24.8888%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="24.7994%" y="581" width="0.1605%" height="15" fill="rgb(205,97,16)" fg:x="309" fg:w="2"/><text x="25.0494%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="24.7994%" y="565" width="0.1605%" height="15" fill="rgb(214,11,46)" fg:x="309" fg:w="2"/><text x="25.0494%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="24.8796%" y="549" width="0.0803%" height="15" fill="rgb(221,66,18)" fg:x="310" fg:w="1"/><text x="25.1296%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="24.8796%" y="533" width="0.0803%" height="15" fill="rgb(213,49,1)" fg:x="310" fg:w="1"/><text x="25.1296%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="24.9599%" y="565" width="0.0803%" height="15" fill="rgb(232,75,51)" fg:x="311" fg:w="1"/><text x="25.2099%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="24.9599%" y="549" width="0.0803%" height="15" fill="rgb(208,218,40)" fg:x="311" fg:w="1"/><text x="25.2099%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="24.9599%" y="533" width="0.0803%" height="15" fill="rgb(206,144,50)" fg:x="311" fg:w="1"/><text x="25.2099%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="24.9599%" y="517" width="0.0803%" height="15" fill="rgb(216,9,51)" fg:x="311" fg:w="1"/><text x="25.2099%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="25.0401%" y="565" width="0.4013%" height="15" fill="rgb(226,6,53)" fg:x="312" fg:w="5"/><text x="25.2901%" y="575.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="25.0401%" y="549" width="0.4013%" height="15" fill="rgb(216,9,50)" fg:x="312" fg:w="5"/><text x="25.2901%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="25.1204%" y="533" width="0.3210%" height="15" fill="rgb(214,101,31)" fg:x="313" fg:w="4"/><text x="25.3704%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="25.1204%" y="517" width="0.3210%" height="15" fill="rgb(247,85,17)" fg:x="313" fg:w="4"/><text x="25.3704%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="25.2809%" y="501" width="0.1605%" height="15" fill="rgb(248,138,25)" fg:x="315" fg:w="2"/><text x="25.5309%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="25.2809%" y="485" width="0.1605%" height="15" fill="rgb(225,146,20)" fg:x="315" fg:w="2"/><text x="25.5309%" y="495.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="25.2809%" y="469" width="0.1605%" height="15" fill="rgb(224,184,17)" fg:x="315" fg:w="2"/><text x="25.5309%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="25.4414%" y="549" width="0.0803%" height="15" fill="rgb(231,10,20)" fg:x="317" fg:w="1"/><text x="25.6914%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="25.4414%" y="565" width="0.1605%" height="15" fill="rgb(210,93,37)" fg:x="317" fg:w="2"/><text x="25.6914%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="25.5217%" y="549" width="0.0803%" height="15" fill="rgb(226,84,42)" fg:x="318" fg:w="1"/><text x="25.7717%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="25.5217%" y="533" width="0.0803%" height="15" fill="rgb(253,192,7)" fg:x="318" fg:w="1"/><text x="25.7717%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="24.9599%" y="581" width="0.7223%" height="15" fill="rgb(214,107,27)" fg:x="311" fg:w="9"/><text x="25.2099%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.6019%" y="565" width="0.0803%" height="15" fill="rgb(238,146,21)" fg:x="319" fg:w="1"/><text x="25.8519%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.6019%" y="549" width="0.0803%" height="15" fill="rgb(209,136,30)" fg:x="319" fg:w="1"/><text x="25.8519%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.6019%" y="533" width="0.0803%" height="15" fill="rgb(226,60,22)" fg:x="319" fg:w="1"/><text x="25.8519%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="24.7191%" y="597" width="1.0433%" height="15" fill="rgb(243,92,26)" fg:x="308" fg:w="13"/><text x="24.9691%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.6822%" y="581" width="0.0803%" height="15" fill="rgb(211,85,33)" fg:x="320" fg:w="1"/><text x="25.9322%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.6822%" y="565" width="0.0803%" height="15" fill="rgb(243,187,44)" fg:x="320" fg:w="1"/><text x="25.9322%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.6822%" y="549" width="0.0803%" height="15" fill="rgb(251,172,23)" fg:x="320" fg:w="1"/><text x="25.9322%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.28%)</title><rect x="24.5586%" y="613" width="1.2841%" height="15" fill="rgb(254,162,50)" fg:x="306" fg:w="16"/><text x="24.8086%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="25.7624%" y="597" width="0.0803%" height="15" fill="rgb(239,14,53)" fg:x="321" fg:w="1"/><text x="26.0124%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="25.7624%" y="581" width="0.0803%" height="15" fill="rgb(242,208,8)" fg:x="321" fg:w="1"/><text x="26.0124%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.7624%" y="565" width="0.0803%" height="15" fill="rgb(225,61,41)" fg:x="321" fg:w="1"/><text x="26.0124%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.7624%" y="549" width="0.0803%" height="15" fill="rgb(219,154,6)" fg:x="321" fg:w="1"/><text x="26.0124%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.7624%" y="533" width="0.0803%" height="15" fill="rgb(227,223,44)" fg:x="321" fg:w="1"/><text x="26.0124%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.7624%" y="517" width="0.0803%" height="15" fill="rgb(220,188,6)" fg:x="321" fg:w="1"/><text x="26.0124%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.8427%" y="581" width="0.0803%" height="15" fill="rgb(216,65,22)" fg:x="322" fg:w="1"/><text x="26.0927%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.9230%" y="581" width="0.0803%" height="15" fill="rgb(236,66,46)" fg:x="323" fg:w="1"/><text x="26.1730%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.0032%" y="565" width="0.0803%" height="15" fill="rgb(211,150,52)" fg:x="324" fg:w="1"/><text x="26.2532%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.0835%" y="565" width="0.0803%" height="15" fill="rgb(253,89,19)" fg:x="325" fg:w="1"/><text x="26.3335%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.1637%" y="549" width="0.0803%" height="15" fill="rgb(245,4,1)" fg:x="326" fg:w="1"/><text x="26.4137%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.1637%" y="533" width="0.0803%" height="15" fill="rgb(230,109,16)" fg:x="326" fg:w="1"/><text x="26.4137%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="25.8427%" y="613" width="0.4815%" height="15" fill="rgb(213,7,47)" fg:x="322" fg:w="6"/><text x="26.0927%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="25.8427%" y="597" width="0.4815%" height="15" fill="rgb(242,148,14)" fg:x="322" fg:w="6"/><text x="26.0927%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="26.0032%" y="581" width="0.3210%" height="15" fill="rgb(238,51,34)" fg:x="324" fg:w="4"/><text x="26.2532%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="26.1637%" y="565" width="0.1605%" height="15" fill="rgb(222,49,22)" fg:x="326" fg:w="2"/><text x="26.4137%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2440%" y="549" width="0.0803%" height="15" fill="rgb(237,102,50)" fg:x="327" fg:w="1"/><text x="26.4940%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2440%" y="533" width="0.0803%" height="15" fill="rgb(237,195,8)" fg:x="327" fg:w="1"/><text x="26.4940%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.2440%" y="517" width="0.0803%" height="15" fill="rgb(245,60,18)" fg:x="327" fg:w="1"/><text x="26.4940%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="26.3242%" y="613" width="0.0803%" height="15" fill="rgb(253,74,32)" fg:x="328" fg:w="1"/><text x="26.5742%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.4045%" y="549" width="0.0803%" height="15" fill="rgb(240,91,39)" fg:x="329" fg:w="1"/><text x="26.6545%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.5650%" y="533" width="0.0803%" height="15" fill="rgb(221,162,34)" fg:x="331" fg:w="1"/><text x="26.8150%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.6453%" y="533" width="0.0803%" height="15" fill="rgb(223,32,2)" fg:x="332" fg:w="1"/><text x="26.8953%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.6453%" y="517" width="0.0803%" height="15" fill="rgb(245,220,46)" fg:x="332" fg:w="1"/><text x="26.8953%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.7255%" y="517" width="0.0803%" height="15" fill="rgb(216,38,33)" fg:x="333" fg:w="1"/><text x="26.9755%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.7255%" y="501" width="0.0803%" height="15" fill="rgb(210,123,14)" fg:x="333" fg:w="1"/><text x="26.9755%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="26.8058%" y="501" width="0.2408%" height="15" fill="rgb(214,38,47)" fg:x="334" fg:w="3"/><text x="27.0558%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.0465%" y="501" width="0.0803%" height="15" fill="rgb(244,180,16)" fg:x="337" fg:w="1"/><text x="27.2965%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.0465%" y="485" width="0.0803%" height="15" fill="rgb(252,21,32)" fg:x="337" fg:w="1"/><text x="27.2965%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.2071%" y="485" width="0.0803%" height="15" fill="rgb(245,218,31)" fg:x="339" fg:w="1"/><text x="27.4571%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="26.4045%" y="581" width="0.9631%" height="15" fill="rgb(247,81,18)" fg:x="329" fg:w="12"/><text x="26.6545%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.96%)</title><rect x="26.4045%" y="565" width="0.9631%" height="15" fill="rgb(220,151,1)" fg:x="329" fg:w="12"/><text x="26.6545%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="26.4848%" y="549" width="0.8828%" height="15" fill="rgb(211,157,11)" fg:x="330" fg:w="11"/><text x="26.7348%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="26.7255%" y="533" width="0.6421%" height="15" fill="rgb(239,46,30)" fg:x="333" fg:w="8"/><text x="26.9755%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="26.8058%" y="517" width="0.5618%" height="15" fill="rgb(236,144,43)" fg:x="334" fg:w="7"/><text x="27.0558%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="27.1268%" y="501" width="0.2408%" height="15" fill="rgb(206,71,45)" fg:x="338" fg:w="3"/><text x="27.3768%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="27.2873%" y="485" width="0.0803%" height="15" fill="rgb(240,85,31)" fg:x="340" fg:w="1"/><text x="27.5373%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="27.4478%" y="533" width="0.0803%" height="15" fill="rgb(221,43,52)" fg:x="342" fg:w="1"/><text x="27.6978%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.4478%" y="517" width="0.0803%" height="15" fill="rgb(243,106,22)" fg:x="342" fg:w="1"/><text x="27.6978%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="27.3676%" y="565" width="0.2408%" height="15" fill="rgb(209,138,38)" fg:x="341" fg:w="3"/><text x="27.6176%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="27.3676%" y="549" width="0.2408%" height="15" fill="rgb(216,63,40)" fg:x="341" fg:w="3"/><text x="27.6176%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.5281%" y="533" width="0.0803%" height="15" fill="rgb(206,115,21)" fg:x="343" fg:w="1"/><text x="27.7781%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="27.6083%" y="565" width="0.0803%" height="15" fill="rgb(235,53,44)" fg:x="344" fg:w="1"/><text x="27.8583%" y="575.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (17 samples, 1.36%)</title><rect x="26.4045%" y="597" width="1.3644%" height="15" fill="rgb(244,160,14)" fg:x="329" fg:w="17"/><text x="26.6545%" y="607.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.40%)</title><rect x="27.3676%" y="581" width="0.4013%" height="15" fill="rgb(223,16,19)" fg:x="341" fg:w="5"/><text x="27.6176%" y="591.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="27.6886%" y="565" width="0.0803%" height="15" fill="rgb(242,63,42)" fg:x="345" fg:w="1"/><text x="27.9386%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.9294%" y="565" width="0.0803%" height="15" fill="rgb(209,66,49)" fg:x="348" fg:w="1"/><text x="28.1794%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="28.0096%" y="565" width="0.2408%" height="15" fill="rgb(207,126,46)" fg:x="349" fg:w="3"/><text x="28.2596%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.1701%" y="549" width="0.0803%" height="15" fill="rgb(218,160,41)" fg:x="351" fg:w="1"/><text x="28.4201%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="28.1701%" y="533" width="0.0803%" height="15" fill="rgb(234,125,46)" fg:x="351" fg:w="1"/><text x="28.4201%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="28.2504%" y="565" width="0.1605%" height="15" fill="rgb(205,66,36)" fg:x="352" fg:w="2"/><text x="28.5004%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="28.2504%" y="549" width="0.1605%" height="15" fill="rgb(220,135,16)" fg:x="352" fg:w="2"/><text x="28.5004%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="28.2504%" y="533" width="0.1605%" height="15" fill="rgb(214,217,54)" fg:x="352" fg:w="2"/><text x="28.5004%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="28.3307%" y="517" width="0.0803%" height="15" fill="rgb(206,30,9)" fg:x="353" fg:w="1"/><text x="28.5807%" y="527.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="28.4109%" y="565" width="0.0803%" height="15" fill="rgb(207,196,5)" fg:x="354" fg:w="1"/><text x="28.6609%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.4109%" y="549" width="0.0803%" height="15" fill="rgb(227,116,12)" fg:x="354" fg:w="1"/><text x="28.6609%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.4109%" y="533" width="0.0803%" height="15" fill="rgb(235,227,13)" fg:x="354" fg:w="1"/><text x="28.6609%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.4109%" y="517" width="0.0803%" height="15" fill="rgb(238,212,29)" fg:x="354" fg:w="1"/><text x="28.6609%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.4109%" y="501" width="0.0803%" height="15" fill="rgb(230,152,17)" fg:x="354" fg:w="1"/><text x="28.6609%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="28.4912%" y="565" width="0.2408%" height="15" fill="rgb(220,197,1)" fg:x="355" fg:w="3"/><text x="28.7412%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="28.4912%" y="549" width="0.2408%" height="15" fill="rgb(229,227,40)" fg:x="355" fg:w="3"/><text x="28.7412%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="28.5714%" y="533" width="0.1605%" height="15" fill="rgb(227,179,16)" fg:x="356" fg:w="2"/><text x="28.8214%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.7319%" y="549" width="0.0803%" height="15" fill="rgb(246,116,44)" fg:x="358" fg:w="1"/><text x="28.9819%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="29.0530%" y="517" width="0.0803%" height="15" fill="rgb(205,191,4)" fg:x="362" fg:w="1"/><text x="29.3030%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="29.0530%" y="501" width="0.0803%" height="15" fill="rgb(245,69,19)" fg:x="362" fg:w="1"/><text x="29.3030%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="29.0530%" y="485" width="0.0803%" height="15" fill="rgb(230,29,26)" fg:x="362" fg:w="1"/><text x="29.3030%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.0530%" y="469" width="0.0803%" height="15" fill="rgb(239,192,26)" fg:x="362" fg:w="1"/><text x="29.3030%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.0530%" y="453" width="0.0803%" height="15" fill="rgb(219,92,16)" fg:x="362" fg:w="1"/><text x="29.3030%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.2135%" y="485" width="0.0803%" height="15" fill="rgb(246,147,43)" fg:x="364" fg:w="1"/><text x="29.4635%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.2135%" y="469" width="0.0803%" height="15" fill="rgb(222,147,11)" fg:x="364" fg:w="1"/><text x="29.4635%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.5345%" y="453" width="0.1605%" height="15" fill="rgb(243,71,8)" fg:x="368" fg:w="2"/><text x="29.7845%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.5345%" y="437" width="0.1605%" height="15" fill="rgb(250,36,12)" fg:x="368" fg:w="2"/><text x="29.7845%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="29.5345%" y="421" width="0.1605%" height="15" fill="rgb(207,168,14)" fg:x="368" fg:w="2"/><text x="29.7845%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (25 samples, 2.01%)</title><rect x="27.7689%" y="597" width="2.0064%" height="15" fill="rgb(254,210,51)" fg:x="346" fg:w="25"/><text x="28.0189%" y="607.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 2.01%)</title><rect x="27.7689%" y="581" width="2.0064%" height="15" fill="rgb(236,152,38)" fg:x="346" fg:w="25"/><text x="28.0189%" y="591.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.04%)</title><rect x="28.7319%" y="565" width="1.0433%" height="15" fill="rgb(240,164,36)" fg:x="358" fg:w="13"/><text x="28.9819%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="28.8122%" y="549" width="0.9631%" height="15" fill="rgb(210,171,36)" fg:x="359" fg:w="12"/><text x="29.0622%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="28.9727%" y="533" width="0.8026%" height="15" fill="rgb(254,156,34)" fg:x="361" fg:w="10"/><text x="29.2227%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="29.1332%" y="517" width="0.6421%" height="15" fill="rgb(216,204,23)" fg:x="363" fg:w="8"/><text x="29.3832%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="29.1332%" y="501" width="0.6421%" height="15" fill="rgb(230,75,38)" fg:x="363" fg:w="8"/><text x="29.3832%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="29.2937%" y="485" width="0.4815%" height="15" fill="rgb(248,197,25)" fg:x="365" fg:w="6"/><text x="29.5437%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="29.4543%" y="469" width="0.3210%" height="15" fill="rgb(234,121,26)" fg:x="367" fg:w="4"/><text x="29.7043%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="29.6950%" y="453" width="0.0803%" height="15" fill="rgb(220,41,36)" fg:x="370" fg:w="1"/><text x="29.9450%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="30.0963%" y="453" width="0.0803%" height="15" fill="rgb(227,33,32)" fg:x="375" fg:w="1"/><text x="30.3463%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="30.0963%" y="437" width="0.0803%" height="15" fill="rgb(208,214,54)" fg:x="375" fg:w="1"/><text x="30.3463%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="30.0963%" y="421" width="0.0803%" height="15" fill="rgb(205,37,38)" fg:x="375" fg:w="1"/><text x="30.3463%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.0963%" y="405" width="0.0803%" height="15" fill="rgb(252,2,0)" fg:x="375" fg:w="1"/><text x="30.3463%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="30.1766%" y="421" width="0.0803%" height="15" fill="rgb(212,171,10)" fg:x="376" fg:w="1"/><text x="30.4266%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="30.2568%" y="405" width="0.0803%" height="15" fill="rgb(239,35,46)" fg:x="377" fg:w="1"/><text x="30.5068%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.2568%" y="389" width="0.0803%" height="15" fill="rgb(209,34,42)" fg:x="377" fg:w="1"/><text x="30.5068%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="30.1766%" y="437" width="0.2408%" height="15" fill="rgb(237,9,4)" fg:x="376" fg:w="3"/><text x="30.4266%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="30.2568%" y="421" width="0.1605%" height="15" fill="rgb(254,55,38)" fg:x="377" fg:w="2"/><text x="30.5068%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="30.3371%" y="405" width="0.0803%" height="15" fill="rgb(222,95,29)" fg:x="378" fg:w="1"/><text x="30.5871%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.3371%" y="389" width="0.0803%" height="15" fill="rgb(241,218,37)" fg:x="378" fg:w="1"/><text x="30.5871%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="30.0963%" y="469" width="0.4815%" height="15" fill="rgb(225,89,28)" fg:x="375" fg:w="6"/><text x="30.3463%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="30.1766%" y="453" width="0.4013%" height="15" fill="rgb(231,17,25)" fg:x="376" fg:w="5"/><text x="30.4266%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="30.4173%" y="437" width="0.1605%" height="15" fill="rgb(206,216,48)" fg:x="379" fg:w="2"/><text x="30.6673%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="30.4976%" y="421" width="0.0803%" height="15" fill="rgb(247,190,28)" fg:x="380" fg:w="1"/><text x="30.7476%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="30.5778%" y="469" width="0.0803%" height="15" fill="rgb(216,196,12)" fg:x="381" fg:w="1"/><text x="30.8278%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.5778%" y="453" width="0.0803%" height="15" fill="rgb(232,114,19)" fg:x="381" fg:w="1"/><text x="30.8278%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="30.0161%" y="501" width="0.7223%" height="15" fill="rgb(240,60,14)" fg:x="374" fg:w="9"/><text x="30.2661%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="30.0161%" y="485" width="0.7223%" height="15" fill="rgb(250,108,9)" fg:x="374" fg:w="9"/><text x="30.2661%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.6581%" y="469" width="0.0803%" height="15" fill="rgb(227,228,21)" fg:x="382" fg:w="1"/><text x="30.9081%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.6581%" y="453" width="0.0803%" height="15" fill="rgb(254,16,52)" fg:x="382" fg:w="1"/><text x="30.9081%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.6581%" y="437" width="0.0803%" height="15" fill="rgb(222,58,2)" fg:x="382" fg:w="1"/><text x="30.9081%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="29.8555%" y="517" width="1.0433%" height="15" fill="rgb(253,68,14)" fg:x="372" fg:w="13"/><text x="30.1055%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="30.7384%" y="501" width="0.1605%" height="15" fill="rgb(226,96,17)" fg:x="383" fg:w="2"/><text x="30.9884%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.8186%" y="485" width="0.0803%" height="15" fill="rgb(227,199,2)" fg:x="384" fg:w="1"/><text x="31.0686%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.8186%" y="469" width="0.0803%" height="15" fill="rgb(228,227,48)" fg:x="384" fg:w="1"/><text x="31.0686%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.12%)</title><rect x="29.8555%" y="533" width="1.1236%" height="15" fill="rgb(249,183,0)" fg:x="372" fg:w="14"/><text x="30.1055%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.8989%" y="517" width="0.0803%" height="15" fill="rgb(250,89,38)" fg:x="385" fg:w="1"/><text x="31.1489%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="30.9791%" y="533" width="0.0803%" height="15" fill="rgb(240,227,8)" fg:x="386" fg:w="1"/><text x="31.2291%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="30.9791%" y="517" width="0.0803%" height="15" fill="rgb(242,197,35)" fg:x="386" fg:w="1"/><text x="31.2291%" y="527.50"></text></g><g><title>engine::session::Session::close (126 samples, 10.11%)</title><rect x="21.1075%" y="725" width="10.1124%" height="15" fill="rgb(224,37,41)" fg:x="263" fg:w="126"/><text x="21.3575%" y="735.50">engine::session..</text></g><g><title>engine::session::state::State::close (121 samples, 9.71%)</title><rect x="21.5088%" y="709" width="9.7111%" height="15" fill="rgb(236,127,7)" fg:x="268" fg:w="121"/><text x="21.7588%" y="719.50">engine::sessio..</text></g><g><title>engine::session::state::State::flush_entities (101 samples, 8.11%)</title><rect x="23.1140%" y="693" width="8.1059%" height="15" fill="rgb(230,62,52)" fg:x="288" fg:w="101"/><text x="23.3640%" y="703.50">engine::ses..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (100 samples, 8.03%)</title><rect x="23.1942%" y="677" width="8.0257%" height="15" fill="rgb(235,114,23)" fg:x="289" fg:w="100"/><text x="23.4442%" y="687.50">engine::ses..</text></g><g><title>core::iter::adapters::try_process (100 samples, 8.03%)</title><rect x="23.1942%" y="661" width="8.0257%" height="15" fill="rgb(211,55,40)" fg:x="289" fg:w="100"/><text x="23.4442%" y="671.50">core::iter:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (100 samples, 8.03%)</title><rect x="23.1942%" y="645" width="8.0257%" height="15" fill="rgb(228,123,1)" fg:x="289" fg:w="100"/><text x="23.4442%" y="655.50">&lt;alloc::vec..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (83 samples, 6.66%)</title><rect x="24.5586%" y="629" width="6.6613%" height="15" fill="rgb(244,208,8)" fg:x="306" fg:w="83"/><text x="24.8086%" y="639.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (60 samples, 4.82%)</title><rect x="26.4045%" y="613" width="4.8154%" height="15" fill="rgb(237,118,14)" fg:x="329" fg:w="60"/><text x="26.6545%" y="623.50">kernel..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (18 samples, 1.44%)</title><rect x="29.7753%" y="597" width="1.4446%" height="15" fill="rgb(219,170,13)" fg:x="371" fg:w="18"/><text x="30.0253%" y="607.50"></text></g><g><title>serde_json::de::from_trait (18 samples, 1.44%)</title><rect x="29.7753%" y="581" width="1.4446%" height="15" fill="rgb(212,39,43)" fg:x="371" fg:w="18"/><text x="30.0253%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.44%)</title><rect x="29.7753%" y="565" width="1.4446%" height="15" fill="rgb(244,191,2)" fg:x="371" fg:w="18"/><text x="30.0253%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.44%)</title><rect x="29.7753%" y="549" width="1.4446%" height="15" fill="rgb(219,201,46)" fg:x="371" fg:w="18"/><text x="30.0253%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.0594%" y="533" width="0.1605%" height="15" fill="rgb(218,82,7)" fg:x="387" fg:w="2"/><text x="31.3094%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="31.0594%" y="517" width="0.1605%" height="15" fill="rgb(208,192,8)" fg:x="387" fg:w="2"/><text x="31.3094%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="31.1396%" y="501" width="0.0803%" height="15" fill="rgb(244,54,32)" fg:x="388" fg:w="1"/><text x="31.3896%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.4607%" y="549" width="0.0803%" height="15" fill="rgb(240,43,52)" fg:x="392" fg:w="1"/><text x="31.7107%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.4607%" y="533" width="0.0803%" height="15" fill="rgb(233,134,29)" fg:x="392" fg:w="1"/><text x="31.7107%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.4607%" y="517" width="0.0803%" height="15" fill="rgb(236,128,10)" fg:x="392" fg:w="1"/><text x="31.7107%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.4607%" y="501" width="0.0803%" height="15" fill="rgb(207,46,54)" fg:x="392" fg:w="1"/><text x="31.7107%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.4607%" y="485" width="0.0803%" height="15" fill="rgb(248,140,35)" fg:x="392" fg:w="1"/><text x="31.7107%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.4607%" y="469" width="0.0803%" height="15" fill="rgb(241,103,35)" fg:x="392" fg:w="1"/><text x="31.7107%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.4607%" y="453" width="0.0803%" height="15" fill="rgb(223,19,48)" fg:x="392" fg:w="1"/><text x="31.7107%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.4607%" y="437" width="0.0803%" height="15" fill="rgb(238,177,46)" fg:x="392" fg:w="1"/><text x="31.7107%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.4607%" y="421" width="0.0803%" height="15" fill="rgb(213,102,15)" fg:x="392" fg:w="1"/><text x="31.7107%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.4607%" y="405" width="0.0803%" height="15" fill="rgb(254,135,52)" fg:x="392" fg:w="1"/><text x="31.7107%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.4607%" y="389" width="0.0803%" height="15" fill="rgb(240,59,6)" fg:x="392" fg:w="1"/><text x="31.7107%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.4607%" y="373" width="0.0803%" height="15" fill="rgb(207,226,5)" fg:x="392" fg:w="1"/><text x="31.7107%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.5409%" y="533" width="0.0803%" height="15" fill="rgb(208,167,17)" fg:x="393" fg:w="1"/><text x="31.7909%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="31.5409%" y="549" width="0.1605%" height="15" fill="rgb(254,94,10)" fg:x="393" fg:w="2"/><text x="31.7909%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.6212%" y="533" width="0.0803%" height="15" fill="rgb(229,33,11)" fg:x="394" fg:w="1"/><text x="31.8712%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.6212%" y="517" width="0.0803%" height="15" fill="rgb(249,145,48)" fg:x="394" fg:w="1"/><text x="31.8712%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.6212%" y="501" width="0.0803%" height="15" fill="rgb(253,68,54)" fg:x="394" fg:w="1"/><text x="31.8712%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="31.7817%" y="517" width="0.3210%" height="15" fill="rgb(223,27,42)" fg:x="396" fg:w="4"/><text x="32.0317%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="31.7817%" y="501" width="0.3210%" height="15" fill="rgb(235,123,13)" fg:x="396" fg:w="4"/><text x="32.0317%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="31.7817%" y="485" width="0.3210%" height="15" fill="rgb(244,154,7)" fg:x="396" fg:w="4"/><text x="32.0317%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="31.9422%" y="469" width="0.1605%" height="15" fill="rgb(214,30,25)" fg:x="398" fg:w="2"/><text x="32.1922%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="31.9422%" y="453" width="0.1605%" height="15" fill="rgb(252,189,13)" fg:x="398" fg:w="2"/><text x="32.1922%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="31.9422%" y="437" width="0.1605%" height="15" fill="rgb(234,27,40)" fg:x="398" fg:w="2"/><text x="32.1922%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="31.9422%" y="421" width="0.1605%" height="15" fill="rgb(252,199,25)" fg:x="398" fg:w="2"/><text x="32.1922%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="31.9422%" y="405" width="0.1605%" height="15" fill="rgb(234,207,20)" fg:x="398" fg:w="2"/><text x="32.1922%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="31.9422%" y="389" width="0.1605%" height="15" fill="rgb(244,220,10)" fg:x="398" fg:w="2"/><text x="32.1922%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="31.9422%" y="373" width="0.1605%" height="15" fill="rgb(247,68,23)" fg:x="398" fg:w="2"/><text x="32.1922%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="31.9422%" y="357" width="0.1605%" height="15" fill="rgb(254,61,4)" fg:x="398" fg:w="2"/><text x="32.1922%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="31.9422%" y="341" width="0.1605%" height="15" fill="rgb(245,208,35)" fg:x="398" fg:w="2"/><text x="32.1922%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="31.9422%" y="325" width="0.1605%" height="15" fill="rgb(235,90,11)" fg:x="398" fg:w="2"/><text x="32.1922%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="31.9422%" y="309" width="0.1605%" height="15" fill="rgb(239,139,43)" fg:x="398" fg:w="2"/><text x="32.1922%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.0225%" y="293" width="0.0803%" height="15" fill="rgb(209,187,9)" fg:x="399" fg:w="1"/><text x="32.2725%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.1027%" y="453" width="0.0803%" height="15" fill="rgb(241,30,6)" fg:x="400" fg:w="1"/><text x="32.3527%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.1027%" y="437" width="0.0803%" height="15" fill="rgb(216,104,1)" fg:x="400" fg:w="1"/><text x="32.3527%" y="447.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (11 samples, 0.88%)</title><rect x="31.3804%" y="597" width="0.8828%" height="15" fill="rgb(238,55,39)" fg:x="391" fg:w="11"/><text x="31.6304%" y="607.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (10 samples, 0.80%)</title><rect x="31.4607%" y="581" width="0.8026%" height="15" fill="rgb(226,151,41)" fg:x="392" fg:w="10"/><text x="31.7107%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (10 samples, 0.80%)</title><rect x="31.4607%" y="565" width="0.8026%" height="15" fill="rgb(228,73,40)" fg:x="392" fg:w="10"/><text x="31.7107%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="31.7014%" y="549" width="0.5618%" height="15" fill="rgb(215,81,0)" fg:x="395" fg:w="7"/><text x="31.9514%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="31.7014%" y="533" width="0.5618%" height="15" fill="rgb(209,52,39)" fg:x="395" fg:w="7"/><text x="31.9514%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.1027%" y="517" width="0.1605%" height="15" fill="rgb(221,127,5)" fg:x="400" fg:w="2"/><text x="32.3527%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.1027%" y="501" width="0.1605%" height="15" fill="rgb(213,215,6)" fg:x="400" fg:w="2"/><text x="32.3527%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="32.1027%" y="485" width="0.1605%" height="15" fill="rgb(214,118,13)" fg:x="400" fg:w="2"/><text x="32.3527%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.1027%" y="469" width="0.1605%" height="15" fill="rgb(207,205,41)" fg:x="400" fg:w="2"/><text x="32.3527%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.1830%" y="453" width="0.0803%" height="15" fill="rgb(218,208,45)" fg:x="401" fg:w="1"/><text x="32.4330%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.1830%" y="437" width="0.0803%" height="15" fill="rgb(244,81,54)" fg:x="401" fg:w="1"/><text x="32.4330%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="32.2632%" y="517" width="0.0803%" height="15" fill="rgb(244,175,1)" fg:x="402" fg:w="1"/><text x="32.5132%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.2632%" y="501" width="0.0803%" height="15" fill="rgb(232,128,28)" fg:x="402" fg:w="1"/><text x="32.5132%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.2632%" y="485" width="0.0803%" height="15" fill="rgb(234,83,13)" fg:x="402" fg:w="1"/><text x="32.5132%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.2632%" y="469" width="0.0803%" height="15" fill="rgb(233,222,35)" fg:x="402" fg:w="1"/><text x="32.5132%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.2632%" y="453" width="0.0803%" height="15" fill="rgb(244,204,21)" fg:x="402" fg:w="1"/><text x="32.5132%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.2632%" y="437" width="0.0803%" height="15" fill="rgb(225,121,40)" fg:x="402" fg:w="1"/><text x="32.5132%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="32.2632%" y="421" width="0.0803%" height="15" fill="rgb(231,89,18)" fg:x="402" fg:w="1"/><text x="32.5132%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="32.2632%" y="565" width="0.1605%" height="15" fill="rgb(205,41,50)" fg:x="402" fg:w="2"/><text x="32.5132%" y="575.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (2 samples, 0.16%)</title><rect x="32.2632%" y="549" width="0.1605%" height="15" fill="rgb(254,25,22)" fg:x="402" fg:w="2"/><text x="32.5132%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="32.2632%" y="533" width="0.1605%" height="15" fill="rgb(208,44,21)" fg:x="402" fg:w="2"/><text x="32.5132%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="32.3435%" y="517" width="0.0803%" height="15" fill="rgb(237,59,53)" fg:x="403" fg:w="1"/><text x="32.5935%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.3435%" y="501" width="0.0803%" height="15" fill="rgb(233,24,36)" fg:x="403" fg:w="1"/><text x="32.5935%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.3435%" y="485" width="0.0803%" height="15" fill="rgb(216,92,41)" fg:x="403" fg:w="1"/><text x="32.5935%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.3435%" y="469" width="0.0803%" height="15" fill="rgb(225,158,49)" fg:x="403" fg:w="1"/><text x="32.5935%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.3435%" y="453" width="0.0803%" height="15" fill="rgb(244,11,16)" fg:x="403" fg:w="1"/><text x="32.5935%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="32.3435%" y="437" width="0.0803%" height="15" fill="rgb(208,215,38)" fg:x="403" fg:w="1"/><text x="32.5935%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.4238%" y="565" width="0.1605%" height="15" fill="rgb(250,69,53)" fg:x="404" fg:w="2"/><text x="32.6738%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.4238%" y="549" width="0.1605%" height="15" fill="rgb(240,187,52)" fg:x="404" fg:w="2"/><text x="32.6738%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.5843%" y="565" width="0.0803%" height="15" fill="rgb(235,22,25)" fg:x="406" fg:w="1"/><text x="32.8343%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (2 samples, 0.16%)</title><rect x="32.6645%" y="565" width="0.1605%" height="15" fill="rgb(213,173,22)" fg:x="407" fg:w="2"/><text x="32.9145%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.7448%" y="549" width="0.0803%" height="15" fill="rgb(218,47,0)" fg:x="408" fg:w="1"/><text x="32.9948%" y="559.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (19 samples, 1.52%)</title><rect x="31.3804%" y="613" width="1.5249%" height="15" fill="rgb(254,157,11)" fg:x="391" fg:w="19"/><text x="31.6304%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.64%)</title><rect x="32.2632%" y="597" width="0.6421%" height="15" fill="rgb(233,154,6)" fg:x="402" fg:w="8"/><text x="32.5132%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="32.2632%" y="581" width="0.6421%" height="15" fill="rgb(233,207,47)" fg:x="402" fg:w="8"/><text x="32.5132%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.8250%" y="565" width="0.0803%" height="15" fill="rgb(249,128,18)" fg:x="409" fg:w="1"/><text x="33.0750%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.8250%" y="549" width="0.0803%" height="15" fill="rgb(211,27,42)" fg:x="409" fg:w="1"/><text x="33.0750%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.8250%" y="533" width="0.0803%" height="15" fill="rgb(240,163,26)" fg:x="409" fg:w="1"/><text x="33.0750%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.8250%" y="517" width="0.0803%" height="15" fill="rgb(232,118,46)" fg:x="409" fg:w="1"/><text x="33.0750%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.8250%" y="501" width="0.0803%" height="15" fill="rgb(238,158,34)" fg:x="409" fg:w="1"/><text x="33.0750%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.9053%" y="533" width="0.0803%" height="15" fill="rgb(254,99,45)" fg:x="410" fg:w="1"/><text x="33.1553%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.9053%" y="517" width="0.0803%" height="15" fill="rgb(247,205,20)" fg:x="410" fg:w="1"/><text x="33.1553%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.9053%" y="501" width="0.0803%" height="15" fill="rgb(240,20,41)" fg:x="410" fg:w="1"/><text x="33.1553%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.9053%" y="485" width="0.0803%" height="15" fill="rgb(231,22,43)" fg:x="410" fg:w="1"/><text x="33.1553%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.1461%" y="469" width="0.0803%" height="15" fill="rgb(207,86,33)" fg:x="413" fg:w="1"/><text x="33.3961%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="32.9053%" y="565" width="0.4013%" height="15" fill="rgb(231,148,5)" fg:x="410" fg:w="5"/><text x="33.1553%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="32.9053%" y="549" width="0.4013%" height="15" fill="rgb(253,77,28)" fg:x="410" fg:w="5"/><text x="33.1553%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="32.9856%" y="533" width="0.3210%" height="15" fill="rgb(253,227,9)" fg:x="411" fg:w="4"/><text x="33.2356%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="32.9856%" y="517" width="0.3210%" height="15" fill="rgb(235,4,18)" fg:x="411" fg:w="4"/><text x="33.2356%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="33.0658%" y="501" width="0.2408%" height="15" fill="rgb(205,206,45)" fg:x="412" fg:w="3"/><text x="33.3158%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="33.0658%" y="485" width="0.2408%" height="15" fill="rgb(252,34,0)" fg:x="412" fg:w="3"/><text x="33.3158%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.2263%" y="469" width="0.0803%" height="15" fill="rgb(213,56,7)" fg:x="414" fg:w="1"/><text x="33.4763%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.2263%" y="453" width="0.0803%" height="15" fill="rgb(227,74,29)" fg:x="414" fg:w="1"/><text x="33.4763%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.2263%" y="437" width="0.0803%" height="15" fill="rgb(221,32,48)" fg:x="414" fg:w="1"/><text x="33.4763%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.2263%" y="421" width="0.0803%" height="15" fill="rgb(230,205,25)" fg:x="414" fg:w="1"/><text x="33.4763%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.3066%" y="533" width="0.0803%" height="15" fill="rgb(215,110,9)" fg:x="415" fg:w="1"/><text x="33.5566%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.3066%" y="517" width="0.0803%" height="15" fill="rgb(245,220,47)" fg:x="415" fg:w="1"/><text x="33.5566%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.3066%" y="501" width="0.0803%" height="15" fill="rgb(224,117,5)" fg:x="415" fg:w="1"/><text x="33.5566%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.3066%" y="485" width="0.0803%" height="15" fill="rgb(242,208,25)" fg:x="415" fg:w="1"/><text x="33.5566%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.3066%" y="469" width="0.0803%" height="15" fill="rgb(226,12,37)" fg:x="415" fg:w="1"/><text x="33.5566%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.3066%" y="453" width="0.0803%" height="15" fill="rgb(224,221,22)" fg:x="415" fg:w="1"/><text x="33.5566%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.3066%" y="437" width="0.0803%" height="15" fill="rgb(239,38,44)" fg:x="415" fg:w="1"/><text x="33.5566%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.3066%" y="421" width="0.0803%" height="15" fill="rgb(218,25,46)" fg:x="415" fg:w="1"/><text x="33.5566%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.3066%" y="405" width="0.0803%" height="15" fill="rgb(206,137,51)" fg:x="415" fg:w="1"/><text x="33.5566%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.3066%" y="389" width="0.0803%" height="15" fill="rgb(233,174,3)" fg:x="415" fg:w="1"/><text x="33.5566%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.3066%" y="373" width="0.0803%" height="15" fill="rgb(207,224,43)" fg:x="415" fg:w="1"/><text x="33.5566%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.3066%" y="357" width="0.0803%" height="15" fill="rgb(230,46,27)" fg:x="415" fg:w="1"/><text x="33.5566%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.3066%" y="341" width="0.0803%" height="15" fill="rgb(251,215,32)" fg:x="415" fg:w="1"/><text x="33.5566%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.3066%" y="325" width="0.0803%" height="15" fill="rgb(244,219,19)" fg:x="415" fg:w="1"/><text x="33.5566%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="33.3868%" y="469" width="0.0803%" height="15" fill="rgb(242,125,36)" fg:x="416" fg:w="1"/><text x="33.6368%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.4671%" y="469" width="0.0803%" height="15" fill="rgb(251,211,12)" fg:x="417" fg:w="1"/><text x="33.7171%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.4671%" y="453" width="0.0803%" height="15" fill="rgb(209,179,33)" fg:x="417" fg:w="1"/><text x="33.7171%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.5474%" y="437" width="0.0803%" height="15" fill="rgb(205,161,48)" fg:x="418" fg:w="1"/><text x="33.7974%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.5474%" y="469" width="0.1605%" height="15" fill="rgb(241,139,8)" fg:x="418" fg:w="2"/><text x="33.7974%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.5474%" y="453" width="0.1605%" height="15" fill="rgb(246,159,53)" fg:x="418" fg:w="2"/><text x="33.7974%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.6276%" y="437" width="0.0803%" height="15" fill="rgb(212,62,27)" fg:x="419" fg:w="1"/><text x="33.8776%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="33.3066%" y="565" width="0.4815%" height="15" fill="rgb(216,168,18)" fg:x="415" fg:w="6"/><text x="33.5566%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="33.3066%" y="549" width="0.4815%" height="15" fill="rgb(228,136,50)" fg:x="415" fg:w="6"/><text x="33.5566%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="33.3868%" y="533" width="0.4013%" height="15" fill="rgb(237,19,45)" fg:x="416" fg:w="5"/><text x="33.6368%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="33.3868%" y="517" width="0.4013%" height="15" fill="rgb(249,150,28)" fg:x="416" fg:w="5"/><text x="33.6368%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="33.3868%" y="501" width="0.4013%" height="15" fill="rgb(236,179,39)" fg:x="416" fg:w="5"/><text x="33.6368%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="33.3868%" y="485" width="0.4013%" height="15" fill="rgb(250,113,27)" fg:x="416" fg:w="5"/><text x="33.6368%" y="495.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="33.7079%" y="469" width="0.0803%" height="15" fill="rgb(223,13,14)" fg:x="420" fg:w="1"/><text x="33.9579%" y="479.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (32 samples, 2.57%)</title><rect x="31.3002%" y="629" width="2.5682%" height="15" fill="rgb(226,68,24)" fg:x="390" fg:w="32"/><text x="31.5502%" y="639.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (12 samples, 0.96%)</title><rect x="32.9053%" y="613" width="0.9631%" height="15" fill="rgb(239,40,50)" fg:x="410" fg:w="12"/><text x="33.1553%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (12 samples, 0.96%)</title><rect x="32.9053%" y="597" width="0.9631%" height="15" fill="rgb(209,187,0)" fg:x="410" fg:w="12"/><text x="33.1553%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (12 samples, 0.96%)</title><rect x="32.9053%" y="581" width="0.9631%" height="15" fill="rgb(240,61,8)" fg:x="410" fg:w="12"/><text x="33.1553%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="33.7881%" y="565" width="0.0803%" height="15" fill="rgb(236,137,5)" fg:x="421" fg:w="1"/><text x="34.0381%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="33.7881%" y="549" width="0.0803%" height="15" fill="rgb(247,214,21)" fg:x="421" fg:w="1"/><text x="34.0381%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="33.7881%" y="533" width="0.0803%" height="15" fill="rgb(244,115,25)" fg:x="421" fg:w="1"/><text x="34.0381%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.7881%" y="517" width="0.0803%" height="15" fill="rgb(230,58,38)" fg:x="421" fg:w="1"/><text x="34.0381%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.7881%" y="501" width="0.0803%" height="15" fill="rgb(206,122,6)" fg:x="421" fg:w="1"/><text x="34.0381%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="33.7881%" y="485" width="0.0803%" height="15" fill="rgb(217,135,53)" fg:x="421" fg:w="1"/><text x="34.0381%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="33.7881%" y="469" width="0.0803%" height="15" fill="rgb(225,120,8)" fg:x="421" fg:w="1"/><text x="34.0381%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="33.7881%" y="453" width="0.0803%" height="15" fill="rgb(226,3,30)" fg:x="421" fg:w="1"/><text x="34.0381%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="33.7881%" y="437" width="0.0803%" height="15" fill="rgb(214,159,38)" fg:x="421" fg:w="1"/><text x="34.0381%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="33.7881%" y="421" width="0.0803%" height="15" fill="rgb(242,182,47)" fg:x="421" fg:w="1"/><text x="34.0381%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="33.7881%" y="405" width="0.0803%" height="15" fill="rgb(245,202,26)" fg:x="421" fg:w="1"/><text x="34.0381%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="33.7881%" y="389" width="0.0803%" height="15" fill="rgb(226,163,3)" fg:x="421" fg:w="1"/><text x="34.0381%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="33.7881%" y="373" width="0.0803%" height="15" fill="rgb(219,4,4)" fg:x="421" fg:w="1"/><text x="34.0381%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.7881%" y="357" width="0.0803%" height="15" fill="rgb(223,85,4)" fg:x="421" fg:w="1"/><text x="34.0381%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="33.7881%" y="341" width="0.0803%" height="15" fill="rgb(242,170,11)" fg:x="421" fg:w="1"/><text x="34.0381%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.8684%" y="629" width="0.0803%" height="15" fill="rgb(221,97,42)" fg:x="422" fg:w="1"/><text x="34.1184%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.1091%" y="453" width="0.1605%" height="15" fill="rgb(231,206,45)" fg:x="425" fg:w="2"/><text x="34.3591%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.1091%" y="437" width="0.1605%" height="15" fill="rgb(216,23,48)" fg:x="425" fg:w="2"/><text x="34.3591%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="34.1091%" y="421" width="0.1605%" height="15" fill="rgb(225,49,9)" fg:x="425" fg:w="2"/><text x="34.3591%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.1894%" y="405" width="0.0803%" height="15" fill="rgb(247,24,47)" fg:x="426" fg:w="1"/><text x="34.4394%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (4 samples, 0.32%)</title><rect x="34.0289%" y="485" width="0.3210%" height="15" fill="rgb(253,145,10)" fg:x="424" fg:w="4"/><text x="34.2789%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="34.0289%" y="469" width="0.3210%" height="15" fill="rgb(206,62,10)" fg:x="424" fg:w="4"/><text x="34.2789%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.2697%" y="453" width="0.0803%" height="15" fill="rgb(224,159,31)" fg:x="427" fg:w="1"/><text x="34.5197%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.2697%" y="437" width="0.0803%" height="15" fill="rgb(234,184,15)" fg:x="427" fg:w="1"/><text x="34.5197%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.2697%" y="421" width="0.0803%" height="15" fill="rgb(237,101,1)" fg:x="427" fg:w="1"/><text x="34.5197%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.2697%" y="405" width="0.0803%" height="15" fill="rgb(211,99,29)" fg:x="427" fg:w="1"/><text x="34.5197%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="34.2697%" y="389" width="0.0803%" height="15" fill="rgb(250,167,3)" fg:x="427" fg:w="1"/><text x="34.5197%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="34.3499%" y="453" width="0.3210%" height="15" fill="rgb(225,58,6)" fg:x="428" fg:w="4"/><text x="34.5999%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="34.3499%" y="437" width="0.3210%" height="15" fill="rgb(251,161,21)" fg:x="428" fg:w="4"/><text x="34.5999%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.4302%" y="421" width="0.2408%" height="15" fill="rgb(253,203,35)" fg:x="429" fg:w="3"/><text x="34.6802%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.5104%" y="405" width="0.1605%" height="15" fill="rgb(214,220,52)" fg:x="430" fg:w="2"/><text x="34.7604%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.5104%" y="389" width="0.1605%" height="15" fill="rgb(235,216,33)" fg:x="430" fg:w="2"/><text x="34.7604%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="34.5104%" y="373" width="0.1605%" height="15" fill="rgb(231,79,26)" fg:x="430" fg:w="2"/><text x="34.7604%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="34.5104%" y="357" width="0.1605%" height="15" fill="rgb(244,218,10)" fg:x="430" fg:w="2"/><text x="34.7604%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="34.5104%" y="341" width="0.1605%" height="15" fill="rgb(238,15,9)" fg:x="430" fg:w="2"/><text x="34.7604%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="34.5104%" y="325" width="0.1605%" height="15" fill="rgb(235,112,15)" fg:x="430" fg:w="2"/><text x="34.7604%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="34.5104%" y="309" width="0.1605%" height="15" fill="rgb(239,126,18)" fg:x="430" fg:w="2"/><text x="34.7604%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="34.5104%" y="293" width="0.1605%" height="15" fill="rgb(253,171,19)" fg:x="430" fg:w="2"/><text x="34.7604%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="34.5104%" y="277" width="0.1605%" height="15" fill="rgb(237,218,25)" fg:x="430" fg:w="2"/><text x="34.7604%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="34.5104%" y="261" width="0.1605%" height="15" fill="rgb(213,88,46)" fg:x="430" fg:w="2"/><text x="34.7604%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="34.5104%" y="245" width="0.1605%" height="15" fill="rgb(222,124,54)" fg:x="430" fg:w="2"/><text x="34.7604%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.5104%" y="229" width="0.1605%" height="15" fill="rgb(209,206,42)" fg:x="430" fg:w="2"/><text x="34.7604%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.6709%" y="421" width="0.0803%" height="15" fill="rgb(219,25,49)" fg:x="432" fg:w="1"/><text x="34.9209%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="34.6709%" y="453" width="0.1605%" height="15" fill="rgb(228,207,53)" fg:x="432" fg:w="2"/><text x="34.9209%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="34.6709%" y="437" width="0.1605%" height="15" fill="rgb(224,3,4)" fg:x="432" fg:w="2"/><text x="34.9209%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.7512%" y="421" width="0.0803%" height="15" fill="rgb(254,206,26)" fg:x="433" fg:w="1"/><text x="35.0012%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.7512%" y="405" width="0.0803%" height="15" fill="rgb(209,4,26)" fg:x="433" fg:w="1"/><text x="35.0012%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.7512%" y="389" width="0.0803%" height="15" fill="rgb(243,193,32)" fg:x="433" fg:w="1"/><text x="35.0012%" y="399.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="34.8315%" y="453" width="0.0803%" height="15" fill="rgb(225,150,36)" fg:x="434" fg:w="1"/><text x="35.0815%" y="463.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (13 samples, 1.04%)</title><rect x="33.9486%" y="501" width="1.0433%" height="15" fill="rgb(225,131,26)" fg:x="423" fg:w="13"/><text x="34.1986%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="34.3499%" y="485" width="0.6421%" height="15" fill="rgb(236,126,12)" fg:x="428" fg:w="8"/><text x="34.5999%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="34.3499%" y="469" width="0.6421%" height="15" fill="rgb(238,167,44)" fg:x="428" fg:w="8"/><text x="34.5999%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.9117%" y="453" width="0.0803%" height="15" fill="rgb(238,153,31)" fg:x="435" fg:w="1"/><text x="35.1617%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9117%" y="437" width="0.0803%" height="15" fill="rgb(254,41,51)" fg:x="435" fg:w="1"/><text x="35.1617%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.9117%" y="421" width="0.0803%" height="15" fill="rgb(224,100,52)" fg:x="435" fg:w="1"/><text x="35.1617%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9117%" y="405" width="0.0803%" height="15" fill="rgb(246,226,38)" fg:x="435" fg:w="1"/><text x="35.1617%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.9117%" y="389" width="0.0803%" height="15" fill="rgb(252,21,43)" fg:x="435" fg:w="1"/><text x="35.1617%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.9117%" y="373" width="0.0803%" height="15" fill="rgb(250,44,8)" fg:x="435" fg:w="1"/><text x="35.1617%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9920%" y="501" width="0.0803%" height="15" fill="rgb(224,200,45)" fg:x="436" fg:w="1"/><text x="35.2420%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9920%" y="485" width="0.0803%" height="15" fill="rgb(208,75,52)" fg:x="436" fg:w="1"/><text x="35.2420%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.9920%" y="469" width="0.0803%" height="15" fill="rgb(213,167,20)" fg:x="436" fg:w="1"/><text x="35.2420%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.9920%" y="453" width="0.0803%" height="15" fill="rgb(236,163,42)" fg:x="436" fg:w="1"/><text x="35.2420%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.9920%" y="437" width="0.0803%" height="15" fill="rgb(210,98,31)" fg:x="436" fg:w="1"/><text x="35.2420%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.9920%" y="421" width="0.0803%" height="15" fill="rgb(246,166,15)" fg:x="436" fg:w="1"/><text x="35.2420%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.9920%" y="405" width="0.0803%" height="15" fill="rgb(214,114,7)" fg:x="436" fg:w="1"/><text x="35.2420%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.9920%" y="389" width="0.0803%" height="15" fill="rgb(217,202,34)" fg:x="436" fg:w="1"/><text x="35.2420%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.9920%" y="373" width="0.0803%" height="15" fill="rgb(227,226,29)" fg:x="436" fg:w="1"/><text x="35.2420%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.9920%" y="357" width="0.0803%" height="15" fill="rgb(254,65,44)" fg:x="436" fg:w="1"/><text x="35.2420%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.9920%" y="341" width="0.0803%" height="15" fill="rgb(213,150,32)" fg:x="436" fg:w="1"/><text x="35.2420%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.9920%" y="325" width="0.0803%" height="15" fill="rgb(208,86,46)" fg:x="436" fg:w="1"/><text x="35.2420%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.3130%" y="357" width="0.1605%" height="15" fill="rgb(222,75,3)" fg:x="440" fg:w="2"/><text x="35.5630%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.3933%" y="341" width="0.0803%" height="15" fill="rgb(225,213,9)" fg:x="441" fg:w="1"/><text x="35.6433%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.3933%" y="325" width="0.0803%" height="15" fill="rgb(209,199,10)" fg:x="441" fg:w="1"/><text x="35.6433%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.3933%" y="309" width="0.0803%" height="15" fill="rgb(213,18,17)" fg:x="441" fg:w="1"/><text x="35.6433%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.3933%" y="293" width="0.0803%" height="15" fill="rgb(243,79,44)" fg:x="441" fg:w="1"/><text x="35.6433%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.3933%" y="277" width="0.0803%" height="15" fill="rgb(226,20,5)" fg:x="441" fg:w="1"/><text x="35.6433%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.3933%" y="261" width="0.0803%" height="15" fill="rgb(217,52,31)" fg:x="441" fg:w="1"/><text x="35.6433%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.3933%" y="245" width="0.0803%" height="15" fill="rgb(229,42,7)" fg:x="441" fg:w="1"/><text x="35.6433%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.3933%" y="229" width="0.0803%" height="15" fill="rgb(206,118,29)" fg:x="441" fg:w="1"/><text x="35.6433%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.3933%" y="213" width="0.0803%" height="15" fill="rgb(248,132,44)" fg:x="441" fg:w="1"/><text x="35.6433%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.3933%" y="197" width="0.0803%" height="15" fill="rgb(231,56,33)" fg:x="441" fg:w="1"/><text x="35.6433%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.3933%" y="181" width="0.0803%" height="15" fill="rgb(208,31,11)" fg:x="441" fg:w="1"/><text x="35.6433%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.3933%" y="165" width="0.0803%" height="15" fill="rgb(216,56,33)" fg:x="441" fg:w="1"/><text x="35.6433%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.3933%" y="149" width="0.0803%" height="15" fill="rgb(213,100,0)" fg:x="441" fg:w="1"/><text x="35.6433%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.3933%" y="133" width="0.0803%" height="15" fill="rgb(236,166,18)" fg:x="441" fg:w="1"/><text x="35.6433%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="35.4735%" y="357" width="0.0803%" height="15" fill="rgb(251,132,12)" fg:x="442" fg:w="1"/><text x="35.7235%" y="367.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="35.5538%" y="357" width="0.0803%" height="15" fill="rgb(216,117,7)" fg:x="443" fg:w="1"/><text x="35.8038%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="35.2327%" y="389" width="0.6421%" height="15" fill="rgb(243,184,8)" fg:x="439" fg:w="8"/><text x="35.4827%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="35.2327%" y="373" width="0.6421%" height="15" fill="rgb(212,91,32)" fg:x="439" fg:w="8"/><text x="35.4827%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="35.6340%" y="357" width="0.2408%" height="15" fill="rgb(224,147,15)" fg:x="444" fg:w="3"/><text x="35.8840%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="35.6340%" y="341" width="0.2408%" height="15" fill="rgb(228,84,10)" fg:x="444" fg:w="3"/><text x="35.8840%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="35.7143%" y="325" width="0.1605%" height="15" fill="rgb(221,161,22)" fg:x="445" fg:w="2"/><text x="35.9643%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.7143%" y="309" width="0.1605%" height="15" fill="rgb(250,132,20)" fg:x="445" fg:w="2"/><text x="35.9643%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.7143%" y="293" width="0.1605%" height="15" fill="rgb(209,161,12)" fg:x="445" fg:w="2"/><text x="35.9643%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.7143%" y="277" width="0.1605%" height="15" fill="rgb(232,142,42)" fg:x="445" fg:w="2"/><text x="35.9643%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.8748%" y="373" width="0.0803%" height="15" fill="rgb(240,228,27)" fg:x="447" fg:w="1"/><text x="36.1248%" y="383.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (12 samples, 0.96%)</title><rect x="35.1525%" y="437" width="0.9631%" height="15" fill="rgb(243,0,31)" fg:x="438" fg:w="12"/><text x="35.4025%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (11 samples, 0.88%)</title><rect x="35.2327%" y="421" width="0.8828%" height="15" fill="rgb(237,100,15)" fg:x="439" fg:w="11"/><text x="35.4827%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (11 samples, 0.88%)</title><rect x="35.2327%" y="405" width="0.8828%" height="15" fill="rgb(230,26,48)" fg:x="439" fg:w="11"/><text x="35.4827%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="35.8748%" y="389" width="0.2408%" height="15" fill="rgb(215,7,13)" fg:x="447" fg:w="3"/><text x="36.1248%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="35.9551%" y="373" width="0.1605%" height="15" fill="rgb(227,172,5)" fg:x="448" fg:w="2"/><text x="36.2051%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.9551%" y="357" width="0.1605%" height="15" fill="rgb(248,206,14)" fg:x="448" fg:w="2"/><text x="36.2051%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.9551%" y="341" width="0.1605%" height="15" fill="rgb(231,62,54)" fg:x="448" fg:w="2"/><text x="36.2051%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="35.9551%" y="325" width="0.1605%" height="15" fill="rgb(222,136,26)" fg:x="448" fg:w="2"/><text x="36.2051%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.9551%" y="309" width="0.1605%" height="15" fill="rgb(211,115,42)" fg:x="448" fg:w="2"/><text x="36.2051%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.9551%" y="293" width="0.1605%" height="15" fill="rgb(234,5,17)" fg:x="448" fg:w="2"/><text x="36.2051%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.9551%" y="277" width="0.1605%" height="15" fill="rgb(233,67,14)" fg:x="448" fg:w="2"/><text x="36.2051%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="36.1156%" y="437" width="0.0803%" height="15" fill="rgb(225,133,51)" fg:x="450" fg:w="1"/><text x="36.3656%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="36.1156%" y="421" width="0.0803%" height="15" fill="rgb(206,107,40)" fg:x="450" fg:w="1"/><text x="36.3656%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.1156%" y="405" width="0.0803%" height="15" fill="rgb(210,56,9)" fg:x="450" fg:w="1"/><text x="36.3656%" y="415.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.2761%" y="405" width="0.1605%" height="15" fill="rgb(222,204,4)" fg:x="452" fg:w="2"/><text x="36.5261%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.2761%" y="389" width="0.1605%" height="15" fill="rgb(210,168,3)" fg:x="452" fg:w="2"/><text x="36.5261%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.3563%" y="373" width="0.0803%" height="15" fill="rgb(246,183,26)" fg:x="453" fg:w="1"/><text x="36.6063%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.3563%" y="357" width="0.0803%" height="15" fill="rgb(228,27,31)" fg:x="453" fg:w="1"/><text x="36.6063%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.3563%" y="341" width="0.0803%" height="15" fill="rgb(206,8,2)" fg:x="453" fg:w="1"/><text x="36.6063%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.3563%" y="325" width="0.0803%" height="15" fill="rgb(251,229,16)" fg:x="453" fg:w="1"/><text x="36.6063%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.3563%" y="309" width="0.0803%" height="15" fill="rgb(208,84,44)" fg:x="453" fg:w="1"/><text x="36.6063%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.3563%" y="293" width="0.0803%" height="15" fill="rgb(221,228,13)" fg:x="453" fg:w="1"/><text x="36.6063%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.3563%" y="277" width="0.0803%" height="15" fill="rgb(248,42,47)" fg:x="453" fg:w="1"/><text x="36.6063%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.3563%" y="261" width="0.0803%" height="15" fill="rgb(222,124,41)" fg:x="453" fg:w="1"/><text x="36.6063%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.3563%" y="245" width="0.0803%" height="15" fill="rgb(244,191,35)" fg:x="453" fg:w="1"/><text x="36.6063%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.5971%" y="277" width="0.1605%" height="15" fill="rgb(222,223,54)" fg:x="456" fg:w="2"/><text x="36.8471%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.5971%" y="261" width="0.1605%" height="15" fill="rgb(248,178,42)" fg:x="456" fg:w="2"/><text x="36.8471%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.6774%" y="245" width="0.0803%" height="15" fill="rgb(238,21,24)" fg:x="457" fg:w="1"/><text x="36.9274%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6774%" y="229" width="0.0803%" height="15" fill="rgb(227,134,7)" fg:x="457" fg:w="1"/><text x="36.9274%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="36.7576%" y="245" width="0.0803%" height="15" fill="rgb(205,191,1)" fg:x="458" fg:w="1"/><text x="37.0076%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.7576%" y="229" width="0.0803%" height="15" fill="rgb(222,166,30)" fg:x="458" fg:w="1"/><text x="37.0076%" y="239.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (6 samples, 0.48%)</title><rect x="36.4366%" y="405" width="0.4815%" height="15" fill="rgb(229,94,26)" fg:x="454" fg:w="6"/><text x="36.6866%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.40%)</title><rect x="36.5169%" y="389" width="0.4013%" height="15" fill="rgb(246,97,2)" fg:x="455" fg:w="5"/><text x="36.7669%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="36.5169%" y="373" width="0.4013%" height="15" fill="rgb(252,112,53)" fg:x="455" fg:w="5"/><text x="36.7669%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.40%)</title><rect x="36.5169%" y="357" width="0.4013%" height="15" fill="rgb(225,52,38)" fg:x="455" fg:w="5"/><text x="36.7669%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (5 samples, 0.40%)</title><rect x="36.5169%" y="341" width="0.4013%" height="15" fill="rgb(215,203,24)" fg:x="455" fg:w="5"/><text x="36.7669%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="36.5169%" y="325" width="0.4013%" height="15" fill="rgb(210,122,52)" fg:x="455" fg:w="5"/><text x="36.7669%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="36.5169%" y="309" width="0.4013%" height="15" fill="rgb(209,161,44)" fg:x="455" fg:w="5"/><text x="36.7669%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="36.5169%" y="293" width="0.4013%" height="15" fill="rgb(221,97,16)" fg:x="455" fg:w="5"/><text x="36.7669%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.7576%" y="277" width="0.1605%" height="15" fill="rgb(209,87,13)" fg:x="458" fg:w="2"/><text x="37.0076%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.7576%" y="261" width="0.1605%" height="15" fill="rgb(242,1,21)" fg:x="458" fg:w="2"/><text x="37.0076%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="36.8379%" y="245" width="0.0803%" height="15" fill="rgb(251,170,41)" fg:x="459" fg:w="1"/><text x="37.0879%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8379%" y="229" width="0.0803%" height="15" fill="rgb(227,201,10)" fg:x="459" fg:w="1"/><text x="37.0879%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8379%" y="213" width="0.0803%" height="15" fill="rgb(231,100,29)" fg:x="459" fg:w="1"/><text x="37.0879%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8379%" y="197" width="0.0803%" height="15" fill="rgb(226,31,35)" fg:x="459" fg:w="1"/><text x="37.0879%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.9181%" y="405" width="0.0803%" height="15" fill="rgb(254,99,26)" fg:x="460" fg:w="1"/><text x="37.1681%" y="415.50"></text></g><g><title>plugins_core::tools::contained_by (25 samples, 2.01%)</title><rect x="35.1525%" y="453" width="2.0064%" height="15" fill="rgb(217,228,17)" fg:x="438" fg:w="25"/><text x="35.4025%" y="463.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (12 samples, 0.96%)</title><rect x="36.1958%" y="437" width="0.9631%" height="15" fill="rgb(226,132,8)" fg:x="451" fg:w="12"/><text x="36.4458%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="36.2761%" y="421" width="0.8828%" height="15" fill="rgb(220,202,47)" fg:x="452" fg:w="11"/><text x="36.5261%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.9984%" y="405" width="0.1605%" height="15" fill="rgb(245,194,10)" fg:x="461" fg:w="2"/><text x="37.2484%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.9984%" y="389" width="0.1605%" height="15" fill="rgb(225,44,52)" fg:x="461" fg:w="2"/><text x="37.2484%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="37.0787%" y="373" width="0.0803%" height="15" fill="rgb(235,10,4)" fg:x="462" fg:w="1"/><text x="37.3287%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="37.0787%" y="357" width="0.0803%" height="15" fill="rgb(244,32,23)" fg:x="462" fg:w="1"/><text x="37.3287%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="37.0787%" y="341" width="0.0803%" height="15" fill="rgb(210,115,0)" fg:x="462" fg:w="1"/><text x="37.3287%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.0787%" y="325" width="0.0803%" height="15" fill="rgb(246,72,16)" fg:x="462" fg:w="1"/><text x="37.3287%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.0787%" y="309" width="0.0803%" height="15" fill="rgb(223,32,10)" fg:x="462" fg:w="1"/><text x="37.3287%" y="319.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="37.1589%" y="437" width="0.1605%" height="15" fill="rgb(223,97,52)" fg:x="463" fg:w="2"/><text x="37.4089%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="37.1589%" y="421" width="0.1605%" height="15" fill="rgb(238,69,38)" fg:x="463" fg:w="2"/><text x="37.4089%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="37.1589%" y="405" width="0.1605%" height="15" fill="rgb(226,61,1)" fg:x="463" fg:w="2"/><text x="37.4089%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="37.2392%" y="389" width="0.0803%" height="15" fill="rgb(244,56,14)" fg:x="464" fg:w="1"/><text x="37.4892%" y="399.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (1 samples, 0.08%)</title><rect x="37.2392%" y="373" width="0.0803%" height="15" fill="rgb(242,164,18)" fg:x="464" fg:w="1"/><text x="37.4892%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="37.2392%" y="357" width="0.0803%" height="15" fill="rgb(217,130,28)" fg:x="464" fg:w="1"/><text x="37.4892%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="37.2392%" y="341" width="0.0803%" height="15" fill="rgb(218,118,52)" fg:x="464" fg:w="1"/><text x="37.4892%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.2392%" y="325" width="0.0803%" height="15" fill="rgb(251,112,38)" fg:x="464" fg:w="1"/><text x="37.4892%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.2392%" y="309" width="0.0803%" height="15" fill="rgb(239,14,50)" fg:x="464" fg:w="1"/><text x="37.4892%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.2392%" y="293" width="0.0803%" height="15" fill="rgb(228,141,54)" fg:x="464" fg:w="1"/><text x="37.4892%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.2392%" y="277" width="0.0803%" height="15" fill="rgb(236,128,15)" fg:x="464" fg:w="1"/><text x="37.4892%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.2392%" y="261" width="0.0803%" height="15" fill="rgb(206,140,54)" fg:x="464" fg:w="1"/><text x="37.4892%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="37.2392%" y="245" width="0.0803%" height="15" fill="rgb(240,0,44)" fg:x="464" fg:w="1"/><text x="37.4892%" y="255.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="37.3194%" y="341" width="0.0803%" height="15" fill="rgb(243,207,23)" fg:x="465" fg:w="1"/><text x="37.5694%" y="351.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="37.3194%" y="325" width="0.0803%" height="15" fill="rgb(247,202,1)" fg:x="465" fg:w="1"/><text x="37.5694%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.3997%" y="277" width="0.0803%" height="15" fill="rgb(239,83,27)" fg:x="466" fg:w="1"/><text x="37.6497%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.3997%" y="261" width="0.0803%" height="15" fill="rgb(219,205,7)" fg:x="466" fg:w="1"/><text x="37.6497%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="37.3997%" y="245" width="0.0803%" height="15" fill="rgb(249,184,22)" fg:x="466" fg:w="1"/><text x="37.6497%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.3997%" y="229" width="0.0803%" height="15" fill="rgb(230,150,14)" fg:x="466" fg:w="1"/><text x="37.6497%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="37.4799%" y="277" width="0.1605%" height="15" fill="rgb(240,118,34)" fg:x="467" fg:w="2"/><text x="37.7299%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.5602%" y="261" width="0.0803%" height="15" fill="rgb(227,162,21)" fg:x="468" fg:w="1"/><text x="37.8102%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="37.3997%" y="309" width="0.3210%" height="15" fill="rgb(219,14,9)" fg:x="466" fg:w="4"/><text x="37.6497%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="37.3997%" y="293" width="0.3210%" height="15" fill="rgb(223,226,16)" fg:x="466" fg:w="4"/><text x="37.6497%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.6404%" y="277" width="0.0803%" height="15" fill="rgb(246,161,37)" fg:x="469" fg:w="1"/><text x="37.8904%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.6404%" y="261" width="0.0803%" height="15" fill="rgb(205,221,43)" fg:x="469" fg:w="1"/><text x="37.8904%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.6404%" y="245" width="0.0803%" height="15" fill="rgb(228,216,26)" fg:x="469" fg:w="1"/><text x="37.8904%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.6404%" y="229" width="0.0803%" height="15" fill="rgb(251,33,17)" fg:x="469" fg:w="1"/><text x="37.8904%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.6404%" y="213" width="0.0803%" height="15" fill="rgb(246,126,36)" fg:x="469" fg:w="1"/><text x="37.8904%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.6404%" y="197" width="0.0803%" height="15" fill="rgb(217,160,24)" fg:x="469" fg:w="1"/><text x="37.8904%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="37.6404%" y="181" width="0.0803%" height="15" fill="rgb(211,64,12)" fg:x="469" fg:w="1"/><text x="37.8904%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.48%)</title><rect x="37.3194%" y="373" width="0.4815%" height="15" fill="rgb(238,47,36)" fg:x="465" fg:w="6"/><text x="37.5694%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.48%)</title><rect x="37.3194%" y="357" width="0.4815%" height="15" fill="rgb(210,157,42)" fg:x="465" fg:w="6"/><text x="37.5694%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (5 samples, 0.40%)</title><rect x="37.3997%" y="341" width="0.4013%" height="15" fill="rgb(242,84,39)" fg:x="466" fg:w="5"/><text x="37.6497%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="37.3997%" y="325" width="0.4013%" height="15" fill="rgb(207,65,41)" fg:x="466" fg:w="5"/><text x="37.6497%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="37.7207%" y="309" width="0.0803%" height="15" fill="rgb(246,97,27)" fg:x="470" fg:w="1"/><text x="37.9707%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="37.7207%" y="293" width="0.0803%" height="15" fill="rgb(229,9,43)" fg:x="470" fg:w="1"/><text x="37.9707%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="37.7207%" y="277" width="0.0803%" height="15" fill="rgb(211,82,44)" fg:x="470" fg:w="1"/><text x="37.9707%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.7207%" y="261" width="0.0803%" height="15" fill="rgb(253,45,54)" fg:x="470" fg:w="1"/><text x="37.9707%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="37.7207%" y="245" width="0.0803%" height="15" fill="rgb(235,94,32)" fg:x="470" fg:w="1"/><text x="37.9707%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.7207%" y="229" width="0.0803%" height="15" fill="rgb(252,143,1)" fg:x="470" fg:w="1"/><text x="37.9707%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.7207%" y="213" width="0.0803%" height="15" fill="rgb(239,164,4)" fg:x="470" fg:w="1"/><text x="37.9707%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.7207%" y="197" width="0.0803%" height="15" fill="rgb(222,25,39)" fg:x="470" fg:w="1"/><text x="37.9707%" y="207.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (7 samples, 0.56%)</title><rect x="37.3194%" y="405" width="0.5618%" height="15" fill="rgb(234,175,9)" fg:x="465" fg:w="7"/><text x="37.5694%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="37.3194%" y="389" width="0.5618%" height="15" fill="rgb(247,200,41)" fg:x="465" fg:w="7"/><text x="37.5694%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="37.8010%" y="373" width="0.0803%" height="15" fill="rgb(245,101,27)" fg:x="471" fg:w="1"/><text x="38.0510%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="37.8010%" y="357" width="0.0803%" height="15" fill="rgb(221,29,7)" fg:x="471" fg:w="1"/><text x="38.0510%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="37.8812%" y="373" width="0.0803%" height="15" fill="rgb(240,184,10)" fg:x="472" fg:w="1"/><text x="38.1312%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.8812%" y="357" width="0.0803%" height="15" fill="rgb(251,85,15)" fg:x="472" fg:w="1"/><text x="38.1312%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="37.8812%" y="341" width="0.0803%" height="15" fill="rgb(252,84,16)" fg:x="472" fg:w="1"/><text x="38.1312%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.9615%" y="325" width="0.0803%" height="15" fill="rgb(233,136,6)" fg:x="473" fg:w="1"/><text x="38.2115%" y="335.50"></text></g><g><title>plugins_core::tools::occupied_by (12 samples, 0.96%)</title><rect x="37.1589%" y="453" width="0.9631%" height="15" fill="rgb(226,169,30)" fg:x="463" fg:w="12"/><text x="37.4089%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.80%)</title><rect x="37.3194%" y="437" width="0.8026%" height="15" fill="rgb(241,83,18)" fg:x="465" fg:w="10"/><text x="37.5694%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="37.3194%" y="421" width="0.8026%" height="15" fill="rgb(239,151,5)" fg:x="465" fg:w="10"/><text x="37.5694%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="37.8812%" y="405" width="0.2408%" height="15" fill="rgb(238,56,13)" fg:x="472" fg:w="3"/><text x="38.1312%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="37.8812%" y="389" width="0.2408%" height="15" fill="rgb(224,100,0)" fg:x="472" fg:w="3"/><text x="38.1312%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="37.9615%" y="373" width="0.1605%" height="15" fill="rgb(231,168,26)" fg:x="473" fg:w="2"/><text x="38.2115%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="37.9615%" y="357" width="0.1605%" height="15" fill="rgb(238,110,3)" fg:x="473" fg:w="2"/><text x="38.2115%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="37.9615%" y="341" width="0.1605%" height="15" fill="rgb(216,190,1)" fg:x="473" fg:w="2"/><text x="38.2115%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.0417%" y="325" width="0.0803%" height="15" fill="rgb(208,130,52)" fg:x="474" fg:w="1"/><text x="38.2917%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.0417%" y="309" width="0.0803%" height="15" fill="rgb(233,74,12)" fg:x="474" fg:w="1"/><text x="38.2917%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.1220%" y="405" width="0.0803%" height="15" fill="rgb(248,12,15)" fg:x="475" fg:w="1"/><text x="38.3720%" y="415.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (39 samples, 3.13%)</title><rect x="35.1525%" y="469" width="3.1300%" height="15" fill="rgb(228,18,29)" fg:x="438" fg:w="39"/><text x="35.4025%" y="479.50">plu..</text></g><g><title>plugins_core::tools::worn_by (2 samples, 0.16%)</title><rect x="38.1220%" y="453" width="0.1605%" height="15" fill="rgb(206,153,11)" fg:x="475" fg:w="2"/><text x="38.3720%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="38.1220%" y="437" width="0.1605%" height="15" fill="rgb(216,50,30)" fg:x="475" fg:w="2"/><text x="38.3720%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="38.1220%" y="421" width="0.1605%" height="15" fill="rgb(217,20,39)" fg:x="475" fg:w="2"/><text x="38.3720%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.2022%" y="405" width="0.0803%" height="15" fill="rgb(232,130,46)" fg:x="476" fg:w="1"/><text x="38.4522%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="38.2022%" y="389" width="0.0803%" height="15" fill="rgb(233,141,43)" fg:x="476" fg:w="1"/><text x="38.4522%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.2825%" y="453" width="0.1605%" height="15" fill="rgb(240,64,34)" fg:x="477" fg:w="2"/><text x="38.5325%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3628%" y="437" width="0.0803%" height="15" fill="rgb(230,28,31)" fg:x="478" fg:w="1"/><text x="38.6128%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3628%" y="421" width="0.0803%" height="15" fill="rgb(223,56,30)" fg:x="478" fg:w="1"/><text x="38.6128%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.3628%" y="405" width="0.0803%" height="15" fill="rgb(248,134,16)" fg:x="478" fg:w="1"/><text x="38.6128%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.3628%" y="389" width="0.0803%" height="15" fill="rgb(206,202,4)" fg:x="478" fg:w="1"/><text x="38.6128%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.3628%" y="373" width="0.0803%" height="15" fill="rgb(219,116,48)" fg:x="478" fg:w="1"/><text x="38.6128%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="38.3628%" y="357" width="0.0803%" height="15" fill="rgb(224,122,46)" fg:x="478" fg:w="1"/><text x="38.6128%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="38.3628%" y="341" width="0.0803%" height="15" fill="rgb(219,114,47)" fg:x="478" fg:w="1"/><text x="38.6128%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="38.4430%" y="389" width="0.0803%" height="15" fill="rgb(244,60,44)" fg:x="479" fg:w="1"/><text x="38.6930%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.4430%" y="373" width="0.0803%" height="15" fill="rgb(243,226,25)" fg:x="479" fg:w="1"/><text x="38.6930%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (44 samples, 3.53%)</title><rect x="35.0722%" y="501" width="3.5313%" height="15" fill="rgb(243,101,52)" fg:x="437" fg:w="44"/><text x="35.3222%" y="511.50">&lt;en..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_item (44 samples, 3.53%)</title><rect x="35.0722%" y="485" width="3.5313%" height="15" fill="rgb(207,69,25)" fg:x="437" fg:w="44"/><text x="35.3222%" y="495.50">&lt;pl..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="38.2825%" y="469" width="0.3210%" height="15" fill="rgb(222,204,53)" fg:x="477" fg:w="4"/><text x="38.5325%" y="479.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="38.4430%" y="453" width="0.1605%" height="15" fill="rgb(234,84,49)" fg:x="479" fg:w="2"/><text x="38.6930%" y="463.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="38.4430%" y="437" width="0.1605%" height="15" fill="rgb(233,77,41)" fg:x="479" fg:w="2"/><text x="38.6930%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::name (2 samples, 0.16%)</title><rect x="38.4430%" y="421" width="0.1605%" height="15" fill="rgb(221,200,42)" fg:x="479" fg:w="2"/><text x="38.6930%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="38.4430%" y="405" width="0.1605%" height="15" fill="rgb(221,29,35)" fg:x="479" fg:w="2"/><text x="38.6930%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="38.5233%" y="389" width="0.0803%" height="15" fill="rgb(221,71,22)" fg:x="480" fg:w="1"/><text x="38.7733%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.5233%" y="373" width="0.0803%" height="15" fill="rgb(216,162,23)" fg:x="480" fg:w="1"/><text x="38.7733%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.5233%" y="357" width="0.0803%" height="15" fill="rgb(248,32,48)" fg:x="480" fg:w="1"/><text x="38.7733%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.5233%" y="341" width="0.0803%" height="15" fill="rgb(241,156,30)" fg:x="480" fg:w="1"/><text x="38.7733%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.5233%" y="325" width="0.0803%" height="15" fill="rgb(237,196,46)" fg:x="480" fg:w="1"/><text x="38.7733%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.5233%" y="309" width="0.0803%" height="15" fill="rgb(216,2,6)" fg:x="480" fg:w="1"/><text x="38.7733%" y="319.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="38.6035%" y="501" width="0.0803%" height="15" fill="rgb(214,47,16)" fg:x="481" fg:w="1"/><text x="38.8535%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.6035%" y="485" width="0.0803%" height="15" fill="rgb(240,123,13)" fg:x="481" fg:w="1"/><text x="38.8535%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.6035%" y="469" width="0.0803%" height="15" fill="rgb(206,47,48)" fg:x="481" fg:w="1"/><text x="38.8535%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.6035%" y="453" width="0.0803%" height="15" fill="rgb(252,88,27)" fg:x="481" fg:w="1"/><text x="38.8535%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.6035%" y="437" width="0.0803%" height="15" fill="rgb(218,105,30)" fg:x="481" fg:w="1"/><text x="38.8535%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.6035%" y="421" width="0.0803%" height="15" fill="rgb(227,52,46)" fg:x="481" fg:w="1"/><text x="38.8535%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.6035%" y="405" width="0.0803%" height="15" fill="rgb(222,190,21)" fg:x="481" fg:w="1"/><text x="38.8535%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.6035%" y="389" width="0.0803%" height="15" fill="rgb(205,86,20)" fg:x="481" fg:w="1"/><text x="38.8535%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.6035%" y="373" width="0.0803%" height="15" fill="rgb(233,45,1)" fg:x="481" fg:w="1"/><text x="38.8535%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.6035%" y="357" width="0.0803%" height="15" fill="rgb(208,39,6)" fg:x="481" fg:w="1"/><text x="38.8535%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.6035%" y="341" width="0.0803%" height="15" fill="rgb(211,178,22)" fg:x="481" fg:w="1"/><text x="38.8535%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.6035%" y="325" width="0.0803%" height="15" fill="rgb(227,112,23)" fg:x="481" fg:w="1"/><text x="38.8535%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.7640%" y="405" width="0.1605%" height="15" fill="rgb(214,41,4)" fg:x="483" fg:w="2"/><text x="39.0140%" y="415.50"></text></g><g><title>&lt;replies::CarryingEvent as replies::ToTaggedJson&gt;::to_tagged_json (4 samples, 0.32%)</title><rect x="38.6838%" y="485" width="0.3210%" height="15" fill="rgb(219,144,46)" fg:x="482" fg:w="4"/><text x="38.9338%" y="495.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::CarryingEvent&gt;::serialize (4 samples, 0.32%)</title><rect x="38.6838%" y="469" width="0.3210%" height="15" fill="rgb(253,176,50)" fg:x="482" fg:w="4"/><text x="38.9338%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeStructVariant as serde::ser::SerializeStructVariant&gt;::serialize_field (4 samples, 0.32%)</title><rect x="38.6838%" y="453" width="0.3210%" height="15" fill="rgb(206,123,1)" fg:x="482" fg:w="4"/><text x="38.9338%" y="463.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (3 samples, 0.24%)</title><rect x="38.7640%" y="437" width="0.2408%" height="15" fill="rgb(250,111,32)" fg:x="483" fg:w="3"/><text x="39.0140%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="38.7640%" y="421" width="0.2408%" height="15" fill="rgb(229,17,49)" fg:x="483" fg:w="3"/><text x="39.0140%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.9246%" y="405" width="0.0803%" height="15" fill="rgb(250,123,19)" fg:x="485" fg:w="1"/><text x="39.1746%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.9246%" y="389" width="0.0803%" height="15" fill="rgb(220,124,20)" fg:x="485" fg:w="1"/><text x="39.1746%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="38.9246%" y="373" width="0.0803%" height="15" fill="rgb(242,85,25)" fg:x="485" fg:w="1"/><text x="39.1746%" y="383.50"></text></g><g><title>plugins_core::library::actions::reply_ok (5 samples, 0.40%)</title><rect x="38.6838%" y="501" width="0.4013%" height="15" fill="rgb(245,217,7)" fg:x="482" fg:w="5"/><text x="38.9338%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="39.0048%" y="485" width="0.0803%" height="15" fill="rgb(242,50,25)" fg:x="486" fg:w="1"/><text x="39.2548%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.1653%" y="485" width="0.0803%" height="15" fill="rgb(251,210,24)" fg:x="488" fg:w="1"/><text x="39.4153%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="39.2456%" y="485" width="0.0803%" height="15" fill="rgb(238,24,8)" fg:x="489" fg:w="1"/><text x="39.4956%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.3258%" y="453" width="0.0803%" height="15" fill="rgb(211,96,19)" fg:x="490" fg:w="1"/><text x="39.5758%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.3258%" y="437" width="0.0803%" height="15" fill="rgb(222,186,12)" fg:x="490" fg:w="1"/><text x="39.5758%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.3258%" y="421" width="0.0803%" height="15" fill="rgb(212,70,49)" fg:x="490" fg:w="1"/><text x="39.5758%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.3258%" y="405" width="0.0803%" height="15" fill="rgb(238,69,49)" fg:x="490" fg:w="1"/><text x="39.5758%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.3258%" y="389" width="0.0803%" height="15" fill="rgb(225,13,3)" fg:x="490" fg:w="1"/><text x="39.5758%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="39.3258%" y="373" width="0.0803%" height="15" fill="rgb(229,188,14)" fg:x="490" fg:w="1"/><text x="39.5758%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="39.3258%" y="357" width="0.0803%" height="15" fill="rgb(218,58,16)" fg:x="490" fg:w="1"/><text x="39.5758%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.4061%" y="357" width="0.0803%" height="15" fill="rgb(206,213,49)" fg:x="491" fg:w="1"/><text x="39.6561%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="39.4061%" y="453" width="0.1605%" height="15" fill="rgb(225,152,48)" fg:x="491" fg:w="2"/><text x="39.6561%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="39.4061%" y="437" width="0.1605%" height="15" fill="rgb(216,103,42)" fg:x="491" fg:w="2"/><text x="39.6561%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.4061%" y="421" width="0.1605%" height="15" fill="rgb(212,214,39)" fg:x="491" fg:w="2"/><text x="39.6561%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.4061%" y="405" width="0.1605%" height="15" fill="rgb(249,52,41)" fg:x="491" fg:w="2"/><text x="39.6561%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="39.4061%" y="389" width="0.1605%" height="15" fill="rgb(212,173,53)" fg:x="491" fg:w="2"/><text x="39.6561%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.4061%" y="373" width="0.1605%" height="15" fill="rgb(232,222,21)" fg:x="491" fg:w="2"/><text x="39.6561%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.4864%" y="357" width="0.0803%" height="15" fill="rgb(206,228,31)" fg:x="492" fg:w="1"/><text x="39.7364%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.4864%" y="341" width="0.0803%" height="15" fill="rgb(231,121,16)" fg:x="492" fg:w="1"/><text x="39.7364%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.6469%" y="357" width="0.0803%" height="15" fill="rgb(241,3,23)" fg:x="494" fg:w="1"/><text x="39.8969%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.6469%" y="341" width="0.0803%" height="15" fill="rgb(220,68,37)" fg:x="494" fg:w="1"/><text x="39.8969%" y="351.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="39.3258%" y="485" width="0.4815%" height="15" fill="rgb(212,23,49)" fg:x="490" fg:w="6"/><text x="39.5758%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="39.3258%" y="469" width="0.4815%" height="15" fill="rgb(231,38,8)" fg:x="490" fg:w="6"/><text x="39.5758%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="39.5666%" y="453" width="0.2408%" height="15" fill="rgb(222,137,29)" fg:x="493" fg:w="3"/><text x="39.8166%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="39.5666%" y="437" width="0.2408%" height="15" fill="rgb(239,8,6)" fg:x="493" fg:w="3"/><text x="39.8166%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.6469%" y="421" width="0.1605%" height="15" fill="rgb(224,142,47)" fg:x="494" fg:w="2"/><text x="39.8969%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.6469%" y="405" width="0.1605%" height="15" fill="rgb(226,67,29)" fg:x="494" fg:w="2"/><text x="39.8969%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="39.6469%" y="389" width="0.1605%" height="15" fill="rgb(212,144,29)" fg:x="494" fg:w="2"/><text x="39.8969%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.6469%" y="373" width="0.1605%" height="15" fill="rgb(252,2,51)" fg:x="494" fg:w="2"/><text x="39.8969%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.7271%" y="357" width="0.0803%" height="15" fill="rgb(246,103,52)" fg:x="495" fg:w="1"/><text x="39.9771%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.7271%" y="341" width="0.0803%" height="15" fill="rgb(229,229,35)" fg:x="495" fg:w="1"/><text x="39.9771%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.7271%" y="325" width="0.0803%" height="15" fill="rgb(209,83,15)" fg:x="495" fg:w="1"/><text x="39.9771%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.8074%" y="453" width="0.1605%" height="15" fill="rgb(218,54,16)" fg:x="496" fg:w="2"/><text x="40.0574%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.8876%" y="437" width="0.0803%" height="15" fill="rgb(205,2,26)" fg:x="497" fg:w="1"/><text x="40.1376%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.8876%" y="421" width="0.0803%" height="15" fill="rgb(248,180,0)" fg:x="497" fg:w="1"/><text x="40.1376%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.8876%" y="405" width="0.0803%" height="15" fill="rgb(231,136,16)" fg:x="497" fg:w="1"/><text x="40.1376%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="39.9679%" y="357" width="0.0803%" height="15" fill="rgb(215,90,4)" fg:x="498" fg:w="1"/><text x="40.2179%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="39.9679%" y="341" width="0.0803%" height="15" fill="rgb(251,131,3)" fg:x="498" fg:w="1"/><text x="40.2179%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.9679%" y="325" width="0.0803%" height="15" fill="rgb(244,47,21)" fg:x="498" fg:w="1"/><text x="40.2179%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.9679%" y="309" width="0.0803%" height="15" fill="rgb(231,115,9)" fg:x="498" fg:w="1"/><text x="40.2179%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.0482%" y="341" width="0.0803%" height="15" fill="rgb(241,119,20)" fg:x="499" fg:w="1"/><text x="40.2982%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1284%" y="325" width="0.0803%" height="15" fill="rgb(224,99,0)" fg:x="500" fg:w="1"/><text x="40.3784%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1284%" y="309" width="0.0803%" height="15" fill="rgb(219,213,18)" fg:x="500" fg:w="1"/><text x="40.3784%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.1284%" y="293" width="0.0803%" height="15" fill="rgb(209,71,34)" fg:x="500" fg:w="1"/><text x="40.3784%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (6 samples, 0.48%)</title><rect x="39.9679%" y="453" width="0.4815%" height="15" fill="rgb(245,203,20)" fg:x="498" fg:w="6"/><text x="40.2179%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="39.9679%" y="437" width="0.4815%" height="15" fill="rgb(221,44,20)" fg:x="498" fg:w="6"/><text x="40.2179%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="39.9679%" y="421" width="0.4815%" height="15" fill="rgb(229,97,0)" fg:x="498" fg:w="6"/><text x="40.2179%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.48%)</title><rect x="39.9679%" y="405" width="0.4815%" height="15" fill="rgb(206,56,49)" fg:x="498" fg:w="6"/><text x="40.2179%" y="415.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (6 samples, 0.48%)</title><rect x="39.9679%" y="389" width="0.4815%" height="15" fill="rgb(208,216,41)" fg:x="498" fg:w="6"/><text x="40.2179%" y="399.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="39.9679%" y="373" width="0.4815%" height="15" fill="rgb(231,31,6)" fg:x="498" fg:w="6"/><text x="40.2179%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="40.0482%" y="357" width="0.4013%" height="15" fill="rgb(239,88,23)" fg:x="499" fg:w="5"/><text x="40.2982%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="40.1284%" y="341" width="0.3210%" height="15" fill="rgb(227,111,45)" fg:x="500" fg:w="4"/><text x="40.3784%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.2087%" y="325" width="0.2408%" height="15" fill="rgb(207,167,18)" fg:x="501" fg:w="3"/><text x="40.4587%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.2087%" y="309" width="0.2408%" height="15" fill="rgb(253,127,17)" fg:x="501" fg:w="3"/><text x="40.4587%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="40.2889%" y="293" width="0.1605%" height="15" fill="rgb(211,229,9)" fg:x="502" fg:w="2"/><text x="40.5389%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.2889%" y="277" width="0.1605%" height="15" fill="rgb(249,25,14)" fg:x="502" fg:w="2"/><text x="40.5389%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.3692%" y="261" width="0.0803%" height="15" fill="rgb(237,177,4)" fg:x="503" fg:w="1"/><text x="40.6192%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.3692%" y="245" width="0.0803%" height="15" fill="rgb(248,163,50)" fg:x="503" fg:w="1"/><text x="40.6192%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.3692%" y="229" width="0.0803%" height="15" fill="rgb(246,67,42)" fg:x="503" fg:w="1"/><text x="40.6192%" y="239.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="40.4494%" y="389" width="0.1605%" height="15" fill="rgb(228,136,45)" fg:x="504" fg:w="2"/><text x="40.6994%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.4494%" y="373" width="0.1605%" height="15" fill="rgb(218,93,4)" fg:x="504" fg:w="2"/><text x="40.6994%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.4494%" y="357" width="0.1605%" height="15" fill="rgb(209,82,29)" fg:x="504" fg:w="2"/><text x="40.6994%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.5297%" y="341" width="0.0803%" height="15" fill="rgb(213,219,38)" fg:x="505" fg:w="1"/><text x="40.7797%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (11 samples, 0.88%)</title><rect x="39.8074%" y="485" width="0.8828%" height="15" fill="rgb(233,212,17)" fg:x="496" fg:w="11"/><text x="40.0574%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="39.8074%" y="469" width="0.8828%" height="15" fill="rgb(225,65,3)" fg:x="496" fg:w="11"/><text x="40.0574%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.4494%" y="453" width="0.2408%" height="15" fill="rgb(226,25,1)" fg:x="504" fg:w="3"/><text x="40.6994%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.4494%" y="437" width="0.2408%" height="15" fill="rgb(229,83,27)" fg:x="504" fg:w="3"/><text x="40.6994%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="40.4494%" y="421" width="0.2408%" height="15" fill="rgb(245,80,47)" fg:x="504" fg:w="3"/><text x="40.6994%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="40.4494%" y="405" width="0.2408%" height="15" fill="rgb(213,79,27)" fg:x="504" fg:w="3"/><text x="40.6994%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.6100%" y="389" width="0.0803%" height="15" fill="rgb(232,38,28)" fg:x="506" fg:w="1"/><text x="40.8600%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.6902%" y="453" width="0.0803%" height="15" fill="rgb(253,63,39)" fg:x="507" fg:w="1"/><text x="40.9402%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6902%" y="437" width="0.0803%" height="15" fill="rgb(222,204,17)" fg:x="507" fg:w="1"/><text x="40.9402%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.6902%" y="421" width="0.0803%" height="15" fill="rgb(254,135,49)" fg:x="507" fg:w="1"/><text x="40.9402%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6902%" y="405" width="0.0803%" height="15" fill="rgb(226,203,24)" fg:x="507" fg:w="1"/><text x="40.9402%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6902%" y="389" width="0.0803%" height="15" fill="rgb(225,2,17)" fg:x="507" fg:w="1"/><text x="40.9402%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.6902%" y="373" width="0.0803%" height="15" fill="rgb(234,135,43)" fg:x="507" fg:w="1"/><text x="40.9402%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.6902%" y="357" width="0.0803%" height="15" fill="rgb(224,14,46)" fg:x="507" fg:w="1"/><text x="40.9402%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.6902%" y="341" width="0.0803%" height="15" fill="rgb(206,42,0)" fg:x="507" fg:w="1"/><text x="40.9402%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.6902%" y="325" width="0.0803%" height="15" fill="rgb(244,38,23)" fg:x="507" fg:w="1"/><text x="40.9402%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.6902%" y="309" width="0.0803%" height="15" fill="rgb(230,25,21)" fg:x="507" fg:w="1"/><text x="40.9402%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.6902%" y="293" width="0.0803%" height="15" fill="rgb(252,217,28)" fg:x="507" fg:w="1"/><text x="40.9402%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.6902%" y="277" width="0.0803%" height="15" fill="rgb(251,4,49)" fg:x="507" fg:w="1"/><text x="40.9402%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.6902%" y="261" width="0.0803%" height="15" fill="rgb(217,126,31)" fg:x="507" fg:w="1"/><text x="40.9402%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.6902%" y="245" width="0.0803%" height="15" fill="rgb(242,181,33)" fg:x="507" fg:w="1"/><text x="40.9402%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.6902%" y="229" width="0.0803%" height="15" fill="rgb(241,108,6)" fg:x="507" fg:w="1"/><text x="40.9402%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="40.7705%" y="453" width="0.1605%" height="15" fill="rgb(238,87,39)" fg:x="508" fg:w="2"/><text x="41.0205%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="40.8507%" y="437" width="0.0803%" height="15" fill="rgb(244,101,49)" fg:x="509" fg:w="1"/><text x="41.1007%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.8507%" y="421" width="0.0803%" height="15" fill="rgb(211,43,42)" fg:x="509" fg:w="1"/><text x="41.1007%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="40.8507%" y="405" width="0.0803%" height="15" fill="rgb(210,93,2)" fg:x="509" fg:w="1"/><text x="41.1007%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="40.8507%" y="389" width="0.0803%" height="15" fill="rgb(242,149,32)" fg:x="509" fg:w="1"/><text x="41.1007%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.8507%" y="373" width="0.0803%" height="15" fill="rgb(228,1,6)" fg:x="509" fg:w="1"/><text x="41.1007%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.0112%" y="421" width="0.0803%" height="15" fill="rgb(221,0,20)" fg:x="511" fg:w="1"/><text x="41.2612%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.0112%" y="405" width="0.0803%" height="15" fill="rgb(230,39,32)" fg:x="511" fg:w="1"/><text x="41.2612%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="41.0112%" y="389" width="0.0803%" height="15" fill="rgb(240,89,38)" fg:x="511" fg:w="1"/><text x="41.2612%" y="399.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (6 samples, 0.48%)</title><rect x="40.6902%" y="485" width="0.4815%" height="15" fill="rgb(208,221,23)" fg:x="507" fg:w="6"/><text x="40.9402%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.48%)</title><rect x="40.6902%" y="469" width="0.4815%" height="15" fill="rgb(220,145,29)" fg:x="507" fg:w="6"/><text x="40.9402%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="40.9310%" y="453" width="0.2408%" height="15" fill="rgb(219,146,23)" fg:x="510" fg:w="3"/><text x="41.1810%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="40.9310%" y="437" width="0.2408%" height="15" fill="rgb(244,114,49)" fg:x="510" fg:w="3"/><text x="41.1810%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="41.0915%" y="421" width="0.0803%" height="15" fill="rgb(221,17,10)" fg:x="512" fg:w="1"/><text x="41.3415%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="41.0915%" y="405" width="0.0803%" height="15" fill="rgb(228,133,21)" fg:x="512" fg:w="1"/><text x="41.3415%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.1717%" y="373" width="0.0803%" height="15" fill="rgb(218,81,30)" fg:x="513" fg:w="1"/><text x="41.4217%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.2520%" y="357" width="0.0803%" height="15" fill="rgb(240,29,36)" fg:x="514" fg:w="1"/><text x="41.5020%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.2520%" y="341" width="0.0803%" height="15" fill="rgb(246,0,36)" fg:x="514" fg:w="1"/><text x="41.5020%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.2520%" y="325" width="0.0803%" height="15" fill="rgb(217,79,8)" fg:x="514" fg:w="1"/><text x="41.5020%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.2520%" y="309" width="0.0803%" height="15" fill="rgb(229,124,44)" fg:x="514" fg:w="1"/><text x="41.5020%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.2520%" y="293" width="0.0803%" height="15" fill="rgb(210,187,22)" fg:x="514" fg:w="1"/><text x="41.5020%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.2520%" y="277" width="0.0803%" height="15" fill="rgb(212,115,40)" fg:x="514" fg:w="1"/><text x="41.5020%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.2520%" y="261" width="0.0803%" height="15" fill="rgb(210,2,54)" fg:x="514" fg:w="1"/><text x="41.5020%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.2520%" y="245" width="0.0803%" height="15" fill="rgb(227,168,43)" fg:x="514" fg:w="1"/><text x="41.5020%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.2520%" y="229" width="0.0803%" height="15" fill="rgb(249,92,8)" fg:x="514" fg:w="1"/><text x="41.5020%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.2520%" y="213" width="0.0803%" height="15" fill="rgb(239,111,35)" fg:x="514" fg:w="1"/><text x="41.5020%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.2520%" y="197" width="0.0803%" height="15" fill="rgb(230,126,13)" fg:x="514" fg:w="1"/><text x="41.5020%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.2520%" y="181" width="0.0803%" height="15" fill="rgb(243,116,33)" fg:x="514" fg:w="1"/><text x="41.5020%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.2520%" y="165" width="0.0803%" height="15" fill="rgb(246,103,21)" fg:x="514" fg:w="1"/><text x="41.5020%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.2520%" y="149" width="0.0803%" height="15" fill="rgb(237,53,26)" fg:x="514" fg:w="1"/><text x="41.5020%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.2520%" y="133" width="0.0803%" height="15" fill="rgb(213,121,15)" fg:x="514" fg:w="1"/><text x="41.5020%" y="143.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="41.1717%" y="469" width="0.2408%" height="15" fill="rgb(251,83,35)" fg:x="513" fg:w="3"/><text x="41.4217%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="41.1717%" y="453" width="0.2408%" height="15" fill="rgb(222,79,8)" fg:x="513" fg:w="3"/><text x="41.4217%" y="463.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="41.1717%" y="437" width="0.2408%" height="15" fill="rgb(217,74,36)" fg:x="513" fg:w="3"/><text x="41.4217%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (3 samples, 0.24%)</title><rect x="41.1717%" y="421" width="0.2408%" height="15" fill="rgb(221,14,30)" fg:x="513" fg:w="3"/><text x="41.4217%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="41.1717%" y="405" width="0.2408%" height="15" fill="rgb(216,221,5)" fg:x="513" fg:w="3"/><text x="41.4217%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="41.1717%" y="389" width="0.2408%" height="15" fill="rgb(236,118,16)" fg:x="513" fg:w="3"/><text x="41.4217%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="41.2520%" y="373" width="0.1605%" height="15" fill="rgb(243,91,43)" fg:x="514" fg:w="2"/><text x="41.5020%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.3323%" y="357" width="0.0803%" height="15" fill="rgb(231,110,7)" fg:x="515" fg:w="1"/><text x="41.5823%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.3323%" y="341" width="0.0803%" height="15" fill="rgb(217,80,6)" fg:x="515" fg:w="1"/><text x="41.5823%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="41.3323%" y="325" width="0.0803%" height="15" fill="rgb(251,116,7)" fg:x="515" fg:w="1"/><text x="41.5823%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.3323%" y="309" width="0.0803%" height="15" fill="rgb(236,70,22)" fg:x="515" fg:w="1"/><text x="41.5823%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.3323%" y="293" width="0.0803%" height="15" fill="rgb(245,13,10)" fg:x="515" fg:w="1"/><text x="41.5823%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.3323%" y="277" width="0.0803%" height="15" fill="rgb(233,146,34)" fg:x="515" fg:w="1"/><text x="41.5823%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.3323%" y="261" width="0.0803%" height="15" fill="rgb(241,196,34)" fg:x="515" fg:w="1"/><text x="41.5823%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="41.4125%" y="421" width="0.0803%" height="15" fill="rgb(207,150,20)" fg:x="516" fg:w="1"/><text x="41.6625%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.4125%" y="405" width="0.0803%" height="15" fill="rgb(251,27,52)" fg:x="516" fg:w="1"/><text x="41.6625%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="41.4125%" y="437" width="0.1605%" height="15" fill="rgb(221,76,2)" fg:x="516" fg:w="2"/><text x="41.6625%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.4928%" y="421" width="0.0803%" height="15" fill="rgb(242,94,41)" fg:x="517" fg:w="1"/><text x="41.7428%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.4928%" y="405" width="0.0803%" height="15" fill="rgb(245,9,8)" fg:x="517" fg:w="1"/><text x="41.7428%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="41.4928%" y="389" width="0.0803%" height="15" fill="rgb(236,139,26)" fg:x="517" fg:w="1"/><text x="41.7428%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.4928%" y="373" width="0.0803%" height="15" fill="rgb(249,11,18)" fg:x="517" fg:w="1"/><text x="41.7428%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.4928%" y="357" width="0.0803%" height="15" fill="rgb(206,175,35)" fg:x="517" fg:w="1"/><text x="41.7428%" y="367.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="41.1717%" y="485" width="0.4815%" height="15" fill="rgb(231,3,46)" fg:x="513" fg:w="6"/><text x="41.4217%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="41.4125%" y="469" width="0.2408%" height="15" fill="rgb(243,27,8)" fg:x="516" fg:w="3"/><text x="41.6625%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="41.4125%" y="453" width="0.2408%" height="15" fill="rgb(223,53,13)" fg:x="516" fg:w="3"/><text x="41.6625%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="41.5730%" y="437" width="0.0803%" height="15" fill="rgb(248,68,15)" fg:x="518" fg:w="1"/><text x="41.8230%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.5730%" y="421" width="0.0803%" height="15" fill="rgb(216,61,26)" fg:x="518" fg:w="1"/><text x="41.8230%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.5730%" y="405" width="0.0803%" height="15" fill="rgb(213,201,24)" fg:x="518" fg:w="1"/><text x="41.8230%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.5730%" y="389" width="0.0803%" height="15" fill="rgb(214,20,17)" fg:x="518" fg:w="1"/><text x="41.8230%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="41.5730%" y="373" width="0.0803%" height="15" fill="rgb(206,21,46)" fg:x="518" fg:w="1"/><text x="41.8230%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.5730%" y="357" width="0.0803%" height="15" fill="rgb(234,222,24)" fg:x="518" fg:w="1"/><text x="41.8230%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.5730%" y="341" width="0.0803%" height="15" fill="rgb(221,25,26)" fg:x="518" fg:w="1"/><text x="41.8230%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.5730%" y="325" width="0.0803%" height="15" fill="rgb(241,148,26)" fg:x="518" fg:w="1"/><text x="41.8230%" y="335.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="41.6533%" y="405" width="0.0803%" height="15" fill="rgb(248,119,35)" fg:x="519" fg:w="1"/><text x="41.9033%" y="415.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="41.7335%" y="357" width="0.0803%" height="15" fill="rgb(239,126,23)" fg:x="520" fg:w="1"/><text x="41.9835%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.7335%" y="341" width="0.0803%" height="15" fill="rgb(247,120,25)" fg:x="520" fg:w="1"/><text x="41.9835%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="41.7335%" y="325" width="0.0803%" height="15" fill="rgb(220,93,32)" fg:x="520" fg:w="1"/><text x="41.9835%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="41.7335%" y="373" width="0.1605%" height="15" fill="rgb(236,46,26)" fg:x="520" fg:w="2"/><text x="41.9835%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.8138%" y="357" width="0.0803%" height="15" fill="rgb(229,20,45)" fg:x="521" fg:w="1"/><text x="42.0638%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8138%" y="341" width="0.0803%" height="15" fill="rgb(225,168,41)" fg:x="521" fg:w="1"/><text x="42.0638%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8138%" y="325" width="0.0803%" height="15" fill="rgb(253,123,20)" fg:x="521" fg:w="1"/><text x="42.0638%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8138%" y="309" width="0.0803%" height="15" fill="rgb(244,17,29)" fg:x="521" fg:w="1"/><text x="42.0638%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.8138%" y="293" width="0.0803%" height="15" fill="rgb(242,196,24)" fg:x="521" fg:w="1"/><text x="42.0638%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.8138%" y="277" width="0.0803%" height="15" fill="rgb(210,113,45)" fg:x="521" fg:w="1"/><text x="42.0638%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.8138%" y="261" width="0.0803%" height="15" fill="rgb(205,129,3)" fg:x="521" fg:w="1"/><text x="42.0638%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.8138%" y="245" width="0.0803%" height="15" fill="rgb(232,74,10)" fg:x="521" fg:w="1"/><text x="42.0638%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.8138%" y="229" width="0.0803%" height="15" fill="rgb(251,63,43)" fg:x="521" fg:w="1"/><text x="42.0638%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.8138%" y="213" width="0.0803%" height="15" fill="rgb(228,215,15)" fg:x="521" fg:w="1"/><text x="42.0638%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.8138%" y="197" width="0.0803%" height="15" fill="rgb(233,179,38)" fg:x="521" fg:w="1"/><text x="42.0638%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.8138%" y="181" width="0.0803%" height="15" fill="rgb(227,187,9)" fg:x="521" fg:w="1"/><text x="42.0638%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.8138%" y="165" width="0.0803%" height="15" fill="rgb(231,89,27)" fg:x="521" fg:w="1"/><text x="42.0638%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.8138%" y="149" width="0.0803%" height="15" fill="rgb(225,117,1)" fg:x="521" fg:w="1"/><text x="42.0638%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="41.8941%" y="357" width="0.0803%" height="15" fill="rgb(239,120,49)" fg:x="522" fg:w="1"/><text x="42.1441%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.8941%" y="341" width="0.0803%" height="15" fill="rgb(236,137,37)" fg:x="522" fg:w="1"/><text x="42.1441%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.9743%" y="341" width="0.0803%" height="15" fill="rgb(239,73,42)" fg:x="523" fg:w="1"/><text x="42.2243%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.9743%" y="325" width="0.0803%" height="15" fill="rgb(207,169,6)" fg:x="523" fg:w="1"/><text x="42.2243%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.9743%" y="309" width="0.0803%" height="15" fill="rgb(228,171,10)" fg:x="523" fg:w="1"/><text x="42.2243%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9743%" y="293" width="0.0803%" height="15" fill="rgb(217,228,47)" fg:x="523" fg:w="1"/><text x="42.2243%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.9743%" y="277" width="0.0803%" height="15" fill="rgb(227,116,17)" fg:x="523" fg:w="1"/><text x="42.2243%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.9743%" y="261" width="0.0803%" height="15" fill="rgb(245,128,36)" fg:x="523" fg:w="1"/><text x="42.2243%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.9743%" y="245" width="0.0803%" height="15" fill="rgb(221,139,3)" fg:x="523" fg:w="1"/><text x="42.2243%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.9743%" y="229" width="0.0803%" height="15" fill="rgb(207,59,54)" fg:x="523" fg:w="1"/><text x="42.2243%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="41.9743%" y="213" width="0.0803%" height="15" fill="rgb(231,129,12)" fg:x="523" fg:w="1"/><text x="42.2243%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="41.9743%" y="197" width="0.0803%" height="15" fill="rgb(235,49,17)" fg:x="523" fg:w="1"/><text x="42.2243%" y="207.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (6 samples, 0.48%)</title><rect x="41.6533%" y="437" width="0.4815%" height="15" fill="rgb(229,175,11)" fg:x="519" fg:w="6"/><text x="41.9033%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.48%)</title><rect x="41.6533%" y="421" width="0.4815%" height="15" fill="rgb(206,187,30)" fg:x="519" fg:w="6"/><text x="41.9033%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (5 samples, 0.40%)</title><rect x="41.7335%" y="405" width="0.4013%" height="15" fill="rgb(214,39,19)" fg:x="520" fg:w="5"/><text x="41.9835%" y="415.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="41.7335%" y="389" width="0.4013%" height="15" fill="rgb(243,92,46)" fg:x="520" fg:w="5"/><text x="41.9835%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="41.8941%" y="373" width="0.2408%" height="15" fill="rgb(240,125,36)" fg:x="522" fg:w="3"/><text x="42.1441%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="41.9743%" y="357" width="0.1605%" height="15" fill="rgb(217,193,45)" fg:x="523" fg:w="2"/><text x="42.2243%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.0546%" y="341" width="0.0803%" height="15" fill="rgb(230,127,16)" fg:x="524" fg:w="1"/><text x="42.3046%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0546%" y="325" width="0.0803%" height="15" fill="rgb(208,161,0)" fg:x="524" fg:w="1"/><text x="42.3046%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="42.0546%" y="309" width="0.0803%" height="15" fill="rgb(251,69,39)" fg:x="524" fg:w="1"/><text x="42.3046%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0546%" y="293" width="0.0803%" height="15" fill="rgb(229,86,22)" fg:x="524" fg:w="1"/><text x="42.3046%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.0546%" y="277" width="0.0803%" height="15" fill="rgb(223,67,43)" fg:x="524" fg:w="1"/><text x="42.3046%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.0546%" y="261" width="0.0803%" height="15" fill="rgb(254,80,31)" fg:x="524" fg:w="1"/><text x="42.3046%" y="271.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (7 samples, 0.56%)</title><rect x="41.6533%" y="469" width="0.5618%" height="15" fill="rgb(225,149,52)" fg:x="519" fg:w="7"/><text x="41.9033%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="41.6533%" y="453" width="0.5618%" height="15" fill="rgb(214,169,18)" fg:x="519" fg:w="7"/><text x="41.9033%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.1348%" y="437" width="0.0803%" height="15" fill="rgb(236,224,43)" fg:x="525" fg:w="1"/><text x="42.3848%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.1348%" y="421" width="0.0803%" height="15" fill="rgb(251,125,34)" fg:x="525" fg:w="1"/><text x="42.3848%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.1348%" y="405" width="0.0803%" height="15" fill="rgb(224,39,44)" fg:x="525" fg:w="1"/><text x="42.3848%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.1348%" y="389" width="0.0803%" height="15" fill="rgb(206,111,46)" fg:x="525" fg:w="1"/><text x="42.3848%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="42.1348%" y="373" width="0.0803%" height="15" fill="rgb(227,147,50)" fg:x="525" fg:w="1"/><text x="42.3848%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.2151%" y="453" width="0.1605%" height="15" fill="rgb(239,144,36)" fg:x="526" fg:w="2"/><text x="42.4651%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.2151%" y="437" width="0.1605%" height="15" fill="rgb(216,17,19)" fg:x="526" fg:w="2"/><text x="42.4651%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.2953%" y="421" width="0.0803%" height="15" fill="rgb(211,192,29)" fg:x="527" fg:w="1"/><text x="42.5453%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (107 samples, 8.59%)</title><rect x="33.9486%" y="517" width="8.5875%" height="15" fill="rgb(238,195,20)" fg:x="423" fg:w="107"/><text x="34.1986%" y="527.50">&lt;plugins_cor..</text></g><g><title>plugins_core::location::change_location (43 samples, 3.45%)</title><rect x="39.0851%" y="501" width="3.4510%" height="15" fill="rgb(213,210,42)" fg:x="487" fg:w="43"/><text x="39.3351%" y="511.50">plu..</text></g><g><title>plugins_core::location::Location::set (11 samples, 0.88%)</title><rect x="41.6533%" y="485" width="0.8828%" height="15" fill="rgb(244,4,49)" fg:x="519" fg:w="11"/><text x="41.9033%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="42.2151%" y="469" width="0.3210%" height="15" fill="rgb(254,106,42)" fg:x="526" fg:w="4"/><text x="42.4651%" y="479.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="42.3756%" y="453" width="0.1605%" height="15" fill="rgb(222,182,12)" fg:x="528" fg:w="2"/><text x="42.6256%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="42.3756%" y="437" width="0.1605%" height="15" fill="rgb(228,160,15)" fg:x="528" fg:w="2"/><text x="42.6256%" y="447.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="42.3756%" y="421" width="0.1605%" height="15" fill="rgb(243,149,43)" fg:x="528" fg:w="2"/><text x="42.6256%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="42.3756%" y="405" width="0.1605%" height="15" fill="rgb(245,150,32)" fg:x="528" fg:w="2"/><text x="42.6256%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.3756%" y="389" width="0.1605%" height="15" fill="rgb(205,43,19)" fg:x="528" fg:w="2"/><text x="42.6256%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.4559%" y="373" width="0.0803%" height="15" fill="rgb(249,189,35)" fg:x="529" fg:w="1"/><text x="42.7059%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.6164%" y="373" width="0.0803%" height="15" fill="rgb(223,9,0)" fg:x="531" fg:w="1"/><text x="42.8664%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="42.6164%" y="485" width="0.1605%" height="15" fill="rgb(213,142,45)" fg:x="531" fg:w="2"/><text x="42.8664%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="42.6164%" y="469" width="0.1605%" height="15" fill="rgb(208,148,2)" fg:x="531" fg:w="2"/><text x="42.8664%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="42.6164%" y="453" width="0.1605%" height="15" fill="rgb(207,191,42)" fg:x="531" fg:w="2"/><text x="42.8664%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="42.6164%" y="437" width="0.1605%" height="15" fill="rgb(215,218,38)" fg:x="531" fg:w="2"/><text x="42.8664%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="42.6164%" y="421" width="0.1605%" height="15" fill="rgb(223,195,24)" fg:x="531" fg:w="2"/><text x="42.8664%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="42.6164%" y="405" width="0.1605%" height="15" fill="rgb(254,60,30)" fg:x="531" fg:w="2"/><text x="42.8664%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="42.6164%" y="389" width="0.1605%" height="15" fill="rgb(223,2,9)" fg:x="531" fg:w="2"/><text x="42.8664%" y="399.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="42.6966%" y="373" width="0.0803%" height="15" fill="rgb(253,134,46)" fg:x="532" fg:w="1"/><text x="42.9466%" y="383.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="42.6966%" y="357" width="0.0803%" height="15" fill="rgb(206,209,20)" fg:x="532" fg:w="1"/><text x="42.9466%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="42.7769%" y="469" width="0.0803%" height="15" fill="rgb(253,104,42)" fg:x="533" fg:w="1"/><text x="43.0269%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.7769%" y="453" width="0.0803%" height="15" fill="rgb(223,47,23)" fg:x="533" fg:w="1"/><text x="43.0269%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.9374%" y="437" width="0.0803%" height="15" fill="rgb(247,148,44)" fg:x="535" fg:w="1"/><text x="43.1874%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.9374%" y="421" width="0.0803%" height="15" fill="rgb(221,224,16)" fg:x="535" fg:w="1"/><text x="43.1874%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.9374%" y="453" width="0.1605%" height="15" fill="rgb(252,103,29)" fg:x="535" fg:w="2"/><text x="43.1874%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.0177%" y="437" width="0.0803%" height="15" fill="rgb(244,185,34)" fg:x="536" fg:w="1"/><text x="43.2677%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.0177%" y="421" width="0.0803%" height="15" fill="rgb(218,18,50)" fg:x="536" fg:w="1"/><text x="43.2677%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.0177%" y="405" width="0.0803%" height="15" fill="rgb(234,105,8)" fg:x="536" fg:w="1"/><text x="43.2677%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.0177%" y="389" width="0.0803%" height="15" fill="rgb(249,51,19)" fg:x="536" fg:w="1"/><text x="43.2677%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.0177%" y="373" width="0.0803%" height="15" fill="rgb(233,132,7)" fg:x="536" fg:w="1"/><text x="43.2677%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.0177%" y="357" width="0.0803%" height="15" fill="rgb(229,181,43)" fg:x="536" fg:w="1"/><text x="43.2677%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.0177%" y="341" width="0.0803%" height="15" fill="rgb(223,20,7)" fg:x="536" fg:w="1"/><text x="43.2677%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.0177%" y="325" width="0.0803%" height="15" fill="rgb(245,13,34)" fg:x="536" fg:w="1"/><text x="43.2677%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.0177%" y="309" width="0.0803%" height="15" fill="rgb(242,0,53)" fg:x="536" fg:w="1"/><text x="43.2677%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.0177%" y="293" width="0.0803%" height="15" fill="rgb(233,115,19)" fg:x="536" fg:w="1"/><text x="43.2677%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.0177%" y="277" width="0.0803%" height="15" fill="rgb(216,170,26)" fg:x="536" fg:w="1"/><text x="43.2677%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (5 samples, 0.40%)</title><rect x="42.7769%" y="485" width="0.4013%" height="15" fill="rgb(233,13,0)" fg:x="533" fg:w="5"/><text x="43.0269%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="42.8571%" y="469" width="0.3210%" height="15" fill="rgb(228,79,21)" fg:x="534" fg:w="4"/><text x="43.1071%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.0979%" y="453" width="0.0803%" height="15" fill="rgb(244,17,41)" fg:x="537" fg:w="1"/><text x="43.3479%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="43.0979%" y="437" width="0.0803%" height="15" fill="rgb(253,152,11)" fg:x="537" fg:w="1"/><text x="43.3479%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.0979%" y="421" width="0.0803%" height="15" fill="rgb(254,94,47)" fg:x="537" fg:w="1"/><text x="43.3479%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.0979%" y="405" width="0.0803%" height="15" fill="rgb(239,66,43)" fg:x="537" fg:w="1"/><text x="43.3479%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.0979%" y="389" width="0.0803%" height="15" fill="rgb(251,25,22)" fg:x="537" fg:w="1"/><text x="43.3479%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="43.1782%" y="469" width="0.0803%" height="15" fill="rgb(227,65,46)" fg:x="538" fg:w="1"/><text x="43.4282%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.1782%" y="453" width="0.0803%" height="15" fill="rgb(240,180,32)" fg:x="538" fg:w="1"/><text x="43.4282%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="43.2584%" y="469" width="0.0803%" height="15" fill="rgb(242,11,35)" fg:x="539" fg:w="1"/><text x="43.5084%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.2584%" y="453" width="0.0803%" height="15" fill="rgb(221,41,49)" fg:x="539" fg:w="1"/><text x="43.5084%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.3387%" y="453" width="0.0803%" height="15" fill="rgb(253,80,52)" fg:x="540" fg:w="1"/><text x="43.5887%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.3387%" y="437" width="0.0803%" height="15" fill="rgb(232,152,28)" fg:x="540" fg:w="1"/><text x="43.5887%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.3387%" y="421" width="0.0803%" height="15" fill="rgb(219,110,12)" fg:x="540" fg:w="1"/><text x="43.5887%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.4189%" y="453" width="0.0803%" height="15" fill="rgb(218,98,43)" fg:x="541" fg:w="1"/><text x="43.6689%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="43.4189%" y="437" width="0.0803%" height="15" fill="rgb(253,96,49)" fg:x="541" fg:w="1"/><text x="43.6689%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="43.4189%" y="421" width="0.0803%" height="15" fill="rgb(238,132,17)" fg:x="541" fg:w="1"/><text x="43.6689%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.5795%" y="389" width="0.0803%" height="15" fill="rgb(208,82,25)" fg:x="543" fg:w="1"/><text x="43.8295%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.5795%" y="373" width="0.0803%" height="15" fill="rgb(237,77,13)" fg:x="543" fg:w="1"/><text x="43.8295%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="43.1782%" y="485" width="0.5618%" height="15" fill="rgb(230,6,11)" fg:x="538" fg:w="7"/><text x="43.4282%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="43.3387%" y="469" width="0.4013%" height="15" fill="rgb(207,29,48)" fg:x="540" fg:w="5"/><text x="43.5887%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="43.4992%" y="453" width="0.2408%" height="15" fill="rgb(247,105,22)" fg:x="542" fg:w="3"/><text x="43.7492%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.4992%" y="437" width="0.2408%" height="15" fill="rgb(223,114,44)" fg:x="542" fg:w="3"/><text x="43.7492%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="43.5795%" y="421" width="0.1605%" height="15" fill="rgb(242,3,46)" fg:x="543" fg:w="2"/><text x="43.8295%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.5795%" y="405" width="0.1605%" height="15" fill="rgb(243,197,8)" fg:x="543" fg:w="2"/><text x="43.8295%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.6597%" y="389" width="0.0803%" height="15" fill="rgb(238,171,27)" fg:x="544" fg:w="1"/><text x="43.9097%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.6597%" y="373" width="0.0803%" height="15" fill="rgb(254,144,27)" fg:x="544" fg:w="1"/><text x="43.9097%" y="383.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (15 samples, 1.20%)</title><rect x="42.6164%" y="501" width="1.2039%" height="15" fill="rgb(216,203,36)" fg:x="531" fg:w="15"/><text x="42.8664%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::has_scope (1 samples, 0.08%)</title><rect x="43.7400%" y="485" width="0.0803%" height="15" fill="rgb(247,27,26)" fg:x="545" fg:w="1"/><text x="43.9900%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.7400%" y="469" width="0.0803%" height="15" fill="rgb(234,180,24)" fg:x="545" fg:w="1"/><text x="43.9900%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.8202%" y="501" width="0.0803%" height="15" fill="rgb(221,50,43)" fg:x="546" fg:w="1"/><text x="44.0702%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.8202%" y="485" width="0.0803%" height="15" fill="rgb(236,50,6)" fg:x="546" fg:w="1"/><text x="44.0702%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.8202%" y="469" width="0.0803%" height="15" fill="rgb(245,172,32)" fg:x="546" fg:w="1"/><text x="44.0702%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.8202%" y="453" width="0.0803%" height="15" fill="rgb(207,54,46)" fg:x="546" fg:w="1"/><text x="44.0702%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.8202%" y="437" width="0.0803%" height="15" fill="rgb(218,67,44)" fg:x="546" fg:w="1"/><text x="44.0702%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="43.8202%" y="421" width="0.0803%" height="15" fill="rgb(208,152,22)" fg:x="546" fg:w="1"/><text x="44.0702%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.8202%" y="405" width="0.0803%" height="15" fill="rgb(243,177,0)" fg:x="546" fg:w="1"/><text x="44.0702%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::finding::EntityRelationship&gt; (1 samples, 0.08%)</title><rect x="43.9005%" y="469" width="0.0803%" height="15" fill="rgb(212,75,12)" fg:x="547" fg:w="1"/><text x="44.1505%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.0610%" y="453" width="0.0803%" height="15" fill="rgb(212,129,29)" fg:x="549" fg:w="1"/><text x="44.3110%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.0610%" y="437" width="0.0803%" height="15" fill="rgb(241,229,35)" fg:x="549" fg:w="1"/><text x="44.3110%" y="447.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="44.1413%" y="437" width="0.0803%" height="15" fill="rgb(232,49,32)" fg:x="550" fg:w="1"/><text x="44.3913%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (1 samples, 0.08%)</title><rect x="44.1413%" y="421" width="0.0803%" height="15" fill="rgb(243,119,48)" fg:x="550" fg:w="1"/><text x="44.3913%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="44.1413%" y="405" width="0.0803%" height="15" fill="rgb(212,205,30)" fg:x="550" fg:w="1"/><text x="44.3913%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="44.1413%" y="389" width="0.0803%" height="15" fill="rgb(218,175,42)" fg:x="550" fg:w="1"/><text x="44.3913%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="44.1413%" y="373" width="0.0803%" height="15" fill="rgb(230,156,27)" fg:x="550" fg:w="1"/><text x="44.3913%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.1413%" y="357" width="0.0803%" height="15" fill="rgb(254,32,43)" fg:x="550" fg:w="1"/><text x="44.3913%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="44.1413%" y="341" width="0.0803%" height="15" fill="rgb(246,89,34)" fg:x="550" fg:w="1"/><text x="44.3913%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.1413%" y="325" width="0.0803%" height="15" fill="rgb(247,162,17)" fg:x="550" fg:w="1"/><text x="44.3913%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.1413%" y="309" width="0.0803%" height="15" fill="rgb(219,71,37)" fg:x="550" fg:w="1"/><text x="44.3913%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.1413%" y="293" width="0.0803%" height="15" fill="rgb(210,184,7)" fg:x="550" fg:w="1"/><text x="44.3913%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.3018%" y="373" width="0.0803%" height="15" fill="rgb(245,16,32)" fg:x="552" fg:w="1"/><text x="44.5518%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.3018%" y="357" width="0.0803%" height="15" fill="rgb(209,62,7)" fg:x="552" fg:w="1"/><text x="44.5518%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.3018%" y="341" width="0.0803%" height="15" fill="rgb(215,16,15)" fg:x="552" fg:w="1"/><text x="44.5518%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.3018%" y="325" width="0.0803%" height="15" fill="rgb(223,60,14)" fg:x="552" fg:w="1"/><text x="44.5518%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.3018%" y="309" width="0.0803%" height="15" fill="rgb(244,134,12)" fg:x="552" fg:w="1"/><text x="44.5518%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.3018%" y="293" width="0.0803%" height="15" fill="rgb(224,3,41)" fg:x="552" fg:w="1"/><text x="44.5518%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.3018%" y="277" width="0.0803%" height="15" fill="rgb(213,84,2)" fg:x="552" fg:w="1"/><text x="44.5518%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.3018%" y="261" width="0.0803%" height="15" fill="rgb(213,216,27)" fg:x="552" fg:w="1"/><text x="44.5518%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.3018%" y="245" width="0.0803%" height="15" fill="rgb(218,76,35)" fg:x="552" fg:w="1"/><text x="44.5518%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.3018%" y="229" width="0.0803%" height="15" fill="rgb(253,89,24)" fg:x="552" fg:w="1"/><text x="44.5518%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.3018%" y="213" width="0.0803%" height="15" fill="rgb(217,188,40)" fg:x="552" fg:w="1"/><text x="44.5518%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.3018%" y="197" width="0.0803%" height="15" fill="rgb(237,79,38)" fg:x="552" fg:w="1"/><text x="44.5518%" y="207.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="44.3018%" y="405" width="0.2408%" height="15" fill="rgb(215,116,13)" fg:x="552" fg:w="3"/><text x="44.5518%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="44.3018%" y="389" width="0.2408%" height="15" fill="rgb(249,66,35)" fg:x="552" fg:w="3"/><text x="44.5518%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.3820%" y="373" width="0.1605%" height="15" fill="rgb(253,86,18)" fg:x="553" fg:w="2"/><text x="44.6320%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.4623%" y="357" width="0.0803%" height="15" fill="rgb(209,175,36)" fg:x="554" fg:w="1"/><text x="44.7123%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.4623%" y="341" width="0.0803%" height="15" fill="rgb(253,149,3)" fg:x="554" fg:w="1"/><text x="44.7123%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.4623%" y="325" width="0.0803%" height="15" fill="rgb(242,124,49)" fg:x="554" fg:w="1"/><text x="44.7123%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.4623%" y="309" width="0.0803%" height="15" fill="rgb(219,171,24)" fg:x="554" fg:w="1"/><text x="44.7123%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.4623%" y="293" width="0.0803%" height="15" fill="rgb(216,121,30)" fg:x="554" fg:w="1"/><text x="44.7123%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.4623%" y="277" width="0.0803%" height="15" fill="rgb(234,165,21)" fg:x="554" fg:w="1"/><text x="44.7123%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.4623%" y="261" width="0.0803%" height="15" fill="rgb(234,103,40)" fg:x="554" fg:w="1"/><text x="44.7123%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.4623%" y="245" width="0.0803%" height="15" fill="rgb(250,137,24)" fg:x="554" fg:w="1"/><text x="44.7123%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.4623%" y="229" width="0.0803%" height="15" fill="rgb(253,22,21)" fg:x="554" fg:w="1"/><text x="44.7123%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.4623%" y="213" width="0.0803%" height="15" fill="rgb(243,22,5)" fg:x="554" fg:w="1"/><text x="44.7123%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.4623%" y="197" width="0.0803%" height="15" fill="rgb(212,56,7)" fg:x="554" fg:w="1"/><text x="44.7123%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.4623%" y="181" width="0.0803%" height="15" fill="rgb(223,190,49)" fg:x="554" fg:w="1"/><text x="44.7123%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.4623%" y="165" width="0.0803%" height="15" fill="rgb(221,110,35)" fg:x="554" fg:w="1"/><text x="44.7123%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="44.5425%" y="309" width="0.1605%" height="15" fill="rgb(212,113,34)" fg:x="555" fg:w="2"/><text x="44.7925%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="44.5425%" y="293" width="0.1605%" height="15" fill="rgb(216,125,47)" fg:x="555" fg:w="2"/><text x="44.7925%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.6228%" y="277" width="0.0803%" height="15" fill="rgb(251,112,19)" fg:x="556" fg:w="1"/><text x="44.8728%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.6228%" y="261" width="0.0803%" height="15" fill="rgb(254,200,41)" fg:x="556" fg:w="1"/><text x="44.8728%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.6228%" y="245" width="0.0803%" height="15" fill="rgb(225,17,42)" fg:x="556" fg:w="1"/><text x="44.8728%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6228%" y="229" width="0.0803%" height="15" fill="rgb(208,105,35)" fg:x="556" fg:w="1"/><text x="44.8728%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6228%" y="213" width="0.0803%" height="15" fill="rgb(210,125,51)" fg:x="556" fg:w="1"/><text x="44.8728%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.6228%" y="197" width="0.0803%" height="15" fill="rgb(227,213,18)" fg:x="556" fg:w="1"/><text x="44.8728%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.6228%" y="181" width="0.0803%" height="15" fill="rgb(221,174,32)" fg:x="556" fg:w="1"/><text x="44.8728%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.6228%" y="165" width="0.0803%" height="15" fill="rgb(234,23,1)" fg:x="556" fg:w="1"/><text x="44.8728%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.6228%" y="149" width="0.0803%" height="15" fill="rgb(209,65,17)" fg:x="556" fg:w="1"/><text x="44.8728%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.6228%" y="133" width="0.0803%" height="15" fill="rgb(206,224,31)" fg:x="556" fg:w="1"/><text x="44.8728%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.6228%" y="117" width="0.0803%" height="15" fill="rgb(230,20,38)" fg:x="556" fg:w="1"/><text x="44.8728%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.6228%" y="101" width="0.0803%" height="15" fill="rgb(211,9,41)" fg:x="556" fg:w="1"/><text x="44.8728%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.6228%" y="85" width="0.0803%" height="15" fill="rgb(233,214,4)" fg:x="556" fg:w="1"/><text x="44.8728%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.6228%" y="69" width="0.0803%" height="15" fill="rgb(225,60,54)" fg:x="556" fg:w="1"/><text x="44.8728%" y="79.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="44.6228%" y="53" width="0.0803%" height="15" fill="rgb(206,228,35)" fg:x="556" fg:w="1"/><text x="44.8728%" y="63.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="44.6228%" y="37" width="0.0803%" height="15" fill="rgb(212,178,50)" fg:x="556" fg:w="1"/><text x="44.8728%" y="47.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.8636%" y="293" width="0.0803%" height="15" fill="rgb(206,192,33)" fg:x="559" fg:w="1"/><text x="45.1136%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.9438%" y="277" width="0.0803%" height="15" fill="rgb(238,210,1)" fg:x="560" fg:w="1"/><text x="45.1938%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.9438%" y="261" width="0.0803%" height="15" fill="rgb(205,65,52)" fg:x="560" fg:w="1"/><text x="45.1938%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (8 samples, 0.64%)</title><rect x="44.5425%" y="405" width="0.6421%" height="15" fill="rgb(237,204,51)" fg:x="555" fg:w="8"/><text x="44.7925%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.64%)</title><rect x="44.5425%" y="389" width="0.6421%" height="15" fill="rgb(213,119,51)" fg:x="555" fg:w="8"/><text x="44.7925%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="44.5425%" y="373" width="0.6421%" height="15" fill="rgb(244,156,37)" fg:x="555" fg:w="8"/><text x="44.7925%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.64%)</title><rect x="44.5425%" y="357" width="0.6421%" height="15" fill="rgb(249,96,18)" fg:x="555" fg:w="8"/><text x="44.7925%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (8 samples, 0.64%)</title><rect x="44.5425%" y="341" width="0.6421%" height="15" fill="rgb(231,65,11)" fg:x="555" fg:w="8"/><text x="44.7925%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="44.5425%" y="325" width="0.6421%" height="15" fill="rgb(240,187,2)" fg:x="555" fg:w="8"/><text x="44.7925%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="44.7030%" y="309" width="0.4815%" height="15" fill="rgb(242,121,39)" fg:x="557" fg:w="6"/><text x="44.9530%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="44.9438%" y="293" width="0.2408%" height="15" fill="rgb(233,205,18)" fg:x="560" fg:w="3"/><text x="45.1938%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="45.0241%" y="277" width="0.1605%" height="15" fill="rgb(219,67,33)" fg:x="561" fg:w="2"/><text x="45.2741%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.0241%" y="261" width="0.1605%" height="15" fill="rgb(227,84,12)" fg:x="561" fg:w="2"/><text x="45.2741%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="45.0241%" y="245" width="0.1605%" height="15" fill="rgb(227,42,52)" fg:x="561" fg:w="2"/><text x="45.2741%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.0241%" y="229" width="0.1605%" height="15" fill="rgb(231,27,28)" fg:x="561" fg:w="2"/><text x="45.2741%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="45.0241%" y="213" width="0.1605%" height="15" fill="rgb(238,42,2)" fg:x="561" fg:w="2"/><text x="45.2741%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.0241%" y="197" width="0.1605%" height="15" fill="rgb(215,15,9)" fg:x="561" fg:w="2"/><text x="45.2741%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.1043%" y="181" width="0.0803%" height="15" fill="rgb(205,195,15)" fg:x="562" fg:w="1"/><text x="45.3543%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.1846%" y="405" width="0.0803%" height="15" fill="rgb(233,143,2)" fg:x="563" fg:w="1"/><text x="45.4346%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="45.1846%" y="389" width="0.0803%" height="15" fill="rgb(207,108,8)" fg:x="563" fg:w="1"/><text x="45.4346%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="45.2648%" y="405" width="0.1605%" height="15" fill="rgb(214,53,21)" fg:x="564" fg:w="2"/><text x="45.5148%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="45.3451%" y="389" width="0.0803%" height="15" fill="rgb(238,212,36)" fg:x="565" fg:w="1"/><text x="45.5951%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.3451%" y="373" width="0.0803%" height="15" fill="rgb(218,151,47)" fg:x="565" fg:w="1"/><text x="45.5951%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="45.4254%" y="373" width="0.0803%" height="15" fill="rgb(245,160,3)" fg:x="566" fg:w="1"/><text x="45.6754%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.4254%" y="357" width="0.0803%" height="15" fill="rgb(238,106,19)" fg:x="566" fg:w="1"/><text x="45.6754%" y="367.50"></text></g><g><title>plugins_core::tools::contained_by (19 samples, 1.52%)</title><rect x="44.1413%" y="453" width="1.5249%" height="15" fill="rgb(207,206,9)" fg:x="550" fg:w="19"/><text x="44.3913%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (18 samples, 1.44%)</title><rect x="44.2215%" y="437" width="1.4446%" height="15" fill="rgb(254,40,10)" fg:x="551" fg:w="18"/><text x="44.4715%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (18 samples, 1.44%)</title><rect x="44.2215%" y="421" width="1.4446%" height="15" fill="rgb(245,81,8)" fg:x="551" fg:w="18"/><text x="44.4715%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="45.4254%" y="405" width="0.2408%" height="15" fill="rgb(214,119,17)" fg:x="566" fg:w="3"/><text x="45.6754%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="45.4254%" y="389" width="0.2408%" height="15" fill="rgb(245,100,39)" fg:x="566" fg:w="3"/><text x="45.6754%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="45.5056%" y="373" width="0.1605%" height="15" fill="rgb(243,105,16)" fg:x="567" fg:w="2"/><text x="45.7556%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="45.5056%" y="357" width="0.1605%" height="15" fill="rgb(214,53,2)" fg:x="567" fg:w="2"/><text x="45.7556%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="45.5859%" y="341" width="0.0803%" height="15" fill="rgb(251,54,50)" fg:x="568" fg:w="1"/><text x="45.8359%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="45.6661%" y="341" width="0.0803%" height="15" fill="rgb(244,121,37)" fg:x="569" fg:w="1"/><text x="45.9161%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.6661%" y="325" width="0.0803%" height="15" fill="rgb(236,158,39)" fg:x="569" fg:w="1"/><text x="45.9161%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.6661%" y="309" width="0.0803%" height="15" fill="rgb(226,25,37)" fg:x="569" fg:w="1"/><text x="45.9161%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.6661%" y="293" width="0.0803%" height="15" fill="rgb(222,71,46)" fg:x="569" fg:w="1"/><text x="45.9161%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="45.6661%" y="277" width="0.0803%" height="15" fill="rgb(209,27,29)" fg:x="569" fg:w="1"/><text x="45.9161%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.6661%" y="261" width="0.0803%" height="15" fill="rgb(210,196,17)" fg:x="569" fg:w="1"/><text x="45.9161%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.6661%" y="245" width="0.0803%" height="15" fill="rgb(236,76,23)" fg:x="569" fg:w="1"/><text x="45.9161%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.6661%" y="229" width="0.0803%" height="15" fill="rgb(214,33,32)" fg:x="569" fg:w="1"/><text x="45.9161%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="45.7464%" y="325" width="0.0803%" height="15" fill="rgb(243,16,26)" fg:x="570" fg:w="1"/><text x="45.9964%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.7464%" y="309" width="0.0803%" height="15" fill="rgb(241,30,48)" fg:x="570" fg:w="1"/><text x="45.9964%" y="319.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="45.6661%" y="437" width="0.2408%" height="15" fill="rgb(241,106,1)" fg:x="569" fg:w="3"/><text x="45.9161%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="45.6661%" y="421" width="0.2408%" height="15" fill="rgb(230,62,29)" fg:x="569" fg:w="3"/><text x="45.9161%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="45.6661%" y="405" width="0.2408%" height="15" fill="rgb(207,166,53)" fg:x="569" fg:w="3"/><text x="45.9161%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="45.6661%" y="389" width="0.2408%" height="15" fill="rgb(244,54,13)" fg:x="569" fg:w="3"/><text x="45.9161%" y="399.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (3 samples, 0.24%)</title><rect x="45.6661%" y="373" width="0.2408%" height="15" fill="rgb(205,144,19)" fg:x="569" fg:w="3"/><text x="45.9161%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="45.6661%" y="357" width="0.2408%" height="15" fill="rgb(225,165,45)" fg:x="569" fg:w="3"/><text x="45.9161%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="45.7464%" y="341" width="0.1605%" height="15" fill="rgb(220,140,6)" fg:x="570" fg:w="2"/><text x="45.9964%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.8266%" y="325" width="0.0803%" height="15" fill="rgb(234,69,14)" fg:x="571" fg:w="1"/><text x="46.0766%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.8266%" y="309" width="0.0803%" height="15" fill="rgb(243,24,33)" fg:x="571" fg:w="1"/><text x="46.0766%" y="319.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="45.9872%" y="293" width="0.0803%" height="15" fill="rgb(253,100,43)" fg:x="573" fg:w="1"/><text x="46.2372%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="45.9872%" y="309" width="0.1605%" height="15" fill="rgb(221,168,15)" fg:x="573" fg:w="2"/><text x="46.2372%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="46.0674%" y="293" width="0.0803%" height="15" fill="rgb(237,15,11)" fg:x="574" fg:w="1"/><text x="46.3174%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.0674%" y="277" width="0.0803%" height="15" fill="rgb(229,207,40)" fg:x="574" fg:w="1"/><text x="46.3174%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.0674%" y="261" width="0.0803%" height="15" fill="rgb(246,125,48)" fg:x="574" fg:w="1"/><text x="46.3174%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.0674%" y="245" width="0.0803%" height="15" fill="rgb(231,65,10)" fg:x="574" fg:w="1"/><text x="46.3174%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.0674%" y="229" width="0.0803%" height="15" fill="rgb(222,152,40)" fg:x="574" fg:w="1"/><text x="46.3174%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.0674%" y="213" width="0.0803%" height="15" fill="rgb(214,12,30)" fg:x="574" fg:w="1"/><text x="46.3174%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.0674%" y="197" width="0.0803%" height="15" fill="rgb(239,80,41)" fg:x="574" fg:w="1"/><text x="46.3174%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.0674%" y="181" width="0.0803%" height="15" fill="rgb(206,175,27)" fg:x="574" fg:w="1"/><text x="46.3174%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.0674%" y="165" width="0.0803%" height="15" fill="rgb(222,43,39)" fg:x="574" fg:w="1"/><text x="46.3174%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.0674%" y="149" width="0.0803%" height="15" fill="rgb(243,47,50)" fg:x="574" fg:w="1"/><text x="46.3174%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.0674%" y="133" width="0.0803%" height="15" fill="rgb(243,61,21)" fg:x="574" fg:w="1"/><text x="46.3174%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.0674%" y="117" width="0.0803%" height="15" fill="rgb(208,172,5)" fg:x="574" fg:w="1"/><text x="46.3174%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.0674%" y="101" width="0.0803%" height="15" fill="rgb(219,24,25)" fg:x="574" fg:w="1"/><text x="46.3174%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.0674%" y="85" width="0.0803%" height="15" fill="rgb(235,42,41)" fg:x="574" fg:w="1"/><text x="46.3174%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.0674%" y="69" width="0.0803%" height="15" fill="rgb(226,190,24)" fg:x="574" fg:w="1"/><text x="46.3174%" y="79.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="46.0674%" y="53" width="0.0803%" height="15" fill="rgb(216,55,27)" fg:x="574" fg:w="1"/><text x="46.3174%" y="63.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="46.0674%" y="37" width="0.0803%" height="15" fill="rgb(231,77,14)" fg:x="574" fg:w="1"/><text x="46.3174%" y="47.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.1477%" y="277" width="0.0803%" height="15" fill="rgb(208,108,34)" fg:x="575" fg:w="1"/><text x="46.3977%" y="287.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="46.1477%" y="261" width="0.0803%" height="15" fill="rgb(228,183,52)" fg:x="575" fg:w="1"/><text x="46.3977%" y="271.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.32%)</title><rect x="45.9872%" y="405" width="0.3210%" height="15" fill="rgb(224,152,1)" fg:x="573" fg:w="4"/><text x="46.2372%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="45.9872%" y="389" width="0.3210%" height="15" fill="rgb(246,115,8)" fg:x="573" fg:w="4"/><text x="46.2372%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="45.9872%" y="373" width="0.3210%" height="15" fill="rgb(211,76,13)" fg:x="573" fg:w="4"/><text x="46.2372%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="45.9872%" y="357" width="0.3210%" height="15" fill="rgb(233,214,49)" fg:x="573" fg:w="4"/><text x="46.2372%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (4 samples, 0.32%)</title><rect x="45.9872%" y="341" width="0.3210%" height="15" fill="rgb(223,44,51)" fg:x="573" fg:w="4"/><text x="46.2372%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="45.9872%" y="325" width="0.3210%" height="15" fill="rgb(225,111,51)" fg:x="573" fg:w="4"/><text x="46.2372%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="46.1477%" y="309" width="0.1605%" height="15" fill="rgb(231,185,26)" fg:x="575" fg:w="2"/><text x="46.3977%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="46.1477%" y="293" width="0.1605%" height="15" fill="rgb(233,111,30)" fg:x="575" fg:w="2"/><text x="46.3977%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.2279%" y="277" width="0.0803%" height="15" fill="rgb(250,1,47)" fg:x="576" fg:w="1"/><text x="46.4779%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.2279%" y="261" width="0.0803%" height="15" fill="rgb(254,210,3)" fg:x="576" fg:w="1"/><text x="46.4779%" y="271.50"></text></g><g><title>plugins_core::tools::occupied_by (9 samples, 0.72%)</title><rect x="45.6661%" y="453" width="0.7223%" height="15" fill="rgb(234,14,22)" fg:x="569" fg:w="9"/><text x="45.9161%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="45.9069%" y="437" width="0.4815%" height="15" fill="rgb(221,117,4)" fg:x="572" fg:w="6"/><text x="46.1569%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="45.9069%" y="421" width="0.4815%" height="15" fill="rgb(251,147,27)" fg:x="572" fg:w="6"/><text x="46.1569%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.3082%" y="405" width="0.0803%" height="15" fill="rgb(226,52,11)" fg:x="577" fg:w="1"/><text x="46.5582%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.3082%" y="389" width="0.0803%" height="15" fill="rgb(229,222,5)" fg:x="577" fg:w="1"/><text x="46.5582%" y="399.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (31 samples, 2.49%)</title><rect x="43.9807%" y="469" width="2.4880%" height="15" fill="rgb(232,76,2)" fg:x="548" fg:w="31"/><text x="44.2307%" y="479.50">pl..</text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.08%)</title><rect x="46.3884%" y="453" width="0.0803%" height="15" fill="rgb(242,108,2)" fg:x="578" fg:w="1"/><text x="46.6384%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="46.3884%" y="437" width="0.0803%" height="15" fill="rgb(213,165,6)" fg:x="578" fg:w="1"/><text x="46.6384%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="46.3884%" y="421" width="0.0803%" height="15" fill="rgb(222,24,42)" fg:x="578" fg:w="1"/><text x="46.6384%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.3884%" y="405" width="0.0803%" height="15" fill="rgb(242,170,24)" fg:x="578" fg:w="1"/><text x="46.6384%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.3884%" y="389" width="0.0803%" height="15" fill="rgb(209,110,40)" fg:x="578" fg:w="1"/><text x="46.6384%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.3884%" y="373" width="0.0803%" height="15" fill="rgb(233,146,36)" fg:x="578" fg:w="1"/><text x="46.6384%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="46.4687%" y="405" width="0.0803%" height="15" fill="rgb(229,33,32)" fg:x="579" fg:w="1"/><text x="46.7187%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.4687%" y="389" width="0.0803%" height="15" fill="rgb(225,55,34)" fg:x="579" fg:w="1"/><text x="46.7187%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (34 samples, 2.73%)</title><rect x="43.9005%" y="501" width="2.7287%" height="15" fill="rgb(217,32,50)" fg:x="547" fg:w="34"/><text x="44.1505%" y="511.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_item (34 samples, 2.73%)</title><rect x="43.9005%" y="485" width="2.7287%" height="15" fill="rgb(206,110,53)" fg:x="547" fg:w="34"/><text x="44.1505%" y="495.50">&lt;p..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="46.4687%" y="469" width="0.1605%" height="15" fill="rgb(247,25,10)" fg:x="579" fg:w="2"/><text x="46.7187%" y="479.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="46.4687%" y="453" width="0.1605%" height="15" fill="rgb(226,67,48)" fg:x="579" fg:w="2"/><text x="46.7187%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::name (2 samples, 0.16%)</title><rect x="46.4687%" y="437" width="0.1605%" height="15" fill="rgb(239,73,28)" fg:x="579" fg:w="2"/><text x="46.7187%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="46.4687%" y="421" width="0.1605%" height="15" fill="rgb(234,200,41)" fg:x="579" fg:w="2"/><text x="46.7187%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="46.5490%" y="405" width="0.0803%" height="15" fill="rgb(233,76,35)" fg:x="580" fg:w="1"/><text x="46.7990%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.5490%" y="389" width="0.0803%" height="15" fill="rgb(238,166,31)" fg:x="580" fg:w="1"/><text x="46.7990%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.5490%" y="373" width="0.0803%" height="15" fill="rgb(219,218,51)" fg:x="580" fg:w="1"/><text x="46.7990%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="46.5490%" y="357" width="0.0803%" height="15" fill="rgb(221,82,53)" fg:x="580" fg:w="1"/><text x="46.7990%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.5490%" y="341" width="0.0803%" height="15" fill="rgb(218,179,13)" fg:x="580" fg:w="1"/><text x="46.7990%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.5490%" y="325" width="0.0803%" height="15" fill="rgb(210,53,38)" fg:x="580" fg:w="1"/><text x="46.7990%" y="335.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="46.6292%" y="501" width="0.0803%" height="15" fill="rgb(214,167,31)" fg:x="581" fg:w="1"/><text x="46.8792%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="46.7095%" y="485" width="0.0803%" height="15" fill="rgb(223,26,5)" fg:x="582" fg:w="1"/><text x="46.9595%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="46.7095%" y="469" width="0.0803%" height="15" fill="rgb(218,95,23)" fg:x="582" fg:w="1"/><text x="46.9595%" y="479.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="46.7095%" y="453" width="0.0803%" height="15" fill="rgb(248,205,45)" fg:x="582" fg:w="1"/><text x="46.9595%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="46.7095%" y="437" width="0.0803%" height="15" fill="rgb(211,76,6)" fg:x="582" fg:w="1"/><text x="46.9595%" y="447.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="46.7095%" y="421" width="0.0803%" height="15" fill="rgb(250,176,29)" fg:x="582" fg:w="1"/><text x="46.9595%" y="431.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="46.7095%" y="405" width="0.0803%" height="15" fill="rgb(240,107,31)" fg:x="582" fg:w="1"/><text x="46.9595%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="46.7095%" y="389" width="0.0803%" height="15" fill="rgb(229,215,17)" fg:x="582" fg:w="1"/><text x="46.9595%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="46.7095%" y="373" width="0.0803%" height="15" fill="rgb(240,79,8)" fg:x="582" fg:w="1"/><text x="46.9595%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="46.7095%" y="357" width="0.0803%" height="15" fill="rgb(243,110,48)" fg:x="582" fg:w="1"/><text x="46.9595%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="46.7095%" y="341" width="0.0803%" height="15" fill="rgb(236,201,9)" fg:x="582" fg:w="1"/><text x="46.9595%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.7095%" y="325" width="0.0803%" height="15" fill="rgb(220,87,26)" fg:x="582" fg:w="1"/><text x="46.9595%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.8700%" y="437" width="0.0803%" height="15" fill="rgb(212,118,27)" fg:x="584" fg:w="1"/><text x="47.1200%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9502%" y="437" width="0.0803%" height="15" fill="rgb(244,178,50)" fg:x="585" fg:w="1"/><text x="47.2002%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.0305%" y="405" width="0.1605%" height="15" fill="rgb(215,204,7)" fg:x="586" fg:w="2"/><text x="47.2805%" y="415.50"></text></g><g><title>&lt;replies::CarryingEvent as replies::ToTaggedJson&gt;::to_tagged_json (6 samples, 0.48%)</title><rect x="46.7897%" y="485" width="0.4815%" height="15" fill="rgb(214,122,43)" fg:x="583" fg:w="6"/><text x="47.0397%" y="495.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::CarryingEvent&gt;::serialize (6 samples, 0.48%)</title><rect x="46.7897%" y="469" width="0.4815%" height="15" fill="rgb(251,178,26)" fg:x="583" fg:w="6"/><text x="47.0397%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeStructVariant as serde::ser::SerializeStructVariant&gt;::serialize_field (6 samples, 0.48%)</title><rect x="46.7897%" y="453" width="0.4815%" height="15" fill="rgb(210,7,35)" fg:x="583" fg:w="6"/><text x="47.0397%" y="463.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (3 samples, 0.24%)</title><rect x="47.0305%" y="437" width="0.2408%" height="15" fill="rgb(227,164,54)" fg:x="586" fg:w="3"/><text x="47.2805%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="47.0305%" y="421" width="0.2408%" height="15" fill="rgb(205,18,34)" fg:x="586" fg:w="3"/><text x="47.2805%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.1910%" y="405" width="0.0803%" height="15" fill="rgb(239,50,19)" fg:x="588" fg:w="1"/><text x="47.4410%" y="415.50"></text></g><g><title>plugins_core::library::actions::reply_ok (8 samples, 0.64%)</title><rect x="46.7095%" y="501" width="0.6421%" height="15" fill="rgb(224,85,6)" fg:x="582" fg:w="8"/><text x="46.9595%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="47.2713%" y="485" width="0.0803%" height="15" fill="rgb(252,167,34)" fg:x="589" fg:w="1"/><text x="47.5213%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.2713%" y="469" width="0.0803%" height="15" fill="rgb(243,180,35)" fg:x="589" fg:w="1"/><text x="47.5213%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="47.4318%" y="485" width="0.0803%" height="15" fill="rgb(213,214,53)" fg:x="591" fg:w="1"/><text x="47.6818%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="47.4318%" y="469" width="0.0803%" height="15" fill="rgb(244,39,37)" fg:x="591" fg:w="1"/><text x="47.6818%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="47.5120%" y="453" width="0.2408%" height="15" fill="rgb(215,141,14)" fg:x="592" fg:w="3"/><text x="47.7620%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="47.5923%" y="437" width="0.1605%" height="15" fill="rgb(210,2,42)" fg:x="593" fg:w="2"/><text x="47.8423%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="47.5923%" y="421" width="0.1605%" height="15" fill="rgb(252,189,47)" fg:x="593" fg:w="2"/><text x="47.8423%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="47.5923%" y="405" width="0.1605%" height="15" fill="rgb(222,154,47)" fg:x="593" fg:w="2"/><text x="47.8423%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="47.5923%" y="389" width="0.1605%" height="15" fill="rgb(228,20,37)" fg:x="593" fg:w="2"/><text x="47.8423%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.5923%" y="373" width="0.1605%" height="15" fill="rgb(236,17,4)" fg:x="593" fg:w="2"/><text x="47.8423%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.5923%" y="357" width="0.1605%" height="15" fill="rgb(222,211,31)" fg:x="593" fg:w="2"/><text x="47.8423%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="47.5923%" y="341" width="0.1605%" height="15" fill="rgb(218,134,25)" fg:x="593" fg:w="2"/><text x="47.8423%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="47.5923%" y="325" width="0.1605%" height="15" fill="rgb(218,97,43)" fg:x="593" fg:w="2"/><text x="47.8423%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="47.5923%" y="309" width="0.1605%" height="15" fill="rgb(234,163,32)" fg:x="593" fg:w="2"/><text x="47.8423%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="47.5923%" y="293" width="0.1605%" height="15" fill="rgb(251,171,42)" fg:x="593" fg:w="2"/><text x="47.8423%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="47.5923%" y="277" width="0.1605%" height="15" fill="rgb(223,104,12)" fg:x="593" fg:w="2"/><text x="47.8423%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="47.5923%" y="261" width="0.1605%" height="15" fill="rgb(225,29,49)" fg:x="593" fg:w="2"/><text x="47.8423%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="47.5923%" y="245" width="0.1605%" height="15" fill="rgb(253,77,7)" fg:x="593" fg:w="2"/><text x="47.8423%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="47.5923%" y="229" width="0.1605%" height="15" fill="rgb(213,81,26)" fg:x="593" fg:w="2"/><text x="47.8423%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="47.5923%" y="213" width="0.1605%" height="15" fill="rgb(246,126,6)" fg:x="593" fg:w="2"/><text x="47.8423%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.5923%" y="197" width="0.1605%" height="15" fill="rgb(232,186,21)" fg:x="593" fg:w="2"/><text x="47.8423%" y="207.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="47.7528%" y="437" width="0.0803%" height="15" fill="rgb(215,126,18)" fg:x="595" fg:w="1"/><text x="48.0028%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="47.5120%" y="485" width="0.4013%" height="15" fill="rgb(210,47,5)" fg:x="592" fg:w="5"/><text x="47.7620%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="47.5120%" y="469" width="0.4013%" height="15" fill="rgb(240,70,6)" fg:x="592" fg:w="5"/><text x="47.7620%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="47.7528%" y="453" width="0.1605%" height="15" fill="rgb(230,99,49)" fg:x="595" fg:w="2"/><text x="48.0028%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="47.8331%" y="437" width="0.0803%" height="15" fill="rgb(212,57,36)" fg:x="596" fg:w="1"/><text x="48.0831%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.8331%" y="421" width="0.0803%" height="15" fill="rgb(243,14,50)" fg:x="596" fg:w="1"/><text x="48.0831%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="47.8331%" y="405" width="0.0803%" height="15" fill="rgb(240,2,53)" fg:x="596" fg:w="1"/><text x="48.0831%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.8331%" y="389" width="0.0803%" height="15" fill="rgb(208,47,53)" fg:x="596" fg:w="1"/><text x="48.0831%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.8331%" y="373" width="0.0803%" height="15" fill="rgb(235,186,39)" fg:x="596" fg:w="1"/><text x="48.0831%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.8331%" y="357" width="0.0803%" height="15" fill="rgb(212,35,47)" fg:x="596" fg:w="1"/><text x="48.0831%" y="367.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="47.9133%" y="453" width="0.3210%" height="15" fill="rgb(248,59,37)" fg:x="597" fg:w="4"/><text x="48.1633%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="47.9133%" y="437" width="0.3210%" height="15" fill="rgb(223,186,16)" fg:x="597" fg:w="4"/><text x="48.1633%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="47.9936%" y="421" width="0.2408%" height="15" fill="rgb(215,106,35)" fg:x="598" fg:w="3"/><text x="48.2436%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="48.0738%" y="405" width="0.1605%" height="15" fill="rgb(217,141,29)" fg:x="599" fg:w="2"/><text x="48.3238%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.1541%" y="389" width="0.0803%" height="15" fill="rgb(221,227,46)" fg:x="600" fg:w="1"/><text x="48.4041%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.1541%" y="373" width="0.0803%" height="15" fill="rgb(212,36,41)" fg:x="600" fg:w="1"/><text x="48.4041%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.1541%" y="357" width="0.0803%" height="15" fill="rgb(222,35,11)" fg:x="600" fg:w="1"/><text x="48.4041%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.1541%" y="341" width="0.0803%" height="15" fill="rgb(232,165,33)" fg:x="600" fg:w="1"/><text x="48.4041%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.1541%" y="325" width="0.0803%" height="15" fill="rgb(211,38,20)" fg:x="600" fg:w="1"/><text x="48.4041%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.2343%" y="325" width="0.0803%" height="15" fill="rgb(230,7,36)" fg:x="601" fg:w="1"/><text x="48.4843%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.2343%" y="309" width="0.0803%" height="15" fill="rgb(213,128,35)" fg:x="601" fg:w="1"/><text x="48.4843%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.3146%" y="261" width="0.1605%" height="15" fill="rgb(218,11,14)" fg:x="602" fg:w="2"/><text x="48.5646%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.3146%" y="245" width="0.1605%" height="15" fill="rgb(249,105,7)" fg:x="602" fg:w="2"/><text x="48.5646%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="48.2343%" y="357" width="0.3210%" height="15" fill="rgb(226,125,21)" fg:x="601" fg:w="4"/><text x="48.4843%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="48.2343%" y="341" width="0.3210%" height="15" fill="rgb(239,90,47)" fg:x="601" fg:w="4"/><text x="48.4843%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="48.3146%" y="325" width="0.2408%" height="15" fill="rgb(226,19,1)" fg:x="602" fg:w="3"/><text x="48.5646%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="48.3146%" y="309" width="0.2408%" height="15" fill="rgb(205,117,40)" fg:x="602" fg:w="3"/><text x="48.5646%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="48.3146%" y="293" width="0.2408%" height="15" fill="rgb(234,6,54)" fg:x="602" fg:w="3"/><text x="48.5646%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="48.3146%" y="277" width="0.2408%" height="15" fill="rgb(239,73,32)" fg:x="602" fg:w="3"/><text x="48.5646%" y="287.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="48.4751%" y="261" width="0.0803%" height="15" fill="rgb(226,197,12)" fg:x="604" fg:w="1"/><text x="48.7251%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.5554%" y="325" width="0.0803%" height="15" fill="rgb(226,53,42)" fg:x="605" fg:w="1"/><text x="48.8054%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.5554%" y="309" width="0.0803%" height="15" fill="rgb(234,99,30)" fg:x="605" fg:w="1"/><text x="48.8054%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.5554%" y="293" width="0.0803%" height="15" fill="rgb(237,175,49)" fg:x="605" fg:w="1"/><text x="48.8054%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.5554%" y="277" width="0.0803%" height="15" fill="rgb(228,75,42)" fg:x="605" fg:w="1"/><text x="48.8054%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.5554%" y="261" width="0.0803%" height="15" fill="rgb(223,162,48)" fg:x="605" fg:w="1"/><text x="48.8054%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.5554%" y="245" width="0.0803%" height="15" fill="rgb(221,192,29)" fg:x="605" fg:w="1"/><text x="48.8054%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.5554%" y="229" width="0.0803%" height="15" fill="rgb(249,150,41)" fg:x="605" fg:w="1"/><text x="48.8054%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.5554%" y="213" width="0.0803%" height="15" fill="rgb(243,107,34)" fg:x="605" fg:w="1"/><text x="48.8054%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.5554%" y="197" width="0.0803%" height="15" fill="rgb(214,227,11)" fg:x="605" fg:w="1"/><text x="48.8054%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.5554%" y="181" width="0.0803%" height="15" fill="rgb(209,37,13)" fg:x="605" fg:w="1"/><text x="48.8054%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.5554%" y="165" width="0.0803%" height="15" fill="rgb(249,124,20)" fg:x="605" fg:w="1"/><text x="48.8054%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.5554%" y="149" width="0.0803%" height="15" fill="rgb(228,28,2)" fg:x="605" fg:w="1"/><text x="48.8054%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.5554%" y="133" width="0.0803%" height="15" fill="rgb(244,55,1)" fg:x="605" fg:w="1"/><text x="48.8054%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.5554%" y="117" width="0.0803%" height="15" fill="rgb(216,26,19)" fg:x="605" fg:w="1"/><text x="48.8054%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.5554%" y="101" width="0.0803%" height="15" fill="rgb(209,162,10)" fg:x="605" fg:w="1"/><text x="48.8054%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.6356%" y="325" width="0.0803%" height="15" fill="rgb(235,168,42)" fg:x="606" fg:w="1"/><text x="48.8856%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="48.6356%" y="309" width="0.0803%" height="15" fill="rgb(240,24,14)" fg:x="606" fg:w="1"/><text x="48.8856%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.6356%" y="293" width="0.0803%" height="15" fill="rgb(224,107,11)" fg:x="606" fg:w="1"/><text x="48.8856%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.6356%" y="277" width="0.0803%" height="15" fill="rgb(226,48,4)" fg:x="606" fg:w="1"/><text x="48.8856%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.6356%" y="261" width="0.0803%" height="15" fill="rgb(254,31,21)" fg:x="606" fg:w="1"/><text x="48.8856%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.6356%" y="245" width="0.0803%" height="15" fill="rgb(205,156,19)" fg:x="606" fg:w="1"/><text x="48.8856%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.7159%" y="261" width="0.0803%" height="15" fill="rgb(216,73,31)" fg:x="607" fg:w="1"/><text x="48.9659%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.7159%" y="245" width="0.0803%" height="15" fill="rgb(237,88,35)" fg:x="607" fg:w="1"/><text x="48.9659%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (8 samples, 0.64%)</title><rect x="48.2343%" y="453" width="0.6421%" height="15" fill="rgb(254,79,48)" fg:x="601" fg:w="8"/><text x="48.4843%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.64%)</title><rect x="48.2343%" y="437" width="0.6421%" height="15" fill="rgb(211,66,36)" fg:x="601" fg:w="8"/><text x="48.4843%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="48.2343%" y="421" width="0.6421%" height="15" fill="rgb(222,13,1)" fg:x="601" fg:w="8"/><text x="48.4843%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.64%)</title><rect x="48.2343%" y="405" width="0.6421%" height="15" fill="rgb(221,216,41)" fg:x="601" fg:w="8"/><text x="48.4843%" y="415.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (8 samples, 0.64%)</title><rect x="48.2343%" y="389" width="0.6421%" height="15" fill="rgb(220,10,17)" fg:x="601" fg:w="8"/><text x="48.4843%" y="399.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="48.2343%" y="373" width="0.6421%" height="15" fill="rgb(242,43,35)" fg:x="601" fg:w="8"/><text x="48.4843%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="48.5554%" y="357" width="0.3210%" height="15" fill="rgb(216,182,18)" fg:x="605" fg:w="4"/><text x="48.8054%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="48.5554%" y="341" width="0.3210%" height="15" fill="rgb(246,217,36)" fg:x="605" fg:w="4"/><text x="48.8054%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.7159%" y="325" width="0.1605%" height="15" fill="rgb(208,107,8)" fg:x="607" fg:w="2"/><text x="48.9659%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.7159%" y="309" width="0.1605%" height="15" fill="rgb(208,189,15)" fg:x="607" fg:w="2"/><text x="48.9659%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="48.7159%" y="293" width="0.1605%" height="15" fill="rgb(211,70,9)" fg:x="607" fg:w="2"/><text x="48.9659%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.7159%" y="277" width="0.1605%" height="15" fill="rgb(217,95,34)" fg:x="607" fg:w="2"/><text x="48.9659%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.7961%" y="261" width="0.0803%" height="15" fill="rgb(240,223,2)" fg:x="608" fg:w="1"/><text x="49.0461%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="48.7961%" y="245" width="0.0803%" height="15" fill="rgb(231,18,6)" fg:x="608" fg:w="1"/><text x="49.0461%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="48.7961%" y="229" width="0.0803%" height="15" fill="rgb(254,44,46)" fg:x="608" fg:w="1"/><text x="49.0461%" y="239.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (13 samples, 1.04%)</title><rect x="47.9133%" y="485" width="1.0433%" height="15" fill="rgb(223,222,46)" fg:x="597" fg:w="13"/><text x="48.1633%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.04%)</title><rect x="47.9133%" y="469" width="1.0433%" height="15" fill="rgb(229,163,13)" fg:x="597" fg:w="13"/><text x="48.1633%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.8764%" y="453" width="0.0803%" height="15" fill="rgb(220,208,13)" fg:x="609" fg:w="1"/><text x="49.1264%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.8764%" y="437" width="0.0803%" height="15" fill="rgb(244,28,53)" fg:x="609" fg:w="1"/><text x="49.1264%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="48.8764%" y="421" width="0.0803%" height="15" fill="rgb(243,138,0)" fg:x="609" fg:w="1"/><text x="49.1264%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="48.8764%" y="405" width="0.0803%" height="15" fill="rgb(209,90,49)" fg:x="609" fg:w="1"/><text x="49.1264%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="48.8764%" y="389" width="0.0803%" height="15" fill="rgb(247,114,18)" fg:x="609" fg:w="1"/><text x="49.1264%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.8764%" y="373" width="0.0803%" height="15" fill="rgb(221,14,46)" fg:x="609" fg:w="1"/><text x="49.1264%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.8764%" y="357" width="0.0803%" height="15" fill="rgb(215,29,23)" fg:x="609" fg:w="1"/><text x="49.1264%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.9567%" y="421" width="0.0803%" height="15" fill="rgb(241,37,25)" fg:x="610" fg:w="1"/><text x="49.2067%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="48.9567%" y="453" width="0.1605%" height="15" fill="rgb(225,17,22)" fg:x="610" fg:w="2"/><text x="49.2067%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="48.9567%" y="437" width="0.1605%" height="15" fill="rgb(241,182,7)" fg:x="610" fg:w="2"/><text x="49.2067%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.0369%" y="421" width="0.0803%" height="15" fill="rgb(248,125,10)" fg:x="611" fg:w="1"/><text x="49.2869%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.1974%" y="373" width="0.0803%" height="15" fill="rgb(250,3,37)" fg:x="613" fg:w="1"/><text x="49.4474%" y="383.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (5 samples, 0.40%)</title><rect x="48.9567%" y="485" width="0.4013%" height="15" fill="rgb(237,102,7)" fg:x="610" fg:w="5"/><text x="49.2067%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="48.9567%" y="469" width="0.4013%" height="15" fill="rgb(235,5,5)" fg:x="610" fg:w="5"/><text x="49.2067%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="49.1172%" y="453" width="0.2408%" height="15" fill="rgb(249,147,38)" fg:x="612" fg:w="3"/><text x="49.3672%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="49.1172%" y="437" width="0.2408%" height="15" fill="rgb(221,25,18)" fg:x="612" fg:w="3"/><text x="49.3672%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="49.1172%" y="421" width="0.2408%" height="15" fill="rgb(211,88,9)" fg:x="612" fg:w="3"/><text x="49.3672%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="49.1172%" y="405" width="0.2408%" height="15" fill="rgb(219,62,54)" fg:x="612" fg:w="3"/><text x="49.3672%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="49.1974%" y="389" width="0.1605%" height="15" fill="rgb(243,133,46)" fg:x="613" fg:w="2"/><text x="49.4474%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.2777%" y="373" width="0.0803%" height="15" fill="rgb(214,168,53)" fg:x="614" fg:w="1"/><text x="49.5277%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.2777%" y="357" width="0.0803%" height="15" fill="rgb(250,58,7)" fg:x="614" fg:w="1"/><text x="49.5277%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.3579%" y="405" width="0.0803%" height="15" fill="rgb(249,131,5)" fg:x="615" fg:w="1"/><text x="49.6079%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.3579%" y="389" width="0.0803%" height="15" fill="rgb(234,40,44)" fg:x="615" fg:w="1"/><text x="49.6079%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.3579%" y="373" width="0.0803%" height="15" fill="rgb(225,188,42)" fg:x="615" fg:w="1"/><text x="49.6079%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="49.3579%" y="437" width="0.1605%" height="15" fill="rgb(218,201,51)" fg:x="615" fg:w="2"/><text x="49.6079%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="49.3579%" y="421" width="0.1605%" height="15" fill="rgb(214,209,38)" fg:x="615" fg:w="2"/><text x="49.6079%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.4382%" y="405" width="0.0803%" height="15" fill="rgb(217,0,20)" fg:x="616" fg:w="1"/><text x="49.6882%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.4382%" y="389" width="0.0803%" height="15" fill="rgb(248,183,46)" fg:x="616" fg:w="1"/><text x="49.6882%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="49.4382%" y="373" width="0.0803%" height="15" fill="rgb(208,99,41)" fg:x="616" fg:w="1"/><text x="49.6882%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.4382%" y="357" width="0.0803%" height="15" fill="rgb(210,189,49)" fg:x="616" fg:w="1"/><text x="49.6882%" y="367.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="49.3579%" y="485" width="0.2408%" height="15" fill="rgb(239,191,42)" fg:x="615" fg:w="3"/><text x="49.6079%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="49.3579%" y="469" width="0.2408%" height="15" fill="rgb(240,138,26)" fg:x="615" fg:w="3"/><text x="49.6079%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="49.3579%" y="453" width="0.2408%" height="15" fill="rgb(234,45,22)" fg:x="615" fg:w="3"/><text x="49.6079%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="49.5185%" y="437" width="0.0803%" height="15" fill="rgb(228,43,35)" fg:x="617" fg:w="1"/><text x="49.7685%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="49.5185%" y="421" width="0.0803%" height="15" fill="rgb(215,201,54)" fg:x="617" fg:w="1"/><text x="49.7685%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.5185%" y="405" width="0.0803%" height="15" fill="rgb(209,60,31)" fg:x="617" fg:w="1"/><text x="49.7685%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.5185%" y="389" width="0.0803%" height="15" fill="rgb(232,66,12)" fg:x="617" fg:w="1"/><text x="49.7685%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="49.5185%" y="373" width="0.0803%" height="15" fill="rgb(244,78,24)" fg:x="617" fg:w="1"/><text x="49.7685%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.5185%" y="357" width="0.0803%" height="15" fill="rgb(249,65,27)" fg:x="617" fg:w="1"/><text x="49.7685%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.5185%" y="341" width="0.0803%" height="15" fill="rgb(208,218,19)" fg:x="617" fg:w="1"/><text x="49.7685%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.5185%" y="325" width="0.0803%" height="15" fill="rgb(212,181,38)" fg:x="617" fg:w="1"/><text x="49.7685%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.5185%" y="309" width="0.0803%" height="15" fill="rgb(207,118,40)" fg:x="617" fg:w="1"/><text x="49.7685%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="49.5987%" y="469" width="0.0803%" height="15" fill="rgb(207,126,20)" fg:x="618" fg:w="1"/><text x="49.8487%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.5987%" y="453" width="0.0803%" height="15" fill="rgb(232,15,46)" fg:x="618" fg:w="1"/><text x="49.8487%" y="463.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="49.5987%" y="485" width="0.1605%" height="15" fill="rgb(254,33,30)" fg:x="618" fg:w="2"/><text x="49.8487%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="49.6790%" y="469" width="0.0803%" height="15" fill="rgb(233,92,20)" fg:x="619" fg:w="1"/><text x="49.9290%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="49.6790%" y="453" width="0.0803%" height="15" fill="rgb(225,195,54)" fg:x="619" fg:w="1"/><text x="49.9290%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="49.6790%" y="437" width="0.0803%" height="15" fill="rgb(208,196,7)" fg:x="619" fg:w="1"/><text x="49.9290%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="49.6790%" y="421" width="0.0803%" height="15" fill="rgb(253,19,35)" fg:x="619" fg:w="1"/><text x="49.9290%" y="431.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="49.6790%" y="405" width="0.0803%" height="15" fill="rgb(228,180,1)" fg:x="619" fg:w="1"/><text x="49.9290%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="49.6790%" y="389" width="0.0803%" height="15" fill="rgb(248,35,18)" fg:x="619" fg:w="1"/><text x="49.9290%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="49.6790%" y="373" width="0.0803%" height="15" fill="rgb(220,34,8)" fg:x="619" fg:w="1"/><text x="49.9290%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.6790%" y="357" width="0.0803%" height="15" fill="rgb(219,223,17)" fg:x="619" fg:w="1"/><text x="49.9290%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.6790%" y="341" width="0.0803%" height="15" fill="rgb(223,183,15)" fg:x="619" fg:w="1"/><text x="49.9290%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.6790%" y="325" width="0.0803%" height="15" fill="rgb(253,184,45)" fg:x="619" fg:w="1"/><text x="49.9290%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.7592%" y="405" width="0.0803%" height="15" fill="rgb(207,97,29)" fg:x="620" fg:w="1"/><text x="50.0092%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.7592%" y="389" width="0.0803%" height="15" fill="rgb(250,170,27)" fg:x="620" fg:w="1"/><text x="50.0092%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="49.7592%" y="437" width="0.1605%" height="15" fill="rgb(206,178,17)" fg:x="620" fg:w="2"/><text x="50.0092%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="49.7592%" y="421" width="0.1605%" height="15" fill="rgb(213,92,46)" fg:x="620" fg:w="2"/><text x="50.0092%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.8395%" y="405" width="0.0803%" height="15" fill="rgb(223,114,30)" fg:x="621" fg:w="1"/><text x="50.0895%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.8395%" y="389" width="0.0803%" height="15" fill="rgb(207,228,9)" fg:x="621" fg:w="1"/><text x="50.0895%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.8395%" y="373" width="0.0803%" height="15" fill="rgb(205,70,25)" fg:x="621" fg:w="1"/><text x="50.0895%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.8395%" y="357" width="0.0803%" height="15" fill="rgb(252,45,30)" fg:x="621" fg:w="1"/><text x="50.0895%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.8395%" y="341" width="0.0803%" height="15" fill="rgb(219,185,54)" fg:x="621" fg:w="1"/><text x="50.0895%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.8395%" y="325" width="0.0803%" height="15" fill="rgb(219,208,54)" fg:x="621" fg:w="1"/><text x="50.0895%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.8395%" y="309" width="0.0803%" height="15" fill="rgb(207,164,54)" fg:x="621" fg:w="1"/><text x="50.0895%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.8395%" y="293" width="0.0803%" height="15" fill="rgb(240,155,22)" fg:x="621" fg:w="1"/><text x="50.0895%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.8395%" y="277" width="0.0803%" height="15" fill="rgb(217,127,14)" fg:x="621" fg:w="1"/><text x="50.0895%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.8395%" y="261" width="0.0803%" height="15" fill="rgb(232,179,42)" fg:x="621" fg:w="1"/><text x="50.0895%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.8395%" y="245" width="0.0803%" height="15" fill="rgb(247,55,45)" fg:x="621" fg:w="1"/><text x="50.0895%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.8395%" y="229" width="0.0803%" height="15" fill="rgb(217,11,18)" fg:x="621" fg:w="1"/><text x="50.0895%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="49.9197%" y="437" width="0.0803%" height="15" fill="rgb(227,127,4)" fg:x="622" fg:w="1"/><text x="50.1697%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="49.9197%" y="421" width="0.0803%" height="15" fill="rgb(217,97,45)" fg:x="622" fg:w="1"/><text x="50.1697%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="50.0000%" y="437" width="0.0803%" height="15" fill="rgb(250,135,20)" fg:x="623" fg:w="1"/><text x="50.2500%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="50.0000%" y="421" width="0.0803%" height="15" fill="rgb(224,213,26)" fg:x="623" fg:w="1"/><text x="50.2500%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.0000%" y="405" width="0.0803%" height="15" fill="rgb(237,86,25)" fg:x="623" fg:w="1"/><text x="50.2500%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.0000%" y="389" width="0.0803%" height="15" fill="rgb(251,105,18)" fg:x="623" fg:w="1"/><text x="50.2500%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.40%)</title><rect x="49.7592%" y="469" width="0.4013%" height="15" fill="rgb(246,124,25)" fg:x="620" fg:w="5"/><text x="50.0092%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="49.7592%" y="453" width="0.4013%" height="15" fill="rgb(210,90,3)" fg:x="620" fg:w="5"/><text x="50.0092%" y="463.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="50.0803%" y="437" width="0.0803%" height="15" fill="rgb(249,40,31)" fg:x="624" fg:w="1"/><text x="50.3303%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="50.0803%" y="421" width="0.0803%" height="15" fill="rgb(231,228,1)" fg:x="624" fg:w="1"/><text x="50.3303%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (1 samples, 0.08%)</title><rect x="50.0803%" y="405" width="0.0803%" height="15" fill="rgb(242,25,49)" fg:x="624" fg:w="1"/><text x="50.3303%" y="415.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="50.0803%" y="389" width="0.0803%" height="15" fill="rgb(224,142,22)" fg:x="624" fg:w="1"/><text x="50.3303%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="50.0803%" y="373" width="0.0803%" height="15" fill="rgb(228,106,29)" fg:x="624" fg:w="1"/><text x="50.3303%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="50.0803%" y="357" width="0.0803%" height="15" fill="rgb(207,2,15)" fg:x="624" fg:w="1"/><text x="50.3303%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.0803%" y="341" width="0.0803%" height="15" fill="rgb(231,43,37)" fg:x="624" fg:w="1"/><text x="50.3303%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="50.0803%" y="325" width="0.0803%" height="15" fill="rgb(245,193,12)" fg:x="624" fg:w="1"/><text x="50.3303%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.0803%" y="309" width="0.0803%" height="15" fill="rgb(246,9,49)" fg:x="624" fg:w="1"/><text x="50.3303%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.1605%" y="453" width="0.0803%" height="15" fill="rgb(218,50,36)" fg:x="625" fg:w="1"/><text x="50.4105%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.1605%" y="437" width="0.0803%" height="15" fill="rgb(225,206,16)" fg:x="625" fg:w="1"/><text x="50.4105%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.1605%" y="421" width="0.0803%" height="15" fill="rgb(242,52,5)" fg:x="625" fg:w="1"/><text x="50.4105%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.1605%" y="405" width="0.0803%" height="15" fill="rgb(217,158,11)" fg:x="625" fg:w="1"/><text x="50.4105%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.1605%" y="389" width="0.0803%" height="15" fill="rgb(242,144,22)" fg:x="625" fg:w="1"/><text x="50.4105%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.1605%" y="373" width="0.0803%" height="15" fill="rgb(236,191,3)" fg:x="625" fg:w="1"/><text x="50.4105%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.1605%" y="357" width="0.0803%" height="15" fill="rgb(241,22,19)" fg:x="625" fg:w="1"/><text x="50.4105%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.1605%" y="341" width="0.0803%" height="15" fill="rgb(205,217,44)" fg:x="625" fg:w="1"/><text x="50.4105%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.1605%" y="325" width="0.0803%" height="15" fill="rgb(231,53,3)" fg:x="625" fg:w="1"/><text x="50.4105%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.1605%" y="309" width="0.0803%" height="15" fill="rgb(207,13,22)" fg:x="625" fg:w="1"/><text x="50.4105%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.1605%" y="293" width="0.0803%" height="15" fill="rgb(234,62,29)" fg:x="625" fg:w="1"/><text x="50.4105%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.1605%" y="277" width="0.0803%" height="15" fill="rgb(226,175,44)" fg:x="625" fg:w="1"/><text x="50.4105%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.1605%" y="261" width="0.0803%" height="15" fill="rgb(239,177,6)" fg:x="625" fg:w="1"/><text x="50.4105%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.2408%" y="389" width="0.1605%" height="15" fill="rgb(249,125,15)" fg:x="626" fg:w="2"/><text x="50.4908%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (99 samples, 7.95%)</title><rect x="42.5361%" y="517" width="7.9454%" height="15" fill="rgb(210,201,5)" fg:x="530" fg:w="99"/><text x="42.7861%" y="527.50">&lt;plugins_co..</text></g><g><title>plugins_core::location::change_location (39 samples, 3.13%)</title><rect x="47.3515%" y="501" width="3.1300%" height="15" fill="rgb(210,14,6)" fg:x="590" fg:w="39"/><text x="47.6015%" y="511.50">plu..</text></g><g><title>plugins_core::location::Location::set (9 samples, 0.72%)</title><rect x="49.7592%" y="485" width="0.7223%" height="15" fill="rgb(239,141,15)" fg:x="620" fg:w="9"/><text x="50.0092%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="50.1605%" y="469" width="0.3210%" height="15" fill="rgb(235,75,9)" fg:x="625" fg:w="4"/><text x="50.4105%" y="479.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (3 samples, 0.24%)</title><rect x="50.2408%" y="453" width="0.2408%" height="15" fill="rgb(246,122,37)" fg:x="626" fg:w="3"/><text x="50.4908%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="50.2408%" y="437" width="0.2408%" height="15" fill="rgb(235,75,52)" fg:x="626" fg:w="3"/><text x="50.4908%" y="447.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="50.2408%" y="421" width="0.2408%" height="15" fill="rgb(235,179,12)" fg:x="626" fg:w="3"/><text x="50.4908%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="50.2408%" y="405" width="0.2408%" height="15" fill="rgb(223,20,9)" fg:x="626" fg:w="3"/><text x="50.4908%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.4013%" y="389" width="0.0803%" height="15" fill="rgb(223,75,22)" fg:x="628" fg:w="1"/><text x="50.6513%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.4013%" y="373" width="0.0803%" height="15" fill="rgb(248,148,18)" fg:x="628" fg:w="1"/><text x="50.6513%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="50.4013%" y="357" width="0.0803%" height="15" fill="rgb(225,103,8)" fg:x="628" fg:w="1"/><text x="50.6513%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (240 samples, 19.26%)</title><rect x="31.3002%" y="693" width="19.2616%" height="15" fill="rgb(237,168,17)" fg:x="390" fg:w="240"/><text x="31.5502%" y="703.50">&lt;engine::session::Session as k..</text></g><g><title>kernel::plugins::mw::apply_middleware (240 samples, 19.26%)</title><rect x="31.3002%" y="677" width="19.2616%" height="15" fill="rgb(215,192,38)" fg:x="390" fg:w="240"/><text x="31.5502%" y="687.50">kernel::plugins::mw::apply_mid..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (240 samples, 19.26%)</title><rect x="31.3002%" y="661" width="19.2616%" height="15" fill="rgb(237,69,28)" fg:x="390" fg:w="240"/><text x="31.5502%" y="671.50">kernel::plugins::mw::Middlewar..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (240 samples, 19.26%)</title><rect x="31.3002%" y="645" width="19.2616%" height="15" fill="rgb(254,167,32)" fg:x="390" fg:w="240"/><text x="31.5502%" y="655.50">&lt;engine::session::ExpandSurrou..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (207 samples, 16.61%)</title><rect x="33.9486%" y="629" width="16.6132%" height="15" fill="rgb(250,81,30)" fg:x="423" fg:w="207"/><text x="34.1986%" y="639.50">kernel::plugins::mw::Middl..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (207 samples, 16.61%)</title><rect x="33.9486%" y="613" width="16.6132%" height="15" fill="rgb(240,68,52)" fg:x="423" fg:w="207"/><text x="34.1986%" y="623.50">&lt;plugins_dynlib::DynamicMi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (207 samples, 16.61%)</title><rect x="33.9486%" y="597" width="16.6132%" height="15" fill="rgb(205,97,42)" fg:x="423" fg:w="207"/><text x="34.1986%" y="607.50">kernel::plugins::mw::Middl..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (207 samples, 16.61%)</title><rect x="33.9486%" y="581" width="16.6132%" height="15" fill="rgb(217,10,22)" fg:x="423" fg:w="207"/><text x="34.1986%" y="591.50">core::ops::function::FnOnc..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (207 samples, 16.61%)</title><rect x="33.9486%" y="565" width="16.6132%" height="15" fill="rgb(216,21,26)" fg:x="423" fg:w="207"/><text x="34.1986%" y="575.50">kernel::plugins::mw::Middl..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (207 samples, 16.61%)</title><rect x="33.9486%" y="549" width="16.6132%" height="15" fill="rgb(239,0,36)" fg:x="423" fg:w="207"/><text x="34.1986%" y="559.50">core::ops::function::FnOnc..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (207 samples, 16.61%)</title><rect x="33.9486%" y="533" width="16.6132%" height="15" fill="rgb(216,162,28)" fg:x="423" fg:w="207"/><text x="34.1986%" y="543.50">&lt;engine::session::state::S..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.4815%" y="517" width="0.0803%" height="15" fill="rgb(246,22,39)" fg:x="629" fg:w="1"/><text x="50.7315%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="50.7223%" y="661" width="0.0803%" height="15" fill="rgb(222,84,49)" fg:x="632" fg:w="1"/><text x="50.9723%" y="671.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="50.7223%" y="645" width="0.0803%" height="15" fill="rgb(250,38,34)" fg:x="632" fg:w="1"/><text x="50.9723%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="50.7223%" y="629" width="0.0803%" height="15" fill="rgb(236,0,38)" fg:x="632" fg:w="1"/><text x="50.9723%" y="639.50"></text></g><g><title>plugins_core::library::parser::word (1 samples, 0.08%)</title><rect x="50.7223%" y="613" width="0.0803%" height="15" fill="rgb(237,205,54)" fg:x="632" fg:w="1"/><text x="50.9723%" y="623.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (4 samples, 0.32%)</title><rect x="50.5618%" y="693" width="0.3210%" height="15" fill="rgb(221,80,35)" fg:x="630" fg:w="4"/><text x="50.8118%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="50.6421%" y="677" width="0.2408%" height="15" fill="rgb(237,204,22)" fg:x="631" fg:w="3"/><text x="50.8921%" y="687.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="50.8026%" y="661" width="0.0803%" height="15" fill="rgb(213,108,15)" fg:x="633" fg:w="1"/><text x="51.0526%" y="671.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="50.8026%" y="645" width="0.0803%" height="15" fill="rgb(251,187,9)" fg:x="633" fg:w="1"/><text x="51.0526%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="50.8026%" y="629" width="0.0803%" height="15" fill="rgb(250,61,9)" fg:x="633" fg:w="1"/><text x="51.0526%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.8828%" y="693" width="0.0803%" height="15" fill="rgb(230,131,33)" fg:x="634" fg:w="1"/><text x="51.1328%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.9631%" y="629" width="0.0803%" height="15" fill="rgb(239,117,11)" fg:x="635" fg:w="1"/><text x="51.2131%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.9631%" y="613" width="0.0803%" height="15" fill="rgb(222,112,44)" fg:x="635" fg:w="1"/><text x="51.2131%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.9631%" y="597" width="0.0803%" height="15" fill="rgb(251,33,25)" fg:x="635" fg:w="1"/><text x="51.2131%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.9631%" y="581" width="0.0803%" height="15" fill="rgb(208,171,34)" fg:x="635" fg:w="1"/><text x="51.2131%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.9631%" y="565" width="0.0803%" height="15" fill="rgb(250,166,54)" fg:x="635" fg:w="1"/><text x="51.2131%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.9631%" y="549" width="0.0803%" height="15" fill="rgb(212,148,2)" fg:x="635" fg:w="1"/><text x="51.2131%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.9631%" y="533" width="0.0803%" height="15" fill="rgb(224,92,39)" fg:x="635" fg:w="1"/><text x="51.2131%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.9631%" y="517" width="0.0803%" height="15" fill="rgb(250,28,16)" fg:x="635" fg:w="1"/><text x="51.2131%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.9631%" y="501" width="0.0803%" height="15" fill="rgb(227,128,26)" fg:x="635" fg:w="1"/><text x="51.2131%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.9631%" y="485" width="0.0803%" height="15" fill="rgb(248,66,7)" fg:x="635" fg:w="1"/><text x="51.2131%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.9631%" y="469" width="0.0803%" height="15" fill="rgb(215,124,51)" fg:x="635" fg:w="1"/><text x="51.2131%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.9631%" y="453" width="0.0803%" height="15" fill="rgb(207,91,1)" fg:x="635" fg:w="1"/><text x="51.2131%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.9631%" y="437" width="0.0803%" height="15" fill="rgb(217,207,38)" fg:x="635" fg:w="1"/><text x="51.2131%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.9631%" y="421" width="0.0803%" height="15" fill="rgb(240,118,9)" fg:x="635" fg:w="1"/><text x="51.2131%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.0433%" y="597" width="0.0803%" height="15" fill="rgb(224,147,4)" fg:x="636" fg:w="1"/><text x="51.2933%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.0433%" y="581" width="0.0803%" height="15" fill="rgb(205,105,13)" fg:x="636" fg:w="1"/><text x="51.2933%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="51.0433%" y="629" width="0.1605%" height="15" fill="rgb(251,78,39)" fg:x="636" fg:w="2"/><text x="51.2933%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="51.0433%" y="613" width="0.1605%" height="15" fill="rgb(225,60,44)" fg:x="636" fg:w="2"/><text x="51.2933%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.1236%" y="597" width="0.0803%" height="15" fill="rgb(221,228,40)" fg:x="637" fg:w="1"/><text x="51.3736%" y="607.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="51.2039%" y="629" width="0.0803%" height="15" fill="rgb(215,104,30)" fg:x="638" fg:w="1"/><text x="51.4539%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.2039%" y="613" width="0.0803%" height="15" fill="rgb(206,183,3)" fg:x="638" fg:w="1"/><text x="51.4539%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.2039%" y="597" width="0.0803%" height="15" fill="rgb(236,199,25)" fg:x="638" fg:w="1"/><text x="51.4539%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="51.2039%" y="581" width="0.0803%" height="15" fill="rgb(230,107,29)" fg:x="638" fg:w="1"/><text x="51.4539%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.2039%" y="565" width="0.0803%" height="15" fill="rgb(216,12,37)" fg:x="638" fg:w="1"/><text x="51.4539%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="51.2039%" y="549" width="0.0803%" height="15" fill="rgb(238,165,28)" fg:x="638" fg:w="1"/><text x="51.4539%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="51.2841%" y="533" width="0.0803%" height="15" fill="rgb(226,173,5)" fg:x="639" fg:w="1"/><text x="51.5341%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.2841%" y="517" width="0.0803%" height="15" fill="rgb(229,9,37)" fg:x="639" fg:w="1"/><text x="51.5341%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="51.2841%" y="501" width="0.0803%" height="15" fill="rgb(252,194,43)" fg:x="639" fg:w="1"/><text x="51.5341%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="51.2841%" y="581" width="0.2408%" height="15" fill="rgb(215,58,45)" fg:x="639" fg:w="3"/><text x="51.5341%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.2841%" y="565" width="0.2408%" height="15" fill="rgb(218,34,51)" fg:x="639" fg:w="3"/><text x="51.5341%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="51.2841%" y="549" width="0.2408%" height="15" fill="rgb(230,104,27)" fg:x="639" fg:w="3"/><text x="51.5341%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.3644%" y="533" width="0.1605%" height="15" fill="rgb(250,9,6)" fg:x="640" fg:w="2"/><text x="51.6144%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="51.3644%" y="517" width="0.1605%" height="15" fill="rgb(245,10,16)" fg:x="640" fg:w="2"/><text x="51.6144%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="51.4446%" y="501" width="0.0803%" height="15" fill="rgb(227,182,27)" fg:x="641" fg:w="1"/><text x="51.6946%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.4446%" y="485" width="0.0803%" height="15" fill="rgb(225,91,37)" fg:x="641" fg:w="1"/><text x="51.6946%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.4446%" y="469" width="0.0803%" height="15" fill="rgb(240,16,41)" fg:x="641" fg:w="1"/><text x="51.6946%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.32%)</title><rect x="51.2841%" y="629" width="0.3210%" height="15" fill="rgb(214,108,54)" fg:x="639" fg:w="4"/><text x="51.5341%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="51.2841%" y="613" width="0.3210%" height="15" fill="rgb(253,65,28)" fg:x="639" fg:w="4"/><text x="51.5341%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="51.2841%" y="597" width="0.3210%" height="15" fill="rgb(246,105,4)" fg:x="639" fg:w="4"/><text x="51.5341%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.5249%" y="581" width="0.0803%" height="15" fill="rgb(223,163,37)" fg:x="642" fg:w="1"/><text x="51.7749%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.5249%" y="565" width="0.0803%" height="15" fill="rgb(206,202,31)" fg:x="642" fg:w="1"/><text x="51.7749%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.5249%" y="549" width="0.0803%" height="15" fill="rgb(241,202,54)" fg:x="642" fg:w="1"/><text x="51.7749%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.5249%" y="533" width="0.0803%" height="15" fill="rgb(220,22,45)" fg:x="642" fg:w="1"/><text x="51.7749%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="51.7657%" y="517" width="0.0803%" height="15" fill="rgb(234,215,40)" fg:x="645" fg:w="1"/><text x="52.0157%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="51.9262%" y="469" width="0.1605%" height="15" fill="rgb(220,3,5)" fg:x="647" fg:w="2"/><text x="52.1762%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="51.9262%" y="453" width="0.1605%" height="15" fill="rgb(210,8,15)" fg:x="647" fg:w="2"/><text x="52.1762%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="52.0064%" y="437" width="0.0803%" height="15" fill="rgb(218,113,45)" fg:x="648" fg:w="1"/><text x="52.2564%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="52.0064%" y="421" width="0.0803%" height="15" fill="rgb(249,208,10)" fg:x="648" fg:w="1"/><text x="52.2564%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.0867%" y="469" width="0.0803%" height="15" fill="rgb(250,145,17)" fg:x="649" fg:w="1"/><text x="52.3367%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="52.0867%" y="453" width="0.0803%" height="15" fill="rgb(254,24,13)" fg:x="649" fg:w="1"/><text x="52.3367%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="51.6051%" y="565" width="0.6421%" height="15" fill="rgb(244,36,15)" fg:x="643" fg:w="8"/><text x="51.8551%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="51.6051%" y="549" width="0.6421%" height="15" fill="rgb(228,168,26)" fg:x="643" fg:w="8"/><text x="51.8551%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="51.7657%" y="533" width="0.4815%" height="15" fill="rgb(214,145,10)" fg:x="645" fg:w="6"/><text x="52.0157%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="51.8459%" y="517" width="0.4013%" height="15" fill="rgb(232,59,25)" fg:x="646" fg:w="5"/><text x="52.0959%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="51.9262%" y="501" width="0.3210%" height="15" fill="rgb(254,181,2)" fg:x="647" fg:w="4"/><text x="52.1762%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="51.9262%" y="485" width="0.3210%" height="15" fill="rgb(221,139,49)" fg:x="647" fg:w="4"/><text x="52.1762%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.1669%" y="469" width="0.0803%" height="15" fill="rgb(235,84,36)" fg:x="650" fg:w="1"/><text x="52.4169%" y="479.50"></text></g><g><title>engine::session::Session::load_entity (17 samples, 1.36%)</title><rect x="50.9631%" y="661" width="1.3644%" height="15" fill="rgb(254,32,49)" fg:x="635" fg:w="17"/><text x="51.2131%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (17 samples, 1.36%)</title><rect x="50.9631%" y="645" width="1.3644%" height="15" fill="rgb(214,136,49)" fg:x="635" fg:w="17"/><text x="51.2131%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.72%)</title><rect x="51.6051%" y="629" width="0.7223%" height="15" fill="rgb(206,113,54)" fg:x="643" fg:w="9"/><text x="51.8551%" y="639.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="51.6051%" y="613" width="0.7223%" height="15" fill="rgb(226,78,17)" fg:x="643" fg:w="9"/><text x="51.8551%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="51.6051%" y="597" width="0.7223%" height="15" fill="rgb(249,189,19)" fg:x="643" fg:w="9"/><text x="51.8551%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="51.6051%" y="581" width="0.7223%" height="15" fill="rgb(211,82,26)" fg:x="643" fg:w="9"/><text x="51.8551%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.2472%" y="565" width="0.0803%" height="15" fill="rgb(206,131,52)" fg:x="651" fg:w="1"/><text x="52.4972%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.3274%" y="629" width="0.1605%" height="15" fill="rgb(223,51,24)" fg:x="652" fg:w="2"/><text x="52.5774%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.3274%" y="613" width="0.1605%" height="15" fill="rgb(235,93,36)" fg:x="652" fg:w="2"/><text x="52.5774%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.3274%" y="597" width="0.1605%" height="15" fill="rgb(219,118,14)" fg:x="652" fg:w="2"/><text x="52.5774%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.3274%" y="581" width="0.1605%" height="15" fill="rgb(240,145,10)" fg:x="652" fg:w="2"/><text x="52.5774%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4077%" y="565" width="0.0803%" height="15" fill="rgb(241,104,15)" fg:x="653" fg:w="1"/><text x="52.6577%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4077%" y="549" width="0.0803%" height="15" fill="rgb(248,117,21)" fg:x="653" fg:w="1"/><text x="52.6577%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.4077%" y="533" width="0.0803%" height="15" fill="rgb(250,184,34)" fg:x="653" fg:w="1"/><text x="52.6577%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.4077%" y="517" width="0.0803%" height="15" fill="rgb(218,169,23)" fg:x="653" fg:w="1"/><text x="52.6577%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.4077%" y="501" width="0.0803%" height="15" fill="rgb(214,33,53)" fg:x="653" fg:w="1"/><text x="52.6577%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="52.4077%" y="485" width="0.0803%" height="15" fill="rgb(239,78,4)" fg:x="653" fg:w="1"/><text x="52.6577%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="52.4077%" y="469" width="0.0803%" height="15" fill="rgb(250,25,23)" fg:x="653" fg:w="1"/><text x="52.6577%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.4880%" y="549" width="0.0803%" height="15" fill="rgb(220,205,51)" fg:x="654" fg:w="1"/><text x="52.7380%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.4880%" y="533" width="0.0803%" height="15" fill="rgb(252,115,2)" fg:x="654" fg:w="1"/><text x="52.7380%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.4880%" y="565" width="0.1605%" height="15" fill="rgb(222,106,48)" fg:x="654" fg:w="2"/><text x="52.7380%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.5682%" y="549" width="0.0803%" height="15" fill="rgb(225,77,33)" fg:x="655" fg:w="1"/><text x="52.8182%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.5682%" y="533" width="0.0803%" height="15" fill="rgb(250,135,2)" fg:x="655" fg:w="1"/><text x="52.8182%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.5682%" y="517" width="0.0803%" height="15" fill="rgb(221,217,54)" fg:x="655" fg:w="1"/><text x="52.8182%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.5682%" y="501" width="0.0803%" height="15" fill="rgb(233,12,6)" fg:x="655" fg:w="1"/><text x="52.8182%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.5682%" y="485" width="0.0803%" height="15" fill="rgb(251,10,27)" fg:x="655" fg:w="1"/><text x="52.8182%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.5682%" y="469" width="0.0803%" height="15" fill="rgb(214,20,35)" fg:x="655" fg:w="1"/><text x="52.8182%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.5682%" y="453" width="0.0803%" height="15" fill="rgb(249,13,18)" fg:x="655" fg:w="1"/><text x="52.8182%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.5682%" y="437" width="0.0803%" height="15" fill="rgb(251,115,18)" fg:x="655" fg:w="1"/><text x="52.8182%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.5682%" y="421" width="0.0803%" height="15" fill="rgb(219,91,11)" fg:x="655" fg:w="1"/><text x="52.8182%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.5682%" y="405" width="0.0803%" height="15" fill="rgb(238,130,14)" fg:x="655" fg:w="1"/><text x="52.8182%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.5682%" y="389" width="0.0803%" height="15" fill="rgb(216,197,46)" fg:x="655" fg:w="1"/><text x="52.8182%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.5682%" y="373" width="0.0803%" height="15" fill="rgb(239,113,46)" fg:x="655" fg:w="1"/><text x="52.8182%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.5682%" y="357" width="0.0803%" height="15" fill="rgb(220,76,52)" fg:x="655" fg:w="1"/><text x="52.8182%" y="367.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="52.5682%" y="341" width="0.0803%" height="15" fill="rgb(247,167,28)" fg:x="655" fg:w="1"/><text x="52.8182%" y="351.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="52.5682%" y="325" width="0.0803%" height="15" fill="rgb(228,6,44)" fg:x="655" fg:w="1"/><text x="52.8182%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="52.4880%" y="581" width="0.2408%" height="15" fill="rgb(214,75,23)" fg:x="654" fg:w="3"/><text x="52.7380%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6485%" y="565" width="0.0803%" height="15" fill="rgb(241,211,28)" fg:x="656" fg:w="1"/><text x="52.8985%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6485%" y="549" width="0.0803%" height="15" fill="rgb(216,147,39)" fg:x="656" fg:w="1"/><text x="52.8985%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.6485%" y="533" width="0.0803%" height="15" fill="rgb(237,121,45)" fg:x="656" fg:w="1"/><text x="52.8985%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.6485%" y="517" width="0.0803%" height="15" fill="rgb(214,115,15)" fg:x="656" fg:w="1"/><text x="52.8985%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.6485%" y="501" width="0.0803%" height="15" fill="rgb(253,132,27)" fg:x="656" fg:w="1"/><text x="52.8985%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6485%" y="485" width="0.0803%" height="15" fill="rgb(222,56,1)" fg:x="656" fg:w="1"/><text x="52.8985%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6485%" y="469" width="0.0803%" height="15" fill="rgb(216,99,46)" fg:x="656" fg:w="1"/><text x="52.8985%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.6485%" y="453" width="0.0803%" height="15" fill="rgb(232,1,9)" fg:x="656" fg:w="1"/><text x="52.8985%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.6485%" y="437" width="0.0803%" height="15" fill="rgb(215,41,52)" fg:x="656" fg:w="1"/><text x="52.8985%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.6485%" y="421" width="0.0803%" height="15" fill="rgb(223,107,41)" fg:x="656" fg:w="1"/><text x="52.8985%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.6485%" y="405" width="0.0803%" height="15" fill="rgb(208,151,32)" fg:x="656" fg:w="1"/><text x="52.8985%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.6485%" y="389" width="0.0803%" height="15" fill="rgb(229,32,3)" fg:x="656" fg:w="1"/><text x="52.8985%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.8090%" y="517" width="0.0803%" height="15" fill="rgb(234,186,36)" fg:x="658" fg:w="1"/><text x="53.0590%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8090%" y="501" width="0.0803%" height="15" fill="rgb(216,9,5)" fg:x="658" fg:w="1"/><text x="53.0590%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.8090%" y="485" width="0.0803%" height="15" fill="rgb(226,151,21)" fg:x="658" fg:w="1"/><text x="53.0590%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.8090%" y="469" width="0.0803%" height="15" fill="rgb(210,130,28)" fg:x="658" fg:w="1"/><text x="53.0590%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.8090%" y="453" width="0.0803%" height="15" fill="rgb(239,58,31)" fg:x="658" fg:w="1"/><text x="53.0590%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.8090%" y="437" width="0.0803%" height="15" fill="rgb(213,14,0)" fg:x="658" fg:w="1"/><text x="53.0590%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.8090%" y="421" width="0.0803%" height="15" fill="rgb(228,97,38)" fg:x="658" fg:w="1"/><text x="53.0590%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.8090%" y="405" width="0.0803%" height="15" fill="rgb(248,9,13)" fg:x="658" fg:w="1"/><text x="53.0590%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.8090%" y="389" width="0.0803%" height="15" fill="rgb(233,149,17)" fg:x="658" fg:w="1"/><text x="53.0590%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.8090%" y="373" width="0.0803%" height="15" fill="rgb(233,127,53)" fg:x="658" fg:w="1"/><text x="53.0590%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.8090%" y="357" width="0.0803%" height="15" fill="rgb(207,120,37)" fg:x="658" fg:w="1"/><text x="53.0590%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.8090%" y="341" width="0.0803%" height="15" fill="rgb(210,65,38)" fg:x="658" fg:w="1"/><text x="53.0590%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="52.8090%" y="533" width="0.2408%" height="15" fill="rgb(229,206,39)" fg:x="658" fg:w="3"/><text x="53.0590%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.8892%" y="517" width="0.1605%" height="15" fill="rgb(237,11,35)" fg:x="659" fg:w="2"/><text x="53.1392%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.9695%" y="501" width="0.0803%" height="15" fill="rgb(237,159,38)" fg:x="660" fg:w="1"/><text x="53.2195%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.9695%" y="485" width="0.0803%" height="15" fill="rgb(239,79,36)" fg:x="660" fg:w="1"/><text x="53.2195%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="53.0498%" y="533" width="0.1605%" height="15" fill="rgb(231,163,51)" fg:x="661" fg:w="2"/><text x="53.2998%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.1300%" y="517" width="0.0803%" height="15" fill="rgb(226,68,29)" fg:x="662" fg:w="1"/><text x="53.3800%" y="527.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="53.1300%" y="501" width="0.0803%" height="15" fill="rgb(250,192,3)" fg:x="662" fg:w="1"/><text x="53.3800%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="53.1300%" y="485" width="0.0803%" height="15" fill="rgb(206,11,13)" fg:x="662" fg:w="1"/><text x="53.3800%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="53.1300%" y="469" width="0.0803%" height="15" fill="rgb(234,128,26)" fg:x="662" fg:w="1"/><text x="53.3800%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="53.1300%" y="453" width="0.0803%" height="15" fill="rgb(226,134,12)" fg:x="662" fg:w="1"/><text x="53.3800%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.1300%" y="437" width="0.0803%" height="15" fill="rgb(240,60,15)" fg:x="662" fg:w="1"/><text x="53.3800%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.1300%" y="421" width="0.0803%" height="15" fill="rgb(222,112,11)" fg:x="662" fg:w="1"/><text x="53.3800%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="52.7287%" y="581" width="0.6421%" height="15" fill="rgb(231,207,44)" fg:x="657" fg:w="8"/><text x="52.9787%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.64%)</title><rect x="52.7287%" y="565" width="0.6421%" height="15" fill="rgb(250,222,54)" fg:x="657" fg:w="8"/><text x="52.9787%" y="575.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.56%)</title><rect x="52.8090%" y="549" width="0.5618%" height="15" fill="rgb(243,223,15)" fg:x="658" fg:w="7"/><text x="53.0590%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="53.2103%" y="533" width="0.1605%" height="15" fill="rgb(239,2,5)" fg:x="663" fg:w="2"/><text x="53.4603%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="53.2103%" y="517" width="0.1605%" height="15" fill="rgb(241,83,27)" fg:x="663" fg:w="2"/><text x="53.4603%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.2905%" y="501" width="0.0803%" height="15" fill="rgb(223,175,51)" fg:x="664" fg:w="1"/><text x="53.5405%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="53.2905%" y="485" width="0.0803%" height="15" fill="rgb(209,11,47)" fg:x="664" fg:w="1"/><text x="53.5405%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="53.2905%" y="469" width="0.0803%" height="15" fill="rgb(249,60,43)" fg:x="664" fg:w="1"/><text x="53.5405%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.2905%" y="453" width="0.0803%" height="15" fill="rgb(244,84,47)" fg:x="664" fg:w="1"/><text x="53.5405%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.3708%" y="501" width="0.0803%" height="15" fill="rgb(241,110,24)" fg:x="665" fg:w="1"/><text x="53.6208%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 1.04%)</title><rect x="52.4880%" y="629" width="1.0433%" height="15" fill="rgb(236,79,1)" fg:x="654" fg:w="13"/><text x="52.7380%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.04%)</title><rect x="52.4880%" y="613" width="1.0433%" height="15" fill="rgb(210,152,4)" fg:x="654" fg:w="13"/><text x="52.7380%" y="623.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (13 samples, 1.04%)</title><rect x="52.4880%" y="597" width="1.0433%" height="15" fill="rgb(218,71,19)" fg:x="654" fg:w="13"/><text x="52.7380%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="53.3708%" y="581" width="0.1605%" height="15" fill="rgb(207,161,51)" fg:x="665" fg:w="2"/><text x="53.6208%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="53.3708%" y="565" width="0.1605%" height="15" fill="rgb(219,84,54)" fg:x="665" fg:w="2"/><text x="53.6208%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="53.3708%" y="549" width="0.1605%" height="15" fill="rgb(243,172,34)" fg:x="665" fg:w="2"/><text x="53.6208%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="53.3708%" y="533" width="0.1605%" height="15" fill="rgb(233,181,1)" fg:x="665" fg:w="2"/><text x="53.6208%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="53.3708%" y="517" width="0.1605%" height="15" fill="rgb(236,21,18)" fg:x="665" fg:w="2"/><text x="53.6208%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="53.4510%" y="501" width="0.0803%" height="15" fill="rgb(244,165,15)" fg:x="666" fg:w="1"/><text x="53.7010%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="53.4510%" y="485" width="0.0803%" height="15" fill="rgb(235,75,19)" fg:x="666" fg:w="1"/><text x="53.7010%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="53.5313%" y="597" width="0.0803%" height="15" fill="rgb(217,229,29)" fg:x="667" fg:w="1"/><text x="53.7813%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.5313%" y="581" width="0.0803%" height="15" fill="rgb(250,200,19)" fg:x="667" fg:w="1"/><text x="53.7813%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.5313%" y="565" width="0.0803%" height="15" fill="rgb(218,195,36)" fg:x="667" fg:w="1"/><text x="53.7813%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.5313%" y="549" width="0.0803%" height="15" fill="rgb(206,183,32)" fg:x="667" fg:w="1"/><text x="53.7813%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="53.5313%" y="533" width="0.0803%" height="15" fill="rgb(235,151,53)" fg:x="667" fg:w="1"/><text x="53.7813%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="53.5313%" y="517" width="0.0803%" height="15" fill="rgb(244,120,37)" fg:x="667" fg:w="1"/><text x="53.7813%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.5313%" y="501" width="0.0803%" height="15" fill="rgb(209,96,41)" fg:x="667" fg:w="1"/><text x="53.7813%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.6116%" y="565" width="0.0803%" height="15" fill="rgb(208,229,20)" fg:x="668" fg:w="1"/><text x="53.8616%" y="575.50"></text></g><g><title>engine::session::internal::Added::find_refs (18 samples, 1.44%)</title><rect x="52.3274%" y="661" width="1.4446%" height="15" fill="rgb(208,153,33)" fg:x="652" fg:w="18"/><text x="52.5774%" y="671.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (18 samples, 1.44%)</title><rect x="52.3274%" y="645" width="1.4446%" height="15" fill="rgb(223,196,8)" fg:x="652" fg:w="18"/><text x="52.5774%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="53.5313%" y="629" width="0.2408%" height="15" fill="rgb(241,75,49)" fg:x="667" fg:w="3"/><text x="53.7813%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="53.5313%" y="613" width="0.2408%" height="15" fill="rgb(212,52,42)" fg:x="667" fg:w="3"/><text x="53.7813%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="53.6116%" y="597" width="0.1605%" height="15" fill="rgb(220,148,43)" fg:x="668" fg:w="2"/><text x="53.8616%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="53.6116%" y="581" width="0.1605%" height="15" fill="rgb(228,88,15)" fg:x="668" fg:w="2"/><text x="53.8616%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.6918%" y="565" width="0.0803%" height="15" fill="rgb(213,87,14)" fg:x="669" fg:w="1"/><text x="53.9418%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.6918%" y="549" width="0.0803%" height="15" fill="rgb(220,198,31)" fg:x="669" fg:w="1"/><text x="53.9418%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.7721%" y="645" width="0.1605%" height="15" fill="rgb(223,165,38)" fg:x="670" fg:w="2"/><text x="54.0221%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.8523%" y="629" width="0.0803%" height="15" fill="rgb(247,56,48)" fg:x="671" fg:w="1"/><text x="54.1023%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.8523%" y="613" width="0.0803%" height="15" fill="rgb(222,150,13)" fg:x="671" fg:w="1"/><text x="54.1023%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.9326%" y="613" width="0.0803%" height="15" fill="rgb(218,214,11)" fg:x="672" fg:w="1"/><text x="54.1826%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.9326%" y="597" width="0.0803%" height="15" fill="rgb(246,111,16)" fg:x="672" fg:w="1"/><text x="54.1826%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.9326%" y="581" width="0.0803%" height="15" fill="rgb(250,127,26)" fg:x="672" fg:w="1"/><text x="54.1826%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.9326%" y="565" width="0.0803%" height="15" fill="rgb(237,156,23)" fg:x="672" fg:w="1"/><text x="54.1826%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.9326%" y="549" width="0.0803%" height="15" fill="rgb(215,143,51)" fg:x="672" fg:w="1"/><text x="54.1826%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.9326%" y="533" width="0.0803%" height="15" fill="rgb(209,119,39)" fg:x="672" fg:w="1"/><text x="54.1826%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.9326%" y="517" width="0.0803%" height="15" fill="rgb(228,181,16)" fg:x="672" fg:w="1"/><text x="54.1826%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.9326%" y="501" width="0.0803%" height="15" fill="rgb(236,113,51)" fg:x="672" fg:w="1"/><text x="54.1826%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.9326%" y="485" width="0.0803%" height="15" fill="rgb(223,132,1)" fg:x="672" fg:w="1"/><text x="54.1826%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.9326%" y="469" width="0.0803%" height="15" fill="rgb(227,4,54)" fg:x="672" fg:w="1"/><text x="54.1826%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.9326%" y="453" width="0.0803%" height="15" fill="rgb(254,72,52)" fg:x="672" fg:w="1"/><text x="54.1826%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.9326%" y="437" width="0.0803%" height="15" fill="rgb(252,104,52)" fg:x="672" fg:w="1"/><text x="54.1826%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.9326%" y="421" width="0.0803%" height="15" fill="rgb(251,146,26)" fg:x="672" fg:w="1"/><text x="54.1826%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.9326%" y="405" width="0.0803%" height="15" fill="rgb(214,146,19)" fg:x="672" fg:w="1"/><text x="54.1826%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.9326%" y="389" width="0.0803%" height="15" fill="rgb(242,222,1)" fg:x="672" fg:w="1"/><text x="54.1826%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="53.9326%" y="645" width="0.1605%" height="15" fill="rgb(220,178,32)" fg:x="672" fg:w="2"/><text x="54.1826%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="53.9326%" y="629" width="0.1605%" height="15" fill="rgb(220,50,48)" fg:x="672" fg:w="2"/><text x="54.1826%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.0128%" y="613" width="0.0803%" height="15" fill="rgb(207,117,22)" fg:x="673" fg:w="1"/><text x="54.2628%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.0128%" y="597" width="0.0803%" height="15" fill="rgb(247,195,50)" fg:x="673" fg:w="1"/><text x="54.2628%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="54.0128%" y="581" width="0.0803%" height="15" fill="rgb(206,50,39)" fg:x="673" fg:w="1"/><text x="54.2628%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.0128%" y="565" width="0.0803%" height="15" fill="rgb(236,141,29)" fg:x="673" fg:w="1"/><text x="54.2628%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.0128%" y="549" width="0.0803%" height="15" fill="rgb(247,18,44)" fg:x="673" fg:w="1"/><text x="54.2628%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.0128%" y="533" width="0.0803%" height="15" fill="rgb(243,179,46)" fg:x="673" fg:w="1"/><text x="54.2628%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.0128%" y="517" width="0.0803%" height="15" fill="rgb(241,178,53)" fg:x="673" fg:w="1"/><text x="54.2628%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.0931%" y="645" width="0.0803%" height="15" fill="rgb(236,100,9)" fg:x="674" fg:w="1"/><text x="54.3431%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.3339%" y="565" width="0.0803%" height="15" fill="rgb(208,180,29)" fg:x="677" fg:w="1"/><text x="54.5839%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.4141%" y="517" width="0.0803%" height="15" fill="rgb(241,204,36)" fg:x="678" fg:w="1"/><text x="54.6641%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="54.4141%" y="549" width="0.1605%" height="15" fill="rgb(248,106,5)" fg:x="678" fg:w="2"/><text x="54.6641%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="54.4141%" y="533" width="0.1605%" height="15" fill="rgb(245,13,49)" fg:x="678" fg:w="2"/><text x="54.6641%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.4944%" y="517" width="0.0803%" height="15" fill="rgb(221,209,34)" fg:x="679" fg:w="1"/><text x="54.7444%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.4944%" y="501" width="0.0803%" height="15" fill="rgb(224,83,31)" fg:x="679" fg:w="1"/><text x="54.7444%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="54.4944%" y="485" width="0.0803%" height="15" fill="rgb(218,63,22)" fg:x="679" fg:w="1"/><text x="54.7444%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.48%)</title><rect x="54.1734%" y="645" width="0.4815%" height="15" fill="rgb(214,167,5)" fg:x="675" fg:w="6"/><text x="54.4234%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="54.2536%" y="629" width="0.4013%" height="15" fill="rgb(243,13,0)" fg:x="676" fg:w="5"/><text x="54.5036%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="54.2536%" y="613" width="0.4013%" height="15" fill="rgb(237,20,46)" fg:x="676" fg:w="5"/><text x="54.5036%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="54.3339%" y="597" width="0.3210%" height="15" fill="rgb(240,94,48)" fg:x="677" fg:w="4"/><text x="54.5839%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="54.3339%" y="581" width="0.3210%" height="15" fill="rgb(205,160,17)" fg:x="677" fg:w="4"/><text x="54.5839%" y="591.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="54.4141%" y="565" width="0.2408%" height="15" fill="rgb(234,42,33)" fg:x="678" fg:w="3"/><text x="54.6641%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.5746%" y="549" width="0.0803%" height="15" fill="rgb(215,166,5)" fg:x="680" fg:w="1"/><text x="54.8246%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.5746%" y="533" width="0.0803%" height="15" fill="rgb(215,9,6)" fg:x="680" fg:w="1"/><text x="54.8246%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="54.5746%" y="517" width="0.0803%" height="15" fill="rgb(212,53,6)" fg:x="680" fg:w="1"/><text x="54.8246%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.5746%" y="501" width="0.0803%" height="15" fill="rgb(249,157,19)" fg:x="680" fg:w="1"/><text x="54.8246%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.5746%" y="485" width="0.0803%" height="15" fill="rgb(222,212,45)" fg:x="680" fg:w="1"/><text x="54.8246%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="54.5746%" y="469" width="0.0803%" height="15" fill="rgb(232,155,17)" fg:x="680" fg:w="1"/><text x="54.8246%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.5746%" y="453" width="0.0803%" height="15" fill="rgb(212,159,50)" fg:x="680" fg:w="1"/><text x="54.8246%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.5746%" y="437" width="0.0803%" height="15" fill="rgb(247,71,8)" fg:x="680" fg:w="1"/><text x="54.8246%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.5746%" y="421" width="0.0803%" height="15" fill="rgb(239,128,29)" fg:x="680" fg:w="1"/><text x="54.8246%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.7352%" y="501" width="0.0803%" height="15" fill="rgb(227,117,11)" fg:x="682" fg:w="1"/><text x="54.9852%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.7352%" y="485" width="0.0803%" height="15" fill="rgb(247,183,4)" fg:x="682" fg:w="1"/><text x="54.9852%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.7352%" y="469" width="0.0803%" height="15" fill="rgb(211,161,41)" fg:x="682" fg:w="1"/><text x="54.9852%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.7352%" y="453" width="0.0803%" height="15" fill="rgb(250,157,52)" fg:x="682" fg:w="1"/><text x="54.9852%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="54.7352%" y="517" width="0.1605%" height="15" fill="rgb(249,118,26)" fg:x="682" fg:w="2"/><text x="54.9852%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.8154%" y="501" width="0.0803%" height="15" fill="rgb(234,52,37)" fg:x="683" fg:w="1"/><text x="55.0654%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.8154%" y="485" width="0.0803%" height="15" fill="rgb(237,188,45)" fg:x="683" fg:w="1"/><text x="55.0654%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.8154%" y="469" width="0.0803%" height="15" fill="rgb(241,3,40)" fg:x="683" fg:w="1"/><text x="55.0654%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.8154%" y="453" width="0.0803%" height="15" fill="rgb(246,192,7)" fg:x="683" fg:w="1"/><text x="55.0654%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.8154%" y="437" width="0.0803%" height="15" fill="rgb(206,168,17)" fg:x="683" fg:w="1"/><text x="55.0654%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="54.6549%" y="549" width="0.3210%" height="15" fill="rgb(208,124,33)" fg:x="681" fg:w="4"/><text x="54.9049%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="54.7352%" y="533" width="0.2408%" height="15" fill="rgb(226,186,11)" fg:x="682" fg:w="3"/><text x="54.9852%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.8957%" y="517" width="0.0803%" height="15" fill="rgb(218,223,1)" fg:x="684" fg:w="1"/><text x="55.1457%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.8957%" y="501" width="0.0803%" height="15" fill="rgb(254,65,21)" fg:x="684" fg:w="1"/><text x="55.1457%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="54.8957%" y="485" width="0.0803%" height="15" fill="rgb(239,63,32)" fg:x="684" fg:w="1"/><text x="55.1457%" y="495.50"></text></g><g><title>engine::session::Session::load_entity (51 samples, 4.09%)</title><rect x="50.9631%" y="677" width="4.0931%" height="15" fill="rgb(219,85,29)" fg:x="635" fg:w="51"/><text x="51.2131%" y="687.50">engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.28%)</title><rect x="53.7721%" y="661" width="1.2841%" height="15" fill="rgb(246,74,32)" fg:x="670" fg:w="16"/><text x="54.0221%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="54.6549%" y="645" width="0.4013%" height="15" fill="rgb(251,20,52)" fg:x="681" fg:w="5"/><text x="54.9049%" y="655.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="54.6549%" y="629" width="0.4013%" height="15" fill="rgb(222,160,46)" fg:x="681" fg:w="5"/><text x="54.9049%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="54.6549%" y="613" width="0.4013%" height="15" fill="rgb(230,68,24)" fg:x="681" fg:w="5"/><text x="54.9049%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="54.6549%" y="597" width="0.4013%" height="15" fill="rgb(233,83,32)" fg:x="681" fg:w="5"/><text x="54.9049%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="54.6549%" y="581" width="0.4013%" height="15" fill="rgb(253,79,36)" fg:x="681" fg:w="5"/><text x="54.9049%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="54.6549%" y="565" width="0.4013%" height="15" fill="rgb(224,125,51)" fg:x="681" fg:w="5"/><text x="54.9049%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.9759%" y="549" width="0.0803%" height="15" fill="rgb(254,158,3)" fg:x="685" fg:w="1"/><text x="55.2259%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.1364%" y="597" width="0.0803%" height="15" fill="rgb(243,226,3)" fg:x="687" fg:w="1"/><text x="55.3864%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.1364%" y="581" width="0.0803%" height="15" fill="rgb(208,37,10)" fg:x="687" fg:w="1"/><text x="55.3864%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.1364%" y="565" width="0.0803%" height="15" fill="rgb(227,35,6)" fg:x="687" fg:w="1"/><text x="55.3864%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.1364%" y="549" width="0.0803%" height="15" fill="rgb(236,35,38)" fg:x="687" fg:w="1"/><text x="55.3864%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.1364%" y="533" width="0.0803%" height="15" fill="rgb(247,165,26)" fg:x="687" fg:w="1"/><text x="55.3864%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.1364%" y="517" width="0.0803%" height="15" fill="rgb(251,131,20)" fg:x="687" fg:w="1"/><text x="55.3864%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.1364%" y="501" width="0.0803%" height="15" fill="rgb(248,168,52)" fg:x="687" fg:w="1"/><text x="55.3864%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.1364%" y="485" width="0.0803%" height="15" fill="rgb(241,220,45)" fg:x="687" fg:w="1"/><text x="55.3864%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.1364%" y="469" width="0.0803%" height="15" fill="rgb(240,85,44)" fg:x="687" fg:w="1"/><text x="55.3864%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.1364%" y="453" width="0.0803%" height="15" fill="rgb(223,69,47)" fg:x="687" fg:w="1"/><text x="55.3864%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.1364%" y="437" width="0.0803%" height="15" fill="rgb(221,209,17)" fg:x="687" fg:w="1"/><text x="55.3864%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.1364%" y="421" width="0.0803%" height="15" fill="rgb(224,194,24)" fg:x="687" fg:w="1"/><text x="55.3864%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.1364%" y="405" width="0.0803%" height="15" fill="rgb(249,43,24)" fg:x="687" fg:w="1"/><text x="55.3864%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.2167%" y="597" width="0.0803%" height="15" fill="rgb(245,78,29)" fg:x="688" fg:w="1"/><text x="55.4667%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="55.1364%" y="613" width="0.2408%" height="15" fill="rgb(241,167,34)" fg:x="687" fg:w="3"/><text x="55.3864%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="55.2970%" y="597" width="0.0803%" height="15" fill="rgb(225,91,27)" fg:x="689" fg:w="1"/><text x="55.5470%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="55.2970%" y="581" width="0.0803%" height="15" fill="rgb(249,82,49)" fg:x="689" fg:w="1"/><text x="55.5470%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="55.0562%" y="645" width="0.4013%" height="15" fill="rgb(215,90,36)" fg:x="686" fg:w="5"/><text x="55.3062%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="55.1364%" y="629" width="0.3210%" height="15" fill="rgb(209,128,1)" fg:x="687" fg:w="4"/><text x="55.3864%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.3772%" y="613" width="0.0803%" height="15" fill="rgb(233,184,1)" fg:x="690" fg:w="1"/><text x="55.6272%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.3772%" y="597" width="0.0803%" height="15" fill="rgb(240,59,32)" fg:x="690" fg:w="1"/><text x="55.6272%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.3772%" y="581" width="0.0803%" height="15" fill="rgb(249,163,0)" fg:x="690" fg:w="1"/><text x="55.6272%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.3772%" y="565" width="0.0803%" height="15" fill="rgb(249,220,13)" fg:x="690" fg:w="1"/><text x="55.6272%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.3772%" y="549" width="0.0803%" height="15" fill="rgb(235,127,52)" fg:x="690" fg:w="1"/><text x="55.6272%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.3772%" y="533" width="0.0803%" height="15" fill="rgb(229,172,26)" fg:x="690" fg:w="1"/><text x="55.6272%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.3772%" y="517" width="0.0803%" height="15" fill="rgb(217,37,29)" fg:x="690" fg:w="1"/><text x="55.6272%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.3772%" y="501" width="0.0803%" height="15" fill="rgb(208,66,47)" fg:x="690" fg:w="1"/><text x="55.6272%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.3772%" y="485" width="0.0803%" height="15" fill="rgb(221,99,19)" fg:x="690" fg:w="1"/><text x="55.6272%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.3772%" y="469" width="0.0803%" height="15" fill="rgb(214,149,49)" fg:x="690" fg:w="1"/><text x="55.6272%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.3772%" y="453" width="0.0803%" height="15" fill="rgb(229,91,37)" fg:x="690" fg:w="1"/><text x="55.6272%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.3772%" y="437" width="0.0803%" height="15" fill="rgb(207,159,48)" fg:x="690" fg:w="1"/><text x="55.6272%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.4575%" y="565" width="0.0803%" height="15" fill="rgb(209,125,46)" fg:x="691" fg:w="1"/><text x="55.7075%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.4575%" y="549" width="0.0803%" height="15" fill="rgb(211,188,18)" fg:x="691" fg:w="1"/><text x="55.7075%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.4575%" y="533" width="0.0803%" height="15" fill="rgb(207,203,34)" fg:x="691" fg:w="1"/><text x="55.7075%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.4575%" y="517" width="0.0803%" height="15" fill="rgb(245,182,16)" fg:x="691" fg:w="1"/><text x="55.7075%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.4575%" y="501" width="0.0803%" height="15" fill="rgb(210,66,30)" fg:x="691" fg:w="1"/><text x="55.7075%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.4575%" y="485" width="0.0803%" height="15" fill="rgb(230,110,14)" fg:x="691" fg:w="1"/><text x="55.7075%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.4575%" y="469" width="0.0803%" height="15" fill="rgb(242,198,32)" fg:x="691" fg:w="1"/><text x="55.7075%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.4575%" y="453" width="0.0803%" height="15" fill="rgb(213,45,23)" fg:x="691" fg:w="1"/><text x="55.7075%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.4575%" y="437" width="0.0803%" height="15" fill="rgb(205,76,9)" fg:x="691" fg:w="1"/><text x="55.7075%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.4575%" y="421" width="0.0803%" height="15" fill="rgb(250,200,25)" fg:x="691" fg:w="1"/><text x="55.7075%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.4575%" y="405" width="0.0803%" height="15" fill="rgb(221,161,23)" fg:x="691" fg:w="1"/><text x="55.7075%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.4575%" y="389" width="0.0803%" height="15" fill="rgb(226,135,48)" fg:x="691" fg:w="1"/><text x="55.7075%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.4575%" y="597" width="0.1605%" height="15" fill="rgb(228,33,6)" fg:x="691" fg:w="2"/><text x="55.7075%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.4575%" y="581" width="0.1605%" height="15" fill="rgb(237,224,9)" fg:x="691" fg:w="2"/><text x="55.7075%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.5377%" y="565" width="0.0803%" height="15" fill="rgb(251,61,40)" fg:x="692" fg:w="1"/><text x="55.7877%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.5377%" y="549" width="0.0803%" height="15" fill="rgb(220,222,2)" fg:x="692" fg:w="1"/><text x="55.7877%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.5377%" y="533" width="0.0803%" height="15" fill="rgb(238,4,8)" fg:x="692" fg:w="1"/><text x="55.7877%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.5377%" y="517" width="0.0803%" height="15" fill="rgb(240,153,3)" fg:x="692" fg:w="1"/><text x="55.7877%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.5377%" y="501" width="0.0803%" height="15" fill="rgb(245,29,24)" fg:x="692" fg:w="1"/><text x="55.7877%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.5377%" y="485" width="0.0803%" height="15" fill="rgb(231,220,37)" fg:x="692" fg:w="1"/><text x="55.7877%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.5377%" y="469" width="0.0803%" height="15" fill="rgb(245,33,10)" fg:x="692" fg:w="1"/><text x="55.7877%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.5377%" y="453" width="0.0803%" height="15" fill="rgb(220,227,43)" fg:x="692" fg:w="1"/><text x="55.7877%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.5377%" y="437" width="0.0803%" height="15" fill="rgb(215,183,54)" fg:x="692" fg:w="1"/><text x="55.7877%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.5377%" y="421" width="0.0803%" height="15" fill="rgb(242,80,26)" fg:x="692" fg:w="1"/><text x="55.7877%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.5377%" y="405" width="0.0803%" height="15" fill="rgb(206,172,49)" fg:x="692" fg:w="1"/><text x="55.7877%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.5377%" y="389" width="0.0803%" height="15" fill="rgb(249,0,10)" fg:x="692" fg:w="1"/><text x="55.7877%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.5377%" y="373" width="0.0803%" height="15" fill="rgb(246,171,19)" fg:x="692" fg:w="1"/><text x="55.7877%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.5377%" y="357" width="0.0803%" height="15" fill="rgb(236,25,43)" fg:x="692" fg:w="1"/><text x="55.7877%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.6180%" y="549" width="0.0803%" height="15" fill="rgb(225,146,20)" fg:x="693" fg:w="1"/><text x="55.8680%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.6982%" y="517" width="0.0803%" height="15" fill="rgb(243,50,39)" fg:x="694" fg:w="1"/><text x="55.9482%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::error::Error&gt; (1 samples, 0.08%)</title><rect x="55.7785%" y="501" width="0.0803%" height="15" fill="rgb(239,153,27)" fg:x="695" fg:w="1"/><text x="56.0285%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="55.6982%" y="549" width="0.2408%" height="15" fill="rgb(208,164,31)" fg:x="694" fg:w="3"/><text x="55.9482%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="55.6982%" y="533" width="0.2408%" height="15" fill="rgb(231,32,38)" fg:x="694" fg:w="3"/><text x="55.9482%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="55.7785%" y="517" width="0.1605%" height="15" fill="rgb(247,158,12)" fg:x="695" fg:w="2"/><text x="56.0285%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.8587%" y="501" width="0.0803%" height="15" fill="rgb(254,126,16)" fg:x="696" fg:w="1"/><text x="56.1087%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.8587%" y="485" width="0.0803%" height="15" fill="rgb(246,12,32)" fg:x="696" fg:w="1"/><text x="56.1087%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="55.8587%" y="469" width="0.0803%" height="15" fill="rgb(245,190,44)" fg:x="696" fg:w="1"/><text x="56.1087%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="55.8587%" y="453" width="0.0803%" height="15" fill="rgb(253,148,49)" fg:x="696" fg:w="1"/><text x="56.1087%" y="463.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="55.8587%" y="437" width="0.0803%" height="15" fill="rgb(232,193,44)" fg:x="696" fg:w="1"/><text x="56.1087%" y="447.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="55.8587%" y="421" width="0.0803%" height="15" fill="rgb(212,67,50)" fg:x="696" fg:w="1"/><text x="56.1087%" y="431.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="55.8587%" y="405" width="0.0803%" height="15" fill="rgb(235,109,24)" fg:x="696" fg:w="1"/><text x="56.1087%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="55.6180%" y="597" width="0.4815%" height="15" fill="rgb(242,228,23)" fg:x="693" fg:w="6"/><text x="55.8680%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.48%)</title><rect x="55.6180%" y="581" width="0.4815%" height="15" fill="rgb(232,48,19)" fg:x="693" fg:w="6"/><text x="55.8680%" y="591.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.48%)</title><rect x="55.6180%" y="565" width="0.4815%" height="15" fill="rgb(221,167,25)" fg:x="693" fg:w="6"/><text x="55.8680%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.9390%" y="549" width="0.1605%" height="15" fill="rgb(220,29,38)" fg:x="697" fg:w="2"/><text x="56.1890%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.9390%" y="533" width="0.1605%" height="15" fill="rgb(245,95,26)" fg:x="697" fg:w="2"/><text x="56.1890%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="55.9390%" y="517" width="0.1605%" height="15" fill="rgb(227,189,38)" fg:x="697" fg:w="2"/><text x="56.1890%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="55.9390%" y="501" width="0.1605%" height="15" fill="rgb(231,212,22)" fg:x="697" fg:w="2"/><text x="56.1890%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="55.9390%" y="485" width="0.1605%" height="15" fill="rgb(246,25,46)" fg:x="697" fg:w="2"/><text x="56.1890%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.0193%" y="469" width="0.0803%" height="15" fill="rgb(218,90,32)" fg:x="698" fg:w="1"/><text x="56.2693%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="55.4575%" y="645" width="0.7223%" height="15" fill="rgb(207,89,34)" fg:x="691" fg:w="9"/><text x="55.7075%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.72%)</title><rect x="55.4575%" y="629" width="0.7223%" height="15" fill="rgb(222,30,54)" fg:x="691" fg:w="9"/><text x="55.7075%" y="639.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (9 samples, 0.72%)</title><rect x="55.4575%" y="613" width="0.7223%" height="15" fill="rgb(224,229,32)" fg:x="691" fg:w="9"/><text x="55.7075%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.0995%" y="597" width="0.0803%" height="15" fill="rgb(209,188,44)" fg:x="699" fg:w="1"/><text x="56.3495%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.0995%" y="581" width="0.0803%" height="15" fill="rgb(215,174,23)" fg:x="699" fg:w="1"/><text x="56.3495%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.0995%" y="565" width="0.0803%" height="15" fill="rgb(242,104,18)" fg:x="699" fg:w="1"/><text x="56.3495%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="56.0995%" y="549" width="0.0803%" height="15" fill="rgb(240,173,53)" fg:x="699" fg:w="1"/><text x="56.3495%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.0995%" y="533" width="0.0803%" height="15" fill="rgb(240,105,45)" fg:x="699" fg:w="1"/><text x="56.3495%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.0995%" y="517" width="0.0803%" height="15" fill="rgb(252,164,29)" fg:x="699" fg:w="1"/><text x="56.3495%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.1798%" y="613" width="0.0803%" height="15" fill="rgb(217,17,6)" fg:x="700" fg:w="1"/><text x="56.4298%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.1798%" y="597" width="0.0803%" height="15" fill="rgb(245,27,23)" fg:x="700" fg:w="1"/><text x="56.4298%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.1798%" y="581" width="0.0803%" height="15" fill="rgb(239,73,33)" fg:x="700" fg:w="1"/><text x="56.4298%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.1798%" y="565" width="0.0803%" height="15" fill="rgb(209,140,21)" fg:x="700" fg:w="1"/><text x="56.4298%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.2600%" y="613" width="0.0803%" height="15" fill="rgb(206,36,53)" fg:x="701" fg:w="1"/><text x="56.5100%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="56.2600%" y="597" width="0.0803%" height="15" fill="rgb(238,134,8)" fg:x="701" fg:w="1"/><text x="56.5100%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.2600%" y="581" width="0.0803%" height="15" fill="rgb(209,3,20)" fg:x="701" fg:w="1"/><text x="56.5100%" y="591.50"></text></g><g><title>engine::session::internal::Added::find_refs (17 samples, 1.36%)</title><rect x="55.0562%" y="677" width="1.3644%" height="15" fill="rgb(208,101,32)" fg:x="686" fg:w="17"/><text x="55.3062%" y="687.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (17 samples, 1.36%)</title><rect x="55.0562%" y="661" width="1.3644%" height="15" fill="rgb(253,56,38)" fg:x="686" fg:w="17"/><text x="55.3062%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="56.1798%" y="645" width="0.2408%" height="15" fill="rgb(209,85,49)" fg:x="700" fg:w="3"/><text x="56.4298%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.1798%" y="629" width="0.2408%" height="15" fill="rgb(234,177,21)" fg:x="700" fg:w="3"/><text x="56.4298%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="56.3403%" y="613" width="0.0803%" height="15" fill="rgb(250,4,6)" fg:x="702" fg:w="1"/><text x="56.5903%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="56.3403%" y="597" width="0.0803%" height="15" fill="rgb(240,153,10)" fg:x="702" fg:w="1"/><text x="56.5903%" y="607.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="56.3403%" y="581" width="0.0803%" height="15" fill="rgb(205,136,51)" fg:x="702" fg:w="1"/><text x="56.5903%" y="591.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="56.3403%" y="565" width="0.0803%" height="15" fill="rgb(245,165,50)" fg:x="702" fg:w="1"/><text x="56.5903%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="56.3403%" y="549" width="0.0803%" height="15" fill="rgb(211,28,10)" fg:x="702" fg:w="1"/><text x="56.5903%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="56.3403%" y="533" width="0.0803%" height="15" fill="rgb(218,155,54)" fg:x="702" fg:w="1"/><text x="56.5903%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="56.3403%" y="517" width="0.0803%" height="15" fill="rgb(254,214,30)" fg:x="702" fg:w="1"/><text x="56.5903%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="56.3403%" y="501" width="0.0803%" height="15" fill="rgb(248,200,10)" fg:x="702" fg:w="1"/><text x="56.5903%" y="511.50"></text></g><g><title>&lt;serde::de::Unexpected as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="56.3403%" y="485" width="0.0803%" height="15" fill="rgb(238,219,45)" fg:x="702" fg:w="1"/><text x="56.5903%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="56.3403%" y="469" width="0.0803%" height="15" fill="rgb(227,35,34)" fg:x="702" fg:w="1"/><text x="56.5903%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="56.3403%" y="453" width="0.0803%" height="15" fill="rgb(214,187,37)" fg:x="702" fg:w="1"/><text x="56.5903%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.4205%" y="613" width="0.0803%" height="15" fill="rgb(247,164,44)" fg:x="703" fg:w="1"/><text x="56.6705%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.4205%" y="597" width="0.0803%" height="15" fill="rgb(238,198,10)" fg:x="703" fg:w="1"/><text x="56.6705%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.4205%" y="581" width="0.0803%" height="15" fill="rgb(213,69,8)" fg:x="703" fg:w="1"/><text x="56.6705%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.4205%" y="565" width="0.0803%" height="15" fill="rgb(222,82,16)" fg:x="703" fg:w="1"/><text x="56.6705%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.4205%" y="549" width="0.0803%" height="15" fill="rgb(205,172,30)" fg:x="703" fg:w="1"/><text x="56.6705%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.4205%" y="533" width="0.0803%" height="15" fill="rgb(227,39,8)" fg:x="703" fg:w="1"/><text x="56.6705%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.4205%" y="517" width="0.0803%" height="15" fill="rgb(249,10,19)" fg:x="703" fg:w="1"/><text x="56.6705%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.4205%" y="501" width="0.0803%" height="15" fill="rgb(205,158,53)" fg:x="703" fg:w="1"/><text x="56.6705%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.4205%" y="485" width="0.0803%" height="15" fill="rgb(237,229,35)" fg:x="703" fg:w="1"/><text x="56.6705%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.4205%" y="469" width="0.0803%" height="15" fill="rgb(238,129,14)" fg:x="703" fg:w="1"/><text x="56.6705%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.4205%" y="453" width="0.0803%" height="15" fill="rgb(218,217,40)" fg:x="703" fg:w="1"/><text x="56.6705%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.4205%" y="437" width="0.0803%" height="15" fill="rgb(221,187,9)" fg:x="703" fg:w="1"/><text x="56.6705%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.4205%" y="421" width="0.0803%" height="15" fill="rgb(214,108,19)" fg:x="703" fg:w="1"/><text x="56.6705%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.4205%" y="661" width="0.1605%" height="15" fill="rgb(216,86,23)" fg:x="703" fg:w="2"/><text x="56.6705%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.4205%" y="645" width="0.1605%" height="15" fill="rgb(209,116,23)" fg:x="703" fg:w="2"/><text x="56.6705%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.4205%" y="629" width="0.1605%" height="15" fill="rgb(222,185,40)" fg:x="703" fg:w="2"/><text x="56.6705%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5008%" y="613" width="0.0803%" height="15" fill="rgb(238,150,2)" fg:x="704" fg:w="1"/><text x="56.7508%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="56.5811%" y="661" width="0.0803%" height="15" fill="rgb(229,132,47)" fg:x="705" fg:w="1"/><text x="56.8311%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="56.5811%" y="645" width="0.0803%" height="15" fill="rgb(231,7,23)" fg:x="705" fg:w="1"/><text x="56.8311%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.5811%" y="629" width="0.0803%" height="15" fill="rgb(235,12,37)" fg:x="705" fg:w="1"/><text x="56.8311%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.5811%" y="613" width="0.0803%" height="15" fill="rgb(247,170,51)" fg:x="705" fg:w="1"/><text x="56.8311%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.5811%" y="597" width="0.0803%" height="15" fill="rgb(210,62,49)" fg:x="705" fg:w="1"/><text x="56.8311%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.5811%" y="581" width="0.0803%" height="15" fill="rgb(248,30,8)" fg:x="705" fg:w="1"/><text x="56.8311%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.6613%" y="613" width="0.0803%" height="15" fill="rgb(252,11,2)" fg:x="706" fg:w="1"/><text x="56.9113%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="56.7416%" y="501" width="0.0803%" height="15" fill="rgb(249,65,4)" fg:x="707" fg:w="1"/><text x="56.9916%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="56.7416%" y="533" width="0.1605%" height="15" fill="rgb(217,219,7)" fg:x="707" fg:w="2"/><text x="56.9916%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.7416%" y="517" width="0.1605%" height="15" fill="rgb(222,186,36)" fg:x="707" fg:w="2"/><text x="56.9916%" y="527.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="56.8218%" y="501" width="0.0803%" height="15" fill="rgb(247,184,5)" fg:x="708" fg:w="1"/><text x="57.0718%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="56.7416%" y="613" width="0.2408%" height="15" fill="rgb(221,108,7)" fg:x="707" fg:w="3"/><text x="56.9916%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.7416%" y="597" width="0.2408%" height="15" fill="rgb(209,208,22)" fg:x="707" fg:w="3"/><text x="56.9916%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="56.7416%" y="581" width="0.2408%" height="15" fill="rgb(247,106,21)" fg:x="707" fg:w="3"/><text x="56.9916%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="56.7416%" y="565" width="0.2408%" height="15" fill="rgb(223,2,44)" fg:x="707" fg:w="3"/><text x="56.9916%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="56.7416%" y="549" width="0.2408%" height="15" fill="rgb(208,190,12)" fg:x="707" fg:w="3"/><text x="56.9916%" y="559.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="56.9021%" y="533" width="0.0803%" height="15" fill="rgb(250,221,0)" fg:x="709" fg:w="1"/><text x="57.1521%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.9021%" y="517" width="0.0803%" height="15" fill="rgb(212,210,16)" fg:x="709" fg:w="1"/><text x="57.1521%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.9021%" y="501" width="0.0803%" height="15" fill="rgb(212,224,21)" fg:x="709" fg:w="1"/><text x="57.1521%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.9021%" y="485" width="0.0803%" height="15" fill="rgb(206,186,54)" fg:x="709" fg:w="1"/><text x="57.1521%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.9021%" y="469" width="0.0803%" height="15" fill="rgb(213,211,25)" fg:x="709" fg:w="1"/><text x="57.1521%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::from_value (6 samples, 0.48%)</title><rect x="56.6613%" y="661" width="0.4815%" height="15" fill="rgb(243,78,36)" fg:x="706" fg:w="6"/><text x="56.9113%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="56.6613%" y="645" width="0.4815%" height="15" fill="rgb(236,105,24)" fg:x="706" fg:w="6"/><text x="56.9113%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="56.6613%" y="629" width="0.4815%" height="15" fill="rgb(223,46,45)" fg:x="706" fg:w="6"/><text x="56.9113%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.9823%" y="613" width="0.1605%" height="15" fill="rgb(249,65,35)" fg:x="710" fg:w="2"/><text x="57.2323%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.0626%" y="597" width="0.0803%" height="15" fill="rgb(226,122,19)" fg:x="711" fg:w="1"/><text x="57.3126%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.0626%" y="581" width="0.0803%" height="15" fill="rgb(253,17,37)" fg:x="711" fg:w="1"/><text x="57.3126%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="57.1429%" y="517" width="0.0803%" height="15" fill="rgb(223,138,24)" fg:x="712" fg:w="1"/><text x="57.3929%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.1429%" y="501" width="0.0803%" height="15" fill="rgb(227,89,20)" fg:x="712" fg:w="1"/><text x="57.3929%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.1429%" y="485" width="0.0803%" height="15" fill="rgb(239,140,41)" fg:x="712" fg:w="1"/><text x="57.3929%" y="495.50"></text></g><g><title>engine::session::Session::load_entity (79 samples, 6.34%)</title><rect x="50.9631%" y="693" width="6.3403%" height="15" fill="rgb(237,29,24)" fg:x="635" fg:w="79"/><text x="51.2131%" y="703.50">engine::..</text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.88%)</title><rect x="56.4205%" y="677" width="0.8828%" height="15" fill="rgb(212,123,27)" fg:x="703" fg:w="11"/><text x="56.6705%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="57.1429%" y="661" width="0.1605%" height="15" fill="rgb(236,173,10)" fg:x="712" fg:w="2"/><text x="57.3929%" y="671.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="57.1429%" y="645" width="0.1605%" height="15" fill="rgb(244,17,3)" fg:x="712" fg:w="2"/><text x="57.3929%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="57.1429%" y="629" width="0.1605%" height="15" fill="rgb(220,73,21)" fg:x="712" fg:w="2"/><text x="57.3929%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.1429%" y="613" width="0.1605%" height="15" fill="rgb(220,187,17)" fg:x="712" fg:w="2"/><text x="57.3929%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="57.1429%" y="597" width="0.1605%" height="15" fill="rgb(236,64,13)" fg:x="712" fg:w="2"/><text x="57.3929%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.1429%" y="581" width="0.1605%" height="15" fill="rgb(214,111,25)" fg:x="712" fg:w="2"/><text x="57.3929%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="57.1429%" y="565" width="0.1605%" height="15" fill="rgb(251,123,0)" fg:x="712" fg:w="2"/><text x="57.3929%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.1429%" y="549" width="0.1605%" height="15" fill="rgb(210,8,32)" fg:x="712" fg:w="2"/><text x="57.3929%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="57.1429%" y="533" width="0.1605%" height="15" fill="rgb(221,27,44)" fg:x="712" fg:w="2"/><text x="57.3929%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.2231%" y="517" width="0.0803%" height="15" fill="rgb(233,207,54)" fg:x="713" fg:w="1"/><text x="57.4731%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.2231%" y="501" width="0.0803%" height="15" fill="rgb(219,217,1)" fg:x="713" fg:w="1"/><text x="57.4731%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="57.3836%" y="677" width="0.0803%" height="15" fill="rgb(236,150,15)" fg:x="715" fg:w="1"/><text x="57.6336%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.4639%" y="613" width="0.0803%" height="15" fill="rgb(244,119,54)" fg:x="716" fg:w="1"/><text x="57.7139%" y="623.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="57.3034%" y="693" width="0.3210%" height="15" fill="rgb(218,116,36)" fg:x="714" fg:w="4"/><text x="57.5534%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="57.4639%" y="677" width="0.1605%" height="15" fill="rgb(215,42,32)" fg:x="716" fg:w="2"/><text x="57.7139%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="57.4639%" y="661" width="0.1605%" height="15" fill="rgb(254,87,2)" fg:x="716" fg:w="2"/><text x="57.7139%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.4639%" y="645" width="0.1605%" height="15" fill="rgb(241,195,45)" fg:x="716" fg:w="2"/><text x="57.7139%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.4639%" y="629" width="0.1605%" height="15" fill="rgb(252,11,14)" fg:x="716" fg:w="2"/><text x="57.7139%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="57.5441%" y="613" width="0.0803%" height="15" fill="rgb(233,199,43)" fg:x="717" fg:w="1"/><text x="57.7941%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.5441%" y="597" width="0.0803%" height="15" fill="rgb(243,170,27)" fg:x="717" fg:w="1"/><text x="57.7941%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.6244%" y="661" width="0.0803%" height="15" fill="rgb(236,178,54)" fg:x="718" fg:w="1"/><text x="57.8744%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.7047%" y="597" width="0.0803%" height="15" fill="rgb(230,38,12)" fg:x="719" fg:w="1"/><text x="57.9547%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.7047%" y="581" width="0.0803%" height="15" fill="rgb(241,44,47)" fg:x="719" fg:w="1"/><text x="57.9547%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.7047%" y="565" width="0.0803%" height="15" fill="rgb(218,99,12)" fg:x="719" fg:w="1"/><text x="57.9547%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.7047%" y="549" width="0.0803%" height="15" fill="rgb(211,48,36)" fg:x="719" fg:w="1"/><text x="57.9547%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.7047%" y="533" width="0.0803%" height="15" fill="rgb(220,81,29)" fg:x="719" fg:w="1"/><text x="57.9547%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.7047%" y="517" width="0.0803%" height="15" fill="rgb(232,121,54)" fg:x="719" fg:w="1"/><text x="57.9547%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.7047%" y="501" width="0.0803%" height="15" fill="rgb(236,227,37)" fg:x="719" fg:w="1"/><text x="57.9547%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.7047%" y="485" width="0.0803%" height="15" fill="rgb(207,43,26)" fg:x="719" fg:w="1"/><text x="57.9547%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.7047%" y="469" width="0.0803%" height="15" fill="rgb(224,163,34)" fg:x="719" fg:w="1"/><text x="57.9547%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.7047%" y="453" width="0.0803%" height="15" fill="rgb(228,127,11)" fg:x="719" fg:w="1"/><text x="57.9547%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.7047%" y="437" width="0.0803%" height="15" fill="rgb(215,32,51)" fg:x="719" fg:w="1"/><text x="57.9547%" y="447.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="57.7047%" y="421" width="0.0803%" height="15" fill="rgb(206,180,37)" fg:x="719" fg:w="1"/><text x="57.9547%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="57.7047%" y="405" width="0.0803%" height="15" fill="rgb(245,217,39)" fg:x="719" fg:w="1"/><text x="57.9547%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.7047%" y="645" width="0.1605%" height="15" fill="rgb(237,179,18)" fg:x="719" fg:w="2"/><text x="57.9547%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.7047%" y="629" width="0.1605%" height="15" fill="rgb(248,177,3)" fg:x="719" fg:w="2"/><text x="57.9547%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.7047%" y="613" width="0.1605%" height="15" fill="rgb(208,31,45)" fg:x="719" fg:w="2"/><text x="57.9547%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.7849%" y="597" width="0.0803%" height="15" fill="rgb(231,16,43)" fg:x="720" fg:w="1"/><text x="58.0349%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="57.6244%" y="677" width="0.4013%" height="15" fill="rgb(246,12,20)" fg:x="718" fg:w="5"/><text x="57.8744%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="57.7047%" y="661" width="0.3210%" height="15" fill="rgb(214,40,41)" fg:x="719" fg:w="4"/><text x="57.9547%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.8652%" y="645" width="0.1605%" height="15" fill="rgb(225,183,42)" fg:x="721" fg:w="2"/><text x="58.1152%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.8652%" y="629" width="0.1605%" height="15" fill="rgb(229,88,50)" fg:x="721" fg:w="2"/><text x="58.1152%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="57.8652%" y="613" width="0.1605%" height="15" fill="rgb(247,34,33)" fg:x="721" fg:w="2"/><text x="58.1152%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.8652%" y="597" width="0.1605%" height="15" fill="rgb(246,163,52)" fg:x="721" fg:w="2"/><text x="58.1152%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.9454%" y="581" width="0.0803%" height="15" fill="rgb(251,13,27)" fg:x="722" fg:w="1"/><text x="58.1954%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="58.0257%" y="661" width="0.0803%" height="15" fill="rgb(218,127,46)" fg:x="723" fg:w="1"/><text x="58.2757%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.0257%" y="645" width="0.0803%" height="15" fill="rgb(215,155,29)" fg:x="723" fg:w="1"/><text x="58.2757%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="57.6244%" y="693" width="0.5618%" height="15" fill="rgb(251,180,13)" fg:x="718" fg:w="7"/><text x="57.8744%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="58.0257%" y="677" width="0.1605%" height="15" fill="rgb(246,215,19)" fg:x="723" fg:w="2"/><text x="58.2757%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="58.1059%" y="661" width="0.0803%" height="15" fill="rgb(210,47,28)" fg:x="724" fg:w="1"/><text x="58.3559%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.1059%" y="645" width="0.0803%" height="15" fill="rgb(231,175,40)" fg:x="724" fg:w="1"/><text x="58.3559%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.1059%" y="629" width="0.0803%" height="15" fill="rgb(207,138,24)" fg:x="724" fg:w="1"/><text x="58.3559%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="58.1862%" y="661" width="0.0803%" height="15" fill="rgb(216,44,38)" fg:x="725" fg:w="1"/><text x="58.4362%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.1862%" y="645" width="0.0803%" height="15" fill="rgb(206,81,53)" fg:x="725" fg:w="1"/><text x="58.4362%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.1862%" y="629" width="0.0803%" height="15" fill="rgb(246,139,21)" fg:x="725" fg:w="1"/><text x="58.4362%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.1862%" y="613" width="0.0803%" height="15" fill="rgb(212,163,26)" fg:x="725" fg:w="1"/><text x="58.4362%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.1862%" y="597" width="0.0803%" height="15" fill="rgb(223,82,35)" fg:x="725" fg:w="1"/><text x="58.4362%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.1862%" y="581" width="0.0803%" height="15" fill="rgb(224,76,13)" fg:x="725" fg:w="1"/><text x="58.4362%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="58.1862%" y="565" width="0.0803%" height="15" fill="rgb(240,2,40)" fg:x="725" fg:w="1"/><text x="58.4362%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="58.1862%" y="549" width="0.0803%" height="15" fill="rgb(232,188,36)" fg:x="725" fg:w="1"/><text x="58.4362%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.2665%" y="645" width="0.0803%" height="15" fill="rgb(249,34,46)" fg:x="726" fg:w="1"/><text x="58.5165%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.2665%" y="629" width="0.0803%" height="15" fill="rgb(226,99,19)" fg:x="726" fg:w="1"/><text x="58.5165%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="58.3467%" y="645" width="0.0803%" height="15" fill="rgb(207,78,52)" fg:x="727" fg:w="1"/><text x="58.5967%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="58.3467%" y="629" width="0.0803%" height="15" fill="rgb(241,119,8)" fg:x="727" fg:w="1"/><text x="58.5967%" y="639.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="58.4270%" y="645" width="0.0803%" height="15" fill="rgb(238,31,9)" fg:x="728" fg:w="1"/><text x="58.6770%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.4270%" y="629" width="0.0803%" height="15" fill="rgb(223,165,6)" fg:x="728" fg:w="1"/><text x="58.6770%" y="639.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="58.5072%" y="645" width="0.0803%" height="15" fill="rgb(227,228,21)" fg:x="729" fg:w="1"/><text x="58.7572%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.5072%" y="629" width="0.0803%" height="15" fill="rgb(206,188,51)" fg:x="729" fg:w="1"/><text x="58.7572%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.6677%" y="565" width="0.0803%" height="15" fill="rgb(225,207,23)" fg:x="731" fg:w="1"/><text x="58.9177%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.7480%" y="549" width="0.0803%" height="15" fill="rgb(232,197,54)" fg:x="732" fg:w="1"/><text x="58.9980%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.7480%" y="533" width="0.0803%" height="15" fill="rgb(229,149,21)" fg:x="732" fg:w="1"/><text x="58.9980%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="58.7480%" y="517" width="0.0803%" height="15" fill="rgb(209,197,1)" fg:x="732" fg:w="1"/><text x="58.9980%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="58.7480%" y="501" width="0.0803%" height="15" fill="rgb(227,82,17)" fg:x="732" fg:w="1"/><text x="58.9980%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="58.7480%" y="485" width="0.0803%" height="15" fill="rgb(237,201,43)" fg:x="732" fg:w="1"/><text x="58.9980%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.7480%" y="469" width="0.0803%" height="15" fill="rgb(221,91,37)" fg:x="732" fg:w="1"/><text x="58.9980%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="58.8283%" y="549" width="0.1605%" height="15" fill="rgb(239,35,7)" fg:x="733" fg:w="2"/><text x="59.0783%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="58.8283%" y="533" width="0.1605%" height="15" fill="rgb(234,145,45)" fg:x="733" fg:w="2"/><text x="59.0783%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="58.8283%" y="517" width="0.1605%" height="15" fill="rgb(214,151,47)" fg:x="733" fg:w="2"/><text x="59.0783%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.64%)</title><rect x="58.5875%" y="645" width="0.6421%" height="15" fill="rgb(248,62,54)" fg:x="730" fg:w="8"/><text x="58.8375%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="58.5875%" y="629" width="0.6421%" height="15" fill="rgb(236,99,21)" fg:x="730" fg:w="8"/><text x="58.8375%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="58.5875%" y="613" width="0.6421%" height="15" fill="rgb(223,94,43)" fg:x="730" fg:w="8"/><text x="58.8375%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="58.6677%" y="597" width="0.5618%" height="15" fill="rgb(214,66,6)" fg:x="731" fg:w="7"/><text x="58.9177%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="58.6677%" y="581" width="0.5618%" height="15" fill="rgb(231,152,46)" fg:x="731" fg:w="7"/><text x="58.9177%" y="591.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="58.7480%" y="565" width="0.4815%" height="15" fill="rgb(254,0,48)" fg:x="732" fg:w="6"/><text x="58.9980%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.9888%" y="549" width="0.2408%" height="15" fill="rgb(225,136,42)" fg:x="735" fg:w="3"/><text x="59.2388%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="58.9888%" y="533" width="0.2408%" height="15" fill="rgb(231,194,28)" fg:x="735" fg:w="3"/><text x="59.2388%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="58.9888%" y="517" width="0.2408%" height="15" fill="rgb(248,141,22)" fg:x="735" fg:w="3"/><text x="59.2388%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.9888%" y="501" width="0.2408%" height="15" fill="rgb(222,133,1)" fg:x="735" fg:w="3"/><text x="59.2388%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="58.9888%" y="485" width="0.2408%" height="15" fill="rgb(222,50,8)" fg:x="735" fg:w="3"/><text x="59.2388%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="59.0690%" y="469" width="0.1605%" height="15" fill="rgb(215,67,27)" fg:x="736" fg:w="2"/><text x="59.3190%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.0690%" y="453" width="0.1605%" height="15" fill="rgb(220,102,37)" fg:x="736" fg:w="2"/><text x="59.3190%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.0690%" y="437" width="0.1605%" height="15" fill="rgb(222,64,25)" fg:x="736" fg:w="2"/><text x="59.3190%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="59.0690%" y="421" width="0.1605%" height="15" fill="rgb(215,40,16)" fg:x="736" fg:w="2"/><text x="59.3190%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="59.0690%" y="405" width="0.1605%" height="15" fill="rgb(252,171,3)" fg:x="736" fg:w="2"/><text x="59.3190%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.3098%" y="581" width="0.0803%" height="15" fill="rgb(252,199,51)" fg:x="739" fg:w="1"/><text x="59.5598%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="59.3098%" y="565" width="0.0803%" height="15" fill="rgb(244,42,10)" fg:x="739" fg:w="1"/><text x="59.5598%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="59.3098%" y="549" width="0.0803%" height="15" fill="rgb(243,169,37)" fg:x="739" fg:w="1"/><text x="59.5598%" y="559.50"></text></g><g><title>engine::session::Session::load_entity (16 samples, 1.28%)</title><rect x="58.1862%" y="677" width="1.2841%" height="15" fill="rgb(241,140,9)" fg:x="725" fg:w="16"/><text x="58.4362%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (15 samples, 1.20%)</title><rect x="58.2665%" y="661" width="1.2039%" height="15" fill="rgb(241,66,40)" fg:x="726" fg:w="15"/><text x="58.5165%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="59.2295%" y="645" width="0.2408%" height="15" fill="rgb(220,50,41)" fg:x="738" fg:w="3"/><text x="59.4795%" y="655.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="59.2295%" y="629" width="0.2408%" height="15" fill="rgb(214,104,9)" fg:x="738" fg:w="3"/><text x="59.4795%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="59.2295%" y="613" width="0.2408%" height="15" fill="rgb(241,227,25)" fg:x="738" fg:w="3"/><text x="59.4795%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="59.3098%" y="597" width="0.1605%" height="15" fill="rgb(248,37,46)" fg:x="739" fg:w="2"/><text x="59.5598%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.3900%" y="581" width="0.0803%" height="15" fill="rgb(243,52,43)" fg:x="740" fg:w="1"/><text x="59.6400%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3900%" y="565" width="0.0803%" height="15" fill="rgb(232,122,17)" fg:x="740" fg:w="1"/><text x="59.6400%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5506%" y="661" width="0.0803%" height="15" fill="rgb(242,15,36)" fg:x="742" fg:w="1"/><text x="59.8006%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5506%" y="645" width="0.0803%" height="15" fill="rgb(232,63,30)" fg:x="742" fg:w="1"/><text x="59.8006%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.5506%" y="629" width="0.0803%" height="15" fill="rgb(237,86,45)" fg:x="742" fg:w="1"/><text x="59.8006%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.5506%" y="613" width="0.0803%" height="15" fill="rgb(245,123,47)" fg:x="742" fg:w="1"/><text x="59.8006%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.5506%" y="597" width="0.0803%" height="15" fill="rgb(252,85,3)" fg:x="742" fg:w="1"/><text x="59.8006%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5506%" y="581" width="0.0803%" height="15" fill="rgb(249,171,16)" fg:x="742" fg:w="1"/><text x="59.8006%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5506%" y="565" width="0.0803%" height="15" fill="rgb(225,146,54)" fg:x="742" fg:w="1"/><text x="59.8006%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.5506%" y="549" width="0.0803%" height="15" fill="rgb(213,216,54)" fg:x="742" fg:w="1"/><text x="59.8006%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.5506%" y="533" width="0.0803%" height="15" fill="rgb(236,60,6)" fg:x="742" fg:w="1"/><text x="59.8006%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.5506%" y="517" width="0.0803%" height="15" fill="rgb(227,93,24)" fg:x="742" fg:w="1"/><text x="59.8006%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.5506%" y="501" width="0.0803%" height="15" fill="rgb(219,41,42)" fg:x="742" fg:w="1"/><text x="59.8006%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.6308%" y="565" width="0.0803%" height="15" fill="rgb(229,52,32)" fg:x="743" fg:w="1"/><text x="59.8808%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="59.6308%" y="661" width="0.1605%" height="15" fill="rgb(221,33,40)" fg:x="743" fg:w="2"/><text x="59.8808%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="59.6308%" y="645" width="0.1605%" height="15" fill="rgb(216,109,23)" fg:x="743" fg:w="2"/><text x="59.8808%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.6308%" y="629" width="0.1605%" height="15" fill="rgb(214,39,24)" fg:x="743" fg:w="2"/><text x="59.8808%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.6308%" y="613" width="0.1605%" height="15" fill="rgb(205,36,6)" fg:x="743" fg:w="2"/><text x="59.8808%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="59.6308%" y="597" width="0.1605%" height="15" fill="rgb(222,146,34)" fg:x="743" fg:w="2"/><text x="59.8808%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.6308%" y="581" width="0.1605%" height="15" fill="rgb(214,72,53)" fg:x="743" fg:w="2"/><text x="59.8808%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.7111%" y="565" width="0.0803%" height="15" fill="rgb(250,157,2)" fg:x="744" fg:w="1"/><text x="59.9611%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.7111%" y="549" width="0.0803%" height="15" fill="rgb(248,5,23)" fg:x="744" fg:w="1"/><text x="59.9611%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.7111%" y="533" width="0.0803%" height="15" fill="rgb(207,146,36)" fg:x="744" fg:w="1"/><text x="59.9611%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="59.7913%" y="645" width="0.1605%" height="15" fill="rgb(205,184,43)" fg:x="745" fg:w="2"/><text x="60.0413%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.8716%" y="629" width="0.0803%" height="15" fill="rgb(251,150,46)" fg:x="746" fg:w="1"/><text x="60.1216%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="59.8716%" y="613" width="0.0803%" height="15" fill="rgb(227,224,12)" fg:x="746" fg:w="1"/><text x="60.1216%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.9518%" y="597" width="0.0803%" height="15" fill="rgb(215,26,26)" fg:x="747" fg:w="1"/><text x="60.2018%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.9518%" y="581" width="0.0803%" height="15" fill="rgb(238,180,42)" fg:x="747" fg:w="1"/><text x="60.2018%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.9518%" y="565" width="0.0803%" height="15" fill="rgb(218,148,48)" fg:x="747" fg:w="1"/><text x="60.2018%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.9518%" y="549" width="0.0803%" height="15" fill="rgb(252,14,36)" fg:x="747" fg:w="1"/><text x="60.2018%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.9518%" y="533" width="0.0803%" height="15" fill="rgb(224,35,37)" fg:x="747" fg:w="1"/><text x="60.2018%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.9518%" y="517" width="0.0803%" height="15" fill="rgb(245,177,29)" fg:x="747" fg:w="1"/><text x="60.2018%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.9518%" y="629" width="0.1605%" height="15" fill="rgb(221,149,34)" fg:x="747" fg:w="2"/><text x="60.2018%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.9518%" y="613" width="0.1605%" height="15" fill="rgb(239,115,36)" fg:x="747" fg:w="2"/><text x="60.2018%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0321%" y="597" width="0.0803%" height="15" fill="rgb(226,196,40)" fg:x="748" fg:w="1"/><text x="60.2821%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0321%" y="581" width="0.0803%" height="15" fill="rgb(209,206,26)" fg:x="748" fg:w="1"/><text x="60.2821%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.0321%" y="565" width="0.0803%" height="15" fill="rgb(225,13,33)" fg:x="748" fg:w="1"/><text x="60.2821%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.0321%" y="549" width="0.0803%" height="15" fill="rgb(244,126,22)" fg:x="748" fg:w="1"/><text x="60.2821%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.0321%" y="533" width="0.0803%" height="15" fill="rgb(248,213,25)" fg:x="748" fg:w="1"/><text x="60.2821%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.0321%" y="517" width="0.0803%" height="15" fill="rgb(222,94,36)" fg:x="748" fg:w="1"/><text x="60.2821%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.0321%" y="501" width="0.0803%" height="15" fill="rgb(212,114,20)" fg:x="748" fg:w="1"/><text x="60.2821%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.0321%" y="485" width="0.0803%" height="15" fill="rgb(213,157,26)" fg:x="748" fg:w="1"/><text x="60.2821%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.0321%" y="469" width="0.0803%" height="15" fill="rgb(211,130,1)" fg:x="748" fg:w="1"/><text x="60.2821%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.0321%" y="453" width="0.0803%" height="15" fill="rgb(212,83,53)" fg:x="748" fg:w="1"/><text x="60.2821%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.0321%" y="437" width="0.0803%" height="15" fill="rgb(238,129,10)" fg:x="748" fg:w="1"/><text x="60.2821%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.0321%" y="421" width="0.0803%" height="15" fill="rgb(213,76,2)" fg:x="748" fg:w="1"/><text x="60.2821%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.1124%" y="565" width="0.0803%" height="15" fill="rgb(220,189,22)" fg:x="749" fg:w="1"/><text x="60.3624%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="60.1124%" y="549" width="0.0803%" height="15" fill="rgb(250,155,31)" fg:x="749" fg:w="1"/><text x="60.3624%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="60.1124%" y="533" width="0.0803%" height="15" fill="rgb(218,184,22)" fg:x="749" fg:w="1"/><text x="60.3624%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="59.7913%" y="661" width="0.4815%" height="15" fill="rgb(247,117,4)" fg:x="745" fg:w="6"/><text x="60.0413%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="59.9518%" y="645" width="0.3210%" height="15" fill="rgb(253,185,37)" fg:x="747" fg:w="4"/><text x="60.2018%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.1124%" y="629" width="0.1605%" height="15" fill="rgb(226,36,44)" fg:x="749" fg:w="2"/><text x="60.3624%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1124%" y="613" width="0.1605%" height="15" fill="rgb(224,7,24)" fg:x="749" fg:w="2"/><text x="60.3624%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="60.1124%" y="597" width="0.1605%" height="15" fill="rgb(239,201,0)" fg:x="749" fg:w="2"/><text x="60.3624%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1124%" y="581" width="0.1605%" height="15" fill="rgb(218,56,33)" fg:x="749" fg:w="2"/><text x="60.3624%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.1926%" y="565" width="0.0803%" height="15" fill="rgb(210,187,29)" fg:x="750" fg:w="1"/><text x="60.4426%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.1926%" y="549" width="0.0803%" height="15" fill="rgb(206,158,49)" fg:x="750" fg:w="1"/><text x="60.4426%" y="559.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="60.1926%" y="533" width="0.0803%" height="15" fill="rgb(234,36,5)" fg:x="750" fg:w="1"/><text x="60.4426%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (752 samples, 60.35%)</title><rect x="0.0000%" y="773" width="60.3531%" height="15" fill="rgb(239,79,15)" fg:x="0" fg:w="752"/><text x="0.2500%" y="783.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (752 samples, 60.35%)</title><rect x="0.0000%" y="757" width="60.3531%" height="15" fill="rgb(240,136,17)" fg:x="0" fg:w="752"/><text x="0.2500%" y="767.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (752 samples, 60.35%)</title><rect x="0.0000%" y="741" width="60.3531%" height="15" fill="rgb(227,83,12)" fg:x="0" fg:w="752"/><text x="0.2500%" y="751.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (363 samples, 29.13%)</title><rect x="31.2199%" y="725" width="29.1332%" height="15" fill="rgb(212,2,8)" fg:x="389" fg:w="363"/><text x="31.4699%" y="735.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::session::Session::evaluate_and_perform_as (363 samples, 29.13%)</title><rect x="31.2199%" y="709" width="29.1332%" height="15" fill="rgb(219,144,5)" fg:x="389" fg:w="363"/><text x="31.4699%" y="719.50">engine::session::Session::evaluate_and_perform_..</text></g><g><title>kernel::model::entry::EntryResolver::world (27 samples, 2.17%)</title><rect x="58.1862%" y="693" width="2.1669%" height="15" fill="rgb(253,204,27)" fg:x="725" fg:w="27"/><text x="58.4362%" y="703.50">k..</text></g><g><title>kernel::model::entry::Entry::new (11 samples, 0.88%)</title><rect x="59.4703%" y="677" width="0.8828%" height="15" fill="rgb(228,188,17)" fg:x="741" fg:w="11"/><text x="59.7203%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="60.2729%" y="661" width="0.0803%" height="15" fill="rgb(208,198,33)" fg:x="751" fg:w="1"/><text x="60.5229%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="60.2729%" y="645" width="0.0803%" height="15" fill="rgb(249,153,19)" fg:x="751" fg:w="1"/><text x="60.5229%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="60.2729%" y="629" width="0.0803%" height="15" fill="rgb(222,193,37)" fg:x="751" fg:w="1"/><text x="60.5229%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="60.2729%" y="613" width="0.0803%" height="15" fill="rgb(215,168,16)" fg:x="751" fg:w="1"/><text x="60.5229%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="60.2729%" y="597" width="0.0803%" height="15" fill="rgb(238,69,36)" fg:x="751" fg:w="1"/><text x="60.5229%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="60.5136%" y="629" width="0.1605%" height="15" fill="rgb(227,11,51)" fg:x="754" fg:w="2"/><text x="60.7636%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.6742%" y="613" width="0.0803%" height="15" fill="rgb(214,204,5)" fg:x="756" fg:w="1"/><text x="60.9242%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.6742%" y="597" width="0.0803%" height="15" fill="rgb(242,182,42)" fg:x="756" fg:w="1"/><text x="60.9242%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.7544%" y="581" width="0.0803%" height="15" fill="rgb(212,208,46)" fg:x="757" fg:w="1"/><text x="61.0044%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.8347%" y="581" width="0.0803%" height="15" fill="rgb(249,22,49)" fg:x="758" fg:w="1"/><text x="61.0847%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.8347%" y="565" width="0.0803%" height="15" fill="rgb(226,130,52)" fg:x="758" fg:w="1"/><text x="61.0847%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="60.5136%" y="645" width="0.4815%" height="15" fill="rgb(209,156,10)" fg:x="754" fg:w="6"/><text x="60.7636%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="60.6742%" y="629" width="0.3210%" height="15" fill="rgb(207,125,47)" fg:x="756" fg:w="4"/><text x="60.9242%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="60.7544%" y="613" width="0.2408%" height="15" fill="rgb(221,117,28)" fg:x="757" fg:w="3"/><text x="61.0044%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="60.7544%" y="597" width="0.2408%" height="15" fill="rgb(221,170,12)" fg:x="757" fg:w="3"/><text x="61.0044%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.9149%" y="581" width="0.0803%" height="15" fill="rgb(241,222,52)" fg:x="759" fg:w="1"/><text x="61.1649%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.0754%" y="613" width="0.0803%" height="15" fill="rgb(219,52,6)" fg:x="761" fg:w="1"/><text x="61.3254%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.1557%" y="613" width="0.0803%" height="15" fill="rgb(226,144,34)" fg:x="762" fg:w="1"/><text x="61.4057%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.1557%" y="597" width="0.0803%" height="15" fill="rgb(231,179,27)" fg:x="762" fg:w="1"/><text x="61.4057%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.3162%" y="597" width="0.0803%" height="15" fill="rgb(211,178,51)" fg:x="764" fg:w="1"/><text x="61.5662%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="60.3531%" y="725" width="1.1236%" height="15" fill="rgb(233,141,5)" fg:x="752" fg:w="14"/><text x="60.6031%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (13 samples, 1.04%)</title><rect x="60.4334%" y="709" width="1.0433%" height="15" fill="rgb(214,10,9)" fg:x="753" fg:w="13"/><text x="60.6834%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="60.4334%" y="693" width="1.0433%" height="15" fill="rgb(209,0,1)" fg:x="753" fg:w="13"/><text x="60.6834%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (12 samples, 0.96%)</title><rect x="60.5136%" y="677" width="0.9631%" height="15" fill="rgb(207,82,30)" fg:x="754" fg:w="12"/><text x="60.7636%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="60.5136%" y="661" width="0.9631%" height="15" fill="rgb(224,214,13)" fg:x="754" fg:w="12"/><text x="60.7636%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="60.9952%" y="645" width="0.4815%" height="15" fill="rgb(237,84,33)" fg:x="760" fg:w="6"/><text x="61.2452%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="61.0754%" y="629" width="0.4013%" height="15" fill="rgb(231,25,9)" fg:x="761" fg:w="5"/><text x="61.3254%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="61.2360%" y="613" width="0.2408%" height="15" fill="rgb(207,51,8)" fg:x="763" fg:w="3"/><text x="61.4860%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.3965%" y="597" width="0.0803%" height="15" fill="rgb(234,189,54)" fg:x="765" fg:w="1"/><text x="61.6465%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.3965%" y="581" width="0.0803%" height="15" fill="rgb(214,188,52)" fg:x="765" fg:w="1"/><text x="61.6465%" y="591.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="61.8780%" y="613" width="0.1605%" height="15" fill="rgb(214,17,11)" fg:x="771" fg:w="2"/><text x="62.1280%" y="623.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="61.9583%" y="597" width="0.0803%" height="15" fill="rgb(250,31,36)" fg:x="772" fg:w="1"/><text x="62.2083%" y="607.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="61.9583%" y="581" width="0.0803%" height="15" fill="rgb(244,57,44)" fg:x="772" fg:w="1"/><text x="62.2083%" y="591.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="62.0385%" y="549" width="0.4815%" height="15" fill="rgb(209,209,31)" fg:x="773" fg:w="6"/><text x="62.2885%" y="559.50"></text></g><g><title>_dl_find_dso_for_object (1 samples, 0.08%)</title><rect x="62.4398%" y="533" width="0.0803%" height="15" fill="rgb(217,47,5)" fg:x="778" fg:w="1"/><text x="62.6898%" y="543.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (12 samples, 0.96%)</title><rect x="61.6372%" y="661" width="0.9631%" height="15" fill="rgb(214,78,42)" fg:x="768" fg:w="12"/><text x="61.8872%" y="671.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (11 samples, 0.88%)</title><rect x="61.7175%" y="645" width="0.8828%" height="15" fill="rgb(226,15,23)" fg:x="769" fg:w="11"/><text x="61.9675%" y="655.50"></text></g><g><title>libloading::safe::Library::new (10 samples, 0.80%)</title><rect x="61.7978%" y="629" width="0.8026%" height="15" fill="rgb(230,171,7)" fg:x="770" fg:w="10"/><text x="62.0478%" y="639.50"></text></g><g><title>dlopen (7 samples, 0.56%)</title><rect x="62.0385%" y="613" width="0.5618%" height="15" fill="rgb(229,71,9)" fg:x="773" fg:w="7"/><text x="62.2885%" y="623.50"></text></g><g><title>_dl_catch_error (7 samples, 0.56%)</title><rect x="62.0385%" y="597" width="0.5618%" height="15" fill="rgb(221,111,31)" fg:x="773" fg:w="7"/><text x="62.2885%" y="607.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="62.0385%" y="581" width="0.5618%" height="15" fill="rgb(237,86,50)" fg:x="773" fg:w="7"/><text x="62.2885%" y="591.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="62.0385%" y="565" width="0.5618%" height="15" fill="rgb(234,49,32)" fg:x="773" fg:w="7"/><text x="62.2885%" y="575.50"></text></g><g><title>_dl_signal_exception (1 samples, 0.08%)</title><rect x="62.5201%" y="549" width="0.0803%" height="15" fill="rgb(225,144,27)" fg:x="779" fg:w="1"/><text x="62.7701%" y="559.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (17 samples, 1.36%)</title><rect x="61.4767%" y="725" width="1.3644%" height="15" fill="rgb(225,209,36)" fg:x="766" fg:w="17"/><text x="61.7267%" y="735.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (16 samples, 1.28%)</title><rect x="61.5570%" y="709" width="1.2841%" height="15" fill="rgb(218,109,14)" fg:x="767" fg:w="16"/><text x="61.8070%" y="719.50"></text></g><g><title>engine::session::Session::new (16 samples, 1.28%)</title><rect x="61.5570%" y="693" width="1.2841%" height="15" fill="rgb(238,186,42)" fg:x="767" fg:w="16"/><text x="61.8070%" y="703.50"></text></g><g><title>engine::session::Session::initialize (16 samples, 1.28%)</title><rect x="61.5570%" y="677" width="1.2841%" height="15" fill="rgb(236,143,10)" fg:x="767" fg:w="16"/><text x="61.8070%" y="687.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (3 samples, 0.24%)</title><rect x="62.6003%" y="661" width="0.2408%" height="15" fill="rgb(205,147,7)" fg:x="780" fg:w="3"/><text x="62.8503%" y="671.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="62.6003%" y="645" width="0.2408%" height="15" fill="rgb(245,224,0)" fg:x="780" fg:w="3"/><text x="62.8503%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="62.6003%" y="629" width="0.2408%" height="15" fill="rgb(213,208,32)" fg:x="780" fg:w="3"/><text x="62.8503%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="62.6806%" y="613" width="0.1605%" height="15" fill="rgb(208,212,4)" fg:x="781" fg:w="2"/><text x="62.9306%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="62.6806%" y="597" width="0.1605%" height="15" fill="rgb(236,143,49)" fg:x="781" fg:w="2"/><text x="62.9306%" y="607.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="62.6806%" y="581" width="0.1605%" height="15" fill="rgb(228,152,33)" fg:x="781" fg:w="2"/><text x="62.9306%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.8411%" y="709" width="0.0803%" height="15" fill="rgb(236,132,39)" fg:x="783" fg:w="1"/><text x="63.0911%" y="719.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="62.9213%" y="581" width="0.0803%" height="15" fill="rgb(228,176,23)" fg:x="784" fg:w="1"/><text x="63.1713%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="62.9213%" y="565" width="0.0803%" height="15" fill="rgb(229,34,18)" fg:x="784" fg:w="1"/><text x="63.1713%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="62.9213%" y="549" width="0.0803%" height="15" fill="rgb(244,81,37)" fg:x="784" fg:w="1"/><text x="63.1713%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="62.9213%" y="533" width="0.0803%" height="15" fill="rgb(242,79,32)" fg:x="784" fg:w="1"/><text x="63.1713%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="62.9213%" y="517" width="0.0803%" height="15" fill="rgb(245,15,51)" fg:x="784" fg:w="1"/><text x="63.1713%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="62.9213%" y="501" width="0.0803%" height="15" fill="rgb(209,82,8)" fg:x="784" fg:w="1"/><text x="63.1713%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.0016%" y="533" width="0.0803%" height="15" fill="rgb(248,65,42)" fg:x="785" fg:w="1"/><text x="63.2516%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.0819%" y="485" width="0.0803%" height="15" fill="rgb(216,132,33)" fg:x="786" fg:w="1"/><text x="63.3319%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="62.9213%" y="613" width="0.3210%" height="15" fill="rgb(207,21,32)" fg:x="784" fg:w="4"/><text x="63.1713%" y="623.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (4 samples, 0.32%)</title><rect x="62.9213%" y="597" width="0.3210%" height="15" fill="rgb(247,27,22)" fg:x="784" fg:w="4"/><text x="63.1713%" y="607.50"></text></g><g><title>kernel::model::any_entity_changes (3 samples, 0.24%)</title><rect x="63.0016%" y="581" width="0.2408%" height="15" fill="rgb(254,72,41)" fg:x="785" fg:w="3"/><text x="63.2516%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="63.0016%" y="565" width="0.2408%" height="15" fill="rgb(250,6,31)" fg:x="785" fg:w="3"/><text x="63.2516%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="63.0016%" y="549" width="0.2408%" height="15" fill="rgb(224,124,0)" fg:x="785" fg:w="3"/><text x="63.2516%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="63.0819%" y="533" width="0.1605%" height="15" fill="rgb(228,7,24)" fg:x="786" fg:w="2"/><text x="63.3319%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="63.0819%" y="517" width="0.1605%" height="15" fill="rgb(250,202,22)" fg:x="786" fg:w="2"/><text x="63.3319%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="63.0819%" y="501" width="0.1605%" height="15" fill="rgb(214,89,5)" fg:x="786" fg:w="2"/><text x="63.3319%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="63.1621%" y="485" width="0.0803%" height="15" fill="rgb(228,82,34)" fg:x="787" fg:w="1"/><text x="63.4121%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="63.1621%" y="469" width="0.0803%" height="15" fill="rgb(212,164,18)" fg:x="787" fg:w="1"/><text x="63.4121%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="63.1621%" y="453" width="0.0803%" height="15" fill="rgb(210,75,6)" fg:x="787" fg:w="1"/><text x="63.4121%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="63.1621%" y="437" width="0.0803%" height="15" fill="rgb(251,11,45)" fg:x="787" fg:w="1"/><text x="63.4121%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="63.2424%" y="565" width="0.0803%" height="15" fill="rgb(234,105,14)" fg:x="788" fg:w="1"/><text x="63.4924%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="63.3226%" y="565" width="0.1605%" height="15" fill="rgb(220,123,16)" fg:x="789" fg:w="2"/><text x="63.5726%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="63.4029%" y="549" width="0.0803%" height="15" fill="rgb(238,16,42)" fg:x="790" fg:w="1"/><text x="63.6529%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="63.4831%" y="549" width="0.0803%" height="15" fill="rgb(239,101,26)" fg:x="791" fg:w="1"/><text x="63.7331%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="63.4831%" y="533" width="0.0803%" height="15" fill="rgb(228,12,27)" fg:x="791" fg:w="1"/><text x="63.7331%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="63.4831%" y="517" width="0.0803%" height="15" fill="rgb(218,165,53)" fg:x="791" fg:w="1"/><text x="63.7331%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="63.4831%" y="501" width="0.0803%" height="15" fill="rgb(250,44,27)" fg:x="791" fg:w="1"/><text x="63.7331%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="63.4831%" y="485" width="0.0803%" height="15" fill="rgb(229,69,35)" fg:x="791" fg:w="1"/><text x="63.7331%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="63.4831%" y="469" width="0.0803%" height="15" fill="rgb(241,38,31)" fg:x="791" fg:w="1"/><text x="63.7331%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="63.4831%" y="453" width="0.0803%" height="15" fill="rgb(224,152,13)" fg:x="791" fg:w="1"/><text x="63.7331%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="63.5634%" y="549" width="0.2408%" height="15" fill="rgb(207,225,8)" fg:x="792" fg:w="3"/><text x="63.8134%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="63.7239%" y="533" width="0.0803%" height="15" fill="rgb(222,135,50)" fg:x="794" fg:w="1"/><text x="63.9739%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="63.7239%" y="517" width="0.0803%" height="15" fill="rgb(245,39,15)" fg:x="794" fg:w="1"/><text x="63.9739%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="63.7239%" y="501" width="0.0803%" height="15" fill="rgb(233,22,17)" fg:x="794" fg:w="1"/><text x="63.9739%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="63.4831%" y="565" width="0.4013%" height="15" fill="rgb(227,152,49)" fg:x="791" fg:w="5"/><text x="63.7331%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="63.8042%" y="549" width="0.0803%" height="15" fill="rgb(233,162,45)" fg:x="795" fg:w="1"/><text x="64.0542%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="63.8042%" y="533" width="0.0803%" height="15" fill="rgb(217,44,48)" fg:x="795" fg:w="1"/><text x="64.0542%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="63.8042%" y="517" width="0.0803%" height="15" fill="rgb(253,41,35)" fg:x="795" fg:w="1"/><text x="64.0542%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (9 samples, 0.72%)</title><rect x="63.2424%" y="597" width="0.7223%" height="15" fill="rgb(254,32,37)" fg:x="788" fg:w="9"/><text x="63.4924%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="63.2424%" y="581" width="0.7223%" height="15" fill="rgb(250,9,9)" fg:x="788" fg:w="9"/><text x="63.4924%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="63.8844%" y="565" width="0.0803%" height="15" fill="rgb(212,37,16)" fg:x="796" fg:w="1"/><text x="64.1344%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.9647%" y="549" width="0.0803%" height="15" fill="rgb(235,142,51)" fg:x="797" fg:w="1"/><text x="64.2147%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="63.9647%" y="597" width="0.2408%" height="15" fill="rgb(250,225,53)" fg:x="797" fg:w="3"/><text x="64.2147%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="63.9647%" y="581" width="0.2408%" height="15" fill="rgb(207,188,48)" fg:x="797" fg:w="3"/><text x="64.2147%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="63.9647%" y="565" width="0.2408%" height="15" fill="rgb(222,25,21)" fg:x="797" fg:w="3"/><text x="64.2147%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.0449%" y="549" width="0.1605%" height="15" fill="rgb(249,112,5)" fg:x="798" fg:w="2"/><text x="64.2949%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.1252%" y="533" width="0.0803%" height="15" fill="rgb(242,11,22)" fg:x="799" fg:w="1"/><text x="64.3752%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.1252%" y="517" width="0.0803%" height="15" fill="rgb(217,125,14)" fg:x="799" fg:w="1"/><text x="64.3752%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="64.2055%" y="581" width="0.0803%" height="15" fill="rgb(239,92,14)" fg:x="800" fg:w="1"/><text x="64.4555%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.2055%" y="565" width="0.0803%" height="15" fill="rgb(232,145,17)" fg:x="800" fg:w="1"/><text x="64.4555%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="64.2857%" y="549" width="0.2408%" height="15" fill="rgb(250,158,16)" fg:x="801" fg:w="3"/><text x="64.5357%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.3660%" y="533" width="0.1605%" height="15" fill="rgb(247,30,22)" fg:x="802" fg:w="2"/><text x="64.6160%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="64.3660%" y="517" width="0.1605%" height="15" fill="rgb(219,215,46)" fg:x="802" fg:w="2"/><text x="64.6160%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.5265%" y="533" width="0.0803%" height="15" fill="rgb(237,40,53)" fg:x="804" fg:w="1"/><text x="64.7765%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.7673%" y="501" width="0.0803%" height="15" fill="rgb(253,207,11)" fg:x="807" fg:w="1"/><text x="65.0173%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="64.8475%" y="485" width="0.0803%" height="15" fill="rgb(242,16,9)" fg:x="808" fg:w="1"/><text x="65.0975%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.8475%" y="469" width="0.0803%" height="15" fill="rgb(237,94,35)" fg:x="808" fg:w="1"/><text x="65.0975%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.8475%" y="453" width="0.0803%" height="15" fill="rgb(244,145,23)" fg:x="808" fg:w="1"/><text x="65.0975%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.8475%" y="437" width="0.0803%" height="15" fill="rgb(209,93,17)" fg:x="808" fg:w="1"/><text x="65.0975%" y="447.50"></text></g><g><title>engine::session::Session::flush (26 samples, 2.09%)</title><rect x="62.9213%" y="709" width="2.0867%" height="15" fill="rgb(205,201,0)" fg:x="784" fg:w="26"/><text x="63.1713%" y="719.50">e..</text></g><g><title>engine::session::state::State::close (26 samples, 2.09%)</title><rect x="62.9213%" y="693" width="2.0867%" height="15" fill="rgb(225,198,48)" fg:x="784" fg:w="26"/><text x="63.1713%" y="703.50">e..</text></g><g><title>engine::session::state::State::flush_entities (26 samples, 2.09%)</title><rect x="62.9213%" y="677" width="2.0867%" height="15" fill="rgb(211,131,51)" fg:x="784" fg:w="26"/><text x="63.1713%" y="687.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (26 samples, 2.09%)</title><rect x="62.9213%" y="661" width="2.0867%" height="15" fill="rgb(237,196,37)" fg:x="784" fg:w="26"/><text x="63.1713%" y="671.50">e..</text></g><g><title>core::iter::adapters::try_process (26 samples, 2.09%)</title><rect x="62.9213%" y="645" width="2.0867%" height="15" fill="rgb(218,204,52)" fg:x="784" fg:w="26"/><text x="63.1713%" y="655.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 2.09%)</title><rect x="62.9213%" y="629" width="2.0867%" height="15" fill="rgb(251,67,25)" fg:x="784" fg:w="26"/><text x="63.1713%" y="639.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (22 samples, 1.77%)</title><rect x="63.2424%" y="613" width="1.7657%" height="15" fill="rgb(219,87,2)" fg:x="788" fg:w="22"/><text x="63.4924%" y="623.50"></text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.80%)</title><rect x="64.2055%" y="597" width="0.8026%" height="15" fill="rgb(224,171,9)" fg:x="800" fg:w="10"/><text x="64.4555%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="64.2857%" y="581" width="0.7223%" height="15" fill="rgb(215,98,45)" fg:x="801" fg:w="9"/><text x="64.5357%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="64.2857%" y="565" width="0.7223%" height="15" fill="rgb(231,48,23)" fg:x="801" fg:w="9"/><text x="64.5357%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="64.5265%" y="549" width="0.4815%" height="15" fill="rgb(233,138,42)" fg:x="804" fg:w="6"/><text x="64.7765%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="64.6067%" y="533" width="0.4013%" height="15" fill="rgb(244,107,0)" fg:x="805" fg:w="5"/><text x="64.8567%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="64.7673%" y="517" width="0.2408%" height="15" fill="rgb(224,15,0)" fg:x="807" fg:w="3"/><text x="65.0173%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="64.8475%" y="501" width="0.1605%" height="15" fill="rgb(218,71,35)" fg:x="808" fg:w="2"/><text x="65.0975%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.9278%" y="485" width="0.0803%" height="15" fill="rgb(244,32,22)" fg:x="809" fg:w="1"/><text x="65.1778%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.0080%" y="501" width="0.1605%" height="15" fill="rgb(232,209,34)" fg:x="810" fg:w="2"/><text x="65.2580%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.0883%" y="485" width="0.0803%" height="15" fill="rgb(232,54,38)" fg:x="811" fg:w="1"/><text x="65.3383%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.0883%" y="469" width="0.0803%" height="15" fill="rgb(208,83,16)" fg:x="811" fg:w="1"/><text x="65.3383%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="65.0080%" y="661" width="0.2408%" height="15" fill="rgb(208,70,33)" fg:x="810" fg:w="3"/><text x="65.2580%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="65.0080%" y="645" width="0.2408%" height="15" fill="rgb(247,38,12)" fg:x="810" fg:w="3"/><text x="65.2580%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="65.0080%" y="629" width="0.2408%" height="15" fill="rgb(206,34,42)" fg:x="810" fg:w="3"/><text x="65.2580%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="65.0080%" y="613" width="0.2408%" height="15" fill="rgb(226,75,43)" fg:x="810" fg:w="3"/><text x="65.2580%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="65.0080%" y="597" width="0.2408%" height="15" fill="rgb(223,109,12)" fg:x="810" fg:w="3"/><text x="65.2580%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="65.0080%" y="581" width="0.2408%" height="15" fill="rgb(218,53,16)" fg:x="810" fg:w="3"/><text x="65.2580%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="65.0080%" y="565" width="0.2408%" height="15" fill="rgb(236,44,50)" fg:x="810" fg:w="3"/><text x="65.2580%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="65.0080%" y="549" width="0.2408%" height="15" fill="rgb(211,163,12)" fg:x="810" fg:w="3"/><text x="65.2580%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="65.0080%" y="533" width="0.2408%" height="15" fill="rgb(230,67,52)" fg:x="810" fg:w="3"/><text x="65.2580%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="65.0080%" y="517" width="0.2408%" height="15" fill="rgb(224,204,24)" fg:x="810" fg:w="3"/><text x="65.2580%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="65.1685%" y="501" width="0.0803%" height="15" fill="rgb(210,50,27)" fg:x="812" fg:w="1"/><text x="65.4185%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="65.2488%" y="645" width="0.0803%" height="15" fill="rgb(251,202,23)" fg:x="813" fg:w="1"/><text x="65.4988%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="65.2488%" y="629" width="0.0803%" height="15" fill="rgb(230,210,21)" fg:x="813" fg:w="1"/><text x="65.4988%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.2488%" y="613" width="0.0803%" height="15" fill="rgb(222,72,44)" fg:x="813" fg:w="1"/><text x="65.4988%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="65.3291%" y="645" width="0.0803%" height="15" fill="rgb(223,182,13)" fg:x="814" fg:w="1"/><text x="65.5791%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="65.3291%" y="629" width="0.0803%" height="15" fill="rgb(228,61,15)" fg:x="814" fg:w="1"/><text x="65.5791%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.3291%" y="613" width="0.0803%" height="15" fill="rgb(253,207,22)" fg:x="814" fg:w="1"/><text x="65.5791%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3291%" y="597" width="0.0803%" height="15" fill="rgb(232,10,15)" fg:x="814" fg:w="1"/><text x="65.5791%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.3291%" y="581" width="0.0803%" height="15" fill="rgb(227,207,39)" fg:x="814" fg:w="1"/><text x="65.5791%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3291%" y="565" width="0.0803%" height="15" fill="rgb(228,187,3)" fg:x="814" fg:w="1"/><text x="65.5791%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.3291%" y="549" width="0.0803%" height="15" fill="rgb(246,45,9)" fg:x="814" fg:w="1"/><text x="65.5791%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.3291%" y="533" width="0.0803%" height="15" fill="rgb(249,10,17)" fg:x="814" fg:w="1"/><text x="65.5791%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.3291%" y="517" width="0.0803%" height="15" fill="rgb(251,56,51)" fg:x="814" fg:w="1"/><text x="65.5791%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="65.2488%" y="661" width="0.2408%" height="15" fill="rgb(232,51,36)" fg:x="813" fg:w="3"/><text x="65.4988%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="65.4093%" y="645" width="0.0803%" height="15" fill="rgb(215,38,28)" fg:x="815" fg:w="1"/><text x="65.6593%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="65.4093%" y="629" width="0.0803%" height="15" fill="rgb(218,5,35)" fg:x="815" fg:w="1"/><text x="65.6593%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.4093%" y="613" width="0.0803%" height="15" fill="rgb(232,219,8)" fg:x="815" fg:w="1"/><text x="65.6593%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.4093%" y="597" width="0.0803%" height="15" fill="rgb(243,162,8)" fg:x="815" fg:w="1"/><text x="65.6593%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.4093%" y="581" width="0.0803%" height="15" fill="rgb(218,86,32)" fg:x="815" fg:w="1"/><text x="65.6593%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.4093%" y="565" width="0.0803%" height="15" fill="rgb(218,179,51)" fg:x="815" fg:w="1"/><text x="65.6593%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="65.4093%" y="549" width="0.0803%" height="15" fill="rgb(237,42,52)" fg:x="815" fg:w="1"/><text x="65.6593%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="65.4093%" y="533" width="0.0803%" height="15" fill="rgb(229,12,4)" fg:x="815" fg:w="1"/><text x="65.6593%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="65.4093%" y="517" width="0.0803%" height="15" fill="rgb(214,203,2)" fg:x="815" fg:w="1"/><text x="65.6593%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="65.4093%" y="501" width="0.0803%" height="15" fill="rgb(241,11,44)" fg:x="815" fg:w="1"/><text x="65.6593%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="65.4093%" y="485" width="0.0803%" height="15" fill="rgb(221,106,48)" fg:x="815" fg:w="1"/><text x="65.6593%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="65.4093%" y="469" width="0.0803%" height="15" fill="rgb(220,220,10)" fg:x="815" fg:w="1"/><text x="65.6593%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="65.4093%" y="453" width="0.0803%" height="15" fill="rgb(228,220,44)" fg:x="815" fg:w="1"/><text x="65.6593%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="65.4093%" y="437" width="0.0803%" height="15" fill="rgb(214,144,45)" fg:x="815" fg:w="1"/><text x="65.6593%" y="447.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="65.0080%" y="693" width="0.5618%" height="15" fill="rgb(224,142,28)" fg:x="810" fg:w="7"/><text x="65.2580%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="65.0080%" y="677" width="0.5618%" height="15" fill="rgb(214,79,27)" fg:x="810" fg:w="7"/><text x="65.2580%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="65.4896%" y="661" width="0.0803%" height="15" fill="rgb(208,173,30)" fg:x="816" fg:w="1"/><text x="65.7396%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="65.4896%" y="645" width="0.0803%" height="15" fill="rgb(222,81,9)" fg:x="816" fg:w="1"/><text x="65.7396%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="65.4896%" y="629" width="0.0803%" height="15" fill="rgb(217,152,25)" fg:x="816" fg:w="1"/><text x="65.7396%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="65.4896%" y="613" width="0.0803%" height="15" fill="rgb(248,170,26)" fg:x="816" fg:w="1"/><text x="65.7396%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.4896%" y="597" width="0.0803%" height="15" fill="rgb(206,151,5)" fg:x="816" fg:w="1"/><text x="65.7396%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.4896%" y="581" width="0.0803%" height="15" fill="rgb(216,7,52)" fg:x="816" fg:w="1"/><text x="65.7396%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.4896%" y="565" width="0.0803%" height="15" fill="rgb(228,27,44)" fg:x="816" fg:w="1"/><text x="65.7396%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.4896%" y="549" width="0.0803%" height="15" fill="rgb(208,221,38)" fg:x="816" fg:w="1"/><text x="65.7396%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.4896%" y="533" width="0.0803%" height="15" fill="rgb(240,59,23)" fg:x="816" fg:w="1"/><text x="65.7396%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.4896%" y="517" width="0.0803%" height="15" fill="rgb(210,127,41)" fg:x="816" fg:w="1"/><text x="65.7396%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.4896%" y="501" width="0.0803%" height="15" fill="rgb(224,160,3)" fg:x="816" fg:w="1"/><text x="65.7396%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.4896%" y="485" width="0.0803%" height="15" fill="rgb(215,228,26)" fg:x="816" fg:w="1"/><text x="65.7396%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.4896%" y="469" width="0.0803%" height="15" fill="rgb(218,107,38)" fg:x="816" fg:w="1"/><text x="65.7396%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.4896%" y="453" width="0.0803%" height="15" fill="rgb(246,159,42)" fg:x="816" fg:w="1"/><text x="65.7396%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.4896%" y="437" width="0.0803%" height="15" fill="rgb(251,23,41)" fg:x="816" fg:w="1"/><text x="65.7396%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.4896%" y="421" width="0.0803%" height="15" fill="rgb(246,94,53)" fg:x="816" fg:w="1"/><text x="65.7396%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.4896%" y="405" width="0.0803%" height="15" fill="rgb(241,212,46)" fg:x="816" fg:w="1"/><text x="65.7396%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.4896%" y="389" width="0.0803%" height="15" fill="rgb(231,79,30)" fg:x="816" fg:w="1"/><text x="65.7396%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.4896%" y="373" width="0.0803%" height="15" fill="rgb(208,202,21)" fg:x="816" fg:w="1"/><text x="65.7396%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="65.5698%" y="645" width="0.0803%" height="15" fill="rgb(226,136,22)" fg:x="817" fg:w="1"/><text x="65.8198%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="65.5698%" y="629" width="0.0803%" height="15" fill="rgb(214,87,0)" fg:x="817" fg:w="1"/><text x="65.8198%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.5698%" y="613" width="0.0803%" height="15" fill="rgb(239,176,44)" fg:x="817" fg:w="1"/><text x="65.8198%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.5698%" y="597" width="0.0803%" height="15" fill="rgb(230,102,31)" fg:x="817" fg:w="1"/><text x="65.8198%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.5698%" y="581" width="0.0803%" height="15" fill="rgb(219,40,19)" fg:x="817" fg:w="1"/><text x="65.8198%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.5698%" y="565" width="0.0803%" height="15" fill="rgb(228,55,4)" fg:x="817" fg:w="1"/><text x="65.8198%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.5698%" y="549" width="0.0803%" height="15" fill="rgb(239,120,21)" fg:x="817" fg:w="1"/><text x="65.8198%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.5698%" y="533" width="0.0803%" height="15" fill="rgb(243,136,1)" fg:x="817" fg:w="1"/><text x="65.8198%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.5698%" y="517" width="0.0803%" height="15" fill="rgb(237,12,45)" fg:x="817" fg:w="1"/><text x="65.8198%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="65.5698%" y="677" width="0.1605%" height="15" fill="rgb(245,142,47)" fg:x="817" fg:w="2"/><text x="65.8198%" y="687.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="65.5698%" y="661" width="0.1605%" height="15" fill="rgb(237,24,54)" fg:x="817" fg:w="2"/><text x="65.8198%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="65.6501%" y="645" width="0.0803%" height="15" fill="rgb(234,164,40)" fg:x="818" fg:w="1"/><text x="65.9001%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="65.6501%" y="629" width="0.0803%" height="15" fill="rgb(242,95,12)" fg:x="818" fg:w="1"/><text x="65.9001%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.6501%" y="613" width="0.0803%" height="15" fill="rgb(238,75,28)" fg:x="818" fg:w="1"/><text x="65.9001%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.6501%" y="597" width="0.0803%" height="15" fill="rgb(236,4,26)" fg:x="818" fg:w="1"/><text x="65.9001%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.6501%" y="581" width="0.0803%" height="15" fill="rgb(252,158,20)" fg:x="818" fg:w="1"/><text x="65.9001%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="65.8106%" y="629" width="0.0803%" height="15" fill="rgb(231,67,31)" fg:x="820" fg:w="1"/><text x="66.0606%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="65.8106%" y="613" width="0.0803%" height="15" fill="rgb(241,151,13)" fg:x="820" fg:w="1"/><text x="66.0606%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.8106%" y="597" width="0.0803%" height="15" fill="rgb(242,25,36)" fg:x="820" fg:w="1"/><text x="66.0606%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8106%" y="581" width="0.0803%" height="15" fill="rgb(205,222,34)" fg:x="820" fg:w="1"/><text x="66.0606%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.8106%" y="565" width="0.0803%" height="15" fill="rgb(235,154,26)" fg:x="820" fg:w="1"/><text x="66.0606%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8106%" y="549" width="0.0803%" height="15" fill="rgb(233,17,9)" fg:x="820" fg:w="1"/><text x="66.0606%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.8106%" y="533" width="0.0803%" height="15" fill="rgb(245,113,50)" fg:x="820" fg:w="1"/><text x="66.0606%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8106%" y="517" width="0.0803%" height="15" fill="rgb(247,105,34)" fg:x="820" fg:w="1"/><text x="66.0606%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.8106%" y="501" width="0.0803%" height="15" fill="rgb(225,50,23)" fg:x="820" fg:w="1"/><text x="66.0606%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.8909%" y="597" width="0.0803%" height="15" fill="rgb(253,189,32)" fg:x="821" fg:w="1"/><text x="66.1409%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.8909%" y="581" width="0.0803%" height="15" fill="rgb(208,159,41)" fg:x="821" fg:w="1"/><text x="66.1409%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.8909%" y="565" width="0.0803%" height="15" fill="rgb(222,135,10)" fg:x="821" fg:w="1"/><text x="66.1409%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.8909%" y="549" width="0.0803%" height="15" fill="rgb(214,75,20)" fg:x="821" fg:w="1"/><text x="66.1409%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.8909%" y="533" width="0.0803%" height="15" fill="rgb(231,65,33)" fg:x="821" fg:w="1"/><text x="66.1409%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.8909%" y="517" width="0.0803%" height="15" fill="rgb(251,139,6)" fg:x="821" fg:w="1"/><text x="66.1409%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.8909%" y="501" width="0.0803%" height="15" fill="rgb(225,220,53)" fg:x="821" fg:w="1"/><text x="66.1409%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.8909%" y="485" width="0.0803%" height="15" fill="rgb(244,73,26)" fg:x="821" fg:w="1"/><text x="66.1409%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.8909%" y="469" width="0.0803%" height="15" fill="rgb(244,98,34)" fg:x="821" fg:w="1"/><text x="66.1409%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.8909%" y="453" width="0.0803%" height="15" fill="rgb(211,131,5)" fg:x="821" fg:w="1"/><text x="66.1409%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.8909%" y="437" width="0.0803%" height="15" fill="rgb(238,14,50)" fg:x="821" fg:w="1"/><text x="66.1409%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.8909%" y="421" width="0.0803%" height="15" fill="rgb(206,132,52)" fg:x="821" fg:w="1"/><text x="66.1409%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.8909%" y="405" width="0.0803%" height="15" fill="rgb(228,200,17)" fg:x="821" fg:w="1"/><text x="66.1409%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.8909%" y="389" width="0.0803%" height="15" fill="rgb(209,53,28)" fg:x="821" fg:w="1"/><text x="66.1409%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="65.7303%" y="677" width="0.3210%" height="15" fill="rgb(240,214,22)" fg:x="819" fg:w="4"/><text x="65.9803%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="65.7303%" y="661" width="0.3210%" height="15" fill="rgb(213,217,46)" fg:x="819" fg:w="4"/><text x="65.9803%" y="671.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="65.7303%" y="645" width="0.3210%" height="15" fill="rgb(241,159,53)" fg:x="819" fg:w="4"/><text x="65.9803%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="65.8909%" y="629" width="0.1605%" height="15" fill="rgb(241,70,32)" fg:x="821" fg:w="2"/><text x="66.1409%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="65.8909%" y="613" width="0.1605%" height="15" fill="rgb(233,117,50)" fg:x="821" fg:w="2"/><text x="66.1409%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.9711%" y="597" width="0.0803%" height="15" fill="rgb(211,114,15)" fg:x="822" fg:w="1"/><text x="66.2211%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="65.9711%" y="581" width="0.0803%" height="15" fill="rgb(254,0,36)" fg:x="822" fg:w="1"/><text x="66.2211%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="66.0514%" y="661" width="0.0803%" height="15" fill="rgb(221,74,12)" fg:x="823" fg:w="1"/><text x="66.3014%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="66.0514%" y="645" width="0.0803%" height="15" fill="rgb(241,221,3)" fg:x="823" fg:w="1"/><text x="66.3014%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (15 samples, 1.20%)</title><rect x="65.0080%" y="709" width="1.2039%" height="15" fill="rgb(252,91,23)" fg:x="810" fg:w="15"/><text x="65.2580%" y="719.50"></text></g><g><title>plugins_core::tools::set_container (8 samples, 0.64%)</title><rect x="65.5698%" y="693" width="0.6421%" height="15" fill="rgb(232,1,25)" fg:x="817" fg:w="8"/><text x="65.8198%" y="703.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="66.0514%" y="677" width="0.1605%" height="15" fill="rgb(253,145,25)" fg:x="823" fg:w="2"/><text x="66.3014%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="66.1316%" y="661" width="0.0803%" height="15" fill="rgb(226,43,53)" fg:x="824" fg:w="1"/><text x="66.3816%" y="671.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="66.1316%" y="645" width="0.0803%" height="15" fill="rgb(245,116,39)" fg:x="824" fg:w="1"/><text x="66.3816%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="66.1316%" y="629" width="0.0803%" height="15" fill="rgb(231,205,33)" fg:x="824" fg:w="1"/><text x="66.3816%" y="639.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="66.1316%" y="613" width="0.0803%" height="15" fill="rgb(238,96,15)" fg:x="824" fg:w="1"/><text x="66.3816%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="66.1316%" y="597" width="0.0803%" height="15" fill="rgb(212,80,14)" fg:x="824" fg:w="1"/><text x="66.3816%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.1316%" y="581" width="0.0803%" height="15" fill="rgb(209,118,24)" fg:x="824" fg:w="1"/><text x="66.3816%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.1316%" y="565" width="0.0803%" height="15" fill="rgb(234,176,14)" fg:x="824" fg:w="1"/><text x="66.3816%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.1316%" y="549" width="0.0803%" height="15" fill="rgb(207,145,21)" fg:x="824" fg:w="1"/><text x="66.3816%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.2119%" y="677" width="0.0803%" height="15" fill="rgb(218,58,54)" fg:x="825" fg:w="1"/><text x="66.4619%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="66.2921%" y="677" width="0.0803%" height="15" fill="rgb(229,11,50)" fg:x="826" fg:w="1"/><text x="66.5421%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="66.2921%" y="661" width="0.0803%" height="15" fill="rgb(221,170,33)" fg:x="826" fg:w="1"/><text x="66.5421%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="66.2921%" y="645" width="0.0803%" height="15" fill="rgb(221,121,40)" fg:x="826" fg:w="1"/><text x="66.5421%" y="655.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.2921%" y="629" width="0.0803%" height="15" fill="rgb(214,165,32)" fg:x="826" fg:w="1"/><text x="66.5421%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.2921%" y="613" width="0.0803%" height="15" fill="rgb(243,195,30)" fg:x="826" fg:w="1"/><text x="66.5421%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.2921%" y="597" width="0.0803%" height="15" fill="rgb(238,0,27)" fg:x="826" fg:w="1"/><text x="66.5421%" y="607.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="66.3724%" y="677" width="0.0803%" height="15" fill="rgb(226,0,50)" fg:x="827" fg:w="1"/><text x="66.6224%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="66.3724%" y="661" width="0.0803%" height="15" fill="rgb(222,93,46)" fg:x="827" fg:w="1"/><text x="66.6224%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="66.3724%" y="645" width="0.0803%" height="15" fill="rgb(210,34,24)" fg:x="827" fg:w="1"/><text x="66.6224%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="66.3724%" y="629" width="0.0803%" height="15" fill="rgb(217,47,8)" fg:x="827" fg:w="1"/><text x="66.6224%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="66.3724%" y="613" width="0.0803%" height="15" fill="rgb(217,0,26)" fg:x="827" fg:w="1"/><text x="66.6224%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="66.3724%" y="597" width="0.0803%" height="15" fill="rgb(218,228,31)" fg:x="827" fg:w="1"/><text x="66.6224%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="66.3724%" y="581" width="0.0803%" height="15" fill="rgb(208,101,40)" fg:x="827" fg:w="1"/><text x="66.6224%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="66.3724%" y="565" width="0.0803%" height="15" fill="rgb(225,134,0)" fg:x="827" fg:w="1"/><text x="66.6224%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="66.3724%" y="549" width="0.0803%" height="15" fill="rgb(241,37,25)" fg:x="827" fg:w="1"/><text x="66.6224%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="66.3724%" y="533" width="0.0803%" height="15" fill="rgb(251,149,9)" fg:x="827" fg:w="1"/><text x="66.6224%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="66.4526%" y="677" width="0.0803%" height="15" fill="rgb(225,196,54)" fg:x="828" fg:w="1"/><text x="66.7026%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="66.4526%" y="661" width="0.0803%" height="15" fill="rgb(240,46,24)" fg:x="828" fg:w="1"/><text x="66.7026%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="66.4526%" y="645" width="0.0803%" height="15" fill="rgb(214,189,4)" fg:x="828" fg:w="1"/><text x="66.7026%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.4526%" y="629" width="0.0803%" height="15" fill="rgb(222,3,8)" fg:x="828" fg:w="1"/><text x="66.7026%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="66.4526%" y="613" width="0.0803%" height="15" fill="rgb(250,163,6)" fg:x="828" fg:w="1"/><text x="66.7026%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.4526%" y="597" width="0.0803%" height="15" fill="rgb(225,23,45)" fg:x="828" fg:w="1"/><text x="66.7026%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.4526%" y="581" width="0.0803%" height="15" fill="rgb(225,177,23)" fg:x="828" fg:w="1"/><text x="66.7026%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.5329%" y="613" width="0.0803%" height="15" fill="rgb(253,75,3)" fg:x="829" fg:w="1"/><text x="66.7829%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="66.5329%" y="597" width="0.0803%" height="15" fill="rgb(237,85,4)" fg:x="829" fg:w="1"/><text x="66.7829%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.5329%" y="581" width="0.0803%" height="15" fill="rgb(212,23,3)" fg:x="829" fg:w="1"/><text x="66.7829%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.5329%" y="565" width="0.0803%" height="15" fill="rgb(250,127,19)" fg:x="829" fg:w="1"/><text x="66.7829%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.5329%" y="549" width="0.0803%" height="15" fill="rgb(222,82,14)" fg:x="829" fg:w="1"/><text x="66.7829%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="66.5329%" y="645" width="0.2408%" height="15" fill="rgb(213,63,47)" fg:x="829" fg:w="3"/><text x="66.7829%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="66.5329%" y="629" width="0.2408%" height="15" fill="rgb(219,132,41)" fg:x="829" fg:w="3"/><text x="66.7829%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.6132%" y="613" width="0.1605%" height="15" fill="rgb(251,205,16)" fg:x="830" fg:w="2"/><text x="66.8632%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.6132%" y="597" width="0.1605%" height="15" fill="rgb(239,102,23)" fg:x="830" fg:w="2"/><text x="66.8632%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="66.6132%" y="581" width="0.1605%" height="15" fill="rgb(222,218,4)" fg:x="830" fg:w="2"/><text x="66.8632%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.6132%" y="565" width="0.1605%" height="15" fill="rgb(232,91,40)" fg:x="830" fg:w="2"/><text x="66.8632%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.6132%" y="549" width="0.1605%" height="15" fill="rgb(238,170,50)" fg:x="830" fg:w="2"/><text x="66.8632%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.6132%" y="533" width="0.1605%" height="15" fill="rgb(243,52,25)" fg:x="830" fg:w="2"/><text x="66.8632%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="66.2119%" y="693" width="0.7223%" height="15" fill="rgb(236,151,10)" fg:x="825" fg:w="9"/><text x="66.4619%" y="703.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.40%)</title><rect x="66.5329%" y="677" width="0.4013%" height="15" fill="rgb(216,123,7)" fg:x="829" fg:w="5"/><text x="66.7829%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="66.5329%" y="661" width="0.4013%" height="15" fill="rgb(247,115,15)" fg:x="829" fg:w="5"/><text x="66.7829%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="66.7737%" y="645" width="0.1605%" height="15" fill="rgb(249,65,46)" fg:x="832" fg:w="2"/><text x="67.0237%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="66.7737%" y="629" width="0.1605%" height="15" fill="rgb(230,132,24)" fg:x="832" fg:w="2"/><text x="67.0237%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.7737%" y="613" width="0.1605%" height="15" fill="rgb(253,115,7)" fg:x="832" fg:w="2"/><text x="67.0237%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.7737%" y="597" width="0.1605%" height="15" fill="rgb(233,23,21)" fg:x="832" fg:w="2"/><text x="67.0237%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="66.7737%" y="581" width="0.1605%" height="15" fill="rgb(231,203,18)" fg:x="832" fg:w="2"/><text x="67.0237%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.7737%" y="565" width="0.1605%" height="15" fill="rgb(233,19,15)" fg:x="832" fg:w="2"/><text x="67.0237%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.8539%" y="549" width="0.0803%" height="15" fill="rgb(213,12,4)" fg:x="833" fg:w="1"/><text x="67.1039%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (10 samples, 0.80%)</title><rect x="66.2119%" y="709" width="0.8026%" height="15" fill="rgb(221,198,54)" fg:x="825" fg:w="10"/><text x="66.4619%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="66.9342%" y="693" width="0.0803%" height="15" fill="rgb(247,189,16)" fg:x="834" fg:w="1"/><text x="67.1842%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="66.9342%" y="677" width="0.0803%" height="15" fill="rgb(213,82,46)" fg:x="834" fg:w="1"/><text x="67.1842%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.9342%" y="661" width="0.0803%" height="15" fill="rgb(216,129,40)" fg:x="834" fg:w="1"/><text x="67.1842%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.9342%" y="645" width="0.0803%" height="15" fill="rgb(222,154,45)" fg:x="834" fg:w="1"/><text x="67.1842%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="66.9342%" y="629" width="0.0803%" height="15" fill="rgb(214,223,41)" fg:x="834" fg:w="1"/><text x="67.1842%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.9342%" y="613" width="0.0803%" height="15" fill="rgb(212,167,3)" fg:x="834" fg:w="1"/><text x="67.1842%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.9342%" y="597" width="0.0803%" height="15" fill="rgb(219,226,20)" fg:x="834" fg:w="1"/><text x="67.1842%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.9342%" y="581" width="0.0803%" height="15" fill="rgb(231,29,48)" fg:x="834" fg:w="1"/><text x="67.1842%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="67.0947%" y="661" width="0.0803%" height="15" fill="rgb(224,12,4)" fg:x="836" fg:w="1"/><text x="67.3447%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.0947%" y="645" width="0.0803%" height="15" fill="rgb(217,180,30)" fg:x="836" fg:w="1"/><text x="67.3447%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="67.0947%" y="693" width="0.1605%" height="15" fill="rgb(237,137,17)" fg:x="836" fg:w="2"/><text x="67.3447%" y="703.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="67.0947%" y="677" width="0.1605%" height="15" fill="rgb(252,225,18)" fg:x="836" fg:w="2"/><text x="67.3447%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="67.1750%" y="661" width="0.0803%" height="15" fill="rgb(209,177,11)" fg:x="837" fg:w="1"/><text x="67.4250%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="67.1750%" y="645" width="0.0803%" height="15" fill="rgb(214,147,8)" fg:x="837" fg:w="1"/><text x="67.4250%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.1750%" y="629" width="0.0803%" height="15" fill="rgb(213,225,52)" fg:x="837" fg:w="1"/><text x="67.4250%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="67.1750%" y="613" width="0.0803%" height="15" fill="rgb(205,99,43)" fg:x="837" fg:w="1"/><text x="67.4250%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="67.1750%" y="597" width="0.0803%" height="15" fill="rgb(248,141,45)" fg:x="837" fg:w="1"/><text x="67.4250%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="67.1750%" y="581" width="0.0803%" height="15" fill="rgb(233,198,44)" fg:x="837" fg:w="1"/><text x="67.4250%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="67.1750%" y="565" width="0.0803%" height="15" fill="rgb(231,176,38)" fg:x="837" fg:w="1"/><text x="67.4250%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1750%" y="549" width="0.0803%" height="15" fill="rgb(209,31,1)" fg:x="837" fg:w="1"/><text x="67.4250%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="67.2552%" y="693" width="0.0803%" height="15" fill="rgb(246,42,27)" fg:x="838" fg:w="1"/><text x="67.5052%" y="703.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="67.2552%" y="677" width="0.0803%" height="15" fill="rgb(244,104,27)" fg:x="838" fg:w="1"/><text x="67.5052%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="67.2552%" y="661" width="0.0803%" height="15" fill="rgb(209,14,27)" fg:x="838" fg:w="1"/><text x="67.5052%" y="671.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="67.2552%" y="645" width="0.0803%" height="15" fill="rgb(205,170,50)" fg:x="838" fg:w="1"/><text x="67.5052%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.2552%" y="629" width="0.0803%" height="15" fill="rgb(241,127,20)" fg:x="838" fg:w="1"/><text x="67.5052%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="67.2552%" y="613" width="0.0803%" height="15" fill="rgb(230,72,5)" fg:x="838" fg:w="1"/><text x="67.5052%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.2552%" y="597" width="0.0803%" height="15" fill="rgb(231,221,3)" fg:x="838" fg:w="1"/><text x="67.5052%" y="607.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="67.3355%" y="629" width="0.0803%" height="15" fill="rgb(232,150,49)" fg:x="839" fg:w="1"/><text x="67.5855%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="67.3355%" y="613" width="0.0803%" height="15" fill="rgb(225,13,46)" fg:x="839" fg:w="1"/><text x="67.5855%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="67.3355%" y="597" width="0.0803%" height="15" fill="rgb(236,192,49)" fg:x="839" fg:w="1"/><text x="67.5855%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.3355%" y="581" width="0.0803%" height="15" fill="rgb(242,107,14)" fg:x="839" fg:w="1"/><text x="67.5855%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="67.3355%" y="565" width="0.0803%" height="15" fill="rgb(251,185,35)" fg:x="839" fg:w="1"/><text x="67.5855%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.3355%" y="549" width="0.0803%" height="15" fill="rgb(212,128,8)" fg:x="839" fg:w="1"/><text x="67.5855%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.3355%" y="533" width="0.0803%" height="15" fill="rgb(215,223,6)" fg:x="839" fg:w="1"/><text x="67.5855%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3355%" y="517" width="0.0803%" height="15" fill="rgb(216,23,45)" fg:x="839" fg:w="1"/><text x="67.5855%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="67.3355%" y="645" width="0.1605%" height="15" fill="rgb(215,71,45)" fg:x="839" fg:w="2"/><text x="67.5855%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="67.4157%" y="629" width="0.0803%" height="15" fill="rgb(224,2,48)" fg:x="840" fg:w="1"/><text x="67.6657%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.4157%" y="613" width="0.0803%" height="15" fill="rgb(218,48,8)" fg:x="840" fg:w="1"/><text x="67.6657%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="67.4960%" y="597" width="0.0803%" height="15" fill="rgb(254,37,27)" fg:x="841" fg:w="1"/><text x="67.7460%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="67.4960%" y="581" width="0.0803%" height="15" fill="rgb(237,112,2)" fg:x="841" fg:w="1"/><text x="67.7460%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="67.4960%" y="565" width="0.0803%" height="15" fill="rgb(243,64,54)" fg:x="841" fg:w="1"/><text x="67.7460%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="67.4960%" y="549" width="0.0803%" height="15" fill="rgb(211,93,4)" fg:x="841" fg:w="1"/><text x="67.7460%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="67.5762%" y="597" width="0.0803%" height="15" fill="rgb(249,127,30)" fg:x="842" fg:w="1"/><text x="67.8262%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="67.5762%" y="581" width="0.0803%" height="15" fill="rgb(248,76,17)" fg:x="842" fg:w="1"/><text x="67.8262%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="67.5762%" y="565" width="0.0803%" height="15" fill="rgb(244,153,49)" fg:x="842" fg:w="1"/><text x="67.8262%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5762%" y="549" width="0.0803%" height="15" fill="rgb(231,94,34)" fg:x="842" fg:w="1"/><text x="67.8262%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.5762%" y="533" width="0.0803%" height="15" fill="rgb(253,162,40)" fg:x="842" fg:w="1"/><text x="67.8262%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="67.6565%" y="565" width="0.0803%" height="15" fill="rgb(219,194,14)" fg:x="843" fg:w="1"/><text x="67.9065%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="67.6565%" y="549" width="0.0803%" height="15" fill="rgb(226,80,42)" fg:x="843" fg:w="1"/><text x="67.9065%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.6565%" y="533" width="0.0803%" height="15" fill="rgb(208,108,5)" fg:x="843" fg:w="1"/><text x="67.9065%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.6565%" y="517" width="0.0803%" height="15" fill="rgb(209,204,33)" fg:x="843" fg:w="1"/><text x="67.9065%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.6565%" y="501" width="0.0803%" height="15" fill="rgb(232,22,14)" fg:x="843" fg:w="1"/><text x="67.9065%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.6565%" y="485" width="0.0803%" height="15" fill="rgb(236,139,41)" fg:x="843" fg:w="1"/><text x="67.9065%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.6565%" y="469" width="0.0803%" height="15" fill="rgb(220,91,0)" fg:x="843" fg:w="1"/><text x="67.9065%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.6565%" y="453" width="0.0803%" height="15" fill="rgb(243,200,48)" fg:x="843" fg:w="1"/><text x="67.9065%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.7368%" y="533" width="0.1605%" height="15" fill="rgb(237,172,41)" fg:x="844" fg:w="2"/><text x="67.9868%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="67.4960%" y="613" width="0.4815%" height="15" fill="rgb(247,152,34)" fg:x="841" fg:w="6"/><text x="67.7460%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (4 samples, 0.32%)</title><rect x="67.6565%" y="597" width="0.3210%" height="15" fill="rgb(205,88,40)" fg:x="843" fg:w="4"/><text x="67.9065%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="67.6565%" y="581" width="0.3210%" height="15" fill="rgb(223,30,13)" fg:x="843" fg:w="4"/><text x="67.9065%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="67.7368%" y="565" width="0.2408%" height="15" fill="rgb(249,7,18)" fg:x="844" fg:w="3"/><text x="67.9868%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="67.7368%" y="549" width="0.2408%" height="15" fill="rgb(242,185,6)" fg:x="844" fg:w="3"/><text x="67.9868%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.8973%" y="533" width="0.0803%" height="15" fill="rgb(234,115,47)" fg:x="846" fg:w="1"/><text x="68.1473%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.8973%" y="517" width="0.0803%" height="15" fill="rgb(213,98,2)" fg:x="846" fg:w="1"/><text x="68.1473%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.8973%" y="501" width="0.0803%" height="15" fill="rgb(237,162,23)" fg:x="846" fg:w="1"/><text x="68.1473%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.8973%" y="485" width="0.0803%" height="15" fill="rgb(240,174,26)" fg:x="846" fg:w="1"/><text x="68.1473%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.8973%" y="469" width="0.0803%" height="15" fill="rgb(249,90,45)" fg:x="846" fg:w="1"/><text x="68.1473%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.8973%" y="453" width="0.0803%" height="15" fill="rgb(212,126,4)" fg:x="846" fg:w="1"/><text x="68.1473%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="67.4960%" y="629" width="0.5618%" height="15" fill="rgb(236,98,48)" fg:x="841" fg:w="7"/><text x="67.7460%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="67.9775%" y="613" width="0.0803%" height="15" fill="rgb(250,14,51)" fg:x="847" fg:w="1"/><text x="68.2275%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="67.9775%" y="597" width="0.0803%" height="15" fill="rgb(236,2,16)" fg:x="847" fg:w="1"/><text x="68.2275%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.9775%" y="581" width="0.0803%" height="15" fill="rgb(250,146,3)" fg:x="847" fg:w="1"/><text x="68.2275%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.9775%" y="565" width="0.0803%" height="15" fill="rgb(233,72,0)" fg:x="847" fg:w="1"/><text x="68.2275%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.9775%" y="549" width="0.0803%" height="15" fill="rgb(249,172,7)" fg:x="847" fg:w="1"/><text x="68.2275%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.9775%" y="533" width="0.0803%" height="15" fill="rgb(224,213,17)" fg:x="847" fg:w="1"/><text x="68.2275%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (10 samples, 0.80%)</title><rect x="67.3355%" y="693" width="0.8026%" height="15" fill="rgb(221,52,2)" fg:x="839" fg:w="10"/><text x="67.5855%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="67.3355%" y="677" width="0.8026%" height="15" fill="rgb(220,8,41)" fg:x="839" fg:w="10"/><text x="67.5855%" y="687.50"></text></g><g><title>plugins_core::build::QuickThing::make (10 samples, 0.80%)</title><rect x="67.3355%" y="661" width="0.8026%" height="15" fill="rgb(230,207,34)" fg:x="839" fg:w="10"/><text x="67.5855%" y="671.50"></text></g><g><title>plugins_core::build::Build::leads_to (8 samples, 0.64%)</title><rect x="67.4960%" y="645" width="0.6421%" height="15" fill="rgb(240,157,11)" fg:x="841" fg:w="8"/><text x="67.7460%" y="655.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="68.0578%" y="629" width="0.0803%" height="15" fill="rgb(243,209,15)" fg:x="848" fg:w="1"/><text x="68.3078%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="68.0578%" y="613" width="0.0803%" height="15" fill="rgb(251,191,33)" fg:x="848" fg:w="1"/><text x="68.3078%" y="623.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="68.0578%" y="597" width="0.0803%" height="15" fill="rgb(217,58,8)" fg:x="848" fg:w="1"/><text x="68.3078%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="68.0578%" y="581" width="0.0803%" height="15" fill="rgb(210,35,1)" fg:x="848" fg:w="1"/><text x="68.3078%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.0578%" y="565" width="0.0803%" height="15" fill="rgb(231,62,7)" fg:x="848" fg:w="1"/><text x="68.3078%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.0578%" y="549" width="0.0803%" height="15" fill="rgb(207,73,10)" fg:x="848" fg:w="1"/><text x="68.3078%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.0578%" y="533" width="0.0803%" height="15" fill="rgb(216,178,40)" fg:x="848" fg:w="1"/><text x="68.3078%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.0578%" y="517" width="0.0803%" height="15" fill="rgb(238,220,1)" fg:x="848" fg:w="1"/><text x="68.3078%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.0578%" y="501" width="0.0803%" height="15" fill="rgb(246,169,39)" fg:x="848" fg:w="1"/><text x="68.3078%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.0578%" y="485" width="0.0803%" height="15" fill="rgb(240,186,45)" fg:x="848" fg:w="1"/><text x="68.3078%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.0578%" y="469" width="0.0803%" height="15" fill="rgb(225,14,29)" fg:x="848" fg:w="1"/><text x="68.3078%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.0578%" y="453" width="0.0803%" height="15" fill="rgb(243,96,26)" fg:x="848" fg:w="1"/><text x="68.3078%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.1380%" y="517" width="0.0803%" height="15" fill="rgb(234,139,10)" fg:x="849" fg:w="1"/><text x="68.3880%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="68.1380%" y="549" width="0.1605%" height="15" fill="rgb(235,208,23)" fg:x="849" fg:w="2"/><text x="68.3880%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="68.1380%" y="533" width="0.1605%" height="15" fill="rgb(230,140,47)" fg:x="849" fg:w="2"/><text x="68.3880%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="68.2183%" y="517" width="0.0803%" height="15" fill="rgb(241,227,54)" fg:x="850" fg:w="1"/><text x="68.4683%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="68.2183%" y="501" width="0.0803%" height="15" fill="rgb(221,210,40)" fg:x="850" fg:w="1"/><text x="68.4683%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.2183%" y="485" width="0.0803%" height="15" fill="rgb(207,52,1)" fg:x="850" fg:w="1"/><text x="68.4683%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.2183%" y="469" width="0.0803%" height="15" fill="rgb(243,147,42)" fg:x="850" fg:w="1"/><text x="68.4683%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.2986%" y="549" width="0.1605%" height="15" fill="rgb(245,93,7)" fg:x="851" fg:w="2"/><text x="68.5486%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="68.2986%" y="533" width="0.1605%" height="15" fill="rgb(243,119,13)" fg:x="851" fg:w="2"/><text x="68.5486%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="68.2986%" y="517" width="0.1605%" height="15" fill="rgb(228,164,28)" fg:x="851" fg:w="2"/><text x="68.5486%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.3788%" y="501" width="0.0803%" height="15" fill="rgb(234,37,39)" fg:x="852" fg:w="1"/><text x="68.6288%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.3788%" y="485" width="0.0803%" height="15" fill="rgb(246,155,10)" fg:x="852" fg:w="1"/><text x="68.6288%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="68.4591%" y="533" width="0.0803%" height="15" fill="rgb(208,140,53)" fg:x="853" fg:w="1"/><text x="68.7091%" y="543.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="68.4591%" y="517" width="0.0803%" height="15" fill="rgb(234,107,29)" fg:x="853" fg:w="1"/><text x="68.7091%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.5393%" y="501" width="0.1605%" height="15" fill="rgb(217,45,5)" fg:x="854" fg:w="2"/><text x="68.7893%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.6196%" y="485" width="0.0803%" height="15" fill="rgb(251,168,5)" fg:x="855" fg:w="1"/><text x="68.8696%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.64%)</title><rect x="68.1380%" y="581" width="0.6421%" height="15" fill="rgb(242,96,14)" fg:x="849" fg:w="8"/><text x="68.3880%" y="591.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (8 samples, 0.64%)</title><rect x="68.1380%" y="565" width="0.6421%" height="15" fill="rgb(231,148,6)" fg:x="849" fg:w="8"/><text x="68.3880%" y="575.50"></text></g><g><title>kernel::model::any_entity_changes (4 samples, 0.32%)</title><rect x="68.4591%" y="549" width="0.3210%" height="15" fill="rgb(249,100,2)" fg:x="853" fg:w="4"/><text x="68.7091%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="68.5393%" y="533" width="0.2408%" height="15" fill="rgb(212,22,52)" fg:x="854" fg:w="3"/><text x="68.7893%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="68.5393%" y="517" width="0.2408%" height="15" fill="rgb(212,97,14)" fg:x="854" fg:w="3"/><text x="68.7893%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="68.6998%" y="501" width="0.0803%" height="15" fill="rgb(212,24,14)" fg:x="856" fg:w="1"/><text x="68.9498%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="68.6998%" y="485" width="0.0803%" height="15" fill="rgb(239,209,43)" fg:x="856" fg:w="1"/><text x="68.9498%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="68.6998%" y="469" width="0.0803%" height="15" fill="rgb(226,211,38)" fg:x="856" fg:w="1"/><text x="68.9498%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="68.6998%" y="453" width="0.0803%" height="15" fill="rgb(216,118,11)" fg:x="856" fg:w="1"/><text x="68.9498%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="68.6998%" y="437" width="0.0803%" height="15" fill="rgb(223,214,43)" fg:x="856" fg:w="1"/><text x="68.9498%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="68.6998%" y="421" width="0.0803%" height="15" fill="rgb(213,225,15)" fg:x="856" fg:w="1"/><text x="68.9498%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="68.6998%" y="405" width="0.0803%" height="15" fill="rgb(233,115,42)" fg:x="856" fg:w="1"/><text x="68.9498%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.6998%" y="389" width="0.0803%" height="15" fill="rgb(229,93,16)" fg:x="856" fg:w="1"/><text x="68.9498%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.6998%" y="373" width="0.0803%" height="15" fill="rgb(220,114,48)" fg:x="856" fg:w="1"/><text x="68.9498%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.6998%" y="357" width="0.0803%" height="15" fill="rgb(253,78,24)" fg:x="856" fg:w="1"/><text x="68.9498%" y="367.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="68.7801%" y="565" width="0.0803%" height="15" fill="rgb(206,29,19)" fg:x="857" fg:w="1"/><text x="69.0301%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="68.7801%" y="549" width="0.0803%" height="15" fill="rgb(220,96,19)" fg:x="857" fg:w="1"/><text x="69.0301%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="68.7801%" y="533" width="0.0803%" height="15" fill="rgb(222,62,18)" fg:x="857" fg:w="1"/><text x="69.0301%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="68.8604%" y="533" width="0.1605%" height="15" fill="rgb(243,4,41)" fg:x="858" fg:w="2"/><text x="69.1104%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="68.8604%" y="517" width="0.1605%" height="15" fill="rgb(232,199,53)" fg:x="858" fg:w="2"/><text x="69.1104%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="68.8604%" y="501" width="0.1605%" height="15" fill="rgb(212,18,26)" fg:x="858" fg:w="2"/><text x="69.1104%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="68.8604%" y="485" width="0.1605%" height="15" fill="rgb(218,30,49)" fg:x="858" fg:w="2"/><text x="69.1104%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="68.8604%" y="549" width="0.2408%" height="15" fill="rgb(250,154,52)" fg:x="858" fg:w="3"/><text x="69.1104%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.0209%" y="533" width="0.0803%" height="15" fill="rgb(218,176,16)" fg:x="860" fg:w="1"/><text x="69.2709%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.0209%" y="517" width="0.0803%" height="15" fill="rgb(215,61,51)" fg:x="860" fg:w="1"/><text x="69.2709%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="69.1011%" y="533" width="0.2408%" height="15" fill="rgb(234,40,53)" fg:x="861" fg:w="3"/><text x="69.3511%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="69.1814%" y="517" width="0.1605%" height="15" fill="rgb(214,142,25)" fg:x="862" fg:w="2"/><text x="69.4314%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.2616%" y="501" width="0.0803%" height="15" fill="rgb(206,61,7)" fg:x="863" fg:w="1"/><text x="69.5116%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.2616%" y="485" width="0.0803%" height="15" fill="rgb(245,225,1)" fg:x="863" fg:w="1"/><text x="69.5116%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="69.4222%" y="517" width="0.0803%" height="15" fill="rgb(224,122,37)" fg:x="865" fg:w="1"/><text x="69.6722%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.4222%" y="501" width="0.0803%" height="15" fill="rgb(209,221,12)" fg:x="865" fg:w="1"/><text x="69.6722%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.4222%" y="485" width="0.0803%" height="15" fill="rgb(248,70,2)" fg:x="865" fg:w="1"/><text x="69.6722%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.4222%" y="469" width="0.0803%" height="15" fill="rgb(227,173,19)" fg:x="865" fg:w="1"/><text x="69.6722%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="69.4222%" y="453" width="0.0803%" height="15" fill="rgb(228,217,53)" fg:x="865" fg:w="1"/><text x="69.6722%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.4222%" y="437" width="0.0803%" height="15" fill="rgb(248,43,46)" fg:x="865" fg:w="1"/><text x="69.6722%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="69.4222%" y="421" width="0.0803%" height="15" fill="rgb(236,202,32)" fg:x="865" fg:w="1"/><text x="69.6722%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="69.5024%" y="501" width="0.0803%" height="15" fill="rgb(231,220,0)" fg:x="866" fg:w="1"/><text x="69.7524%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.5024%" y="485" width="0.0803%" height="15" fill="rgb(235,11,31)" fg:x="866" fg:w="1"/><text x="69.7524%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.5024%" y="469" width="0.0803%" height="15" fill="rgb(247,159,37)" fg:x="866" fg:w="1"/><text x="69.7524%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.5024%" y="453" width="0.0803%" height="15" fill="rgb(246,179,15)" fg:x="866" fg:w="1"/><text x="69.7524%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="69.5827%" y="485" width="0.0803%" height="15" fill="rgb(221,193,41)" fg:x="867" fg:w="1"/><text x="69.8327%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.5827%" y="469" width="0.0803%" height="15" fill="rgb(228,30,1)" fg:x="867" fg:w="1"/><text x="69.8327%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.5827%" y="453" width="0.0803%" height="15" fill="rgb(233,226,32)" fg:x="867" fg:w="1"/><text x="69.8327%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.5827%" y="437" width="0.0803%" height="15" fill="rgb(238,110,42)" fg:x="867" fg:w="1"/><text x="69.8327%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="69.6629%" y="485" width="0.0803%" height="15" fill="rgb(233,141,16)" fg:x="868" fg:w="1"/><text x="69.9129%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.6629%" y="469" width="0.0803%" height="15" fill="rgb(212,227,9)" fg:x="868" fg:w="1"/><text x="69.9129%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="69.3419%" y="533" width="0.4815%" height="15" fill="rgb(247,119,37)" fg:x="864" fg:w="6"/><text x="69.5919%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="69.5024%" y="517" width="0.3210%" height="15" fill="rgb(219,101,42)" fg:x="866" fg:w="4"/><text x="69.7524%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="69.5827%" y="501" width="0.2408%" height="15" fill="rgb(252,226,3)" fg:x="867" fg:w="3"/><text x="69.8327%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.7432%" y="485" width="0.0803%" height="15" fill="rgb(229,50,28)" fg:x="869" fg:w="1"/><text x="69.9932%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.7432%" y="469" width="0.0803%" height="15" fill="rgb(249,122,7)" fg:x="869" fg:w="1"/><text x="69.9932%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.04%)</title><rect x="68.8604%" y="565" width="1.0433%" height="15" fill="rgb(207,101,46)" fg:x="858" fg:w="13"/><text x="69.1104%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="69.1011%" y="549" width="0.8026%" height="15" fill="rgb(249,90,48)" fg:x="861" fg:w="10"/><text x="69.3511%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.8234%" y="533" width="0.0803%" height="15" fill="rgb(231,10,48)" fg:x="870" fg:w="1"/><text x="70.0734%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.9037%" y="517" width="0.0803%" height="15" fill="rgb(234,120,19)" fg:x="871" fg:w="1"/><text x="70.1537%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.9839%" y="501" width="0.0803%" height="15" fill="rgb(212,221,36)" fg:x="872" fg:w="1"/><text x="70.2339%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="69.9037%" y="565" width="0.2408%" height="15" fill="rgb(230,151,52)" fg:x="871" fg:w="3"/><text x="70.1537%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="69.9037%" y="549" width="0.2408%" height="15" fill="rgb(246,35,38)" fg:x="871" fg:w="3"/><text x="70.1537%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="69.9037%" y="533" width="0.2408%" height="15" fill="rgb(208,110,54)" fg:x="871" fg:w="3"/><text x="70.1537%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="69.9839%" y="517" width="0.1605%" height="15" fill="rgb(250,206,40)" fg:x="872" fg:w="2"/><text x="70.2339%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.0642%" y="501" width="0.0803%" height="15" fill="rgb(225,204,22)" fg:x="873" fg:w="1"/><text x="70.3142%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.0642%" y="485" width="0.0803%" height="15" fill="rgb(220,29,11)" fg:x="873" fg:w="1"/><text x="70.3142%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.2247%" y="517" width="0.0803%" height="15" fill="rgb(254,133,9)" fg:x="875" fg:w="1"/><text x="70.4747%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.3050%" y="517" width="0.0803%" height="15" fill="rgb(254,178,33)" fg:x="876" fg:w="1"/><text x="70.5550%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.3050%" y="501" width="0.0803%" height="15" fill="rgb(239,217,37)" fg:x="876" fg:w="1"/><text x="70.5550%" y="511.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="70.3852%" y="517" width="0.0803%" height="15" fill="rgb(210,41,5)" fg:x="877" fg:w="1"/><text x="70.6352%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.3852%" y="501" width="0.0803%" height="15" fill="rgb(227,23,47)" fg:x="877" fg:w="1"/><text x="70.6352%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="70.3852%" y="485" width="0.0803%" height="15" fill="rgb(215,18,46)" fg:x="877" fg:w="1"/><text x="70.6352%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5457%" y="469" width="0.0803%" height="15" fill="rgb(247,172,0)" fg:x="879" fg:w="1"/><text x="70.7957%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5457%" y="453" width="0.0803%" height="15" fill="rgb(254,23,27)" fg:x="879" fg:w="1"/><text x="70.7957%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.5457%" y="437" width="0.0803%" height="15" fill="rgb(223,61,6)" fg:x="879" fg:w="1"/><text x="70.7957%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="70.6260%" y="437" width="0.1605%" height="15" fill="rgb(237,65,24)" fg:x="880" fg:w="2"/><text x="70.8760%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.7063%" y="421" width="0.0803%" height="15" fill="rgb(238,133,22)" fg:x="881" fg:w="1"/><text x="70.9563%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7063%" y="405" width="0.0803%" height="15" fill="rgb(217,219,5)" fg:x="881" fg:w="1"/><text x="70.9563%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="70.6260%" y="453" width="0.3210%" height="15" fill="rgb(254,24,44)" fg:x="880" fg:w="4"/><text x="70.8760%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="70.7865%" y="437" width="0.1605%" height="15" fill="rgb(217,136,50)" fg:x="882" fg:w="2"/><text x="71.0365%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.8668%" y="421" width="0.0803%" height="15" fill="rgb(243,85,15)" fg:x="883" fg:w="1"/><text x="71.1168%" y="431.50"></text></g><g><title>engine::session::Session::flush (36 samples, 2.89%)</title><rect x="68.1380%" y="693" width="2.8892%" height="15" fill="rgb(224,85,42)" fg:x="849" fg:w="36"/><text x="68.3880%" y="703.50">en..</text></g><g><title>engine::session::Session::save_changes (36 samples, 2.89%)</title><rect x="68.1380%" y="677" width="2.8892%" height="15" fill="rgb(237,142,36)" fg:x="849" fg:w="36"/><text x="68.3880%" y="687.50">en..</text></g><g><title>engine::session::state::State::close (36 samples, 2.89%)</title><rect x="68.1380%" y="661" width="2.8892%" height="15" fill="rgb(215,131,52)" fg:x="849" fg:w="36"/><text x="68.3880%" y="671.50">en..</text></g><g><title>engine::session::state::State::flush_entities (36 samples, 2.89%)</title><rect x="68.1380%" y="645" width="2.8892%" height="15" fill="rgb(216,124,50)" fg:x="849" fg:w="36"/><text x="68.3880%" y="655.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (36 samples, 2.89%)</title><rect x="68.1380%" y="629" width="2.8892%" height="15" fill="rgb(223,61,20)" fg:x="849" fg:w="36"/><text x="68.3880%" y="639.50">en..</text></g><g><title>core::iter::adapters::try_process (36 samples, 2.89%)</title><rect x="68.1380%" y="613" width="2.8892%" height="15" fill="rgb(250,62,47)" fg:x="849" fg:w="36"/><text x="68.3880%" y="623.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 2.89%)</title><rect x="68.1380%" y="597" width="2.8892%" height="15" fill="rgb(225,180,21)" fg:x="849" fg:w="36"/><text x="68.3880%" y="607.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (28 samples, 2.25%)</title><rect x="68.7801%" y="581" width="2.2472%" height="15" fill="rgb(210,89,33)" fg:x="857" fg:w="28"/><text x="69.0301%" y="591.50">e..</text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.88%)</title><rect x="70.1445%" y="565" width="0.8828%" height="15" fill="rgb(205,215,50)" fg:x="874" fg:w="11"/><text x="70.3945%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.88%)</title><rect x="70.1445%" y="549" width="0.8828%" height="15" fill="rgb(207,191,48)" fg:x="874" fg:w="11"/><text x="70.3945%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="70.1445%" y="533" width="0.8828%" height="15" fill="rgb(247,32,5)" fg:x="874" fg:w="11"/><text x="70.3945%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="70.4655%" y="517" width="0.5618%" height="15" fill="rgb(210,113,39)" fg:x="878" fg:w="7"/><text x="70.7155%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="70.4655%" y="501" width="0.5618%" height="15" fill="rgb(242,181,23)" fg:x="878" fg:w="7"/><text x="70.7155%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="70.4655%" y="485" width="0.5618%" height="15" fill="rgb(215,58,22)" fg:x="878" fg:w="7"/><text x="70.7155%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="70.6260%" y="469" width="0.4013%" height="15" fill="rgb(236,31,11)" fg:x="880" fg:w="5"/><text x="70.8760%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="70.9470%" y="453" width="0.0803%" height="15" fill="rgb(244,198,15)" fg:x="884" fg:w="1"/><text x="71.1970%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="70.9470%" y="437" width="0.0803%" height="15" fill="rgb(230,142,36)" fg:x="884" fg:w="1"/><text x="71.1970%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="71.0273%" y="629" width="0.0803%" height="15" fill="rgb(219,48,29)" fg:x="885" fg:w="1"/><text x="71.2773%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.0273%" y="613" width="0.0803%" height="15" fill="rgb(237,179,43)" fg:x="885" fg:w="1"/><text x="71.2773%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.0273%" y="597" width="0.0803%" height="15" fill="rgb(221,67,37)" fg:x="885" fg:w="1"/><text x="71.2773%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.0273%" y="581" width="0.0803%" height="15" fill="rgb(222,217,18)" fg:x="885" fg:w="1"/><text x="71.2773%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.0273%" y="565" width="0.0803%" height="15" fill="rgb(235,107,38)" fg:x="885" fg:w="1"/><text x="71.2773%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.0273%" y="549" width="0.0803%" height="15" fill="rgb(227,110,50)" fg:x="885" fg:w="1"/><text x="71.2773%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.0273%" y="533" width="0.0803%" height="15" fill="rgb(224,176,42)" fg:x="885" fg:w="1"/><text x="71.2773%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.0273%" y="517" width="0.0803%" height="15" fill="rgb(250,34,11)" fg:x="885" fg:w="1"/><text x="71.2773%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="71.0273%" y="661" width="0.1605%" height="15" fill="rgb(253,107,24)" fg:x="885" fg:w="2"/><text x="71.2773%" y="671.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="71.0273%" y="645" width="0.1605%" height="15" fill="rgb(213,146,11)" fg:x="885" fg:w="2"/><text x="71.2773%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="71.1075%" y="629" width="0.0803%" height="15" fill="rgb(216,88,42)" fg:x="886" fg:w="1"/><text x="71.3575%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.1075%" y="613" width="0.0803%" height="15" fill="rgb(231,37,19)" fg:x="886" fg:w="1"/><text x="71.3575%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.1075%" y="597" width="0.0803%" height="15" fill="rgb(213,154,5)" fg:x="886" fg:w="1"/><text x="71.3575%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.1075%" y="581" width="0.0803%" height="15" fill="rgb(234,102,6)" fg:x="886" fg:w="1"/><text x="71.3575%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.1075%" y="565" width="0.0803%" height="15" fill="rgb(206,125,39)" fg:x="886" fg:w="1"/><text x="71.3575%" y="575.50"></text></g><g><title>plugins_core::build::Build::holding (3 samples, 0.24%)</title><rect x="71.0273%" y="693" width="0.2408%" height="15" fill="rgb(254,216,50)" fg:x="885" fg:w="3"/><text x="71.2773%" y="703.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="71.0273%" y="677" width="0.2408%" height="15" fill="rgb(205,65,40)" fg:x="885" fg:w="3"/><text x="71.2773%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="71.1878%" y="661" width="0.0803%" height="15" fill="rgb(244,217,7)" fg:x="887" fg:w="1"/><text x="71.4378%" y="671.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="71.1878%" y="645" width="0.0803%" height="15" fill="rgb(220,203,19)" fg:x="887" fg:w="1"/><text x="71.4378%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.1878%" y="629" width="0.0803%" height="15" fill="rgb(254,124,45)" fg:x="887" fg:w="1"/><text x="71.4378%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.1878%" y="613" width="0.0803%" height="15" fill="rgb(236,111,39)" fg:x="887" fg:w="1"/><text x="71.4378%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.1878%" y="597" width="0.0803%" height="15" fill="rgb(243,49,31)" fg:x="887" fg:w="1"/><text x="71.4378%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="71.1878%" y="581" width="0.0803%" height="15" fill="rgb(252,80,32)" fg:x="887" fg:w="1"/><text x="71.4378%" y="591.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="71.2681%" y="693" width="0.0803%" height="15" fill="rgb(221,67,33)" fg:x="888" fg:w="1"/><text x="71.5181%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="71.2681%" y="677" width="0.0803%" height="15" fill="rgb(225,12,36)" fg:x="888" fg:w="1"/><text x="71.5181%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.2681%" y="661" width="0.0803%" height="15" fill="rgb(210,14,38)" fg:x="888" fg:w="1"/><text x="71.5181%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.2681%" y="645" width="0.0803%" height="15" fill="rgb(251,82,7)" fg:x="888" fg:w="1"/><text x="71.5181%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.2681%" y="629" width="0.0803%" height="15" fill="rgb(253,73,22)" fg:x="888" fg:w="1"/><text x="71.5181%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.2681%" y="613" width="0.0803%" height="15" fill="rgb(237,31,38)" fg:x="888" fg:w="1"/><text x="71.5181%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.2681%" y="597" width="0.0803%" height="15" fill="rgb(234,184,33)" fg:x="888" fg:w="1"/><text x="71.5181%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.2681%" y="581" width="0.0803%" height="15" fill="rgb(219,43,13)" fg:x="888" fg:w="1"/><text x="71.5181%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.3483%" y="677" width="0.0803%" height="15" fill="rgb(252,139,13)" fg:x="889" fg:w="1"/><text x="71.5983%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="71.5088%" y="645" width="0.0803%" height="15" fill="rgb(229,79,33)" fg:x="891" fg:w="1"/><text x="71.7588%" y="655.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="71.5088%" y="629" width="0.0803%" height="15" fill="rgb(248,8,21)" fg:x="891" fg:w="1"/><text x="71.7588%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="71.5891%" y="629" width="0.0803%" height="15" fill="rgb(225,124,31)" fg:x="892" fg:w="1"/><text x="71.8391%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.5891%" y="613" width="0.0803%" height="15" fill="rgb(248,141,9)" fg:x="892" fg:w="1"/><text x="71.8391%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.5891%" y="597" width="0.0803%" height="15" fill="rgb(251,223,32)" fg:x="892" fg:w="1"/><text x="71.8391%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.5891%" y="581" width="0.0803%" height="15" fill="rgb(251,8,33)" fg:x="892" fg:w="1"/><text x="71.8391%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.5891%" y="565" width="0.0803%" height="15" fill="rgb(205,95,13)" fg:x="892" fg:w="1"/><text x="71.8391%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.5891%" y="549" width="0.0803%" height="15" fill="rgb(235,208,38)" fg:x="892" fg:w="1"/><text x="71.8391%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.5891%" y="533" width="0.0803%" height="15" fill="rgb(222,33,24)" fg:x="892" fg:w="1"/><text x="71.8391%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.6693%" y="597" width="0.0803%" height="15" fill="rgb(219,97,3)" fg:x="893" fg:w="1"/><text x="71.9193%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.6693%" y="581" width="0.0803%" height="15" fill="rgb(209,15,37)" fg:x="893" fg:w="1"/><text x="71.9193%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.6693%" y="565" width="0.0803%" height="15" fill="rgb(206,100,16)" fg:x="893" fg:w="1"/><text x="71.9193%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.6693%" y="549" width="0.0803%" height="15" fill="rgb(208,61,41)" fg:x="893" fg:w="1"/><text x="71.9193%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.6693%" y="533" width="0.0803%" height="15" fill="rgb(226,154,13)" fg:x="893" fg:w="1"/><text x="71.9193%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.6693%" y="517" width="0.0803%" height="15" fill="rgb(226,113,19)" fg:x="893" fg:w="1"/><text x="71.9193%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.6693%" y="501" width="0.0803%" height="15" fill="rgb(209,115,46)" fg:x="893" fg:w="1"/><text x="71.9193%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.6693%" y="485" width="0.0803%" height="15" fill="rgb(234,170,38)" fg:x="893" fg:w="1"/><text x="71.9193%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.6693%" y="469" width="0.0803%" height="15" fill="rgb(228,23,37)" fg:x="893" fg:w="1"/><text x="71.9193%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.6693%" y="453" width="0.0803%" height="15" fill="rgb(243,83,27)" fg:x="893" fg:w="1"/><text x="71.9193%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.6693%" y="437" width="0.0803%" height="15" fill="rgb(251,121,22)" fg:x="893" fg:w="1"/><text x="71.9193%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.6693%" y="421" width="0.0803%" height="15" fill="rgb(205,106,26)" fg:x="893" fg:w="1"/><text x="71.9193%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.6693%" y="405" width="0.0803%" height="15" fill="rgb(251,23,10)" fg:x="893" fg:w="1"/><text x="71.9193%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.6693%" y="389" width="0.0803%" height="15" fill="rgb(250,218,35)" fg:x="893" fg:w="1"/><text x="71.9193%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="71.4286%" y="677" width="0.4013%" height="15" fill="rgb(211,16,34)" fg:x="890" fg:w="5"/><text x="71.6786%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="71.4286%" y="661" width="0.4013%" height="15" fill="rgb(238,148,30)" fg:x="890" fg:w="5"/><text x="71.6786%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="71.5891%" y="645" width="0.2408%" height="15" fill="rgb(236,171,40)" fg:x="892" fg:w="3"/><text x="71.8391%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="71.6693%" y="629" width="0.1605%" height="15" fill="rgb(237,128,15)" fg:x="893" fg:w="2"/><text x="71.9193%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="71.6693%" y="613" width="0.1605%" height="15" fill="rgb(222,8,10)" fg:x="893" fg:w="2"/><text x="71.9193%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.7496%" y="597" width="0.0803%" height="15" fill="rgb(244,223,11)" fg:x="894" fg:w="1"/><text x="71.9996%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7496%" y="581" width="0.0803%" height="15" fill="rgb(230,23,54)" fg:x="894" fg:w="1"/><text x="71.9996%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.7496%" y="565" width="0.0803%" height="15" fill="rgb(206,71,18)" fg:x="894" fg:w="1"/><text x="71.9996%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7496%" y="549" width="0.0803%" height="15" fill="rgb(221,190,41)" fg:x="894" fg:w="1"/><text x="71.9996%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.7496%" y="533" width="0.0803%" height="15" fill="rgb(242,202,19)" fg:x="894" fg:w="1"/><text x="71.9996%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7496%" y="517" width="0.0803%" height="15" fill="rgb(242,213,28)" fg:x="894" fg:w="1"/><text x="71.9996%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.7496%" y="501" width="0.0803%" height="15" fill="rgb(224,77,34)" fg:x="894" fg:w="1"/><text x="71.9996%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="71.9101%" y="661" width="0.0803%" height="15" fill="rgb(231,13,30)" fg:x="896" fg:w="1"/><text x="72.1601%" y="671.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="71.9101%" y="645" width="0.0803%" height="15" fill="rgb(231,126,46)" fg:x="896" fg:w="1"/><text x="72.1601%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="71.9101%" y="629" width="0.0803%" height="15" fill="rgb(237,50,16)" fg:x="896" fg:w="1"/><text x="72.1601%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.9101%" y="613" width="0.0803%" height="15" fill="rgb(250,0,53)" fg:x="896" fg:w="1"/><text x="72.1601%" y="623.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="71.9904%" y="645" width="0.0803%" height="15" fill="rgb(206,168,4)" fg:x="897" fg:w="1"/><text x="72.2404%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.9904%" y="629" width="0.0803%" height="15" fill="rgb(237,195,30)" fg:x="897" fg:w="1"/><text x="72.2404%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.9904%" y="613" width="0.0803%" height="15" fill="rgb(250,185,28)" fg:x="897" fg:w="1"/><text x="72.2404%" y="623.50"></text></g><g><title>plugins_core::build::Build::occupying (11 samples, 0.88%)</title><rect x="71.3483%" y="693" width="0.8828%" height="15" fill="rgb(236,31,48)" fg:x="889" fg:w="11"/><text x="71.5983%" y="703.50"></text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.40%)</title><rect x="71.8299%" y="677" width="0.4013%" height="15" fill="rgb(240,210,1)" fg:x="895" fg:w="5"/><text x="72.0799%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="71.9904%" y="661" width="0.2408%" height="15" fill="rgb(211,67,10)" fg:x="897" fg:w="3"/><text x="72.2404%" y="671.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (2 samples, 0.16%)</title><rect x="72.0706%" y="645" width="0.1605%" height="15" fill="rgb(224,37,37)" fg:x="898" fg:w="2"/><text x="72.3206%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="72.0706%" y="629" width="0.1605%" height="15" fill="rgb(211,57,29)" fg:x="898" fg:w="2"/><text x="72.3206%" y="639.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="72.1509%" y="613" width="0.0803%" height="15" fill="rgb(222,128,38)" fg:x="899" fg:w="1"/><text x="72.4009%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="72.1509%" y="597" width="0.0803%" height="15" fill="rgb(222,119,2)" fg:x="899" fg:w="1"/><text x="72.4009%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.2311%" y="645" width="0.0803%" height="15" fill="rgb(207,185,13)" fg:x="900" fg:w="1"/><text x="72.4811%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.2311%" y="629" width="0.0803%" height="15" fill="rgb(234,134,26)" fg:x="900" fg:w="1"/><text x="72.4811%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.2311%" y="613" width="0.0803%" height="15" fill="rgb(236,28,54)" fg:x="900" fg:w="1"/><text x="72.4811%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.2311%" y="597" width="0.0803%" height="15" fill="rgb(218,4,16)" fg:x="900" fg:w="1"/><text x="72.4811%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.2311%" y="581" width="0.0803%" height="15" fill="rgb(206,115,32)" fg:x="900" fg:w="1"/><text x="72.4811%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.2311%" y="565" width="0.0803%" height="15" fill="rgb(221,12,8)" fg:x="900" fg:w="1"/><text x="72.4811%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.2311%" y="549" width="0.0803%" height="15" fill="rgb(239,207,6)" fg:x="900" fg:w="1"/><text x="72.4811%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.2311%" y="533" width="0.0803%" height="15" fill="rgb(217,119,6)" fg:x="900" fg:w="1"/><text x="72.4811%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.2311%" y="517" width="0.0803%" height="15" fill="rgb(230,27,1)" fg:x="900" fg:w="1"/><text x="72.4811%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.2311%" y="501" width="0.0803%" height="15" fill="rgb(237,155,1)" fg:x="900" fg:w="1"/><text x="72.4811%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="72.3114%" y="629" width="0.0803%" height="15" fill="rgb(248,66,50)" fg:x="901" fg:w="1"/><text x="72.5614%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="72.3114%" y="613" width="0.0803%" height="15" fill="rgb(218,66,19)" fg:x="901" fg:w="1"/><text x="72.5614%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.3114%" y="597" width="0.0803%" height="15" fill="rgb(229,19,7)" fg:x="901" fg:w="1"/><text x="72.5614%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.3114%" y="581" width="0.0803%" height="15" fill="rgb(223,65,18)" fg:x="901" fg:w="1"/><text x="72.5614%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3114%" y="565" width="0.0803%" height="15" fill="rgb(216,100,6)" fg:x="901" fg:w="1"/><text x="72.5614%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.3114%" y="549" width="0.0803%" height="15" fill="rgb(215,16,2)" fg:x="901" fg:w="1"/><text x="72.5614%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3114%" y="533" width="0.0803%" height="15" fill="rgb(219,20,33)" fg:x="901" fg:w="1"/><text x="72.5614%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.3917%" y="597" width="0.0803%" height="15" fill="rgb(215,120,26)" fg:x="902" fg:w="1"/><text x="72.6417%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.3917%" y="581" width="0.0803%" height="15" fill="rgb(240,175,31)" fg:x="902" fg:w="1"/><text x="72.6417%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="72.3917%" y="565" width="0.0803%" height="15" fill="rgb(245,165,43)" fg:x="902" fg:w="1"/><text x="72.6417%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="72.2311%" y="661" width="0.3210%" height="15" fill="rgb(228,92,16)" fg:x="900" fg:w="4"/><text x="72.4811%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="72.3114%" y="645" width="0.2408%" height="15" fill="rgb(252,37,37)" fg:x="901" fg:w="3"/><text x="72.5614%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="72.3917%" y="629" width="0.1605%" height="15" fill="rgb(220,96,32)" fg:x="902" fg:w="2"/><text x="72.6417%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="72.3917%" y="613" width="0.1605%" height="15" fill="rgb(206,224,2)" fg:x="902" fg:w="2"/><text x="72.6417%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="72.4719%" y="597" width="0.0803%" height="15" fill="rgb(221,63,25)" fg:x="903" fg:w="1"/><text x="72.7219%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="72.4719%" y="581" width="0.0803%" height="15" fill="rgb(244,60,40)" fg:x="903" fg:w="1"/><text x="72.7219%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="72.4719%" y="565" width="0.0803%" height="15" fill="rgb(209,102,13)" fg:x="903" fg:w="1"/><text x="72.7219%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.4719%" y="549" width="0.0803%" height="15" fill="rgb(216,127,17)" fg:x="903" fg:w="1"/><text x="72.7219%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (70 samples, 5.62%)</title><rect x="67.0144%" y="709" width="5.6180%" height="15" fill="rgb(242,182,26)" fg:x="835" fg:w="70"/><text x="67.2644%" y="719.50">plugins..</text></g><g><title>plugins_core::build::Build::wearing (5 samples, 0.40%)</title><rect x="72.2311%" y="693" width="0.4013%" height="15" fill="rgb(233,22,19)" fg:x="900" fg:w="5"/><text x="72.4811%" y="703.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="72.2311%" y="677" width="0.4013%" height="15" fill="rgb(238,173,31)" fg:x="900" fg:w="5"/><text x="72.4811%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.5522%" y="661" width="0.0803%" height="15" fill="rgb(244,165,10)" fg:x="904" fg:w="1"/><text x="72.8022%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.5522%" y="645" width="0.0803%" height="15" fill="rgb(251,138,36)" fg:x="904" fg:w="1"/><text x="72.8022%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.5522%" y="629" width="0.0803%" height="15" fill="rgb(233,2,19)" fg:x="904" fg:w="1"/><text x="72.8022%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.5522%" y="613" width="0.0803%" height="15" fill="rgb(206,178,31)" fg:x="904" fg:w="1"/><text x="72.8022%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.5522%" y="597" width="0.0803%" height="15" fill="rgb(223,128,44)" fg:x="904" fg:w="1"/><text x="72.8022%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.5522%" y="581" width="0.0803%" height="15" fill="rgb(238,24,5)" fg:x="904" fg:w="1"/><text x="72.8022%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.5522%" y="565" width="0.0803%" height="15" fill="rgb(217,140,4)" fg:x="904" fg:w="1"/><text x="72.8022%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.5522%" y="549" width="0.0803%" height="15" fill="rgb(250,89,54)" fg:x="904" fg:w="1"/><text x="72.8022%" y="559.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="72.6324%" y="645" width="0.0803%" height="15" fill="rgb(223,199,30)" fg:x="905" fg:w="1"/><text x="72.8824%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="72.6324%" y="629" width="0.0803%" height="15" fill="rgb(220,47,34)" fg:x="905" fg:w="1"/><text x="72.8824%" y="639.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="72.6324%" y="613" width="0.0803%" height="15" fill="rgb(206,12,44)" fg:x="905" fg:w="1"/><text x="72.8824%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="72.6324%" y="597" width="0.0803%" height="15" fill="rgb(226,159,9)" fg:x="905" fg:w="1"/><text x="72.8824%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="72.6324%" y="581" width="0.0803%" height="15" fill="rgb(224,150,25)" fg:x="905" fg:w="1"/><text x="72.8824%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="72.7127%" y="645" width="0.0803%" height="15" fill="rgb(248,214,17)" fg:x="906" fg:w="1"/><text x="72.9627%" y="655.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="72.7127%" y="629" width="0.0803%" height="15" fill="rgb(208,189,54)" fg:x="906" fg:w="1"/><text x="72.9627%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="72.7127%" y="613" width="0.0803%" height="15" fill="rgb(233,78,33)" fg:x="906" fg:w="1"/><text x="72.9627%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.7127%" y="597" width="0.0803%" height="15" fill="rgb(244,217,34)" fg:x="906" fg:w="1"/><text x="72.9627%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.7127%" y="581" width="0.0803%" height="15" fill="rgb(221,41,46)" fg:x="906" fg:w="1"/><text x="72.9627%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.7127%" y="565" width="0.0803%" height="15" fill="rgb(216,152,46)" fg:x="906" fg:w="1"/><text x="72.9627%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.7127%" y="549" width="0.0803%" height="15" fill="rgb(235,72,49)" fg:x="906" fg:w="1"/><text x="72.9627%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.7127%" y="533" width="0.0803%" height="15" fill="rgb(214,12,0)" fg:x="906" fg:w="1"/><text x="72.9627%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.7127%" y="517" width="0.0803%" height="15" fill="rgb(254,8,3)" fg:x="906" fg:w="1"/><text x="72.9627%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.7929%" y="581" width="0.1605%" height="15" fill="rgb(238,167,16)" fg:x="907" fg:w="2"/><text x="73.0429%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.7929%" y="565" width="0.1605%" height="15" fill="rgb(236,220,0)" fg:x="907" fg:w="2"/><text x="73.0429%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.8732%" y="549" width="0.0803%" height="15" fill="rgb(207,8,20)" fg:x="908" fg:w="1"/><text x="73.1232%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.8732%" y="533" width="0.0803%" height="15" fill="rgb(236,113,14)" fg:x="908" fg:w="1"/><text x="73.1232%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.8732%" y="517" width="0.0803%" height="15" fill="rgb(207,6,6)" fg:x="908" fg:w="1"/><text x="73.1232%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.8732%" y="501" width="0.0803%" height="15" fill="rgb(225,92,41)" fg:x="908" fg:w="1"/><text x="73.1232%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.8732%" y="485" width="0.0803%" height="15" fill="rgb(234,224,18)" fg:x="908" fg:w="1"/><text x="73.1232%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="72.8732%" y="469" width="0.0803%" height="15" fill="rgb(248,195,4)" fg:x="908" fg:w="1"/><text x="73.1232%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.8732%" y="453" width="0.0803%" height="15" fill="rgb(229,146,7)" fg:x="908" fg:w="1"/><text x="73.1232%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="72.7929%" y="629" width="0.2408%" height="15" fill="rgb(249,192,15)" fg:x="907" fg:w="3"/><text x="73.0429%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="72.7929%" y="613" width="0.2408%" height="15" fill="rgb(253,77,34)" fg:x="907" fg:w="3"/><text x="73.0429%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="72.7929%" y="597" width="0.2408%" height="15" fill="rgb(236,228,3)" fg:x="907" fg:w="3"/><text x="73.0429%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.9535%" y="581" width="0.0803%" height="15" fill="rgb(233,71,16)" fg:x="909" fg:w="1"/><text x="73.2035%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.9535%" y="565" width="0.0803%" height="15" fill="rgb(239,41,1)" fg:x="909" fg:w="1"/><text x="73.2035%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.9535%" y="549" width="0.0803%" height="15" fill="rgb(214,119,41)" fg:x="909" fg:w="1"/><text x="73.2035%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.9535%" y="533" width="0.0803%" height="15" fill="rgb(213,17,39)" fg:x="909" fg:w="1"/><text x="73.2035%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.9535%" y="517" width="0.0803%" height="15" fill="rgb(245,42,20)" fg:x="909" fg:w="1"/><text x="73.2035%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="72.9535%" y="501" width="0.0803%" height="15" fill="rgb(252,18,22)" fg:x="909" fg:w="1"/><text x="73.2035%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.9535%" y="485" width="0.0803%" height="15" fill="rgb(219,125,29)" fg:x="909" fg:w="1"/><text x="73.2035%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="72.7929%" y="645" width="0.3210%" height="15" fill="rgb(215,56,47)" fg:x="907" fg:w="4"/><text x="73.0429%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="73.0337%" y="629" width="0.0803%" height="15" fill="rgb(212,211,43)" fg:x="910" fg:w="1"/><text x="73.2837%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="73.0337%" y="613" width="0.0803%" height="15" fill="rgb(225,24,34)" fg:x="910" fg:w="1"/><text x="73.2837%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.0337%" y="597" width="0.0803%" height="15" fill="rgb(229,104,27)" fg:x="910" fg:w="1"/><text x="73.2837%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="73.0337%" y="581" width="0.0803%" height="15" fill="rgb(208,56,42)" fg:x="910" fg:w="1"/><text x="73.2837%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="73.0337%" y="565" width="0.0803%" height="15" fill="rgb(210,79,18)" fg:x="910" fg:w="1"/><text x="73.2837%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="73.0337%" y="549" width="0.0803%" height="15" fill="rgb(236,125,53)" fg:x="910" fg:w="1"/><text x="73.2837%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.0337%" y="533" width="0.0803%" height="15" fill="rgb(207,101,52)" fg:x="910" fg:w="1"/><text x="73.2837%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="73.0337%" y="517" width="0.0803%" height="15" fill="rgb(248,51,10)" fg:x="910" fg:w="1"/><text x="73.2837%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="73.0337%" y="501" width="0.0803%" height="15" fill="rgb(222,184,26)" fg:x="910" fg:w="1"/><text x="73.2837%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.1140%" y="581" width="0.0803%" height="15" fill="rgb(226,13,15)" fg:x="911" fg:w="1"/><text x="73.3640%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1942%" y="517" width="0.0803%" height="15" fill="rgb(238,108,43)" fg:x="912" fg:w="1"/><text x="73.4442%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="72.6324%" y="661" width="0.7223%" height="15" fill="rgb(252,6,18)" fg:x="905" fg:w="9"/><text x="72.8824%" y="671.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="73.1140%" y="645" width="0.2408%" height="15" fill="rgb(215,206,11)" fg:x="911" fg:w="3"/><text x="73.3640%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="73.1140%" y="629" width="0.2408%" height="15" fill="rgb(243,20,18)" fg:x="911" fg:w="3"/><text x="73.3640%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="73.1140%" y="613" width="0.2408%" height="15" fill="rgb(213,39,51)" fg:x="911" fg:w="3"/><text x="73.3640%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="73.1140%" y="597" width="0.2408%" height="15" fill="rgb(225,153,38)" fg:x="911" fg:w="3"/><text x="73.3640%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="73.1942%" y="581" width="0.1605%" height="15" fill="rgb(235,8,28)" fg:x="912" fg:w="2"/><text x="73.4442%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.1942%" y="565" width="0.1605%" height="15" fill="rgb(215,0,21)" fg:x="912" fg:w="2"/><text x="73.4442%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="73.1942%" y="549" width="0.1605%" height="15" fill="rgb(205,153,39)" fg:x="912" fg:w="2"/><text x="73.4442%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.1942%" y="533" width="0.1605%" height="15" fill="rgb(231,172,8)" fg:x="912" fg:w="2"/><text x="73.4442%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.2745%" y="517" width="0.0803%" height="15" fill="rgb(251,142,40)" fg:x="913" fg:w="1"/><text x="73.5245%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.2745%" y="501" width="0.0803%" height="15" fill="rgb(214,48,45)" fg:x="913" fg:w="1"/><text x="73.5245%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (10 samples, 0.80%)</title><rect x="72.6324%" y="709" width="0.8026%" height="15" fill="rgb(231,29,28)" fg:x="905" fg:w="10"/><text x="72.8824%" y="719.50"></text></g><g><title>plugins_core::build::QuickThing::make (10 samples, 0.80%)</title><rect x="72.6324%" y="693" width="0.8026%" height="15" fill="rgb(245,57,8)" fg:x="905" fg:w="10"/><text x="72.8824%" y="703.50"></text></g><g><title>plugins_core::build::Build::into_entry (10 samples, 0.80%)</title><rect x="72.6324%" y="677" width="0.8026%" height="15" fill="rgb(236,199,39)" fg:x="905" fg:w="10"/><text x="72.8824%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="73.3547%" y="661" width="0.0803%" height="15" fill="rgb(208,132,35)" fg:x="914" fg:w="1"/><text x="73.6047%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.3547%" y="645" width="0.0803%" height="15" fill="rgb(225,217,34)" fg:x="914" fg:w="1"/><text x="73.6047%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="73.4350%" y="677" width="0.0803%" height="15" fill="rgb(252,227,26)" fg:x="915" fg:w="1"/><text x="73.6850%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="73.4350%" y="661" width="0.0803%" height="15" fill="rgb(250,228,18)" fg:x="915" fg:w="1"/><text x="73.6850%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="73.4350%" y="645" width="0.0803%" height="15" fill="rgb(222,176,49)" fg:x="915" fg:w="1"/><text x="73.6850%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.4350%" y="629" width="0.0803%" height="15" fill="rgb(212,89,5)" fg:x="915" fg:w="1"/><text x="73.6850%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="73.4350%" y="613" width="0.0803%" height="15" fill="rgb(211,131,11)" fg:x="915" fg:w="1"/><text x="73.6850%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="73.4350%" y="597" width="0.0803%" height="15" fill="rgb(226,185,34)" fg:x="915" fg:w="1"/><text x="73.6850%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.4350%" y="581" width="0.0803%" height="15" fill="rgb(239,228,52)" fg:x="915" fg:w="1"/><text x="73.6850%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="73.4350%" y="693" width="0.1605%" height="15" fill="rgb(213,126,26)" fg:x="915" fg:w="2"/><text x="73.6850%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.5152%" y="677" width="0.0803%" height="15" fill="rgb(248,59,21)" fg:x="916" fg:w="1"/><text x="73.7652%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="73.6758%" y="661" width="0.0803%" height="15" fill="rgb(207,10,1)" fg:x="918" fg:w="1"/><text x="73.9258%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.6758%" y="645" width="0.0803%" height="15" fill="rgb(240,122,43)" fg:x="918" fg:w="1"/><text x="73.9258%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.6758%" y="629" width="0.0803%" height="15" fill="rgb(250,158,39)" fg:x="918" fg:w="1"/><text x="73.9258%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.6758%" y="613" width="0.0803%" height="15" fill="rgb(212,108,0)" fg:x="918" fg:w="1"/><text x="73.9258%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="73.6758%" y="597" width="0.0803%" height="15" fill="rgb(231,150,38)" fg:x="918" fg:w="1"/><text x="73.9258%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.6758%" y="581" width="0.0803%" height="15" fill="rgb(249,154,4)" fg:x="918" fg:w="1"/><text x="73.9258%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.6758%" y="565" width="0.0803%" height="15" fill="rgb(219,46,1)" fg:x="918" fg:w="1"/><text x="73.9258%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.6758%" y="549" width="0.0803%" height="15" fill="rgb(227,68,4)" fg:x="918" fg:w="1"/><text x="73.9258%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.6758%" y="533" width="0.0803%" height="15" fill="rgb(254,224,51)" fg:x="918" fg:w="1"/><text x="73.9258%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.6758%" y="517" width="0.0803%" height="15" fill="rgb(220,89,20)" fg:x="918" fg:w="1"/><text x="73.9258%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="73.7560%" y="661" width="0.0803%" height="15" fill="rgb(245,148,36)" fg:x="919" fg:w="1"/><text x="74.0060%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="73.7560%" y="645" width="0.0803%" height="15" fill="rgb(216,50,30)" fg:x="919" fg:w="1"/><text x="74.0060%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.7560%" y="629" width="0.0803%" height="15" fill="rgb(254,186,48)" fg:x="919" fg:w="1"/><text x="74.0060%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="73.7560%" y="613" width="0.0803%" height="15" fill="rgb(237,78,54)" fg:x="919" fg:w="1"/><text x="74.0060%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.7560%" y="597" width="0.0803%" height="15" fill="rgb(208,122,28)" fg:x="919" fg:w="1"/><text x="74.0060%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.7560%" y="581" width="0.0803%" height="15" fill="rgb(237,71,0)" fg:x="919" fg:w="1"/><text x="74.0060%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="73.8363%" y="661" width="0.0803%" height="15" fill="rgb(241,168,21)" fg:x="920" fg:w="1"/><text x="74.0863%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="73.8363%" y="645" width="0.0803%" height="15" fill="rgb(252,223,14)" fg:x="920" fg:w="1"/><text x="74.0863%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.8363%" y="629" width="0.0803%" height="15" fill="rgb(228,172,14)" fg:x="920" fg:w="1"/><text x="74.0863%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.8363%" y="613" width="0.0803%" height="15" fill="rgb(236,44,24)" fg:x="920" fg:w="1"/><text x="74.0863%" y="623.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (139 samples, 11.16%)</title><rect x="62.8411%" y="725" width="11.1557%" height="15" fill="rgb(211,153,1)" fg:x="783" fg:w="139"/><text x="63.0911%" y="735.50">&lt;tests::HoldingK..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (7 samples, 0.56%)</title><rect x="73.4350%" y="709" width="0.5618%" height="15" fill="rgb(242,70,19)" fg:x="915" fg:w="7"/><text x="73.6850%" y="719.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="73.5955%" y="693" width="0.4013%" height="15" fill="rgb(237,172,13)" fg:x="917" fg:w="5"/><text x="73.8455%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="73.6758%" y="677" width="0.3210%" height="15" fill="rgb(215,222,51)" fg:x="918" fg:w="4"/><text x="73.9258%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="73.9165%" y="661" width="0.0803%" height="15" fill="rgb(227,136,3)" fg:x="921" fg:w="1"/><text x="74.1665%" y="671.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="73.9165%" y="645" width="0.0803%" height="15" fill="rgb(234,107,46)" fg:x="921" fg:w="1"/><text x="74.1665%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.9968%" y="725" width="0.0803%" height="15" fill="rgb(224,56,35)" fg:x="922" fg:w="1"/><text x="74.2468%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="74.0770%" y="709" width="0.0803%" height="15" fill="rgb(253,132,31)" fg:x="923" fg:w="1"/><text x="74.3270%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.0770%" y="693" width="0.0803%" height="15" fill="rgb(249,97,5)" fg:x="923" fg:w="1"/><text x="74.3270%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.1573%" y="613" width="0.1605%" height="15" fill="rgb(225,135,20)" fg:x="924" fg:w="2"/><text x="74.4073%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.1573%" y="597" width="0.1605%" height="15" fill="rgb(220,48,27)" fg:x="924" fg:w="2"/><text x="74.4073%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.1573%" y="581" width="0.1605%" height="15" fill="rgb(214,91,28)" fg:x="924" fg:w="2"/><text x="74.4073%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.1573%" y="565" width="0.1605%" height="15" fill="rgb(232,51,16)" fg:x="924" fg:w="2"/><text x="74.4073%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="74.1573%" y="645" width="0.2408%" height="15" fill="rgb(254,38,15)" fg:x="924" fg:w="3"/><text x="74.4073%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="74.1573%" y="629" width="0.2408%" height="15" fill="rgb(243,186,4)" fg:x="924" fg:w="3"/><text x="74.4073%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.3178%" y="613" width="0.0803%" height="15" fill="rgb(222,210,21)" fg:x="926" fg:w="1"/><text x="74.5678%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.3178%" y="597" width="0.0803%" height="15" fill="rgb(228,132,3)" fg:x="926" fg:w="1"/><text x="74.5678%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.3178%" y="581" width="0.0803%" height="15" fill="rgb(253,188,15)" fg:x="926" fg:w="1"/><text x="74.5678%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.3178%" y="565" width="0.0803%" height="15" fill="rgb(216,192,40)" fg:x="926" fg:w="1"/><text x="74.5678%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.3178%" y="549" width="0.0803%" height="15" fill="rgb(230,126,2)" fg:x="926" fg:w="1"/><text x="74.5678%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.3178%" y="533" width="0.0803%" height="15" fill="rgb(246,23,15)" fg:x="926" fg:w="1"/><text x="74.5678%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="74.3981%" y="629" width="0.0803%" height="15" fill="rgb(250,224,8)" fg:x="927" fg:w="1"/><text x="74.6481%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.3981%" y="613" width="0.0803%" height="15" fill="rgb(247,226,46)" fg:x="927" fg:w="1"/><text x="74.6481%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.4783%" y="613" width="0.0803%" height="15" fill="rgb(226,67,43)" fg:x="928" fg:w="1"/><text x="74.7283%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (7 samples, 0.56%)</title><rect x="74.1573%" y="677" width="0.5618%" height="15" fill="rgb(239,37,7)" fg:x="924" fg:w="7"/><text x="74.4073%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="74.1573%" y="661" width="0.5618%" height="15" fill="rgb(239,125,3)" fg:x="924" fg:w="7"/><text x="74.4073%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="74.3981%" y="645" width="0.3210%" height="15" fill="rgb(235,59,37)" fg:x="927" fg:w="4"/><text x="74.6481%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="74.4783%" y="629" width="0.2408%" height="15" fill="rgb(241,214,47)" fg:x="928" fg:w="3"/><text x="74.7283%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.5586%" y="613" width="0.1605%" height="15" fill="rgb(214,114,51)" fg:x="929" fg:w="2"/><text x="74.8086%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.5586%" y="597" width="0.1605%" height="15" fill="rgb(221,180,19)" fg:x="929" fg:w="2"/><text x="74.8086%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.6388%" y="581" width="0.0803%" height="15" fill="rgb(223,66,32)" fg:x="930" fg:w="1"/><text x="74.8888%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6388%" y="565" width="0.0803%" height="15" fill="rgb(218,134,38)" fg:x="930" fg:w="1"/><text x="74.8888%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6388%" y="549" width="0.0803%" height="15" fill="rgb(250,83,11)" fg:x="930" fg:w="1"/><text x="74.8888%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6388%" y="533" width="0.0803%" height="15" fill="rgb(239,137,18)" fg:x="930" fg:w="1"/><text x="74.8888%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="74.7191%" y="661" width="0.0803%" height="15" fill="rgb(242,185,53)" fg:x="931" fg:w="1"/><text x="74.9691%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.7191%" y="645" width="0.0803%" height="15" fill="rgb(244,165,31)" fg:x="931" fg:w="1"/><text x="74.9691%" y="655.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.7994%" y="629" width="0.0803%" height="15" fill="rgb(223,129,30)" fg:x="932" fg:w="1"/><text x="75.0494%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7994%" y="613" width="0.0803%" height="15" fill="rgb(240,148,35)" fg:x="932" fg:w="1"/><text x="75.0494%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.7994%" y="597" width="0.0803%" height="15" fill="rgb(231,3,24)" fg:x="932" fg:w="1"/><text x="75.0494%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7994%" y="581" width="0.0803%" height="15" fill="rgb(227,197,42)" fg:x="932" fg:w="1"/><text x="75.0494%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.8796%" y="533" width="0.0803%" height="15" fill="rgb(251,41,31)" fg:x="933" fg:w="1"/><text x="75.1296%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="74.8796%" y="517" width="0.0803%" height="15" fill="rgb(207,92,5)" fg:x="933" fg:w="1"/><text x="75.1296%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.8796%" y="501" width="0.0803%" height="15" fill="rgb(236,62,31)" fg:x="933" fg:w="1"/><text x="75.1296%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9599%" y="501" width="0.0803%" height="15" fill="rgb(248,218,41)" fg:x="934" fg:w="1"/><text x="75.2099%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9599%" y="485" width="0.0803%" height="15" fill="rgb(250,128,19)" fg:x="934" fg:w="1"/><text x="75.2099%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.9599%" y="469" width="0.0803%" height="15" fill="rgb(239,216,33)" fg:x="934" fg:w="1"/><text x="75.2099%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.0401%" y="501" width="0.0803%" height="15" fill="rgb(216,44,26)" fg:x="935" fg:w="1"/><text x="75.2901%" y="511.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.32%)</title><rect x="74.8796%" y="629" width="0.3210%" height="15" fill="rgb(207,69,29)" fg:x="933" fg:w="4"/><text x="75.1296%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="74.8796%" y="613" width="0.3210%" height="15" fill="rgb(246,182,38)" fg:x="933" fg:w="4"/><text x="75.1296%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="74.8796%" y="597" width="0.3210%" height="15" fill="rgb(252,219,28)" fg:x="933" fg:w="4"/><text x="75.1296%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="74.8796%" y="581" width="0.3210%" height="15" fill="rgb(209,164,16)" fg:x="933" fg:w="4"/><text x="75.1296%" y="591.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (4 samples, 0.32%)</title><rect x="74.8796%" y="565" width="0.3210%" height="15" fill="rgb(208,49,15)" fg:x="933" fg:w="4"/><text x="75.1296%" y="575.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="74.8796%" y="549" width="0.3210%" height="15" fill="rgb(235,42,45)" fg:x="933" fg:w="4"/><text x="75.1296%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="74.9599%" y="533" width="0.2408%" height="15" fill="rgb(246,198,8)" fg:x="934" fg:w="3"/><text x="75.2099%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="74.9599%" y="517" width="0.2408%" height="15" fill="rgb(237,205,33)" fg:x="934" fg:w="3"/><text x="75.2099%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.1204%" y="501" width="0.0803%" height="15" fill="rgb(249,116,21)" fg:x="936" fg:w="1"/><text x="75.3704%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.1204%" y="485" width="0.0803%" height="15" fill="rgb(230,35,49)" fg:x="936" fg:w="1"/><text x="75.3704%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.1204%" y="469" width="0.0803%" height="15" fill="rgb(207,8,52)" fg:x="936" fg:w="1"/><text x="75.3704%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.1204%" y="453" width="0.0803%" height="15" fill="rgb(218,173,0)" fg:x="936" fg:w="1"/><text x="75.3704%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.1204%" y="437" width="0.0803%" height="15" fill="rgb(248,106,34)" fg:x="936" fg:w="1"/><text x="75.3704%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.2006%" y="629" width="0.0803%" height="15" fill="rgb(232,50,11)" fg:x="937" fg:w="1"/><text x="75.4506%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_audience (15 samples, 1.20%)</title><rect x="74.1573%" y="693" width="1.2039%" height="15" fill="rgb(213,142,18)" fg:x="924" fg:w="15"/><text x="74.4073%" y="703.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (8 samples, 0.64%)</title><rect x="74.7191%" y="677" width="0.6421%" height="15" fill="rgb(246,117,38)" fg:x="931" fg:w="8"/><text x="74.9691%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="74.7994%" y="661" width="0.5618%" height="15" fill="rgb(218,133,54)" fg:x="932" fg:w="7"/><text x="75.0494%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="74.7994%" y="645" width="0.5618%" height="15" fill="rgb(216,154,35)" fg:x="932" fg:w="7"/><text x="75.0494%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.2809%" y="629" width="0.0803%" height="15" fill="rgb(219,175,36)" fg:x="938" fg:w="1"/><text x="75.5309%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.2809%" y="613" width="0.0803%" height="15" fill="rgb(224,0,16)" fg:x="938" fg:w="1"/><text x="75.5309%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="75.2809%" y="597" width="0.0803%" height="15" fill="rgb(221,186,40)" fg:x="938" fg:w="1"/><text x="75.5309%" y="607.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.2809%" y="581" width="0.0803%" height="15" fill="rgb(254,0,31)" fg:x="938" fg:w="1"/><text x="75.5309%" y="591.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="75.2809%" y="565" width="0.0803%" height="15" fill="rgb(206,138,52)" fg:x="938" fg:w="1"/><text x="75.5309%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.2809%" y="549" width="0.0803%" height="15" fill="rgb(229,99,30)" fg:x="938" fg:w="1"/><text x="75.5309%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.2809%" y="533" width="0.0803%" height="15" fill="rgb(205,131,29)" fg:x="938" fg:w="1"/><text x="75.5309%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.2809%" y="517" width="0.0803%" height="15" fill="rgb(232,114,46)" fg:x="938" fg:w="1"/><text x="75.5309%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.3612%" y="677" width="0.0803%" height="15" fill="rgb(206,181,31)" fg:x="939" fg:w="1"/><text x="75.6112%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="75.3612%" y="661" width="0.0803%" height="15" fill="rgb(251,142,12)" fg:x="939" fg:w="1"/><text x="75.6112%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="75.3612%" y="645" width="0.0803%" height="15" fill="rgb(252,128,47)" fg:x="939" fg:w="1"/><text x="75.6112%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.3612%" y="629" width="0.0803%" height="15" fill="rgb(208,51,33)" fg:x="939" fg:w="1"/><text x="75.6112%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.3612%" y="613" width="0.0803%" height="15" fill="rgb(240,36,11)" fg:x="939" fg:w="1"/><text x="75.6112%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.3612%" y="597" width="0.0803%" height="15" fill="rgb(245,160,28)" fg:x="939" fg:w="1"/><text x="75.6112%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.3612%" y="581" width="0.0803%" height="15" fill="rgb(230,37,49)" fg:x="939" fg:w="1"/><text x="75.6112%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.3612%" y="565" width="0.0803%" height="15" fill="rgb(227,40,34)" fg:x="939" fg:w="1"/><text x="75.6112%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.3612%" y="549" width="0.0803%" height="15" fill="rgb(253,212,23)" fg:x="939" fg:w="1"/><text x="75.6112%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.3612%" y="533" width="0.0803%" height="15" fill="rgb(230,155,36)" fg:x="939" fg:w="1"/><text x="75.6112%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.3612%" y="517" width="0.0803%" height="15" fill="rgb(221,176,6)" fg:x="939" fg:w="1"/><text x="75.6112%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.3612%" y="501" width="0.0803%" height="15" fill="rgb(207,203,40)" fg:x="939" fg:w="1"/><text x="75.6112%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.3612%" y="485" width="0.0803%" height="15" fill="rgb(215,88,16)" fg:x="939" fg:w="1"/><text x="75.6112%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.3612%" y="469" width="0.0803%" height="15" fill="rgb(233,52,54)" fg:x="939" fg:w="1"/><text x="75.6112%" y="479.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="75.3612%" y="453" width="0.0803%" height="15" fill="rgb(205,47,52)" fg:x="939" fg:w="1"/><text x="75.6112%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.4414%" y="565" width="0.0803%" height="15" fill="rgb(218,56,43)" fg:x="940" fg:w="1"/><text x="75.6914%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.4414%" y="549" width="0.0803%" height="15" fill="rgb(251,225,48)" fg:x="940" fg:w="1"/><text x="75.6914%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.5217%" y="549" width="0.0803%" height="15" fill="rgb(244,56,1)" fg:x="941" fg:w="1"/><text x="75.7717%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.5217%" y="533" width="0.0803%" height="15" fill="rgb(215,46,3)" fg:x="941" fg:w="1"/><text x="75.7717%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.5217%" y="517" width="0.0803%" height="15" fill="rgb(252,25,51)" fg:x="941" fg:w="1"/><text x="75.7717%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.5217%" y="501" width="0.0803%" height="15" fill="rgb(243,86,25)" fg:x="941" fg:w="1"/><text x="75.7717%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.5217%" y="485" width="0.0803%" height="15" fill="rgb(223,57,49)" fg:x="941" fg:w="1"/><text x="75.7717%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.5217%" y="469" width="0.0803%" height="15" fill="rgb(226,26,11)" fg:x="941" fg:w="1"/><text x="75.7717%" y="479.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="75.5217%" y="453" width="0.0803%" height="15" fill="rgb(233,166,51)" fg:x="941" fg:w="1"/><text x="75.7717%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="75.4414%" y="597" width="0.2408%" height="15" fill="rgb(232,145,44)" fg:x="940" fg:w="3"/><text x="75.6914%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="75.4414%" y="581" width="0.2408%" height="15" fill="rgb(246,98,4)" fg:x="940" fg:w="3"/><text x="75.6914%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="75.5217%" y="565" width="0.1605%" height="15" fill="rgb(223,187,1)" fg:x="941" fg:w="2"/><text x="75.7717%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="75.6019%" y="549" width="0.0803%" height="15" fill="rgb(245,183,34)" fg:x="942" fg:w="1"/><text x="75.8519%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.6019%" y="533" width="0.0803%" height="15" fill="rgb(223,6,23)" fg:x="942" fg:w="1"/><text x="75.8519%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.6019%" y="517" width="0.0803%" height="15" fill="rgb(226,63,21)" fg:x="942" fg:w="1"/><text x="75.8519%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.6019%" y="501" width="0.0803%" height="15" fill="rgb(244,58,43)" fg:x="942" fg:w="1"/><text x="75.8519%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.6822%" y="597" width="0.0803%" height="15" fill="rgb(221,65,27)" fg:x="943" fg:w="1"/><text x="75.9322%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="75.6822%" y="581" width="0.0803%" height="15" fill="rgb(231,17,48)" fg:x="943" fg:w="1"/><text x="75.9322%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.6822%" y="565" width="0.0803%" height="15" fill="rgb(229,198,23)" fg:x="943" fg:w="1"/><text x="75.9322%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.6822%" y="549" width="0.0803%" height="15" fill="rgb(220,192,38)" fg:x="943" fg:w="1"/><text x="75.9322%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.6822%" y="533" width="0.0803%" height="15" fill="rgb(224,157,12)" fg:x="943" fg:w="1"/><text x="75.9322%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="75.6822%" y="517" width="0.0803%" height="15" fill="rgb(210,74,7)" fg:x="943" fg:w="1"/><text x="75.9322%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="75.6822%" y="501" width="0.0803%" height="15" fill="rgb(233,184,31)" fg:x="943" fg:w="1"/><text x="75.9322%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.6822%" y="485" width="0.0803%" height="15" fill="rgb(246,44,22)" fg:x="943" fg:w="1"/><text x="75.9322%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.7624%" y="565" width="0.0803%" height="15" fill="rgb(236,102,41)" fg:x="944" fg:w="1"/><text x="76.0124%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.8427%" y="533" width="0.0803%" height="15" fill="rgb(245,17,40)" fg:x="945" fg:w="1"/><text x="76.0927%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.0032%" y="501" width="0.0803%" height="15" fill="rgb(227,165,9)" fg:x="947" fg:w="1"/><text x="76.2532%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="75.8427%" y="565" width="0.3210%" height="15" fill="rgb(220,123,37)" fg:x="945" fg:w="4"/><text x="76.0927%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="75.8427%" y="549" width="0.3210%" height="15" fill="rgb(239,124,16)" fg:x="945" fg:w="4"/><text x="76.0927%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="75.9230%" y="533" width="0.2408%" height="15" fill="rgb(214,215,39)" fg:x="946" fg:w="3"/><text x="76.1730%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="75.9230%" y="517" width="0.2408%" height="15" fill="rgb(224,72,47)" fg:x="946" fg:w="3"/><text x="76.1730%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.0835%" y="501" width="0.0803%" height="15" fill="rgb(252,112,7)" fg:x="948" fg:w="1"/><text x="76.3335%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="76.0835%" y="485" width="0.0803%" height="15" fill="rgb(228,116,35)" fg:x="948" fg:w="1"/><text x="76.3335%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.0835%" y="469" width="0.0803%" height="15" fill="rgb(246,125,25)" fg:x="948" fg:w="1"/><text x="76.3335%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.0835%" y="453" width="0.0803%" height="15" fill="rgb(230,220,33)" fg:x="948" fg:w="1"/><text x="76.3335%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (7 samples, 0.56%)</title><rect x="75.7624%" y="581" width="0.5618%" height="15" fill="rgb(220,48,47)" fg:x="944" fg:w="7"/><text x="76.0124%" y="591.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="76.1637%" y="565" width="0.1605%" height="15" fill="rgb(240,130,32)" fg:x="949" fg:w="2"/><text x="76.4137%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="76.1637%" y="549" width="0.1605%" height="15" fill="rgb(252,97,40)" fg:x="949" fg:w="2"/><text x="76.4137%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="76.1637%" y="533" width="0.1605%" height="15" fill="rgb(211,117,15)" fg:x="949" fg:w="2"/><text x="76.4137%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="76.2440%" y="517" width="0.0803%" height="15" fill="rgb(223,47,44)" fg:x="950" fg:w="1"/><text x="76.4940%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.2440%" y="501" width="0.0803%" height="15" fill="rgb(239,53,20)" fg:x="950" fg:w="1"/><text x="76.4940%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.3242%" y="533" width="0.0803%" height="15" fill="rgb(242,71,22)" fg:x="951" fg:w="1"/><text x="76.5742%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.3242%" y="517" width="0.0803%" height="15" fill="rgb(244,146,41)" fg:x="951" fg:w="1"/><text x="76.5742%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.3242%" y="501" width="0.0803%" height="15" fill="rgb(206,133,42)" fg:x="951" fg:w="1"/><text x="76.5742%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="76.3242%" y="581" width="0.1605%" height="15" fill="rgb(220,206,16)" fg:x="951" fg:w="2"/><text x="76.5742%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="76.3242%" y="565" width="0.1605%" height="15" fill="rgb(234,5,52)" fg:x="951" fg:w="2"/><text x="76.5742%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="76.3242%" y="549" width="0.1605%" height="15" fill="rgb(206,81,46)" fg:x="951" fg:w="2"/><text x="76.5742%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="76.4045%" y="533" width="0.0803%" height="15" fill="rgb(245,111,47)" fg:x="952" fg:w="1"/><text x="76.6545%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="76.4848%" y="453" width="0.1605%" height="15" fill="rgb(227,198,45)" fg:x="953" fg:w="2"/><text x="76.7348%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.4848%" y="437" width="0.1605%" height="15" fill="rgb(223,141,47)" fg:x="953" fg:w="2"/><text x="76.7348%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.5650%" y="421" width="0.0803%" height="15" fill="rgb(234,124,3)" fg:x="954" fg:w="1"/><text x="76.8150%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.5650%" y="405" width="0.0803%" height="15" fill="rgb(218,189,15)" fg:x="954" fg:w="1"/><text x="76.8150%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.5650%" y="389" width="0.0803%" height="15" fill="rgb(253,91,25)" fg:x="954" fg:w="1"/><text x="76.8150%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.6453%" y="453" width="0.0803%" height="15" fill="rgb(243,103,39)" fg:x="955" fg:w="1"/><text x="76.8953%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.6453%" y="437" width="0.0803%" height="15" fill="rgb(252,94,6)" fg:x="955" fg:w="1"/><text x="76.8953%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 1.44%)</title><rect x="75.4414%" y="629" width="1.4446%" height="15" fill="rgb(236,153,18)" fg:x="940" fg:w="18"/><text x="75.6914%" y="639.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (18 samples, 1.44%)</title><rect x="75.4414%" y="613" width="1.4446%" height="15" fill="rgb(218,227,22)" fg:x="940" fg:w="18"/><text x="75.6914%" y="623.50"></text></g><g><title>kernel::model::any_entity_changes (14 samples, 1.12%)</title><rect x="75.7624%" y="597" width="1.1236%" height="15" fill="rgb(209,53,33)" fg:x="944" fg:w="14"/><text x="76.0124%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="76.4848%" y="581" width="0.4013%" height="15" fill="rgb(252,183,3)" fg:x="953" fg:w="5"/><text x="76.7348%" y="591.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="76.4848%" y="565" width="0.4013%" height="15" fill="rgb(249,138,54)" fg:x="953" fg:w="5"/><text x="76.7348%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="76.4848%" y="549" width="0.4013%" height="15" fill="rgb(226,39,3)" fg:x="953" fg:w="5"/><text x="76.7348%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="76.4848%" y="533" width="0.4013%" height="15" fill="rgb(237,129,38)" fg:x="953" fg:w="5"/><text x="76.7348%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="76.4848%" y="517" width="0.4013%" height="15" fill="rgb(218,214,54)" fg:x="953" fg:w="5"/><text x="76.7348%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="76.4848%" y="501" width="0.4013%" height="15" fill="rgb(228,112,8)" fg:x="953" fg:w="5"/><text x="76.7348%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="76.4848%" y="485" width="0.4013%" height="15" fill="rgb(219,128,11)" fg:x="953" fg:w="5"/><text x="76.7348%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="76.4848%" y="469" width="0.4013%" height="15" fill="rgb(240,39,37)" fg:x="953" fg:w="5"/><text x="76.7348%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.7255%" y="453" width="0.1605%" height="15" fill="rgb(215,199,42)" fg:x="956" fg:w="2"/><text x="76.9755%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.7255%" y="437" width="0.1605%" height="15" fill="rgb(248,51,13)" fg:x="956" fg:w="2"/><text x="76.9755%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8058%" y="421" width="0.0803%" height="15" fill="rgb(225,196,0)" fg:x="957" fg:w="1"/><text x="77.0558%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="76.8860%" y="597" width="0.0803%" height="15" fill="rgb(221,31,53)" fg:x="958" fg:w="1"/><text x="77.1360%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.8860%" y="581" width="0.0803%" height="15" fill="rgb(211,79,37)" fg:x="958" fg:w="1"/><text x="77.1360%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="77.1268%" y="581" width="0.0803%" height="15" fill="rgb(227,118,20)" fg:x="961" fg:w="1"/><text x="77.3768%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.2071%" y="581" width="0.0803%" height="15" fill="rgb(225,142,40)" fg:x="962" fg:w="1"/><text x="77.4571%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.2071%" y="565" width="0.0803%" height="15" fill="rgb(208,183,34)" fg:x="962" fg:w="1"/><text x="77.4571%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.2873%" y="565" width="0.0803%" height="15" fill="rgb(209,112,52)" fg:x="963" fg:w="1"/><text x="77.5373%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="77.2873%" y="549" width="0.0803%" height="15" fill="rgb(236,9,32)" fg:x="963" fg:w="1"/><text x="77.5373%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.2873%" y="533" width="0.0803%" height="15" fill="rgb(208,222,9)" fg:x="963" fg:w="1"/><text x="77.5373%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.2873%" y="517" width="0.0803%" height="15" fill="rgb(214,142,24)" fg:x="963" fg:w="1"/><text x="77.5373%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.2873%" y="501" width="0.0803%" height="15" fill="rgb(244,48,51)" fg:x="963" fg:w="1"/><text x="77.5373%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.2873%" y="485" width="0.0803%" height="15" fill="rgb(253,171,44)" fg:x="963" fg:w="1"/><text x="77.5373%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.2873%" y="469" width="0.0803%" height="15" fill="rgb(221,85,21)" fg:x="963" fg:w="1"/><text x="77.5373%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.2873%" y="453" width="0.0803%" height="15" fill="rgb(245,40,38)" fg:x="963" fg:w="1"/><text x="77.5373%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.2873%" y="437" width="0.0803%" height="15" fill="rgb(220,135,37)" fg:x="963" fg:w="1"/><text x="77.5373%" y="447.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.3676%" y="565" width="0.0803%" height="15" fill="rgb(249,62,46)" fg:x="964" fg:w="1"/><text x="77.6176%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.3676%" y="549" width="0.0803%" height="15" fill="rgb(232,81,15)" fg:x="964" fg:w="1"/><text x="77.6176%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.3676%" y="533" width="0.0803%" height="15" fill="rgb(244,179,28)" fg:x="964" fg:w="1"/><text x="77.6176%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.3676%" y="517" width="0.0803%" height="15" fill="rgb(220,4,32)" fg:x="964" fg:w="1"/><text x="77.6176%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.4478%" y="549" width="0.0803%" height="15" fill="rgb(214,116,42)" fg:x="965" fg:w="1"/><text x="77.6978%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.4478%" y="533" width="0.0803%" height="15" fill="rgb(226,94,31)" fg:x="965" fg:w="1"/><text x="77.6978%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.4478%" y="517" width="0.0803%" height="15" fill="rgb(241,172,26)" fg:x="965" fg:w="1"/><text x="77.6978%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="77.5281%" y="533" width="0.1605%" height="15" fill="rgb(206,38,39)" fg:x="966" fg:w="2"/><text x="77.7781%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.6083%" y="517" width="0.0803%" height="15" fill="rgb(210,139,19)" fg:x="967" fg:w="1"/><text x="77.8583%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.6083%" y="501" width="0.0803%" height="15" fill="rgb(220,10,22)" fg:x="967" fg:w="1"/><text x="77.8583%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.6083%" y="485" width="0.0803%" height="15" fill="rgb(225,218,36)" fg:x="967" fg:w="1"/><text x="77.8583%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="77.5281%" y="549" width="0.2408%" height="15" fill="rgb(244,50,47)" fg:x="966" fg:w="3"/><text x="77.7781%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.6886%" y="533" width="0.0803%" height="15" fill="rgb(247,80,2)" fg:x="968" fg:w="1"/><text x="77.9386%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.6886%" y="517" width="0.0803%" height="15" fill="rgb(234,70,38)" fg:x="968" fg:w="1"/><text x="77.9386%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="77.2873%" y="581" width="0.6421%" height="15" fill="rgb(238,170,25)" fg:x="963" fg:w="8"/><text x="77.5373%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="77.4478%" y="565" width="0.4815%" height="15" fill="rgb(252,23,6)" fg:x="965" fg:w="6"/><text x="77.6978%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.7689%" y="549" width="0.1605%" height="15" fill="rgb(209,98,49)" fg:x="969" fg:w="2"/><text x="78.0189%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.8491%" y="533" width="0.0803%" height="15" fill="rgb(213,29,25)" fg:x="970" fg:w="1"/><text x="78.0991%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.8491%" y="517" width="0.0803%" height="15" fill="rgb(235,71,32)" fg:x="970" fg:w="1"/><text x="78.0991%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (14 samples, 1.12%)</title><rect x="76.8860%" y="613" width="1.1236%" height="15" fill="rgb(227,75,49)" fg:x="958" fg:w="14"/><text x="77.1360%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="76.9663%" y="597" width="1.0433%" height="15" fill="rgb(220,19,24)" fg:x="959" fg:w="13"/><text x="77.2163%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.9294%" y="581" width="0.0803%" height="15" fill="rgb(249,67,15)" fg:x="971" fg:w="1"/><text x="78.1794%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.9294%" y="565" width="0.0803%" height="15" fill="rgb(233,197,44)" fg:x="971" fg:w="1"/><text x="78.1794%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.0096%" y="581" width="0.0803%" height="15" fill="rgb(245,206,23)" fg:x="972" fg:w="1"/><text x="78.2596%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.0899%" y="565" width="0.0803%" height="15" fill="rgb(205,164,14)" fg:x="973" fg:w="1"/><text x="78.3399%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="78.0096%" y="613" width="0.2408%" height="15" fill="rgb(209,57,33)" fg:x="972" fg:w="3"/><text x="78.2596%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="78.0096%" y="597" width="0.2408%" height="15" fill="rgb(237,209,41)" fg:x="972" fg:w="3"/><text x="78.2596%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.0899%" y="581" width="0.1605%" height="15" fill="rgb(252,93,6)" fg:x="973" fg:w="2"/><text x="78.3399%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.1701%" y="565" width="0.0803%" height="15" fill="rgb(218,214,32)" fg:x="974" fg:w="1"/><text x="78.4201%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.1701%" y="549" width="0.0803%" height="15" fill="rgb(243,144,9)" fg:x="974" fg:w="1"/><text x="78.4201%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.1701%" y="533" width="0.0803%" height="15" fill="rgb(254,62,38)" fg:x="974" fg:w="1"/><text x="78.4201%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.1701%" y="517" width="0.0803%" height="15" fill="rgb(247,146,11)" fg:x="974" fg:w="1"/><text x="78.4201%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.2504%" y="581" width="0.0803%" height="15" fill="rgb(213,96,14)" fg:x="975" fg:w="1"/><text x="78.5004%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.3307%" y="549" width="0.0803%" height="15" fill="rgb(246,102,11)" fg:x="976" fg:w="1"/><text x="78.5807%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.4109%" y="533" width="0.0803%" height="15" fill="rgb(241,182,16)" fg:x="977" fg:w="1"/><text x="78.6609%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.4109%" y="517" width="0.0803%" height="15" fill="rgb(225,28,43)" fg:x="977" fg:w="1"/><text x="78.6609%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.5714%" y="501" width="0.0803%" height="15" fill="rgb(247,87,15)" fg:x="979" fg:w="1"/><text x="78.8214%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.3307%" y="581" width="0.4013%" height="15" fill="rgb(225,211,30)" fg:x="976" fg:w="5"/><text x="78.5807%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="78.3307%" y="565" width="0.4013%" height="15" fill="rgb(223,111,44)" fg:x="976" fg:w="5"/><text x="78.5807%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="78.4109%" y="549" width="0.3210%" height="15" fill="rgb(225,60,10)" fg:x="977" fg:w="4"/><text x="78.6609%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="78.4912%" y="533" width="0.2408%" height="15" fill="rgb(245,196,31)" fg:x="978" fg:w="3"/><text x="78.7412%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.5714%" y="517" width="0.1605%" height="15" fill="rgb(238,71,27)" fg:x="979" fg:w="2"/><text x="78.8214%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="78.6517%" y="501" width="0.0803%" height="15" fill="rgb(212,77,40)" fg:x="980" fg:w="1"/><text x="78.9017%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.6517%" y="485" width="0.0803%" height="15" fill="rgb(242,14,34)" fg:x="980" fg:w="1"/><text x="78.9017%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.6517%" y="469" width="0.0803%" height="15" fill="rgb(227,221,15)" fg:x="980" fg:w="1"/><text x="78.9017%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.6517%" y="453" width="0.0803%" height="15" fill="rgb(230,80,41)" fg:x="980" fg:w="1"/><text x="78.9017%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.72%)</title><rect x="78.2504%" y="597" width="0.7223%" height="15" fill="rgb(221,65,43)" fg:x="975" fg:w="9"/><text x="78.5004%" y="607.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="78.7319%" y="581" width="0.2408%" height="15" fill="rgb(250,139,15)" fg:x="981" fg:w="3"/><text x="78.9819%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="78.7319%" y="565" width="0.2408%" height="15" fill="rgb(236,101,33)" fg:x="981" fg:w="3"/><text x="78.9819%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="78.7319%" y="549" width="0.2408%" height="15" fill="rgb(240,185,7)" fg:x="981" fg:w="3"/><text x="78.9819%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="78.8925%" y="533" width="0.0803%" height="15" fill="rgb(230,219,29)" fg:x="983" fg:w="1"/><text x="79.1425%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="78.8925%" y="517" width="0.0803%" height="15" fill="rgb(250,208,42)" fg:x="983" fg:w="1"/><text x="79.1425%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.0530%" y="565" width="0.0803%" height="15" fill="rgb(231,6,17)" fg:x="985" fg:w="1"/><text x="79.3030%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.0530%" y="549" width="0.0803%" height="15" fill="rgb(250,180,47)" fg:x="985" fg:w="1"/><text x="79.3030%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="79.1332%" y="565" width="0.0803%" height="15" fill="rgb(218,156,38)" fg:x="986" fg:w="1"/><text x="79.3832%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.1332%" y="549" width="0.0803%" height="15" fill="rgb(207,13,46)" fg:x="986" fg:w="1"/><text x="79.3832%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.1332%" y="533" width="0.0803%" height="15" fill="rgb(221,30,24)" fg:x="986" fg:w="1"/><text x="79.3832%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="79.3740%" y="549" width="0.0803%" height="15" fill="rgb(239,110,29)" fg:x="989" fg:w="1"/><text x="79.6240%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.4543%" y="549" width="0.1605%" height="15" fill="rgb(223,212,28)" fg:x="990" fg:w="2"/><text x="79.7043%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.4543%" y="533" width="0.1605%" height="15" fill="rgb(206,148,43)" fg:x="990" fg:w="2"/><text x="79.7043%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="79.5345%" y="517" width="0.0803%" height="15" fill="rgb(227,139,9)" fg:x="991" fg:w="1"/><text x="79.7845%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.6148%" y="517" width="0.1605%" height="15" fill="rgb(244,64,31)" fg:x="992" fg:w="2"/><text x="79.8648%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.6148%" y="501" width="0.1605%" height="15" fill="rgb(219,45,45)" fg:x="992" fg:w="2"/><text x="79.8648%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="79.6148%" y="485" width="0.1605%" height="15" fill="rgb(205,112,40)" fg:x="992" fg:w="2"/><text x="79.8648%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.7753%" y="517" width="0.0803%" height="15" fill="rgb(207,18,46)" fg:x="994" fg:w="1"/><text x="80.0253%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.7753%" y="501" width="0.0803%" height="15" fill="rgb(219,65,15)" fg:x="994" fg:w="1"/><text x="80.0253%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.7753%" y="485" width="0.0803%" height="15" fill="rgb(248,191,24)" fg:x="994" fg:w="1"/><text x="80.0253%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.7753%" y="469" width="0.0803%" height="15" fill="rgb(251,155,16)" fg:x="994" fg:w="1"/><text x="80.0253%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.0963%" y="501" width="0.0803%" height="15" fill="rgb(249,62,38)" fg:x="998" fg:w="1"/><text x="80.3463%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.0963%" y="485" width="0.0803%" height="15" fill="rgb(252,214,17)" fg:x="998" fg:w="1"/><text x="80.3463%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="80.0963%" y="469" width="0.0803%" height="15" fill="rgb(246,215,53)" fg:x="998" fg:w="1"/><text x="80.3463%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.28%)</title><rect x="78.9727%" y="597" width="1.2841%" height="15" fill="rgb(232,148,8)" fg:x="984" fg:w="16"/><text x="79.2227%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.28%)</title><rect x="78.9727%" y="581" width="1.2841%" height="15" fill="rgb(221,119,15)" fg:x="984" fg:w="16"/><text x="79.2227%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.04%)</title><rect x="79.2135%" y="565" width="1.0433%" height="15" fill="rgb(239,69,36)" fg:x="987" fg:w="13"/><text x="79.4635%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="79.6148%" y="549" width="0.6421%" height="15" fill="rgb(247,164,1)" fg:x="992" fg:w="8"/><text x="79.8648%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="79.6148%" y="533" width="0.6421%" height="15" fill="rgb(216,221,53)" fg:x="992" fg:w="8"/><text x="79.8648%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="79.8555%" y="517" width="0.4013%" height="15" fill="rgb(249,57,29)" fg:x="995" fg:w="5"/><text x="80.1055%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.1766%" y="501" width="0.0803%" height="15" fill="rgb(227,23,6)" fg:x="999" fg:w="1"/><text x="80.4266%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="80.3371%" y="453" width="0.1605%" height="15" fill="rgb(213,211,30)" fg:x="1001" fg:w="2"/><text x="80.5871%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="80.3371%" y="437" width="0.1605%" height="15" fill="rgb(254,202,30)" fg:x="1001" fg:w="2"/><text x="80.5871%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.3371%" y="421" width="0.1605%" height="15" fill="rgb(248,213,0)" fg:x="1001" fg:w="2"/><text x="80.5871%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.4173%" y="405" width="0.0803%" height="15" fill="rgb(248,55,48)" fg:x="1002" fg:w="1"/><text x="80.6673%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.4173%" y="389" width="0.0803%" height="15" fill="rgb(217,221,51)" fg:x="1002" fg:w="1"/><text x="80.6673%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="80.4976%" y="437" width="0.2408%" height="15" fill="rgb(233,8,16)" fg:x="1003" fg:w="3"/><text x="80.7476%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="80.4976%" y="421" width="0.2408%" height="15" fill="rgb(220,23,39)" fg:x="1003" fg:w="3"/><text x="80.7476%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="80.4976%" y="405" width="0.2408%" height="15" fill="rgb(236,20,54)" fg:x="1003" fg:w="3"/><text x="80.7476%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="80.4976%" y="389" width="0.2408%" height="15" fill="rgb(213,22,0)" fg:x="1003" fg:w="3"/><text x="80.7476%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="80.5778%" y="373" width="0.1605%" height="15" fill="rgb(226,144,21)" fg:x="1004" fg:w="2"/><text x="80.8278%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="80.7384%" y="437" width="0.0803%" height="15" fill="rgb(240,32,26)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="80.7384%" y="421" width="0.0803%" height="15" fill="rgb(252,225,52)" fg:x="1006" fg:w="1"/><text x="80.9884%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="80.3371%" y="469" width="0.5618%" height="15" fill="rgb(227,113,38)" fg:x="1001" fg:w="7"/><text x="80.5871%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="80.4976%" y="453" width="0.4013%" height="15" fill="rgb(246,146,48)" fg:x="1003" fg:w="5"/><text x="80.7476%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.8186%" y="437" width="0.0803%" height="15" fill="rgb(229,83,50)" fg:x="1007" fg:w="1"/><text x="81.0686%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.8186%" y="421" width="0.0803%" height="15" fill="rgb(248,146,37)" fg:x="1007" fg:w="1"/><text x="81.0686%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="80.8989%" y="453" width="0.0803%" height="15" fill="rgb(230,102,37)" fg:x="1008" fg:w="1"/><text x="81.1489%" y="463.50"></text></g><g><title>engine::session::Session::close (87 samples, 6.98%)</title><rect x="74.0770%" y="725" width="6.9823%" height="15" fill="rgb(226,129,21)" fg:x="923" fg:w="87"/><text x="74.3270%" y="735.50">engine::s..</text></g><g><title>engine::session::state::State::close (86 samples, 6.90%)</title><rect x="74.1573%" y="709" width="6.9021%" height="15" fill="rgb(241,215,13)" fg:x="924" fg:w="86"/><text x="74.4073%" y="719.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (71 samples, 5.70%)</title><rect x="75.3612%" y="693" width="5.6982%" height="15" fill="rgb(217,128,6)" fg:x="939" fg:w="71"/><text x="75.6112%" y="703.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (70 samples, 5.62%)</title><rect x="75.4414%" y="677" width="5.6180%" height="15" fill="rgb(248,48,54)" fg:x="940" fg:w="70"/><text x="75.6914%" y="687.50">engine:..</text></g><g><title>core::iter::adapters::try_process (70 samples, 5.62%)</title><rect x="75.4414%" y="661" width="5.6180%" height="15" fill="rgb(219,83,38)" fg:x="940" fg:w="70"/><text x="75.6914%" y="671.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (70 samples, 5.62%)</title><rect x="75.4414%" y="645" width="5.6180%" height="15" fill="rgb(252,210,52)" fg:x="940" fg:w="70"/><text x="75.6914%" y="655.50">&lt;alloc:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (52 samples, 4.17%)</title><rect x="76.8860%" y="629" width="4.1734%" height="15" fill="rgb(221,200,4)" fg:x="958" fg:w="52"/><text x="77.1360%" y="639.50">engin..</text></g><g><title>kernel::model::any_entity_changes (35 samples, 2.81%)</title><rect x="78.2504%" y="613" width="2.8090%" height="15" fill="rgb(216,58,11)" fg:x="975" fg:w="35"/><text x="78.5004%" y="623.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (10 samples, 0.80%)</title><rect x="80.2568%" y="597" width="0.8026%" height="15" fill="rgb(213,152,6)" fg:x="1000" fg:w="10"/><text x="80.5068%" y="607.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.80%)</title><rect x="80.2568%" y="581" width="0.8026%" height="15" fill="rgb(209,210,52)" fg:x="1000" fg:w="10"/><text x="80.5068%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="80.2568%" y="565" width="0.8026%" height="15" fill="rgb(216,26,42)" fg:x="1000" fg:w="10"/><text x="80.5068%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="80.2568%" y="549" width="0.8026%" height="15" fill="rgb(229,8,52)" fg:x="1000" fg:w="10"/><text x="80.5068%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="80.2568%" y="533" width="0.8026%" height="15" fill="rgb(234,11,12)" fg:x="1000" fg:w="10"/><text x="80.5068%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="80.2568%" y="517" width="0.8026%" height="15" fill="rgb(222,132,34)" fg:x="1000" fg:w="10"/><text x="80.5068%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="80.3371%" y="501" width="0.7223%" height="15" fill="rgb(246,51,18)" fg:x="1001" fg:w="9"/><text x="80.5871%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="80.3371%" y="485" width="0.7223%" height="15" fill="rgb(234,40,7)" fg:x="1001" fg:w="9"/><text x="80.5871%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="80.8989%" y="469" width="0.1605%" height="15" fill="rgb(240,11,8)" fg:x="1008" fg:w="2"/><text x="81.1489%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.9791%" y="453" width="0.0803%" height="15" fill="rgb(218,222,21)" fg:x="1009" fg:w="1"/><text x="81.2291%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="81.2199%" y="549" width="0.1605%" height="15" fill="rgb(238,59,21)" fg:x="1012" fg:w="2"/><text x="81.4699%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.2199%" y="533" width="0.1605%" height="15" fill="rgb(252,128,29)" fg:x="1012" fg:w="2"/><text x="81.4699%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.3002%" y="517" width="0.0803%" height="15" fill="rgb(245,61,34)" fg:x="1013" fg:w="1"/><text x="81.5502%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.3002%" y="501" width="0.0803%" height="15" fill="rgb(246,36,52)" fg:x="1013" fg:w="1"/><text x="81.5502%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.3002%" y="485" width="0.0803%" height="15" fill="rgb(243,48,49)" fg:x="1013" fg:w="1"/><text x="81.5502%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.3002%" y="469" width="0.0803%" height="15" fill="rgb(252,114,15)" fg:x="1013" fg:w="1"/><text x="81.5502%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.3002%" y="453" width="0.0803%" height="15" fill="rgb(243,228,39)" fg:x="1013" fg:w="1"/><text x="81.5502%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.3002%" y="437" width="0.0803%" height="15" fill="rgb(205,143,2)" fg:x="1013" fg:w="1"/><text x="81.5502%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.3002%" y="421" width="0.0803%" height="15" fill="rgb(224,122,19)" fg:x="1013" fg:w="1"/><text x="81.5502%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.3804%" y="549" width="0.0803%" height="15" fill="rgb(250,66,51)" fg:x="1014" fg:w="1"/><text x="81.6304%" y="559.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="81.2199%" y="597" width="0.3210%" height="15" fill="rgb(224,134,48)" fg:x="1012" fg:w="4"/><text x="81.4699%" y="607.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (4 samples, 0.32%)</title><rect x="81.2199%" y="581" width="0.3210%" height="15" fill="rgb(219,137,43)" fg:x="1012" fg:w="4"/><text x="81.4699%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="81.2199%" y="565" width="0.3210%" height="15" fill="rgb(207,44,47)" fg:x="1012" fg:w="4"/><text x="81.4699%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="81.4607%" y="549" width="0.0803%" height="15" fill="rgb(245,216,11)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="81.4607%" y="533" width="0.0803%" height="15" fill="rgb(236,168,30)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="81.4607%" y="517" width="0.0803%" height="15" fill="rgb(249,110,10)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="81.4607%" y="501" width="0.0803%" height="15" fill="rgb(226,10,48)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.4607%" y="485" width="0.0803%" height="15" fill="rgb(243,14,47)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.4607%" y="469" width="0.0803%" height="15" fill="rgb(208,184,14)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="81.4607%" y="453" width="0.0803%" height="15" fill="rgb(236,198,54)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="81.4607%" y="437" width="0.0803%" height="15" fill="rgb(241,186,5)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="81.4607%" y="421" width="0.0803%" height="15" fill="rgb(237,191,37)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="81.4607%" y="405" width="0.0803%" height="15" fill="rgb(216,223,24)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="81.4607%" y="389" width="0.0803%" height="15" fill="rgb(210,29,29)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="81.4607%" y="373" width="0.0803%" height="15" fill="rgb(243,36,45)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.4607%" y="357" width="0.0803%" height="15" fill="rgb(217,109,6)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="81.4607%" y="341" width="0.0803%" height="15" fill="rgb(240,106,11)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="351.50"></text></g><g><title>core::cmp::max (1 samples, 0.08%)</title><rect x="81.4607%" y="325" width="0.0803%" height="15" fill="rgb(230,187,12)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="335.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.08%)</title><rect x="81.4607%" y="309" width="0.0803%" height="15" fill="rgb(242,88,45)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="319.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.08%)</title><rect x="81.4607%" y="293" width="0.0803%" height="15" fill="rgb(240,181,21)" fg:x="1015" fg:w="1"/><text x="81.7107%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.5409%" y="485" width="0.0803%" height="15" fill="rgb(252,126,44)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.5409%" y="469" width="0.0803%" height="15" fill="rgb(230,157,48)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.5409%" y="453" width="0.0803%" height="15" fill="rgb(224,15,2)" fg:x="1016" fg:w="1"/><text x="81.7909%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="81.5409%" y="517" width="0.1605%" height="15" fill="rgb(215,1,6)" fg:x="1016" fg:w="2"/><text x="81.7909%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.5409%" y="501" width="0.1605%" height="15" fill="rgb(210,225,13)" fg:x="1016" fg:w="2"/><text x="81.7909%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.6212%" y="485" width="0.0803%" height="15" fill="rgb(214,25,30)" fg:x="1017" fg:w="1"/><text x="81.8712%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.6212%" y="469" width="0.0803%" height="15" fill="rgb(254,43,34)" fg:x="1017" fg:w="1"/><text x="81.8712%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.6212%" y="453" width="0.0803%" height="15" fill="rgb(210,6,40)" fg:x="1017" fg:w="1"/><text x="81.8712%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.6212%" y="437" width="0.0803%" height="15" fill="rgb(251,76,23)" fg:x="1017" fg:w="1"/><text x="81.8712%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.6212%" y="421" width="0.0803%" height="15" fill="rgb(214,7,14)" fg:x="1017" fg:w="1"/><text x="81.8712%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="81.6212%" y="405" width="0.0803%" height="15" fill="rgb(227,100,33)" fg:x="1017" fg:w="1"/><text x="81.8712%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="81.6212%" y="389" width="0.0803%" height="15" fill="rgb(211,49,7)" fg:x="1017" fg:w="1"/><text x="81.8712%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.7014%" y="485" width="0.0803%" height="15" fill="rgb(228,223,1)" fg:x="1018" fg:w="1"/><text x="81.9514%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="81.5409%" y="565" width="0.3210%" height="15" fill="rgb(245,92,22)" fg:x="1016" fg:w="4"/><text x="81.7909%" y="575.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (4 samples, 0.32%)</title><rect x="81.5409%" y="549" width="0.3210%" height="15" fill="rgb(232,221,10)" fg:x="1016" fg:w="4"/><text x="81.7909%" y="559.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="81.5409%" y="533" width="0.3210%" height="15" fill="rgb(252,175,23)" fg:x="1016" fg:w="4"/><text x="81.7909%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="81.7014%" y="517" width="0.1605%" height="15" fill="rgb(234,229,25)" fg:x="1018" fg:w="2"/><text x="81.9514%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.7014%" y="501" width="0.1605%" height="15" fill="rgb(254,127,20)" fg:x="1018" fg:w="2"/><text x="81.9514%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.7817%" y="485" width="0.0803%" height="15" fill="rgb(211,151,37)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7817%" y="469" width="0.0803%" height="15" fill="rgb(226,185,3)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.7817%" y="453" width="0.0803%" height="15" fill="rgb(223,38,29)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.7817%" y="437" width="0.0803%" height="15" fill="rgb(206,134,22)" fg:x="1019" fg:w="1"/><text x="82.0317%" y="447.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (9 samples, 0.72%)</title><rect x="81.2199%" y="613" width="0.7223%" height="15" fill="rgb(243,211,4)" fg:x="1012" fg:w="9"/><text x="81.4699%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="81.5409%" y="597" width="0.4013%" height="15" fill="rgb(244,214,18)" fg:x="1016" fg:w="5"/><text x="81.7909%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="81.5409%" y="581" width="0.4013%" height="15" fill="rgb(208,165,52)" fg:x="1016" fg:w="5"/><text x="81.7909%" y="591.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.8620%" y="565" width="0.0803%" height="15" fill="rgb(245,165,39)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.8620%" y="549" width="0.0803%" height="15" fill="rgb(250,46,43)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.8620%" y="533" width="0.0803%" height="15" fill="rgb(242,86,47)" fg:x="1020" fg:w="1"/><text x="82.1120%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="81.9422%" y="549" width="0.0803%" height="15" fill="rgb(232,173,5)" fg:x="1021" fg:w="1"/><text x="82.1922%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.9422%" y="533" width="0.0803%" height="15" fill="rgb(208,117,14)" fg:x="1021" fg:w="1"/><text x="82.1922%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="82.0225%" y="549" width="0.0803%" height="15" fill="rgb(205,144,47)" fg:x="1022" fg:w="1"/><text x="82.2725%" y="559.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (13 samples, 1.04%)</title><rect x="81.2199%" y="629" width="1.0433%" height="15" fill="rgb(228,62,6)" fg:x="1012" fg:w="13"/><text x="81.4699%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (4 samples, 0.32%)</title><rect x="81.9422%" y="613" width="0.3210%" height="15" fill="rgb(238,32,51)" fg:x="1021" fg:w="4"/><text x="82.1922%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (4 samples, 0.32%)</title><rect x="81.9422%" y="597" width="0.3210%" height="15" fill="rgb(251,211,21)" fg:x="1021" fg:w="4"/><text x="82.1922%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="81.9422%" y="581" width="0.3210%" height="15" fill="rgb(244,43,23)" fg:x="1021" fg:w="4"/><text x="82.1922%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="81.9422%" y="565" width="0.3210%" height="15" fill="rgb(219,48,27)" fg:x="1021" fg:w="4"/><text x="82.1922%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.1027%" y="549" width="0.1605%" height="15" fill="rgb(251,72,17)" fg:x="1023" fg:w="2"/><text x="82.3527%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.1830%" y="533" width="0.0803%" height="15" fill="rgb(214,69,49)" fg:x="1024" fg:w="1"/><text x="82.4330%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.1830%" y="517" width="0.0803%" height="15" fill="rgb(242,96,45)" fg:x="1024" fg:w="1"/><text x="82.4330%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.1830%" y="501" width="0.0803%" height="15" fill="rgb(233,20,50)" fg:x="1024" fg:w="1"/><text x="82.4330%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.2632%" y="629" width="0.0803%" height="15" fill="rgb(247,82,43)" fg:x="1025" fg:w="1"/><text x="82.5132%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (1 samples, 0.08%)</title><rect x="82.3435%" y="485" width="0.0803%" height="15" fill="rgb(210,97,3)" fg:x="1026" fg:w="1"/><text x="82.5935%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.3435%" y="469" width="0.0803%" height="15" fill="rgb(217,113,26)" fg:x="1026" fg:w="1"/><text x="82.5935%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.3435%" y="453" width="0.0803%" height="15" fill="rgb(207,166,18)" fg:x="1026" fg:w="1"/><text x="82.5935%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.3435%" y="437" width="0.0803%" height="15" fill="rgb(205,124,54)" fg:x="1026" fg:w="1"/><text x="82.5935%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.3435%" y="421" width="0.0803%" height="15" fill="rgb(211,140,29)" fg:x="1026" fg:w="1"/><text x="82.5935%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.3435%" y="405" width="0.0803%" height="15" fill="rgb(228,83,33)" fg:x="1026" fg:w="1"/><text x="82.5935%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.5040%" y="453" width="0.0803%" height="15" fill="rgb(225,217,40)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.5040%" y="437" width="0.0803%" height="15" fill="rgb(221,229,30)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.5040%" y="421" width="0.0803%" height="15" fill="rgb(210,1,48)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.5040%" y="405" width="0.0803%" height="15" fill="rgb(205,53,50)" fg:x="1028" fg:w="1"/><text x="82.7540%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.5843%" y="421" width="0.0803%" height="15" fill="rgb(211,25,54)" fg:x="1029" fg:w="1"/><text x="82.8343%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.6645%" y="421" width="0.0803%" height="15" fill="rgb(205,28,13)" fg:x="1030" fg:w="1"/><text x="82.9145%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="82.4238%" y="485" width="0.4013%" height="15" fill="rgb(214,37,48)" fg:x="1027" fg:w="5"/><text x="82.6738%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="82.4238%" y="469" width="0.4013%" height="15" fill="rgb(226,141,8)" fg:x="1027" fg:w="5"/><text x="82.6738%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="82.5843%" y="453" width="0.2408%" height="15" fill="rgb(206,200,0)" fg:x="1029" fg:w="3"/><text x="82.8343%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="82.5843%" y="437" width="0.2408%" height="15" fill="rgb(238,152,34)" fg:x="1029" fg:w="3"/><text x="82.8343%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.7448%" y="421" width="0.0803%" height="15" fill="rgb(216,72,48)" fg:x="1031" fg:w="1"/><text x="82.9948%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7448%" y="405" width="0.0803%" height="15" fill="rgb(246,48,2)" fg:x="1031" fg:w="1"/><text x="82.9948%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7448%" y="389" width="0.0803%" height="15" fill="rgb(249,59,28)" fg:x="1031" fg:w="1"/><text x="82.9948%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.7448%" y="373" width="0.0803%" height="15" fill="rgb(253,198,14)" fg:x="1031" fg:w="1"/><text x="82.9948%" y="383.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (7 samples, 0.56%)</title><rect x="82.3435%" y="501" width="0.5618%" height="15" fill="rgb(225,162,4)" fg:x="1026" fg:w="7"/><text x="82.5935%" y="511.50"></text></g><g><title>plugins_core::looking::model::Unqualified::qualify (1 samples, 0.08%)</title><rect x="82.8250%" y="485" width="0.0803%" height="15" fill="rgb(231,126,49)" fg:x="1032" fg:w="1"/><text x="83.0750%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.9053%" y="453" width="0.0803%" height="15" fill="rgb(207,41,3)" fg:x="1033" fg:w="1"/><text x="83.1553%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="82.9053%" y="437" width="0.0803%" height="15" fill="rgb(212,223,36)" fg:x="1033" fg:w="1"/><text x="83.1553%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="82.9053%" y="421" width="0.0803%" height="15" fill="rgb(214,96,38)" fg:x="1033" fg:w="1"/><text x="83.1553%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.9856%" y="373" width="0.0803%" height="15" fill="rgb(246,104,47)" fg:x="1034" fg:w="1"/><text x="83.2356%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0658%" y="357" width="0.0803%" height="15" fill="rgb(227,212,36)" fg:x="1035" fg:w="1"/><text x="83.3158%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0658%" y="341" width="0.0803%" height="15" fill="rgb(250,163,41)" fg:x="1035" fg:w="1"/><text x="83.3158%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0658%" y="325" width="0.0803%" height="15" fill="rgb(250,130,17)" fg:x="1035" fg:w="1"/><text x="83.3158%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0658%" y="309" width="0.0803%" height="15" fill="rgb(206,42,32)" fg:x="1035" fg:w="1"/><text x="83.3158%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="82.9856%" y="389" width="0.3210%" height="15" fill="rgb(224,95,7)" fg:x="1034" fg:w="4"/><text x="83.2356%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="83.0658%" y="373" width="0.2408%" height="15" fill="rgb(242,96,42)" fg:x="1035" fg:w="3"/><text x="83.3158%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.1461%" y="357" width="0.1605%" height="15" fill="rgb(237,194,4)" fg:x="1036" fg:w="2"/><text x="83.3961%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.1461%" y="341" width="0.1605%" height="15" fill="rgb(245,142,29)" fg:x="1036" fg:w="2"/><text x="83.3961%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="83.1461%" y="325" width="0.1605%" height="15" fill="rgb(247,66,43)" fg:x="1036" fg:w="2"/><text x="83.3961%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.1461%" y="309" width="0.1605%" height="15" fill="rgb(220,153,30)" fg:x="1036" fg:w="2"/><text x="83.3961%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.1461%" y="293" width="0.1605%" height="15" fill="rgb(207,130,54)" fg:x="1036" fg:w="2"/><text x="83.3961%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.1461%" y="277" width="0.1605%" height="15" fill="rgb(242,49,39)" fg:x="1036" fg:w="2"/><text x="83.3961%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.3066%" y="357" width="0.1605%" height="15" fill="rgb(206,227,44)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.3066%" y="341" width="0.1605%" height="15" fill="rgb(236,74,29)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.3066%" y="325" width="0.1605%" height="15" fill="rgb(222,52,23)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.3066%" y="309" width="0.1605%" height="15" fill="rgb(245,65,4)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.3066%" y="293" width="0.1605%" height="15" fill="rgb(205,120,32)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="83.3066%" y="277" width="0.1605%" height="15" fill="rgb(226,156,21)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="83.3066%" y="261" width="0.1605%" height="15" fill="rgb(240,117,11)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="83.3066%" y="245" width="0.1605%" height="15" fill="rgb(232,214,36)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="83.3066%" y="229" width="0.1605%" height="15" fill="rgb(252,121,45)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="83.3066%" y="213" width="0.1605%" height="15" fill="rgb(250,206,1)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="83.3066%" y="197" width="0.1605%" height="15" fill="rgb(213,40,16)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="83.3066%" y="181" width="0.1605%" height="15" fill="rgb(222,106,3)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="83.3066%" y="165" width="0.1605%" height="15" fill="rgb(238,140,8)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="175.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="83.3066%" y="149" width="0.1605%" height="15" fill="rgb(217,119,30)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="159.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="83.3066%" y="133" width="0.1605%" height="15" fill="rgb(228,189,17)" fg:x="1038" fg:w="2"/><text x="83.5566%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.4671%" y="357" width="0.0803%" height="15" fill="rgb(243,94,42)" fg:x="1040" fg:w="1"/><text x="83.7171%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.4671%" y="341" width="0.0803%" height="15" fill="rgb(228,105,42)" fg:x="1040" fg:w="1"/><text x="83.7171%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.4671%" y="325" width="0.0803%" height="15" fill="rgb(233,19,53)" fg:x="1040" fg:w="1"/><text x="83.7171%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.4671%" y="309" width="0.0803%" height="15" fill="rgb(240,22,26)" fg:x="1040" fg:w="1"/><text x="83.7171%" y="319.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (8 samples, 0.64%)</title><rect x="82.9856%" y="437" width="0.6421%" height="15" fill="rgb(238,97,34)" fg:x="1034" fg:w="8"/><text x="83.2356%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (8 samples, 0.64%)</title><rect x="82.9856%" y="421" width="0.6421%" height="15" fill="rgb(210,177,8)" fg:x="1034" fg:w="8"/><text x="83.2356%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.64%)</title><rect x="82.9856%" y="405" width="0.6421%" height="15" fill="rgb(217,168,6)" fg:x="1034" fg:w="8"/><text x="83.2356%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="83.3066%" y="389" width="0.3210%" height="15" fill="rgb(223,34,43)" fg:x="1038" fg:w="4"/><text x="83.5566%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="83.3066%" y="373" width="0.3210%" height="15" fill="rgb(252,123,35)" fg:x="1038" fg:w="4"/><text x="83.5566%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.5474%" y="357" width="0.0803%" height="15" fill="rgb(243,162,1)" fg:x="1041" fg:w="1"/><text x="83.7974%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5474%" y="341" width="0.0803%" height="15" fill="rgb(250,83,22)" fg:x="1041" fg:w="1"/><text x="83.7974%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.5474%" y="325" width="0.0803%" height="15" fill="rgb(247,184,7)" fg:x="1041" fg:w="1"/><text x="83.7974%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5474%" y="309" width="0.0803%" height="15" fill="rgb(254,212,7)" fg:x="1041" fg:w="1"/><text x="83.7974%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.5474%" y="293" width="0.0803%" height="15" fill="rgb(249,198,8)" fg:x="1041" fg:w="1"/><text x="83.7974%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.5474%" y="277" width="0.0803%" height="15" fill="rgb(230,74,12)" fg:x="1041" fg:w="1"/><text x="83.7974%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="83.6276%" y="437" width="0.0803%" height="15" fill="rgb(253,174,9)" fg:x="1042" fg:w="1"/><text x="83.8776%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="83.6276%" y="421" width="0.0803%" height="15" fill="rgb(222,191,12)" fg:x="1042" fg:w="1"/><text x="83.8776%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.6276%" y="405" width="0.0803%" height="15" fill="rgb(234,28,43)" fg:x="1042" fg:w="1"/><text x="83.8776%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.7881%" y="389" width="0.0803%" height="15" fill="rgb(232,13,38)" fg:x="1044" fg:w="1"/><text x="84.0381%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="83.8684%" y="293" width="0.0803%" height="15" fill="rgb(239,101,25)" fg:x="1045" fg:w="1"/><text x="84.1184%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="83.8684%" y="309" width="0.1605%" height="15" fill="rgb(237,214,49)" fg:x="1045" fg:w="2"/><text x="84.1184%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.9486%" y="293" width="0.0803%" height="15" fill="rgb(212,188,4)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.9486%" y="277" width="0.0803%" height="15" fill="rgb(208,167,23)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.9486%" y="261" width="0.0803%" height="15" fill="rgb(209,179,40)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.9486%" y="245" width="0.0803%" height="15" fill="rgb(233,144,24)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.9486%" y="229" width="0.0803%" height="15" fill="rgb(250,4,25)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.9486%" y="213" width="0.0803%" height="15" fill="rgb(236,222,29)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.9486%" y="197" width="0.0803%" height="15" fill="rgb(228,152,14)" fg:x="1046" fg:w="1"/><text x="84.1986%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="84.0289%" y="293" width="0.0803%" height="15" fill="rgb(240,11,37)" fg:x="1047" fg:w="1"/><text x="84.2789%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (5 samples, 0.40%)</title><rect x="83.7881%" y="405" width="0.4013%" height="15" fill="rgb(240,96,5)" fg:x="1044" fg:w="5"/><text x="84.0381%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="83.8684%" y="389" width="0.3210%" height="15" fill="rgb(242,145,4)" fg:x="1045" fg:w="4"/><text x="84.1184%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="83.8684%" y="373" width="0.3210%" height="15" fill="rgb(229,118,33)" fg:x="1045" fg:w="4"/><text x="84.1184%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="83.8684%" y="357" width="0.3210%" height="15" fill="rgb(213,82,17)" fg:x="1045" fg:w="4"/><text x="84.1184%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (4 samples, 0.32%)</title><rect x="83.8684%" y="341" width="0.3210%" height="15" fill="rgb(236,71,53)" fg:x="1045" fg:w="4"/><text x="84.1184%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="83.8684%" y="325" width="0.3210%" height="15" fill="rgb(227,158,19)" fg:x="1045" fg:w="4"/><text x="84.1184%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.0289%" y="309" width="0.1605%" height="15" fill="rgb(220,52,31)" fg:x="1047" fg:w="2"/><text x="84.2789%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.1091%" y="293" width="0.0803%" height="15" fill="rgb(232,137,27)" fg:x="1048" fg:w="1"/><text x="84.3591%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.1091%" y="277" width="0.0803%" height="15" fill="rgb(208,155,6)" fg:x="1048" fg:w="1"/><text x="84.3591%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1091%" y="261" width="0.0803%" height="15" fill="rgb(253,212,46)" fg:x="1048" fg:w="1"/><text x="84.3591%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.1091%" y="245" width="0.0803%" height="15" fill="rgb(220,55,4)" fg:x="1048" fg:w="1"/><text x="84.3591%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1091%" y="229" width="0.0803%" height="15" fill="rgb(226,100,5)" fg:x="1048" fg:w="1"/><text x="84.3591%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.1091%" y="213" width="0.0803%" height="15" fill="rgb(247,200,51)" fg:x="1048" fg:w="1"/><text x="84.3591%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1091%" y="197" width="0.0803%" height="15" fill="rgb(220,203,54)" fg:x="1048" fg:w="1"/><text x="84.3591%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="84.1894%" y="405" width="0.0803%" height="15" fill="rgb(230,187,54)" fg:x="1049" fg:w="1"/><text x="84.4394%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="84.1894%" y="389" width="0.0803%" height="15" fill="rgb(225,132,12)" fg:x="1049" fg:w="1"/><text x="84.4394%" y="399.50"></text></g><g><title>plugins_core::tools::contained_by (19 samples, 1.52%)</title><rect x="82.9856%" y="453" width="1.5249%" height="15" fill="rgb(205,210,33)" fg:x="1034" fg:w="19"/><text x="83.2356%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.80%)</title><rect x="83.7079%" y="437" width="0.8026%" height="15" fill="rgb(238,192,7)" fg:x="1043" fg:w="10"/><text x="83.9579%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="83.7079%" y="421" width="0.8026%" height="15" fill="rgb(245,82,29)" fg:x="1043" fg:w="10"/><text x="83.9579%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="84.2697%" y="405" width="0.2408%" height="15" fill="rgb(234,222,39)" fg:x="1050" fg:w="3"/><text x="84.5197%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="84.2697%" y="389" width="0.2408%" height="15" fill="rgb(231,222,18)" fg:x="1050" fg:w="3"/><text x="84.5197%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="84.3499%" y="373" width="0.1605%" height="15" fill="rgb(216,61,10)" fg:x="1051" fg:w="2"/><text x="84.5999%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="84.3499%" y="357" width="0.1605%" height="15" fill="rgb(241,116,34)" fg:x="1051" fg:w="2"/><text x="84.5999%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="84.3499%" y="341" width="0.1605%" height="15" fill="rgb(225,32,22)" fg:x="1051" fg:w="2"/><text x="84.5999%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="84.3499%" y="325" width="0.1605%" height="15" fill="rgb(236,35,19)" fg:x="1051" fg:w="2"/><text x="84.5999%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="84.3499%" y="309" width="0.1605%" height="15" fill="rgb(231,198,28)" fg:x="1051" fg:w="2"/><text x="84.5999%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.4302%" y="293" width="0.0803%" height="15" fill="rgb(211,215,31)" fg:x="1052" fg:w="1"/><text x="84.6802%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.5104%" y="437" width="0.0803%" height="15" fill="rgb(243,118,23)" fg:x="1053" fg:w="1"/><text x="84.7604%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.5907%" y="341" width="0.0803%" height="15" fill="rgb(228,104,45)" fg:x="1054" fg:w="1"/><text x="84.8407%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.5907%" y="325" width="0.0803%" height="15" fill="rgb(216,198,17)" fg:x="1054" fg:w="1"/><text x="84.8407%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5907%" y="309" width="0.0803%" height="15" fill="rgb(249,39,23)" fg:x="1054" fg:w="1"/><text x="84.8407%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.5907%" y="293" width="0.0803%" height="15" fill="rgb(250,186,54)" fg:x="1054" fg:w="1"/><text x="84.8407%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.5907%" y="277" width="0.0803%" height="15" fill="rgb(243,110,14)" fg:x="1054" fg:w="1"/><text x="84.8407%" y="287.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="84.5907%" y="437" width="0.2408%" height="15" fill="rgb(236,32,12)" fg:x="1054" fg:w="3"/><text x="84.8407%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="84.5907%" y="421" width="0.2408%" height="15" fill="rgb(211,92,33)" fg:x="1054" fg:w="3"/><text x="84.8407%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="84.5907%" y="405" width="0.2408%" height="15" fill="rgb(254,154,8)" fg:x="1054" fg:w="3"/><text x="84.8407%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="84.5907%" y="389" width="0.2408%" height="15" fill="rgb(241,107,40)" fg:x="1054" fg:w="3"/><text x="84.8407%" y="399.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (3 samples, 0.24%)</title><rect x="84.5907%" y="373" width="0.2408%" height="15" fill="rgb(208,24,40)" fg:x="1054" fg:w="3"/><text x="84.8407%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="84.5907%" y="357" width="0.2408%" height="15" fill="rgb(252,158,9)" fg:x="1054" fg:w="3"/><text x="84.8407%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="84.6709%" y="341" width="0.1605%" height="15" fill="rgb(241,9,28)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.6709%" y="325" width="0.1605%" height="15" fill="rgb(210,199,32)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.6709%" y="309" width="0.1605%" height="15" fill="rgb(228,147,42)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.6709%" y="293" width="0.1605%" height="15" fill="rgb(248,202,26)" fg:x="1055" fg:w="2"/><text x="84.9209%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7512%" y="277" width="0.0803%" height="15" fill="rgb(225,67,4)" fg:x="1056" fg:w="1"/><text x="85.0012%" y="287.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9117%" y="405" width="0.0803%" height="15" fill="rgb(234,87,25)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9117%" y="389" width="0.0803%" height="15" fill="rgb(229,58,0)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.9117%" y="373" width="0.0803%" height="15" fill="rgb(211,218,3)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9117%" y="357" width="0.0803%" height="15" fill="rgb(216,109,54)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9117%" y="341" width="0.0803%" height="15" fill="rgb(252,156,40)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.9117%" y="325" width="0.0803%" height="15" fill="rgb(208,1,12)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.9117%" y="309" width="0.0803%" height="15" fill="rgb(214,179,53)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.9117%" y="293" width="0.0803%" height="15" fill="rgb(205,173,17)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9117%" y="277" width="0.0803%" height="15" fill="rgb(243,26,15)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9117%" y="261" width="0.0803%" height="15" fill="rgb(231,139,31)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.9117%" y="245" width="0.0803%" height="15" fill="rgb(208,163,22)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.9117%" y="229" width="0.0803%" height="15" fill="rgb(245,84,24)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.9117%" y="213" width="0.0803%" height="15" fill="rgb(238,140,36)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.9117%" y="197" width="0.0803%" height="15" fill="rgb(218,211,39)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9117%" y="181" width="0.0803%" height="15" fill="rgb(242,59,29)" fg:x="1058" fg:w="1"/><text x="85.1617%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.9920%" y="341" width="0.0803%" height="15" fill="rgb(245,91,22)" fg:x="1059" fg:w="1"/><text x="85.2420%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0722%" y="261" width="0.0803%" height="15" fill="rgb(206,13,6)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.0722%" y="245" width="0.0803%" height="15" fill="rgb(212,147,32)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0722%" y="229" width="0.0803%" height="15" fill="rgb(254,64,12)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.0722%" y="213" width="0.0803%" height="15" fill="rgb(212,104,54)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.0722%" y="197" width="0.0803%" height="15" fill="rgb(254,77,46)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.0722%" y="181" width="0.0803%" height="15" fill="rgb(219,55,26)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.0722%" y="165" width="0.0803%" height="15" fill="rgb(230,133,21)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.0722%" y="149" width="0.0803%" height="15" fill="rgb(247,110,50)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.0722%" y="133" width="0.0803%" height="15" fill="rgb(229,31,50)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.0722%" y="117" width="0.0803%" height="15" fill="rgb(250,13,40)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.0722%" y="101" width="0.0803%" height="15" fill="rgb(212,163,14)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.0722%" y="85" width="0.0803%" height="15" fill="rgb(211,190,39)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.0722%" y="69" width="0.0803%" height="15" fill="rgb(245,39,52)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0722%" y="53" width="0.0803%" height="15" fill="rgb(216,76,3)" fg:x="1060" fg:w="1"/><text x="85.3222%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.0722%" y="277" width="0.1605%" height="15" fill="rgb(218,225,6)" fg:x="1060" fg:w="2"/><text x="85.3222%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1525%" y="261" width="0.0803%" height="15" fill="rgb(215,137,11)" fg:x="1061" fg:w="1"/><text x="85.4025%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="85.0722%" y="309" width="0.2408%" height="15" fill="rgb(234,223,14)" fg:x="1060" fg:w="3"/><text x="85.3222%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="85.0722%" y="293" width="0.2408%" height="15" fill="rgb(236,24,21)" fg:x="1060" fg:w="3"/><text x="85.3222%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.2327%" y="277" width="0.0803%" height="15" fill="rgb(208,183,10)" fg:x="1062" fg:w="1"/><text x="85.4827%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.2327%" y="261" width="0.0803%" height="15" fill="rgb(254,9,3)" fg:x="1062" fg:w="1"/><text x="85.4827%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.2327%" y="245" width="0.0803%" height="15" fill="rgb(225,112,10)" fg:x="1062" fg:w="1"/><text x="85.4827%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.2327%" y="229" width="0.0803%" height="15" fill="rgb(232,7,4)" fg:x="1062" fg:w="1"/><text x="85.4827%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.3130%" y="277" width="0.0803%" height="15" fill="rgb(241,50,8)" fg:x="1063" fg:w="1"/><text x="85.5630%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.3130%" y="261" width="0.0803%" height="15" fill="rgb(209,164,32)" fg:x="1063" fg:w="1"/><text x="85.5630%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.3130%" y="245" width="0.0803%" height="15" fill="rgb(222,99,11)" fg:x="1063" fg:w="1"/><text x="85.5630%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.3130%" y="229" width="0.0803%" height="15" fill="rgb(208,139,8)" fg:x="1063" fg:w="1"/><text x="85.5630%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.3130%" y="213" width="0.0803%" height="15" fill="rgb(210,220,31)" fg:x="1063" fg:w="1"/><text x="85.5630%" y="223.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (7 samples, 0.56%)</title><rect x="84.9920%" y="405" width="0.5618%" height="15" fill="rgb(253,192,40)" fg:x="1059" fg:w="7"/><text x="85.2420%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="84.9920%" y="389" width="0.5618%" height="15" fill="rgb(218,174,11)" fg:x="1059" fg:w="7"/><text x="85.2420%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.56%)</title><rect x="84.9920%" y="373" width="0.5618%" height="15" fill="rgb(238,12,0)" fg:x="1059" fg:w="7"/><text x="85.2420%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.56%)</title><rect x="84.9920%" y="357" width="0.5618%" height="15" fill="rgb(223,87,52)" fg:x="1059" fg:w="7"/><text x="85.2420%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (6 samples, 0.48%)</title><rect x="85.0722%" y="341" width="0.4815%" height="15" fill="rgb(206,198,52)" fg:x="1060" fg:w="6"/><text x="85.3222%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="85.0722%" y="325" width="0.4815%" height="15" fill="rgb(239,183,3)" fg:x="1060" fg:w="6"/><text x="85.3222%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="85.3130%" y="309" width="0.2408%" height="15" fill="rgb(216,111,9)" fg:x="1063" fg:w="3"/><text x="85.5630%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="85.3130%" y="293" width="0.2408%" height="15" fill="rgb(221,6,16)" fg:x="1063" fg:w="3"/><text x="85.5630%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.3933%" y="277" width="0.1605%" height="15" fill="rgb(205,110,11)" fg:x="1064" fg:w="2"/><text x="85.6433%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.3933%" y="261" width="0.1605%" height="15" fill="rgb(210,162,38)" fg:x="1064" fg:w="2"/><text x="85.6433%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="85.3933%" y="245" width="0.1605%" height="15" fill="rgb(235,180,51)" fg:x="1064" fg:w="2"/><text x="85.6433%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.3933%" y="229" width="0.1605%" height="15" fill="rgb(205,214,28)" fg:x="1064" fg:w="2"/><text x="85.6433%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.4735%" y="213" width="0.0803%" height="15" fill="rgb(211,57,51)" fg:x="1065" fg:w="1"/><text x="85.7235%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.4735%" y="197" width="0.0803%" height="15" fill="rgb(207,55,41)" fg:x="1065" fg:w="1"/><text x="85.7235%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.4735%" y="181" width="0.0803%" height="15" fill="rgb(245,45,35)" fg:x="1065" fg:w="1"/><text x="85.7235%" y="191.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.5538%" y="373" width="0.0803%" height="15" fill="rgb(233,168,39)" fg:x="1066" fg:w="1"/><text x="85.8038%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5538%" y="357" width="0.0803%" height="15" fill="rgb(216,61,7)" fg:x="1066" fg:w="1"/><text x="85.8038%" y="367.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="85.5538%" y="341" width="0.0803%" height="15" fill="rgb(237,109,44)" fg:x="1066" fg:w="1"/><text x="85.8038%" y="351.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (36 samples, 2.89%)</title><rect x="82.9053%" y="469" width="2.8892%" height="15" fill="rgb(240,92,7)" fg:x="1033" fg:w="36"/><text x="83.1553%" y="479.50">pl..</text></g><g><title>plugins_core::tools::occupied_by (16 samples, 1.28%)</title><rect x="84.5104%" y="453" width="1.2841%" height="15" fill="rgb(252,17,32)" fg:x="1053" fg:w="16"/><text x="84.7604%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (12 samples, 0.96%)</title><rect x="84.8315%" y="437" width="0.9631%" height="15" fill="rgb(219,85,5)" fg:x="1057" fg:w="12"/><text x="85.0815%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.96%)</title><rect x="84.8315%" y="421" width="0.9631%" height="15" fill="rgb(213,50,52)" fg:x="1057" fg:w="12"/><text x="85.0815%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="85.5538%" y="405" width="0.2408%" height="15" fill="rgb(239,79,50)" fg:x="1066" fg:w="3"/><text x="85.8038%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="85.5538%" y="389" width="0.2408%" height="15" fill="rgb(249,49,7)" fg:x="1066" fg:w="3"/><text x="85.8038%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="85.6340%" y="373" width="0.1605%" height="15" fill="rgb(222,126,43)" fg:x="1067" fg:w="2"/><text x="85.8840%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="85.6340%" y="357" width="0.1605%" height="15" fill="rgb(230,157,52)" fg:x="1067" fg:w="2"/><text x="85.8840%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="85.6340%" y="341" width="0.1605%" height="15" fill="rgb(210,66,35)" fg:x="1067" fg:w="2"/><text x="85.8840%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.6340%" y="325" width="0.1605%" height="15" fill="rgb(220,96,16)" fg:x="1067" fg:w="2"/><text x="85.8840%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.6340%" y="309" width="0.1605%" height="15" fill="rgb(242,43,33)" fg:x="1067" fg:w="2"/><text x="85.8840%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.7143%" y="293" width="0.0803%" height="15" fill="rgb(248,128,51)" fg:x="1068" fg:w="1"/><text x="85.9643%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.7945%" y="453" width="0.0803%" height="15" fill="rgb(234,19,35)" fg:x="1069" fg:w="1"/><text x="86.0445%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.7945%" y="437" width="0.0803%" height="15" fill="rgb(232,120,30)" fg:x="1069" fg:w="1"/><text x="86.0445%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::finding::EntityRelationship&gt; (1 samples, 0.08%)</title><rect x="85.8748%" y="453" width="0.0803%" height="15" fill="rgb(209,184,13)" fg:x="1070" fg:w="1"/><text x="86.1248%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9551%" y="373" width="0.0803%" height="15" fill="rgb(222,153,0)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9551%" y="357" width="0.0803%" height="15" fill="rgb(251,96,47)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9551%" y="341" width="0.0803%" height="15" fill="rgb(253,113,5)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.9551%" y="325" width="0.0803%" height="15" fill="rgb(241,96,1)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.9551%" y="309" width="0.0803%" height="15" fill="rgb(216,225,1)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.9551%" y="293" width="0.0803%" height="15" fill="rgb(227,108,0)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.9551%" y="277" width="0.0803%" height="15" fill="rgb(221,29,48)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.9551%" y="261" width="0.0803%" height="15" fill="rgb(222,55,16)" fg:x="1071" fg:w="1"/><text x="86.2051%" y="271.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_item (40 samples, 3.21%)</title><rect x="82.9053%" y="485" width="3.2103%" height="15" fill="rgb(242,210,22)" fg:x="1033" fg:w="40"/><text x="83.1553%" y="495.50">&lt;pl..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="85.7945%" y="469" width="0.3210%" height="15" fill="rgb(223,142,30)" fg:x="1069" fg:w="4"/><text x="86.0445%" y="479.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="85.9551%" y="453" width="0.1605%" height="15" fill="rgb(248,92,51)" fg:x="1071" fg:w="2"/><text x="86.2051%" y="463.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="85.9551%" y="437" width="0.1605%" height="15" fill="rgb(249,201,12)" fg:x="1071" fg:w="2"/><text x="86.2051%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::name (2 samples, 0.16%)</title><rect x="85.9551%" y="421" width="0.1605%" height="15" fill="rgb(230,213,39)" fg:x="1071" fg:w="2"/><text x="86.2051%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="85.9551%" y="405" width="0.1605%" height="15" fill="rgb(232,46,34)" fg:x="1071" fg:w="2"/><text x="86.2051%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.9551%" y="389" width="0.1605%" height="15" fill="rgb(226,194,19)" fg:x="1071" fg:w="2"/><text x="86.2051%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.0353%" y="373" width="0.0803%" height="15" fill="rgb(254,144,47)" fg:x="1072" fg:w="1"/><text x="86.2853%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.0353%" y="357" width="0.0803%" height="15" fill="rgb(254,168,3)" fg:x="1072" fg:w="1"/><text x="86.2853%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (41 samples, 3.29%)</title><rect x="82.9053%" y="501" width="3.2905%" height="15" fill="rgb(249,104,32)" fg:x="1033" fg:w="41"/><text x="83.1553%" y="511.50">&lt;en..</text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="86.1156%" y="485" width="0.0803%" height="15" fill="rgb(213,143,0)" fg:x="1073" fg:w="1"/><text x="86.3656%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.2761%" y="437" width="0.0803%" height="15" fill="rgb(211,72,7)" fg:x="1075" fg:w="1"/><text x="86.5261%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.2761%" y="421" width="0.0803%" height="15" fill="rgb(249,86,4)" fg:x="1075" fg:w="1"/><text x="86.5261%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="86.2761%" y="405" width="0.0803%" height="15" fill="rgb(252,17,31)" fg:x="1075" fg:w="1"/><text x="86.5261%" y="415.50"></text></g><g><title>plugins_core::library::actions::reply_ok (3 samples, 0.24%)</title><rect x="86.1958%" y="501" width="0.2408%" height="15" fill="rgb(238,169,43)" fg:x="1074" fg:w="3"/><text x="86.4458%" y="511.50"></text></g><g><title>&lt;replies::CarryingEvent as replies::ToTaggedJson&gt;::to_tagged_json (3 samples, 0.24%)</title><rect x="86.1958%" y="485" width="0.2408%" height="15" fill="rgb(220,206,52)" fg:x="1074" fg:w="3"/><text x="86.4458%" y="495.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::CarryingEvent&gt;::serialize (3 samples, 0.24%)</title><rect x="86.1958%" y="469" width="0.2408%" height="15" fill="rgb(214,176,19)" fg:x="1074" fg:w="3"/><text x="86.4458%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeStructVariant as serde::ser::SerializeStructVariant&gt;::serialize_field (2 samples, 0.16%)</title><rect x="86.2761%" y="453" width="0.1605%" height="15" fill="rgb(206,11,39)" fg:x="1075" fg:w="2"/><text x="86.5261%" y="463.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3563%" y="437" width="0.0803%" height="15" fill="rgb(234,191,6)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.3563%" y="421" width="0.0803%" height="15" fill="rgb(244,46,51)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.3563%" y="405" width="0.0803%" height="15" fill="rgb(212,184,35)" fg:x="1076" fg:w="1"/><text x="86.6063%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.4366%" y="485" width="0.0803%" height="15" fill="rgb(217,184,38)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.4366%" y="469" width="0.0803%" height="15" fill="rgb(218,88,44)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.4366%" y="453" width="0.0803%" height="15" fill="rgb(241,121,2)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.4366%" y="437" width="0.0803%" height="15" fill="rgb(232,92,4)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.4366%" y="421" width="0.0803%" height="15" fill="rgb(233,16,51)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.4366%" y="405" width="0.0803%" height="15" fill="rgb(205,138,9)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.4366%" y="389" width="0.0803%" height="15" fill="rgb(212,133,44)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.4366%" y="373" width="0.0803%" height="15" fill="rgb(247,170,39)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.4366%" y="357" width="0.0803%" height="15" fill="rgb(236,183,8)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.4366%" y="341" width="0.0803%" height="15" fill="rgb(245,194,21)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.4366%" y="325" width="0.0803%" height="15" fill="rgb(244,142,33)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.4366%" y="309" width="0.0803%" height="15" fill="rgb(237,159,51)" fg:x="1077" fg:w="1"/><text x="86.6866%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.5169%" y="485" width="0.0803%" height="15" fill="rgb(223,134,40)" fg:x="1078" fg:w="1"/><text x="86.7669%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.5971%" y="373" width="0.0803%" height="15" fill="rgb(217,227,45)" fg:x="1079" fg:w="1"/><text x="86.8471%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.5971%" y="453" width="0.1605%" height="15" fill="rgb(205,171,8)" fg:x="1079" fg:w="2"/><text x="86.8471%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.5971%" y="437" width="0.1605%" height="15" fill="rgb(231,83,23)" fg:x="1079" fg:w="2"/><text x="86.8471%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.5971%" y="421" width="0.1605%" height="15" fill="rgb(226,65,0)" fg:x="1079" fg:w="2"/><text x="86.8471%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.5971%" y="405" width="0.1605%" height="15" fill="rgb(218,127,49)" fg:x="1079" fg:w="2"/><text x="86.8471%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.5971%" y="389" width="0.1605%" height="15" fill="rgb(238,61,34)" fg:x="1079" fg:w="2"/><text x="86.8471%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6774%" y="373" width="0.0803%" height="15" fill="rgb(228,144,3)" fg:x="1080" fg:w="1"/><text x="86.9274%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="86.5971%" y="485" width="0.2408%" height="15" fill="rgb(212,155,32)" fg:x="1079" fg:w="3"/><text x="86.8471%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="86.5971%" y="469" width="0.2408%" height="15" fill="rgb(219,3,13)" fg:x="1079" fg:w="3"/><text x="86.8471%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.7576%" y="453" width="0.0803%" height="15" fill="rgb(225,41,39)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.7576%" y="437" width="0.0803%" height="15" fill="rgb(236,169,50)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.7576%" y="421" width="0.0803%" height="15" fill="rgb(253,211,17)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.7576%" y="405" width="0.0803%" height="15" fill="rgb(219,67,7)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.7576%" y="389" width="0.0803%" height="15" fill="rgb(236,198,21)" fg:x="1081" fg:w="1"/><text x="87.0076%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9181%" y="453" width="0.0803%" height="15" fill="rgb(250,83,24)" fg:x="1083" fg:w="1"/><text x="87.1681%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0787%" y="325" width="0.0803%" height="15" fill="rgb(249,175,20)" fg:x="1085" fg:w="1"/><text x="87.3287%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0787%" y="309" width="0.0803%" height="15" fill="rgb(239,72,36)" fg:x="1085" fg:w="1"/><text x="87.3287%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0787%" y="293" width="0.0803%" height="15" fill="rgb(225,33,12)" fg:x="1085" fg:w="1"/><text x="87.3287%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.0787%" y="277" width="0.0803%" height="15" fill="rgb(213,209,10)" fg:x="1085" fg:w="1"/><text x="87.3287%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.0787%" y="261" width="0.0803%" height="15" fill="rgb(233,156,7)" fg:x="1085" fg:w="1"/><text x="87.3287%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.0787%" y="245" width="0.0803%" height="15" fill="rgb(242,71,8)" fg:x="1085" fg:w="1"/><text x="87.3287%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.0787%" y="229" width="0.0803%" height="15" fill="rgb(223,170,53)" fg:x="1085" fg:w="1"/><text x="87.3287%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.0787%" y="213" width="0.0803%" height="15" fill="rgb(252,23,27)" fg:x="1085" fg:w="1"/><text x="87.3287%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.0787%" y="197" width="0.0803%" height="15" fill="rgb(220,23,37)" fg:x="1085" fg:w="1"/><text x="87.3287%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.0787%" y="181" width="0.0803%" height="15" fill="rgb(208,60,20)" fg:x="1085" fg:w="1"/><text x="87.3287%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.0787%" y="165" width="0.0803%" height="15" fill="rgb(246,105,41)" fg:x="1085" fg:w="1"/><text x="87.3287%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.0787%" y="149" width="0.0803%" height="15" fill="rgb(229,80,14)" fg:x="1085" fg:w="1"/><text x="87.3287%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.0787%" y="133" width="0.0803%" height="15" fill="rgb(223,226,8)" fg:x="1085" fg:w="1"/><text x="87.3287%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.0787%" y="117" width="0.0803%" height="15" fill="rgb(212,227,24)" fg:x="1085" fg:w="1"/><text x="87.3287%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0787%" y="101" width="0.0803%" height="15" fill="rgb(234,38,14)" fg:x="1085" fg:w="1"/><text x="87.3287%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.1589%" y="325" width="0.0803%" height="15" fill="rgb(222,86,39)" fg:x="1086" fg:w="1"/><text x="87.4089%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.1589%" y="309" width="0.0803%" height="15" fill="rgb(208,189,2)" fg:x="1086" fg:w="1"/><text x="87.4089%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.1589%" y="293" width="0.0803%" height="15" fill="rgb(229,19,19)" fg:x="1086" fg:w="1"/><text x="87.4089%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.1589%" y="277" width="0.0803%" height="15" fill="rgb(250,169,51)" fg:x="1086" fg:w="1"/><text x="87.4089%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.1589%" y="261" width="0.0803%" height="15" fill="rgb(209,182,25)" fg:x="1086" fg:w="1"/><text x="87.4089%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="86.9984%" y="357" width="0.4013%" height="15" fill="rgb(240,113,23)" fg:x="1084" fg:w="5"/><text x="87.2484%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="86.9984%" y="341" width="0.4013%" height="15" fill="rgb(224,93,33)" fg:x="1084" fg:w="5"/><text x="87.2484%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="87.2392%" y="325" width="0.1605%" height="15" fill="rgb(234,37,17)" fg:x="1087" fg:w="2"/><text x="87.4892%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.2392%" y="309" width="0.1605%" height="15" fill="rgb(219,199,15)" fg:x="1087" fg:w="2"/><text x="87.4892%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.3194%" y="293" width="0.0803%" height="15" fill="rgb(249,190,12)" fg:x="1088" fg:w="1"/><text x="87.5694%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3194%" y="277" width="0.0803%" height="15" fill="rgb(254,188,20)" fg:x="1088" fg:w="1"/><text x="87.5694%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.3194%" y="261" width="0.0803%" height="15" fill="rgb(227,85,36)" fg:x="1088" fg:w="1"/><text x="87.5694%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3194%" y="245" width="0.0803%" height="15" fill="rgb(214,186,36)" fg:x="1088" fg:w="1"/><text x="87.5694%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3997%" y="325" width="0.0803%" height="15" fill="rgb(207,67,47)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3997%" y="309" width="0.0803%" height="15" fill="rgb(224,140,32)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3997%" y="293" width="0.0803%" height="15" fill="rgb(225,114,12)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.3997%" y="277" width="0.0803%" height="15" fill="rgb(209,199,39)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.3997%" y="261" width="0.0803%" height="15" fill="rgb(216,181,6)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.3997%" y="245" width="0.0803%" height="15" fill="rgb(210,39,50)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.3997%" y="229" width="0.0803%" height="15" fill="rgb(239,154,53)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.3997%" y="213" width="0.0803%" height="15" fill="rgb(235,123,22)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.3997%" y="197" width="0.0803%" height="15" fill="rgb(243,194,26)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.3997%" y="181" width="0.0803%" height="15" fill="rgb(245,23,33)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.3997%" y="165" width="0.0803%" height="15" fill="rgb(213,191,38)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.3997%" y="149" width="0.0803%" height="15" fill="rgb(226,199,18)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.3997%" y="133" width="0.0803%" height="15" fill="rgb(210,106,30)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.3997%" y="117" width="0.0803%" height="15" fill="rgb(219,177,27)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.3997%" y="101" width="0.0803%" height="15" fill="rgb(215,14,22)" fg:x="1089" fg:w="1"/><text x="87.6497%" y="111.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.56%)</title><rect x="86.9984%" y="437" width="0.5618%" height="15" fill="rgb(240,24,8)" fg:x="1084" fg:w="7"/><text x="87.2484%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="86.9984%" y="421" width="0.5618%" height="15" fill="rgb(220,138,5)" fg:x="1084" fg:w="7"/><text x="87.2484%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.56%)</title><rect x="86.9984%" y="405" width="0.5618%" height="15" fill="rgb(254,39,11)" fg:x="1084" fg:w="7"/><text x="87.2484%" y="415.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (7 samples, 0.56%)</title><rect x="86.9984%" y="389" width="0.5618%" height="15" fill="rgb(223,92,18)" fg:x="1084" fg:w="7"/><text x="87.2484%" y="399.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="86.9984%" y="373" width="0.5618%" height="15" fill="rgb(231,216,35)" fg:x="1084" fg:w="7"/><text x="87.2484%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="87.3997%" y="357" width="0.1605%" height="15" fill="rgb(210,197,31)" fg:x="1089" fg:w="2"/><text x="87.6497%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.3997%" y="341" width="0.1605%" height="15" fill="rgb(233,78,6)" fg:x="1089" fg:w="2"/><text x="87.6497%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.4799%" y="325" width="0.0803%" height="15" fill="rgb(219,192,52)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4799%" y="309" width="0.0803%" height="15" fill="rgb(240,140,47)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.4799%" y="293" width="0.0803%" height="15" fill="rgb(214,22,41)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4799%" y="277" width="0.0803%" height="15" fill="rgb(216,28,18)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.4799%" y="261" width="0.0803%" height="15" fill="rgb(219,204,4)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4799%" y="245" width="0.0803%" height="15" fill="rgb(216,98,27)" fg:x="1090" fg:w="1"/><text x="87.7299%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (8 samples, 0.64%)</title><rect x="86.9984%" y="453" width="0.6421%" height="15" fill="rgb(208,139,37)" fg:x="1084" fg:w="8"/><text x="87.2484%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="87.5602%" y="437" width="0.0803%" height="15" fill="rgb(241,193,50)" fg:x="1091" fg:w="1"/><text x="87.8102%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.5602%" y="421" width="0.0803%" height="15" fill="rgb(227,24,47)" fg:x="1091" fg:w="1"/><text x="87.8102%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (11 samples, 0.88%)</title><rect x="86.8379%" y="485" width="0.8828%" height="15" fill="rgb(212,91,31)" fg:x="1082" fg:w="11"/><text x="87.0879%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="86.9181%" y="469" width="0.8026%" height="15" fill="rgb(253,174,34)" fg:x="1083" fg:w="10"/><text x="87.1681%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="87.6404%" y="453" width="0.0803%" height="15" fill="rgb(219,214,52)" fg:x="1092" fg:w="1"/><text x="87.8904%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="87.6404%" y="437" width="0.0803%" height="15" fill="rgb(222,221,3)" fg:x="1092" fg:w="1"/><text x="87.8904%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="87.8010%" y="453" width="0.0803%" height="15" fill="rgb(209,130,23)" fg:x="1094" fg:w="1"/><text x="88.0510%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.8010%" y="437" width="0.0803%" height="15" fill="rgb(232,162,43)" fg:x="1094" fg:w="1"/><text x="88.0510%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.8010%" y="421" width="0.0803%" height="15" fill="rgb(245,34,38)" fg:x="1094" fg:w="1"/><text x="88.0510%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="87.8010%" y="405" width="0.0803%" height="15" fill="rgb(226,70,5)" fg:x="1094" fg:w="1"/><text x="88.0510%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.8010%" y="389" width="0.0803%" height="15" fill="rgb(238,97,25)" fg:x="1094" fg:w="1"/><text x="88.0510%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.8010%" y="373" width="0.0803%" height="15" fill="rgb(246,1,22)" fg:x="1094" fg:w="1"/><text x="88.0510%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.0417%" y="421" width="0.1605%" height="15" fill="rgb(248,180,27)" fg:x="1097" fg:w="2"/><text x="88.2917%" y="431.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (7 samples, 0.56%)</title><rect x="87.7207%" y="485" width="0.5618%" height="15" fill="rgb(223,147,15)" fg:x="1093" fg:w="7"/><text x="87.9707%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="87.7207%" y="469" width="0.5618%" height="15" fill="rgb(220,142,50)" fg:x="1093" fg:w="7"/><text x="87.9707%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (5 samples, 0.40%)</title><rect x="87.8812%" y="453" width="0.4013%" height="15" fill="rgb(209,24,8)" fg:x="1095" fg:w="5"/><text x="88.1312%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="87.9615%" y="437" width="0.3210%" height="15" fill="rgb(245,95,15)" fg:x="1096" fg:w="4"/><text x="88.2115%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="88.2022%" y="421" width="0.0803%" height="15" fill="rgb(254,132,39)" fg:x="1099" fg:w="1"/><text x="88.4522%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="88.2022%" y="405" width="0.0803%" height="15" fill="rgb(230,135,4)" fg:x="1099" fg:w="1"/><text x="88.4522%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.2022%" y="389" width="0.0803%" height="15" fill="rgb(233,65,45)" fg:x="1099" fg:w="1"/><text x="88.4522%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="88.2825%" y="469" width="0.2408%" height="15" fill="rgb(238,156,12)" fg:x="1100" fg:w="3"/><text x="88.5325%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="88.2825%" y="453" width="0.2408%" height="15" fill="rgb(230,14,54)" fg:x="1100" fg:w="3"/><text x="88.5325%" y="463.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="88.2825%" y="437" width="0.2408%" height="15" fill="rgb(242,41,37)" fg:x="1100" fg:w="3"/><text x="88.5325%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (3 samples, 0.24%)</title><rect x="88.2825%" y="421" width="0.2408%" height="15" fill="rgb(231,37,53)" fg:x="1100" fg:w="3"/><text x="88.5325%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="88.3628%" y="405" width="0.1605%" height="15" fill="rgb(235,181,47)" fg:x="1101" fg:w="2"/><text x="88.6128%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="88.3628%" y="389" width="0.1605%" height="15" fill="rgb(253,41,16)" fg:x="1101" fg:w="2"/><text x="88.6128%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.4430%" y="373" width="0.0803%" height="15" fill="rgb(245,44,19)" fg:x="1102" fg:w="1"/><text x="88.6930%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4430%" y="357" width="0.0803%" height="15" fill="rgb(245,22,46)" fg:x="1102" fg:w="1"/><text x="88.6930%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4430%" y="341" width="0.0803%" height="15" fill="rgb(207,84,51)" fg:x="1102" fg:w="1"/><text x="88.6930%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4430%" y="325" width="0.0803%" height="15" fill="rgb(212,36,12)" fg:x="1102" fg:w="1"/><text x="88.6930%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4430%" y="309" width="0.0803%" height="15" fill="rgb(240,188,18)" fg:x="1102" fg:w="1"/><text x="88.6930%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.6035%" y="421" width="0.0803%" height="15" fill="rgb(245,89,47)" fg:x="1104" fg:w="1"/><text x="88.8535%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="88.2825%" y="485" width="0.4815%" height="15" fill="rgb(216,24,14)" fg:x="1100" fg:w="6"/><text x="88.5325%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="88.5233%" y="469" width="0.2408%" height="15" fill="rgb(217,71,21)" fg:x="1103" fg:w="3"/><text x="88.7733%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="88.6035%" y="453" width="0.1605%" height="15" fill="rgb(251,142,29)" fg:x="1104" fg:w="2"/><text x="88.8535%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.6035%" y="437" width="0.1605%" height="15" fill="rgb(210,29,22)" fg:x="1104" fg:w="2"/><text x="88.8535%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.6838%" y="421" width="0.0803%" height="15" fill="rgb(248,174,36)" fg:x="1105" fg:w="1"/><text x="88.9338%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6838%" y="405" width="0.0803%" height="15" fill="rgb(224,111,34)" fg:x="1105" fg:w="1"/><text x="88.9338%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="88.7640%" y="469" width="0.0803%" height="15" fill="rgb(245,177,23)" fg:x="1106" fg:w="1"/><text x="89.0140%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.7640%" y="453" width="0.0803%" height="15" fill="rgb(217,114,53)" fg:x="1106" fg:w="1"/><text x="89.0140%" y="463.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="88.7640%" y="485" width="0.1605%" height="15" fill="rgb(223,157,10)" fg:x="1106" fg:w="2"/><text x="89.0140%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="88.8443%" y="469" width="0.0803%" height="15" fill="rgb(217,134,44)" fg:x="1107" fg:w="1"/><text x="89.0943%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="88.8443%" y="453" width="0.0803%" height="15" fill="rgb(222,195,7)" fg:x="1107" fg:w="1"/><text x="89.0943%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="88.9246%" y="469" width="0.1605%" height="15" fill="rgb(235,153,27)" fg:x="1108" fg:w="2"/><text x="89.1746%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.9246%" y="453" width="0.1605%" height="15" fill="rgb(247,105,14)" fg:x="1108" fg:w="2"/><text x="89.1746%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.9246%" y="437" width="0.1605%" height="15" fill="rgb(250,6,2)" fg:x="1108" fg:w="2"/><text x="89.1746%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.9246%" y="421" width="0.1605%" height="15" fill="rgb(250,41,38)" fg:x="1108" fg:w="2"/><text x="89.1746%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.0048%" y="405" width="0.0803%" height="15" fill="rgb(234,127,49)" fg:x="1109" fg:w="1"/><text x="89.2548%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.0048%" y="389" width="0.0803%" height="15" fill="rgb(242,79,16)" fg:x="1109" fg:w="1"/><text x="89.2548%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="89.0048%" y="373" width="0.0803%" height="15" fill="rgb(236,15,0)" fg:x="1109" fg:w="1"/><text x="89.2548%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.0851%" y="453" width="0.0803%" height="15" fill="rgb(217,113,36)" fg:x="1110" fg:w="1"/><text x="89.3351%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.0851%" y="437" width="0.0803%" height="15" fill="rgb(239,12,4)" fg:x="1110" fg:w="1"/><text x="89.3351%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="89.1653%" y="389" width="0.0803%" height="15" fill="rgb(236,142,50)" fg:x="1111" fg:w="1"/><text x="89.4153%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="89.1653%" y="373" width="0.0803%" height="15" fill="rgb(244,108,52)" fg:x="1111" fg:w="1"/><text x="89.4153%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (87 samples, 6.98%)</title><rect x="82.3435%" y="517" width="6.9823%" height="15" fill="rgb(223,79,42)" fg:x="1026" fg:w="87"/><text x="82.5935%" y="527.50">&lt;plugins_..</text></g><g><title>plugins_core::location::change_location (36 samples, 2.89%)</title><rect x="86.4366%" y="501" width="2.8892%" height="15" fill="rgb(245,34,19)" fg:x="1077" fg:w="36"/><text x="86.6866%" y="511.50">pl..</text></g><g><title>plugins_core::location::Location::set (5 samples, 0.40%)</title><rect x="88.9246%" y="485" width="0.4013%" height="15" fill="rgb(222,137,30)" fg:x="1108" fg:w="5"/><text x="89.1746%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="89.0851%" y="469" width="0.2408%" height="15" fill="rgb(213,216,50)" fg:x="1110" fg:w="3"/><text x="89.3351%" y="479.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="89.1653%" y="453" width="0.1605%" height="15" fill="rgb(206,117,33)" fg:x="1111" fg:w="2"/><text x="89.4153%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.1653%" y="437" width="0.1605%" height="15" fill="rgb(234,122,47)" fg:x="1111" fg:w="2"/><text x="89.4153%" y="447.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="89.1653%" y="421" width="0.1605%" height="15" fill="rgb(226,61,39)" fg:x="1111" fg:w="2"/><text x="89.4153%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="89.1653%" y="405" width="0.1605%" height="15" fill="rgb(229,174,28)" fg:x="1111" fg:w="2"/><text x="89.4153%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.2456%" y="389" width="0.0803%" height="15" fill="rgb(246,207,11)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.2456%" y="373" width="0.0803%" height="15" fill="rgb(245,212,19)" fg:x="1112" fg:w="1"/><text x="89.4956%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.4864%" y="453" width="0.0803%" height="15" fill="rgb(240,107,51)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.4864%" y="437" width="0.0803%" height="15" fill="rgb(238,67,13)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.4864%" y="421" width="0.0803%" height="15" fill="rgb(250,8,29)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.4864%" y="405" width="0.0803%" height="15" fill="rgb(227,44,9)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.4864%" y="389" width="0.0803%" height="15" fill="rgb(247,128,2)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.4864%" y="373" width="0.0803%" height="15" fill="rgb(239,11,50)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.4864%" y="357" width="0.0803%" height="15" fill="rgb(241,11,28)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.4864%" y="341" width="0.0803%" height="15" fill="rgb(220,15,14)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.4864%" y="325" width="0.0803%" height="15" fill="rgb(226,97,9)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.4864%" y="309" width="0.0803%" height="15" fill="rgb(240,221,24)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.4864%" y="293" width="0.0803%" height="15" fill="rgb(238,199,31)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.4864%" y="277" width="0.0803%" height="15" fill="rgb(222,15,37)" fg:x="1115" fg:w="1"/><text x="89.7364%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.5666%" y="389" width="0.0803%" height="15" fill="rgb(225,66,12)" fg:x="1116" fg:w="1"/><text x="89.8166%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (4 samples, 0.32%)</title><rect x="89.4061%" y="485" width="0.3210%" height="15" fill="rgb(224,142,38)" fg:x="1114" fg:w="4"/><text x="89.6561%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="89.4061%" y="469" width="0.3210%" height="15" fill="rgb(208,206,25)" fg:x="1114" fg:w="4"/><text x="89.6561%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.5666%" y="453" width="0.1605%" height="15" fill="rgb(205,153,20)" fg:x="1116" fg:w="2"/><text x="89.8166%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.5666%" y="437" width="0.1605%" height="15" fill="rgb(206,199,32)" fg:x="1116" fg:w="2"/><text x="89.8166%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="89.5666%" y="421" width="0.1605%" height="15" fill="rgb(246,135,31)" fg:x="1116" fg:w="2"/><text x="89.8166%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.5666%" y="405" width="0.1605%" height="15" fill="rgb(208,211,40)" fg:x="1116" fg:w="2"/><text x="89.8166%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.6469%" y="389" width="0.0803%" height="15" fill="rgb(210,219,1)" fg:x="1117" fg:w="1"/><text x="89.8969%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="89.7271%" y="485" width="0.0803%" height="15" fill="rgb(232,190,35)" fg:x="1118" fg:w="1"/><text x="89.9771%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.7271%" y="469" width="0.0803%" height="15" fill="rgb(211,9,18)" fg:x="1118" fg:w="1"/><text x="89.9771%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.7271%" y="453" width="0.0803%" height="15" fill="rgb(212,15,38)" fg:x="1118" fg:w="1"/><text x="89.9771%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.7271%" y="437" width="0.0803%" height="15" fill="rgb(238,74,28)" fg:x="1118" fg:w="1"/><text x="89.9771%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.7271%" y="421" width="0.0803%" height="15" fill="rgb(230,98,34)" fg:x="1118" fg:w="1"/><text x="89.9771%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.7271%" y="405" width="0.0803%" height="15" fill="rgb(212,130,40)" fg:x="1118" fg:w="1"/><text x="89.9771%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.7271%" y="389" width="0.0803%" height="15" fill="rgb(234,200,15)" fg:x="1118" fg:w="1"/><text x="89.9771%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.7271%" y="373" width="0.0803%" height="15" fill="rgb(216,227,29)" fg:x="1118" fg:w="1"/><text x="89.9771%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::has_scope (1 samples, 0.08%)</title><rect x="89.8074%" y="485" width="0.0803%" height="15" fill="rgb(226,47,50)" fg:x="1119" fg:w="1"/><text x="90.0574%" y="495.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (7 samples, 0.56%)</title><rect x="89.4061%" y="501" width="0.5618%" height="15" fill="rgb(232,146,36)" fg:x="1114" fg:w="7"/><text x="89.6561%" y="511.50"></text></g><g><title>plugins_core::looking::model::Unqualified::qualify (1 samples, 0.08%)</title><rect x="89.8876%" y="485" width="0.0803%" height="15" fill="rgb(234,162,39)" fg:x="1120" fg:w="1"/><text x="90.1376%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.8876%" y="469" width="0.0803%" height="15" fill="rgb(253,148,35)" fg:x="1120" fg:w="1"/><text x="90.1376%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::finding::EntityRelationship&gt; (1 samples, 0.08%)</title><rect x="89.9679%" y="469" width="0.0803%" height="15" fill="rgb(253,200,8)" fg:x="1121" fg:w="1"/><text x="90.2179%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.9679%" y="453" width="0.0803%" height="15" fill="rgb(220,107,20)" fg:x="1121" fg:w="1"/><text x="90.2179%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0482%" y="453" width="0.0803%" height="15" fill="rgb(205,200,12)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0482%" y="437" width="0.0803%" height="15" fill="rgb(219,123,42)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0482%" y="421" width="0.0803%" height="15" fill="rgb(236,136,3)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.0482%" y="405" width="0.0803%" height="15" fill="rgb(213,112,27)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.0482%" y="389" width="0.0803%" height="15" fill="rgb(229,181,47)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.0482%" y="373" width="0.0803%" height="15" fill="rgb(243,123,15)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.0482%" y="357" width="0.0803%" height="15" fill="rgb(206,135,33)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.0482%" y="341" width="0.0803%" height="15" fill="rgb(232,190,44)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.0482%" y="325" width="0.0803%" height="15" fill="rgb(237,122,12)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.0482%" y="309" width="0.0803%" height="15" fill="rgb(245,157,35)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.0482%" y="293" width="0.0803%" height="15" fill="rgb(205,164,34)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.0482%" y="277" width="0.0803%" height="15" fill="rgb(237,82,1)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.0482%" y="261" width="0.0803%" height="15" fill="rgb(220,167,39)" fg:x="1122" fg:w="1"/><text x="90.2982%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="90.1284%" y="453" width="0.0803%" height="15" fill="rgb(208,133,37)" fg:x="1123" fg:w="1"/><text x="90.3784%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="90.1284%" y="437" width="0.0803%" height="15" fill="rgb(243,161,51)" fg:x="1123" fg:w="1"/><text x="90.3784%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="90.1284%" y="421" width="0.0803%" height="15" fill="rgb(232,127,41)" fg:x="1123" fg:w="1"/><text x="90.3784%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.2087%" y="357" width="0.0803%" height="15" fill="rgb(237,20,11)" fg:x="1124" fg:w="1"/><text x="90.4587%" y="367.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="90.2087%" y="437" width="0.1605%" height="15" fill="rgb(233,186,24)" fg:x="1124" fg:w="2"/><text x="90.4587%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (2 samples, 0.16%)</title><rect x="90.2087%" y="421" width="0.1605%" height="15" fill="rgb(210,39,6)" fg:x="1124" fg:w="2"/><text x="90.4587%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="90.2087%" y="405" width="0.1605%" height="15" fill="rgb(216,11,48)" fg:x="1124" fg:w="2"/><text x="90.4587%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="90.2087%" y="389" width="0.1605%" height="15" fill="rgb(222,13,18)" fg:x="1124" fg:w="2"/><text x="90.4587%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="90.2087%" y="373" width="0.1605%" height="15" fill="rgb(238,150,15)" fg:x="1124" fg:w="2"/><text x="90.4587%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.2889%" y="357" width="0.0803%" height="15" fill="rgb(235,57,5)" fg:x="1125" fg:w="1"/><text x="90.5389%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.2889%" y="341" width="0.0803%" height="15" fill="rgb(214,196,13)" fg:x="1125" fg:w="1"/><text x="90.5389%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.2889%" y="325" width="0.0803%" height="15" fill="rgb(217,219,39)" fg:x="1125" fg:w="1"/><text x="90.5389%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.2889%" y="309" width="0.0803%" height="15" fill="rgb(237,225,39)" fg:x="1125" fg:w="1"/><text x="90.5389%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.2889%" y="293" width="0.0803%" height="15" fill="rgb(221,88,26)" fg:x="1125" fg:w="1"/><text x="90.5389%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="90.3692%" y="437" width="0.0803%" height="15" fill="rgb(205,45,48)" fg:x="1126" fg:w="1"/><text x="90.6192%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="90.3692%" y="421" width="0.0803%" height="15" fill="rgb(234,216,37)" fg:x="1126" fg:w="1"/><text x="90.6192%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.3692%" y="405" width="0.0803%" height="15" fill="rgb(243,210,39)" fg:x="1126" fg:w="1"/><text x="90.6192%" y="415.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5297%" y="405" width="0.0803%" height="15" fill="rgb(232,86,47)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5297%" y="389" width="0.0803%" height="15" fill="rgb(234,222,31)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5297%" y="373" width="0.0803%" height="15" fill="rgb(211,202,13)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5297%" y="357" width="0.0803%" height="15" fill="rgb(237,138,3)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5297%" y="341" width="0.0803%" height="15" fill="rgb(225,74,1)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.5297%" y="325" width="0.0803%" height="15" fill="rgb(252,76,17)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.5297%" y="309" width="0.0803%" height="15" fill="rgb(217,109,21)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.5297%" y="293" width="0.0803%" height="15" fill="rgb(235,7,3)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.5297%" y="277" width="0.0803%" height="15" fill="rgb(238,16,13)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.5297%" y="261" width="0.0803%" height="15" fill="rgb(242,32,47)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.5297%" y="245" width="0.0803%" height="15" fill="rgb(241,38,43)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.5297%" y="229" width="0.0803%" height="15" fill="rgb(213,124,26)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.5297%" y="213" width="0.0803%" height="15" fill="rgb(208,183,39)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.5297%" y="197" width="0.0803%" height="15" fill="rgb(222,116,36)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.5297%" y="181" width="0.0803%" height="15" fill="rgb(214,36,24)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.5297%" y="165" width="0.0803%" height="15" fill="rgb(254,64,37)" fg:x="1128" fg:w="1"/><text x="90.7797%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6100%" y="277" width="0.0803%" height="15" fill="rgb(216,166,14)" fg:x="1129" fg:w="1"/><text x="90.8600%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6100%" y="261" width="0.0803%" height="15" fill="rgb(242,144,17)" fg:x="1129" fg:w="1"/><text x="90.8600%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.6100%" y="245" width="0.0803%" height="15" fill="rgb(233,229,42)" fg:x="1129" fg:w="1"/><text x="90.8600%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="90.6100%" y="309" width="0.1605%" height="15" fill="rgb(221,204,47)" fg:x="1129" fg:w="2"/><text x="90.8600%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="90.6100%" y="293" width="0.1605%" height="15" fill="rgb(230,26,44)" fg:x="1129" fg:w="2"/><text x="90.8600%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.6902%" y="277" width="0.0803%" height="15" fill="rgb(242,209,3)" fg:x="1130" fg:w="1"/><text x="90.9402%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6902%" y="261" width="0.0803%" height="15" fill="rgb(229,32,19)" fg:x="1130" fg:w="1"/><text x="90.9402%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="90.6100%" y="405" width="0.2408%" height="15" fill="rgb(211,49,50)" fg:x="1129" fg:w="3"/><text x="90.8600%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="90.6100%" y="389" width="0.2408%" height="15" fill="rgb(208,171,21)" fg:x="1129" fg:w="3"/><text x="90.8600%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="90.6100%" y="373" width="0.2408%" height="15" fill="rgb(240,86,9)" fg:x="1129" fg:w="3"/><text x="90.8600%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="90.6100%" y="357" width="0.2408%" height="15" fill="rgb(207,169,47)" fg:x="1129" fg:w="3"/><text x="90.8600%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (3 samples, 0.24%)</title><rect x="90.6100%" y="341" width="0.2408%" height="15" fill="rgb(212,103,33)" fg:x="1129" fg:w="3"/><text x="90.8600%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="90.6100%" y="325" width="0.2408%" height="15" fill="rgb(209,86,21)" fg:x="1129" fg:w="3"/><text x="90.8600%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="90.7705%" y="309" width="0.0803%" height="15" fill="rgb(221,77,49)" fg:x="1131" fg:w="1"/><text x="91.0205%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.7705%" y="293" width="0.0803%" height="15" fill="rgb(244,188,21)" fg:x="1131" fg:w="1"/><text x="91.0205%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.7705%" y="277" width="0.0803%" height="15" fill="rgb(228,11,38)" fg:x="1131" fg:w="1"/><text x="91.0205%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.7705%" y="261" width="0.0803%" height="15" fill="rgb(222,158,25)" fg:x="1131" fg:w="1"/><text x="91.0205%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.7705%" y="245" width="0.0803%" height="15" fill="rgb(232,223,3)" fg:x="1131" fg:w="1"/><text x="91.0205%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.7705%" y="229" width="0.0803%" height="15" fill="rgb(218,55,0)" fg:x="1131" fg:w="1"/><text x="91.0205%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7705%" y="213" width="0.0803%" height="15" fill="rgb(223,130,7)" fg:x="1131" fg:w="1"/><text x="91.0205%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7705%" y="197" width="0.0803%" height="15" fill="rgb(246,183,32)" fg:x="1131" fg:w="1"/><text x="91.0205%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="90.8507%" y="405" width="0.0803%" height="15" fill="rgb(233,194,27)" fg:x="1132" fg:w="1"/><text x="91.1007%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.8507%" y="389" width="0.0803%" height="15" fill="rgb(244,187,35)" fg:x="1132" fg:w="1"/><text x="91.1007%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.8507%" y="373" width="0.0803%" height="15" fill="rgb(238,33,29)" fg:x="1132" fg:w="1"/><text x="91.1007%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="90.8507%" y="357" width="0.0803%" height="15" fill="rgb(235,216,15)" fg:x="1132" fg:w="1"/><text x="91.1007%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.8507%" y="341" width="0.0803%" height="15" fill="rgb(211,167,33)" fg:x="1132" fg:w="1"/><text x="91.1007%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.8507%" y="325" width="0.0803%" height="15" fill="rgb(235,74,3)" fg:x="1132" fg:w="1"/><text x="91.1007%" y="335.50"></text></g><g><title>plugins_core::tools::contained_by (10 samples, 0.80%)</title><rect x="90.2087%" y="453" width="0.8026%" height="15" fill="rgb(241,103,0)" fg:x="1124" fg:w="10"/><text x="90.4587%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="90.4494%" y="437" width="0.5618%" height="15" fill="rgb(223,138,54)" fg:x="1127" fg:w="7"/><text x="90.6994%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="90.5297%" y="421" width="0.4815%" height="15" fill="rgb(228,24,36)" fg:x="1128" fg:w="6"/><text x="90.7797%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.9310%" y="405" width="0.0803%" height="15" fill="rgb(215,14,8)" fg:x="1133" fg:w="1"/><text x="91.1810%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9310%" y="389" width="0.0803%" height="15" fill="rgb(231,9,2)" fg:x="1133" fg:w="1"/><text x="91.1810%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="90.9310%" y="373" width="0.0803%" height="15" fill="rgb(215,150,51)" fg:x="1133" fg:w="1"/><text x="91.1810%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="90.9310%" y="357" width="0.0803%" height="15" fill="rgb(254,124,6)" fg:x="1133" fg:w="1"/><text x="91.1810%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="90.9310%" y="341" width="0.0803%" height="15" fill="rgb(216,111,25)" fg:x="1133" fg:w="1"/><text x="91.1810%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.9310%" y="325" width="0.0803%" height="15" fill="rgb(237,87,46)" fg:x="1133" fg:w="1"/><text x="91.1810%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.9310%" y="309" width="0.0803%" height="15" fill="rgb(216,183,42)" fg:x="1133" fg:w="1"/><text x="91.1810%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="91.0112%" y="341" width="0.1605%" height="15" fill="rgb(214,175,46)" fg:x="1134" fg:w="2"/><text x="91.2612%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="91.0112%" y="325" width="0.1605%" height="15" fill="rgb(247,223,23)" fg:x="1134" fg:w="2"/><text x="91.2612%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.0112%" y="309" width="0.1605%" height="15" fill="rgb(240,132,12)" fg:x="1134" fg:w="2"/><text x="91.2612%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.0112%" y="293" width="0.1605%" height="15" fill="rgb(245,123,48)" fg:x="1134" fg:w="2"/><text x="91.2612%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="91.0112%" y="277" width="0.1605%" height="15" fill="rgb(245,156,12)" fg:x="1134" fg:w="2"/><text x="91.2612%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.0112%" y="261" width="0.1605%" height="15" fill="rgb(212,48,35)" fg:x="1134" fg:w="2"/><text x="91.2612%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.0112%" y="245" width="0.1605%" height="15" fill="rgb(213,21,25)" fg:x="1134" fg:w="2"/><text x="91.2612%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.0112%" y="229" width="0.1605%" height="15" fill="rgb(215,17,16)" fg:x="1134" fg:w="2"/><text x="91.2612%" y="239.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="91.0112%" y="437" width="0.2408%" height="15" fill="rgb(235,160,36)" fg:x="1134" fg:w="3"/><text x="91.2612%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="91.0112%" y="421" width="0.2408%" height="15" fill="rgb(248,141,20)" fg:x="1134" fg:w="3"/><text x="91.2612%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="91.0112%" y="405" width="0.2408%" height="15" fill="rgb(253,123,32)" fg:x="1134" fg:w="3"/><text x="91.2612%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="91.0112%" y="389" width="0.2408%" height="15" fill="rgb(214,72,40)" fg:x="1134" fg:w="3"/><text x="91.2612%" y="399.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (3 samples, 0.24%)</title><rect x="91.0112%" y="373" width="0.2408%" height="15" fill="rgb(234,122,41)" fg:x="1134" fg:w="3"/><text x="91.2612%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="91.0112%" y="357" width="0.2408%" height="15" fill="rgb(236,55,21)" fg:x="1134" fg:w="3"/><text x="91.2612%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="91.1717%" y="341" width="0.0803%" height="15" fill="rgb(222,162,54)" fg:x="1136" fg:w="1"/><text x="91.4217%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.1717%" y="325" width="0.0803%" height="15" fill="rgb(219,74,8)" fg:x="1136" fg:w="1"/><text x="91.4217%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1717%" y="309" width="0.0803%" height="15" fill="rgb(222,106,42)" fg:x="1136" fg:w="1"/><text x="91.4217%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1717%" y="293" width="0.0803%" height="15" fill="rgb(223,40,43)" fg:x="1136" fg:w="1"/><text x="91.4217%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.1717%" y="277" width="0.0803%" height="15" fill="rgb(229,216,28)" fg:x="1136" fg:w="1"/><text x="91.4217%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="91.3323%" y="309" width="0.1605%" height="15" fill="rgb(222,17,5)" fg:x="1138" fg:w="2"/><text x="91.5823%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="91.3323%" y="293" width="0.1605%" height="15" fill="rgb(212,51,2)" fg:x="1138" fg:w="2"/><text x="91.5823%" y="303.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="91.3323%" y="405" width="0.2408%" height="15" fill="rgb(243,213,35)" fg:x="1138" fg:w="3"/><text x="91.5823%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="91.3323%" y="389" width="0.2408%" height="15" fill="rgb(218,68,26)" fg:x="1138" fg:w="3"/><text x="91.5823%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="91.3323%" y="373" width="0.2408%" height="15" fill="rgb(214,135,33)" fg:x="1138" fg:w="3"/><text x="91.5823%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="91.3323%" y="357" width="0.2408%" height="15" fill="rgb(248,7,20)" fg:x="1138" fg:w="3"/><text x="91.5823%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (3 samples, 0.24%)</title><rect x="91.3323%" y="341" width="0.2408%" height="15" fill="rgb(209,147,4)" fg:x="1138" fg:w="3"/><text x="91.5823%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="91.3323%" y="325" width="0.2408%" height="15" fill="rgb(251,48,10)" fg:x="1138" fg:w="3"/><text x="91.5823%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="91.4928%" y="309" width="0.0803%" height="15" fill="rgb(226,62,22)" fg:x="1140" fg:w="1"/><text x="91.7428%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.4928%" y="293" width="0.0803%" height="15" fill="rgb(218,5,25)" fg:x="1140" fg:w="1"/><text x="91.7428%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.4928%" y="277" width="0.0803%" height="15" fill="rgb(240,229,8)" fg:x="1140" fg:w="1"/><text x="91.7428%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="91.4928%" y="261" width="0.0803%" height="15" fill="rgb(219,123,53)" fg:x="1140" fg:w="1"/><text x="91.7428%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.4928%" y="245" width="0.0803%" height="15" fill="rgb(239,77,49)" fg:x="1140" fg:w="1"/><text x="91.7428%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.4928%" y="229" width="0.0803%" height="15" fill="rgb(247,22,15)" fg:x="1140" fg:w="1"/><text x="91.7428%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.4928%" y="213" width="0.0803%" height="15" fill="rgb(210,55,17)" fg:x="1140" fg:w="1"/><text x="91.7428%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.5730%" y="405" width="0.0803%" height="15" fill="rgb(228,130,51)" fg:x="1141" fg:w="1"/><text x="91.8230%" y="415.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (21 samples, 1.69%)</title><rect x="90.0482%" y="469" width="1.6854%" height="15" fill="rgb(206,81,33)" fg:x="1122" fg:w="21"/><text x="90.2982%" y="479.50"></text></g><g><title>plugins_core::tools::occupied_by (9 samples, 0.72%)</title><rect x="91.0112%" y="453" width="0.7223%" height="15" fill="rgb(241,104,30)" fg:x="1134" fg:w="9"/><text x="91.2612%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="91.2520%" y="437" width="0.4815%" height="15" fill="rgb(240,88,12)" fg:x="1137" fg:w="6"/><text x="91.5020%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="91.2520%" y="421" width="0.4815%" height="15" fill="rgb(249,116,19)" fg:x="1137" fg:w="6"/><text x="91.5020%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.6533%" y="405" width="0.0803%" height="15" fill="rgb(250,218,1)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.6533%" y="389" width="0.0803%" height="15" fill="rgb(233,220,16)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="399.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.6533%" y="373" width="0.0803%" height="15" fill="rgb(248,195,9)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.6533%" y="357" width="0.0803%" height="15" fill="rgb(230,58,11)" fg:x="1142" fg:w="1"/><text x="91.9033%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (24 samples, 1.93%)</title><rect x="89.9679%" y="501" width="1.9262%" height="15" fill="rgb(217,125,51)" fg:x="1121" fg:w="24"/><text x="90.2179%" y="511.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_item (24 samples, 1.93%)</title><rect x="89.9679%" y="485" width="1.9262%" height="15" fill="rgb(252,119,13)" fg:x="1121" fg:w="24"/><text x="90.2179%" y="495.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="91.7335%" y="469" width="0.1605%" height="15" fill="rgb(245,23,2)" fg:x="1143" fg:w="2"/><text x="91.9835%" y="479.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="91.7335%" y="453" width="0.1605%" height="15" fill="rgb(216,98,41)" fg:x="1143" fg:w="2"/><text x="91.9835%" y="463.50"></text></g><g><title>plugins_core::finding::matches_string (2 samples, 0.16%)</title><rect x="91.7335%" y="437" width="0.1605%" height="15" fill="rgb(228,181,52)" fg:x="1143" fg:w="2"/><text x="91.9835%" y="447.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (2 samples, 0.16%)</title><rect x="91.7335%" y="421" width="0.1605%" height="15" fill="rgb(238,203,39)" fg:x="1143" fg:w="2"/><text x="91.9835%" y="431.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.16%)</title><rect x="91.7335%" y="405" width="0.1605%" height="15" fill="rgb(214,56,7)" fg:x="1143" fg:w="2"/><text x="91.9835%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.8941%" y="501" width="0.0803%" height="15" fill="rgb(229,167,38)" fg:x="1145" fg:w="1"/><text x="92.1441%" y="511.50"></text></g><g><title>plugins_core::library::actions::reply_ok (2 samples, 0.16%)</title><rect x="91.9743%" y="501" width="0.1605%" height="15" fill="rgb(242,135,4)" fg:x="1146" fg:w="2"/><text x="92.2243%" y="511.50"></text></g><g><title>&lt;replies::CarryingEvent as replies::ToTaggedJson&gt;::to_tagged_json (2 samples, 0.16%)</title><rect x="91.9743%" y="485" width="0.1605%" height="15" fill="rgb(211,228,4)" fg:x="1146" fg:w="2"/><text x="92.2243%" y="495.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::CarryingEvent&gt;::serialize (2 samples, 0.16%)</title><rect x="91.9743%" y="469" width="0.1605%" height="15" fill="rgb(206,139,51)" fg:x="1146" fg:w="2"/><text x="92.2243%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeStructVariant as serde::ser::SerializeStructVariant&gt;::serialize_field (2 samples, 0.16%)</title><rect x="91.9743%" y="453" width="0.1605%" height="15" fill="rgb(236,70,25)" fg:x="1146" fg:w="2"/><text x="92.2243%" y="463.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (2 samples, 0.16%)</title><rect x="91.9743%" y="437" width="0.1605%" height="15" fill="rgb(224,211,44)" fg:x="1146" fg:w="2"/><text x="92.2243%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="91.9743%" y="421" width="0.1605%" height="15" fill="rgb(226,160,45)" fg:x="1146" fg:w="2"/><text x="92.2243%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.0546%" y="405" width="0.0803%" height="15" fill="rgb(235,150,10)" fg:x="1147" fg:w="1"/><text x="92.3046%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="92.1348%" y="485" width="0.1605%" height="15" fill="rgb(253,222,52)" fg:x="1148" fg:w="2"/><text x="92.3848%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="92.1348%" y="469" width="0.1605%" height="15" fill="rgb(248,159,14)" fg:x="1148" fg:w="2"/><text x="92.3848%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="92.2151%" y="453" width="0.0803%" height="15" fill="rgb(252,161,4)" fg:x="1149" fg:w="1"/><text x="92.4651%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.2151%" y="437" width="0.0803%" height="15" fill="rgb(227,107,7)" fg:x="1149" fg:w="1"/><text x="92.4651%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.2151%" y="421" width="0.0803%" height="15" fill="rgb(248,227,35)" fg:x="1149" fg:w="1"/><text x="92.4651%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.2151%" y="405" width="0.0803%" height="15" fill="rgb(240,68,14)" fg:x="1149" fg:w="1"/><text x="92.4651%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.2151%" y="389" width="0.0803%" height="15" fill="rgb(243,5,47)" fg:x="1149" fg:w="1"/><text x="92.4651%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.2151%" y="373" width="0.0803%" height="15" fill="rgb(225,134,14)" fg:x="1149" fg:w="1"/><text x="92.4651%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.2151%" y="357" width="0.0803%" height="15" fill="rgb(225,207,41)" fg:x="1149" fg:w="1"/><text x="92.4651%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.2151%" y="341" width="0.0803%" height="15" fill="rgb(207,214,21)" fg:x="1149" fg:w="1"/><text x="92.4651%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.2151%" y="325" width="0.0803%" height="15" fill="rgb(230,100,48)" fg:x="1149" fg:w="1"/><text x="92.4651%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2953%" y="453" width="0.0803%" height="15" fill="rgb(231,155,51)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.2953%" y="437" width="0.0803%" height="15" fill="rgb(252,98,23)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2953%" y="421" width="0.0803%" height="15" fill="rgb(216,151,14)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.2953%" y="405" width="0.0803%" height="15" fill="rgb(250,20,49)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2953%" y="389" width="0.0803%" height="15" fill="rgb(217,134,33)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2953%" y="373" width="0.0803%" height="15" fill="rgb(205,94,24)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.2953%" y="357" width="0.0803%" height="15" fill="rgb(244,96,26)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.2953%" y="341" width="0.0803%" height="15" fill="rgb(218,48,4)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.2953%" y="325" width="0.0803%" height="15" fill="rgb(210,74,37)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.2953%" y="309" width="0.0803%" height="15" fill="rgb(240,170,7)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.2953%" y="293" width="0.0803%" height="15" fill="rgb(251,120,48)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.2953%" y="277" width="0.0803%" height="15" fill="rgb(219,149,25)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.2953%" y="261" width="0.0803%" height="15" fill="rgb(223,222,45)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.2953%" y="245" width="0.0803%" height="15" fill="rgb(216,18,1)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.2953%" y="229" width="0.0803%" height="15" fill="rgb(251,184,12)" fg:x="1150" fg:w="1"/><text x="92.5453%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.4559%" y="325" width="0.0803%" height="15" fill="rgb(222,116,37)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.4559%" y="309" width="0.0803%" height="15" fill="rgb(236,223,24)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.4559%" y="293" width="0.0803%" height="15" fill="rgb(229,38,32)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4559%" y="277" width="0.0803%" height="15" fill="rgb(251,208,7)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4559%" y="261" width="0.0803%" height="15" fill="rgb(207,226,43)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.4559%" y="245" width="0.0803%" height="15" fill="rgb(247,229,43)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.4559%" y="229" width="0.0803%" height="15" fill="rgb(217,201,52)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.4559%" y="213" width="0.0803%" height="15" fill="rgb(228,68,39)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.4559%" y="197" width="0.0803%" height="15" fill="rgb(218,138,7)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.4559%" y="181" width="0.0803%" height="15" fill="rgb(230,78,37)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.4559%" y="165" width="0.0803%" height="15" fill="rgb(246,177,36)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.4559%" y="149" width="0.0803%" height="15" fill="rgb(231,190,6)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.4559%" y="133" width="0.0803%" height="15" fill="rgb(234,217,25)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.4559%" y="117" width="0.0803%" height="15" fill="rgb(249,131,38)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.4559%" y="101" width="0.0803%" height="15" fill="rgb(253,168,16)" fg:x="1152" fg:w="1"/><text x="92.7059%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="92.4559%" y="357" width="0.1605%" height="15" fill="rgb(232,181,39)" fg:x="1152" fg:w="2"/><text x="92.7059%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="92.4559%" y="341" width="0.1605%" height="15" fill="rgb(216,167,0)" fg:x="1152" fg:w="2"/><text x="92.7059%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.5361%" y="325" width="0.0803%" height="15" fill="rgb(247,77,10)" fg:x="1153" fg:w="1"/><text x="92.7861%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="92.5361%" y="309" width="0.0803%" height="15" fill="rgb(220,28,10)" fg:x="1153" fg:w="1"/><text x="92.7861%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.5361%" y="293" width="0.0803%" height="15" fill="rgb(251,163,49)" fg:x="1153" fg:w="1"/><text x="92.7861%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.5361%" y="277" width="0.0803%" height="15" fill="rgb(249,148,50)" fg:x="1153" fg:w="1"/><text x="92.7861%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.5361%" y="261" width="0.0803%" height="15" fill="rgb(238,149,36)" fg:x="1153" fg:w="1"/><text x="92.7861%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.5361%" y="245" width="0.0803%" height="15" fill="rgb(248,191,13)" fg:x="1153" fg:w="1"/><text x="92.7861%" y="255.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="92.6164%" y="341" width="0.0803%" height="15" fill="rgb(233,73,17)" fg:x="1154" fg:w="1"/><text x="92.8664%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.6966%" y="325" width="0.0803%" height="15" fill="rgb(233,197,11)" fg:x="1155" fg:w="1"/><text x="92.9466%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (6 samples, 0.48%)</title><rect x="92.3756%" y="453" width="0.4815%" height="15" fill="rgb(245,42,8)" fg:x="1151" fg:w="6"/><text x="92.6256%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="92.3756%" y="437" width="0.4815%" height="15" fill="rgb(217,39,50)" fg:x="1151" fg:w="6"/><text x="92.6256%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="92.3756%" y="421" width="0.4815%" height="15" fill="rgb(250,23,13)" fg:x="1151" fg:w="6"/><text x="92.6256%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.40%)</title><rect x="92.4559%" y="405" width="0.4013%" height="15" fill="rgb(219,204,45)" fg:x="1152" fg:w="5"/><text x="92.7059%" y="415.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (5 samples, 0.40%)</title><rect x="92.4559%" y="389" width="0.4013%" height="15" fill="rgb(248,54,16)" fg:x="1152" fg:w="5"/><text x="92.7059%" y="399.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="92.4559%" y="373" width="0.4013%" height="15" fill="rgb(213,16,14)" fg:x="1152" fg:w="5"/><text x="92.7059%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="92.6164%" y="357" width="0.2408%" height="15" fill="rgb(245,18,44)" fg:x="1154" fg:w="3"/><text x="92.8664%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="92.6966%" y="341" width="0.1605%" height="15" fill="rgb(232,10,47)" fg:x="1155" fg:w="2"/><text x="92.9466%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.7769%" y="325" width="0.0803%" height="15" fill="rgb(237,185,33)" fg:x="1156" fg:w="1"/><text x="93.0269%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.7769%" y="309" width="0.0803%" height="15" fill="rgb(224,223,44)" fg:x="1156" fg:w="1"/><text x="93.0269%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.7769%" y="293" width="0.0803%" height="15" fill="rgb(238,98,11)" fg:x="1156" fg:w="1"/><text x="93.0269%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.7769%" y="277" width="0.0803%" height="15" fill="rgb(217,33,34)" fg:x="1156" fg:w="1"/><text x="93.0269%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.7769%" y="261" width="0.0803%" height="15" fill="rgb(232,193,38)" fg:x="1156" fg:w="1"/><text x="93.0269%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.7769%" y="245" width="0.0803%" height="15" fill="rgb(231,23,4)" fg:x="1156" fg:w="1"/><text x="93.0269%" y="255.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (8 samples, 0.64%)</title><rect x="92.2953%" y="485" width="0.6421%" height="15" fill="rgb(218,154,4)" fg:x="1150" fg:w="8"/><text x="92.5453%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="92.2953%" y="469" width="0.6421%" height="15" fill="rgb(243,171,32)" fg:x="1150" fg:w="8"/><text x="92.5453%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.8571%" y="453" width="0.0803%" height="15" fill="rgb(210,102,6)" fg:x="1157" fg:w="1"/><text x="93.1071%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8571%" y="437" width="0.0803%" height="15" fill="rgb(205,134,8)" fg:x="1157" fg:w="1"/><text x="93.1071%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="92.8571%" y="421" width="0.0803%" height="15" fill="rgb(240,115,17)" fg:x="1157" fg:w="1"/><text x="93.1071%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="92.8571%" y="405" width="0.0803%" height="15" fill="rgb(213,62,14)" fg:x="1157" fg:w="1"/><text x="93.1071%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="92.8571%" y="389" width="0.0803%" height="15" fill="rgb(249,149,16)" fg:x="1157" fg:w="1"/><text x="93.1071%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.9374%" y="453" width="0.1605%" height="15" fill="rgb(220,195,22)" fg:x="1158" fg:w="2"/><text x="93.1874%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.9374%" y="437" width="0.1605%" height="15" fill="rgb(211,106,49)" fg:x="1158" fg:w="2"/><text x="93.1874%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.9374%" y="421" width="0.1605%" height="15" fill="rgb(214,176,52)" fg:x="1158" fg:w="2"/><text x="93.1874%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.0177%" y="405" width="0.0803%" height="15" fill="rgb(212,121,30)" fg:x="1159" fg:w="1"/><text x="93.2677%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.0979%" y="453" width="0.0803%" height="15" fill="rgb(231,167,39)" fg:x="1160" fg:w="1"/><text x="93.3479%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="93.0979%" y="437" width="0.0803%" height="15" fill="rgb(233,93,22)" fg:x="1160" fg:w="1"/><text x="93.3479%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="93.1782%" y="453" width="0.1605%" height="15" fill="rgb(242,187,26)" fg:x="1161" fg:w="2"/><text x="93.4282%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="93.1782%" y="437" width="0.1605%" height="15" fill="rgb(209,152,0)" fg:x="1161" fg:w="2"/><text x="93.4282%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.2584%" y="421" width="0.0803%" height="15" fill="rgb(208,174,22)" fg:x="1162" fg:w="1"/><text x="93.5084%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="93.2584%" y="405" width="0.0803%" height="15" fill="rgb(216,172,41)" fg:x="1162" fg:w="1"/><text x="93.5084%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="93.2584%" y="389" width="0.0803%" height="15" fill="rgb(238,206,48)" fg:x="1162" fg:w="1"/><text x="93.5084%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.2584%" y="373" width="0.0803%" height="15" fill="rgb(229,70,36)" fg:x="1162" fg:w="1"/><text x="93.5084%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.2584%" y="357" width="0.0803%" height="15" fill="rgb(230,152,25)" fg:x="1162" fg:w="1"/><text x="93.5084%" y="367.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (7 samples, 0.56%)</title><rect x="92.9374%" y="485" width="0.5618%" height="15" fill="rgb(243,173,54)" fg:x="1158" fg:w="7"/><text x="93.1874%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="92.9374%" y="469" width="0.5618%" height="15" fill="rgb(252,104,23)" fg:x="1158" fg:w="7"/><text x="93.1874%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="93.3387%" y="453" width="0.1605%" height="15" fill="rgb(224,24,50)" fg:x="1163" fg:w="2"/><text x="93.5887%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.4189%" y="437" width="0.0803%" height="15" fill="rgb(212,13,43)" fg:x="1164" fg:w="1"/><text x="93.6689%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="93.4189%" y="421" width="0.0803%" height="15" fill="rgb(243,34,26)" fg:x="1164" fg:w="1"/><text x="93.6689%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="93.4189%" y="405" width="0.0803%" height="15" fill="rgb(239,209,5)" fg:x="1164" fg:w="1"/><text x="93.6689%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.4189%" y="389" width="0.0803%" height="15" fill="rgb(239,212,43)" fg:x="1164" fg:w="1"/><text x="93.6689%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.4189%" y="373" width="0.0803%" height="15" fill="rgb(228,72,25)" fg:x="1164" fg:w="1"/><text x="93.6689%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.4189%" y="357" width="0.0803%" height="15" fill="rgb(205,82,49)" fg:x="1164" fg:w="1"/><text x="93.6689%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="93.4189%" y="341" width="0.0803%" height="15" fill="rgb(221,205,24)" fg:x="1164" fg:w="1"/><text x="93.6689%" y="351.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="93.4992%" y="485" width="0.0803%" height="15" fill="rgb(206,213,29)" fg:x="1165" fg:w="1"/><text x="93.7492%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="93.4992%" y="469" width="0.0803%" height="15" fill="rgb(228,180,8)" fg:x="1165" fg:w="1"/><text x="93.7492%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="93.4992%" y="453" width="0.0803%" height="15" fill="rgb(217,131,9)" fg:x="1165" fg:w="1"/><text x="93.7492%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="93.4992%" y="437" width="0.0803%" height="15" fill="rgb(207,188,14)" fg:x="1165" fg:w="1"/><text x="93.7492%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.4992%" y="421" width="0.0803%" height="15" fill="rgb(254,82,24)" fg:x="1165" fg:w="1"/><text x="93.7492%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.4992%" y="405" width="0.0803%" height="15" fill="rgb(209,29,48)" fg:x="1165" fg:w="1"/><text x="93.7492%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.4992%" y="389" width="0.0803%" height="15" fill="rgb(248,24,3)" fg:x="1165" fg:w="1"/><text x="93.7492%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="93.5795%" y="485" width="0.0803%" height="15" fill="rgb(209,134,11)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="93.5795%" y="469" width="0.0803%" height="15" fill="rgb(253,54,47)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="93.5795%" y="453" width="0.0803%" height="15" fill="rgb(214,163,42)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.5795%" y="437" width="0.0803%" height="15" fill="rgb(206,25,12)" fg:x="1166" fg:w="1"/><text x="93.8295%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7400%" y="437" width="0.0803%" height="15" fill="rgb(240,49,44)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.7400%" y="421" width="0.0803%" height="15" fill="rgb(245,4,38)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.7400%" y="405" width="0.0803%" height="15" fill="rgb(215,72,38)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7400%" y="389" width="0.0803%" height="15" fill="rgb(215,123,24)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7400%" y="373" width="0.0803%" height="15" fill="rgb(242,140,44)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.7400%" y="357" width="0.0803%" height="15" fill="rgb(243,36,26)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.7400%" y="341" width="0.0803%" height="15" fill="rgb(207,91,21)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.7400%" y="325" width="0.0803%" height="15" fill="rgb(253,111,50)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.7400%" y="309" width="0.0803%" height="15" fill="rgb(228,163,27)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.7400%" y="293" width="0.0803%" height="15" fill="rgb(205,182,13)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.7400%" y="277" width="0.0803%" height="15" fill="rgb(247,194,0)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.7400%" y="261" width="0.0803%" height="15" fill="rgb(241,58,47)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.7400%" y="245" width="0.0803%" height="15" fill="rgb(219,25,53)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.7400%" y="229" width="0.0803%" height="15" fill="rgb(210,11,24)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7400%" y="213" width="0.0803%" height="15" fill="rgb(247,114,30)" fg:x="1168" fg:w="1"/><text x="93.9900%" y="223.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="93.8202%" y="357" width="0.0803%" height="15" fill="rgb(213,74,28)" fg:x="1169" fg:w="1"/><text x="94.0702%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="93.8202%" y="373" width="0.1605%" height="15" fill="rgb(208,210,48)" fg:x="1169" fg:w="2"/><text x="94.0702%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.9005%" y="357" width="0.0803%" height="15" fill="rgb(218,46,19)" fg:x="1170" fg:w="1"/><text x="94.1505%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9005%" y="341" width="0.0803%" height="15" fill="rgb(242,194,21)" fg:x="1170" fg:w="1"/><text x="94.1505%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9005%" y="325" width="0.0803%" height="15" fill="rgb(229,72,4)" fg:x="1170" fg:w="1"/><text x="94.1505%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.9005%" y="309" width="0.0803%" height="15" fill="rgb(231,58,6)" fg:x="1170" fg:w="1"/><text x="94.1505%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9005%" y="293" width="0.0803%" height="15" fill="rgb(252,78,15)" fg:x="1170" fg:w="1"/><text x="94.1505%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.9005%" y="277" width="0.0803%" height="15" fill="rgb(246,64,50)" fg:x="1170" fg:w="1"/><text x="94.1505%" y="287.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (3 samples, 0.24%)</title><rect x="93.8202%" y="437" width="0.2408%" height="15" fill="rgb(217,41,24)" fg:x="1169" fg:w="3"/><text x="94.0702%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="93.8202%" y="421" width="0.2408%" height="15" fill="rgb(246,48,46)" fg:x="1169" fg:w="3"/><text x="94.0702%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (3 samples, 0.24%)</title><rect x="93.8202%" y="405" width="0.2408%" height="15" fill="rgb(210,188,31)" fg:x="1169" fg:w="3"/><text x="94.0702%" y="415.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="93.8202%" y="389" width="0.2408%" height="15" fill="rgb(211,152,13)" fg:x="1169" fg:w="3"/><text x="94.0702%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="93.9807%" y="373" width="0.0803%" height="15" fill="rgb(225,3,9)" fg:x="1171" fg:w="1"/><text x="94.2307%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.9807%" y="357" width="0.0803%" height="15" fill="rgb(209,228,2)" fg:x="1171" fg:w="1"/><text x="94.2307%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9807%" y="341" width="0.0803%" height="15" fill="rgb(238,228,1)" fg:x="1171" fg:w="1"/><text x="94.2307%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9807%" y="325" width="0.0803%" height="15" fill="rgb(211,198,35)" fg:x="1171" fg:w="1"/><text x="94.2307%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.9807%" y="309" width="0.0803%" height="15" fill="rgb(248,76,52)" fg:x="1171" fg:w="1"/><text x="94.2307%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9807%" y="293" width="0.0803%" height="15" fill="rgb(227,204,49)" fg:x="1171" fg:w="1"/><text x="94.2307%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9807%" y="277" width="0.0803%" height="15" fill="rgb(254,148,46)" fg:x="1171" fg:w="1"/><text x="94.2307%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9807%" y="261" width="0.0803%" height="15" fill="rgb(252,97,43)" fg:x="1171" fg:w="1"/><text x="94.2307%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (162 samples, 13.00%)</title><rect x="81.1396%" y="693" width="13.0016%" height="15" fill="rgb(212,80,12)" fg:x="1011" fg:w="162"/><text x="81.3896%" y="703.50">&lt;engine::session::Se..</text></g><g><title>kernel::plugins::mw::apply_middleware (162 samples, 13.00%)</title><rect x="81.1396%" y="677" width="13.0016%" height="15" fill="rgb(254,99,49)" fg:x="1011" fg:w="162"/><text x="81.3896%" y="687.50">kernel::plugins::mw:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (161 samples, 12.92%)</title><rect x="81.2199%" y="661" width="12.9213%" height="15" fill="rgb(206,194,15)" fg:x="1012" fg:w="161"/><text x="81.4699%" y="671.50">kernel::plugins::mw..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (161 samples, 12.92%)</title><rect x="81.2199%" y="645" width="12.9213%" height="15" fill="rgb(226,19,53)" fg:x="1012" fg:w="161"/><text x="81.4699%" y="655.50">&lt;engine::session::E..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (147 samples, 11.80%)</title><rect x="82.3435%" y="629" width="11.7978%" height="15" fill="rgb(246,39,21)" fg:x="1026" fg:w="147"/><text x="82.5935%" y="639.50">kernel::plugins::..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (147 samples, 11.80%)</title><rect x="82.3435%" y="613" width="11.7978%" height="15" fill="rgb(208,4,51)" fg:x="1026" fg:w="147"/><text x="82.5935%" y="623.50">&lt;plugins_dynlib::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (147 samples, 11.80%)</title><rect x="82.3435%" y="597" width="11.7978%" height="15" fill="rgb(205,70,9)" fg:x="1026" fg:w="147"/><text x="82.5935%" y="607.50">kernel::plugins::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (147 samples, 11.80%)</title><rect x="82.3435%" y="581" width="11.7978%" height="15" fill="rgb(238,107,40)" fg:x="1026" fg:w="147"/><text x="82.5935%" y="591.50">core::ops::functi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (147 samples, 11.80%)</title><rect x="82.3435%" y="565" width="11.7978%" height="15" fill="rgb(251,94,20)" fg:x="1026" fg:w="147"/><text x="82.5935%" y="575.50">kernel::plugins::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (147 samples, 11.80%)</title><rect x="82.3435%" y="549" width="11.7978%" height="15" fill="rgb(238,124,23)" fg:x="1026" fg:w="147"/><text x="82.5935%" y="559.50">core::ops::functi..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (147 samples, 11.80%)</title><rect x="82.3435%" y="533" width="11.7978%" height="15" fill="rgb(236,18,23)" fg:x="1026" fg:w="147"/><text x="82.5935%" y="543.50">&lt;engine::session:..</text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (60 samples, 4.82%)</title><rect x="89.3258%" y="517" width="4.8154%" height="15" fill="rgb(236,56,32)" fg:x="1113" fg:w="60"/><text x="89.5758%" y="527.50">&lt;plugi..</text></g><g><title>plugins_core::location::change_location (25 samples, 2.01%)</title><rect x="92.1348%" y="501" width="2.0064%" height="15" fill="rgb(244,115,51)" fg:x="1148" fg:w="25"/><text x="92.3848%" y="511.50">p..</text></g><g><title>plugins_core::location::Location::set (6 samples, 0.48%)</title><rect x="93.6597%" y="485" width="0.4815%" height="15" fill="rgb(228,170,36)" fg:x="1167" fg:w="6"/><text x="93.9097%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (6 samples, 0.48%)</title><rect x="93.6597%" y="469" width="0.4815%" height="15" fill="rgb(205,135,5)" fg:x="1167" fg:w="6"/><text x="93.9097%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="93.6597%" y="453" width="0.4815%" height="15" fill="rgb(244,153,21)" fg:x="1167" fg:w="6"/><text x="93.9097%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.0610%" y="437" width="0.0803%" height="15" fill="rgb(241,51,45)" fg:x="1172" fg:w="1"/><text x="94.3110%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0610%" y="421" width="0.0803%" height="15" fill="rgb(235,30,2)" fg:x="1172" fg:w="1"/><text x="94.3110%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="94.1413%" y="661" width="0.1605%" height="15" fill="rgb(230,138,17)" fg:x="1173" fg:w="2"/><text x="94.3913%" y="671.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="94.1413%" y="645" width="0.1605%" height="15" fill="rgb(225,227,46)" fg:x="1173" fg:w="2"/><text x="94.3913%" y="655.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (2 samples, 0.16%)</title><rect x="94.1413%" y="629" width="0.1605%" height="15" fill="rgb(242,120,29)" fg:x="1173" fg:w="2"/><text x="94.3913%" y="639.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="94.1413%" y="613" width="0.1605%" height="15" fill="rgb(214,204,1)" fg:x="1173" fg:w="2"/><text x="94.3913%" y="623.50"></text></g><g><title>plugins_core::library::parser::word (2 samples, 0.16%)</title><rect x="94.1413%" y="597" width="0.1605%" height="15" fill="rgb(239,202,12)" fg:x="1173" fg:w="2"/><text x="94.3913%" y="607.50"></text></g><g><title>core::slice::memchr::memchr_aligned (2 samples, 0.16%)</title><rect x="94.1413%" y="581" width="0.1605%" height="15" fill="rgb(221,101,34)" fg:x="1173" fg:w="2"/><text x="94.3913%" y="591.50"></text></g><g><title>core::slice::memchr::memchr_naive (2 samples, 0.16%)</title><rect x="94.1413%" y="565" width="0.1605%" height="15" fill="rgb(215,109,50)" fg:x="1173" fg:w="2"/><text x="94.3913%" y="575.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="94.1413%" y="693" width="0.2408%" height="15" fill="rgb(229,199,13)" fg:x="1173" fg:w="3"/><text x="94.3913%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="94.1413%" y="677" width="0.2408%" height="15" fill="rgb(253,82,26)" fg:x="1173" fg:w="3"/><text x="94.3913%" y="687.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="94.3018%" y="661" width="0.0803%" height="15" fill="rgb(205,57,20)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="671.50"></text></g><g><title>&lt;plugins_core::moving::parser::GoActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="94.3018%" y="645" width="0.0803%" height="15" fill="rgb(207,57,32)" fg:x="1175" fg:w="1"/><text x="94.5518%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4623%" y="597" width="0.0803%" height="15" fill="rgb(235,173,42)" fg:x="1177" fg:w="1"/><text x="94.7123%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4623%" y="581" width="0.0803%" height="15" fill="rgb(230,147,10)" fg:x="1177" fg:w="1"/><text x="94.7123%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4623%" y="565" width="0.0803%" height="15" fill="rgb(220,135,16)" fg:x="1177" fg:w="1"/><text x="94.7123%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4623%" y="549" width="0.0803%" height="15" fill="rgb(239,28,10)" fg:x="1177" fg:w="1"/><text x="94.7123%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.4623%" y="629" width="0.1605%" height="15" fill="rgb(220,197,38)" fg:x="1177" fg:w="2"/><text x="94.7123%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.4623%" y="613" width="0.1605%" height="15" fill="rgb(217,13,1)" fg:x="1177" fg:w="2"/><text x="94.7123%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5425%" y="597" width="0.0803%" height="15" fill="rgb(225,34,30)" fg:x="1178" fg:w="1"/><text x="94.7925%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.6228%" y="597" width="0.1605%" height="15" fill="rgb(234,19,10)" fg:x="1179" fg:w="2"/><text x="94.8728%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.6228%" y="581" width="0.1605%" height="15" fill="rgb(237,68,47)" fg:x="1179" fg:w="2"/><text x="94.8728%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.6228%" y="565" width="0.1605%" height="15" fill="rgb(210,125,44)" fg:x="1179" fg:w="2"/><text x="94.8728%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="94.6228%" y="629" width="0.2408%" height="15" fill="rgb(206,207,2)" fg:x="1179" fg:w="3"/><text x="94.8728%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="94.6228%" y="613" width="0.2408%" height="15" fill="rgb(207,198,43)" fg:x="1179" fg:w="3"/><text x="94.8728%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7833%" y="597" width="0.0803%" height="15" fill="rgb(249,58,35)" fg:x="1181" fg:w="1"/><text x="95.0333%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7833%" y="581" width="0.0803%" height="15" fill="rgb(236,66,11)" fg:x="1181" fg:w="1"/><text x="95.0333%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.7833%" y="565" width="0.0803%" height="15" fill="rgb(215,104,28)" fg:x="1181" fg:w="1"/><text x="95.0333%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7833%" y="549" width="0.0803%" height="15" fill="rgb(221,172,14)" fg:x="1181" fg:w="1"/><text x="95.0333%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7833%" y="533" width="0.0803%" height="15" fill="rgb(251,215,21)" fg:x="1181" fg:w="1"/><text x="95.0333%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7833%" y="517" width="0.0803%" height="15" fill="rgb(215,154,36)" fg:x="1181" fg:w="1"/><text x="95.0333%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.9438%" y="581" width="0.0803%" height="15" fill="rgb(245,85,25)" fg:x="1183" fg:w="1"/><text x="95.1938%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.0241%" y="533" width="0.0803%" height="15" fill="rgb(254,37,10)" fg:x="1184" fg:w="1"/><text x="95.2741%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.0241%" y="517" width="0.0803%" height="15" fill="rgb(248,63,2)" fg:x="1184" fg:w="1"/><text x="95.2741%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.0241%" y="501" width="0.0803%" height="15" fill="rgb(222,195,50)" fg:x="1184" fg:w="1"/><text x="95.2741%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.0241%" y="485" width="0.0803%" height="15" fill="rgb(218,157,4)" fg:x="1184" fg:w="1"/><text x="95.2741%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.0241%" y="469" width="0.0803%" height="15" fill="rgb(217,186,23)" fg:x="1184" fg:w="1"/><text x="95.2741%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="95.0241%" y="581" width="0.1605%" height="15" fill="rgb(211,100,12)" fg:x="1184" fg:w="2"/><text x="95.2741%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.0241%" y="565" width="0.1605%" height="15" fill="rgb(252,7,25)" fg:x="1184" fg:w="2"/><text x="95.2741%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.0241%" y="549" width="0.1605%" height="15" fill="rgb(219,6,30)" fg:x="1184" fg:w="2"/><text x="95.2741%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="95.1043%" y="533" width="0.0803%" height="15" fill="rgb(228,68,4)" fg:x="1185" fg:w="1"/><text x="95.3543%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.1043%" y="517" width="0.0803%" height="15" fill="rgb(238,104,53)" fg:x="1185" fg:w="1"/><text x="95.3543%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="95.1043%" y="501" width="0.0803%" height="15" fill="rgb(209,110,10)" fg:x="1185" fg:w="1"/><text x="95.3543%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.1043%" y="485" width="0.0803%" height="15" fill="rgb(214,190,40)" fg:x="1185" fg:w="1"/><text x="95.3543%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="94.8636%" y="629" width="0.4013%" height="15" fill="rgb(222,103,43)" fg:x="1182" fg:w="5"/><text x="95.1136%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="94.8636%" y="613" width="0.4013%" height="15" fill="rgb(247,105,41)" fg:x="1182" fg:w="5"/><text x="95.1136%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="94.8636%" y="597" width="0.4013%" height="15" fill="rgb(249,173,41)" fg:x="1182" fg:w="5"/><text x="95.1136%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.1846%" y="581" width="0.0803%" height="15" fill="rgb(229,171,54)" fg:x="1186" fg:w="1"/><text x="95.4346%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.1846%" y="565" width="0.0803%" height="15" fill="rgb(223,229,10)" fg:x="1186" fg:w="1"/><text x="95.4346%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="95.1846%" y="549" width="0.0803%" height="15" fill="rgb(243,218,44)" fg:x="1186" fg:w="1"/><text x="95.4346%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="95.1846%" y="533" width="0.0803%" height="15" fill="rgb(215,188,5)" fg:x="1186" fg:w="1"/><text x="95.4346%" y="543.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.1846%" y="517" width="0.0803%" height="15" fill="rgb(239,133,39)" fg:x="1186" fg:w="1"/><text x="95.4346%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.2648%" y="565" width="0.0803%" height="15" fill="rgb(229,215,45)" fg:x="1187" fg:w="1"/><text x="95.5148%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.2648%" y="549" width="0.0803%" height="15" fill="rgb(237,222,4)" fg:x="1187" fg:w="1"/><text x="95.5148%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.2648%" y="533" width="0.0803%" height="15" fill="rgb(219,191,34)" fg:x="1187" fg:w="1"/><text x="95.5148%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.2648%" y="517" width="0.0803%" height="15" fill="rgb(236,20,29)" fg:x="1187" fg:w="1"/><text x="95.5148%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.2648%" y="501" width="0.0803%" height="15" fill="rgb(206,19,36)" fg:x="1187" fg:w="1"/><text x="95.5148%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.2648%" y="485" width="0.0803%" height="15" fill="rgb(234,192,51)" fg:x="1187" fg:w="1"/><text x="95.5148%" y="495.50"></text></g><g><title>engine::session::Session::load_entity (13 samples, 1.04%)</title><rect x="94.3820%" y="661" width="1.0433%" height="15" fill="rgb(243,23,26)" fg:x="1176" fg:w="13"/><text x="94.6320%" y="671.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.04%)</title><rect x="94.3820%" y="645" width="1.0433%" height="15" fill="rgb(253,92,16)" fg:x="1176" fg:w="13"/><text x="94.6320%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="95.2648%" y="629" width="0.1605%" height="15" fill="rgb(218,82,11)" fg:x="1187" fg:w="2"/><text x="95.5148%" y="639.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="95.2648%" y="613" width="0.1605%" height="15" fill="rgb(214,207,16)" fg:x="1187" fg:w="2"/><text x="95.5148%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="95.2648%" y="597" width="0.1605%" height="15" fill="rgb(207,202,38)" fg:x="1187" fg:w="2"/><text x="95.5148%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.2648%" y="581" width="0.1605%" height="15" fill="rgb(216,51,45)" fg:x="1187" fg:w="2"/><text x="95.5148%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.3451%" y="565" width="0.0803%" height="15" fill="rgb(233,185,52)" fg:x="1188" fg:w="1"/><text x="95.5951%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.3451%" y="549" width="0.0803%" height="15" fill="rgb(217,21,41)" fg:x="1188" fg:w="1"/><text x="95.5951%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4254%" y="629" width="0.0803%" height="15" fill="rgb(251,137,39)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4254%" y="613" width="0.0803%" height="15" fill="rgb(241,93,18)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4254%" y="597" width="0.0803%" height="15" fill="rgb(212,224,28)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4254%" y="581" width="0.0803%" height="15" fill="rgb(221,151,41)" fg:x="1189" fg:w="1"/><text x="95.6754%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5859%" y="581" width="0.0803%" height="15" fill="rgb(248,215,5)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5859%" y="565" width="0.0803%" height="15" fill="rgb(207,34,23)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5859%" y="549" width="0.0803%" height="15" fill="rgb(235,209,54)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5859%" y="533" width="0.0803%" height="15" fill="rgb(205,12,35)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5859%" y="517" width="0.0803%" height="15" fill="rgb(250,83,24)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.5859%" y="501" width="0.0803%" height="15" fill="rgb(241,127,6)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.5859%" y="485" width="0.0803%" height="15" fill="rgb(207,19,46)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.5859%" y="469" width="0.0803%" height="15" fill="rgb(233,9,54)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5859%" y="453" width="0.0803%" height="15" fill="rgb(209,229,48)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5859%" y="437" width="0.0803%" height="15" fill="rgb(231,110,47)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.5859%" y="421" width="0.0803%" height="15" fill="rgb(225,200,45)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.5859%" y="405" width="0.0803%" height="15" fill="rgb(208,153,32)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.5859%" y="389" width="0.0803%" height="15" fill="rgb(208,35,2)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.5859%" y="373" width="0.0803%" height="15" fill="rgb(252,120,50)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5859%" y="357" width="0.0803%" height="15" fill="rgb(251,83,29)" fg:x="1191" fg:w="1"/><text x="95.8359%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.6661%" y="581" width="0.0803%" height="15" fill="rgb(207,183,43)" fg:x="1192" fg:w="1"/><text x="95.9161%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.6661%" y="565" width="0.0803%" height="15" fill="rgb(230,100,25)" fg:x="1192" fg:w="1"/><text x="95.9161%" y="575.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="95.6661%" y="549" width="0.0803%" height="15" fill="rgb(231,117,24)" fg:x="1192" fg:w="1"/><text x="95.9161%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.6661%" y="533" width="0.0803%" height="15" fill="rgb(222,12,48)" fg:x="1192" fg:w="1"/><text x="95.9161%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.6661%" y="517" width="0.0803%" height="15" fill="rgb(251,18,48)" fg:x="1192" fg:w="1"/><text x="95.9161%" y="527.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="95.6661%" y="501" width="0.0803%" height="15" fill="rgb(242,225,24)" fg:x="1192" fg:w="1"/><text x="95.9161%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.6661%" y="485" width="0.0803%" height="15" fill="rgb(253,162,42)" fg:x="1192" fg:w="1"/><text x="95.9161%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.6661%" y="469" width="0.0803%" height="15" fill="rgb(212,34,6)" fg:x="1192" fg:w="1"/><text x="95.9161%" y="479.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="95.6661%" y="453" width="0.0803%" height="15" fill="rgb(237,158,6)" fg:x="1192" fg:w="1"/><text x="95.9161%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.6661%" y="437" width="0.0803%" height="15" fill="rgb(219,93,8)" fg:x="1192" fg:w="1"/><text x="95.9161%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6661%" y="421" width="0.0803%" height="15" fill="rgb(222,112,13)" fg:x="1192" fg:w="1"/><text x="95.9161%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="95.5056%" y="629" width="0.3210%" height="15" fill="rgb(230,77,36)" fg:x="1190" fg:w="4"/><text x="95.7556%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="95.5056%" y="613" width="0.3210%" height="15" fill="rgb(236,71,34)" fg:x="1190" fg:w="4"/><text x="95.7556%" y="623.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="95.5859%" y="597" width="0.2408%" height="15" fill="rgb(211,176,26)" fg:x="1191" fg:w="3"/><text x="95.8359%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.7464%" y="581" width="0.0803%" height="15" fill="rgb(235,184,14)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.7464%" y="565" width="0.0803%" height="15" fill="rgb(205,205,54)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.7464%" y="549" width="0.0803%" height="15" fill="rgb(219,118,46)" fg:x="1193" fg:w="1"/><text x="95.9964%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.8266%" y="597" width="0.0803%" height="15" fill="rgb(219,187,54)" fg:x="1194" fg:w="1"/><text x="96.0766%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.8266%" y="581" width="0.0803%" height="15" fill="rgb(228,42,5)" fg:x="1194" fg:w="1"/><text x="96.0766%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.8266%" y="565" width="0.0803%" height="15" fill="rgb(232,134,35)" fg:x="1194" fg:w="1"/><text x="96.0766%" y="575.50"></text></g><g><title>engine::session::internal::Added::find_refs (7 samples, 0.56%)</title><rect x="95.4254%" y="661" width="0.5618%" height="15" fill="rgb(248,57,6)" fg:x="1189" fg:w="7"/><text x="95.6754%" y="671.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.56%)</title><rect x="95.4254%" y="645" width="0.5618%" height="15" fill="rgb(244,78,46)" fg:x="1189" fg:w="7"/><text x="95.6754%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.8266%" y="629" width="0.1605%" height="15" fill="rgb(220,132,41)" fg:x="1194" fg:w="2"/><text x="96.0766%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.8266%" y="613" width="0.1605%" height="15" fill="rgb(238,14,54)" fg:x="1194" fg:w="2"/><text x="96.0766%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="95.9069%" y="597" width="0.0803%" height="15" fill="rgb(206,75,49)" fg:x="1195" fg:w="1"/><text x="96.1569%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="95.9069%" y="581" width="0.0803%" height="15" fill="rgb(234,70,47)" fg:x="1195" fg:w="1"/><text x="96.1569%" y="591.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="95.9069%" y="565" width="0.0803%" height="15" fill="rgb(225,66,18)" fg:x="1195" fg:w="1"/><text x="96.1569%" y="575.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="95.9069%" y="549" width="0.0803%" height="15" fill="rgb(242,56,6)" fg:x="1195" fg:w="1"/><text x="96.1569%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="95.9069%" y="533" width="0.0803%" height="15" fill="rgb(221,184,32)" fg:x="1195" fg:w="1"/><text x="96.1569%" y="543.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="95.9069%" y="517" width="0.0803%" height="15" fill="rgb(209,16,24)" fg:x="1195" fg:w="1"/><text x="96.1569%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="95.9069%" y="501" width="0.0803%" height="15" fill="rgb(215,7,25)" fg:x="1195" fg:w="1"/><text x="96.1569%" y="511.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="95.9069%" y="485" width="0.0803%" height="15" fill="rgb(218,149,6)" fg:x="1195" fg:w="1"/><text x="96.1569%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.9069%" y="469" width="0.0803%" height="15" fill="rgb(251,164,43)" fg:x="1195" fg:w="1"/><text x="96.1569%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="95.9069%" y="453" width="0.0803%" height="15" fill="rgb(205,140,26)" fg:x="1195" fg:w="1"/><text x="96.1569%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="95.9069%" y="437" width="0.0803%" height="15" fill="rgb(246,4,17)" fg:x="1195" fg:w="1"/><text x="96.1569%" y="447.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="95.9069%" y="421" width="0.0803%" height="15" fill="rgb(241,107,34)" fg:x="1195" fg:w="1"/><text x="96.1569%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.9872%" y="645" width="0.0803%" height="15" fill="rgb(217,221,1)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.9872%" y="629" width="0.0803%" height="15" fill="rgb(229,28,23)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9872%" y="613" width="0.0803%" height="15" fill="rgb(225,217,45)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9872%" y="597" width="0.0803%" height="15" fill="rgb(246,170,39)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.9872%" y="581" width="0.0803%" height="15" fill="rgb(205,183,44)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.9872%" y="565" width="0.0803%" height="15" fill="rgb(206,200,29)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.9872%" y="549" width="0.0803%" height="15" fill="rgb(245,56,1)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.9872%" y="533" width="0.0803%" height="15" fill="rgb(253,122,1)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.9872%" y="517" width="0.0803%" height="15" fill="rgb(219,155,50)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.9872%" y="501" width="0.0803%" height="15" fill="rgb(226,14,49)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.9872%" y="485" width="0.0803%" height="15" fill="rgb(216,109,54)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.9872%" y="469" width="0.0803%" height="15" fill="rgb(209,180,14)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.9872%" y="453" width="0.0803%" height="15" fill="rgb(245,113,8)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9872%" y="437" width="0.0803%" height="15" fill="rgb(246,126,24)" fg:x="1196" fg:w="1"/><text x="96.2372%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="96.0674%" y="629" width="0.0803%" height="15" fill="rgb(220,77,11)" fg:x="1197" fg:w="1"/><text x="96.3174%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.0674%" y="613" width="0.0803%" height="15" fill="rgb(229,44,8)" fg:x="1197" fg:w="1"/><text x="96.3174%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="96.0674%" y="645" width="0.1605%" height="15" fill="rgb(211,151,33)" fg:x="1197" fg:w="2"/><text x="96.3174%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.1477%" y="629" width="0.0803%" height="15" fill="rgb(223,50,37)" fg:x="1198" fg:w="1"/><text x="96.3977%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1477%" y="613" width="0.0803%" height="15" fill="rgb(207,138,32)" fg:x="1198" fg:w="1"/><text x="96.3977%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1477%" y="597" width="0.0803%" height="15" fill="rgb(241,19,54)" fg:x="1198" fg:w="1"/><text x="96.3977%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.1477%" y="581" width="0.0803%" height="15" fill="rgb(254,74,52)" fg:x="1198" fg:w="1"/><text x="96.3977%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1477%" y="565" width="0.0803%" height="15" fill="rgb(235,134,9)" fg:x="1198" fg:w="1"/><text x="96.3977%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1477%" y="549" width="0.0803%" height="15" fill="rgb(246,190,27)" fg:x="1198" fg:w="1"/><text x="96.3977%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1477%" y="533" width="0.0803%" height="15" fill="rgb(210,159,52)" fg:x="1198" fg:w="1"/><text x="96.3977%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.1477%" y="517" width="0.0803%" height="15" fill="rgb(213,153,4)" fg:x="1198" fg:w="1"/><text x="96.3977%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.3884%" y="549" width="0.0803%" height="15" fill="rgb(222,217,31)" fg:x="1201" fg:w="1"/><text x="96.6384%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="96.3884%" y="533" width="0.0803%" height="15" fill="rgb(219,121,28)" fg:x="1201" fg:w="1"/><text x="96.6384%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.3884%" y="517" width="0.0803%" height="15" fill="rgb(242,229,44)" fg:x="1201" fg:w="1"/><text x="96.6384%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.3884%" y="501" width="0.0803%" height="15" fill="rgb(205,18,44)" fg:x="1201" fg:w="1"/><text x="96.6384%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="96.3884%" y="485" width="0.0803%" height="15" fill="rgb(240,84,34)" fg:x="1201" fg:w="1"/><text x="96.6384%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.5490%" y="501" width="0.0803%" height="15" fill="rgb(208,23,25)" fg:x="1203" fg:w="1"/><text x="96.7990%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::from_value (7 samples, 0.56%)</title><rect x="96.2279%" y="645" width="0.5618%" height="15" fill="rgb(239,65,6)" fg:x="1199" fg:w="7"/><text x="96.4779%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="96.2279%" y="629" width="0.5618%" height="15" fill="rgb(222,86,0)" fg:x="1199" fg:w="7"/><text x="96.4779%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="96.2279%" y="613" width="0.5618%" height="15" fill="rgb(233,72,40)" fg:x="1199" fg:w="7"/><text x="96.4779%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="96.3082%" y="597" width="0.4815%" height="15" fill="rgb(218,153,22)" fg:x="1200" fg:w="6"/><text x="96.5582%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="96.3082%" y="581" width="0.4815%" height="15" fill="rgb(216,227,21)" fg:x="1200" fg:w="6"/><text x="96.5582%" y="591.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="96.3884%" y="565" width="0.4013%" height="15" fill="rgb(206,30,3)" fg:x="1201" fg:w="5"/><text x="96.6384%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="96.4687%" y="549" width="0.3210%" height="15" fill="rgb(235,47,48)" fg:x="1202" fg:w="4"/><text x="96.7187%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="96.4687%" y="533" width="0.3210%" height="15" fill="rgb(249,101,39)" fg:x="1202" fg:w="4"/><text x="96.7187%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="96.5490%" y="517" width="0.2408%" height="15" fill="rgb(219,68,12)" fg:x="1203" fg:w="3"/><text x="96.7990%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.6292%" y="501" width="0.1605%" height="15" fill="rgb(235,71,54)" fg:x="1204" fg:w="2"/><text x="96.8792%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.8700%" y="501" width="0.0803%" height="15" fill="rgb(236,173,42)" fg:x="1207" fg:w="1"/><text x="97.1200%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.9502%" y="485" width="0.0803%" height="15" fill="rgb(249,184,22)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.9502%" y="469" width="0.0803%" height="15" fill="rgb(243,217,22)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.9502%" y="453" width="0.0803%" height="15" fill="rgb(209,173,0)" fg:x="1208" fg:w="1"/><text x="97.2002%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="96.7897%" y="549" width="0.3210%" height="15" fill="rgb(224,64,31)" fg:x="1206" fg:w="4"/><text x="97.0397%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="96.7897%" y="533" width="0.3210%" height="15" fill="rgb(252,58,39)" fg:x="1206" fg:w="4"/><text x="97.0397%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="96.7897%" y="517" width="0.3210%" height="15" fill="rgb(214,104,22)" fg:x="1206" fg:w="4"/><text x="97.0397%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="96.9502%" y="501" width="0.1605%" height="15" fill="rgb(233,160,5)" fg:x="1208" fg:w="2"/><text x="97.2002%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.0305%" y="485" width="0.0803%" height="15" fill="rgb(217,188,8)" fg:x="1209" fg:w="1"/><text x="97.2805%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.0305%" y="469" width="0.0803%" height="15" fill="rgb(235,9,47)" fg:x="1209" fg:w="1"/><text x="97.2805%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.0305%" y="453" width="0.0803%" height="15" fill="rgb(219,103,15)" fg:x="1209" fg:w="1"/><text x="97.2805%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="96.7897%" y="581" width="0.4013%" height="15" fill="rgb(217,83,31)" fg:x="1206" fg:w="5"/><text x="97.0397%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="96.7897%" y="565" width="0.4013%" height="15" fill="rgb(236,56,24)" fg:x="1206" fg:w="5"/><text x="97.0397%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.1108%" y="549" width="0.0803%" height="15" fill="rgb(230,126,27)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.1108%" y="533" width="0.0803%" height="15" fill="rgb(206,65,43)" fg:x="1210" fg:w="1"/><text x="97.3608%" y="543.50"></text></g><g><title>engine::session::Session::load_entity (36 samples, 2.89%)</title><rect x="94.3820%" y="677" width="2.8892%" height="15" fill="rgb(250,125,28)" fg:x="1176" fg:w="36"/><text x="94.6320%" y="687.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.28%)</title><rect x="95.9872%" y="661" width="1.2841%" height="15" fill="rgb(247,179,53)" fg:x="1196" fg:w="16"/><text x="96.2372%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="96.7897%" y="645" width="0.4815%" height="15" fill="rgb(243,197,21)" fg:x="1206" fg:w="6"/><text x="97.0397%" y="655.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="96.7897%" y="629" width="0.4815%" height="15" fill="rgb(237,144,43)" fg:x="1206" fg:w="6"/><text x="97.0397%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="96.7897%" y="613" width="0.4815%" height="15" fill="rgb(236,198,30)" fg:x="1206" fg:w="6"/><text x="97.0397%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="96.7897%" y="597" width="0.4815%" height="15" fill="rgb(247,36,5)" fg:x="1206" fg:w="6"/><text x="97.0397%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.1910%" y="581" width="0.0803%" height="15" fill="rgb(245,203,15)" fg:x="1211" fg:w="1"/><text x="97.4410%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2713%" y="645" width="0.0803%" height="15" fill="rgb(227,125,51)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2713%" y="629" width="0.0803%" height="15" fill="rgb(230,130,13)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2713%" y="613" width="0.0803%" height="15" fill="rgb(232,40,46)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.2713%" y="597" width="0.0803%" height="15" fill="rgb(213,3,44)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.2713%" y="581" width="0.0803%" height="15" fill="rgb(239,161,30)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.2713%" y="565" width="0.0803%" height="15" fill="rgb(231,191,11)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.2713%" y="549" width="0.0803%" height="15" fill="rgb(214,97,49)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.2713%" y="533" width="0.0803%" height="15" fill="rgb(252,222,2)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.2713%" y="517" width="0.0803%" height="15" fill="rgb(236,164,34)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.2713%" y="501" width="0.0803%" height="15" fill="rgb(214,34,54)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.2713%" y="485" width="0.0803%" height="15" fill="rgb(219,108,29)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.2713%" y="469" width="0.0803%" height="15" fill="rgb(206,157,9)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2713%" y="453" width="0.0803%" height="15" fill="rgb(230,67,35)" fg:x="1212" fg:w="1"/><text x="97.5213%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.3515%" y="597" width="0.0803%" height="15" fill="rgb(234,183,23)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.3515%" y="581" width="0.0803%" height="15" fill="rgb(214,123,37)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3515%" y="565" width="0.0803%" height="15" fill="rgb(246,95,28)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.3515%" y="549" width="0.0803%" height="15" fill="rgb(207,89,5)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3515%" y="533" width="0.0803%" height="15" fill="rgb(254,169,2)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3515%" y="517" width="0.0803%" height="15" fill="rgb(237,192,42)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.3515%" y="501" width="0.0803%" height="15" fill="rgb(250,5,42)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.3515%" y="485" width="0.0803%" height="15" fill="rgb(240,162,4)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.3515%" y="469" width="0.0803%" height="15" fill="rgb(205,124,21)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.3515%" y="453" width="0.0803%" height="15" fill="rgb(223,202,28)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.3515%" y="437" width="0.0803%" height="15" fill="rgb(212,31,41)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.3515%" y="421" width="0.0803%" height="15" fill="rgb(248,96,40)" fg:x="1213" fg:w="1"/><text x="97.6015%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4318%" y="549" width="0.0803%" height="15" fill="rgb(248,89,15)" fg:x="1214" fg:w="1"/><text x="97.6818%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.4318%" y="533" width="0.0803%" height="15" fill="rgb(243,119,36)" fg:x="1214" fg:w="1"/><text x="97.6818%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4318%" y="517" width="0.0803%" height="15" fill="rgb(251,141,50)" fg:x="1214" fg:w="1"/><text x="97.6818%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.4318%" y="501" width="0.0803%" height="15" fill="rgb(214,44,43)" fg:x="1214" fg:w="1"/><text x="97.6818%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.4318%" y="485" width="0.0803%" height="15" fill="rgb(243,207,4)" fg:x="1214" fg:w="1"/><text x="97.6818%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.4318%" y="469" width="0.0803%" height="15" fill="rgb(229,156,40)" fg:x="1214" fg:w="1"/><text x="97.6818%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.4318%" y="453" width="0.0803%" height="15" fill="rgb(230,99,47)" fg:x="1214" fg:w="1"/><text x="97.6818%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.4318%" y="437" width="0.0803%" height="15" fill="rgb(243,84,11)" fg:x="1214" fg:w="1"/><text x="97.6818%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.4318%" y="421" width="0.0803%" height="15" fill="rgb(254,199,14)" fg:x="1214" fg:w="1"/><text x="97.6818%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.4318%" y="405" width="0.0803%" height="15" fill="rgb(215,37,54)" fg:x="1214" fg:w="1"/><text x="97.6818%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.4318%" y="389" width="0.0803%" height="15" fill="rgb(234,167,27)" fg:x="1214" fg:w="1"/><text x="97.6818%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.4318%" y="373" width="0.0803%" height="15" fill="rgb(229,84,50)" fg:x="1214" fg:w="1"/><text x="97.6818%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.4318%" y="357" width="0.0803%" height="15" fill="rgb(225,191,9)" fg:x="1214" fg:w="1"/><text x="97.6818%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.4318%" y="341" width="0.0803%" height="15" fill="rgb(220,10,35)" fg:x="1214" fg:w="1"/><text x="97.6818%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="97.4318%" y="597" width="0.1605%" height="15" fill="rgb(207,221,41)" fg:x="1214" fg:w="2"/><text x="97.6818%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="97.4318%" y="581" width="0.1605%" height="15" fill="rgb(227,202,3)" fg:x="1214" fg:w="2"/><text x="97.6818%" y="591.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="97.4318%" y="565" width="0.1605%" height="15" fill="rgb(216,52,42)" fg:x="1214" fg:w="2"/><text x="97.6818%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.5120%" y="549" width="0.0803%" height="15" fill="rgb(243,72,21)" fg:x="1215" fg:w="1"/><text x="97.7620%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.5120%" y="533" width="0.0803%" height="15" fill="rgb(244,145,40)" fg:x="1215" fg:w="1"/><text x="97.7620%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="97.5120%" y="517" width="0.0803%" height="15" fill="rgb(250,82,20)" fg:x="1215" fg:w="1"/><text x="97.7620%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.5120%" y="501" width="0.0803%" height="15" fill="rgb(233,45,24)" fg:x="1215" fg:w="1"/><text x="97.7620%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.5120%" y="485" width="0.0803%" height="15" fill="rgb(240,115,33)" fg:x="1215" fg:w="1"/><text x="97.7620%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="97.3515%" y="645" width="0.4013%" height="15" fill="rgb(247,26,51)" fg:x="1213" fg:w="5"/><text x="97.6015%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="97.3515%" y="629" width="0.4013%" height="15" fill="rgb(211,178,32)" fg:x="1213" fg:w="5"/><text x="97.6015%" y="639.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (5 samples, 0.40%)</title><rect x="97.3515%" y="613" width="0.4013%" height="15" fill="rgb(210,49,33)" fg:x="1213" fg:w="5"/><text x="97.6015%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.5923%" y="597" width="0.1605%" height="15" fill="rgb(206,49,19)" fg:x="1216" fg:w="2"/><text x="97.8423%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.5923%" y="581" width="0.1605%" height="15" fill="rgb(222,209,26)" fg:x="1216" fg:w="2"/><text x="97.8423%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.6726%" y="565" width="0.0803%" height="15" fill="rgb(218,163,12)" fg:x="1217" fg:w="1"/><text x="97.9226%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.6726%" y="549" width="0.0803%" height="15" fill="rgb(231,156,28)" fg:x="1217" fg:w="1"/><text x="97.9226%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.6726%" y="533" width="0.0803%" height="15" fill="rgb(228,134,28)" fg:x="1217" fg:w="1"/><text x="97.9226%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.6726%" y="517" width="0.0803%" height="15" fill="rgb(215,195,0)" fg:x="1217" fg:w="1"/><text x="97.9226%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.6726%" y="501" width="0.0803%" height="15" fill="rgb(228,207,6)" fg:x="1217" fg:w="1"/><text x="97.9226%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.7528%" y="613" width="0.0803%" height="15" fill="rgb(216,227,49)" fg:x="1218" fg:w="1"/><text x="98.0028%" y="623.50"></text></g><g><title>engine::session::internal::Added::find_refs (8 samples, 0.64%)</title><rect x="97.2713%" y="677" width="0.6421%" height="15" fill="rgb(220,104,35)" fg:x="1212" fg:w="8"/><text x="97.5213%" y="687.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (8 samples, 0.64%)</title><rect x="97.2713%" y="661" width="0.6421%" height="15" fill="rgb(247,218,44)" fg:x="1212" fg:w="8"/><text x="97.5213%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.7528%" y="645" width="0.1605%" height="15" fill="rgb(229,130,2)" fg:x="1218" fg:w="2"/><text x="98.0028%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.7528%" y="629" width="0.1605%" height="15" fill="rgb(232,69,24)" fg:x="1218" fg:w="2"/><text x="98.0028%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="97.8331%" y="613" width="0.0803%" height="15" fill="rgb(215,25,11)" fg:x="1219" fg:w="1"/><text x="98.0831%" y="623.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="97.9133%" y="645" width="0.0803%" height="15" fill="rgb(226,106,4)" fg:x="1220" fg:w="1"/><text x="98.1633%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.9133%" y="661" width="0.1605%" height="15" fill="rgb(229,211,41)" fg:x="1220" fg:w="2"/><text x="98.1633%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.9936%" y="645" width="0.0803%" height="15" fill="rgb(213,44,51)" fg:x="1221" fg:w="1"/><text x="98.2436%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9936%" y="629" width="0.0803%" height="15" fill="rgb(233,74,16)" fg:x="1221" fg:w="1"/><text x="98.2436%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9936%" y="613" width="0.0803%" height="15" fill="rgb(241,65,49)" fg:x="1221" fg:w="1"/><text x="98.2436%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.9936%" y="597" width="0.0803%" height="15" fill="rgb(227,73,37)" fg:x="1221" fg:w="1"/><text x="98.2436%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9936%" y="581" width="0.0803%" height="15" fill="rgb(212,157,23)" fg:x="1221" fg:w="1"/><text x="98.2436%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.9936%" y="565" width="0.0803%" height="15" fill="rgb(244,200,9)" fg:x="1221" fg:w="1"/><text x="98.2436%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.9936%" y="549" width="0.0803%" height="15" fill="rgb(224,166,51)" fg:x="1221" fg:w="1"/><text x="98.2436%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.0738%" y="565" width="0.0803%" height="15" fill="rgb(230,66,14)" fg:x="1222" fg:w="1"/><text x="98.3238%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.0738%" y="549" width="0.0803%" height="15" fill="rgb(215,201,4)" fg:x="1222" fg:w="1"/><text x="98.3238%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.0738%" y="533" width="0.0803%" height="15" fill="rgb(207,226,5)" fg:x="1222" fg:w="1"/><text x="98.3238%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::from_value (2 samples, 0.16%)</title><rect x="98.0738%" y="661" width="0.1605%" height="15" fill="rgb(238,142,26)" fg:x="1222" fg:w="2"/><text x="98.3238%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.0738%" y="645" width="0.1605%" height="15" fill="rgb(248,54,36)" fg:x="1222" fg:w="2"/><text x="98.3238%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.0738%" y="629" width="0.1605%" height="15" fill="rgb(207,220,26)" fg:x="1222" fg:w="2"/><text x="98.3238%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="98.0738%" y="613" width="0.1605%" height="15" fill="rgb(232,17,1)" fg:x="1222" fg:w="2"/><text x="98.3238%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.0738%" y="597" width="0.1605%" height="15" fill="rgb(213,71,30)" fg:x="1222" fg:w="2"/><text x="98.3238%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.0738%" y="581" width="0.1605%" height="15" fill="rgb(254,9,36)" fg:x="1222" fg:w="2"/><text x="98.3238%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.1541%" y="565" width="0.0803%" height="15" fill="rgb(212,35,28)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.1541%" y="549" width="0.0803%" height="15" fill="rgb(234,187,50)" fg:x="1223" fg:w="1"/><text x="98.4041%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.2343%" y="597" width="0.0803%" height="15" fill="rgb(233,81,25)" fg:x="1224" fg:w="1"/><text x="98.4843%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.2343%" y="581" width="0.0803%" height="15" fill="rgb(207,17,1)" fg:x="1224" fg:w="1"/><text x="98.4843%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.2343%" y="565" width="0.0803%" height="15" fill="rgb(244,6,8)" fg:x="1224" fg:w="1"/><text x="98.4843%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.2343%" y="549" width="0.0803%" height="15" fill="rgb(210,212,14)" fg:x="1224" fg:w="1"/><text x="98.4843%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.2343%" y="533" width="0.0803%" height="15" fill="rgb(207,53,24)" fg:x="1224" fg:w="1"/><text x="98.4843%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.2343%" y="517" width="0.0803%" height="15" fill="rgb(242,14,2)" fg:x="1224" fg:w="1"/><text x="98.4843%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.2343%" y="501" width="0.0803%" height="15" fill="rgb(247,23,47)" fg:x="1224" fg:w="1"/><text x="98.4843%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2343%" y="485" width="0.0803%" height="15" fill="rgb(236,151,41)" fg:x="1224" fg:w="1"/><text x="98.4843%" y="495.50"></text></g><g><title>engine::session::Session::load_entity (50 samples, 4.01%)</title><rect x="94.3820%" y="693" width="4.0128%" height="15" fill="rgb(223,139,54)" fg:x="1176" fg:w="50"/><text x="94.6320%" y="703.50">engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.48%)</title><rect x="97.9133%" y="677" width="0.4815%" height="15" fill="rgb(220,143,25)" fg:x="1220" fg:w="6"/><text x="98.1633%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (2 samples, 0.16%)</title><rect x="98.2343%" y="661" width="0.1605%" height="15" fill="rgb(243,1,48)" fg:x="1224" fg:w="2"/><text x="98.4843%" y="671.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="98.2343%" y="645" width="0.1605%" height="15" fill="rgb(225,117,53)" fg:x="1224" fg:w="2"/><text x="98.4843%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.2343%" y="629" width="0.1605%" height="15" fill="rgb(242,19,48)" fg:x="1224" fg:w="2"/><text x="98.4843%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.2343%" y="613" width="0.1605%" height="15" fill="rgb(216,160,14)" fg:x="1224" fg:w="2"/><text x="98.4843%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.3146%" y="597" width="0.0803%" height="15" fill="rgb(235,38,17)" fg:x="1225" fg:w="1"/><text x="98.5646%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.3949%" y="677" width="0.0803%" height="15" fill="rgb(236,51,41)" fg:x="1226" fg:w="1"/><text x="98.6449%" y="687.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="98.4751%" y="645" width="0.0803%" height="15" fill="rgb(237,177,4)" fg:x="1227" fg:w="1"/><text x="98.7251%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.5554%" y="581" width="0.0803%" height="15" fill="rgb(207,72,17)" fg:x="1228" fg:w="1"/><text x="98.8054%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.5554%" y="565" width="0.0803%" height="15" fill="rgb(235,29,34)" fg:x="1228" fg:w="1"/><text x="98.8054%" y="575.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="98.3949%" y="693" width="0.3210%" height="15" fill="rgb(212,13,22)" fg:x="1226" fg:w="4"/><text x="98.6449%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="98.4751%" y="677" width="0.2408%" height="15" fill="rgb(243,95,11)" fg:x="1227" fg:w="3"/><text x="98.7251%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="98.4751%" y="661" width="0.2408%" height="15" fill="rgb(214,76,28)" fg:x="1227" fg:w="3"/><text x="98.7251%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.5554%" y="645" width="0.1605%" height="15" fill="rgb(237,73,9)" fg:x="1228" fg:w="2"/><text x="98.8054%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5554%" y="629" width="0.1605%" height="15" fill="rgb(229,115,50)" fg:x="1228" fg:w="2"/><text x="98.8054%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.5554%" y="613" width="0.1605%" height="15" fill="rgb(246,226,7)" fg:x="1228" fg:w="2"/><text x="98.8054%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5554%" y="597" width="0.1605%" height="15" fill="rgb(249,14,18)" fg:x="1228" fg:w="2"/><text x="98.8054%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6356%" y="581" width="0.0803%" height="15" fill="rgb(243,24,30)" fg:x="1229" fg:w="1"/><text x="98.8856%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6356%" y="565" width="0.0803%" height="15" fill="rgb(230,122,18)" fg:x="1229" fg:w="1"/><text x="98.8856%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.7159%" y="677" width="0.0803%" height="15" fill="rgb(231,203,37)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="687.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="98.7159%" y="661" width="0.0803%" height="15" fill="rgb(251,178,31)" fg:x="1230" fg:w="1"/><text x="98.9659%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.7961%" y="645" width="0.0803%" height="15" fill="rgb(249,185,23)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.7961%" y="629" width="0.0803%" height="15" fill="rgb(207,96,33)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.7961%" y="613" width="0.0803%" height="15" fill="rgb(225,53,53)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.7961%" y="597" width="0.0803%" height="15" fill="rgb(227,103,48)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.7961%" y="581" width="0.0803%" height="15" fill="rgb(228,48,4)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.7961%" y="565" width="0.0803%" height="15" fill="rgb(229,68,8)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.7961%" y="549" width="0.0803%" height="15" fill="rgb(209,58,36)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.7961%" y="533" width="0.0803%" height="15" fill="rgb(252,131,4)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.7961%" y="517" width="0.0803%" height="15" fill="rgb(243,23,0)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.7961%" y="501" width="0.0803%" height="15" fill="rgb(248,96,1)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.7961%" y="485" width="0.0803%" height="15" fill="rgb(236,24,0)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.7961%" y="469" width="0.0803%" height="15" fill="rgb(241,197,35)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7961%" y="453" width="0.0803%" height="15" fill="rgb(252,12,0)" fg:x="1231" fg:w="1"/><text x="99.0461%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="98.7159%" y="693" width="0.2408%" height="15" fill="rgb(218,27,6)" fg:x="1230" fg:w="3"/><text x="98.9659%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="98.7961%" y="677" width="0.1605%" height="15" fill="rgb(205,175,0)" fg:x="1231" fg:w="2"/><text x="99.0461%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.7961%" y="661" width="0.1605%" height="15" fill="rgb(247,192,24)" fg:x="1231" fg:w="2"/><text x="99.0461%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.8764%" y="645" width="0.0803%" height="15" fill="rgb(242,165,20)" fg:x="1232" fg:w="1"/><text x="99.1264%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.0369%" y="645" width="0.0803%" height="15" fill="rgb(238,105,5)" fg:x="1234" fg:w="1"/><text x="99.2869%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.0369%" y="629" width="0.0803%" height="15" fill="rgb(220,213,4)" fg:x="1234" fg:w="1"/><text x="99.2869%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0369%" y="613" width="0.0803%" height="15" fill="rgb(219,154,9)" fg:x="1234" fg:w="1"/><text x="99.2869%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.0369%" y="597" width="0.0803%" height="15" fill="rgb(211,39,13)" fg:x="1234" fg:w="1"/><text x="99.2869%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.1172%" y="597" width="0.0803%" height="15" fill="rgb(251,193,26)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1172%" y="581" width="0.0803%" height="15" fill="rgb(222,74,36)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="591.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1172%" y="565" width="0.0803%" height="15" fill="rgb(233,227,51)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1172%" y="549" width="0.0803%" height="15" fill="rgb(251,92,35)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1172%" y="533" width="0.0803%" height="15" fill="rgb(241,214,21)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1172%" y="517" width="0.0803%" height="15" fill="rgb(217,61,34)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1172%" y="501" width="0.0803%" height="15" fill="rgb(238,5,15)" fg:x="1235" fg:w="1"/><text x="99.3672%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.1974%" y="597" width="0.1605%" height="15" fill="rgb(206,144,16)" fg:x="1236" fg:w="2"/><text x="99.4474%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1974%" y="581" width="0.1605%" height="15" fill="rgb(214,192,44)" fg:x="1236" fg:w="2"/><text x="99.4474%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="99.1974%" y="565" width="0.1605%" height="15" fill="rgb(232,184,51)" fg:x="1236" fg:w="2"/><text x="99.4474%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.2777%" y="549" width="0.0803%" height="15" fill="rgb(228,151,52)" fg:x="1237" fg:w="1"/><text x="99.5277%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.32%)</title><rect x="99.1172%" y="645" width="0.3210%" height="15" fill="rgb(224,156,24)" fg:x="1235" fg:w="4"/><text x="99.3672%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="99.1172%" y="629" width="0.3210%" height="15" fill="rgb(254,170,12)" fg:x="1235" fg:w="4"/><text x="99.3672%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="99.1172%" y="613" width="0.3210%" height="15" fill="rgb(213,175,36)" fg:x="1235" fg:w="4"/><text x="99.3672%" y="623.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="99.3579%" y="597" width="0.0803%" height="15" fill="rgb(207,78,2)" fg:x="1238" fg:w="1"/><text x="99.6079%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4382%" y="533" width="0.0803%" height="15" fill="rgb(215,227,14)" fg:x="1239" fg:w="1"/><text x="99.6882%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.4382%" y="517" width="0.0803%" height="15" fill="rgb(254,124,9)" fg:x="1239" fg:w="1"/><text x="99.6882%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4382%" y="501" width="0.0803%" height="15" fill="rgb(224,14,29)" fg:x="1239" fg:w="1"/><text x="99.6882%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.4382%" y="549" width="0.1605%" height="15" fill="rgb(235,48,48)" fg:x="1239" fg:w="2"/><text x="99.6882%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5185%" y="533" width="0.0803%" height="15" fill="rgb(225,114,34)" fg:x="1240" fg:w="1"/><text x="99.7685%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.4382%" y="581" width="0.2408%" height="15" fill="rgb(246,13,1)" fg:x="1239" fg:w="3"/><text x="99.6882%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.4382%" y="565" width="0.2408%" height="15" fill="rgb(213,218,0)" fg:x="1239" fg:w="3"/><text x="99.6882%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5987%" y="549" width="0.0803%" height="15" fill="rgb(240,122,9)" fg:x="1241" fg:w="1"/><text x="99.8487%" y="559.50"></text></g><g><title>engine::session::Session::load_entity (9 samples, 0.72%)</title><rect x="99.0369%" y="677" width="0.7223%" height="15" fill="rgb(220,37,6)" fg:x="1234" fg:w="9"/><text x="99.2869%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.72%)</title><rect x="99.0369%" y="661" width="0.7223%" height="15" fill="rgb(212,80,13)" fg:x="1234" fg:w="9"/><text x="99.2869%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="99.4382%" y="645" width="0.3210%" height="15" fill="rgb(222,198,39)" fg:x="1239" fg:w="4"/><text x="99.6882%" y="655.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="99.4382%" y="629" width="0.3210%" height="15" fill="rgb(235,168,43)" fg:x="1239" fg:w="4"/><text x="99.6882%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="99.4382%" y="613" width="0.3210%" height="15" fill="rgb(205,40,14)" fg:x="1239" fg:w="4"/><text x="99.6882%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="99.4382%" y="597" width="0.3210%" height="15" fill="rgb(210,221,42)" fg:x="1239" fg:w="4"/><text x="99.6882%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6790%" y="581" width="0.0803%" height="15" fill="rgb(231,153,26)" fg:x="1242" fg:w="1"/><text x="99.9290%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.7592%" y="629" width="0.0803%" height="15" fill="rgb(253,8,32)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.7592%" y="613" width="0.0803%" height="15" fill="rgb(215,14,32)" fg:x="1243" fg:w="1"/><text x="100.0092%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="99.7592%" y="661" width="0.1605%" height="15" fill="rgb(252,104,40)" fg:x="1243" fg:w="2"/><text x="100.0092%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.7592%" y="645" width="0.1605%" height="15" fill="rgb(221,183,54)" fg:x="1243" fg:w="2"/><text x="100.0092%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.8395%" y="629" width="0.0803%" height="15" fill="rgb(230,225,15)" fg:x="1244" fg:w="1"/><text x="100.0895%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.8395%" y="613" width="0.0803%" height="15" fill="rgb(221,35,39)" fg:x="1244" fg:w="1"/><text x="100.0895%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.8395%" y="597" width="0.0803%" height="15" fill="rgb(249,33,34)" fg:x="1244" fg:w="1"/><text x="100.0895%" y="607.50"></text></g><g><title>all (1,246 samples, 100%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(234,176,53)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1087.50"></text></g><g><title>simple-d06cd706 (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(208,165,47)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1071.50">simple-d06cd706</text></g><g><title>_start (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(208,206,21)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1055.50">_start</text></g><g><title>__libc_start_main (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(207,52,54)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1039.50">__libc_start_main</text></g><g><title>main (1,246 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(211,64,13)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1023.50">main</text></g><g><title>std::rt::lang_start_internal (1,246 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(244,5,48)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="1007.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,246 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(245,72,34)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,246 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(220,47,16)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,246 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(229,102,25)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="959.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,246 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(215,163,43)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="943.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,246 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(243,123,17)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,246 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(252,195,36)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,246 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(205,47,8)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="895.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,246 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(221,158,32)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="879.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,246 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(212,186,31)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="863.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,246 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(232,136,38)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="847.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,246 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(248,188,54)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="831.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,246 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(224,158,51)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="815.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,246 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(215,143,35)" fg:x="0" fg:w="1246"/><text x="0.2500%" y="799.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (494 samples, 39.65%)</title><rect x="60.3531%" y="773" width="39.6469%" height="15" fill="rgb(247,163,14)" fg:x="752" fg:w="494"/><text x="60.6031%" y="783.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routi..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (494 samples, 39.65%)</title><rect x="60.3531%" y="757" width="39.6469%" height="15" fill="rgb(215,81,13)" fg:x="752" fg:w="494"/><text x="60.6031%" y="767.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (494 samples, 39.65%)</title><rect x="60.3531%" y="741" width="39.6469%" height="15" fill="rgb(227,205,25)" fg:x="752" fg:w="494"/><text x="60.6031%" y="751.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (236 samples, 18.94%)</title><rect x="81.0594%" y="725" width="18.9406%" height="15" fill="rgb(237,173,24)" fg:x="1010" fg:w="236"/><text x="81.3094%" y="735.50">engine::session::Session::eval..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (236 samples, 18.94%)</title><rect x="81.0594%" y="709" width="18.9406%" height="15" fill="rgb(221,147,54)" fg:x="1010" fg:w="236"/><text x="81.3094%" y="719.50">engine::session::Session::eval..</text></g><g><title>kernel::model::entry::EntryResolver::world (13 samples, 1.04%)</title><rect x="98.9567%" y="693" width="1.0433%" height="15" fill="rgb(243,141,18)" fg:x="1233" fg:w="13"/><text x="99.2067%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="99.7592%" y="677" width="0.2408%" height="15" fill="rgb(245,2,30)" fg:x="1243" fg:w="3"/><text x="100.0092%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="99.9197%" y="661" width="0.0803%" height="15" fill="rgb(217,4,4)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.9197%" y="645" width="0.0803%" height="15" fill="rgb(236,173,11)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.9197%" y="629" width="0.0803%" height="15" fill="rgb(235,9,44)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.9197%" y="613" width="0.0803%" height="15" fill="rgb(213,229,12)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.9197%" y="597" width="0.0803%" height="15" fill="rgb(220,139,4)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.9197%" y="581" width="0.0803%" height="15" fill="rgb(241,123,19)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.9197%" y="565" width="0.0803%" height="15" fill="rgb(247,8,43)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.9197%" y="549" width="0.0803%" height="15" fill="rgb(219,77,38)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.9197%" y="533" width="0.0803%" height="15" fill="rgb(229,116,25)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.9197%" y="517" width="0.0803%" height="15" fill="rgb(253,18,49)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.9197%" y="501" width="0.0803%" height="15" fill="rgb(242,124,25)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.9197%" y="485" width="0.0803%" height="15" fill="rgb(219,219,6)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.9197%" y="469" width="0.0803%" height="15" fill="rgb(230,12,48)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.9197%" y="453" width="0.0803%" height="15" fill="rgb(233,166,37)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.9197%" y="437" width="0.0803%" height="15" fill="rgb(209,22,8)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.9197%" y="421" width="0.0803%" height="15" fill="rgb(209,224,25)" fg:x="1245" fg:w="1"/><text x="100.1697%" y="431.50"></text></g></svg></svg>