<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1190" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1173.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1173.00"> </text><svg id="frames" x="10" width="1180" total_samples="1249"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0801%" y="741" width="0.0801%" height="15" fill="rgb(254,10,15)" fg:x="1" fg:w="1"/><text x="0.3301%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.3203%" y="677" width="0.1601%" height="15" fill="rgb(245,173,6)" fg:x="4" fg:w="2"/><text x="0.5703%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.4804%" y="677" width="0.1601%" height="15" fill="rgb(228,74,0)" fg:x="6" fg:w="2"/><text x="0.7304%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5604%" y="661" width="0.0801%" height="15" fill="rgb(206,138,29)" fg:x="7" fg:w="1"/><text x="0.8104%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.6405%" y="661" width="0.0801%" height="15" fill="rgb(253,27,43)" fg:x="8" fg:w="1"/><text x="0.8905%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.6405%" y="645" width="0.0801%" height="15" fill="rgb(231,73,0)" fg:x="8" fg:w="1"/><text x="0.8905%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6405%" y="629" width="0.0801%" height="15" fill="rgb(218,9,23)" fg:x="8" fg:w="1"/><text x="0.8905%" y="639.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.7206%" y="661" width="0.2402%" height="15" fill="rgb(251,55,29)" fg:x="9" fg:w="3"/><text x="0.9706%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.9608%" y="661" width="0.1601%" height="15" fill="rgb(223,180,22)" fg:x="12" fg:w="2"/><text x="1.2108%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0408%" y="645" width="0.0801%" height="15" fill="rgb(223,29,21)" fg:x="13" fg:w="1"/><text x="1.2908%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.1209%" y="645" width="0.0801%" height="15" fill="rgb(251,103,37)" fg:x="14" fg:w="1"/><text x="1.3709%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1209%" y="629" width="0.0801%" height="15" fill="rgb(214,11,21)" fg:x="14" fg:w="1"/><text x="1.3709%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.20%)</title><rect x="0.2402%" y="693" width="1.2010%" height="15" fill="rgb(205,137,13)" fg:x="3" fg:w="15"/><text x="0.4902%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="0.6405%" y="677" width="0.8006%" height="15" fill="rgb(225,58,47)" fg:x="8" fg:w="10"/><text x="0.8905%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="1.1209%" y="661" width="0.3203%" height="15" fill="rgb(222,197,14)" fg:x="14" fg:w="4"/><text x="1.3709%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="1.2010%" y="645" width="0.2402%" height="15" fill="rgb(215,210,33)" fg:x="15" fg:w="3"/><text x="1.4510%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="1.2010%" y="629" width="0.2402%" height="15" fill="rgb(242,13,9)" fg:x="15" fg:w="3"/><text x="1.4510%" y="639.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="1.2010%" y="613" width="0.2402%" height="15" fill="rgb(218,31,39)" fg:x="15" fg:w="3"/><text x="1.4510%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.36%)</title><rect x="0.1601%" y="709" width="1.3611%" height="15" fill="rgb(211,214,23)" fg:x="2" fg:w="17"/><text x="0.4101%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4412%" y="693" width="0.0801%" height="15" fill="rgb(237,92,14)" fg:x="18" fg:w="1"/><text x="1.6912%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.52%)</title><rect x="0.1601%" y="725" width="1.5212%" height="15" fill="rgb(220,78,5)" fg:x="2" fg:w="19"/><text x="0.4101%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.5212%" y="709" width="0.1601%" height="15" fill="rgb(237,23,21)" fg:x="19" fg:w="2"/><text x="1.7712%" y="719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.76%)</title><rect x="0.0000%" y="789" width="1.7614%" height="15" fill="rgb(251,207,51)" fg:x="0" fg:w="22"/><text x="0.2500%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (21 samples, 1.68%)</title><rect x="0.0801%" y="773" width="1.6813%" height="15" fill="rgb(249,206,18)" fg:x="1" fg:w="21"/><text x="0.3301%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.68%)</title><rect x="0.0801%" y="757" width="1.6813%" height="15" fill="rgb(236,20,19)" fg:x="1" fg:w="21"/><text x="0.3301%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (20 samples, 1.60%)</title><rect x="0.1601%" y="741" width="1.6013%" height="15" fill="rgb(214,227,29)" fg:x="2" fg:w="20"/><text x="0.4101%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6813%" y="725" width="0.0801%" height="15" fill="rgb(209,183,4)" fg:x="21" fg:w="1"/><text x="1.9313%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="1.8415%" y="757" width="0.0801%" height="15" fill="rgb(233,111,23)" fg:x="23" fg:w="1"/><text x="2.0915%" y="767.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="1.8415%" y="741" width="0.0801%" height="15" fill="rgb(238,121,27)" fg:x="23" fg:w="1"/><text x="2.0915%" y="751.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="1.8415%" y="725" width="0.0801%" height="15" fill="rgb(236,120,41)" fg:x="23" fg:w="1"/><text x="2.0915%" y="735.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="2.0016%" y="677" width="0.1601%" height="15" fill="rgb(241,143,10)" fg:x="25" fg:w="2"/><text x="2.2516%" y="687.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="2.0817%" y="661" width="0.0801%" height="15" fill="rgb(224,86,31)" fg:x="26" fg:w="1"/><text x="2.3317%" y="671.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="2.0817%" y="645" width="0.0801%" height="15" fill="rgb(236,212,27)" fg:x="26" fg:w="1"/><text x="2.3317%" y="655.50"></text></g><g><title>dlopen (10 samples, 0.80%)</title><rect x="2.1617%" y="677" width="0.8006%" height="15" fill="rgb(219,43,51)" fg:x="27" fg:w="10"/><text x="2.4117%" y="687.50"></text></g><g><title>_dl_catch_error (8 samples, 0.64%)</title><rect x="2.3219%" y="661" width="0.6405%" height="15" fill="rgb(232,216,8)" fg:x="29" fg:w="8"/><text x="2.5719%" y="671.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="2.3219%" y="645" width="0.6405%" height="15" fill="rgb(206,222,39)" fg:x="29" fg:w="8"/><text x="2.5719%" y="655.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="2.4019%" y="629" width="0.5604%" height="15" fill="rgb(209,149,48)" fg:x="30" fg:w="7"/><text x="2.6519%" y="639.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="2.4019%" y="613" width="0.5604%" height="15" fill="rgb(229,155,21)" fg:x="30" fg:w="7"/><text x="2.6519%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.8823%" y="597" width="0.0801%" height="15" fill="rgb(246,152,26)" fg:x="36" fg:w="1"/><text x="3.1323%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="2.9624%" y="629" width="0.0801%" height="15" fill="rgb(206,70,42)" fg:x="37" fg:w="1"/><text x="3.2124%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.9624%" y="613" width="0.0801%" height="15" fill="rgb(236,9,11)" fg:x="37" fg:w="1"/><text x="3.2124%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.9624%" y="597" width="0.0801%" height="15" fill="rgb(238,145,47)" fg:x="37" fg:w="1"/><text x="3.2124%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="2.9624%" y="581" width="0.0801%" height="15" fill="rgb(252,189,7)" fg:x="37" fg:w="1"/><text x="3.2124%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="2.9624%" y="565" width="0.0801%" height="15" fill="rgb(254,168,51)" fg:x="37" fg:w="1"/><text x="3.2124%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="2.9624%" y="549" width="0.0801%" height="15" fill="rgb(227,105,46)" fg:x="37" fg:w="1"/><text x="3.2124%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="2.9624%" y="533" width="0.0801%" height="15" fill="rgb(227,74,30)" fg:x="37" fg:w="1"/><text x="3.2124%" y="543.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (15 samples, 1.20%)</title><rect x="1.9215%" y="709" width="1.2010%" height="15" fill="rgb(206,212,44)" fg:x="24" fg:w="15"/><text x="2.1715%" y="719.50"></text></g><g><title>libloading::safe::Library::new (15 samples, 1.20%)</title><rect x="1.9215%" y="693" width="1.2010%" height="15" fill="rgb(252,69,11)" fg:x="24" fg:w="15"/><text x="2.1715%" y="703.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (2 samples, 0.16%)</title><rect x="2.9624%" y="677" width="0.1601%" height="15" fill="rgb(239,116,0)" fg:x="37" fg:w="2"/><text x="3.2124%" y="687.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (2 samples, 0.16%)</title><rect x="2.9624%" y="661" width="0.1601%" height="15" fill="rgb(246,189,23)" fg:x="37" fg:w="2"/><text x="3.2124%" y="671.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (2 samples, 0.16%)</title><rect x="2.9624%" y="645" width="0.1601%" height="15" fill="rgb(229,50,41)" fg:x="37" fg:w="2"/><text x="3.2124%" y="655.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="3.0424%" y="629" width="0.0801%" height="15" fill="rgb(214,66,37)" fg:x="38" fg:w="1"/><text x="3.2924%" y="639.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (17 samples, 1.36%)</title><rect x="1.9215%" y="725" width="1.3611%" height="15" fill="rgb(226,28,6)" fg:x="24" fg:w="17"/><text x="2.1715%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="3.1225%" y="709" width="0.1601%" height="15" fill="rgb(239,154,0)" fg:x="39" fg:w="2"/><text x="3.3725%" y="719.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="3.1225%" y="693" width="0.1601%" height="15" fill="rgb(233,97,11)" fg:x="39" fg:w="2"/><text x="3.3725%" y="703.50"></text></g><g><title>engine::session::Session::initialize (18 samples, 1.44%)</title><rect x="1.9215%" y="741" width="1.4412%" height="15" fill="rgb(236,215,16)" fg:x="24" fg:w="18"/><text x="2.1715%" y="751.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="3.2826%" y="725" width="0.0801%" height="15" fill="rgb(246,188,29)" fg:x="41" fg:w="1"/><text x="3.5326%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.2826%" y="709" width="0.0801%" height="15" fill="rgb(207,7,29)" fg:x="41" fg:w="1"/><text x="3.5326%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.2826%" y="693" width="0.0801%" height="15" fill="rgb(238,112,43)" fg:x="41" fg:w="1"/><text x="3.5326%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.2826%" y="677" width="0.0801%" height="15" fill="rgb(230,110,32)" fg:x="41" fg:w="1"/><text x="3.5326%" y="687.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.2826%" y="661" width="0.0801%" height="15" fill="rgb(218,197,32)" fg:x="41" fg:w="1"/><text x="3.5326%" y="671.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (22 samples, 1.76%)</title><rect x="1.7614%" y="789" width="1.7614%" height="15" fill="rgb(252,61,9)" fg:x="22" fg:w="22"/><text x="2.0114%" y="799.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (21 samples, 1.68%)</title><rect x="1.8415%" y="773" width="1.6813%" height="15" fill="rgb(244,140,14)" fg:x="23" fg:w="21"/><text x="2.0915%" y="783.50"></text></g><g><title>engine::session::Session::new (20 samples, 1.60%)</title><rect x="1.9215%" y="757" width="1.6013%" height="15" fill="rgb(216,14,47)" fg:x="24" fg:w="20"/><text x="2.1715%" y="767.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="3.3627%" y="741" width="0.1601%" height="15" fill="rgb(224,130,52)" fg:x="42" fg:w="2"/><text x="3.6127%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="3.3627%" y="725" width="0.1601%" height="15" fill="rgb(210,229,51)" fg:x="42" fg:w="2"/><text x="3.6127%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.4428%" y="709" width="0.0801%" height="15" fill="rgb(242,13,9)" fg:x="43" fg:w="1"/><text x="3.6928%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.4428%" y="693" width="0.0801%" height="15" fill="rgb(252,71,50)" fg:x="43" fg:w="1"/><text x="3.6928%" y="703.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.4428%" y="677" width="0.0801%" height="15" fill="rgb(218,225,6)" fg:x="43" fg:w="1"/><text x="3.6928%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.6029%" y="773" width="0.0801%" height="15" fill="rgb(219,27,35)" fg:x="45" fg:w="1"/><text x="3.8529%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.6029%" y="757" width="0.0801%" height="15" fill="rgb(226,30,1)" fg:x="45" fg:w="1"/><text x="3.8529%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.6829%" y="773" width="0.0801%" height="15" fill="rgb(227,164,34)" fg:x="46" fg:w="1"/><text x="3.9329%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.6829%" y="757" width="0.0801%" height="15" fill="rgb(206,103,4)" fg:x="46" fg:w="1"/><text x="3.9329%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="3.7630%" y="773" width="0.0801%" height="15" fill="rgb(214,166,19)" fg:x="47" fg:w="1"/><text x="4.0130%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.7630%" y="757" width="0.0801%" height="15" fill="rgb(240,56,20)" fg:x="47" fg:w="1"/><text x="4.0130%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.8431%" y="693" width="0.0801%" height="15" fill="rgb(224,25,3)" fg:x="48" fg:w="1"/><text x="4.0931%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.8431%" y="677" width="0.0801%" height="15" fill="rgb(216,206,54)" fg:x="48" fg:w="1"/><text x="4.0931%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="3.8431%" y="661" width="0.0801%" height="15" fill="rgb(225,142,10)" fg:x="48" fg:w="1"/><text x="4.0931%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="3.8431%" y="645" width="0.0801%" height="15" fill="rgb(246,9,18)" fg:x="48" fg:w="1"/><text x="4.0931%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="3.8431%" y="629" width="0.0801%" height="15" fill="rgb(247,140,18)" fg:x="48" fg:w="1"/><text x="4.0931%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.8431%" y="613" width="0.0801%" height="15" fill="rgb(239,184,22)" fg:x="48" fg:w="1"/><text x="4.0931%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.8431%" y="597" width="0.0801%" height="15" fill="rgb(227,94,44)" fg:x="48" fg:w="1"/><text x="4.0931%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="3.8431%" y="581" width="0.0801%" height="15" fill="rgb(219,43,3)" fg:x="48" fg:w="1"/><text x="4.0931%" y="591.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="3.8431%" y="565" width="0.0801%" height="15" fill="rgb(210,76,31)" fg:x="48" fg:w="1"/><text x="4.0931%" y="575.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="3.8431%" y="549" width="0.0801%" height="15" fill="rgb(225,85,12)" fg:x="48" fg:w="1"/><text x="4.0931%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="3.9231%" y="661" width="0.1601%" height="15" fill="rgb(214,191,28)" fg:x="49" fg:w="2"/><text x="4.1731%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="3.9231%" y="645" width="0.1601%" height="15" fill="rgb(214,43,14)" fg:x="49" fg:w="2"/><text x="4.1731%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.0032%" y="629" width="0.0801%" height="15" fill="rgb(253,117,5)" fg:x="50" fg:w="1"/><text x="4.2532%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.0032%" y="613" width="0.0801%" height="15" fill="rgb(208,124,26)" fg:x="50" fg:w="1"/><text x="4.2532%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="3.9231%" y="677" width="0.2402%" height="15" fill="rgb(228,208,39)" fg:x="49" fg:w="3"/><text x="4.1731%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.0833%" y="661" width="0.0801%" height="15" fill="rgb(206,180,39)" fg:x="51" fg:w="1"/><text x="4.3333%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.1633%" y="661" width="0.0801%" height="15" fill="rgb(205,111,37)" fg:x="52" fg:w="1"/><text x="4.4133%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="4.3235%" y="645" width="0.0801%" height="15" fill="rgb(208,121,24)" fg:x="54" fg:w="1"/><text x="4.5735%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="4.3235%" y="629" width="0.0801%" height="15" fill="rgb(218,215,32)" fg:x="54" fg:w="1"/><text x="4.5735%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="4.3235%" y="613" width="0.0801%" height="15" fill="rgb(244,168,53)" fg:x="54" fg:w="1"/><text x="4.5735%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.3235%" y="597" width="0.0801%" height="15" fill="rgb(214,9,36)" fg:x="54" fg:w="1"/><text x="4.5735%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.3235%" y="581" width="0.0801%" height="15" fill="rgb(231,4,34)" fg:x="54" fg:w="1"/><text x="4.5735%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="4.4035%" y="629" width="0.1601%" height="15" fill="rgb(210,83,51)" fg:x="55" fg:w="2"/><text x="4.6535%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.4035%" y="613" width="0.1601%" height="15" fill="rgb(224,112,1)" fg:x="55" fg:w="2"/><text x="4.6535%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.4836%" y="597" width="0.0801%" height="15" fill="rgb(216,33,41)" fg:x="56" fg:w="1"/><text x="4.7336%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="4.5637%" y="613" width="0.1601%" height="15" fill="rgb(215,179,42)" fg:x="57" fg:w="2"/><text x="4.8137%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.5637%" y="597" width="0.1601%" height="15" fill="rgb(205,81,48)" fg:x="57" fg:w="2"/><text x="4.8137%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.5637%" y="581" width="0.1601%" height="15" fill="rgb(246,17,30)" fg:x="57" fg:w="2"/><text x="4.8137%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.6437%" y="565" width="0.0801%" height="15" fill="rgb(226,19,16)" fg:x="58" fg:w="1"/><text x="4.8937%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="4.8038%" y="597" width="0.1601%" height="15" fill="rgb(207,3,14)" fg:x="60" fg:w="2"/><text x="5.0538%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.8038%" y="581" width="0.1601%" height="15" fill="rgb(226,77,12)" fg:x="60" fg:w="2"/><text x="5.0538%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.1241%" y="533" width="0.0801%" height="15" fill="rgb(226,76,25)" fg:x="64" fg:w="1"/><text x="5.3741%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.1241%" y="517" width="0.0801%" height="15" fill="rgb(217,216,25)" fg:x="64" fg:w="1"/><text x="5.3741%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.1241%" y="501" width="0.0801%" height="15" fill="rgb(247,127,42)" fg:x="64" fg:w="1"/><text x="5.3741%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.1241%" y="485" width="0.0801%" height="15" fill="rgb(226,10,34)" fg:x="64" fg:w="1"/><text x="5.3741%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="4.9640%" y="581" width="0.3203%" height="15" fill="rgb(249,78,0)" fg:x="62" fg:w="4"/><text x="5.2140%" y="591.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="4.9640%" y="565" width="0.3203%" height="15" fill="rgb(226,218,38)" fg:x="62" fg:w="4"/><text x="5.2140%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.1241%" y="549" width="0.1601%" height="15" fill="rgb(240,92,1)" fg:x="64" fg:w="2"/><text x="5.3741%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="5.2042%" y="533" width="0.0801%" height="15" fill="rgb(237,224,33)" fg:x="65" fg:w="1"/><text x="5.4542%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="4.9640%" y="597" width="0.4003%" height="15" fill="rgb(211,46,1)" fg:x="62" fg:w="5"/><text x="5.2140%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.2842%" y="581" width="0.0801%" height="15" fill="rgb(239,190,4)" fg:x="66" fg:w="1"/><text x="5.5342%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="4.2434%" y="661" width="1.2010%" height="15" fill="rgb(221,50,22)" fg:x="53" fg:w="15"/><text x="4.4934%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="4.4035%" y="645" width="1.0408%" height="15" fill="rgb(207,176,8)" fg:x="55" fg:w="13"/><text x="4.6535%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="4.5637%" y="629" width="0.8807%" height="15" fill="rgb(244,114,50)" fg:x="57" fg:w="11"/><text x="4.8137%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="4.7238%" y="613" width="0.7206%" height="15" fill="rgb(226,206,19)" fg:x="59" fg:w="9"/><text x="4.9738%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.3643%" y="597" width="0.0801%" height="15" fill="rgb(208,199,16)" fg:x="67" fg:w="1"/><text x="5.6143%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (22 samples, 1.76%)</title><rect x="3.9231%" y="693" width="1.7614%" height="15" fill="rgb(208,38,14)" fg:x="49" fg:w="22"/><text x="4.1731%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.52%)</title><rect x="4.1633%" y="677" width="1.5212%" height="15" fill="rgb(221,211,49)" fg:x="52" fg:w="19"/><text x="4.4133%" y="687.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.4444%" y="661" width="0.2402%" height="15" fill="rgb(227,214,34)" fg:x="68" fg:w="3"/><text x="5.6944%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.6045%" y="645" width="0.0801%" height="15" fill="rgb(234,5,54)" fg:x="70" fg:w="1"/><text x="5.8545%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.6045%" y="629" width="0.0801%" height="15" fill="rgb(236,215,22)" fg:x="70" fg:w="1"/><text x="5.8545%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.6045%" y="613" width="0.0801%" height="15" fill="rgb(244,0,11)" fg:x="70" fg:w="1"/><text x="5.8545%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.6845%" y="645" width="0.0801%" height="15" fill="rgb(212,140,16)" fg:x="71" fg:w="1"/><text x="5.9345%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.7646%" y="629" width="0.0801%" height="15" fill="rgb(238,101,37)" fg:x="72" fg:w="1"/><text x="6.0146%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.8447%" y="629" width="0.0801%" height="15" fill="rgb(247,46,3)" fg:x="73" fg:w="1"/><text x="6.0947%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.9247%" y="613" width="0.0801%" height="15" fill="rgb(208,106,19)" fg:x="74" fg:w="1"/><text x="6.1747%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.0849%" y="581" width="0.0801%" height="15" fill="rgb(240,227,15)" fg:x="76" fg:w="1"/><text x="6.3349%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="5.6845%" y="693" width="0.5604%" height="15" fill="rgb(226,173,6)" fg:x="71" fg:w="7"/><text x="5.9345%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="5.6845%" y="677" width="0.5604%" height="15" fill="rgb(213,191,1)" fg:x="71" fg:w="7"/><text x="5.9345%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="5.6845%" y="661" width="0.5604%" height="15" fill="rgb(246,51,36)" fg:x="71" fg:w="7"/><text x="5.9345%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="5.7646%" y="645" width="0.4804%" height="15" fill="rgb(238,40,32)" fg:x="72" fg:w="6"/><text x="6.0146%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="5.9247%" y="629" width="0.3203%" height="15" fill="rgb(208,126,27)" fg:x="74" fg:w="4"/><text x="6.1747%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="6.0048%" y="613" width="0.2402%" height="15" fill="rgb(227,117,38)" fg:x="75" fg:w="3"/><text x="6.2548%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="6.0048%" y="597" width="0.2402%" height="15" fill="rgb(232,16,1)" fg:x="75" fg:w="3"/><text x="6.2548%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="6.1649%" y="581" width="0.0801%" height="15" fill="rgb(212,111,31)" fg:x="77" fg:w="1"/><text x="6.4149%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="6.1649%" y="565" width="0.0801%" height="15" fill="rgb(253,227,2)" fg:x="77" fg:w="1"/><text x="6.4149%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.3251%" y="645" width="0.0801%" height="15" fill="rgb(216,122,17)" fg:x="79" fg:w="1"/><text x="6.5751%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="6.4051%" y="645" width="0.1601%" height="15" fill="rgb(227,37,2)" fg:x="80" fg:w="2"/><text x="6.6551%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="6.4051%" y="629" width="0.1601%" height="15" fill="rgb(244,113,40)" fg:x="80" fg:w="2"/><text x="6.6551%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="6.4051%" y="613" width="0.1601%" height="15" fill="rgb(217,193,34)" fg:x="80" fg:w="2"/><text x="6.6551%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="6.5653%" y="645" width="0.0801%" height="15" fill="rgb(212,223,15)" fg:x="82" fg:w="1"/><text x="6.8153%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="6.5653%" y="629" width="0.0801%" height="15" fill="rgb(238,143,18)" fg:x="82" fg:w="1"/><text x="6.8153%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (1 samples, 0.08%)</title><rect x="6.5653%" y="613" width="0.0801%" height="15" fill="rgb(231,18,49)" fg:x="82" fg:w="1"/><text x="6.8153%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="6.8855%" y="581" width="0.0801%" height="15" fill="rgb(249,122,4)" fg:x="86" fg:w="1"/><text x="7.1355%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.8855%" y="565" width="0.0801%" height="15" fill="rgb(245,138,54)" fg:x="86" fg:w="1"/><text x="7.1355%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.9656%" y="565" width="0.0801%" height="15" fill="rgb(218,130,18)" fg:x="87" fg:w="1"/><text x="7.2156%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="6.8855%" y="597" width="0.4003%" height="15" fill="rgb(235,94,13)" fg:x="86" fg:w="5"/><text x="7.1355%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="6.9656%" y="581" width="0.3203%" height="15" fill="rgb(247,143,5)" fg:x="87" fg:w="4"/><text x="7.2156%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="7.0456%" y="565" width="0.2402%" height="15" fill="rgb(212,59,54)" fg:x="88" fg:w="3"/><text x="7.2956%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="7.0456%" y="549" width="0.2402%" height="15" fill="rgb(206,121,24)" fg:x="88" fg:w="3"/><text x="7.2956%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="7.1257%" y="533" width="0.1601%" height="15" fill="rgb(235,38,8)" fg:x="89" fg:w="2"/><text x="7.3757%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.4460%" y="565" width="0.0801%" height="15" fill="rgb(227,102,26)" fg:x="93" fg:w="1"/><text x="7.6960%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.6061%" y="501" width="0.0801%" height="15" fill="rgb(240,183,46)" fg:x="95" fg:w="1"/><text x="7.8561%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.6061%" y="485" width="0.0801%" height="15" fill="rgb(208,177,23)" fg:x="95" fg:w="1"/><text x="7.8561%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="7.5260%" y="549" width="0.2402%" height="15" fill="rgb(216,152,5)" fg:x="94" fg:w="3"/><text x="7.7760%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="7.5260%" y="533" width="0.2402%" height="15" fill="rgb(238,199,2)" fg:x="94" fg:w="3"/><text x="7.7760%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="7.6061%" y="517" width="0.1601%" height="15" fill="rgb(235,142,28)" fg:x="95" fg:w="2"/><text x="7.8561%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="7.6861%" y="501" width="0.0801%" height="15" fill="rgb(225,97,25)" fg:x="96" fg:w="1"/><text x="7.9361%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.6861%" y="485" width="0.0801%" height="15" fill="rgb(208,75,46)" fg:x="96" fg:w="1"/><text x="7.9361%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="7.6861%" y="469" width="0.0801%" height="15" fill="rgb(240,136,15)" fg:x="96" fg:w="1"/><text x="7.9361%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="7.6861%" y="453" width="0.0801%" height="15" fill="rgb(235,36,27)" fg:x="96" fg:w="1"/><text x="7.9361%" y="463.50"></text></g><g><title>engine::session::Session::flush (50 samples, 4.00%)</title><rect x="3.8431%" y="773" width="4.0032%" height="15" fill="rgb(231,132,23)" fg:x="48" fg:w="50"/><text x="4.0931%" y="783.50">engi..</text></g><g><title>engine::session::state::State::close (50 samples, 4.00%)</title><rect x="3.8431%" y="757" width="4.0032%" height="15" fill="rgb(205,208,20)" fg:x="48" fg:w="50"/><text x="4.0931%" y="767.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (50 samples, 4.00%)</title><rect x="3.8431%" y="741" width="4.0032%" height="15" fill="rgb(215,26,40)" fg:x="48" fg:w="50"/><text x="4.0931%" y="751.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (50 samples, 4.00%)</title><rect x="3.8431%" y="725" width="4.0032%" height="15" fill="rgb(238,183,34)" fg:x="48" fg:w="50"/><text x="4.0931%" y="735.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (50 samples, 4.00%)</title><rect x="3.8431%" y="709" width="4.0032%" height="15" fill="rgb(207,96,10)" fg:x="48" fg:w="50"/><text x="4.0931%" y="719.50">engi..</text></g><g><title>kernel::model::any_entity_changes (20 samples, 1.60%)</title><rect x="6.2450%" y="693" width="1.6013%" height="15" fill="rgb(218,88,6)" fg:x="78" fg:w="20"/><text x="6.4950%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.60%)</title><rect x="6.2450%" y="677" width="1.6013%" height="15" fill="rgb(217,22,49)" fg:x="78" fg:w="20"/><text x="6.4950%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.60%)</title><rect x="6.2450%" y="661" width="1.6013%" height="15" fill="rgb(240,195,14)" fg:x="78" fg:w="20"/><text x="6.4950%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.20%)</title><rect x="6.6453%" y="645" width="1.2010%" height="15" fill="rgb(229,48,27)" fg:x="83" fg:w="15"/><text x="6.8953%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.12%)</title><rect x="6.7254%" y="629" width="1.1209%" height="15" fill="rgb(220,194,45)" fg:x="84" fg:w="14"/><text x="6.9754%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.12%)</title><rect x="6.7254%" y="613" width="1.1209%" height="15" fill="rgb(252,60,20)" fg:x="84" fg:w="14"/><text x="6.9754%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="7.2858%" y="597" width="0.5604%" height="15" fill="rgb(244,169,33)" fg:x="91" fg:w="7"/><text x="7.5358%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="7.3659%" y="581" width="0.4804%" height="15" fill="rgb(234,141,34)" fg:x="92" fg:w="6"/><text x="7.6159%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="7.5260%" y="565" width="0.3203%" height="15" fill="rgb(241,141,9)" fg:x="94" fg:w="4"/><text x="7.7760%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.7662%" y="549" width="0.0801%" height="15" fill="rgb(246,27,36)" fg:x="97" fg:w="1"/><text x="8.0162%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="7.9263%" y="725" width="0.0801%" height="15" fill="rgb(216,188,42)" fg:x="99" fg:w="1"/><text x="8.1763%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="7.9263%" y="709" width="0.0801%" height="15" fill="rgb(234,205,22)" fg:x="99" fg:w="1"/><text x="8.1763%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.9263%" y="693" width="0.0801%" height="15" fill="rgb(210,202,32)" fg:x="99" fg:w="1"/><text x="8.1763%" y="703.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="7.9263%" y="741" width="0.1601%" height="15" fill="rgb(217,0,48)" fg:x="99" fg:w="2"/><text x="8.1763%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="8.0064%" y="725" width="0.0801%" height="15" fill="rgb(207,115,37)" fg:x="100" fg:w="1"/><text x="8.2564%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="8.0865%" y="725" width="0.0801%" height="15" fill="rgb(237,221,44)" fg:x="101" fg:w="1"/><text x="8.3365%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="8.0865%" y="709" width="0.0801%" height="15" fill="rgb(249,78,2)" fg:x="101" fg:w="1"/><text x="8.3365%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="8.0865%" y="693" width="0.0801%" height="15" fill="rgb(211,169,23)" fg:x="101" fg:w="1"/><text x="8.3365%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="8.0865%" y="677" width="0.0801%" height="15" fill="rgb(207,116,29)" fg:x="101" fg:w="1"/><text x="8.3365%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.0865%" y="661" width="0.0801%" height="15" fill="rgb(240,84,33)" fg:x="101" fg:w="1"/><text x="8.3365%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.0865%" y="645" width="0.0801%" height="15" fill="rgb(229,224,31)" fg:x="101" fg:w="1"/><text x="8.3365%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.0865%" y="629" width="0.0801%" height="15" fill="rgb(227,90,31)" fg:x="101" fg:w="1"/><text x="8.3365%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="7.9263%" y="757" width="0.8807%" height="15" fill="rgb(249,22,41)" fg:x="99" fg:w="11"/><text x="8.1763%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.72%)</title><rect x="8.0865%" y="741" width="0.7206%" height="15" fill="rgb(239,65,11)" fg:x="101" fg:w="9"/><text x="8.3365%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (8 samples, 0.64%)</title><rect x="8.1665%" y="725" width="0.6405%" height="15" fill="rgb(205,5,23)" fg:x="102" fg:w="8"/><text x="8.4165%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.64%)</title><rect x="8.1665%" y="709" width="0.6405%" height="15" fill="rgb(254,78,52)" fg:x="102" fg:w="8"/><text x="8.4165%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.64%)</title><rect x="8.1665%" y="693" width="0.6405%" height="15" fill="rgb(214,156,33)" fg:x="102" fg:w="8"/><text x="8.4165%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.64%)</title><rect x="8.1665%" y="677" width="0.6405%" height="15" fill="rgb(208,20,30)" fg:x="102" fg:w="8"/><text x="8.4165%" y="687.50"></text></g><g><title>__libc_malloc (8 samples, 0.64%)</title><rect x="8.1665%" y="661" width="0.6405%" height="15" fill="rgb(223,133,18)" fg:x="102" fg:w="8"/><text x="8.4165%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="8.8871%" y="661" width="0.1601%" height="15" fill="rgb(222,91,41)" fg:x="111" fg:w="2"/><text x="9.1371%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="8.8871%" y="645" width="0.1601%" height="15" fill="rgb(247,137,48)" fg:x="111" fg:w="2"/><text x="9.1371%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="8.8871%" y="629" width="0.1601%" height="15" fill="rgb(239,156,11)" fg:x="111" fg:w="2"/><text x="9.1371%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="8.8871%" y="613" width="0.1601%" height="15" fill="rgb(244,56,26)" fg:x="111" fg:w="2"/><text x="9.1371%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="8.8871%" y="709" width="0.3203%" height="15" fill="rgb(205,131,49)" fg:x="111" fg:w="4"/><text x="9.1371%" y="719.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="8.8871%" y="693" width="0.3203%" height="15" fill="rgb(224,0,2)" fg:x="111" fg:w="4"/><text x="9.1371%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="8.8871%" y="677" width="0.3203%" height="15" fill="rgb(247,59,36)" fg:x="111" fg:w="4"/><text x="9.1371%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="9.0472%" y="661" width="0.1601%" height="15" fill="rgb(215,4,47)" fg:x="113" fg:w="2"/><text x="9.2972%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.0472%" y="645" width="0.1601%" height="15" fill="rgb(242,72,42)" fg:x="113" fg:w="2"/><text x="9.2972%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="9.0472%" y="629" width="0.1601%" height="15" fill="rgb(232,145,44)" fg:x="113" fg:w="2"/><text x="9.2972%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.0472%" y="613" width="0.1601%" height="15" fill="rgb(205,108,43)" fg:x="113" fg:w="2"/><text x="9.2972%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="9.0472%" y="597" width="0.1601%" height="15" fill="rgb(215,190,17)" fg:x="113" fg:w="2"/><text x="9.2972%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.0472%" y="581" width="0.1601%" height="15" fill="rgb(223,90,34)" fg:x="113" fg:w="2"/><text x="9.2972%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.1273%" y="565" width="0.0801%" height="15" fill="rgb(216,25,0)" fg:x="114" fg:w="1"/><text x="9.3773%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.1273%" y="549" width="0.0801%" height="15" fill="rgb(223,51,28)" fg:x="114" fg:w="1"/><text x="9.3773%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="9.2074%" y="693" width="0.0801%" height="15" fill="rgb(227,131,7)" fg:x="115" fg:w="1"/><text x="9.4574%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.2074%" y="677" width="0.0801%" height="15" fill="rgb(216,72,36)" fg:x="115" fg:w="1"/><text x="9.4574%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="8.8070%" y="741" width="0.5604%" height="15" fill="rgb(243,158,40)" fg:x="110" fg:w="7"/><text x="9.0570%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="8.8070%" y="725" width="0.5604%" height="15" fill="rgb(218,60,54)" fg:x="110" fg:w="7"/><text x="9.0570%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="9.2074%" y="709" width="0.1601%" height="15" fill="rgb(230,15,46)" fg:x="115" fg:w="2"/><text x="9.4574%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="9.2874%" y="693" width="0.0801%" height="15" fill="rgb(250,22,26)" fg:x="116" fg:w="1"/><text x="9.5374%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="9.2874%" y="677" width="0.0801%" height="15" fill="rgb(239,194,40)" fg:x="116" fg:w="1"/><text x="9.5374%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.2874%" y="661" width="0.0801%" height="15" fill="rgb(219,62,9)" fg:x="116" fg:w="1"/><text x="9.5374%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.2874%" y="645" width="0.0801%" height="15" fill="rgb(228,45,21)" fg:x="116" fg:w="1"/><text x="9.5374%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="9.3675%" y="741" width="0.0801%" height="15" fill="rgb(242,56,44)" fg:x="117" fg:w="1"/><text x="9.6175%" y="751.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="9.3675%" y="725" width="0.0801%" height="15" fill="rgb(239,170,14)" fg:x="117" fg:w="1"/><text x="9.6175%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.3675%" y="709" width="0.0801%" height="15" fill="rgb(236,150,13)" fg:x="117" fg:w="1"/><text x="9.6175%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.3675%" y="693" width="0.0801%" height="15" fill="rgb(228,15,30)" fg:x="117" fg:w="1"/><text x="9.6175%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="9.3675%" y="677" width="0.0801%" height="15" fill="rgb(217,43,28)" fg:x="117" fg:w="1"/><text x="9.6175%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.3675%" y="661" width="0.0801%" height="15" fill="rgb(246,223,1)" fg:x="117" fg:w="1"/><text x="9.6175%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.3675%" y="645" width="0.0801%" height="15" fill="rgb(247,103,7)" fg:x="117" fg:w="1"/><text x="9.6175%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.3675%" y="629" width="0.0801%" height="15" fill="rgb(205,105,39)" fg:x="117" fg:w="1"/><text x="9.6175%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="9.5276%" y="629" width="0.1601%" height="15" fill="rgb(216,134,18)" fg:x="119" fg:w="2"/><text x="9.7776%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="9.5276%" y="613" width="0.1601%" height="15" fill="rgb(226,139,50)" fg:x="119" fg:w="2"/><text x="9.7776%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="9.5276%" y="597" width="0.1601%" height="15" fill="rgb(251,152,38)" fg:x="119" fg:w="2"/><text x="9.7776%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.6077%" y="581" width="0.0801%" height="15" fill="rgb(222,63,15)" fg:x="120" fg:w="1"/><text x="9.8577%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="9.5276%" y="645" width="0.2402%" height="15" fill="rgb(212,198,28)" fg:x="119" fg:w="3"/><text x="9.7776%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.6878%" y="629" width="0.0801%" height="15" fill="rgb(216,93,38)" fg:x="121" fg:w="1"/><text x="9.9378%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="9.5276%" y="693" width="0.3203%" height="15" fill="rgb(247,202,44)" fg:x="119" fg:w="4"/><text x="9.7776%" y="703.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="9.5276%" y="677" width="0.3203%" height="15" fill="rgb(237,204,46)" fg:x="119" fg:w="4"/><text x="9.7776%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="9.5276%" y="661" width="0.3203%" height="15" fill="rgb(224,98,48)" fg:x="119" fg:w="4"/><text x="9.7776%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.7678%" y="645" width="0.0801%" height="15" fill="rgb(247,105,21)" fg:x="122" fg:w="1"/><text x="10.0178%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="9.7678%" y="629" width="0.0801%" height="15" fill="rgb(212,137,52)" fg:x="122" fg:w="1"/><text x="10.0178%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.9279%" y="677" width="0.0801%" height="15" fill="rgb(223,76,33)" fg:x="124" fg:w="1"/><text x="10.1779%" y="687.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="10.0080%" y="677" width="0.0801%" height="15" fill="rgb(209,156,27)" fg:x="125" fg:w="1"/><text x="10.2580%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.1681%" y="645" width="0.0801%" height="15" fill="rgb(249,81,54)" fg:x="127" fg:w="1"/><text x="10.4181%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.1681%" y="629" width="0.0801%" height="15" fill="rgb(241,46,29)" fg:x="127" fg:w="1"/><text x="10.4181%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.1681%" y="613" width="0.0801%" height="15" fill="rgb(213,193,39)" fg:x="127" fg:w="1"/><text x="10.4181%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.1681%" y="597" width="0.0801%" height="15" fill="rgb(214,85,16)" fg:x="127" fg:w="1"/><text x="10.4181%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="10.1681%" y="581" width="0.0801%" height="15" fill="rgb(216,184,17)" fg:x="127" fg:w="1"/><text x="10.4181%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="10.1681%" y="565" width="0.0801%" height="15" fill="rgb(254,219,29)" fg:x="127" fg:w="1"/><text x="10.4181%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="10.1681%" y="549" width="0.0801%" height="15" fill="rgb(209,148,34)" fg:x="127" fg:w="1"/><text x="10.4181%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.1681%" y="533" width="0.0801%" height="15" fill="rgb(253,215,11)" fg:x="127" fg:w="1"/><text x="10.4181%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.1681%" y="517" width="0.0801%" height="15" fill="rgb(232,126,20)" fg:x="127" fg:w="1"/><text x="10.4181%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="10.1681%" y="501" width="0.0801%" height="15" fill="rgb(248,118,51)" fg:x="127" fg:w="1"/><text x="10.4181%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="10.1681%" y="485" width="0.0801%" height="15" fill="rgb(226,121,21)" fg:x="127" fg:w="1"/><text x="10.4181%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="10.1681%" y="469" width="0.0801%" height="15" fill="rgb(216,128,16)" fg:x="127" fg:w="1"/><text x="10.4181%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="10.1681%" y="453" width="0.0801%" height="15" fill="rgb(205,17,9)" fg:x="127" fg:w="1"/><text x="10.4181%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.1681%" y="437" width="0.0801%" height="15" fill="rgb(206,197,21)" fg:x="127" fg:w="1"/><text x="10.4181%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="10.2482%" y="581" width="0.0801%" height="15" fill="rgb(212,202,9)" fg:x="128" fg:w="1"/><text x="10.4982%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="10.3283%" y="549" width="0.0801%" height="15" fill="rgb(241,131,50)" fg:x="129" fg:w="1"/><text x="10.5783%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.3283%" y="533" width="0.0801%" height="15" fill="rgb(228,115,51)" fg:x="129" fg:w="1"/><text x="10.5783%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.3283%" y="517" width="0.0801%" height="15" fill="rgb(237,209,8)" fg:x="129" fg:w="1"/><text x="10.5783%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.4083%" y="517" width="0.0801%" height="15" fill="rgb(241,121,28)" fg:x="130" fg:w="1"/><text x="10.6583%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (14 samples, 1.12%)</title><rect x="9.4476%" y="741" width="1.1209%" height="15" fill="rgb(238,194,51)" fg:x="118" fg:w="14"/><text x="9.6976%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.04%)</title><rect x="9.5276%" y="725" width="1.0408%" height="15" fill="rgb(208,41,39)" fg:x="119" fg:w="13"/><text x="9.7776%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (13 samples, 1.04%)</title><rect x="9.5276%" y="709" width="1.0408%" height="15" fill="rgb(223,95,44)" fg:x="119" fg:w="13"/><text x="9.7776%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.72%)</title><rect x="9.8479%" y="693" width="0.7206%" height="15" fill="rgb(253,98,40)" fg:x="123" fg:w="9"/><text x="10.0979%" y="703.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="10.0881%" y="677" width="0.4804%" height="15" fill="rgb(210,5,12)" fg:x="126" fg:w="6"/><text x="10.3381%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="10.0881%" y="661" width="0.4804%" height="15" fill="rgb(233,201,23)" fg:x="126" fg:w="6"/><text x="10.3381%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="10.2482%" y="645" width="0.3203%" height="15" fill="rgb(251,68,15)" fg:x="128" fg:w="4"/><text x="10.4982%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="10.2482%" y="629" width="0.3203%" height="15" fill="rgb(243,10,46)" fg:x="128" fg:w="4"/><text x="10.4982%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="10.2482%" y="613" width="0.3203%" height="15" fill="rgb(253,130,44)" fg:x="128" fg:w="4"/><text x="10.4982%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="10.2482%" y="597" width="0.3203%" height="15" fill="rgb(244,5,26)" fg:x="128" fg:w="4"/><text x="10.4982%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="10.3283%" y="581" width="0.2402%" height="15" fill="rgb(220,126,20)" fg:x="129" fg:w="3"/><text x="10.5783%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="10.3283%" y="565" width="0.2402%" height="15" fill="rgb(212,188,29)" fg:x="129" fg:w="3"/><text x="10.5783%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="10.4083%" y="549" width="0.1601%" height="15" fill="rgb(227,194,48)" fg:x="130" fg:w="2"/><text x="10.6583%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="10.4083%" y="533" width="0.1601%" height="15" fill="rgb(245,64,28)" fg:x="130" fg:w="2"/><text x="10.6583%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.4884%" y="517" width="0.0801%" height="15" fill="rgb(205,44,7)" fg:x="131" fg:w="1"/><text x="10.7384%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.4884%" y="501" width="0.0801%" height="15" fill="rgb(213,193,11)" fg:x="131" fg:w="1"/><text x="10.7384%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.4884%" y="485" width="0.0801%" height="15" fill="rgb(238,157,6)" fg:x="131" fg:w="1"/><text x="10.7384%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.4884%" y="469" width="0.0801%" height="15" fill="rgb(222,73,7)" fg:x="131" fg:w="1"/><text x="10.7384%" y="479.50"></text></g><g><title>plugins_core::build::Build::holding (35 samples, 2.80%)</title><rect x="7.8463%" y="773" width="2.8022%" height="15" fill="rgb(224,78,15)" fg:x="98" fg:w="35"/><text x="8.0963%" y="783.50">pl..</text></g><g><title>plugins_core::tools::set_container (23 samples, 1.84%)</title><rect x="8.8070%" y="757" width="1.8415%" height="15" fill="rgb(218,149,46)" fg:x="110" fg:w="23"/><text x="9.0570%" y="767.50">p..</text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="10.5685%" y="741" width="0.0801%" height="15" fill="rgb(218,175,44)" fg:x="132" fg:w="1"/><text x="10.8185%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="10.5685%" y="725" width="0.0801%" height="15" fill="rgb(215,183,45)" fg:x="132" fg:w="1"/><text x="10.8185%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::entity (1 samples, 0.08%)</title><rect x="10.5685%" y="709" width="0.0801%" height="15" fill="rgb(226,116,37)" fg:x="132" fg:w="1"/><text x="10.8185%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="10.8887%" y="741" width="0.0801%" height="15" fill="rgb(252,224,12)" fg:x="136" fg:w="1"/><text x="11.1387%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="10.8887%" y="725" width="0.0801%" height="15" fill="rgb(232,212,21)" fg:x="136" fg:w="1"/><text x="11.1387%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="10.8887%" y="709" width="0.0801%" height="15" fill="rgb(226,191,16)" fg:x="136" fg:w="1"/><text x="11.1387%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="10.8887%" y="693" width="0.0801%" height="15" fill="rgb(231,156,11)" fg:x="136" fg:w="1"/><text x="11.1387%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="10.8887%" y="677" width="0.0801%" height="15" fill="rgb(225,134,49)" fg:x="136" fg:w="1"/><text x="11.1387%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="10.8887%" y="661" width="0.0801%" height="15" fill="rgb(254,55,32)" fg:x="136" fg:w="1"/><text x="11.1387%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="10.8887%" y="645" width="0.0801%" height="15" fill="rgb(242,195,29)" fg:x="136" fg:w="1"/><text x="11.1387%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="10.8887%" y="629" width="0.0801%" height="15" fill="rgb(210,155,20)" fg:x="136" fg:w="1"/><text x="11.1387%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="10.8887%" y="613" width="0.0801%" height="15" fill="rgb(243,170,23)" fg:x="136" fg:w="1"/><text x="11.1387%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="10.8887%" y="597" width="0.0801%" height="15" fill="rgb(242,197,51)" fg:x="136" fg:w="1"/><text x="11.1387%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="10.8887%" y="581" width="0.0801%" height="15" fill="rgb(248,48,13)" fg:x="136" fg:w="1"/><text x="11.1387%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="10.8887%" y="565" width="0.0801%" height="15" fill="rgb(221,185,15)" fg:x="136" fg:w="1"/><text x="11.1387%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="10.8887%" y="549" width="0.0801%" height="15" fill="rgb(244,49,7)" fg:x="136" fg:w="1"/><text x="11.1387%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.8887%" y="533" width="0.0801%" height="15" fill="rgb(213,182,52)" fg:x="136" fg:w="1"/><text x="11.1387%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.0488%" y="629" width="0.0801%" height="15" fill="rgb(209,15,45)" fg:x="138" fg:w="1"/><text x="11.2988%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="10.9688%" y="693" width="0.2402%" height="15" fill="rgb(233,23,44)" fg:x="137" fg:w="3"/><text x="11.2188%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="10.9688%" y="677" width="0.2402%" height="15" fill="rgb(220,182,30)" fg:x="137" fg:w="3"/><text x="11.2188%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="10.9688%" y="661" width="0.2402%" height="15" fill="rgb(219,116,33)" fg:x="137" fg:w="3"/><text x="11.2188%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="10.9688%" y="645" width="0.2402%" height="15" fill="rgb(231,15,21)" fg:x="137" fg:w="3"/><text x="11.2188%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.1289%" y="629" width="0.0801%" height="15" fill="rgb(238,119,25)" fg:x="139" fg:w="1"/><text x="11.3789%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.1289%" y="613" width="0.0801%" height="15" fill="rgb(232,30,39)" fg:x="139" fg:w="1"/><text x="11.3789%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.1289%" y="597" width="0.0801%" height="15" fill="rgb(241,26,30)" fg:x="139" fg:w="1"/><text x="11.3789%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.1289%" y="581" width="0.0801%" height="15" fill="rgb(234,154,4)" fg:x="139" fg:w="1"/><text x="11.3789%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.1289%" y="565" width="0.0801%" height="15" fill="rgb(229,199,39)" fg:x="139" fg:w="1"/><text x="11.3789%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.1289%" y="549" width="0.0801%" height="15" fill="rgb(236,213,10)" fg:x="139" fg:w="1"/><text x="11.3789%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.1289%" y="533" width="0.0801%" height="15" fill="rgb(247,28,19)" fg:x="139" fg:w="1"/><text x="11.3789%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.1289%" y="517" width="0.0801%" height="15" fill="rgb(239,199,24)" fg:x="139" fg:w="1"/><text x="11.3789%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.1289%" y="501" width="0.0801%" height="15" fill="rgb(246,122,13)" fg:x="139" fg:w="1"/><text x="11.3789%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.1289%" y="485" width="0.0801%" height="15" fill="rgb(210,203,29)" fg:x="139" fg:w="1"/><text x="11.3789%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.1289%" y="469" width="0.0801%" height="15" fill="rgb(218,4,50)" fg:x="139" fg:w="1"/><text x="11.3789%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.1289%" y="453" width="0.0801%" height="15" fill="rgb(236,142,48)" fg:x="139" fg:w="1"/><text x="11.3789%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.2090%" y="693" width="0.0801%" height="15" fill="rgb(245,173,2)" fg:x="140" fg:w="1"/><text x="11.4590%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="11.2090%" y="677" width="0.0801%" height="15" fill="rgb(244,196,18)" fg:x="140" fg:w="1"/><text x="11.4590%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.2890%" y="693" width="0.0801%" height="15" fill="rgb(221,27,33)" fg:x="141" fg:w="1"/><text x="11.5390%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.2890%" y="677" width="0.0801%" height="15" fill="rgb(210,206,16)" fg:x="141" fg:w="1"/><text x="11.5390%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.2890%" y="661" width="0.0801%" height="15" fill="rgb(238,161,34)" fg:x="141" fg:w="1"/><text x="11.5390%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.2890%" y="645" width="0.0801%" height="15" fill="rgb(243,118,39)" fg:x="141" fg:w="1"/><text x="11.5390%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.2890%" y="629" width="0.0801%" height="15" fill="rgb(234,126,9)" fg:x="141" fg:w="1"/><text x="11.5390%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2890%" y="613" width="0.0801%" height="15" fill="rgb(234,167,42)" fg:x="141" fg:w="1"/><text x="11.5390%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="10.9688%" y="741" width="0.4804%" height="15" fill="rgb(238,54,48)" fg:x="137" fg:w="6"/><text x="11.2188%" y="751.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="10.9688%" y="725" width="0.4804%" height="15" fill="rgb(226,105,2)" fg:x="137" fg:w="6"/><text x="11.2188%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="10.9688%" y="709" width="0.4804%" height="15" fill="rgb(223,95,23)" fg:x="137" fg:w="6"/><text x="11.2188%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.3691%" y="693" width="0.0801%" height="15" fill="rgb(249,212,19)" fg:x="142" fg:w="1"/><text x="11.6191%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.3691%" y="677" width="0.0801%" height="15" fill="rgb(234,158,54)" fg:x="142" fg:w="1"/><text x="11.6191%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.3691%" y="661" width="0.0801%" height="15" fill="rgb(247,114,32)" fg:x="142" fg:w="1"/><text x="11.6191%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.3691%" y="645" width="0.0801%" height="15" fill="rgb(250,68,44)" fg:x="142" fg:w="1"/><text x="11.6191%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.3691%" y="629" width="0.0801%" height="15" fill="rgb(242,3,15)" fg:x="142" fg:w="1"/><text x="11.6191%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="11.4492%" y="741" width="0.0801%" height="15" fill="rgb(223,110,32)" fg:x="143" fg:w="1"/><text x="11.6992%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="11.4492%" y="725" width="0.0801%" height="15" fill="rgb(216,26,54)" fg:x="143" fg:w="1"/><text x="11.6992%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.4492%" y="709" width="0.0801%" height="15" fill="rgb(209,145,42)" fg:x="143" fg:w="1"/><text x="11.6992%" y="719.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.4492%" y="693" width="0.0801%" height="15" fill="rgb(240,111,53)" fg:x="143" fg:w="1"/><text x="11.6992%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.4492%" y="677" width="0.0801%" height="15" fill="rgb(209,101,4)" fg:x="143" fg:w="1"/><text x="11.6992%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.4492%" y="661" width="0.0801%" height="15" fill="rgb(231,74,29)" fg:x="143" fg:w="1"/><text x="11.6992%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="11.5292%" y="693" width="0.0801%" height="15" fill="rgb(223,12,12)" fg:x="144" fg:w="1"/><text x="11.7792%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.5292%" y="677" width="0.0801%" height="15" fill="rgb(207,162,2)" fg:x="144" fg:w="1"/><text x="11.7792%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.5292%" y="661" width="0.0801%" height="15" fill="rgb(230,152,0)" fg:x="144" fg:w="1"/><text x="11.7792%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.5292%" y="645" width="0.0801%" height="15" fill="rgb(254,156,19)" fg:x="144" fg:w="1"/><text x="11.7792%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.6093%" y="661" width="0.0801%" height="15" fill="rgb(250,28,0)" fg:x="145" fg:w="1"/><text x="11.8593%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.6093%" y="645" width="0.0801%" height="15" fill="rgb(253,27,5)" fg:x="145" fg:w="1"/><text x="11.8593%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.6093%" y="629" width="0.0801%" height="15" fill="rgb(244,154,7)" fg:x="145" fg:w="1"/><text x="11.8593%" y="639.50"></text></g><g><title>plugins_core::build::Build::into_entry (14 samples, 1.12%)</title><rect x="10.6485%" y="773" width="1.1209%" height="15" fill="rgb(242,108,21)" fg:x="133" fg:w="14"/><text x="10.8985%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.04%)</title><rect x="10.7286%" y="757" width="1.0408%" height="15" fill="rgb(254,200,38)" fg:x="134" fg:w="13"/><text x="10.9786%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="11.5292%" y="741" width="0.2402%" height="15" fill="rgb(250,145,41)" fg:x="144" fg:w="3"/><text x="11.7792%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="11.5292%" y="725" width="0.2402%" height="15" fill="rgb(235,136,31)" fg:x="144" fg:w="3"/><text x="11.7792%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="11.5292%" y="709" width="0.2402%" height="15" fill="rgb(215,13,18)" fg:x="144" fg:w="3"/><text x="11.7792%" y="719.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="11.6093%" y="693" width="0.1601%" height="15" fill="rgb(238,199,12)" fg:x="145" fg:w="2"/><text x="11.8593%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="11.6093%" y="677" width="0.1601%" height="15" fill="rgb(242,179,49)" fg:x="145" fg:w="2"/><text x="11.8593%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="11.6894%" y="661" width="0.0801%" height="15" fill="rgb(214,10,44)" fg:x="146" fg:w="1"/><text x="11.9394%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.6894%" y="645" width="0.0801%" height="15" fill="rgb(229,181,11)" fg:x="146" fg:w="1"/><text x="11.9394%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.6894%" y="629" width="0.0801%" height="15" fill="rgb(244,155,10)" fg:x="146" fg:w="1"/><text x="11.9394%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.6894%" y="613" width="0.0801%" height="15" fill="rgb(254,13,48)" fg:x="146" fg:w="1"/><text x="11.9394%" y="623.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="11.6894%" y="597" width="0.0801%" height="15" fill="rgb(210,164,6)" fg:x="146" fg:w="1"/><text x="11.9394%" y="607.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="11.6894%" y="581" width="0.0801%" height="15" fill="rgb(216,187,40)" fg:x="146" fg:w="1"/><text x="11.9394%" y="591.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="11.7694%" y="773" width="0.0801%" height="15" fill="rgb(208,143,21)" fg:x="147" fg:w="1"/><text x="12.0194%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="11.7694%" y="757" width="0.0801%" height="15" fill="rgb(211,73,41)" fg:x="147" fg:w="1"/><text x="12.0194%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="11.7694%" y="741" width="0.0801%" height="15" fill="rgb(244,69,21)" fg:x="147" fg:w="1"/><text x="12.0194%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="11.7694%" y="725" width="0.0801%" height="15" fill="rgb(230,152,32)" fg:x="147" fg:w="1"/><text x="12.0194%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="11.7694%" y="709" width="0.0801%" height="15" fill="rgb(208,110,18)" fg:x="147" fg:w="1"/><text x="12.0194%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.7694%" y="693" width="0.0801%" height="15" fill="rgb(214,201,49)" fg:x="147" fg:w="1"/><text x="12.0194%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="11.7694%" y="677" width="0.0801%" height="15" fill="rgb(253,153,27)" fg:x="147" fg:w="1"/><text x="12.0194%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.7694%" y="661" width="0.0801%" height="15" fill="rgb(238,61,11)" fg:x="147" fg:w="1"/><text x="12.0194%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="11.7694%" y="645" width="0.0801%" height="15" fill="rgb(227,84,2)" fg:x="147" fg:w="1"/><text x="12.0194%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="11.7694%" y="629" width="0.0801%" height="15" fill="rgb(233,52,8)" fg:x="147" fg:w="1"/><text x="12.0194%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="11.7694%" y="613" width="0.0801%" height="15" fill="rgb(209,136,13)" fg:x="147" fg:w="1"/><text x="12.0194%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="11.9295%" y="757" width="0.1601%" height="15" fill="rgb(229,86,25)" fg:x="149" fg:w="2"/><text x="12.1795%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="11.9295%" y="741" width="0.1601%" height="15" fill="rgb(235,47,16)" fg:x="149" fg:w="2"/><text x="12.1795%" y="751.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="11.9295%" y="725" width="0.1601%" height="15" fill="rgb(231,186,4)" fg:x="149" fg:w="2"/><text x="12.1795%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="11.9295%" y="709" width="0.1601%" height="15" fill="rgb(209,213,23)" fg:x="149" fg:w="2"/><text x="12.1795%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="11.9295%" y="693" width="0.1601%" height="15" fill="rgb(212,142,47)" fg:x="149" fg:w="2"/><text x="12.1795%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="11.9295%" y="677" width="0.1601%" height="15" fill="rgb(251,86,24)" fg:x="149" fg:w="2"/><text x="12.1795%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="11.9295%" y="661" width="0.1601%" height="15" fill="rgb(206,217,17)" fg:x="149" fg:w="2"/><text x="12.1795%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="11.9295%" y="645" width="0.1601%" height="15" fill="rgb(248,92,38)" fg:x="149" fg:w="2"/><text x="12.1795%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="11.9295%" y="629" width="0.1601%" height="15" fill="rgb(214,25,29)" fg:x="149" fg:w="2"/><text x="12.1795%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="11.9295%" y="613" width="0.1601%" height="15" fill="rgb(245,117,13)" fg:x="149" fg:w="2"/><text x="12.1795%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="11.9295%" y="597" width="0.1601%" height="15" fill="rgb(205,169,9)" fg:x="149" fg:w="2"/><text x="12.1795%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="11.9295%" y="581" width="0.1601%" height="15" fill="rgb(223,134,38)" fg:x="149" fg:w="2"/><text x="12.1795%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="11.9295%" y="565" width="0.1601%" height="15" fill="rgb(249,129,49)" fg:x="149" fg:w="2"/><text x="12.1795%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="11.9295%" y="549" width="0.1601%" height="15" fill="rgb(229,157,45)" fg:x="149" fg:w="2"/><text x="12.1795%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0096%" y="533" width="0.0801%" height="15" fill="rgb(232,159,11)" fg:x="150" fg:w="1"/><text x="12.2596%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="12.0897%" y="741" width="0.0801%" height="15" fill="rgb(230,134,26)" fg:x="151" fg:w="1"/><text x="12.3397%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="12.0897%" y="725" width="0.0801%" height="15" fill="rgb(234,149,40)" fg:x="151" fg:w="1"/><text x="12.3397%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="12.0897%" y="709" width="0.0801%" height="15" fill="rgb(221,122,15)" fg:x="151" fg:w="1"/><text x="12.3397%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="12.0897%" y="693" width="0.0801%" height="15" fill="rgb(228,127,0)" fg:x="151" fg:w="1"/><text x="12.3397%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.0897%" y="677" width="0.0801%" height="15" fill="rgb(248,37,7)" fg:x="151" fg:w="1"/><text x="12.3397%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.0897%" y="661" width="0.0801%" height="15" fill="rgb(215,140,49)" fg:x="151" fg:w="1"/><text x="12.3397%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="12.0897%" y="645" width="0.0801%" height="15" fill="rgb(236,65,39)" fg:x="151" fg:w="1"/><text x="12.3397%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.0897%" y="629" width="0.0801%" height="15" fill="rgb(253,102,38)" fg:x="151" fg:w="1"/><text x="12.3397%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.0897%" y="613" width="0.0801%" height="15" fill="rgb(244,100,34)" fg:x="151" fg:w="1"/><text x="12.3397%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.0897%" y="597" width="0.0801%" height="15" fill="rgb(210,179,47)" fg:x="151" fg:w="1"/><text x="12.3397%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="12.0897%" y="581" width="0.0801%" height="15" fill="rgb(231,41,37)" fg:x="151" fg:w="1"/><text x="12.3397%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.0897%" y="565" width="0.0801%" height="15" fill="rgb(226,209,17)" fg:x="151" fg:w="1"/><text x="12.3397%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.0897%" y="549" width="0.0801%" height="15" fill="rgb(231,154,20)" fg:x="151" fg:w="1"/><text x="12.3397%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.1697%" y="693" width="0.0801%" height="15" fill="rgb(216,134,24)" fg:x="152" fg:w="1"/><text x="12.4197%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.1697%" y="677" width="0.0801%" height="15" fill="rgb(224,71,42)" fg:x="152" fg:w="1"/><text x="12.4197%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.1697%" y="661" width="0.0801%" height="15" fill="rgb(250,65,23)" fg:x="152" fg:w="1"/><text x="12.4197%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.1697%" y="645" width="0.0801%" height="15" fill="rgb(209,160,35)" fg:x="152" fg:w="1"/><text x="12.4197%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.1697%" y="629" width="0.0801%" height="15" fill="rgb(215,8,11)" fg:x="152" fg:w="1"/><text x="12.4197%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.1697%" y="613" width="0.0801%" height="15" fill="rgb(227,27,12)" fg:x="152" fg:w="1"/><text x="12.4197%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.1697%" y="597" width="0.0801%" height="15" fill="rgb(226,111,41)" fg:x="152" fg:w="1"/><text x="12.4197%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.1697%" y="581" width="0.0801%" height="15" fill="rgb(212,195,15)" fg:x="152" fg:w="1"/><text x="12.4197%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="12.0897%" y="757" width="0.2402%" height="15" fill="rgb(216,191,17)" fg:x="151" fg:w="3"/><text x="12.3397%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="12.1697%" y="741" width="0.1601%" height="15" fill="rgb(215,57,44)" fg:x="152" fg:w="2"/><text x="12.4197%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="12.1697%" y="725" width="0.1601%" height="15" fill="rgb(209,38,4)" fg:x="152" fg:w="2"/><text x="12.4197%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.1697%" y="709" width="0.1601%" height="15" fill="rgb(238,49,31)" fg:x="152" fg:w="2"/><text x="12.4197%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.2498%" y="693" width="0.0801%" height="15" fill="rgb(219,48,39)" fg:x="153" fg:w="1"/><text x="12.4998%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.2498%" y="677" width="0.0801%" height="15" fill="rgb(252,223,43)" fg:x="153" fg:w="1"/><text x="12.4998%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.2498%" y="661" width="0.0801%" height="15" fill="rgb(247,205,46)" fg:x="153" fg:w="1"/><text x="12.4998%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="12.4099%" y="677" width="0.0801%" height="15" fill="rgb(231,16,40)" fg:x="155" fg:w="1"/><text x="12.6599%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="12.4099%" y="661" width="0.0801%" height="15" fill="rgb(231,115,5)" fg:x="155" fg:w="1"/><text x="12.6599%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="12.4099%" y="645" width="0.0801%" height="15" fill="rgb(206,127,43)" fg:x="155" fg:w="1"/><text x="12.6599%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="12.4099%" y="629" width="0.0801%" height="15" fill="rgb(218,101,9)" fg:x="155" fg:w="1"/><text x="12.6599%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.4099%" y="613" width="0.0801%" height="15" fill="rgb(235,138,50)" fg:x="155" fg:w="1"/><text x="12.6599%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.4099%" y="597" width="0.0801%" height="15" fill="rgb(214,197,52)" fg:x="155" fg:w="1"/><text x="12.6599%" y="607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="12.4099%" y="581" width="0.0801%" height="15" fill="rgb(230,80,19)" fg:x="155" fg:w="1"/><text x="12.6599%" y="591.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="12.4099%" y="565" width="0.0801%" height="15" fill="rgb(224,77,16)" fg:x="155" fg:w="1"/><text x="12.6599%" y="575.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="12.4099%" y="549" width="0.0801%" height="15" fill="rgb(246,4,13)" fg:x="155" fg:w="1"/><text x="12.6599%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="12.3299%" y="709" width="0.2402%" height="15" fill="rgb(220,177,26)" fg:x="154" fg:w="3"/><text x="12.5799%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="12.4099%" y="693" width="0.1601%" height="15" fill="rgb(215,114,45)" fg:x="155" fg:w="2"/><text x="12.6599%" y="703.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="12.4900%" y="677" width="0.0801%" height="15" fill="rgb(215,71,54)" fg:x="156" fg:w="1"/><text x="12.7400%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="12.4900%" y="661" width="0.0801%" height="15" fill="rgb(211,155,22)" fg:x="156" fg:w="1"/><text x="12.7400%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.4900%" y="645" width="0.0801%" height="15" fill="rgb(245,206,18)" fg:x="156" fg:w="1"/><text x="12.7400%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="12.5701%" y="677" width="0.0801%" height="15" fill="rgb(248,216,48)" fg:x="157" fg:w="1"/><text x="12.8201%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="12.5701%" y="661" width="0.0801%" height="15" fill="rgb(244,84,45)" fg:x="157" fg:w="1"/><text x="12.8201%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7302%" y="581" width="0.0801%" height="15" fill="rgb(245,13,45)" fg:x="159" fg:w="1"/><text x="12.9802%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7302%" y="565" width="0.0801%" height="15" fill="rgb(247,163,2)" fg:x="159" fg:w="1"/><text x="12.9802%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7302%" y="549" width="0.0801%" height="15" fill="rgb(211,175,10)" fg:x="159" fg:w="1"/><text x="12.9802%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.7302%" y="533" width="0.0801%" height="15" fill="rgb(215,186,31)" fg:x="159" fg:w="1"/><text x="12.9802%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.7302%" y="517" width="0.0801%" height="15" fill="rgb(207,42,11)" fg:x="159" fg:w="1"/><text x="12.9802%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.7302%" y="501" width="0.0801%" height="15" fill="rgb(224,197,20)" fg:x="159" fg:w="1"/><text x="12.9802%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="12.7302%" y="485" width="0.0801%" height="15" fill="rgb(244,119,36)" fg:x="159" fg:w="1"/><text x="12.9802%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="12.7302%" y="469" width="0.0801%" height="15" fill="rgb(250,60,27)" fg:x="159" fg:w="1"/><text x="12.9802%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="12.5701%" y="709" width="0.3203%" height="15" fill="rgb(252,202,1)" fg:x="157" fg:w="4"/><text x="12.8201%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="12.5701%" y="693" width="0.3203%" height="15" fill="rgb(206,53,25)" fg:x="157" fg:w="4"/><text x="12.8201%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="12.6501%" y="677" width="0.2402%" height="15" fill="rgb(210,88,4)" fg:x="158" fg:w="3"/><text x="12.9001%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="12.6501%" y="661" width="0.2402%" height="15" fill="rgb(211,144,28)" fg:x="158" fg:w="3"/><text x="12.9001%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="12.6501%" y="645" width="0.2402%" height="15" fill="rgb(247,81,32)" fg:x="158" fg:w="3"/><text x="12.9001%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.6501%" y="629" width="0.2402%" height="15" fill="rgb(225,192,11)" fg:x="158" fg:w="3"/><text x="12.9001%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.7302%" y="613" width="0.1601%" height="15" fill="rgb(232,212,27)" fg:x="159" fg:w="2"/><text x="12.9802%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.7302%" y="597" width="0.1601%" height="15" fill="rgb(239,3,29)" fg:x="159" fg:w="2"/><text x="12.9802%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.8102%" y="581" width="0.0801%" height="15" fill="rgb(252,225,29)" fg:x="160" fg:w="1"/><text x="13.0602%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.8102%" y="565" width="0.0801%" height="15" fill="rgb(205,151,9)" fg:x="160" fg:w="1"/><text x="13.0602%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.8102%" y="549" width="0.0801%" height="15" fill="rgb(216,171,47)" fg:x="160" fg:w="1"/><text x="13.0602%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.8102%" y="533" width="0.0801%" height="15" fill="rgb(206,181,1)" fg:x="160" fg:w="1"/><text x="13.0602%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.8102%" y="517" width="0.0801%" height="15" fill="rgb(232,218,10)" fg:x="160" fg:w="1"/><text x="13.0602%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="12.8102%" y="501" width="0.0801%" height="15" fill="rgb(244,222,51)" fg:x="160" fg:w="1"/><text x="13.0602%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="12.8102%" y="485" width="0.0801%" height="15" fill="rgb(252,215,16)" fg:x="160" fg:w="1"/><text x="13.0602%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="12.8903%" y="677" width="0.0801%" height="15" fill="rgb(212,130,13)" fg:x="161" fg:w="1"/><text x="13.1403%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="12.8903%" y="661" width="0.0801%" height="15" fill="rgb(227,103,37)" fg:x="161" fg:w="1"/><text x="13.1403%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="12.8903%" y="645" width="0.0801%" height="15" fill="rgb(249,48,15)" fg:x="161" fg:w="1"/><text x="13.1403%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="12.8903%" y="629" width="0.0801%" height="15" fill="rgb(225,96,9)" fg:x="161" fg:w="1"/><text x="13.1403%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.8903%" y="613" width="0.0801%" height="15" fill="rgb(213,81,41)" fg:x="161" fg:w="1"/><text x="13.1403%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.8903%" y="597" width="0.0801%" height="15" fill="rgb(230,15,12)" fg:x="161" fg:w="1"/><text x="13.1403%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="12.8903%" y="581" width="0.0801%" height="15" fill="rgb(218,106,37)" fg:x="161" fg:w="1"/><text x="13.1403%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.8903%" y="565" width="0.0801%" height="15" fill="rgb(223,172,47)" fg:x="161" fg:w="1"/><text x="13.1403%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.8903%" y="549" width="0.0801%" height="15" fill="rgb(246,180,49)" fg:x="161" fg:w="1"/><text x="13.1403%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.8903%" y="533" width="0.0801%" height="15" fill="rgb(231,63,37)" fg:x="161" fg:w="1"/><text x="13.1403%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="12.8903%" y="517" width="0.0801%" height="15" fill="rgb(235,70,40)" fg:x="161" fg:w="1"/><text x="13.1403%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.8903%" y="501" width="0.0801%" height="15" fill="rgb(250,54,26)" fg:x="161" fg:w="1"/><text x="13.1403%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.8903%" y="485" width="0.0801%" height="15" fill="rgb(214,190,1)" fg:x="161" fg:w="1"/><text x="13.1403%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="12.8903%" y="469" width="0.0801%" height="15" fill="rgb(212,40,35)" fg:x="161" fg:w="1"/><text x="13.1403%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="12.9704%" y="501" width="0.0801%" height="15" fill="rgb(239,183,47)" fg:x="162" fg:w="1"/><text x="13.2204%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.9704%" y="485" width="0.0801%" height="15" fill="rgb(211,171,49)" fg:x="162" fg:w="1"/><text x="13.2204%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="12.9704%" y="677" width="0.1601%" height="15" fill="rgb(249,186,27)" fg:x="162" fg:w="2"/><text x="13.2204%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="12.9704%" y="661" width="0.1601%" height="15" fill="rgb(223,23,48)" fg:x="162" fg:w="2"/><text x="13.2204%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.9704%" y="645" width="0.1601%" height="15" fill="rgb(209,203,21)" fg:x="162" fg:w="2"/><text x="13.2204%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.9704%" y="629" width="0.1601%" height="15" fill="rgb(229,33,27)" fg:x="162" fg:w="2"/><text x="13.2204%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.9704%" y="613" width="0.1601%" height="15" fill="rgb(207,8,53)" fg:x="162" fg:w="2"/><text x="13.2204%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.9704%" y="597" width="0.1601%" height="15" fill="rgb(221,42,0)" fg:x="162" fg:w="2"/><text x="13.2204%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.9704%" y="581" width="0.1601%" height="15" fill="rgb(223,115,3)" fg:x="162" fg:w="2"/><text x="13.2204%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="12.9704%" y="565" width="0.1601%" height="15" fill="rgb(239,35,26)" fg:x="162" fg:w="2"/><text x="13.2204%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.9704%" y="549" width="0.1601%" height="15" fill="rgb(233,22,9)" fg:x="162" fg:w="2"/><text x="13.2204%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.9704%" y="533" width="0.1601%" height="15" fill="rgb(236,221,48)" fg:x="162" fg:w="2"/><text x="13.2204%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.9704%" y="517" width="0.1601%" height="15" fill="rgb(235,52,30)" fg:x="162" fg:w="2"/><text x="13.2204%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.0504%" y="501" width="0.0801%" height="15" fill="rgb(238,133,51)" fg:x="163" fg:w="1"/><text x="13.3004%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.0504%" y="485" width="0.0801%" height="15" fill="rgb(213,122,23)" fg:x="163" fg:w="1"/><text x="13.3004%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.0504%" y="469" width="0.0801%" height="15" fill="rgb(225,8,15)" fg:x="163" fg:w="1"/><text x="13.3004%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="12.8903%" y="693" width="0.3203%" height="15" fill="rgb(219,126,35)" fg:x="161" fg:w="4"/><text x="13.1403%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="13.1305%" y="677" width="0.0801%" height="15" fill="rgb(246,113,21)" fg:x="164" fg:w="1"/><text x="13.3805%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="13.1305%" y="661" width="0.0801%" height="15" fill="rgb(241,193,32)" fg:x="164" fg:w="1"/><text x="13.3805%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="13.1305%" y="645" width="0.0801%" height="15" fill="rgb(218,99,18)" fg:x="164" fg:w="1"/><text x="13.3805%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="13.1305%" y="629" width="0.0801%" height="15" fill="rgb(225,114,4)" fg:x="164" fg:w="1"/><text x="13.3805%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="13.1305%" y="613" width="0.0801%" height="15" fill="rgb(235,0,15)" fg:x="164" fg:w="1"/><text x="13.3805%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.1305%" y="597" width="0.0801%" height="15" fill="rgb(247,45,27)" fg:x="164" fg:w="1"/><text x="13.3805%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1305%" y="581" width="0.0801%" height="15" fill="rgb(249,88,53)" fg:x="164" fg:w="1"/><text x="13.3805%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="13.2106%" y="693" width="0.0801%" height="15" fill="rgb(207,58,45)" fg:x="165" fg:w="1"/><text x="13.4606%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="13.2106%" y="677" width="0.0801%" height="15" fill="rgb(216,7,11)" fg:x="165" fg:w="1"/><text x="13.4606%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.2106%" y="661" width="0.0801%" height="15" fill="rgb(230,40,33)" fg:x="165" fg:w="1"/><text x="13.4606%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="13.2906%" y="645" width="0.0801%" height="15" fill="rgb(232,24,46)" fg:x="166" fg:w="1"/><text x="13.5406%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="13.2906%" y="629" width="0.0801%" height="15" fill="rgb(219,222,45)" fg:x="166" fg:w="1"/><text x="13.5406%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.2906%" y="613" width="0.0801%" height="15" fill="rgb(229,85,44)" fg:x="166" fg:w="1"/><text x="13.5406%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2906%" y="597" width="0.0801%" height="15" fill="rgb(243,71,36)" fg:x="166" fg:w="1"/><text x="13.5406%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2906%" y="581" width="0.0801%" height="15" fill="rgb(230,203,45)" fg:x="166" fg:w="1"/><text x="13.5406%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2906%" y="565" width="0.0801%" height="15" fill="rgb(224,77,49)" fg:x="166" fg:w="1"/><text x="13.5406%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2906%" y="549" width="0.0801%" height="15" fill="rgb(210,186,47)" fg:x="166" fg:w="1"/><text x="13.5406%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.2906%" y="533" width="0.0801%" height="15" fill="rgb(232,146,10)" fg:x="166" fg:w="1"/><text x="13.5406%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2906%" y="517" width="0.0801%" height="15" fill="rgb(236,185,51)" fg:x="166" fg:w="1"/><text x="13.5406%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2906%" y="501" width="0.0801%" height="15" fill="rgb(223,206,43)" fg:x="166" fg:w="1"/><text x="13.5406%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2906%" y="485" width="0.0801%" height="15" fill="rgb(227,212,9)" fg:x="166" fg:w="1"/><text x="13.5406%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.2906%" y="469" width="0.0801%" height="15" fill="rgb(205,82,3)" fg:x="166" fg:w="1"/><text x="13.5406%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.3707%" y="597" width="0.0801%" height="15" fill="rgb(214,2,27)" fg:x="167" fg:w="1"/><text x="13.6207%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.3707%" y="581" width="0.0801%" height="15" fill="rgb(241,37,22)" fg:x="167" fg:w="1"/><text x="13.6207%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.3707%" y="565" width="0.0801%" height="15" fill="rgb(219,182,1)" fg:x="167" fg:w="1"/><text x="13.6207%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.3707%" y="549" width="0.0801%" height="15" fill="rgb(208,224,23)" fg:x="167" fg:w="1"/><text x="13.6207%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.3707%" y="533" width="0.0801%" height="15" fill="rgb(219,121,32)" fg:x="167" fg:w="1"/><text x="13.6207%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.3707%" y="517" width="0.0801%" height="15" fill="rgb(253,13,40)" fg:x="167" fg:w="1"/><text x="13.6207%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.3707%" y="501" width="0.0801%" height="15" fill="rgb(233,6,28)" fg:x="167" fg:w="1"/><text x="13.6207%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.3707%" y="485" width="0.0801%" height="15" fill="rgb(233,73,8)" fg:x="167" fg:w="1"/><text x="13.6207%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.3707%" y="469" width="0.0801%" height="15" fill="rgb(223,48,27)" fg:x="167" fg:w="1"/><text x="13.6207%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.3707%" y="453" width="0.0801%" height="15" fill="rgb(231,98,37)" fg:x="167" fg:w="1"/><text x="13.6207%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="13.3707%" y="437" width="0.0801%" height="15" fill="rgb(249,43,32)" fg:x="167" fg:w="1"/><text x="13.6207%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.3707%" y="421" width="0.0801%" height="15" fill="rgb(246,184,20)" fg:x="167" fg:w="1"/><text x="13.6207%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="13.2906%" y="677" width="0.2402%" height="15" fill="rgb(251,216,0)" fg:x="166" fg:w="3"/><text x="13.5406%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="13.2906%" y="661" width="0.2402%" height="15" fill="rgb(238,41,42)" fg:x="166" fg:w="3"/><text x="13.5406%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="13.3707%" y="645" width="0.1601%" height="15" fill="rgb(227,224,50)" fg:x="167" fg:w="2"/><text x="13.6207%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="13.3707%" y="629" width="0.1601%" height="15" fill="rgb(237,189,18)" fg:x="167" fg:w="2"/><text x="13.6207%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.3707%" y="613" width="0.1601%" height="15" fill="rgb(238,108,6)" fg:x="167" fg:w="2"/><text x="13.6207%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.4508%" y="597" width="0.0801%" height="15" fill="rgb(214,197,53)" fg:x="168" fg:w="1"/><text x="13.7008%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.4508%" y="581" width="0.0801%" height="15" fill="rgb(206,183,15)" fg:x="168" fg:w="1"/><text x="13.7008%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.4508%" y="565" width="0.0801%" height="15" fill="rgb(208,130,32)" fg:x="168" fg:w="1"/><text x="13.7008%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.4508%" y="549" width="0.0801%" height="15" fill="rgb(226,128,52)" fg:x="168" fg:w="1"/><text x="13.7008%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.4508%" y="533" width="0.0801%" height="15" fill="rgb(231,183,21)" fg:x="168" fg:w="1"/><text x="13.7008%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.4508%" y="517" width="0.0801%" height="15" fill="rgb(216,8,35)" fg:x="168" fg:w="1"/><text x="13.7008%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.4508%" y="501" width="0.0801%" height="15" fill="rgb(224,221,8)" fg:x="168" fg:w="1"/><text x="13.7008%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.4508%" y="485" width="0.0801%" height="15" fill="rgb(210,111,33)" fg:x="168" fg:w="1"/><text x="13.7008%" y="495.50"></text></g><g><title>plugins_core::build::Build::leads_to (9 samples, 0.72%)</title><rect x="12.8903%" y="709" width="0.7206%" height="15" fill="rgb(232,211,38)" fg:x="161" fg:w="9"/><text x="13.1403%" y="719.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="13.2906%" y="693" width="0.3203%" height="15" fill="rgb(216,190,27)" fg:x="166" fg:w="4"/><text x="13.5406%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="13.5308%" y="677" width="0.0801%" height="15" fill="rgb(237,215,27)" fg:x="169" fg:w="1"/><text x="13.7808%" y="687.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="13.5308%" y="661" width="0.0801%" height="15" fill="rgb(251,121,39)" fg:x="169" fg:w="1"/><text x="13.7808%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.5308%" y="645" width="0.0801%" height="15" fill="rgb(244,21,14)" fg:x="169" fg:w="1"/><text x="13.7808%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="13.5308%" y="629" width="0.0801%" height="15" fill="rgb(221,192,22)" fg:x="169" fg:w="1"/><text x="13.7808%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.5308%" y="613" width="0.0801%" height="15" fill="rgb(251,190,28)" fg:x="169" fg:w="1"/><text x="13.7808%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5308%" y="597" width="0.0801%" height="15" fill="rgb(217,4,51)" fg:x="169" fg:w="1"/><text x="13.7808%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.6109%" y="645" width="0.0801%" height="15" fill="rgb(215,183,49)" fg:x="170" fg:w="1"/><text x="13.8609%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.6109%" y="629" width="0.0801%" height="15" fill="rgb(249,28,49)" fg:x="170" fg:w="1"/><text x="13.8609%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.6109%" y="613" width="0.0801%" height="15" fill="rgb(214,42,20)" fg:x="170" fg:w="1"/><text x="13.8609%" y="623.50"></text></g><g><title>core::iter::adapters::try_process (18 samples, 1.44%)</title><rect x="12.3299%" y="757" width="1.4412%" height="15" fill="rgb(222,77,27)" fg:x="154" fg:w="18"/><text x="12.5799%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 1.44%)</title><rect x="12.3299%" y="741" width="1.4412%" height="15" fill="rgb(252,198,32)" fg:x="154" fg:w="18"/><text x="12.5799%" y="751.50"></text></g><g><title>plugins_core::build::QuickThing::make (18 samples, 1.44%)</title><rect x="12.3299%" y="725" width="1.4412%" height="15" fill="rgb(207,140,50)" fg:x="154" fg:w="18"/><text x="12.5799%" y="735.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="13.6109%" y="709" width="0.1601%" height="15" fill="rgb(251,170,16)" fg:x="170" fg:w="2"/><text x="13.8609%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="13.6109%" y="693" width="0.1601%" height="15" fill="rgb(249,111,45)" fg:x="170" fg:w="2"/><text x="13.8609%" y="703.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="13.6109%" y="677" width="0.1601%" height="15" fill="rgb(241,99,35)" fg:x="170" fg:w="2"/><text x="13.8609%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="13.6109%" y="661" width="0.1601%" height="15" fill="rgb(216,188,17)" fg:x="170" fg:w="2"/><text x="13.8609%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="13.6910%" y="645" width="0.0801%" height="15" fill="rgb(254,209,53)" fg:x="171" fg:w="1"/><text x="13.9410%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.6910%" y="629" width="0.0801%" height="15" fill="rgb(231,105,41)" fg:x="171" fg:w="1"/><text x="13.9410%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="13.6910%" y="613" width="0.0801%" height="15" fill="rgb(242,93,23)" fg:x="171" fg:w="1"/><text x="13.9410%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.6910%" y="597" width="0.0801%" height="15" fill="rgb(218,159,11)" fg:x="171" fg:w="1"/><text x="13.9410%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="13.6910%" y="581" width="0.0801%" height="15" fill="rgb(209,90,32)" fg:x="171" fg:w="1"/><text x="13.9410%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.7710%" y="725" width="0.0801%" height="15" fill="rgb(253,118,46)" fg:x="172" fg:w="1"/><text x="14.0210%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.7710%" y="709" width="0.0801%" height="15" fill="rgb(219,121,2)" fg:x="172" fg:w="1"/><text x="14.0210%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.7710%" y="693" width="0.0801%" height="15" fill="rgb(207,57,47)" fg:x="172" fg:w="1"/><text x="14.0210%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.7710%" y="677" width="0.0801%" height="15" fill="rgb(235,113,43)" fg:x="172" fg:w="1"/><text x="14.0210%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.7710%" y="661" width="0.0801%" height="15" fill="rgb(238,30,50)" fg:x="172" fg:w="1"/><text x="14.0210%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.7710%" y="645" width="0.0801%" height="15" fill="rgb(237,47,29)" fg:x="172" fg:w="1"/><text x="14.0210%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.7710%" y="629" width="0.0801%" height="15" fill="rgb(245,102,24)" fg:x="172" fg:w="1"/><text x="14.0210%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.7710%" y="613" width="0.0801%" height="15" fill="rgb(245,152,9)" fg:x="172" fg:w="1"/><text x="14.0210%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.7710%" y="597" width="0.0801%" height="15" fill="rgb(223,213,17)" fg:x="172" fg:w="1"/><text x="14.0210%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.7710%" y="581" width="0.0801%" height="15" fill="rgb(241,164,4)" fg:x="172" fg:w="1"/><text x="14.0210%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.7710%" y="565" width="0.0801%" height="15" fill="rgb(205,209,31)" fg:x="172" fg:w="1"/><text x="14.0210%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.7710%" y="549" width="0.0801%" height="15" fill="rgb(248,173,2)" fg:x="172" fg:w="1"/><text x="14.0210%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="13.7710%" y="741" width="0.1601%" height="15" fill="rgb(207,67,32)" fg:x="172" fg:w="2"/><text x="14.0210%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.8511%" y="725" width="0.0801%" height="15" fill="rgb(239,109,13)" fg:x="173" fg:w="1"/><text x="14.1011%" y="735.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="13.9311%" y="725" width="0.0801%" height="15" fill="rgb(233,123,24)" fg:x="174" fg:w="1"/><text x="14.1811%" y="735.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="13.9311%" y="709" width="0.0801%" height="15" fill="rgb(232,120,19)" fg:x="174" fg:w="1"/><text x="14.1811%" y="719.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="13.9311%" y="693" width="0.0801%" height="15" fill="rgb(225,17,50)" fg:x="174" fg:w="1"/><text x="14.1811%" y="703.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="13.9311%" y="677" width="0.0801%" height="15" fill="rgb(239,216,13)" fg:x="174" fg:w="1"/><text x="14.1811%" y="687.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="13.9311%" y="661" width="0.0801%" height="15" fill="rgb(232,213,26)" fg:x="174" fg:w="1"/><text x="14.1811%" y="671.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="13.9311%" y="645" width="0.0801%" height="15" fill="rgb(244,59,39)" fg:x="174" fg:w="1"/><text x="14.1811%" y="655.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="13.9311%" y="629" width="0.0801%" height="15" fill="rgb(234,61,35)" fg:x="174" fg:w="1"/><text x="14.1811%" y="639.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="14.0112%" y="693" width="0.0801%" height="15" fill="rgb(245,94,24)" fg:x="175" fg:w="1"/><text x="14.2612%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="14.0112%" y="677" width="0.0801%" height="15" fill="rgb(238,190,44)" fg:x="175" fg:w="1"/><text x="14.2612%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.0112%" y="661" width="0.0801%" height="15" fill="rgb(205,145,25)" fg:x="175" fg:w="1"/><text x="14.2612%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="14.0913%" y="677" width="0.0801%" height="15" fill="rgb(229,158,41)" fg:x="176" fg:w="1"/><text x="14.3413%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.3315%" y="629" width="0.0801%" height="15" fill="rgb(224,121,5)" fg:x="179" fg:w="1"/><text x="14.5815%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="14.3315%" y="645" width="0.3203%" height="15" fill="rgb(238,168,35)" fg:x="179" fg:w="4"/><text x="14.5815%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="14.4115%" y="629" width="0.2402%" height="15" fill="rgb(231,11,42)" fg:x="180" fg:w="3"/><text x="14.6615%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="14.4115%" y="613" width="0.2402%" height="15" fill="rgb(241,105,19)" fg:x="180" fg:w="3"/><text x="14.6615%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="14.4115%" y="597" width="0.2402%" height="15" fill="rgb(253,210,20)" fg:x="180" fg:w="3"/><text x="14.6615%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="14.6517%" y="629" width="0.4804%" height="15" fill="rgb(215,72,52)" fg:x="183" fg:w="6"/><text x="14.9017%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="14.8118%" y="613" width="0.3203%" height="15" fill="rgb(223,225,30)" fg:x="185" fg:w="4"/><text x="15.0618%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="14.9720%" y="597" width="0.1601%" height="15" fill="rgb(220,138,44)" fg:x="187" fg:w="2"/><text x="15.2220%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.0520%" y="581" width="0.0801%" height="15" fill="rgb(206,128,12)" fg:x="188" fg:w="1"/><text x="15.3020%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="15.1321%" y="613" width="0.0801%" height="15" fill="rgb(245,194,0)" fg:x="189" fg:w="1"/><text x="15.3821%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="15.1321%" y="597" width="0.0801%" height="15" fill="rgb(235,175,41)" fg:x="189" fg:w="1"/><text x="15.3821%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="15.1321%" y="581" width="0.0801%" height="15" fill="rgb(216,15,48)" fg:x="189" fg:w="1"/><text x="15.3821%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.1321%" y="565" width="0.0801%" height="15" fill="rgb(223,179,5)" fg:x="189" fg:w="1"/><text x="15.3821%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.1321%" y="549" width="0.0801%" height="15" fill="rgb(220,80,15)" fg:x="189" fg:w="1"/><text x="15.3821%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.1321%" y="533" width="0.0801%" height="15" fill="rgb(228,20,30)" fg:x="189" fg:w="1"/><text x="15.3821%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.1321%" y="517" width="0.0801%" height="15" fill="rgb(229,194,27)" fg:x="189" fg:w="1"/><text x="15.3821%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.1321%" y="501" width="0.0801%" height="15" fill="rgb(238,202,32)" fg:x="189" fg:w="1"/><text x="15.3821%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="15.1321%" y="485" width="0.0801%" height="15" fill="rgb(207,82,27)" fg:x="189" fg:w="1"/><text x="15.3821%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="15.2122%" y="613" width="0.3203%" height="15" fill="rgb(246,122,46)" fg:x="190" fg:w="4"/><text x="15.4622%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.4524%" y="597" width="0.0801%" height="15" fill="rgb(220,101,26)" fg:x="193" fg:w="1"/><text x="15.7024%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.4524%" y="581" width="0.0801%" height="15" fill="rgb(251,63,9)" fg:x="193" fg:w="1"/><text x="15.7024%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.4524%" y="565" width="0.0801%" height="15" fill="rgb(235,186,5)" fg:x="193" fg:w="1"/><text x="15.7024%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="15.5324%" y="597" width="0.3203%" height="15" fill="rgb(241,139,37)" fg:x="194" fg:w="4"/><text x="15.7824%" y="607.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="15.5324%" y="581" width="0.3203%" height="15" fill="rgb(252,177,51)" fg:x="194" fg:w="4"/><text x="15.7824%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.7726%" y="565" width="0.0801%" height="15" fill="rgb(214,131,22)" fg:x="197" fg:w="1"/><text x="16.0226%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.7726%" y="549" width="0.0801%" height="15" fill="rgb(246,53,19)" fg:x="197" fg:w="1"/><text x="16.0226%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="15.8527%" y="565" width="0.1601%" height="15" fill="rgb(231,158,27)" fg:x="198" fg:w="2"/><text x="16.1027%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.9327%" y="549" width="0.0801%" height="15" fill="rgb(226,166,46)" fg:x="199" fg:w="1"/><text x="16.1827%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.9327%" y="533" width="0.0801%" height="15" fill="rgb(218,178,26)" fg:x="199" fg:w="1"/><text x="16.1827%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.9327%" y="517" width="0.0801%" height="15" fill="rgb(206,25,39)" fg:x="199" fg:w="1"/><text x="16.1827%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="16.0128%" y="549" width="0.1601%" height="15" fill="rgb(232,218,41)" fg:x="200" fg:w="2"/><text x="16.2628%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="16.1729%" y="549" width="0.3203%" height="15" fill="rgb(212,151,15)" fg:x="202" fg:w="4"/><text x="16.4229%" y="559.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="16.1729%" y="533" width="0.3203%" height="15" fill="rgb(213,49,22)" fg:x="202" fg:w="4"/><text x="16.4229%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="16.2530%" y="517" width="0.2402%" height="15" fill="rgb(247,116,21)" fg:x="203" fg:w="3"/><text x="16.5030%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="16.2530%" y="501" width="0.2402%" height="15" fill="rgb(248,98,14)" fg:x="203" fg:w="3"/><text x="16.5030%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="16.2530%" y="485" width="0.2402%" height="15" fill="rgb(247,72,6)" fg:x="203" fg:w="3"/><text x="16.5030%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="16.2530%" y="469" width="0.2402%" height="15" fill="rgb(213,9,22)" fg:x="203" fg:w="3"/><text x="16.5030%" y="479.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="16.2530%" y="453" width="0.2402%" height="15" fill="rgb(213,122,30)" fg:x="203" fg:w="3"/><text x="16.5030%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="15.8527%" y="597" width="0.7206%" height="15" fill="rgb(244,11,30)" fg:x="198" fg:w="9"/><text x="16.1027%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="15.8527%" y="581" width="0.7206%" height="15" fill="rgb(236,102,26)" fg:x="198" fg:w="9"/><text x="16.1027%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="16.0128%" y="565" width="0.5604%" height="15" fill="rgb(231,166,37)" fg:x="200" fg:w="7"/><text x="16.2628%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.4932%" y="549" width="0.0801%" height="15" fill="rgb(220,224,29)" fg:x="206" fg:w="1"/><text x="16.7432%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.52%)</title><rect x="15.1321%" y="629" width="1.5212%" height="15" fill="rgb(227,30,40)" fg:x="189" fg:w="19"/><text x="15.3821%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="15.5324%" y="613" width="1.1209%" height="15" fill="rgb(235,8,36)" fg:x="194" fg:w="14"/><text x="15.7824%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.5733%" y="597" width="0.0801%" height="15" fill="rgb(232,175,19)" fg:x="207" fg:w="1"/><text x="16.8233%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (35 samples, 2.80%)</title><rect x="14.1713%" y="661" width="2.8022%" height="15" fill="rgb(217,114,10)" fg:x="177" fg:w="35"/><text x="14.4213%" y="671.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (29 samples, 2.32%)</title><rect x="14.6517%" y="645" width="2.3219%" height="15" fill="rgb(214,112,41)" fg:x="183" fg:w="29"/><text x="14.9017%" y="655.50">s..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="16.6533%" y="629" width="0.3203%" height="15" fill="rgb(226,69,34)" fg:x="208" fg:w="4"/><text x="16.9033%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.8935%" y="613" width="0.0801%" height="15" fill="rgb(219,23,46)" fg:x="211" fg:w="1"/><text x="17.1435%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.8935%" y="597" width="0.0801%" height="15" fill="rgb(233,3,8)" fg:x="211" fg:w="1"/><text x="17.1435%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.0536%" y="613" width="0.0801%" height="15" fill="rgb(251,34,42)" fg:x="213" fg:w="1"/><text x="17.3036%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.3739%" y="549" width="0.0801%" height="15" fill="rgb(215,84,9)" fg:x="217" fg:w="1"/><text x="17.6239%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.4540%" y="549" width="0.0801%" height="15" fill="rgb(231,75,52)" fg:x="218" fg:w="1"/><text x="17.7040%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="16.9736%" y="661" width="0.6405%" height="15" fill="rgb(247,201,31)" fg:x="212" fg:w="8"/><text x="17.2236%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="16.9736%" y="645" width="0.6405%" height="15" fill="rgb(215,171,37)" fg:x="212" fg:w="8"/><text x="17.2236%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="17.0536%" y="629" width="0.5604%" height="15" fill="rgb(208,208,44)" fg:x="213" fg:w="7"/><text x="17.3036%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="17.1337%" y="613" width="0.4804%" height="15" fill="rgb(247,146,54)" fg:x="214" fg:w="6"/><text x="17.3837%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="17.2938%" y="597" width="0.3203%" height="15" fill="rgb(209,0,40)" fg:x="216" fg:w="4"/><text x="17.5438%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="17.3739%" y="581" width="0.2402%" height="15" fill="rgb(221,59,4)" fg:x="217" fg:w="3"/><text x="17.6239%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="17.3739%" y="565" width="0.2402%" height="15" fill="rgb(227,153,47)" fg:x="217" fg:w="3"/><text x="17.6239%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.5340%" y="549" width="0.0801%" height="15" fill="rgb(253,225,10)" fg:x="219" fg:w="1"/><text x="17.7840%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.5340%" y="533" width="0.0801%" height="15" fill="rgb(237,201,24)" fg:x="219" fg:w="1"/><text x="17.7840%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.6141%" y="613" width="0.1601%" height="15" fill="rgb(238,23,27)" fg:x="220" fg:w="2"/><text x="17.8641%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.6942%" y="597" width="0.0801%" height="15" fill="rgb(236,54,50)" fg:x="221" fg:w="1"/><text x="17.9442%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="17.6942%" y="581" width="0.0801%" height="15" fill="rgb(216,106,0)" fg:x="221" fg:w="1"/><text x="17.9442%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="17.7742%" y="613" width="0.0801%" height="15" fill="rgb(234,179,35)" fg:x="222" fg:w="1"/><text x="18.0242%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.7742%" y="597" width="0.0801%" height="15" fill="rgb(210,35,8)" fg:x="222" fg:w="1"/><text x="18.0242%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.7742%" y="581" width="0.0801%" height="15" fill="rgb(238,144,16)" fg:x="222" fg:w="1"/><text x="18.0242%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="17.8543%" y="613" width="0.0801%" height="15" fill="rgb(244,54,7)" fg:x="223" fg:w="1"/><text x="18.1043%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.8543%" y="597" width="0.0801%" height="15" fill="rgb(233,225,40)" fg:x="223" fg:w="1"/><text x="18.1043%" y="607.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="17.8543%" y="581" width="0.0801%" height="15" fill="rgb(249,227,23)" fg:x="223" fg:w="1"/><text x="18.1043%" y="591.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.8543%" y="565" width="0.0801%" height="15" fill="rgb(215,42,44)" fg:x="223" fg:w="1"/><text x="18.1043%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="18.0144%" y="565" width="0.1601%" height="15" fill="rgb(220,145,40)" fg:x="225" fg:w="2"/><text x="18.2644%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="18.0144%" y="549" width="0.1601%" height="15" fill="rgb(228,218,40)" fg:x="225" fg:w="2"/><text x="18.2644%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="18.0945%" y="533" width="0.0801%" height="15" fill="rgb(217,52,54)" fg:x="226" fg:w="1"/><text x="18.3445%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="18.0945%" y="517" width="0.0801%" height="15" fill="rgb(223,90,22)" fg:x="226" fg:w="1"/><text x="18.3445%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.0945%" y="501" width="0.0801%" height="15" fill="rgb(232,114,35)" fg:x="226" fg:w="1"/><text x="18.3445%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.1745%" y="533" width="0.0801%" height="15" fill="rgb(227,223,50)" fg:x="227" fg:w="1"/><text x="18.4245%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="18.2546%" y="533" width="0.0801%" height="15" fill="rgb(249,175,7)" fg:x="228" fg:w="1"/><text x="18.5046%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="18.2546%" y="517" width="0.0801%" height="15" fill="rgb(249,173,15)" fg:x="228" fg:w="1"/><text x="18.5046%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="18.4948%" y="485" width="0.0801%" height="15" fill="rgb(240,131,6)" fg:x="231" fg:w="1"/><text x="18.7448%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="18.4948%" y="469" width="0.0801%" height="15" fill="rgb(246,117,16)" fg:x="231" fg:w="1"/><text x="18.7448%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="18.4948%" y="453" width="0.0801%" height="15" fill="rgb(209,32,16)" fg:x="231" fg:w="1"/><text x="18.7448%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="18.4948%" y="437" width="0.0801%" height="15" fill="rgb(207,45,44)" fg:x="231" fg:w="1"/><text x="18.7448%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="18.4948%" y="421" width="0.0801%" height="15" fill="rgb(210,66,3)" fg:x="231" fg:w="1"/><text x="18.7448%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="18.4147%" y="517" width="0.2402%" height="15" fill="rgb(246,133,30)" fg:x="230" fg:w="3"/><text x="18.6647%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="18.4948%" y="501" width="0.1601%" height="15" fill="rgb(224,37,17)" fg:x="231" fg:w="2"/><text x="18.7448%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.5749%" y="485" width="0.0801%" height="15" fill="rgb(237,218,18)" fg:x="232" fg:w="1"/><text x="18.8249%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="18.1745%" y="549" width="0.5604%" height="15" fill="rgb(240,57,8)" fg:x="227" fg:w="7"/><text x="18.4245%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="18.3347%" y="533" width="0.4003%" height="15" fill="rgb(231,51,38)" fg:x="229" fg:w="5"/><text x="18.5847%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.6549%" y="517" width="0.0801%" height="15" fill="rgb(230,89,50)" fg:x="233" fg:w="1"/><text x="18.9049%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="18.0144%" y="581" width="0.8006%" height="15" fill="rgb(234,103,34)" fg:x="225" fg:w="10"/><text x="18.2644%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="18.1745%" y="565" width="0.6405%" height="15" fill="rgb(220,45,48)" fg:x="227" fg:w="8"/><text x="18.4245%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7350%" y="549" width="0.0801%" height="15" fill="rgb(250,210,3)" fg:x="234" fg:w="1"/><text x="18.9850%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.88%)</title><rect x="18.0144%" y="597" width="0.8807%" height="15" fill="rgb(210,118,12)" fg:x="225" fg:w="11"/><text x="18.2644%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="18.8151%" y="581" width="0.0801%" height="15" fill="rgb(238,154,21)" fg:x="235" fg:w="1"/><text x="19.0651%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8151%" y="565" width="0.0801%" height="15" fill="rgb(227,220,4)" fg:x="235" fg:w="1"/><text x="19.0651%" y="575.50"></text></g><g><title>engine::session::Session::flush (65 samples, 5.20%)</title><rect x="13.7710%" y="757" width="5.2042%" height="15" fill="rgb(207,179,27)" fg:x="172" fg:w="65"/><text x="14.0210%" y="767.50">engine..</text></g><g><title>engine::session::Session::save_changes (63 samples, 5.04%)</title><rect x="13.9311%" y="741" width="5.0440%" height="15" fill="rgb(240,111,30)" fg:x="174" fg:w="63"/><text x="14.1811%" y="751.50">engine..</text></g><g><title>engine::session::state::State::close (62 samples, 4.96%)</title><rect x="14.0112%" y="725" width="4.9640%" height="15" fill="rgb(251,29,1)" fg:x="175" fg:w="62"/><text x="14.2612%" y="735.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (62 samples, 4.96%)</title><rect x="14.0112%" y="709" width="4.9640%" height="15" fill="rgb(224,141,39)" fg:x="175" fg:w="62"/><text x="14.2612%" y="719.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (61 samples, 4.88%)</title><rect x="14.0913%" y="693" width="4.8839%" height="15" fill="rgb(207,98,26)" fg:x="176" fg:w="61"/><text x="14.3413%" y="703.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (60 samples, 4.80%)</title><rect x="14.1713%" y="677" width="4.8038%" height="15" fill="rgb(221,37,6)" fg:x="177" fg:w="60"/><text x="14.4213%" y="687.50">engine..</text></g><g><title>kernel::model::any_entity_changes (17 samples, 1.36%)</title><rect x="17.6141%" y="661" width="1.3611%" height="15" fill="rgb(217,32,44)" fg:x="220" fg:w="17"/><text x="17.8641%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (17 samples, 1.36%)</title><rect x="17.6141%" y="645" width="1.3611%" height="15" fill="rgb(253,149,2)" fg:x="220" fg:w="17"/><text x="17.8641%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.36%)</title><rect x="17.6141%" y="629" width="1.3611%" height="15" fill="rgb(220,165,39)" fg:x="220" fg:w="17"/><text x="17.8641%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.04%)</title><rect x="17.9343%" y="613" width="1.0408%" height="15" fill="rgb(235,33,48)" fg:x="224" fg:w="13"/><text x="18.1843%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.8951%" y="597" width="0.0801%" height="15" fill="rgb(221,89,6)" fg:x="236" fg:w="1"/><text x="19.1451%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="18.9752%" y="757" width="0.0801%" height="15" fill="rgb(215,214,6)" fg:x="237" fg:w="1"/><text x="19.2252%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="18.9752%" y="741" width="0.0801%" height="15" fill="rgb(241,1,30)" fg:x="237" fg:w="1"/><text x="19.2252%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.9752%" y="725" width="0.0801%" height="15" fill="rgb(211,140,32)" fg:x="237" fg:w="1"/><text x="19.2252%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="18.9752%" y="709" width="0.0801%" height="15" fill="rgb(232,48,21)" fg:x="237" fg:w="1"/><text x="19.2252%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.9752%" y="693" width="0.0801%" height="15" fill="rgb(252,217,9)" fg:x="237" fg:w="1"/><text x="19.2252%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.9752%" y="677" width="0.0801%" height="15" fill="rgb(206,123,34)" fg:x="237" fg:w="1"/><text x="19.2252%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.9752%" y="661" width="0.0801%" height="15" fill="rgb(245,161,38)" fg:x="237" fg:w="1"/><text x="19.2252%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.9752%" y="645" width="0.0801%" height="15" fill="rgb(233,205,7)" fg:x="237" fg:w="1"/><text x="19.2252%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.9752%" y="629" width="0.0801%" height="15" fill="rgb(217,119,18)" fg:x="237" fg:w="1"/><text x="19.2252%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.9752%" y="613" width="0.0801%" height="15" fill="rgb(252,126,3)" fg:x="237" fg:w="1"/><text x="19.2252%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.0552%" y="709" width="0.0801%" height="15" fill="rgb(252,188,15)" fg:x="238" fg:w="1"/><text x="19.3052%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="19.1353%" y="613" width="0.1601%" height="15" fill="rgb(228,1,48)" fg:x="239" fg:w="2"/><text x="19.3853%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.1353%" y="597" width="0.1601%" height="15" fill="rgb(205,187,8)" fg:x="239" fg:w="2"/><text x="19.3853%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="19.1353%" y="661" width="0.2402%" height="15" fill="rgb(205,105,50)" fg:x="239" fg:w="3"/><text x="19.3853%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="19.1353%" y="645" width="0.2402%" height="15" fill="rgb(211,31,46)" fg:x="239" fg:w="3"/><text x="19.3853%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="19.1353%" y="629" width="0.2402%" height="15" fill="rgb(213,126,5)" fg:x="239" fg:w="3"/><text x="19.3853%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2954%" y="613" width="0.0801%" height="15" fill="rgb(231,87,9)" fg:x="241" fg:w="1"/><text x="19.5454%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.2954%" y="597" width="0.0801%" height="15" fill="rgb(219,224,20)" fg:x="241" fg:w="1"/><text x="19.5454%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.2954%" y="581" width="0.0801%" height="15" fill="rgb(230,84,21)" fg:x="241" fg:w="1"/><text x="19.5454%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.2954%" y="565" width="0.0801%" height="15" fill="rgb(224,169,42)" fg:x="241" fg:w="1"/><text x="19.5454%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.2954%" y="549" width="0.0801%" height="15" fill="rgb(227,182,13)" fg:x="241" fg:w="1"/><text x="19.5454%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.2954%" y="533" width="0.0801%" height="15" fill="rgb(249,57,41)" fg:x="241" fg:w="1"/><text x="19.5454%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.2954%" y="517" width="0.0801%" height="15" fill="rgb(214,93,52)" fg:x="241" fg:w="1"/><text x="19.5454%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.2954%" y="501" width="0.0801%" height="15" fill="rgb(229,161,34)" fg:x="241" fg:w="1"/><text x="19.5454%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.2954%" y="485" width="0.0801%" height="15" fill="rgb(227,193,17)" fg:x="241" fg:w="1"/><text x="19.5454%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.2954%" y="469" width="0.0801%" height="15" fill="rgb(242,164,46)" fg:x="241" fg:w="1"/><text x="19.5454%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.2954%" y="453" width="0.0801%" height="15" fill="rgb(242,142,47)" fg:x="241" fg:w="1"/><text x="19.5454%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.2954%" y="437" width="0.0801%" height="15" fill="rgb(208,23,18)" fg:x="241" fg:w="1"/><text x="19.5454%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="19.1353%" y="677" width="0.3203%" height="15" fill="rgb(219,54,38)" fg:x="239" fg:w="4"/><text x="19.3853%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3755%" y="661" width="0.0801%" height="15" fill="rgb(206,97,35)" fg:x="242" fg:w="1"/><text x="19.6255%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="19.4556%" y="581" width="0.0801%" height="15" fill="rgb(208,76,8)" fg:x="243" fg:w="1"/><text x="19.7056%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.5356%" y="517" width="0.0801%" height="15" fill="rgb(220,92,28)" fg:x="244" fg:w="1"/><text x="19.7856%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="19.0552%" y="725" width="0.6405%" height="15" fill="rgb(209,158,39)" fg:x="238" fg:w="8"/><text x="19.3052%" y="735.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="19.1353%" y="709" width="0.5604%" height="15" fill="rgb(238,175,9)" fg:x="239" fg:w="7"/><text x="19.3853%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="19.1353%" y="693" width="0.5604%" height="15" fill="rgb(240,116,17)" fg:x="239" fg:w="7"/><text x="19.3853%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="19.4556%" y="677" width="0.2402%" height="15" fill="rgb(208,7,2)" fg:x="243" fg:w="3"/><text x="19.7056%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="19.4556%" y="661" width="0.2402%" height="15" fill="rgb(252,52,4)" fg:x="243" fg:w="3"/><text x="19.7056%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="19.4556%" y="645" width="0.2402%" height="15" fill="rgb(222,68,34)" fg:x="243" fg:w="3"/><text x="19.7056%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="19.4556%" y="629" width="0.2402%" height="15" fill="rgb(242,154,35)" fg:x="243" fg:w="3"/><text x="19.7056%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="19.4556%" y="613" width="0.2402%" height="15" fill="rgb(210,125,54)" fg:x="243" fg:w="3"/><text x="19.7056%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="19.4556%" y="597" width="0.2402%" height="15" fill="rgb(247,121,18)" fg:x="243" fg:w="3"/><text x="19.7056%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.5356%" y="581" width="0.1601%" height="15" fill="rgb(223,48,51)" fg:x="244" fg:w="2"/><text x="19.7856%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.5356%" y="565" width="0.1601%" height="15" fill="rgb(211,156,48)" fg:x="244" fg:w="2"/><text x="19.7856%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="19.5356%" y="549" width="0.1601%" height="15" fill="rgb(236,56,31)" fg:x="244" fg:w="2"/><text x="19.7856%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="19.5356%" y="533" width="0.1601%" height="15" fill="rgb(247,157,52)" fg:x="244" fg:w="2"/><text x="19.7856%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="19.6157%" y="517" width="0.0801%" height="15" fill="rgb(244,121,39)" fg:x="245" fg:w="1"/><text x="19.8657%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="19.6157%" y="501" width="0.0801%" height="15" fill="rgb(239,4,40)" fg:x="245" fg:w="1"/><text x="19.8657%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="19.6958%" y="725" width="0.0801%" height="15" fill="rgb(213,204,45)" fg:x="246" fg:w="1"/><text x="19.9458%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="19.6958%" y="709" width="0.0801%" height="15" fill="rgb(242,107,0)" fg:x="246" fg:w="1"/><text x="19.9458%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.6958%" y="693" width="0.0801%" height="15" fill="rgb(215,152,25)" fg:x="246" fg:w="1"/><text x="19.9458%" y="703.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="19.7758%" y="725" width="0.0801%" height="15" fill="rgb(233,151,6)" fg:x="247" fg:w="1"/><text x="20.0258%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="19.7758%" y="709" width="0.0801%" height="15" fill="rgb(206,126,44)" fg:x="247" fg:w="1"/><text x="20.0258%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.7758%" y="693" width="0.0801%" height="15" fill="rgb(209,145,15)" fg:x="247" fg:w="1"/><text x="20.0258%" y="703.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="19.7758%" y="677" width="0.0801%" height="15" fill="rgb(235,214,8)" fg:x="247" fg:w="1"/><text x="20.0258%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.7758%" y="661" width="0.0801%" height="15" fill="rgb(216,140,51)" fg:x="247" fg:w="1"/><text x="20.0258%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="19.0552%" y="741" width="0.9608%" height="15" fill="rgb(213,83,34)" fg:x="238" fg:w="12"/><text x="19.3052%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="19.8559%" y="725" width="0.1601%" height="15" fill="rgb(218,186,44)" fg:x="248" fg:w="2"/><text x="20.1059%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="19.8559%" y="709" width="0.1601%" height="15" fill="rgb(225,147,10)" fg:x="248" fg:w="2"/><text x="20.1059%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="19.8559%" y="693" width="0.1601%" height="15" fill="rgb(209,214,20)" fg:x="248" fg:w="2"/><text x="20.1059%" y="703.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="19.8559%" y="677" width="0.1601%" height="15" fill="rgb(252,61,32)" fg:x="248" fg:w="2"/><text x="20.1059%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="19.8559%" y="661" width="0.1601%" height="15" fill="rgb(237,204,10)" fg:x="248" fg:w="2"/><text x="20.1059%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="19.9359%" y="645" width="0.0801%" height="15" fill="rgb(246,118,16)" fg:x="249" fg:w="1"/><text x="20.1859%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="19.9359%" y="629" width="0.0801%" height="15" fill="rgb(214,50,9)" fg:x="249" fg:w="1"/><text x="20.1859%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.9359%" y="613" width="0.0801%" height="15" fill="rgb(212,41,1)" fg:x="249" fg:w="1"/><text x="20.1859%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="20.0961%" y="677" width="0.0801%" height="15" fill="rgb(228,172,32)" fg:x="251" fg:w="1"/><text x="20.3461%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="20.0961%" y="661" width="0.0801%" height="15" fill="rgb(231,85,38)" fg:x="251" fg:w="1"/><text x="20.3461%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.1761%" y="645" width="0.1601%" height="15" fill="rgb(223,120,31)" fg:x="252" fg:w="2"/><text x="20.4261%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.1761%" y="629" width="0.1601%" height="15" fill="rgb(254,174,9)" fg:x="252" fg:w="2"/><text x="20.4261%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.1761%" y="613" width="0.1601%" height="15" fill="rgb(243,197,0)" fg:x="252" fg:w="2"/><text x="20.4261%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.2562%" y="597" width="0.0801%" height="15" fill="rgb(226,186,17)" fg:x="253" fg:w="1"/><text x="20.5062%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.2562%" y="581" width="0.0801%" height="15" fill="rgb(229,38,38)" fg:x="253" fg:w="1"/><text x="20.5062%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.2562%" y="565" width="0.0801%" height="15" fill="rgb(238,82,14)" fg:x="253" fg:w="1"/><text x="20.5062%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.2562%" y="549" width="0.0801%" height="15" fill="rgb(230,154,54)" fg:x="253" fg:w="1"/><text x="20.5062%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.2562%" y="533" width="0.0801%" height="15" fill="rgb(243,84,17)" fg:x="253" fg:w="1"/><text x="20.5062%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.2562%" y="517" width="0.0801%" height="15" fill="rgb(226,41,37)" fg:x="253" fg:w="1"/><text x="20.5062%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.2562%" y="501" width="0.0801%" height="15" fill="rgb(219,20,18)" fg:x="253" fg:w="1"/><text x="20.5062%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.2562%" y="485" width="0.0801%" height="15" fill="rgb(243,173,39)" fg:x="253" fg:w="1"/><text x="20.5062%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.2562%" y="469" width="0.0801%" height="15" fill="rgb(245,79,20)" fg:x="253" fg:w="1"/><text x="20.5062%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.2562%" y="453" width="0.0801%" height="15" fill="rgb(229,101,45)" fg:x="253" fg:w="1"/><text x="20.5062%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.2562%" y="437" width="0.0801%" height="15" fill="rgb(215,123,52)" fg:x="253" fg:w="1"/><text x="20.5062%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.2562%" y="421" width="0.0801%" height="15" fill="rgb(215,11,33)" fg:x="253" fg:w="1"/><text x="20.5062%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.2562%" y="405" width="0.0801%" height="15" fill="rgb(245,105,20)" fg:x="253" fg:w="1"/><text x="20.5062%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.2562%" y="389" width="0.0801%" height="15" fill="rgb(231,132,30)" fg:x="253" fg:w="1"/><text x="20.5062%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.3363%" y="645" width="0.0801%" height="15" fill="rgb(224,62,21)" fg:x="254" fg:w="1"/><text x="20.5863%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.4163%" y="549" width="0.0801%" height="15" fill="rgb(209,221,38)" fg:x="255" fg:w="1"/><text x="20.6663%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.4163%" y="533" width="0.0801%" height="15" fill="rgb(229,200,30)" fg:x="255" fg:w="1"/><text x="20.6663%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="20.4163%" y="517" width="0.0801%" height="15" fill="rgb(237,142,41)" fg:x="255" fg:w="1"/><text x="20.6663%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="20.0961%" y="693" width="0.4804%" height="15" fill="rgb(238,37,22)" fg:x="251" fg:w="6"/><text x="20.3461%" y="703.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="20.1761%" y="677" width="0.4003%" height="15" fill="rgb(234,182,17)" fg:x="252" fg:w="5"/><text x="20.4261%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="20.1761%" y="661" width="0.4003%" height="15" fill="rgb(237,58,48)" fg:x="252" fg:w="5"/><text x="20.4261%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.4163%" y="645" width="0.1601%" height="15" fill="rgb(226,112,37)" fg:x="255" fg:w="2"/><text x="20.6663%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.4163%" y="629" width="0.1601%" height="15" fill="rgb(230,201,20)" fg:x="255" fg:w="2"/><text x="20.6663%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.4163%" y="613" width="0.1601%" height="15" fill="rgb(252,95,39)" fg:x="255" fg:w="2"/><text x="20.6663%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.4163%" y="597" width="0.1601%" height="15" fill="rgb(240,150,33)" fg:x="255" fg:w="2"/><text x="20.6663%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="20.4163%" y="581" width="0.1601%" height="15" fill="rgb(208,202,37)" fg:x="255" fg:w="2"/><text x="20.6663%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.4163%" y="565" width="0.1601%" height="15" fill="rgb(251,37,12)" fg:x="255" fg:w="2"/><text x="20.6663%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.4964%" y="549" width="0.0801%" height="15" fill="rgb(247,150,26)" fg:x="256" fg:w="1"/><text x="20.7464%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.4964%" y="533" width="0.0801%" height="15" fill="rgb(232,28,8)" fg:x="256" fg:w="1"/><text x="20.7464%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.5765%" y="645" width="0.0801%" height="15" fill="rgb(226,121,34)" fg:x="257" fg:w="1"/><text x="20.8265%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.5765%" y="629" width="0.0801%" height="15" fill="rgb(237,23,13)" fg:x="257" fg:w="1"/><text x="20.8265%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.5765%" y="613" width="0.0801%" height="15" fill="rgb(214,42,29)" fg:x="257" fg:w="1"/><text x="20.8265%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.5765%" y="597" width="0.0801%" height="15" fill="rgb(246,204,29)" fg:x="257" fg:w="1"/><text x="20.8265%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.5765%" y="581" width="0.0801%" height="15" fill="rgb(242,28,40)" fg:x="257" fg:w="1"/><text x="20.8265%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.5765%" y="565" width="0.0801%" height="15" fill="rgb(243,64,49)" fg:x="257" fg:w="1"/><text x="20.8265%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.5765%" y="549" width="0.0801%" height="15" fill="rgb(226,93,13)" fg:x="257" fg:w="1"/><text x="20.8265%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.5765%" y="533" width="0.0801%" height="15" fill="rgb(241,113,26)" fg:x="257" fg:w="1"/><text x="20.8265%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.5765%" y="517" width="0.0801%" height="15" fill="rgb(209,209,0)" fg:x="257" fg:w="1"/><text x="20.8265%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.5765%" y="501" width="0.0801%" height="15" fill="rgb(251,183,50)" fg:x="257" fg:w="1"/><text x="20.8265%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.5765%" y="485" width="0.0801%" height="15" fill="rgb(248,24,43)" fg:x="257" fg:w="1"/><text x="20.8265%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.5765%" y="469" width="0.0801%" height="15" fill="rgb(218,102,9)" fg:x="257" fg:w="1"/><text x="20.8265%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.5765%" y="453" width="0.0801%" height="15" fill="rgb(249,209,39)" fg:x="257" fg:w="1"/><text x="20.8265%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.5765%" y="437" width="0.0801%" height="15" fill="rgb(210,37,6)" fg:x="257" fg:w="1"/><text x="20.8265%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.5765%" y="421" width="0.0801%" height="15" fill="rgb(212,99,4)" fg:x="257" fg:w="1"/><text x="20.8265%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.5765%" y="405" width="0.0801%" height="15" fill="rgb(253,59,46)" fg:x="257" fg:w="1"/><text x="20.8265%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.5765%" y="389" width="0.0801%" height="15" fill="rgb(229,96,9)" fg:x="257" fg:w="1"/><text x="20.8265%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.6565%" y="645" width="0.0801%" height="15" fill="rgb(207,103,49)" fg:x="258" fg:w="1"/><text x="20.9065%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.6565%" y="629" width="0.0801%" height="15" fill="rgb(250,226,20)" fg:x="258" fg:w="1"/><text x="20.9065%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.6565%" y="613" width="0.0801%" height="15" fill="rgb(238,220,11)" fg:x="258" fg:w="1"/><text x="20.9065%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.6565%" y="597" width="0.0801%" height="15" fill="rgb(236,74,15)" fg:x="258" fg:w="1"/><text x="20.9065%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.6565%" y="581" width="0.0801%" height="15" fill="rgb(218,43,40)" fg:x="258" fg:w="1"/><text x="20.9065%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.6565%" y="565" width="0.0801%" height="15" fill="rgb(245,206,37)" fg:x="258" fg:w="1"/><text x="20.9065%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="20.0961%" y="725" width="0.7206%" height="15" fill="rgb(206,30,3)" fg:x="251" fg:w="9"/><text x="20.3461%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="20.0961%" y="709" width="0.7206%" height="15" fill="rgb(211,29,35)" fg:x="251" fg:w="9"/><text x="20.3461%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="20.5765%" y="693" width="0.2402%" height="15" fill="rgb(218,49,50)" fg:x="257" fg:w="3"/><text x="20.8265%" y="703.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="20.5765%" y="677" width="0.2402%" height="15" fill="rgb(211,114,30)" fg:x="257" fg:w="3"/><text x="20.8265%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="20.5765%" y="661" width="0.2402%" height="15" fill="rgb(238,70,33)" fg:x="257" fg:w="3"/><text x="20.8265%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.7366%" y="645" width="0.0801%" height="15" fill="rgb(238,141,50)" fg:x="259" fg:w="1"/><text x="20.9866%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7366%" y="629" width="0.0801%" height="15" fill="rgb(205,69,6)" fg:x="259" fg:w="1"/><text x="20.9866%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.7366%" y="613" width="0.0801%" height="15" fill="rgb(229,65,0)" fg:x="259" fg:w="1"/><text x="20.9866%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7366%" y="597" width="0.0801%" height="15" fill="rgb(211,3,37)" fg:x="259" fg:w="1"/><text x="20.9866%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.7366%" y="581" width="0.0801%" height="15" fill="rgb(223,196,42)" fg:x="259" fg:w="1"/><text x="20.9866%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7366%" y="565" width="0.0801%" height="15" fill="rgb(227,191,15)" fg:x="259" fg:w="1"/><text x="20.9866%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.7366%" y="549" width="0.0801%" height="15" fill="rgb(229,210,53)" fg:x="259" fg:w="1"/><text x="20.9866%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.7366%" y="533" width="0.0801%" height="15" fill="rgb(250,203,10)" fg:x="259" fg:w="1"/><text x="20.9866%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="20.7366%" y="517" width="0.0801%" height="15" fill="rgb(247,8,37)" fg:x="259" fg:w="1"/><text x="20.9866%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.7366%" y="501" width="0.0801%" height="15" fill="rgb(240,52,9)" fg:x="259" fg:w="1"/><text x="20.9866%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="20.8167%" y="709" width="0.0801%" height="15" fill="rgb(243,100,52)" fg:x="260" fg:w="1"/><text x="21.0667%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.8167%" y="693" width="0.0801%" height="15" fill="rgb(224,149,30)" fg:x="260" fg:w="1"/><text x="21.0667%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.8167%" y="677" width="0.0801%" height="15" fill="rgb(232,27,45)" fg:x="260" fg:w="1"/><text x="21.0667%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="20.8167%" y="661" width="0.0801%" height="15" fill="rgb(242,161,36)" fg:x="260" fg:w="1"/><text x="21.0667%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="20.8167%" y="725" width="0.1601%" height="15" fill="rgb(235,223,32)" fg:x="260" fg:w="2"/><text x="21.0667%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.8967%" y="709" width="0.0801%" height="15" fill="rgb(242,78,19)" fg:x="261" fg:w="1"/><text x="21.1467%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="20.9768%" y="533" width="0.0801%" height="15" fill="rgb(233,157,47)" fg:x="262" fg:w="1"/><text x="21.2268%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.9768%" y="517" width="0.0801%" height="15" fill="rgb(251,213,5)" fg:x="262" fg:w="1"/><text x="21.2268%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.0568%" y="533" width="0.0801%" height="15" fill="rgb(215,223,5)" fg:x="263" fg:w="1"/><text x="21.3068%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.0568%" y="517" width="0.0801%" height="15" fill="rgb(230,14,7)" fg:x="263" fg:w="1"/><text x="21.3068%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="20.9768%" y="677" width="0.2402%" height="15" fill="rgb(249,179,20)" fg:x="262" fg:w="3"/><text x="21.2268%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="20.9768%" y="661" width="0.2402%" height="15" fill="rgb(230,204,44)" fg:x="262" fg:w="3"/><text x="21.2268%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="20.9768%" y="645" width="0.2402%" height="15" fill="rgb(233,229,46)" fg:x="262" fg:w="3"/><text x="21.2268%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="20.9768%" y="629" width="0.2402%" height="15" fill="rgb(210,154,35)" fg:x="262" fg:w="3"/><text x="21.2268%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.9768%" y="613" width="0.2402%" height="15" fill="rgb(220,178,16)" fg:x="262" fg:w="3"/><text x="21.2268%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="20.9768%" y="597" width="0.2402%" height="15" fill="rgb(243,0,53)" fg:x="262" fg:w="3"/><text x="21.2268%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.9768%" y="581" width="0.2402%" height="15" fill="rgb(223,221,47)" fg:x="262" fg:w="3"/><text x="21.2268%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="20.9768%" y="565" width="0.2402%" height="15" fill="rgb(233,82,15)" fg:x="262" fg:w="3"/><text x="21.2268%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="20.9768%" y="549" width="0.2402%" height="15" fill="rgb(222,8,38)" fg:x="262" fg:w="3"/><text x="21.2268%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.1369%" y="533" width="0.0801%" height="15" fill="rgb(241,28,48)" fg:x="264" fg:w="1"/><text x="21.3869%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.1369%" y="517" width="0.0801%" height="15" fill="rgb(209,227,15)" fg:x="264" fg:w="1"/><text x="21.3869%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.1369%" y="501" width="0.0801%" height="15" fill="rgb(234,189,48)" fg:x="264" fg:w="1"/><text x="21.3869%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.1369%" y="485" width="0.0801%" height="15" fill="rgb(212,27,44)" fg:x="264" fg:w="1"/><text x="21.3869%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.1369%" y="469" width="0.0801%" height="15" fill="rgb(249,55,42)" fg:x="264" fg:w="1"/><text x="21.3869%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="20.9768%" y="725" width="0.3203%" height="15" fill="rgb(215,211,28)" fg:x="262" fg:w="4"/><text x="21.2268%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="20.9768%" y="709" width="0.3203%" height="15" fill="rgb(221,155,16)" fg:x="262" fg:w="4"/><text x="21.2268%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="20.9768%" y="693" width="0.3203%" height="15" fill="rgb(247,106,30)" fg:x="262" fg:w="4"/><text x="21.2268%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="21.2170%" y="677" width="0.0801%" height="15" fill="rgb(230,76,31)" fg:x="265" fg:w="1"/><text x="21.4670%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="21.2170%" y="661" width="0.0801%" height="15" fill="rgb(222,6,48)" fg:x="265" fg:w="1"/><text x="21.4670%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.2170%" y="645" width="0.0801%" height="15" fill="rgb(228,82,3)" fg:x="265" fg:w="1"/><text x="21.4670%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.2170%" y="629" width="0.0801%" height="15" fill="rgb(245,208,52)" fg:x="265" fg:w="1"/><text x="21.4670%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.2170%" y="613" width="0.0801%" height="15" fill="rgb(218,65,17)" fg:x="265" fg:w="1"/><text x="21.4670%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.2170%" y="597" width="0.0801%" height="15" fill="rgb(242,63,26)" fg:x="265" fg:w="1"/><text x="21.4670%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.2170%" y="581" width="0.0801%" height="15" fill="rgb(224,119,39)" fg:x="265" fg:w="1"/><text x="21.4670%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (29 samples, 2.32%)</title><rect x="19.0552%" y="757" width="2.3219%" height="15" fill="rgb(229,106,3)" fg:x="238" fg:w="29"/><text x="19.3052%" y="767.50">p..</text></g><g><title>plugins_core::tools::set_container (17 samples, 1.36%)</title><rect x="20.0160%" y="741" width="1.3611%" height="15" fill="rgb(248,6,33)" fg:x="250" fg:w="17"/><text x="20.2660%" y="751.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="21.2970%" y="725" width="0.0801%" height="15" fill="rgb(226,3,49)" fg:x="266" fg:w="1"/><text x="21.5470%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="21.2970%" y="709" width="0.0801%" height="15" fill="rgb(228,142,14)" fg:x="266" fg:w="1"/><text x="21.5470%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.2970%" y="693" width="0.0801%" height="15" fill="rgb(241,141,54)" fg:x="266" fg:w="1"/><text x="21.5470%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.2970%" y="677" width="0.0801%" height="15" fill="rgb(252,17,50)" fg:x="266" fg:w="1"/><text x="21.5470%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="21.2970%" y="661" width="0.0801%" height="15" fill="rgb(221,120,48)" fg:x="266" fg:w="1"/><text x="21.5470%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.3771%" y="677" width="0.0801%" height="15" fill="rgb(229,171,33)" fg:x="267" fg:w="1"/><text x="21.6271%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.3771%" y="661" width="0.0801%" height="15" fill="rgb(236,207,21)" fg:x="267" fg:w="1"/><text x="21.6271%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.3771%" y="645" width="0.0801%" height="15" fill="rgb(218,93,35)" fg:x="267" fg:w="1"/><text x="21.6271%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.3771%" y="629" width="0.0801%" height="15" fill="rgb(207,101,8)" fg:x="267" fg:w="1"/><text x="21.6271%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.3771%" y="613" width="0.0801%" height="15" fill="rgb(237,67,44)" fg:x="267" fg:w="1"/><text x="21.6271%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.3771%" y="597" width="0.0801%" height="15" fill="rgb(236,218,7)" fg:x="267" fg:w="1"/><text x="21.6271%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.3771%" y="581" width="0.0801%" height="15" fill="rgb(252,207,10)" fg:x="267" fg:w="1"/><text x="21.6271%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.3771%" y="565" width="0.0801%" height="15" fill="rgb(221,175,6)" fg:x="267" fg:w="1"/><text x="21.6271%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.3771%" y="549" width="0.0801%" height="15" fill="rgb(230,105,53)" fg:x="267" fg:w="1"/><text x="21.6271%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.3771%" y="533" width="0.0801%" height="15" fill="rgb(253,83,6)" fg:x="267" fg:w="1"/><text x="21.6271%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.3771%" y="517" width="0.0801%" height="15" fill="rgb(206,198,44)" fg:x="267" fg:w="1"/><text x="21.6271%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.3771%" y="501" width="0.0801%" height="15" fill="rgb(206,164,29)" fg:x="267" fg:w="1"/><text x="21.6271%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.3771%" y="485" width="0.0801%" height="15" fill="rgb(215,2,50)" fg:x="267" fg:w="1"/><text x="21.6271%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="21.3771%" y="757" width="0.1601%" height="15" fill="rgb(246,127,18)" fg:x="267" fg:w="2"/><text x="21.6271%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="21.3771%" y="741" width="0.1601%" height="15" fill="rgb(232,6,21)" fg:x="267" fg:w="2"/><text x="21.6271%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="21.3771%" y="725" width="0.1601%" height="15" fill="rgb(224,154,1)" fg:x="267" fg:w="2"/><text x="21.6271%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="21.3771%" y="709" width="0.1601%" height="15" fill="rgb(248,135,32)" fg:x="267" fg:w="2"/><text x="21.6271%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.3771%" y="693" width="0.1601%" height="15" fill="rgb(253,129,38)" fg:x="267" fg:w="2"/><text x="21.6271%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.4572%" y="677" width="0.0801%" height="15" fill="rgb(214,110,11)" fg:x="268" fg:w="1"/><text x="21.7072%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.4572%" y="661" width="0.0801%" height="15" fill="rgb(246,150,22)" fg:x="268" fg:w="1"/><text x="21.7072%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.4572%" y="645" width="0.0801%" height="15" fill="rgb(219,170,39)" fg:x="268" fg:w="1"/><text x="21.7072%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.4572%" y="629" width="0.0801%" height="15" fill="rgb(221,143,52)" fg:x="268" fg:w="1"/><text x="21.7072%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.4572%" y="613" width="0.0801%" height="15" fill="rgb(237,122,11)" fg:x="268" fg:w="1"/><text x="21.7072%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.4572%" y="597" width="0.0801%" height="15" fill="rgb(217,114,13)" fg:x="268" fg:w="1"/><text x="21.7072%" y="607.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="21.5372%" y="725" width="0.0801%" height="15" fill="rgb(218,184,28)" fg:x="269" fg:w="1"/><text x="21.7872%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.5372%" y="709" width="0.0801%" height="15" fill="rgb(237,33,22)" fg:x="269" fg:w="1"/><text x="21.7872%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.5372%" y="693" width="0.0801%" height="15" fill="rgb(224,56,42)" fg:x="269" fg:w="1"/><text x="21.7872%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="21.5372%" y="677" width="0.0801%" height="15" fill="rgb(216,138,53)" fg:x="269" fg:w="1"/><text x="21.7872%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="21.6173%" y="725" width="0.0801%" height="15" fill="rgb(233,229,40)" fg:x="270" fg:w="1"/><text x="21.8673%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.6173%" y="709" width="0.0801%" height="15" fill="rgb(252,105,0)" fg:x="270" fg:w="1"/><text x="21.8673%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.6974%" y="693" width="0.0801%" height="15" fill="rgb(212,75,24)" fg:x="271" fg:w="1"/><text x="21.9474%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="21.5372%" y="757" width="0.3203%" height="15" fill="rgb(235,168,50)" fg:x="269" fg:w="4"/><text x="21.7872%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="21.5372%" y="741" width="0.3203%" height="15" fill="rgb(247,204,12)" fg:x="269" fg:w="4"/><text x="21.7872%" y="751.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="21.6974%" y="725" width="0.1601%" height="15" fill="rgb(250,203,27)" fg:x="271" fg:w="2"/><text x="21.9474%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="21.6974%" y="709" width="0.1601%" height="15" fill="rgb(221,215,2)" fg:x="271" fg:w="2"/><text x="21.9474%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.7774%" y="693" width="0.0801%" height="15" fill="rgb(242,163,47)" fg:x="272" fg:w="1"/><text x="22.0274%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.7774%" y="677" width="0.0801%" height="15" fill="rgb(237,136,50)" fg:x="272" fg:w="1"/><text x="22.0274%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.7774%" y="661" width="0.0801%" height="15" fill="rgb(217,201,47)" fg:x="272" fg:w="1"/><text x="22.0274%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="21.8575%" y="725" width="0.0801%" height="15" fill="rgb(212,38,47)" fg:x="273" fg:w="1"/><text x="22.1075%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="21.8575%" y="709" width="0.0801%" height="15" fill="rgb(254,113,41)" fg:x="273" fg:w="1"/><text x="22.1075%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.8575%" y="693" width="0.0801%" height="15" fill="rgb(236,7,22)" fg:x="273" fg:w="1"/><text x="22.1075%" y="703.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="21.8575%" y="677" width="0.0801%" height="15" fill="rgb(235,81,25)" fg:x="273" fg:w="1"/><text x="22.1075%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="21.9376%" y="677" width="0.0801%" height="15" fill="rgb(216,41,31)" fg:x="274" fg:w="1"/><text x="22.1876%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.9376%" y="661" width="0.0801%" height="15" fill="rgb(249,219,15)" fg:x="274" fg:w="1"/><text x="22.1876%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.9376%" y="645" width="0.0801%" height="15" fill="rgb(248,201,3)" fg:x="274" fg:w="1"/><text x="22.1876%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.9376%" y="629" width="0.0801%" height="15" fill="rgb(249,141,18)" fg:x="274" fg:w="1"/><text x="22.1876%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.9376%" y="613" width="0.0801%" height="15" fill="rgb(222,32,39)" fg:x="274" fg:w="1"/><text x="22.1876%" y="623.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="21.9376%" y="725" width="0.1601%" height="15" fill="rgb(237,139,51)" fg:x="274" fg:w="2"/><text x="22.1876%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="21.9376%" y="709" width="0.1601%" height="15" fill="rgb(218,210,4)" fg:x="274" fg:w="2"/><text x="22.1876%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.9376%" y="693" width="0.1601%" height="15" fill="rgb(217,199,13)" fg:x="274" fg:w="2"/><text x="22.1876%" y="703.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.0176%" y="677" width="0.0801%" height="15" fill="rgb(222,118,25)" fg:x="275" fg:w="1"/><text x="22.2676%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0176%" y="661" width="0.0801%" height="15" fill="rgb(241,70,28)" fg:x="275" fg:w="1"/><text x="22.2676%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.0176%" y="645" width="0.0801%" height="15" fill="rgb(205,51,41)" fg:x="275" fg:w="1"/><text x="22.2676%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0176%" y="629" width="0.0801%" height="15" fill="rgb(237,165,49)" fg:x="275" fg:w="1"/><text x="22.2676%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="22.0176%" y="613" width="0.0801%" height="15" fill="rgb(213,10,51)" fg:x="275" fg:w="1"/><text x="22.2676%" y="623.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="22.0176%" y="597" width="0.0801%" height="15" fill="rgb(245,89,32)" fg:x="275" fg:w="1"/><text x="22.2676%" y="607.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="22.0176%" y="581" width="0.0801%" height="15" fill="rgb(249,81,54)" fg:x="275" fg:w="1"/><text x="22.2676%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="22.0977%" y="677" width="0.1601%" height="15" fill="rgb(223,134,14)" fg:x="276" fg:w="2"/><text x="22.3477%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.0977%" y="661" width="0.1601%" height="15" fill="rgb(233,62,37)" fg:x="276" fg:w="2"/><text x="22.3477%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.0977%" y="645" width="0.1601%" height="15" fill="rgb(219,117,42)" fg:x="276" fg:w="2"/><text x="22.3477%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.0977%" y="629" width="0.1601%" height="15" fill="rgb(248,40,28)" fg:x="276" fg:w="2"/><text x="22.3477%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.0977%" y="613" width="0.1601%" height="15" fill="rgb(246,66,35)" fg:x="276" fg:w="2"/><text x="22.3477%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.0977%" y="597" width="0.1601%" height="15" fill="rgb(250,229,22)" fg:x="276" fg:w="2"/><text x="22.3477%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="22.0977%" y="581" width="0.1601%" height="15" fill="rgb(213,89,18)" fg:x="276" fg:w="2"/><text x="22.3477%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.0977%" y="565" width="0.1601%" height="15" fill="rgb(213,122,9)" fg:x="276" fg:w="2"/><text x="22.3477%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.0977%" y="549" width="0.1601%" height="15" fill="rgb(220,213,48)" fg:x="276" fg:w="2"/><text x="22.3477%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.0977%" y="533" width="0.1601%" height="15" fill="rgb(244,109,54)" fg:x="276" fg:w="2"/><text x="22.3477%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.1777%" y="517" width="0.0801%" height="15" fill="rgb(254,104,49)" fg:x="277" fg:w="1"/><text x="22.4277%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.1777%" y="501" width="0.0801%" height="15" fill="rgb(219,28,32)" fg:x="277" fg:w="1"/><text x="22.4277%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="22.1777%" y="485" width="0.0801%" height="15" fill="rgb(249,153,33)" fg:x="277" fg:w="1"/><text x="22.4277%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="22.1777%" y="469" width="0.0801%" height="15" fill="rgb(230,116,21)" fg:x="277" fg:w="1"/><text x="22.4277%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.3379%" y="645" width="0.0801%" height="15" fill="rgb(247,110,3)" fg:x="279" fg:w="1"/><text x="22.5879%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.3379%" y="629" width="0.0801%" height="15" fill="rgb(227,128,3)" fg:x="279" fg:w="1"/><text x="22.5879%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="22.0977%" y="709" width="0.4003%" height="15" fill="rgb(208,21,1)" fg:x="276" fg:w="5"/><text x="22.3477%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="22.0977%" y="693" width="0.4003%" height="15" fill="rgb(225,24,20)" fg:x="276" fg:w="5"/><text x="22.3477%" y="703.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="22.2578%" y="677" width="0.2402%" height="15" fill="rgb(250,159,24)" fg:x="278" fg:w="3"/><text x="22.5078%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="22.2578%" y="661" width="0.2402%" height="15" fill="rgb(214,30,53)" fg:x="278" fg:w="3"/><text x="22.5078%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="22.4179%" y="645" width="0.0801%" height="15" fill="rgb(243,198,11)" fg:x="280" fg:w="1"/><text x="22.6679%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.4179%" y="629" width="0.0801%" height="15" fill="rgb(232,33,1)" fg:x="280" fg:w="1"/><text x="22.6679%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="22.4179%" y="613" width="0.0801%" height="15" fill="rgb(242,60,11)" fg:x="280" fg:w="1"/><text x="22.6679%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.4179%" y="597" width="0.0801%" height="15" fill="rgb(241,229,34)" fg:x="280" fg:w="1"/><text x="22.6679%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="22.4179%" y="581" width="0.0801%" height="15" fill="rgb(230,92,51)" fg:x="280" fg:w="1"/><text x="22.6679%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="22.4179%" y="565" width="0.0801%" height="15" fill="rgb(212,209,8)" fg:x="280" fg:w="1"/><text x="22.6679%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.4179%" y="549" width="0.0801%" height="15" fill="rgb(241,55,35)" fg:x="280" fg:w="1"/><text x="22.6679%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="22.4179%" y="533" width="0.0801%" height="15" fill="rgb(208,187,52)" fg:x="280" fg:w="1"/><text x="22.6679%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.4179%" y="517" width="0.0801%" height="15" fill="rgb(251,110,17)" fg:x="280" fg:w="1"/><text x="22.6679%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="21.8575%" y="741" width="0.7206%" height="15" fill="rgb(246,225,54)" fg:x="273" fg:w="9"/><text x="22.1075%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="22.0977%" y="725" width="0.4804%" height="15" fill="rgb(220,109,6)" fg:x="276" fg:w="6"/><text x="22.3477%" y="735.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="22.4980%" y="709" width="0.0801%" height="15" fill="rgb(228,56,50)" fg:x="281" fg:w="1"/><text x="22.7480%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.4980%" y="693" width="0.0801%" height="15" fill="rgb(230,34,30)" fg:x="281" fg:w="1"/><text x="22.7480%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="22.5781%" y="725" width="0.0801%" height="15" fill="rgb(205,28,42)" fg:x="282" fg:w="1"/><text x="22.8281%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="22.6581%" y="693" width="0.1601%" height="15" fill="rgb(215,68,0)" fg:x="283" fg:w="2"/><text x="22.9081%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.7382%" y="677" width="0.0801%" height="15" fill="rgb(206,91,47)" fg:x="284" fg:w="1"/><text x="22.9882%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.7382%" y="661" width="0.0801%" height="15" fill="rgb(241,159,43)" fg:x="284" fg:w="1"/><text x="22.9882%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7382%" y="645" width="0.0801%" height="15" fill="rgb(232,191,38)" fg:x="284" fg:w="1"/><text x="22.9882%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7382%" y="629" width="0.0801%" height="15" fill="rgb(212,180,41)" fg:x="284" fg:w="1"/><text x="22.9882%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7382%" y="613" width="0.0801%" height="15" fill="rgb(236,134,49)" fg:x="284" fg:w="1"/><text x="22.9882%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7382%" y="597" width="0.0801%" height="15" fill="rgb(221,83,26)" fg:x="284" fg:w="1"/><text x="22.9882%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.7382%" y="581" width="0.0801%" height="15" fill="rgb(215,87,39)" fg:x="284" fg:w="1"/><text x="22.9882%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7382%" y="565" width="0.0801%" height="15" fill="rgb(242,28,29)" fg:x="284" fg:w="1"/><text x="22.9882%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7382%" y="549" width="0.0801%" height="15" fill="rgb(212,219,47)" fg:x="284" fg:w="1"/><text x="22.9882%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7382%" y="533" width="0.0801%" height="15" fill="rgb(221,35,20)" fg:x="284" fg:w="1"/><text x="22.9882%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7382%" y="517" width="0.0801%" height="15" fill="rgb(234,144,13)" fg:x="284" fg:w="1"/><text x="22.9882%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7382%" y="501" width="0.0801%" height="15" fill="rgb(237,41,27)" fg:x="284" fg:w="1"/><text x="22.9882%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="22.7382%" y="485" width="0.0801%" height="15" fill="rgb(253,175,5)" fg:x="284" fg:w="1"/><text x="22.9882%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.7382%" y="469" width="0.0801%" height="15" fill="rgb(235,210,51)" fg:x="284" fg:w="1"/><text x="22.9882%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="22.6581%" y="725" width="0.2402%" height="15" fill="rgb(241,180,35)" fg:x="283" fg:w="3"/><text x="22.9081%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="22.6581%" y="709" width="0.2402%" height="15" fill="rgb(219,45,16)" fg:x="283" fg:w="3"/><text x="22.9081%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="22.8183%" y="693" width="0.0801%" height="15" fill="rgb(247,212,4)" fg:x="285" fg:w="1"/><text x="23.0683%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="22.8183%" y="677" width="0.0801%" height="15" fill="rgb(224,211,1)" fg:x="285" fg:w="1"/><text x="23.0683%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.8183%" y="661" width="0.0801%" height="15" fill="rgb(210,193,36)" fg:x="285" fg:w="1"/><text x="23.0683%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="22.8983%" y="725" width="0.0801%" height="15" fill="rgb(215,121,20)" fg:x="286" fg:w="1"/><text x="23.1483%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9784%" y="677" width="0.0801%" height="15" fill="rgb(238,146,2)" fg:x="287" fg:w="1"/><text x="23.2284%" y="687.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="22.9784%" y="709" width="0.1601%" height="15" fill="rgb(254,123,45)" fg:x="287" fg:w="2"/><text x="23.2284%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.9784%" y="693" width="0.1601%" height="15" fill="rgb(225,126,11)" fg:x="287" fg:w="2"/><text x="23.2284%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="23.0584%" y="677" width="0.0801%" height="15" fill="rgb(239,12,5)" fg:x="288" fg:w="1"/><text x="23.3084%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.0584%" y="661" width="0.0801%" height="15" fill="rgb(241,207,14)" fg:x="288" fg:w="1"/><text x="23.3084%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.0584%" y="645" width="0.0801%" height="15" fill="rgb(227,134,33)" fg:x="288" fg:w="1"/><text x="23.3084%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.0584%" y="629" width="0.0801%" height="15" fill="rgb(221,40,52)" fg:x="288" fg:w="1"/><text x="23.3084%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="22.9784%" y="725" width="0.2402%" height="15" fill="rgb(206,93,8)" fg:x="287" fg:w="3"/><text x="23.2284%" y="735.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="23.1385%" y="709" width="0.0801%" height="15" fill="rgb(242,160,22)" fg:x="289" fg:w="1"/><text x="23.3885%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.1385%" y="693" width="0.0801%" height="15" fill="rgb(232,204,40)" fg:x="289" fg:w="1"/><text x="23.3885%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="23.1385%" y="677" width="0.0801%" height="15" fill="rgb(247,210,47)" fg:x="289" fg:w="1"/><text x="23.3885%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2186%" y="533" width="0.0801%" height="15" fill="rgb(211,91,7)" fg:x="290" fg:w="1"/><text x="23.4686%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.2186%" y="517" width="0.0801%" height="15" fill="rgb(252,160,34)" fg:x="290" fg:w="1"/><text x="23.4686%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="23.2186%" y="677" width="0.1601%" height="15" fill="rgb(220,34,39)" fg:x="290" fg:w="2"/><text x="23.4686%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="23.2186%" y="661" width="0.1601%" height="15" fill="rgb(247,49,38)" fg:x="290" fg:w="2"/><text x="23.4686%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.2186%" y="645" width="0.1601%" height="15" fill="rgb(228,175,44)" fg:x="290" fg:w="2"/><text x="23.4686%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.2186%" y="629" width="0.1601%" height="15" fill="rgb(218,214,32)" fg:x="290" fg:w="2"/><text x="23.4686%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.2186%" y="613" width="0.1601%" height="15" fill="rgb(213,50,12)" fg:x="290" fg:w="2"/><text x="23.4686%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.2186%" y="597" width="0.1601%" height="15" fill="rgb(219,35,41)" fg:x="290" fg:w="2"/><text x="23.4686%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.2186%" y="581" width="0.1601%" height="15" fill="rgb(219,18,38)" fg:x="290" fg:w="2"/><text x="23.4686%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="23.2186%" y="565" width="0.1601%" height="15" fill="rgb(223,217,6)" fg:x="290" fg:w="2"/><text x="23.4686%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.2186%" y="549" width="0.1601%" height="15" fill="rgb(208,193,35)" fg:x="290" fg:w="2"/><text x="23.4686%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.2986%" y="533" width="0.0801%" height="15" fill="rgb(254,212,54)" fg:x="291" fg:w="1"/><text x="23.5486%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.2986%" y="517" width="0.0801%" height="15" fill="rgb(205,10,2)" fg:x="291" fg:w="1"/><text x="23.5486%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.2986%" y="501" width="0.0801%" height="15" fill="rgb(230,133,29)" fg:x="291" fg:w="1"/><text x="23.5486%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.2986%" y="485" width="0.0801%" height="15" fill="rgb(226,14,15)" fg:x="291" fg:w="1"/><text x="23.5486%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.3787%" y="629" width="0.0801%" height="15" fill="rgb(226,140,54)" fg:x="292" fg:w="1"/><text x="23.6287%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.3787%" y="613" width="0.0801%" height="15" fill="rgb(250,47,41)" fg:x="292" fg:w="1"/><text x="23.6287%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.3787%" y="597" width="0.0801%" height="15" fill="rgb(227,218,41)" fg:x="292" fg:w="1"/><text x="23.6287%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.3787%" y="581" width="0.0801%" height="15" fill="rgb(254,183,7)" fg:x="292" fg:w="1"/><text x="23.6287%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.3787%" y="565" width="0.0801%" height="15" fill="rgb(206,84,53)" fg:x="292" fg:w="1"/><text x="23.6287%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.3787%" y="549" width="0.0801%" height="15" fill="rgb(213,177,2)" fg:x="292" fg:w="1"/><text x="23.6287%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.3787%" y="533" width="0.0801%" height="15" fill="rgb(234,28,29)" fg:x="292" fg:w="1"/><text x="23.6287%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.3787%" y="517" width="0.0801%" height="15" fill="rgb(248,211,38)" fg:x="292" fg:w="1"/><text x="23.6287%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.3787%" y="501" width="0.0801%" height="15" fill="rgb(246,30,0)" fg:x="292" fg:w="1"/><text x="23.6287%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.3787%" y="485" width="0.0801%" height="15" fill="rgb(244,115,24)" fg:x="292" fg:w="1"/><text x="23.6287%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.3787%" y="469" width="0.0801%" height="15" fill="rgb(226,193,14)" fg:x="292" fg:w="1"/><text x="23.6287%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.3787%" y="453" width="0.0801%" height="15" fill="rgb(211,196,48)" fg:x="292" fg:w="1"/><text x="23.6287%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.3787%" y="437" width="0.0801%" height="15" fill="rgb(235,32,20)" fg:x="292" fg:w="1"/><text x="23.6287%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.3787%" y="421" width="0.0801%" height="15" fill="rgb(251,151,49)" fg:x="292" fg:w="1"/><text x="23.6287%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.3787%" y="405" width="0.0801%" height="15" fill="rgb(254,141,38)" fg:x="292" fg:w="1"/><text x="23.6287%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.3787%" y="389" width="0.0801%" height="15" fill="rgb(209,118,44)" fg:x="292" fg:w="1"/><text x="23.6287%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.3787%" y="373" width="0.0801%" height="15" fill="rgb(205,81,4)" fg:x="292" fg:w="1"/><text x="23.6287%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (146 samples, 11.69%)</title><rect x="11.8495%" y="773" width="11.6894%" height="15" fill="rgb(241,25,6)" fg:x="148" fg:w="146"/><text x="12.0995%" y="783.50">plugins_core::bui..</text></g><g><title>plugins_core::build::Build::occupying (21 samples, 1.68%)</title><rect x="21.8575%" y="757" width="1.6813%" height="15" fill="rgb(212,179,29)" fg:x="273" fg:w="21"/><text x="22.1075%" y="767.50"></text></g><g><title>plugins_core::tools::set_occupying (12 samples, 0.96%)</title><rect x="22.5781%" y="741" width="0.9608%" height="15" fill="rgb(241,40,32)" fg:x="282" fg:w="12"/><text x="22.8281%" y="751.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (4 samples, 0.32%)</title><rect x="23.2186%" y="725" width="0.3203%" height="15" fill="rgb(223,35,2)" fg:x="290" fg:w="4"/><text x="23.4686%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="23.2186%" y="709" width="0.3203%" height="15" fill="rgb(221,125,54)" fg:x="290" fg:w="4"/><text x="23.4686%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="23.2186%" y="693" width="0.3203%" height="15" fill="rgb(230,5,49)" fg:x="290" fg:w="4"/><text x="23.4686%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="23.3787%" y="677" width="0.1601%" height="15" fill="rgb(221,157,7)" fg:x="292" fg:w="2"/><text x="23.6287%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="23.3787%" y="661" width="0.1601%" height="15" fill="rgb(242,163,10)" fg:x="292" fg:w="2"/><text x="23.6287%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.3787%" y="645" width="0.1601%" height="15" fill="rgb(232,30,2)" fg:x="292" fg:w="2"/><text x="23.6287%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.4588%" y="629" width="0.0801%" height="15" fill="rgb(245,102,40)" fg:x="293" fg:w="1"/><text x="23.7088%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.4588%" y="613" width="0.0801%" height="15" fill="rgb(242,10,41)" fg:x="293" fg:w="1"/><text x="23.7088%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.4588%" y="597" width="0.0801%" height="15" fill="rgb(236,184,36)" fg:x="293" fg:w="1"/><text x="23.7088%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.4588%" y="581" width="0.0801%" height="15" fill="rgb(247,147,48)" fg:x="293" fg:w="1"/><text x="23.7088%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.4588%" y="565" width="0.0801%" height="15" fill="rgb(226,166,2)" fg:x="293" fg:w="1"/><text x="23.7088%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.5388%" y="725" width="0.0801%" height="15" fill="rgb(251,196,7)" fg:x="294" fg:w="1"/><text x="23.7888%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.5388%" y="709" width="0.0801%" height="15" fill="rgb(241,40,13)" fg:x="294" fg:w="1"/><text x="23.7888%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.5388%" y="693" width="0.0801%" height="15" fill="rgb(254,4,12)" fg:x="294" fg:w="1"/><text x="23.7888%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.5388%" y="677" width="0.0801%" height="15" fill="rgb(244,139,49)" fg:x="294" fg:w="1"/><text x="23.7888%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.5388%" y="661" width="0.0801%" height="15" fill="rgb(227,28,42)" fg:x="294" fg:w="1"/><text x="23.7888%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.5388%" y="645" width="0.0801%" height="15" fill="rgb(231,135,32)" fg:x="294" fg:w="1"/><text x="23.7888%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.5388%" y="629" width="0.0801%" height="15" fill="rgb(244,182,3)" fg:x="294" fg:w="1"/><text x="23.7888%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.5388%" y="613" width="0.0801%" height="15" fill="rgb(247,46,19)" fg:x="294" fg:w="1"/><text x="23.7888%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.5388%" y="597" width="0.0801%" height="15" fill="rgb(251,179,10)" fg:x="294" fg:w="1"/><text x="23.7888%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.5388%" y="581" width="0.0801%" height="15" fill="rgb(229,222,18)" fg:x="294" fg:w="1"/><text x="23.7888%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.5388%" y="565" width="0.0801%" height="15" fill="rgb(251,107,20)" fg:x="294" fg:w="1"/><text x="23.7888%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.5388%" y="549" width="0.0801%" height="15" fill="rgb(233,193,19)" fg:x="294" fg:w="1"/><text x="23.7888%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.6189%" y="613" width="0.0801%" height="15" fill="rgb(229,146,53)" fg:x="295" fg:w="1"/><text x="23.8689%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.24%)</title><rect x="23.5388%" y="773" width="0.2402%" height="15" fill="rgb(244,52,11)" fg:x="294" fg:w="3"/><text x="23.7888%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="23.5388%" y="757" width="0.2402%" height="15" fill="rgb(245,211,46)" fg:x="294" fg:w="3"/><text x="23.7888%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="23.5388%" y="741" width="0.2402%" height="15" fill="rgb(213,8,31)" fg:x="294" fg:w="3"/><text x="23.7888%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="23.6189%" y="725" width="0.1601%" height="15" fill="rgb(205,101,39)" fg:x="295" fg:w="2"/><text x="23.8689%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="23.6189%" y="709" width="0.1601%" height="15" fill="rgb(212,157,1)" fg:x="295" fg:w="2"/><text x="23.8689%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.6189%" y="693" width="0.1601%" height="15" fill="rgb(232,30,46)" fg:x="295" fg:w="2"/><text x="23.8689%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.6189%" y="677" width="0.1601%" height="15" fill="rgb(216,201,6)" fg:x="295" fg:w="2"/><text x="23.8689%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.6189%" y="661" width="0.1601%" height="15" fill="rgb(209,18,6)" fg:x="295" fg:w="2"/><text x="23.8689%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.6189%" y="645" width="0.1601%" height="15" fill="rgb(219,138,3)" fg:x="295" fg:w="2"/><text x="23.8689%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.6189%" y="629" width="0.1601%" height="15" fill="rgb(210,91,46)" fg:x="295" fg:w="2"/><text x="23.8689%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.6990%" y="613" width="0.0801%" height="15" fill="rgb(241,80,44)" fg:x="296" fg:w="1"/><text x="23.9490%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.6990%" y="597" width="0.0801%" height="15" fill="rgb(236,205,36)" fg:x="296" fg:w="1"/><text x="23.9490%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="23.7790%" y="725" width="0.0801%" height="15" fill="rgb(205,59,37)" fg:x="297" fg:w="1"/><text x="24.0290%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="23.7790%" y="709" width="0.0801%" height="15" fill="rgb(239,166,39)" fg:x="297" fg:w="1"/><text x="24.0290%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.7790%" y="693" width="0.0801%" height="15" fill="rgb(239,146,40)" fg:x="297" fg:w="1"/><text x="24.0290%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.7790%" y="677" width="0.0801%" height="15" fill="rgb(231,11,52)" fg:x="297" fg:w="1"/><text x="24.0290%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.7790%" y="661" width="0.0801%" height="15" fill="rgb(253,21,37)" fg:x="297" fg:w="1"/><text x="24.0290%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.7790%" y="645" width="0.0801%" height="15" fill="rgb(224,87,39)" fg:x="297" fg:w="1"/><text x="24.0290%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.7790%" y="629" width="0.0801%" height="15" fill="rgb(249,15,46)" fg:x="297" fg:w="1"/><text x="24.0290%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.7790%" y="613" width="0.0801%" height="15" fill="rgb(250,37,51)" fg:x="297" fg:w="1"/><text x="24.0290%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.7790%" y="597" width="0.0801%" height="15" fill="rgb(205,185,43)" fg:x="297" fg:w="1"/><text x="24.0290%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.7790%" y="581" width="0.0801%" height="15" fill="rgb(206,65,41)" fg:x="297" fg:w="1"/><text x="24.0290%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.7790%" y="565" width="0.0801%" height="15" fill="rgb(236,159,32)" fg:x="297" fg:w="1"/><text x="24.0290%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.7790%" y="549" width="0.0801%" height="15" fill="rgb(228,199,27)" fg:x="297" fg:w="1"/><text x="24.0290%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.7790%" y="533" width="0.0801%" height="15" fill="rgb(212,0,37)" fg:x="297" fg:w="1"/><text x="24.0290%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.7790%" y="517" width="0.0801%" height="15" fill="rgb(248,50,11)" fg:x="297" fg:w="1"/><text x="24.0290%" y="527.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="23.7790%" y="501" width="0.0801%" height="15" fill="rgb(231,164,25)" fg:x="297" fg:w="1"/><text x="24.0290%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.7790%" y="485" width="0.0801%" height="15" fill="rgb(238,38,39)" fg:x="297" fg:w="1"/><text x="24.0290%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.7790%" y="469" width="0.0801%" height="15" fill="rgb(210,15,50)" fg:x="297" fg:w="1"/><text x="24.0290%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.7790%" y="453" width="0.0801%" height="15" fill="rgb(251,126,36)" fg:x="297" fg:w="1"/><text x="24.0290%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.7790%" y="437" width="0.0801%" height="15" fill="rgb(243,59,26)" fg:x="297" fg:w="1"/><text x="24.0290%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.7790%" y="421" width="0.0801%" height="15" fill="rgb(215,24,30)" fg:x="297" fg:w="1"/><text x="24.0290%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="23.7790%" y="405" width="0.0801%" height="15" fill="rgb(253,50,51)" fg:x="297" fg:w="1"/><text x="24.0290%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="23.7790%" y="389" width="0.0801%" height="15" fill="rgb(252,2,16)" fg:x="297" fg:w="1"/><text x="24.0290%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="23.7790%" y="373" width="0.0801%" height="15" fill="rgb(209,123,36)" fg:x="297" fg:w="1"/><text x="24.0290%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="23.7790%" y="357" width="0.0801%" height="15" fill="rgb(245,60,15)" fg:x="297" fg:w="1"/><text x="24.0290%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="23.7790%" y="341" width="0.0801%" height="15" fill="rgb(246,4,13)" fg:x="297" fg:w="1"/><text x="24.0290%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="23.7790%" y="325" width="0.0801%" height="15" fill="rgb(210,223,46)" fg:x="297" fg:w="1"/><text x="24.0290%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="23.7790%" y="309" width="0.0801%" height="15" fill="rgb(248,1,9)" fg:x="297" fg:w="1"/><text x="24.0290%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="23.7790%" y="293" width="0.0801%" height="15" fill="rgb(254,2,34)" fg:x="297" fg:w="1"/><text x="24.0290%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="23.7790%" y="277" width="0.0801%" height="15" fill="rgb(239,176,1)" fg:x="297" fg:w="1"/><text x="24.0290%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="23.7790%" y="261" width="0.0801%" height="15" fill="rgb(250,25,32)" fg:x="297" fg:w="1"/><text x="24.0290%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="23.7790%" y="245" width="0.0801%" height="15" fill="rgb(225,28,39)" fg:x="297" fg:w="1"/><text x="24.0290%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="23.7790%" y="229" width="0.0801%" height="15" fill="rgb(230,166,37)" fg:x="297" fg:w="1"/><text x="24.0290%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="23.7790%" y="213" width="0.0801%" height="15" fill="rgb(246,220,4)" fg:x="297" fg:w="1"/><text x="24.0290%" y="223.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="23.8591%" y="725" width="0.1601%" height="15" fill="rgb(219,119,33)" fg:x="298" fg:w="2"/><text x="24.1091%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="23.9392%" y="709" width="0.0801%" height="15" fill="rgb(221,207,38)" fg:x="299" fg:w="1"/><text x="24.1892%" y="719.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="23.9392%" y="693" width="0.0801%" height="15" fill="rgb(214,153,5)" fg:x="299" fg:w="1"/><text x="24.1892%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.9392%" y="677" width="0.0801%" height="15" fill="rgb(223,50,16)" fg:x="299" fg:w="1"/><text x="24.1892%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.9392%" y="661" width="0.0801%" height="15" fill="rgb(209,207,12)" fg:x="299" fg:w="1"/><text x="24.1892%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.9392%" y="645" width="0.0801%" height="15" fill="rgb(207,3,46)" fg:x="299" fg:w="1"/><text x="24.1892%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="23.9392%" y="629" width="0.0801%" height="15" fill="rgb(232,45,53)" fg:x="299" fg:w="1"/><text x="24.1892%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="23.7790%" y="741" width="0.3203%" height="15" fill="rgb(206,140,15)" fg:x="297" fg:w="4"/><text x="24.0290%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="24.0192%" y="725" width="0.0801%" height="15" fill="rgb(245,66,17)" fg:x="300" fg:w="1"/><text x="24.2692%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="24.0192%" y="709" width="0.0801%" height="15" fill="rgb(221,25,37)" fg:x="300" fg:w="1"/><text x="24.2692%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="24.0192%" y="693" width="0.0801%" height="15" fill="rgb(215,99,47)" fg:x="300" fg:w="1"/><text x="24.2692%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="24.0192%" y="677" width="0.0801%" height="15" fill="rgb(219,154,44)" fg:x="300" fg:w="1"/><text x="24.2692%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="24.0192%" y="661" width="0.0801%" height="15" fill="rgb(210,197,36)" fg:x="300" fg:w="1"/><text x="24.2692%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.0192%" y="645" width="0.0801%" height="15" fill="rgb(217,137,10)" fg:x="300" fg:w="1"/><text x="24.2692%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.0192%" y="629" width="0.0801%" height="15" fill="rgb(240,216,26)" fg:x="300" fg:w="1"/><text x="24.2692%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.0192%" y="613" width="0.0801%" height="15" fill="rgb(242,76,17)" fg:x="300" fg:w="1"/><text x="24.2692%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.0192%" y="597" width="0.0801%" height="15" fill="rgb(243,142,51)" fg:x="300" fg:w="1"/><text x="24.2692%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.0192%" y="581" width="0.0801%" height="15" fill="rgb(233,109,46)" fg:x="300" fg:w="1"/><text x="24.2692%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.0192%" y="565" width="0.0801%" height="15" fill="rgb(252,45,32)" fg:x="300" fg:w="1"/><text x="24.2692%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.0192%" y="549" width="0.0801%" height="15" fill="rgb(210,69,52)" fg:x="300" fg:w="1"/><text x="24.2692%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.0192%" y="533" width="0.0801%" height="15" fill="rgb(242,30,2)" fg:x="300" fg:w="1"/><text x="24.2692%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.0192%" y="517" width="0.0801%" height="15" fill="rgb(246,137,1)" fg:x="300" fg:w="1"/><text x="24.2692%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.0192%" y="501" width="0.0801%" height="15" fill="rgb(221,205,25)" fg:x="300" fg:w="1"/><text x="24.2692%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.0192%" y="485" width="0.0801%" height="15" fill="rgb(224,44,43)" fg:x="300" fg:w="1"/><text x="24.2692%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.0192%" y="469" width="0.0801%" height="15" fill="rgb(209,81,13)" fg:x="300" fg:w="1"/><text x="24.2692%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.0192%" y="453" width="0.0801%" height="15" fill="rgb(227,88,4)" fg:x="300" fg:w="1"/><text x="24.2692%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.0192%" y="437" width="0.0801%" height="15" fill="rgb(228,118,49)" fg:x="300" fg:w="1"/><text x="24.2692%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.0192%" y="421" width="0.0801%" height="15" fill="rgb(225,215,27)" fg:x="300" fg:w="1"/><text x="24.2692%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.0192%" y="405" width="0.0801%" height="15" fill="rgb(235,226,1)" fg:x="300" fg:w="1"/><text x="24.2692%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="24.0993%" y="725" width="0.0801%" height="15" fill="rgb(205,107,17)" fg:x="301" fg:w="1"/><text x="24.3493%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="24.0993%" y="709" width="0.0801%" height="15" fill="rgb(247,85,8)" fg:x="301" fg:w="1"/><text x="24.3493%" y="719.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="24.0993%" y="693" width="0.0801%" height="15" fill="rgb(230,220,20)" fg:x="301" fg:w="1"/><text x="24.3493%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="24.0993%" y="677" width="0.0801%" height="15" fill="rgb(237,22,6)" fg:x="301" fg:w="1"/><text x="24.3493%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="24.0993%" y="661" width="0.0801%" height="15" fill="rgb(253,39,1)" fg:x="301" fg:w="1"/><text x="24.3493%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.0993%" y="645" width="0.0801%" height="15" fill="rgb(251,206,50)" fg:x="301" fg:w="1"/><text x="24.3493%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.0993%" y="629" width="0.0801%" height="15" fill="rgb(239,162,11)" fg:x="301" fg:w="1"/><text x="24.3493%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="24.0993%" y="613" width="0.0801%" height="15" fill="rgb(234,164,6)" fg:x="301" fg:w="1"/><text x="24.3493%" y="623.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="24.0993%" y="597" width="0.0801%" height="15" fill="rgb(238,112,10)" fg:x="301" fg:w="1"/><text x="24.3493%" y="607.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="24.0993%" y="581" width="0.0801%" height="15" fill="rgb(232,78,29)" fg:x="301" fg:w="1"/><text x="24.3493%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="24.1793%" y="709" width="0.0801%" height="15" fill="rgb(232,20,13)" fg:x="302" fg:w="1"/><text x="24.4293%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="24.1793%" y="693" width="0.0801%" height="15" fill="rgb(222,175,9)" fg:x="302" fg:w="1"/><text x="24.4293%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.1793%" y="677" width="0.0801%" height="15" fill="rgb(233,61,14)" fg:x="302" fg:w="1"/><text x="24.4293%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.1793%" y="661" width="0.0801%" height="15" fill="rgb(224,152,29)" fg:x="302" fg:w="1"/><text x="24.4293%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.1793%" y="645" width="0.0801%" height="15" fill="rgb(232,26,6)" fg:x="302" fg:w="1"/><text x="24.4293%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.1793%" y="629" width="0.0801%" height="15" fill="rgb(210,116,11)" fg:x="302" fg:w="1"/><text x="24.4293%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.1793%" y="613" width="0.0801%" height="15" fill="rgb(238,213,15)" fg:x="302" fg:w="1"/><text x="24.4293%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.1793%" y="597" width="0.0801%" height="15" fill="rgb(236,177,32)" fg:x="302" fg:w="1"/><text x="24.4293%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="24.0993%" y="741" width="0.2402%" height="15" fill="rgb(230,36,43)" fg:x="301" fg:w="3"/><text x="24.3493%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="24.1793%" y="725" width="0.1601%" height="15" fill="rgb(212,76,23)" fg:x="302" fg:w="2"/><text x="24.4293%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="24.2594%" y="709" width="0.0801%" height="15" fill="rgb(225,168,24)" fg:x="303" fg:w="1"/><text x="24.5094%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="24.2594%" y="693" width="0.0801%" height="15" fill="rgb(206,40,44)" fg:x="303" fg:w="1"/><text x="24.5094%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.2594%" y="677" width="0.0801%" height="15" fill="rgb(251,213,6)" fg:x="303" fg:w="1"/><text x="24.5094%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.2594%" y="661" width="0.0801%" height="15" fill="rgb(220,7,47)" fg:x="303" fg:w="1"/><text x="24.5094%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.2594%" y="645" width="0.0801%" height="15" fill="rgb(254,130,53)" fg:x="303" fg:w="1"/><text x="24.5094%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.2594%" y="629" width="0.0801%" height="15" fill="rgb(240,2,46)" fg:x="303" fg:w="1"/><text x="24.5094%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.2594%" y="613" width="0.0801%" height="15" fill="rgb(252,144,40)" fg:x="303" fg:w="1"/><text x="24.5094%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (8 samples, 0.64%)</title><rect x="23.7790%" y="773" width="0.6405%" height="15" fill="rgb(226,23,10)" fg:x="297" fg:w="8"/><text x="24.0290%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.64%)</title><rect x="23.7790%" y="757" width="0.6405%" height="15" fill="rgb(212,204,35)" fg:x="297" fg:w="8"/><text x="24.0290%" y="767.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="24.3395%" y="741" width="0.0801%" height="15" fill="rgb(218,201,15)" fg:x="304" fg:w="1"/><text x="24.5895%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="24.3395%" y="725" width="0.0801%" height="15" fill="rgb(224,197,5)" fg:x="304" fg:w="1"/><text x="24.5895%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="24.3395%" y="709" width="0.0801%" height="15" fill="rgb(224,185,18)" fg:x="304" fg:w="1"/><text x="24.5895%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="24.3395%" y="693" width="0.0801%" height="15" fill="rgb(251,71,45)" fg:x="304" fg:w="1"/><text x="24.5895%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.3395%" y="677" width="0.0801%" height="15" fill="rgb(216,74,24)" fg:x="304" fg:w="1"/><text x="24.5895%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.3395%" y="661" width="0.0801%" height="15" fill="rgb(250,36,51)" fg:x="304" fg:w="1"/><text x="24.5895%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.3395%" y="645" width="0.0801%" height="15" fill="rgb(209,224,28)" fg:x="304" fg:w="1"/><text x="24.5895%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.3395%" y="629" width="0.0801%" height="15" fill="rgb(228,5,10)" fg:x="304" fg:w="1"/><text x="24.5895%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.3395%" y="613" width="0.0801%" height="15" fill="rgb(250,57,40)" fg:x="304" fg:w="1"/><text x="24.5895%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.6597%" y="661" width="0.1601%" height="15" fill="rgb(228,194,41)" fg:x="308" fg:w="2"/><text x="24.9097%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.6597%" y="645" width="0.1601%" height="15" fill="rgb(206,68,23)" fg:x="308" fg:w="2"/><text x="24.9097%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.6597%" y="629" width="0.1601%" height="15" fill="rgb(230,33,29)" fg:x="308" fg:w="2"/><text x="24.9097%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.6597%" y="613" width="0.1601%" height="15" fill="rgb(210,39,32)" fg:x="308" fg:w="2"/><text x="24.9097%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.6597%" y="597" width="0.1601%" height="15" fill="rgb(236,89,23)" fg:x="308" fg:w="2"/><text x="24.9097%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="24.6597%" y="581" width="0.1601%" height="15" fill="rgb(218,52,52)" fg:x="308" fg:w="2"/><text x="24.9097%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="24.6597%" y="565" width="0.1601%" height="15" fill="rgb(235,154,5)" fg:x="308" fg:w="2"/><text x="24.9097%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="24.6597%" y="549" width="0.1601%" height="15" fill="rgb(223,168,9)" fg:x="308" fg:w="2"/><text x="24.9097%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="24.6597%" y="533" width="0.1601%" height="15" fill="rgb(220,8,33)" fg:x="308" fg:w="2"/><text x="24.9097%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="24.6597%" y="517" width="0.1601%" height="15" fill="rgb(216,176,3)" fg:x="308" fg:w="2"/><text x="24.9097%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="24.6597%" y="501" width="0.1601%" height="15" fill="rgb(254,150,22)" fg:x="308" fg:w="2"/><text x="24.9097%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="24.6597%" y="485" width="0.1601%" height="15" fill="rgb(231,61,53)" fg:x="308" fg:w="2"/><text x="24.9097%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="24.6597%" y="469" width="0.1601%" height="15" fill="rgb(249,177,41)" fg:x="308" fg:w="2"/><text x="24.9097%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="24.6597%" y="453" width="0.1601%" height="15" fill="rgb(221,122,7)" fg:x="308" fg:w="2"/><text x="24.9097%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="24.6597%" y="437" width="0.1601%" height="15" fill="rgb(215,115,7)" fg:x="308" fg:w="2"/><text x="24.9097%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="24.6597%" y="421" width="0.1601%" height="15" fill="rgb(218,108,33)" fg:x="308" fg:w="2"/><text x="24.9097%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="24.6597%" y="405" width="0.1601%" height="15" fill="rgb(221,205,39)" fg:x="308" fg:w="2"/><text x="24.9097%" y="415.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="24.6597%" y="693" width="0.2402%" height="15" fill="rgb(220,171,18)" fg:x="308" fg:w="3"/><text x="24.9097%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="24.6597%" y="677" width="0.2402%" height="15" fill="rgb(236,188,29)" fg:x="308" fg:w="3"/><text x="24.9097%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.8199%" y="661" width="0.0801%" height="15" fill="rgb(239,29,5)" fg:x="310" fg:w="1"/><text x="25.0699%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.8199%" y="645" width="0.0801%" height="15" fill="rgb(236,114,44)" fg:x="310" fg:w="1"/><text x="25.0699%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.8199%" y="629" width="0.0801%" height="15" fill="rgb(239,214,48)" fg:x="310" fg:w="1"/><text x="25.0699%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.8199%" y="613" width="0.0801%" height="15" fill="rgb(241,56,8)" fg:x="310" fg:w="1"/><text x="25.0699%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.8199%" y="597" width="0.0801%" height="15" fill="rgb(228,201,0)" fg:x="310" fg:w="1"/><text x="25.0699%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.8199%" y="581" width="0.0801%" height="15" fill="rgb(226,219,34)" fg:x="310" fg:w="1"/><text x="25.0699%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="24.6597%" y="725" width="0.3203%" height="15" fill="rgb(209,204,54)" fg:x="308" fg:w="4"/><text x="24.9097%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="24.6597%" y="709" width="0.3203%" height="15" fill="rgb(251,160,17)" fg:x="308" fg:w="4"/><text x="24.9097%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="24.8999%" y="693" width="0.0801%" height="15" fill="rgb(235,15,25)" fg:x="311" fg:w="1"/><text x="25.1499%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="24.8999%" y="677" width="0.0801%" height="15" fill="rgb(216,209,28)" fg:x="311" fg:w="1"/><text x="25.1499%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.8999%" y="661" width="0.0801%" height="15" fill="rgb(248,123,21)" fg:x="311" fg:w="1"/><text x="25.1499%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="24.5797%" y="757" width="0.4804%" height="15" fill="rgb(226,138,44)" fg:x="307" fg:w="6"/><text x="24.8297%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="24.6597%" y="741" width="0.4003%" height="15" fill="rgb(211,104,54)" fg:x="308" fg:w="5"/><text x="24.9097%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="24.9800%" y="725" width="0.0801%" height="15" fill="rgb(241,198,15)" fg:x="312" fg:w="1"/><text x="25.2300%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9800%" y="709" width="0.0801%" height="15" fill="rgb(227,155,54)" fg:x="312" fg:w="1"/><text x="25.2300%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9800%" y="693" width="0.0801%" height="15" fill="rgb(225,131,31)" fg:x="312" fg:w="1"/><text x="25.2300%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="24.9800%" y="677" width="0.0801%" height="15" fill="rgb(242,40,17)" fg:x="312" fg:w="1"/><text x="25.2300%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="25.1401%" y="741" width="0.0801%" height="15" fill="rgb(254,57,35)" fg:x="314" fg:w="1"/><text x="25.3901%" y="751.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="25.1401%" y="725" width="0.0801%" height="15" fill="rgb(240,64,32)" fg:x="314" fg:w="1"/><text x="25.3901%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="25.1401%" y="709" width="0.0801%" height="15" fill="rgb(251,136,26)" fg:x="314" fg:w="1"/><text x="25.3901%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.1401%" y="693" width="0.0801%" height="15" fill="rgb(208,60,54)" fg:x="314" fg:w="1"/><text x="25.3901%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="25.1401%" y="677" width="0.0801%" height="15" fill="rgb(220,13,12)" fg:x="314" fg:w="1"/><text x="25.3901%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.1401%" y="661" width="0.0801%" height="15" fill="rgb(213,149,1)" fg:x="314" fg:w="1"/><text x="25.3901%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1401%" y="645" width="0.0801%" height="15" fill="rgb(212,191,39)" fg:x="314" fg:w="1"/><text x="25.3901%" y="655.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (273 samples, 21.86%)</title><rect x="3.5228%" y="789" width="21.8575%" height="15" fill="rgb(215,221,42)" fg:x="44" fg:w="273"/><text x="3.7728%" y="799.50">&lt;tests::HoldingKeyInVessel as tests..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (12 samples, 0.96%)</title><rect x="24.4195%" y="773" width="0.9608%" height="15" fill="rgb(244,79,23)" fg:x="305" fg:w="12"/><text x="24.6695%" y="783.50"></text></g><g><title>plugins_core::build::Build::new_world (4 samples, 0.32%)</title><rect x="25.0600%" y="757" width="0.3203%" height="15" fill="rgb(247,17,29)" fg:x="313" fg:w="4"/><text x="25.3100%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.16%)</title><rect x="25.2202%" y="741" width="0.1601%" height="15" fill="rgb(251,221,21)" fg:x="315" fg:w="2"/><text x="25.4702%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="25.2202%" y="725" width="0.1601%" height="15" fill="rgb(207,202,34)" fg:x="315" fg:w="2"/><text x="25.4702%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="25.2202%" y="709" width="0.1601%" height="15" fill="rgb(217,4,34)" fg:x="315" fg:w="2"/><text x="25.4702%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="25.2202%" y="693" width="0.1601%" height="15" fill="rgb(253,17,16)" fg:x="315" fg:w="2"/><text x="25.4702%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="25.2202%" y="677" width="0.1601%" height="15" fill="rgb(223,91,48)" fg:x="315" fg:w="2"/><text x="25.4702%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.2202%" y="661" width="0.1601%" height="15" fill="rgb(244,191,22)" fg:x="315" fg:w="2"/><text x="25.4702%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.3002%" y="645" width="0.0801%" height="15" fill="rgb(211,107,14)" fg:x="316" fg:w="1"/><text x="25.5502%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.3803%" y="789" width="0.0801%" height="15" fill="rgb(232,81,23)" fg:x="317" fg:w="1"/><text x="25.6303%" y="799.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="25.4604%" y="773" width="0.0801%" height="15" fill="rgb(237,126,14)" fg:x="318" fg:w="1"/><text x="25.7104%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.4604%" y="757" width="0.0801%" height="15" fill="rgb(230,65,39)" fg:x="318" fg:w="1"/><text x="25.7104%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.4604%" y="741" width="0.0801%" height="15" fill="rgb(208,106,41)" fg:x="318" fg:w="1"/><text x="25.7104%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="25.5404%" y="773" width="0.0801%" height="15" fill="rgb(206,125,25)" fg:x="319" fg:w="1"/><text x="25.7904%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="25.5404%" y="757" width="0.0801%" height="15" fill="rgb(250,24,29)" fg:x="319" fg:w="1"/><text x="25.7904%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.5404%" y="741" width="0.0801%" height="15" fill="rgb(226,49,32)" fg:x="319" fg:w="1"/><text x="25.7904%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.5404%" y="725" width="0.0801%" height="15" fill="rgb(217,110,16)" fg:x="319" fg:w="1"/><text x="25.7904%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="25.5404%" y="709" width="0.0801%" height="15" fill="rgb(252,16,53)" fg:x="319" fg:w="1"/><text x="25.7904%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="25.5404%" y="693" width="0.0801%" height="15" fill="rgb(238,163,11)" fg:x="319" fg:w="1"/><text x="25.7904%" y="703.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="25.5404%" y="677" width="0.0801%" height="15" fill="rgb(206,210,1)" fg:x="319" fg:w="1"/><text x="25.7904%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.5404%" y="661" width="0.0801%" height="15" fill="rgb(229,8,25)" fg:x="319" fg:w="1"/><text x="25.7904%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.5404%" y="645" width="0.0801%" height="15" fill="rgb(247,155,23)" fg:x="319" fg:w="1"/><text x="25.7904%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.5404%" y="629" width="0.0801%" height="15" fill="rgb(207,26,7)" fg:x="319" fg:w="1"/><text x="25.7904%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="25.6205%" y="741" width="0.1601%" height="15" fill="rgb(215,179,12)" fg:x="320" fg:w="2"/><text x="25.8705%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="25.6205%" y="725" width="0.1601%" height="15" fill="rgb(238,208,11)" fg:x="320" fg:w="2"/><text x="25.8705%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="25.6205%" y="709" width="0.1601%" height="15" fill="rgb(238,102,42)" fg:x="320" fg:w="2"/><text x="25.8705%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="25.6205%" y="693" width="0.1601%" height="15" fill="rgb(239,35,9)" fg:x="320" fg:w="2"/><text x="25.8705%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="25.6205%" y="677" width="0.1601%" height="15" fill="rgb(244,182,30)" fg:x="320" fg:w="2"/><text x="25.8705%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="25.6205%" y="661" width="0.1601%" height="15" fill="rgb(232,181,23)" fg:x="320" fg:w="2"/><text x="25.8705%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="25.6205%" y="645" width="0.1601%" height="15" fill="rgb(242,154,29)" fg:x="320" fg:w="2"/><text x="25.8705%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="25.6205%" y="629" width="0.1601%" height="15" fill="rgb(219,23,2)" fg:x="320" fg:w="2"/><text x="25.8705%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="25.6205%" y="613" width="0.1601%" height="15" fill="rgb(234,94,43)" fg:x="320" fg:w="2"/><text x="25.8705%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.7006%" y="597" width="0.0801%" height="15" fill="rgb(223,55,45)" fg:x="321" fg:w="1"/><text x="25.9506%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="25.7006%" y="581" width="0.0801%" height="15" fill="rgb(241,215,54)" fg:x="321" fg:w="1"/><text x="25.9506%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.7006%" y="565" width="0.0801%" height="15" fill="rgb(247,63,53)" fg:x="321" fg:w="1"/><text x="25.9506%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.7006%" y="549" width="0.0801%" height="15" fill="rgb(220,166,7)" fg:x="321" fg:w="1"/><text x="25.9506%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.7006%" y="533" width="0.0801%" height="15" fill="rgb(248,53,45)" fg:x="321" fg:w="1"/><text x="25.9506%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.7006%" y="517" width="0.0801%" height="15" fill="rgb(224,207,20)" fg:x="321" fg:w="1"/><text x="25.9506%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.7006%" y="501" width="0.0801%" height="15" fill="rgb(244,185,11)" fg:x="321" fg:w="1"/><text x="25.9506%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="25.7006%" y="485" width="0.0801%" height="15" fill="rgb(230,13,42)" fg:x="321" fg:w="1"/><text x="25.9506%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="25.7006%" y="469" width="0.0801%" height="15" fill="rgb(243,191,18)" fg:x="321" fg:w="1"/><text x="25.9506%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="25.7006%" y="453" width="0.0801%" height="15" fill="rgb(249,135,15)" fg:x="321" fg:w="1"/><text x="25.9506%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="25.7006%" y="437" width="0.0801%" height="15" fill="rgb(229,26,35)" fg:x="321" fg:w="1"/><text x="25.9506%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="25.7006%" y="421" width="0.0801%" height="15" fill="rgb(216,191,16)" fg:x="321" fg:w="1"/><text x="25.9506%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="25.7006%" y="405" width="0.0801%" height="15" fill="rgb(242,18,7)" fg:x="321" fg:w="1"/><text x="25.9506%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.7006%" y="389" width="0.0801%" height="15" fill="rgb(205,128,17)" fg:x="321" fg:w="1"/><text x="25.9506%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="25.7006%" y="373" width="0.0801%" height="15" fill="rgb(229,199,44)" fg:x="321" fg:w="1"/><text x="25.9506%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.7006%" y="357" width="0.0801%" height="15" fill="rgb(234,222,3)" fg:x="321" fg:w="1"/><text x="25.9506%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="25.7006%" y="341" width="0.0801%" height="15" fill="rgb(220,170,20)" fg:x="321" fg:w="1"/><text x="25.9506%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="25.7006%" y="325" width="0.0801%" height="15" fill="rgb(207,138,8)" fg:x="321" fg:w="1"/><text x="25.9506%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="25.7006%" y="309" width="0.0801%" height="15" fill="rgb(244,130,36)" fg:x="321" fg:w="1"/><text x="25.9506%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.7006%" y="293" width="0.0801%" height="15" fill="rgb(207,197,52)" fg:x="321" fg:w="1"/><text x="25.9506%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="25.7806%" y="741" width="0.0801%" height="15" fill="rgb(206,9,21)" fg:x="322" fg:w="1"/><text x="26.0306%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.7806%" y="725" width="0.0801%" height="15" fill="rgb(250,15,47)" fg:x="322" fg:w="1"/><text x="26.0306%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="25.8607%" y="725" width="0.0801%" height="15" fill="rgb(235,202,14)" fg:x="323" fg:w="1"/><text x="26.1107%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.8607%" y="709" width="0.0801%" height="15" fill="rgb(211,180,47)" fg:x="323" fg:w="1"/><text x="26.1107%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="25.9408%" y="549" width="0.1601%" height="15" fill="rgb(209,61,11)" fg:x="324" fg:w="2"/><text x="26.1908%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="25.9408%" y="533" width="0.1601%" height="15" fill="rgb(243,197,29)" fg:x="324" fg:w="2"/><text x="26.1908%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="25.9408%" y="517" width="0.1601%" height="15" fill="rgb(216,185,16)" fg:x="324" fg:w="2"/><text x="26.1908%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="25.9408%" y="501" width="0.1601%" height="15" fill="rgb(248,5,15)" fg:x="324" fg:w="2"/><text x="26.1908%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="25.9408%" y="485" width="0.1601%" height="15" fill="rgb(240,39,41)" fg:x="324" fg:w="2"/><text x="26.1908%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="25.9408%" y="469" width="0.1601%" height="15" fill="rgb(224,220,43)" fg:x="324" fg:w="2"/><text x="26.1908%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="25.9408%" y="453" width="0.1601%" height="15" fill="rgb(215,21,24)" fg:x="324" fg:w="2"/><text x="26.1908%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="25.9408%" y="693" width="0.2402%" height="15" fill="rgb(220,102,8)" fg:x="324" fg:w="3"/><text x="26.1908%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="25.9408%" y="677" width="0.2402%" height="15" fill="rgb(225,185,10)" fg:x="324" fg:w="3"/><text x="26.1908%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="25.9408%" y="661" width="0.2402%" height="15" fill="rgb(212,108,24)" fg:x="324" fg:w="3"/><text x="26.1908%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="25.9408%" y="645" width="0.2402%" height="15" fill="rgb(237,27,0)" fg:x="324" fg:w="3"/><text x="26.1908%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="25.9408%" y="629" width="0.2402%" height="15" fill="rgb(212,106,38)" fg:x="324" fg:w="3"/><text x="26.1908%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="25.9408%" y="613" width="0.2402%" height="15" fill="rgb(210,125,30)" fg:x="324" fg:w="3"/><text x="26.1908%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="25.9408%" y="597" width="0.2402%" height="15" fill="rgb(215,219,1)" fg:x="324" fg:w="3"/><text x="26.1908%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="25.9408%" y="581" width="0.2402%" height="15" fill="rgb(223,10,12)" fg:x="324" fg:w="3"/><text x="26.1908%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="25.9408%" y="565" width="0.2402%" height="15" fill="rgb(245,40,34)" fg:x="324" fg:w="3"/><text x="26.1908%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.1009%" y="549" width="0.0801%" height="15" fill="rgb(211,185,19)" fg:x="326" fg:w="1"/><text x="26.3509%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.1009%" y="533" width="0.0801%" height="15" fill="rgb(243,190,43)" fg:x="326" fg:w="1"/><text x="26.3509%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="26.1809%" y="629" width="0.0801%" height="15" fill="rgb(232,208,29)" fg:x="327" fg:w="1"/><text x="26.4309%" y="639.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="26.1809%" y="613" width="0.0801%" height="15" fill="rgb(234,134,27)" fg:x="327" fg:w="1"/><text x="26.4309%" y="623.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="26.1809%" y="693" width="0.1601%" height="15" fill="rgb(225,41,29)" fg:x="327" fg:w="2"/><text x="26.4309%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="26.1809%" y="677" width="0.1601%" height="15" fill="rgb(241,214,44)" fg:x="327" fg:w="2"/><text x="26.4309%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="26.1809%" y="661" width="0.1601%" height="15" fill="rgb(205,219,41)" fg:x="327" fg:w="2"/><text x="26.4309%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="26.1809%" y="645" width="0.1601%" height="15" fill="rgb(226,15,26)" fg:x="327" fg:w="2"/><text x="26.4309%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.2610%" y="629" width="0.0801%" height="15" fill="rgb(210,83,41)" fg:x="328" fg:w="1"/><text x="26.5110%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (13 samples, 1.04%)</title><rect x="25.6205%" y="757" width="1.0408%" height="15" fill="rgb(247,9,39)" fg:x="320" fg:w="13"/><text x="25.8705%" y="767.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (10 samples, 0.80%)</title><rect x="25.8607%" y="741" width="0.8006%" height="15" fill="rgb(209,37,30)" fg:x="323" fg:w="10"/><text x="26.1107%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.72%)</title><rect x="25.9408%" y="725" width="0.7206%" height="15" fill="rgb(248,170,46)" fg:x="324" fg:w="9"/><text x="26.1908%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="25.9408%" y="709" width="0.7206%" height="15" fill="rgb(237,129,44)" fg:x="324" fg:w="9"/><text x="26.1908%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="26.3411%" y="693" width="0.3203%" height="15" fill="rgb(225,117,51)" fg:x="329" fg:w="4"/><text x="26.5911%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="26.3411%" y="677" width="0.3203%" height="15" fill="rgb(212,165,2)" fg:x="329" fg:w="4"/><text x="26.5911%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="26.4211%" y="661" width="0.2402%" height="15" fill="rgb(213,53,45)" fg:x="330" fg:w="3"/><text x="26.6711%" y="671.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="26.4211%" y="645" width="0.2402%" height="15" fill="rgb(220,148,3)" fg:x="330" fg:w="3"/><text x="26.6711%" y="655.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="26.4211%" y="629" width="0.2402%" height="15" fill="rgb(228,37,29)" fg:x="330" fg:w="3"/><text x="26.6711%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="26.4211%" y="613" width="0.2402%" height="15" fill="rgb(209,76,29)" fg:x="330" fg:w="3"/><text x="26.6711%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="26.4211%" y="597" width="0.2402%" height="15" fill="rgb(215,90,5)" fg:x="330" fg:w="3"/><text x="26.6711%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.6613%" y="613" width="0.0801%" height="15" fill="rgb(227,207,32)" fg:x="333" fg:w="1"/><text x="26.9113%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.6613%" y="597" width="0.0801%" height="15" fill="rgb(251,218,44)" fg:x="333" fg:w="1"/><text x="26.9113%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.6613%" y="581" width="0.0801%" height="15" fill="rgb(211,44,16)" fg:x="333" fg:w="1"/><text x="26.9113%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.6613%" y="565" width="0.0801%" height="15" fill="rgb(242,170,37)" fg:x="333" fg:w="1"/><text x="26.9113%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.6613%" y="549" width="0.0801%" height="15" fill="rgb(205,181,22)" fg:x="333" fg:w="1"/><text x="26.9113%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.6613%" y="533" width="0.0801%" height="15" fill="rgb(228,130,19)" fg:x="333" fg:w="1"/><text x="26.9113%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="26.6613%" y="517" width="0.0801%" height="15" fill="rgb(228,9,15)" fg:x="333" fg:w="1"/><text x="26.9113%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="26.6613%" y="501" width="0.0801%" height="15" fill="rgb(219,66,48)" fg:x="333" fg:w="1"/><text x="26.9113%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.24%)</title><rect x="26.6613%" y="709" width="0.2402%" height="15" fill="rgb(234,203,10)" fg:x="333" fg:w="3"/><text x="26.9113%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="26.6613%" y="693" width="0.2402%" height="15" fill="rgb(219,209,1)" fg:x="333" fg:w="3"/><text x="26.9113%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="26.6613%" y="677" width="0.2402%" height="15" fill="rgb(206,167,9)" fg:x="333" fg:w="3"/><text x="26.9113%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="26.6613%" y="661" width="0.2402%" height="15" fill="rgb(210,11,39)" fg:x="333" fg:w="3"/><text x="26.9113%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="26.6613%" y="645" width="0.2402%" height="15" fill="rgb(251,90,47)" fg:x="333" fg:w="3"/><text x="26.9113%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="26.6613%" y="629" width="0.2402%" height="15" fill="rgb(237,7,4)" fg:x="333" fg:w="3"/><text x="26.9113%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="26.7414%" y="613" width="0.1601%" height="15" fill="rgb(232,205,47)" fg:x="334" fg:w="2"/><text x="26.9914%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="26.7414%" y="597" width="0.1601%" height="15" fill="rgb(215,86,48)" fg:x="334" fg:w="2"/><text x="26.9914%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="26.6613%" y="741" width="0.4003%" height="15" fill="rgb(232,14,47)" fg:x="333" fg:w="5"/><text x="26.9113%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.40%)</title><rect x="26.6613%" y="725" width="0.4003%" height="15" fill="rgb(240,28,46)" fg:x="333" fg:w="5"/><text x="26.9113%" y="735.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (2 samples, 0.16%)</title><rect x="26.9015%" y="709" width="0.1601%" height="15" fill="rgb(224,85,5)" fg:x="336" fg:w="2"/><text x="27.1515%" y="719.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="26.9015%" y="693" width="0.1601%" height="15" fill="rgb(219,34,25)" fg:x="336" fg:w="2"/><text x="27.1515%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="27.1417%" y="725" width="0.0801%" height="15" fill="rgb(247,137,45)" fg:x="339" fg:w="1"/><text x="27.3917%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.2218%" y="709" width="0.0801%" height="15" fill="rgb(237,121,47)" fg:x="340" fg:w="1"/><text x="27.4718%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.2218%" y="693" width="0.0801%" height="15" fill="rgb(247,148,27)" fg:x="340" fg:w="1"/><text x="27.4718%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.2218%" y="677" width="0.0801%" height="15" fill="rgb(220,44,0)" fg:x="340" fg:w="1"/><text x="27.4718%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.2218%" y="661" width="0.0801%" height="15" fill="rgb(236,61,29)" fg:x="340" fg:w="1"/><text x="27.4718%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.2218%" y="645" width="0.0801%" height="15" fill="rgb(244,180,35)" fg:x="340" fg:w="1"/><text x="27.4718%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="27.2218%" y="629" width="0.0801%" height="15" fill="rgb(242,14,54)" fg:x="340" fg:w="1"/><text x="27.4718%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="27.2218%" y="613" width="0.0801%" height="15" fill="rgb(206,24,45)" fg:x="340" fg:w="1"/><text x="27.4718%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.3018%" y="693" width="0.0801%" height="15" fill="rgb(215,211,6)" fg:x="341" fg:w="1"/><text x="27.5518%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="27.3819%" y="677" width="0.4804%" height="15" fill="rgb(207,56,2)" fg:x="342" fg:w="6"/><text x="27.6319%" y="687.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="27.4620%" y="661" width="0.4003%" height="15" fill="rgb(220,135,9)" fg:x="343" fg:w="5"/><text x="27.7120%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="27.6221%" y="645" width="0.2402%" height="15" fill="rgb(214,145,52)" fg:x="345" fg:w="3"/><text x="27.8721%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.7822%" y="629" width="0.0801%" height="15" fill="rgb(241,83,53)" fg:x="347" fg:w="1"/><text x="28.0322%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="27.3819%" y="693" width="0.6405%" height="15" fill="rgb(222,66,13)" fg:x="342" fg:w="8"/><text x="27.6319%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="27.8623%" y="677" width="0.1601%" height="15" fill="rgb(239,164,54)" fg:x="348" fg:w="2"/><text x="28.1123%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="27.8623%" y="661" width="0.1601%" height="15" fill="rgb(216,189,13)" fg:x="348" fg:w="2"/><text x="28.1123%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="27.8623%" y="645" width="0.1601%" height="15" fill="rgb(228,212,51)" fg:x="348" fg:w="2"/><text x="28.1123%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="28.0224%" y="677" width="0.0801%" height="15" fill="rgb(207,190,21)" fg:x="350" fg:w="1"/><text x="28.2724%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.0224%" y="661" width="0.0801%" height="15" fill="rgb(245,28,35)" fg:x="350" fg:w="1"/><text x="28.2724%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.1025%" y="661" width="0.0801%" height="15" fill="rgb(239,23,40)" fg:x="351" fg:w="1"/><text x="28.3525%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="28.1825%" y="661" width="0.1601%" height="15" fill="rgb(242,10,51)" fg:x="352" fg:w="2"/><text x="28.4325%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="28.1825%" y="645" width="0.1601%" height="15" fill="rgb(207,186,5)" fg:x="352" fg:w="2"/><text x="28.4325%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="28.1825%" y="629" width="0.1601%" height="15" fill="rgb(242,21,16)" fg:x="352" fg:w="2"/><text x="28.4325%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.1825%" y="613" width="0.1601%" height="15" fill="rgb(237,0,53)" fg:x="352" fg:w="2"/><text x="28.4325%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.1825%" y="597" width="0.1601%" height="15" fill="rgb(215,8,52)" fg:x="352" fg:w="2"/><text x="28.4325%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.1825%" y="581" width="0.1601%" height="15" fill="rgb(248,62,44)" fg:x="352" fg:w="2"/><text x="28.4325%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.1825%" y="565" width="0.1601%" height="15" fill="rgb(224,83,15)" fg:x="352" fg:w="2"/><text x="28.4325%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="28.3427%" y="661" width="0.3203%" height="15" fill="rgb(249,100,46)" fg:x="354" fg:w="4"/><text x="28.5927%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.5028%" y="645" width="0.1601%" height="15" fill="rgb(213,35,48)" fg:x="356" fg:w="2"/><text x="28.7528%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="28.5028%" y="629" width="0.1601%" height="15" fill="rgb(251,2,13)" fg:x="356" fg:w="2"/><text x="28.7528%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="28.5028%" y="613" width="0.1601%" height="15" fill="rgb(212,132,21)" fg:x="356" fg:w="2"/><text x="28.7528%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="28.5028%" y="597" width="0.1601%" height="15" fill="rgb(247,17,21)" fg:x="356" fg:w="2"/><text x="28.7528%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="28.5028%" y="581" width="0.1601%" height="15" fill="rgb(220,177,38)" fg:x="356" fg:w="2"/><text x="28.7528%" y="591.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="28.5028%" y="565" width="0.1601%" height="15" fill="rgb(233,219,21)" fg:x="356" fg:w="2"/><text x="28.7528%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="28.6629%" y="645" width="0.1601%" height="15" fill="rgb(246,17,7)" fg:x="358" fg:w="2"/><text x="28.9129%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="28.6629%" y="629" width="0.1601%" height="15" fill="rgb(212,4,22)" fg:x="358" fg:w="2"/><text x="28.9129%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.7430%" y="613" width="0.0801%" height="15" fill="rgb(243,85,21)" fg:x="359" fg:w="1"/><text x="28.9930%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="28.8231%" y="629" width="0.0801%" height="15" fill="rgb(232,218,2)" fg:x="360" fg:w="1"/><text x="29.0731%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.8231%" y="613" width="0.0801%" height="15" fill="rgb(253,168,47)" fg:x="360" fg:w="1"/><text x="29.0731%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.9832%" y="597" width="0.0801%" height="15" fill="rgb(238,101,25)" fg:x="362" fg:w="1"/><text x="29.2332%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="28.9832%" y="613" width="0.1601%" height="15" fill="rgb(251,86,12)" fg:x="362" fg:w="2"/><text x="29.2332%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="29.0633%" y="597" width="0.0801%" height="15" fill="rgb(241,112,44)" fg:x="363" fg:w="1"/><text x="29.3133%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.0633%" y="581" width="0.0801%" height="15" fill="rgb(224,28,25)" fg:x="363" fg:w="1"/><text x="29.3133%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="28.9031%" y="629" width="0.8006%" height="15" fill="rgb(209,201,1)" fg:x="361" fg:w="10"/><text x="29.1531%" y="639.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="29.1433%" y="613" width="0.5604%" height="15" fill="rgb(231,30,22)" fg:x="364" fg:w="7"/><text x="29.3933%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="29.2234%" y="597" width="0.4804%" height="15" fill="rgb(247,96,31)" fg:x="365" fg:w="6"/><text x="29.4734%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="29.2234%" y="581" width="0.4804%" height="15" fill="rgb(251,100,12)" fg:x="365" fg:w="6"/><text x="29.4734%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.48%)</title><rect x="29.2234%" y="565" width="0.4804%" height="15" fill="rgb(224,174,7)" fg:x="365" fg:w="6"/><text x="29.4734%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.48%)</title><rect x="29.2234%" y="549" width="0.4804%" height="15" fill="rgb(231,168,19)" fg:x="365" fg:w="6"/><text x="29.4734%" y="559.50"></text></g><g><title>realloc (6 samples, 0.48%)</title><rect x="29.2234%" y="533" width="0.4804%" height="15" fill="rgb(226,85,5)" fg:x="365" fg:w="6"/><text x="29.4734%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.68%)</title><rect x="28.1025%" y="677" width="1.6813%" height="15" fill="rgb(210,215,5)" fg:x="351" fg:w="21"/><text x="28.3525%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="28.6629%" y="661" width="1.1209%" height="15" fill="rgb(233,70,8)" fg:x="358" fg:w="14"/><text x="28.9129%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="28.8231%" y="645" width="0.9608%" height="15" fill="rgb(229,109,53)" fg:x="360" fg:w="12"/><text x="29.0731%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.7038%" y="629" width="0.0801%" height="15" fill="rgb(213,125,35)" fg:x="371" fg:w="1"/><text x="29.9538%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.7038%" y="613" width="0.0801%" height="15" fill="rgb(215,12,48)" fg:x="371" fg:w="1"/><text x="29.9538%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (34 samples, 2.72%)</title><rect x="27.3018%" y="709" width="2.7222%" height="15" fill="rgb(207,12,38)" fg:x="341" fg:w="34"/><text x="27.5518%" y="719.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 2.00%)</title><rect x="28.0224%" y="693" width="2.0016%" height="15" fill="rgb(216,229,2)" fg:x="350" fg:w="25"/><text x="28.2724%" y="703.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="29.7838%" y="677" width="0.2402%" height="15" fill="rgb(229,209,31)" fg:x="372" fg:w="3"/><text x="30.0338%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="29.7838%" y="661" width="0.2402%" height="15" fill="rgb(239,57,22)" fg:x="372" fg:w="3"/><text x="30.0338%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="29.7838%" y="645" width="0.2402%" height="15" fill="rgb(239,119,54)" fg:x="372" fg:w="3"/><text x="30.0338%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="29.7838%" y="629" width="0.2402%" height="15" fill="rgb(231,80,45)" fg:x="372" fg:w="3"/><text x="30.0338%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="29.7838%" y="613" width="0.2402%" height="15" fill="rgb(219,138,19)" fg:x="372" fg:w="3"/><text x="30.0338%" y="623.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="29.8639%" y="597" width="0.1601%" height="15" fill="rgb(216,53,26)" fg:x="373" fg:w="2"/><text x="30.1139%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="30.1041%" y="677" width="0.1601%" height="15" fill="rgb(224,30,16)" fg:x="376" fg:w="2"/><text x="30.3541%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.4243%" y="645" width="0.0801%" height="15" fill="rgb(224,151,24)" fg:x="380" fg:w="1"/><text x="30.6743%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.5044%" y="629" width="0.0801%" height="15" fill="rgb(236,75,7)" fg:x="381" fg:w="1"/><text x="30.7544%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.5845%" y="629" width="0.0801%" height="15" fill="rgb(248,106,42)" fg:x="382" fg:w="1"/><text x="30.8345%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="30.6645%" y="629" width="0.0801%" height="15" fill="rgb(222,217,11)" fg:x="383" fg:w="1"/><text x="30.9145%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.6645%" y="613" width="0.0801%" height="15" fill="rgb(234,143,31)" fg:x="383" fg:w="1"/><text x="30.9145%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.6645%" y="597" width="0.0801%" height="15" fill="rgb(237,148,28)" fg:x="383" fg:w="1"/><text x="30.9145%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.9047%" y="597" width="0.0801%" height="15" fill="rgb(241,151,6)" fg:x="386" fg:w="1"/><text x="31.1547%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.9848%" y="597" width="0.0801%" height="15" fill="rgb(226,55,18)" fg:x="387" fg:w="1"/><text x="31.2348%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.9848%" y="581" width="0.0801%" height="15" fill="rgb(226,196,6)" fg:x="387" fg:w="1"/><text x="31.2348%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.28%)</title><rect x="30.0240%" y="709" width="1.2810%" height="15" fill="rgb(251,228,11)" fg:x="375" fg:w="16"/><text x="30.2740%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16 samples, 1.28%)</title><rect x="30.0240%" y="693" width="1.2810%" height="15" fill="rgb(219,197,15)" fg:x="375" fg:w="16"/><text x="30.2740%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="30.2642%" y="677" width="1.0408%" height="15" fill="rgb(243,105,44)" fg:x="378" fg:w="13"/><text x="30.5142%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="30.2642%" y="661" width="1.0408%" height="15" fill="rgb(205,183,40)" fg:x="378" fg:w="13"/><text x="30.5142%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="30.5044%" y="645" width="0.8006%" height="15" fill="rgb(232,138,46)" fg:x="381" fg:w="10"/><text x="30.7544%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="30.7446%" y="629" width="0.5604%" height="15" fill="rgb(234,161,14)" fg:x="384" fg:w="7"/><text x="30.9946%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="30.8247%" y="613" width="0.4804%" height="15" fill="rgb(238,211,18)" fg:x="385" fg:w="6"/><text x="31.0747%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="31.0649%" y="597" width="0.2402%" height="15" fill="rgb(217,130,2)" fg:x="388" fg:w="3"/><text x="31.3149%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="31.0649%" y="581" width="0.2402%" height="15" fill="rgb(251,17,29)" fg:x="388" fg:w="3"/><text x="31.3149%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.1449%" y="565" width="0.1601%" height="15" fill="rgb(243,18,0)" fg:x="389" fg:w="2"/><text x="31.3949%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.4652%" y="645" width="0.0801%" height="15" fill="rgb(227,220,45)" fg:x="393" fg:w="1"/><text x="31.7152%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.5452%" y="645" width="0.0801%" height="15" fill="rgb(212,34,2)" fg:x="394" fg:w="1"/><text x="31.7952%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.6253%" y="629" width="0.1601%" height="15" fill="rgb(236,23,8)" fg:x="395" fg:w="2"/><text x="31.8753%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.7854%" y="629" width="0.0801%" height="15" fill="rgb(210,113,39)" fg:x="397" fg:w="1"/><text x="32.0354%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.8655%" y="613" width="0.0801%" height="15" fill="rgb(243,123,48)" fg:x="398" fg:w="1"/><text x="32.1155%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.9456%" y="597" width="0.1601%" height="15" fill="rgb(223,175,36)" fg:x="399" fg:w="2"/><text x="32.1956%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="32.1057%" y="597" width="0.0801%" height="15" fill="rgb(226,100,30)" fg:x="401" fg:w="1"/><text x="32.3557%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="32.1057%" y="581" width="0.0801%" height="15" fill="rgb(221,225,39)" fg:x="401" fg:w="1"/><text x="32.3557%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.1057%" y="565" width="0.0801%" height="15" fill="rgb(224,222,42)" fg:x="401" fg:w="1"/><text x="32.3557%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.1857%" y="581" width="0.0801%" height="15" fill="rgb(221,53,1)" fg:x="402" fg:w="1"/><text x="32.4357%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="32.2658%" y="565" width="0.1601%" height="15" fill="rgb(216,187,48)" fg:x="403" fg:w="2"/><text x="32.5158%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.3459%" y="549" width="0.0801%" height="15" fill="rgb(220,108,2)" fg:x="404" fg:w="1"/><text x="32.5959%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.12%)</title><rect x="31.4652%" y="677" width="1.1209%" height="15" fill="rgb(216,13,42)" fg:x="393" fg:w="14"/><text x="31.7152%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (14 samples, 1.12%)</title><rect x="31.4652%" y="661" width="1.1209%" height="15" fill="rgb(205,14,29)" fg:x="393" fg:w="14"/><text x="31.7152%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="31.6253%" y="645" width="0.9608%" height="15" fill="rgb(217,168,30)" fg:x="395" fg:w="12"/><text x="31.8753%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="31.8655%" y="629" width="0.7206%" height="15" fill="rgb(246,173,54)" fg:x="398" fg:w="9"/><text x="32.1155%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="31.9456%" y="613" width="0.6405%" height="15" fill="rgb(227,177,11)" fg:x="399" fg:w="8"/><text x="32.1956%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="32.1857%" y="597" width="0.4003%" height="15" fill="rgb(223,215,51)" fg:x="402" fg:w="5"/><text x="32.4357%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="32.2658%" y="581" width="0.3203%" height="15" fill="rgb(253,4,17)" fg:x="403" fg:w="4"/><text x="32.5158%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="32.4259%" y="565" width="0.1601%" height="15" fill="rgb(206,150,43)" fg:x="405" fg:w="2"/><text x="32.6759%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="32.4259%" y="549" width="0.1601%" height="15" fill="rgb(241,100,52)" fg:x="405" fg:w="2"/><text x="32.6759%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.5060%" y="533" width="0.0801%" height="15" fill="rgb(234,120,21)" fg:x="406" fg:w="1"/><text x="32.7560%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="32.5861%" y="677" width="0.1601%" height="15" fill="rgb(231,60,11)" fg:x="407" fg:w="2"/><text x="32.8361%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="32.5861%" y="661" width="0.1601%" height="15" fill="rgb(247,77,50)" fg:x="407" fg:w="2"/><text x="32.8361%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="32.9063%" y="661" width="0.2402%" height="15" fill="rgb(251,199,54)" fg:x="411" fg:w="3"/><text x="33.1563%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="32.9063%" y="645" width="0.2402%" height="15" fill="rgb(212,120,38)" fg:x="411" fg:w="3"/><text x="33.1563%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="32.9063%" y="629" width="0.2402%" height="15" fill="rgb(250,161,37)" fg:x="411" fg:w="3"/><text x="33.1563%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="32.9063%" y="613" width="0.2402%" height="15" fill="rgb(232,158,45)" fg:x="411" fg:w="3"/><text x="33.1563%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="33.0665%" y="597" width="0.0801%" height="15" fill="rgb(233,114,2)" fg:x="413" fg:w="1"/><text x="33.3165%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="33.0665%" y="581" width="0.0801%" height="15" fill="rgb(248,139,0)" fg:x="413" fg:w="1"/><text x="33.3165%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="33.1465%" y="661" width="0.0801%" height="15" fill="rgb(222,164,18)" fg:x="414" fg:w="1"/><text x="33.3965%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.2266%" y="661" width="0.0801%" height="15" fill="rgb(221,140,42)" fg:x="415" fg:w="1"/><text x="33.4766%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="33.3066%" y="661" width="0.1601%" height="15" fill="rgb(209,186,11)" fg:x="416" fg:w="2"/><text x="33.5566%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.3066%" y="645" width="0.1601%" height="15" fill="rgb(254,212,38)" fg:x="416" fg:w="2"/><text x="33.5566%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.3066%" y="629" width="0.1601%" height="15" fill="rgb(219,156,31)" fg:x="416" fg:w="2"/><text x="33.5566%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="33.3066%" y="613" width="0.1601%" height="15" fill="rgb(222,148,42)" fg:x="416" fg:w="2"/><text x="33.5566%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="33.3066%" y="597" width="0.1601%" height="15" fill="rgb(225,65,5)" fg:x="416" fg:w="2"/><text x="33.5566%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="33.3066%" y="581" width="0.1601%" height="15" fill="rgb(235,28,12)" fg:x="416" fg:w="2"/><text x="33.5566%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.3867%" y="565" width="0.0801%" height="15" fill="rgb(245,58,4)" fg:x="417" fg:w="1"/><text x="33.6367%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.3867%" y="549" width="0.0801%" height="15" fill="rgb(235,118,5)" fg:x="417" fg:w="1"/><text x="33.6367%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.3867%" y="533" width="0.0801%" height="15" fill="rgb(253,196,3)" fg:x="417" fg:w="1"/><text x="33.6367%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.3867%" y="517" width="0.0801%" height="15" fill="rgb(238,90,28)" fg:x="417" fg:w="1"/><text x="33.6367%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.3867%" y="501" width="0.0801%" height="15" fill="rgb(254,227,4)" fg:x="417" fg:w="1"/><text x="33.6367%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.3867%" y="485" width="0.0801%" height="15" fill="rgb(237,114,35)" fg:x="417" fg:w="1"/><text x="33.6367%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.3867%" y="469" width="0.0801%" height="15" fill="rgb(221,147,29)" fg:x="417" fg:w="1"/><text x="33.6367%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="33.4668%" y="661" width="0.1601%" height="15" fill="rgb(216,201,17)" fg:x="418" fg:w="2"/><text x="33.7168%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="33.6269%" y="645" width="0.1601%" height="15" fill="rgb(251,46,50)" fg:x="420" fg:w="2"/><text x="33.8769%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.7070%" y="629" width="0.0801%" height="15" fill="rgb(216,143,48)" fg:x="421" fg:w="1"/><text x="33.9570%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.7870%" y="645" width="0.0801%" height="15" fill="rgb(224,62,51)" fg:x="422" fg:w="1"/><text x="34.0370%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.8671%" y="645" width="0.0801%" height="15" fill="rgb(232,152,20)" fg:x="423" fg:w="1"/><text x="34.1171%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.8671%" y="629" width="0.0801%" height="15" fill="rgb(233,194,7)" fg:x="423" fg:w="1"/><text x="34.1171%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.8671%" y="613" width="0.0801%" height="15" fill="rgb(207,33,22)" fg:x="423" fg:w="1"/><text x="34.1171%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.8671%" y="597" width="0.0801%" height="15" fill="rgb(226,54,34)" fg:x="423" fg:w="1"/><text x="34.1171%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.8671%" y="581" width="0.0801%" height="15" fill="rgb(227,161,47)" fg:x="423" fg:w="1"/><text x="34.1171%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.8671%" y="565" width="0.0801%" height="15" fill="rgb(218,58,37)" fg:x="423" fg:w="1"/><text x="34.1171%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.8671%" y="549" width="0.0801%" height="15" fill="rgb(208,173,18)" fg:x="423" fg:w="1"/><text x="34.1171%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.8671%" y="533" width="0.0801%" height="15" fill="rgb(230,159,11)" fg:x="423" fg:w="1"/><text x="34.1171%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.8671%" y="517" width="0.0801%" height="15" fill="rgb(238,90,51)" fg:x="423" fg:w="1"/><text x="34.1171%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.8671%" y="501" width="0.0801%" height="15" fill="rgb(225,97,36)" fg:x="423" fg:w="1"/><text x="34.1171%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.8671%" y="485" width="0.0801%" height="15" fill="rgb(211,205,42)" fg:x="423" fg:w="1"/><text x="34.1171%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.8671%" y="469" width="0.0801%" height="15" fill="rgb(219,152,7)" fg:x="423" fg:w="1"/><text x="34.1171%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.8671%" y="453" width="0.0801%" height="15" fill="rgb(222,79,10)" fg:x="423" fg:w="1"/><text x="34.1171%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.0272%" y="629" width="0.0801%" height="15" fill="rgb(242,13,11)" fg:x="425" fg:w="1"/><text x="34.2772%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.0272%" y="613" width="0.0801%" height="15" fill="rgb(231,143,41)" fg:x="425" fg:w="1"/><text x="34.2772%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.0272%" y="597" width="0.0801%" height="15" fill="rgb(222,147,19)" fg:x="425" fg:w="1"/><text x="34.2772%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.0272%" y="581" width="0.0801%" height="15" fill="rgb(235,5,39)" fg:x="425" fg:w="1"/><text x="34.2772%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.0272%" y="565" width="0.0801%" height="15" fill="rgb(246,155,51)" fg:x="425" fg:w="1"/><text x="34.2772%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.0272%" y="549" width="0.0801%" height="15" fill="rgb(218,157,4)" fg:x="425" fg:w="1"/><text x="34.2772%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.0272%" y="533" width="0.0801%" height="15" fill="rgb(226,184,4)" fg:x="425" fg:w="1"/><text x="34.2772%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.0272%" y="517" width="0.0801%" height="15" fill="rgb(210,103,26)" fg:x="425" fg:w="1"/><text x="34.2772%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.0272%" y="501" width="0.0801%" height="15" fill="rgb(228,23,31)" fg:x="425" fg:w="1"/><text x="34.2772%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.0272%" y="485" width="0.0801%" height="15" fill="rgb(205,176,34)" fg:x="425" fg:w="1"/><text x="34.2772%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.0272%" y="469" width="0.0801%" height="15" fill="rgb(246,213,37)" fg:x="425" fg:w="1"/><text x="34.2772%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.0272%" y="453" width="0.0801%" height="15" fill="rgb(213,52,45)" fg:x="425" fg:w="1"/><text x="34.2772%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.1073%" y="629" width="0.0801%" height="15" fill="rgb(249,9,52)" fg:x="426" fg:w="1"/><text x="34.3573%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.1073%" y="613" width="0.0801%" height="15" fill="rgb(205,97,16)" fg:x="426" fg:w="1"/><text x="34.3573%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.1073%" y="597" width="0.0801%" height="15" fill="rgb(214,11,46)" fg:x="426" fg:w="1"/><text x="34.3573%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.1873%" y="597" width="0.0801%" height="15" fill="rgb(221,66,18)" fg:x="427" fg:w="1"/><text x="34.4373%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.2674%" y="581" width="0.0801%" height="15" fill="rgb(213,49,1)" fg:x="428" fg:w="1"/><text x="34.5174%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.2674%" y="565" width="0.0801%" height="15" fill="rgb(232,75,51)" fg:x="428" fg:w="1"/><text x="34.5174%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.2674%" y="549" width="0.0801%" height="15" fill="rgb(208,218,40)" fg:x="428" fg:w="1"/><text x="34.5174%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.2674%" y="533" width="0.0801%" height="15" fill="rgb(206,144,50)" fg:x="428" fg:w="1"/><text x="34.5174%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.2674%" y="517" width="0.0801%" height="15" fill="rgb(216,9,51)" fg:x="428" fg:w="1"/><text x="34.5174%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.2674%" y="501" width="0.0801%" height="15" fill="rgb(226,6,53)" fg:x="428" fg:w="1"/><text x="34.5174%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.2674%" y="485" width="0.0801%" height="15" fill="rgb(216,9,50)" fg:x="428" fg:w="1"/><text x="34.5174%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.2674%" y="469" width="0.0801%" height="15" fill="rgb(214,101,31)" fg:x="428" fg:w="1"/><text x="34.5174%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.2674%" y="453" width="0.0801%" height="15" fill="rgb(247,85,17)" fg:x="428" fg:w="1"/><text x="34.5174%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.2674%" y="437" width="0.0801%" height="15" fill="rgb(248,138,25)" fg:x="428" fg:w="1"/><text x="34.5174%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.2674%" y="421" width="0.0801%" height="15" fill="rgb(225,146,20)" fg:x="428" fg:w="1"/><text x="34.5174%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.2674%" y="405" width="0.0801%" height="15" fill="rgb(224,184,17)" fg:x="428" fg:w="1"/><text x="34.5174%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.2674%" y="389" width="0.0801%" height="15" fill="rgb(231,10,20)" fg:x="428" fg:w="1"/><text x="34.5174%" y="399.50"></text></g><g><title>treediff::diff::diff (10 samples, 0.80%)</title><rect x="33.6269%" y="661" width="0.8006%" height="15" fill="rgb(210,93,37)" fg:x="420" fg:w="10"/><text x="33.8769%" y="671.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="33.9472%" y="645" width="0.4804%" height="15" fill="rgb(226,84,42)" fg:x="424" fg:w="6"/><text x="34.1972%" y="655.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="34.1873%" y="629" width="0.2402%" height="15" fill="rgb(253,192,7)" fg:x="427" fg:w="3"/><text x="34.4373%" y="639.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="34.1873%" y="613" width="0.2402%" height="15" fill="rgb(214,107,27)" fg:x="427" fg:w="3"/><text x="34.4373%" y="623.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="34.2674%" y="597" width="0.1601%" height="15" fill="rgb(238,146,21)" fg:x="428" fg:w="2"/><text x="34.5174%" y="607.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="34.3475%" y="581" width="0.0801%" height="15" fill="rgb(209,136,30)" fg:x="429" fg:w="1"/><text x="34.5975%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.3475%" y="565" width="0.0801%" height="15" fill="rgb(226,60,22)" fg:x="429" fg:w="1"/><text x="34.5975%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.3475%" y="549" width="0.0801%" height="15" fill="rgb(243,92,26)" fg:x="429" fg:w="1"/><text x="34.5975%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.3475%" y="533" width="0.0801%" height="15" fill="rgb(211,85,33)" fg:x="429" fg:w="1"/><text x="34.5975%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.3475%" y="517" width="0.0801%" height="15" fill="rgb(243,187,44)" fg:x="429" fg:w="1"/><text x="34.5975%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.3475%" y="501" width="0.0801%" height="15" fill="rgb(251,172,23)" fg:x="429" fg:w="1"/><text x="34.5975%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.3475%" y="485" width="0.0801%" height="15" fill="rgb(254,162,50)" fg:x="429" fg:w="1"/><text x="34.5975%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.3475%" y="469" width="0.0801%" height="15" fill="rgb(239,14,53)" fg:x="429" fg:w="1"/><text x="34.5975%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.3475%" y="453" width="0.0801%" height="15" fill="rgb(242,208,8)" fg:x="429" fg:w="1"/><text x="34.5975%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.3475%" y="437" width="0.0801%" height="15" fill="rgb(225,61,41)" fg:x="429" fg:w="1"/><text x="34.5975%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.3475%" y="421" width="0.0801%" height="15" fill="rgb(219,154,6)" fg:x="429" fg:w="1"/><text x="34.5975%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.3475%" y="405" width="0.0801%" height="15" fill="rgb(227,223,44)" fg:x="429" fg:w="1"/><text x="34.5975%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.3475%" y="389" width="0.0801%" height="15" fill="rgb(220,188,6)" fg:x="429" fg:w="1"/><text x="34.5975%" y="399.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (40 samples, 3.20%)</title><rect x="31.3050%" y="693" width="3.2026%" height="15" fill="rgb(216,65,22)" fg:x="391" fg:w="40"/><text x="31.5550%" y="703.50">&lt;ke..</text></g><g><title>treediff::diff::diff (22 samples, 1.76%)</title><rect x="32.7462%" y="677" width="1.7614%" height="15" fill="rgb(236,66,46)" fg:x="409" fg:w="22"/><text x="32.9962%" y="687.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="34.4275%" y="661" width="0.0801%" height="15" fill="rgb(211,150,52)" fg:x="430" fg:w="1"/><text x="34.6775%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4275%" y="645" width="0.0801%" height="15" fill="rgb(253,89,19)" fg:x="430" fg:w="1"/><text x="34.6775%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="34.8279%" y="661" width="0.3203%" height="15" fill="rgb(245,4,1)" fg:x="435" fg:w="4"/><text x="35.0779%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="34.9880%" y="645" width="0.1601%" height="15" fill="rgb(230,109,16)" fg:x="437" fg:w="2"/><text x="35.2380%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="35.0681%" y="629" width="0.0801%" height="15" fill="rgb(213,7,47)" fg:x="438" fg:w="1"/><text x="35.3181%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.1481%" y="629" width="0.0801%" height="15" fill="rgb(242,148,14)" fg:x="439" fg:w="1"/><text x="35.3981%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="35.1481%" y="661" width="0.1601%" height="15" fill="rgb(238,51,34)" fg:x="439" fg:w="2"/><text x="35.3981%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="35.1481%" y="645" width="0.1601%" height="15" fill="rgb(222,49,22)" fg:x="439" fg:w="2"/><text x="35.3981%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="35.2282%" y="629" width="0.0801%" height="15" fill="rgb(237,102,50)" fg:x="440" fg:w="1"/><text x="35.4782%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="35.2282%" y="613" width="0.0801%" height="15" fill="rgb(237,195,8)" fg:x="440" fg:w="1"/><text x="35.4782%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.3883%" y="629" width="0.1601%" height="15" fill="rgb(245,60,18)" fg:x="442" fg:w="2"/><text x="35.6383%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="35.3082%" y="661" width="0.3203%" height="15" fill="rgb(253,74,32)" fg:x="441" fg:w="4"/><text x="35.5582%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="35.3883%" y="645" width="0.2402%" height="15" fill="rgb(240,91,39)" fg:x="442" fg:w="3"/><text x="35.6383%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.5484%" y="629" width="0.0801%" height="15" fill="rgb(221,162,34)" fg:x="444" fg:w="1"/><text x="35.7984%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.5484%" y="613" width="0.0801%" height="15" fill="rgb(223,32,2)" fg:x="444" fg:w="1"/><text x="35.7984%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.7886%" y="613" width="0.2402%" height="15" fill="rgb(245,220,46)" fg:x="447" fg:w="3"/><text x="36.0386%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.8687%" y="597" width="0.1601%" height="15" fill="rgb(216,38,33)" fg:x="448" fg:w="2"/><text x="36.1187%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.8687%" y="581" width="0.1601%" height="15" fill="rgb(210,123,14)" fg:x="448" fg:w="2"/><text x="36.1187%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.1089%" y="581" width="0.0801%" height="15" fill="rgb(214,38,47)" fg:x="451" fg:w="1"/><text x="36.3589%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.1890%" y="565" width="0.1601%" height="15" fill="rgb(244,180,16)" fg:x="452" fg:w="2"/><text x="36.4390%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.2690%" y="549" width="0.0801%" height="15" fill="rgb(252,21,32)" fg:x="453" fg:w="1"/><text x="36.5190%" y="559.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="36.2690%" y="533" width="0.0801%" height="15" fill="rgb(245,218,31)" fg:x="453" fg:w="1"/><text x="36.5190%" y="543.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="36.2690%" y="517" width="0.0801%" height="15" fill="rgb(247,81,18)" fg:x="453" fg:w="1"/><text x="36.5190%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="36.1890%" y="581" width="0.2402%" height="15" fill="rgb(220,151,1)" fg:x="452" fg:w="3"/><text x="36.4390%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="36.3491%" y="565" width="0.0801%" height="15" fill="rgb(211,157,11)" fg:x="454" fg:w="1"/><text x="36.5991%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.3491%" y="549" width="0.0801%" height="15" fill="rgb(239,46,30)" fg:x="454" fg:w="1"/><text x="36.5991%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="36.0288%" y="613" width="0.4804%" height="15" fill="rgb(236,144,43)" fg:x="450" fg:w="6"/><text x="36.2788%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="36.1089%" y="597" width="0.4003%" height="15" fill="rgb(206,71,45)" fg:x="451" fg:w="5"/><text x="36.3589%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.4291%" y="581" width="0.0801%" height="15" fill="rgb(240,85,31)" fg:x="455" fg:w="1"/><text x="36.6791%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.6693%" y="581" width="0.0801%" height="15" fill="rgb(221,43,52)" fg:x="458" fg:w="1"/><text x="36.9193%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.6693%" y="565" width="0.0801%" height="15" fill="rgb(243,106,22)" fg:x="458" fg:w="1"/><text x="36.9193%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6693%" y="549" width="0.0801%" height="15" fill="rgb(209,138,38)" fg:x="458" fg:w="1"/><text x="36.9193%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.8295%" y="517" width="0.1601%" height="15" fill="rgb(216,63,40)" fg:x="460" fg:w="2"/><text x="37.0795%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.9095%" y="501" width="0.0801%" height="15" fill="rgb(206,115,21)" fg:x="461" fg:w="1"/><text x="37.1595%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.9896%" y="501" width="0.0801%" height="15" fill="rgb(235,53,44)" fg:x="462" fg:w="1"/><text x="37.2396%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.1497%" y="485" width="0.1601%" height="15" fill="rgb(244,160,14)" fg:x="464" fg:w="2"/><text x="37.3997%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.2298%" y="469" width="0.0801%" height="15" fill="rgb(223,16,19)" fg:x="465" fg:w="1"/><text x="37.4798%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.2298%" y="453" width="0.0801%" height="15" fill="rgb(242,63,42)" fg:x="465" fg:w="1"/><text x="37.4798%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.60%)</title><rect x="35.7886%" y="629" width="1.6013%" height="15" fill="rgb(209,66,49)" fg:x="447" fg:w="20"/><text x="36.0386%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="36.5092%" y="613" width="0.8807%" height="15" fill="rgb(207,126,46)" fg:x="456" fg:w="11"/><text x="36.7592%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="36.6693%" y="597" width="0.7206%" height="15" fill="rgb(218,160,41)" fg:x="458" fg:w="9"/><text x="36.9193%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="36.7494%" y="581" width="0.6405%" height="15" fill="rgb(234,125,46)" fg:x="459" fg:w="8"/><text x="36.9994%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="36.7494%" y="565" width="0.6405%" height="15" fill="rgb(205,66,36)" fg:x="459" fg:w="8"/><text x="36.9994%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="36.7494%" y="549" width="0.6405%" height="15" fill="rgb(220,135,16)" fg:x="459" fg:w="8"/><text x="36.9994%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="36.8295%" y="533" width="0.5604%" height="15" fill="rgb(214,217,54)" fg:x="460" fg:w="7"/><text x="37.0795%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="36.9896%" y="517" width="0.4003%" height="15" fill="rgb(206,30,9)" fg:x="462" fg:w="5"/><text x="37.2396%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="37.0697%" y="501" width="0.3203%" height="15" fill="rgb(207,196,5)" fg:x="463" fg:w="4"/><text x="37.3197%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="37.3098%" y="485" width="0.0801%" height="15" fill="rgb(227,116,12)" fg:x="466" fg:w="1"/><text x="37.5598%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="37.3098%" y="469" width="0.0801%" height="15" fill="rgb(235,227,13)" fg:x="466" fg:w="1"/><text x="37.5598%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (38 samples, 3.04%)</title><rect x="34.5076%" y="693" width="3.0424%" height="15" fill="rgb(238,212,29)" fg:x="431" fg:w="38"/><text x="34.7576%" y="703.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (37 samples, 2.96%)</title><rect x="34.5877%" y="677" width="2.9624%" height="15" fill="rgb(230,152,17)" fg:x="432" fg:w="37"/><text x="34.8377%" y="687.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (24 samples, 1.92%)</title><rect x="35.6285%" y="661" width="1.9215%" height="15" fill="rgb(220,197,1)" fg:x="445" fg:w="24"/><text x="35.8785%" y="671.50">s..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (23 samples, 1.84%)</title><rect x="35.7086%" y="645" width="1.8415%" height="15" fill="rgb(229,227,40)" fg:x="446" fg:w="23"/><text x="35.9586%" y="655.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="37.3899%" y="629" width="0.1601%" height="15" fill="rgb(227,179,16)" fg:x="467" fg:w="2"/><text x="37.6399%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.3899%" y="613" width="0.1601%" height="15" fill="rgb(246,116,44)" fg:x="467" fg:w="2"/><text x="37.6399%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="38.3507%" y="549" width="0.0801%" height="15" fill="rgb(205,191,4)" fg:x="479" fg:w="1"/><text x="38.6007%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.3507%" y="533" width="0.0801%" height="15" fill="rgb(245,69,19)" fg:x="479" fg:w="1"/><text x="38.6007%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.3507%" y="517" width="0.0801%" height="15" fill="rgb(230,29,26)" fg:x="479" fg:w="1"/><text x="38.6007%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="38.3507%" y="501" width="0.0801%" height="15" fill="rgb(239,192,26)" fg:x="479" fg:w="1"/><text x="38.6007%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="38.5108%" y="501" width="0.1601%" height="15" fill="rgb(219,92,16)" fg:x="481" fg:w="2"/><text x="38.7608%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="38.5108%" y="485" width="0.1601%" height="15" fill="rgb(246,147,43)" fg:x="481" fg:w="2"/><text x="38.7608%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="38.5909%" y="469" width="0.0801%" height="15" fill="rgb(222,147,11)" fg:x="482" fg:w="1"/><text x="38.8409%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.5909%" y="453" width="0.0801%" height="15" fill="rgb(243,71,8)" fg:x="482" fg:w="1"/><text x="38.8409%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.5909%" y="437" width="0.0801%" height="15" fill="rgb(250,36,12)" fg:x="482" fg:w="1"/><text x="38.8409%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="38.5909%" y="421" width="0.0801%" height="15" fill="rgb(207,168,14)" fg:x="482" fg:w="1"/><text x="38.8409%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.6709%" y="501" width="0.0801%" height="15" fill="rgb(254,210,51)" fg:x="483" fg:w="1"/><text x="38.9209%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.6709%" y="485" width="0.0801%" height="15" fill="rgb(236,152,38)" fg:x="483" fg:w="1"/><text x="38.9209%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="37.9504%" y="597" width="0.8807%" height="15" fill="rgb(240,164,36)" fg:x="474" fg:w="11"/><text x="38.2004%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="38.0304%" y="581" width="0.8006%" height="15" fill="rgb(210,171,36)" fg:x="475" fg:w="10"/><text x="38.2804%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="38.2706%" y="565" width="0.5604%" height="15" fill="rgb(254,156,34)" fg:x="478" fg:w="7"/><text x="38.5206%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="38.4307%" y="549" width="0.4003%" height="15" fill="rgb(216,204,23)" fg:x="480" fg:w="5"/><text x="38.6807%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="38.4307%" y="533" width="0.4003%" height="15" fill="rgb(230,75,38)" fg:x="480" fg:w="5"/><text x="38.6807%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="38.4307%" y="517" width="0.4003%" height="15" fill="rgb(248,197,25)" fg:x="480" fg:w="5"/><text x="38.6807%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.7510%" y="501" width="0.0801%" height="15" fill="rgb(234,121,26)" fg:x="484" fg:w="1"/><text x="39.0010%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.7510%" y="485" width="0.0801%" height="15" fill="rgb(220,41,36)" fg:x="484" fg:w="1"/><text x="39.0010%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.7510%" y="469" width="0.0801%" height="15" fill="rgb(227,33,32)" fg:x="484" fg:w="1"/><text x="39.0010%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="38.8311%" y="581" width="0.0801%" height="15" fill="rgb(208,214,54)" fg:x="485" fg:w="1"/><text x="39.0811%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="38.8311%" y="597" width="0.2402%" height="15" fill="rgb(205,37,38)" fg:x="485" fg:w="3"/><text x="39.0811%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.9111%" y="581" width="0.1601%" height="15" fill="rgb(252,2,0)" fg:x="486" fg:w="2"/><text x="39.1611%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.0713%" y="565" width="0.0801%" height="15" fill="rgb(212,171,10)" fg:x="488" fg:w="1"/><text x="39.3213%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19 samples, 1.52%)</title><rect x="37.7102%" y="629" width="1.5212%" height="15" fill="rgb(239,35,46)" fg:x="471" fg:w="19"/><text x="37.9602%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.36%)</title><rect x="37.8703%" y="613" width="1.3611%" height="15" fill="rgb(209,34,42)" fg:x="473" fg:w="17"/><text x="38.1203%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.0713%" y="597" width="0.1601%" height="15" fill="rgb(237,9,4)" fg:x="488" fg:w="2"/><text x="39.3213%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.0713%" y="581" width="0.1601%" height="15" fill="rgb(254,55,38)" fg:x="488" fg:w="2"/><text x="39.3213%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="39.1513%" y="565" width="0.0801%" height="15" fill="rgb(222,95,29)" fg:x="489" fg:w="1"/><text x="39.4013%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="39.2314%" y="613" width="0.0801%" height="15" fill="rgb(241,218,37)" fg:x="490" fg:w="1"/><text x="39.4814%" y="623.50"></text></g><g><title>engine::session::Session::close (174 samples, 13.93%)</title><rect x="25.4604%" y="789" width="13.9311%" height="15" fill="rgb(225,89,28)" fg:x="318" fg:w="174"/><text x="25.7104%" y="799.50">engine::session::Sess..</text></g><g><title>engine::session::state::State::close (172 samples, 13.77%)</title><rect x="25.6205%" y="773" width="13.7710%" height="15" fill="rgb(231,17,25)" fg:x="320" fg:w="172"/><text x="25.8705%" y="783.50">engine::session::stat..</text></g><g><title>engine::session::state::State::flush_entities (159 samples, 12.73%)</title><rect x="26.6613%" y="757" width="12.7302%" height="15" fill="rgb(206,216,48)" fg:x="333" fg:w="159"/><text x="26.9113%" y="767.50">engine::session::st..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (154 samples, 12.33%)</title><rect x="27.0616%" y="741" width="12.3299%" height="15" fill="rgb(247,190,28)" fg:x="338" fg:w="154"/><text x="27.3116%" y="751.50">engine::session::i..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (152 samples, 12.17%)</title><rect x="27.2218%" y="725" width="12.1697%" height="15" fill="rgb(216,196,12)" fg:x="340" fg:w="152"/><text x="27.4718%" y="735.50">engine::session::s..</text></g><g><title>kernel::model::any_entity_changes (101 samples, 8.09%)</title><rect x="31.3050%" y="709" width="8.0865%" height="15" fill="rgb(232,114,19)" fg:x="391" fg:w="101"/><text x="31.5550%" y="719.50">kernel::mod..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (23 samples, 1.84%)</title><rect x="37.5500%" y="693" width="1.8415%" height="15" fill="rgb(240,60,14)" fg:x="469" fg:w="23"/><text x="37.8000%" y="703.50">s..</text></g><g><title>serde_json::de::from_trait (23 samples, 1.84%)</title><rect x="37.5500%" y="677" width="1.8415%" height="15" fill="rgb(250,108,9)" fg:x="469" fg:w="23"/><text x="37.8000%" y="687.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23 samples, 1.84%)</title><rect x="37.5500%" y="661" width="1.8415%" height="15" fill="rgb(227,228,21)" fg:x="469" fg:w="23"/><text x="37.8000%" y="671.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23 samples, 1.84%)</title><rect x="37.5500%" y="645" width="1.8415%" height="15" fill="rgb(254,16,52)" fg:x="469" fg:w="23"/><text x="37.8000%" y="655.50">&lt;..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="39.2314%" y="629" width="0.1601%" height="15" fill="rgb(222,58,2)" fg:x="490" fg:w="2"/><text x="39.4814%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.3114%" y="613" width="0.0801%" height="15" fill="rgb(253,68,14)" fg:x="491" fg:w="1"/><text x="39.5614%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="39.3915%" y="629" width="0.0801%" height="15" fill="rgb(226,96,17)" fg:x="492" fg:w="1"/><text x="39.6415%" y="639.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="39.3915%" y="613" width="0.0801%" height="15" fill="rgb(227,199,2)" fg:x="492" fg:w="1"/><text x="39.6415%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="39.3915%" y="661" width="0.1601%" height="15" fill="rgb(228,227,48)" fg:x="492" fg:w="2"/><text x="39.6415%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="39.3915%" y="645" width="0.1601%" height="15" fill="rgb(249,183,0)" fg:x="492" fg:w="2"/><text x="39.6415%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="39.4716%" y="629" width="0.0801%" height="15" fill="rgb(250,89,38)" fg:x="493" fg:w="1"/><text x="39.7216%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="39.4716%" y="613" width="0.0801%" height="15" fill="rgb(240,227,8)" fg:x="493" fg:w="1"/><text x="39.7216%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="39.4716%" y="597" width="0.0801%" height="15" fill="rgb(242,197,35)" fg:x="493" fg:w="1"/><text x="39.7216%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.4716%" y="581" width="0.0801%" height="15" fill="rgb(224,37,41)" fg:x="493" fg:w="1"/><text x="39.7216%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.4716%" y="565" width="0.0801%" height="15" fill="rgb(236,127,7)" fg:x="493" fg:w="1"/><text x="39.7216%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="39.4716%" y="549" width="0.0801%" height="15" fill="rgb(230,62,52)" fg:x="493" fg:w="1"/><text x="39.7216%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.4716%" y="533" width="0.0801%" height="15" fill="rgb(235,114,23)" fg:x="493" fg:w="1"/><text x="39.7216%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.4716%" y="517" width="0.0801%" height="15" fill="rgb(211,55,40)" fg:x="493" fg:w="1"/><text x="39.7216%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.4716%" y="501" width="0.0801%" height="15" fill="rgb(228,123,1)" fg:x="493" fg:w="1"/><text x="39.7216%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="39.4716%" y="485" width="0.0801%" height="15" fill="rgb(244,208,8)" fg:x="493" fg:w="1"/><text x="39.7216%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.4716%" y="469" width="0.0801%" height="15" fill="rgb(237,118,14)" fg:x="493" fg:w="1"/><text x="39.7216%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.4716%" y="453" width="0.0801%" height="15" fill="rgb(219,170,13)" fg:x="493" fg:w="1"/><text x="39.7216%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.4716%" y="437" width="0.0801%" height="15" fill="rgb(212,39,43)" fg:x="493" fg:w="1"/><text x="39.7216%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.5516%" y="405" width="0.1601%" height="15" fill="rgb(244,191,2)" fg:x="494" fg:w="2"/><text x="39.8016%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.5516%" y="389" width="0.1601%" height="15" fill="rgb(219,201,46)" fg:x="494" fg:w="2"/><text x="39.8016%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.5516%" y="373" width="0.1601%" height="15" fill="rgb(218,82,7)" fg:x="494" fg:w="2"/><text x="39.8016%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.5516%" y="357" width="0.1601%" height="15" fill="rgb(208,192,8)" fg:x="494" fg:w="2"/><text x="39.8016%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="39.5516%" y="341" width="0.1601%" height="15" fill="rgb(244,54,32)" fg:x="494" fg:w="2"/><text x="39.8016%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="39.6317%" y="325" width="0.0801%" height="15" fill="rgb(240,43,52)" fg:x="495" fg:w="1"/><text x="39.8817%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="39.5516%" y="581" width="0.2402%" height="15" fill="rgb(233,134,29)" fg:x="494" fg:w="3"/><text x="39.8016%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="39.5516%" y="565" width="0.2402%" height="15" fill="rgb(236,128,10)" fg:x="494" fg:w="3"/><text x="39.8016%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="39.5516%" y="549" width="0.2402%" height="15" fill="rgb(207,46,54)" fg:x="494" fg:w="3"/><text x="39.8016%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="39.5516%" y="533" width="0.2402%" height="15" fill="rgb(248,140,35)" fg:x="494" fg:w="3"/><text x="39.8016%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="39.5516%" y="517" width="0.2402%" height="15" fill="rgb(241,103,35)" fg:x="494" fg:w="3"/><text x="39.8016%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="39.5516%" y="501" width="0.2402%" height="15" fill="rgb(223,19,48)" fg:x="494" fg:w="3"/><text x="39.8016%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.5516%" y="485" width="0.2402%" height="15" fill="rgb(238,177,46)" fg:x="494" fg:w="3"/><text x="39.8016%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="39.5516%" y="469" width="0.2402%" height="15" fill="rgb(213,102,15)" fg:x="494" fg:w="3"/><text x="39.8016%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.5516%" y="453" width="0.2402%" height="15" fill="rgb(254,135,52)" fg:x="494" fg:w="3"/><text x="39.8016%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="39.5516%" y="437" width="0.2402%" height="15" fill="rgb(240,59,6)" fg:x="494" fg:w="3"/><text x="39.8016%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.5516%" y="421" width="0.2402%" height="15" fill="rgb(207,226,5)" fg:x="494" fg:w="3"/><text x="39.8016%" y="431.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="39.7118%" y="405" width="0.0801%" height="15" fill="rgb(208,167,17)" fg:x="496" fg:w="1"/><text x="39.9618%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.7918%" y="517" width="0.0801%" height="15" fill="rgb(254,94,10)" fg:x="497" fg:w="1"/><text x="40.0418%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="39.7918%" y="501" width="0.0801%" height="15" fill="rgb(229,33,11)" fg:x="497" fg:w="1"/><text x="40.0418%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="39.9520%" y="469" width="0.0801%" height="15" fill="rgb(249,145,48)" fg:x="499" fg:w="1"/><text x="40.2020%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="39.8719%" y="485" width="0.2402%" height="15" fill="rgb(253,68,54)" fg:x="498" fg:w="3"/><text x="40.1219%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.0320%" y="469" width="0.0801%" height="15" fill="rgb(223,27,42)" fg:x="500" fg:w="1"/><text x="40.2820%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.1121%" y="453" width="0.0801%" height="15" fill="rgb(235,123,13)" fg:x="501" fg:w="1"/><text x="40.3621%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.1922%" y="437" width="0.0801%" height="15" fill="rgb(244,154,7)" fg:x="502" fg:w="1"/><text x="40.4422%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.1922%" y="421" width="0.0801%" height="15" fill="rgb(214,30,25)" fg:x="502" fg:w="1"/><text x="40.4422%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.1922%" y="405" width="0.0801%" height="15" fill="rgb(252,189,13)" fg:x="502" fg:w="1"/><text x="40.4422%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.1922%" y="389" width="0.0801%" height="15" fill="rgb(234,27,40)" fg:x="502" fg:w="1"/><text x="40.4422%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.2722%" y="405" width="0.0801%" height="15" fill="rgb(252,199,25)" fg:x="503" fg:w="1"/><text x="40.5222%" y="415.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="39.7918%" y="565" width="0.6405%" height="15" fill="rgb(234,207,20)" fg:x="497" fg:w="8"/><text x="40.0418%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="39.7918%" y="549" width="0.6405%" height="15" fill="rgb(244,220,10)" fg:x="497" fg:w="8"/><text x="40.0418%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="39.7918%" y="533" width="0.6405%" height="15" fill="rgb(247,68,23)" fg:x="497" fg:w="8"/><text x="40.0418%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="39.8719%" y="517" width="0.5604%" height="15" fill="rgb(254,61,4)" fg:x="498" fg:w="7"/><text x="40.1219%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="39.8719%" y="501" width="0.5604%" height="15" fill="rgb(245,208,35)" fg:x="498" fg:w="7"/><text x="40.1219%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="40.1121%" y="485" width="0.3203%" height="15" fill="rgb(235,90,11)" fg:x="501" fg:w="4"/><text x="40.3621%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="40.1121%" y="469" width="0.3203%" height="15" fill="rgb(239,139,43)" fg:x="501" fg:w="4"/><text x="40.3621%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="40.1922%" y="453" width="0.2402%" height="15" fill="rgb(209,187,9)" fg:x="502" fg:w="3"/><text x="40.4422%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="40.2722%" y="437" width="0.1601%" height="15" fill="rgb(241,30,6)" fg:x="503" fg:w="2"/><text x="40.5222%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="40.2722%" y="421" width="0.1601%" height="15" fill="rgb(216,104,1)" fg:x="503" fg:w="2"/><text x="40.5222%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.3523%" y="405" width="0.0801%" height="15" fill="rgb(238,55,39)" fg:x="504" fg:w="1"/><text x="40.6023%" y="415.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="40.3523%" y="389" width="0.0801%" height="15" fill="rgb(226,151,41)" fg:x="504" fg:w="1"/><text x="40.6023%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.4323%" y="485" width="0.0801%" height="15" fill="rgb(228,73,40)" fg:x="505" fg:w="1"/><text x="40.6823%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.4323%" y="469" width="0.0801%" height="15" fill="rgb(215,81,0)" fg:x="505" fg:w="1"/><text x="40.6823%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.4323%" y="453" width="0.0801%" height="15" fill="rgb(209,52,39)" fg:x="505" fg:w="1"/><text x="40.6823%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.4323%" y="437" width="0.0801%" height="15" fill="rgb(221,127,5)" fg:x="505" fg:w="1"/><text x="40.6823%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.4323%" y="421" width="0.0801%" height="15" fill="rgb(213,215,6)" fg:x="505" fg:w="1"/><text x="40.6823%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.4323%" y="405" width="0.0801%" height="15" fill="rgb(214,118,13)" fg:x="505" fg:w="1"/><text x="40.6823%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="40.4323%" y="389" width="0.0801%" height="15" fill="rgb(207,205,41)" fg:x="505" fg:w="1"/><text x="40.6823%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.4323%" y="373" width="0.0801%" height="15" fill="rgb(218,208,45)" fg:x="505" fg:w="1"/><text x="40.6823%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.4323%" y="357" width="0.0801%" height="15" fill="rgb(244,81,54)" fg:x="505" fg:w="1"/><text x="40.6823%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.4323%" y="341" width="0.0801%" height="15" fill="rgb(244,175,1)" fg:x="505" fg:w="1"/><text x="40.6823%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.4323%" y="325" width="0.0801%" height="15" fill="rgb(232,128,28)" fg:x="505" fg:w="1"/><text x="40.6823%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.4323%" y="309" width="0.0801%" height="15" fill="rgb(234,83,13)" fg:x="505" fg:w="1"/><text x="40.6823%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="40.5124%" y="485" width="0.0801%" height="15" fill="rgb(233,222,35)" fg:x="506" fg:w="1"/><text x="40.7624%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="40.5124%" y="469" width="0.0801%" height="15" fill="rgb(244,204,21)" fg:x="506" fg:w="1"/><text x="40.7624%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="40.5124%" y="453" width="0.0801%" height="15" fill="rgb(225,121,40)" fg:x="506" fg:w="1"/><text x="40.7624%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="40.5124%" y="437" width="0.0801%" height="15" fill="rgb(231,89,18)" fg:x="506" fg:w="1"/><text x="40.7624%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.5124%" y="421" width="0.0801%" height="15" fill="rgb(205,41,50)" fg:x="506" fg:w="1"/><text x="40.7624%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="40.5925%" y="437" width="0.0801%" height="15" fill="rgb(254,25,22)" fg:x="507" fg:w="1"/><text x="40.8425%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.5925%" y="421" width="0.0801%" height="15" fill="rgb(208,44,21)" fg:x="507" fg:w="1"/><text x="40.8425%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.96%)</title><rect x="39.7918%" y="581" width="0.9608%" height="15" fill="rgb(237,59,53)" fg:x="497" fg:w="12"/><text x="40.0418%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="40.4323%" y="565" width="0.3203%" height="15" fill="rgb(233,24,36)" fg:x="505" fg:w="4"/><text x="40.6823%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="40.4323%" y="549" width="0.3203%" height="15" fill="rgb(216,92,41)" fg:x="505" fg:w="4"/><text x="40.6823%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="40.4323%" y="533" width="0.3203%" height="15" fill="rgb(225,158,49)" fg:x="505" fg:w="4"/><text x="40.6823%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="40.4323%" y="517" width="0.3203%" height="15" fill="rgb(244,11,16)" fg:x="505" fg:w="4"/><text x="40.6823%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="40.4323%" y="501" width="0.3203%" height="15" fill="rgb(208,215,38)" fg:x="505" fg:w="4"/><text x="40.6823%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.5925%" y="485" width="0.1601%" height="15" fill="rgb(250,69,53)" fg:x="507" fg:w="2"/><text x="40.8425%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="40.5925%" y="469" width="0.1601%" height="15" fill="rgb(240,187,52)" fg:x="507" fg:w="2"/><text x="40.8425%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="40.5925%" y="453" width="0.1601%" height="15" fill="rgb(235,22,25)" fg:x="507" fg:w="2"/><text x="40.8425%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.6725%" y="437" width="0.0801%" height="15" fill="rgb(213,173,22)" fg:x="508" fg:w="1"/><text x="40.9225%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.6725%" y="421" width="0.0801%" height="15" fill="rgb(218,47,0)" fg:x="508" fg:w="1"/><text x="40.9225%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="40.6725%" y="405" width="0.0801%" height="15" fill="rgb(254,157,11)" fg:x="508" fg:w="1"/><text x="40.9225%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.6725%" y="389" width="0.0801%" height="15" fill="rgb(233,154,6)" fg:x="508" fg:w="1"/><text x="40.9225%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.6725%" y="373" width="0.0801%" height="15" fill="rgb(233,207,47)" fg:x="508" fg:w="1"/><text x="40.9225%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="40.6725%" y="357" width="0.0801%" height="15" fill="rgb(249,128,18)" fg:x="508" fg:w="1"/><text x="40.9225%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.6725%" y="341" width="0.0801%" height="15" fill="rgb(211,27,42)" fg:x="508" fg:w="1"/><text x="40.9225%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.6725%" y="325" width="0.0801%" height="15" fill="rgb(240,163,26)" fg:x="508" fg:w="1"/><text x="40.9225%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.6725%" y="309" width="0.0801%" height="15" fill="rgb(232,118,46)" fg:x="508" fg:w="1"/><text x="40.9225%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.6725%" y="293" width="0.0801%" height="15" fill="rgb(238,158,34)" fg:x="508" fg:w="1"/><text x="40.9225%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.7526%" y="485" width="0.0801%" height="15" fill="rgb(254,99,45)" fg:x="509" fg:w="1"/><text x="41.0026%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.7526%" y="469" width="0.0801%" height="15" fill="rgb(247,205,20)" fg:x="509" fg:w="1"/><text x="41.0026%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="40.7526%" y="581" width="0.1601%" height="15" fill="rgb(240,20,41)" fg:x="509" fg:w="2"/><text x="41.0026%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="40.7526%" y="565" width="0.1601%" height="15" fill="rgb(231,22,43)" fg:x="509" fg:w="2"/><text x="41.0026%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="40.7526%" y="549" width="0.1601%" height="15" fill="rgb(207,86,33)" fg:x="509" fg:w="2"/><text x="41.0026%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.7526%" y="533" width="0.1601%" height="15" fill="rgb(231,148,5)" fg:x="509" fg:w="2"/><text x="41.0026%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.7526%" y="517" width="0.1601%" height="15" fill="rgb(253,77,28)" fg:x="509" fg:w="2"/><text x="41.0026%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.7526%" y="501" width="0.1601%" height="15" fill="rgb(253,227,9)" fg:x="509" fg:w="2"/><text x="41.0026%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.8327%" y="485" width="0.0801%" height="15" fill="rgb(235,4,18)" fg:x="510" fg:w="1"/><text x="41.0827%" y="495.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (18 samples, 1.44%)</title><rect x="39.5516%" y="597" width="1.4412%" height="15" fill="rgb(205,206,45)" fg:x="494" fg:w="18"/><text x="39.8016%" y="607.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="40.9127%" y="581" width="0.0801%" height="15" fill="rgb(252,34,0)" fg:x="511" fg:w="1"/><text x="41.1627%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.9127%" y="565" width="0.0801%" height="15" fill="rgb(213,56,7)" fg:x="511" fg:w="1"/><text x="41.1627%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (19 samples, 1.52%)</title><rect x="39.5516%" y="629" width="1.5212%" height="15" fill="rgb(227,74,29)" fg:x="494" fg:w="19"/><text x="39.8016%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (19 samples, 1.52%)</title><rect x="39.5516%" y="613" width="1.5212%" height="15" fill="rgb(221,32,48)" fg:x="494" fg:w="19"/><text x="39.8016%" y="623.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="40.9928%" y="597" width="0.0801%" height="15" fill="rgb(230,205,25)" fg:x="512" fg:w="1"/><text x="41.2428%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.9928%" y="581" width="0.0801%" height="15" fill="rgb(215,110,9)" fg:x="512" fg:w="1"/><text x="41.2428%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.9928%" y="565" width="0.0801%" height="15" fill="rgb(245,220,47)" fg:x="512" fg:w="1"/><text x="41.2428%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (25 samples, 2.00%)</title><rect x="39.3915%" y="677" width="2.0016%" height="15" fill="rgb(224,117,5)" fg:x="492" fg:w="25"/><text x="39.6415%" y="687.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (23 samples, 1.84%)</title><rect x="39.5516%" y="661" width="1.8415%" height="15" fill="rgb(242,208,25)" fg:x="494" fg:w="23"/><text x="39.8016%" y="671.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (23 samples, 1.84%)</title><rect x="39.5516%" y="645" width="1.8415%" height="15" fill="rgb(226,12,37)" fg:x="494" fg:w="23"/><text x="39.8016%" y="655.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="41.0729%" y="629" width="0.3203%" height="15" fill="rgb(224,221,22)" fg:x="513" fg:w="4"/><text x="41.3229%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="41.1529%" y="613" width="0.2402%" height="15" fill="rgb(239,38,44)" fg:x="514" fg:w="3"/><text x="41.4029%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.3131%" y="597" width="0.0801%" height="15" fill="rgb(218,25,46)" fg:x="516" fg:w="1"/><text x="41.5631%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.3131%" y="581" width="0.0801%" height="15" fill="rgb(206,137,51)" fg:x="516" fg:w="1"/><text x="41.5631%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="41.3931%" y="645" width="0.0801%" height="15" fill="rgb(233,174,3)" fg:x="517" fg:w="1"/><text x="41.6431%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="41.3931%" y="629" width="0.0801%" height="15" fill="rgb(207,224,43)" fg:x="517" fg:w="1"/><text x="41.6431%" y="639.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="41.3931%" y="613" width="0.0801%" height="15" fill="rgb(230,46,27)" fg:x="517" fg:w="1"/><text x="41.6431%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.3931%" y="597" width="0.0801%" height="15" fill="rgb(251,215,32)" fg:x="517" fg:w="1"/><text x="41.6431%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.3931%" y="581" width="0.0801%" height="15" fill="rgb(244,219,19)" fg:x="517" fg:w="1"/><text x="41.6431%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.3931%" y="565" width="0.0801%" height="15" fill="rgb(242,125,36)" fg:x="517" fg:w="1"/><text x="41.6431%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.3931%" y="549" width="0.0801%" height="15" fill="rgb(251,211,12)" fg:x="517" fg:w="1"/><text x="41.6431%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.3931%" y="533" width="0.0801%" height="15" fill="rgb(209,179,33)" fg:x="517" fg:w="1"/><text x="41.6431%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.3931%" y="517" width="0.0801%" height="15" fill="rgb(205,161,48)" fg:x="517" fg:w="1"/><text x="41.6431%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.3931%" y="501" width="0.0801%" height="15" fill="rgb(241,139,8)" fg:x="517" fg:w="1"/><text x="41.6431%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.3931%" y="485" width="0.0801%" height="15" fill="rgb(246,159,53)" fg:x="517" fg:w="1"/><text x="41.6431%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.3931%" y="469" width="0.0801%" height="15" fill="rgb(212,62,27)" fg:x="517" fg:w="1"/><text x="41.6431%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.3931%" y="453" width="0.0801%" height="15" fill="rgb(216,168,18)" fg:x="517" fg:w="1"/><text x="41.6431%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.3931%" y="437" width="0.0801%" height="15" fill="rgb(228,136,50)" fg:x="517" fg:w="1"/><text x="41.6431%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.3931%" y="421" width="0.0801%" height="15" fill="rgb(237,19,45)" fg:x="517" fg:w="1"/><text x="41.6431%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.3931%" y="405" width="0.0801%" height="15" fill="rgb(249,150,28)" fg:x="517" fg:w="1"/><text x="41.6431%" y="415.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (27 samples, 2.16%)</title><rect x="39.3915%" y="693" width="2.1617%" height="15" fill="rgb(236,179,39)" fg:x="492" fg:w="27"/><text x="39.6415%" y="703.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="41.3931%" y="677" width="0.1601%" height="15" fill="rgb(250,113,27)" fg:x="517" fg:w="2"/><text x="41.6431%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="41.3931%" y="661" width="0.1601%" height="15" fill="rgb(223,13,14)" fg:x="517" fg:w="2"/><text x="41.6431%" y="671.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="41.4732%" y="645" width="0.0801%" height="15" fill="rgb(226,68,24)" fg:x="518" fg:w="1"/><text x="41.7232%" y="655.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="41.4732%" y="629" width="0.0801%" height="15" fill="rgb(239,40,50)" fg:x="518" fg:w="1"/><text x="41.7232%" y="639.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.4732%" y="613" width="0.0801%" height="15" fill="rgb(209,187,0)" fg:x="518" fg:w="1"/><text x="41.7232%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.5532%" y="661" width="0.0801%" height="15" fill="rgb(240,61,8)" fg:x="519" fg:w="1"/><text x="41.8032%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.6333%" y="613" width="0.0801%" height="15" fill="rgb(236,137,5)" fg:x="520" fg:w="1"/><text x="41.8833%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="41.7134%" y="549" width="0.0801%" height="15" fill="rgb(247,214,21)" fg:x="521" fg:w="1"/><text x="41.9634%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (1 samples, 0.08%)</title><rect x="41.7934%" y="549" width="0.0801%" height="15" fill="rgb(244,115,25)" fg:x="522" fg:w="1"/><text x="42.0434%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="41.7934%" y="533" width="0.0801%" height="15" fill="rgb(230,58,38)" fg:x="522" fg:w="1"/><text x="42.0434%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="41.7934%" y="517" width="0.0801%" height="15" fill="rgb(206,122,6)" fg:x="522" fg:w="1"/><text x="42.0434%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.7934%" y="501" width="0.0801%" height="15" fill="rgb(217,135,53)" fg:x="522" fg:w="1"/><text x="42.0434%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.7934%" y="485" width="0.0801%" height="15" fill="rgb(225,120,8)" fg:x="522" fg:w="1"/><text x="42.0434%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.7934%" y="469" width="0.0801%" height="15" fill="rgb(226,3,30)" fg:x="522" fg:w="1"/><text x="42.0434%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.7934%" y="453" width="0.0801%" height="15" fill="rgb(214,159,38)" fg:x="522" fg:w="1"/><text x="42.0434%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.7934%" y="437" width="0.0801%" height="15" fill="rgb(242,182,47)" fg:x="522" fg:w="1"/><text x="42.0434%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.7934%" y="421" width="0.0801%" height="15" fill="rgb(245,202,26)" fg:x="522" fg:w="1"/><text x="42.0434%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.7934%" y="405" width="0.0801%" height="15" fill="rgb(226,163,3)" fg:x="522" fg:w="1"/><text x="42.0434%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.7934%" y="389" width="0.0801%" height="15" fill="rgb(219,4,4)" fg:x="522" fg:w="1"/><text x="42.0434%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="41.7934%" y="373" width="0.0801%" height="15" fill="rgb(223,85,4)" fg:x="522" fg:w="1"/><text x="42.0434%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="41.7934%" y="357" width="0.0801%" height="15" fill="rgb(242,170,11)" fg:x="522" fg:w="1"/><text x="42.0434%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8735%" y="501" width="0.0801%" height="15" fill="rgb(221,97,42)" fg:x="523" fg:w="1"/><text x="42.1235%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8735%" y="485" width="0.0801%" height="15" fill="rgb(231,206,45)" fg:x="523" fg:w="1"/><text x="42.1235%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8735%" y="469" width="0.0801%" height="15" fill="rgb(216,23,48)" fg:x="523" fg:w="1"/><text x="42.1235%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.8735%" y="453" width="0.0801%" height="15" fill="rgb(225,49,9)" fg:x="523" fg:w="1"/><text x="42.1235%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8735%" y="437" width="0.0801%" height="15" fill="rgb(247,24,47)" fg:x="523" fg:w="1"/><text x="42.1235%" y="447.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (4 samples, 0.32%)</title><rect x="41.7134%" y="565" width="0.3203%" height="15" fill="rgb(253,145,10)" fg:x="521" fg:w="4"/><text x="41.9634%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="41.8735%" y="549" width="0.1601%" height="15" fill="rgb(206,62,10)" fg:x="523" fg:w="2"/><text x="42.1235%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="41.8735%" y="533" width="0.1601%" height="15" fill="rgb(224,159,31)" fg:x="523" fg:w="2"/><text x="42.1235%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="41.8735%" y="517" width="0.1601%" height="15" fill="rgb(234,184,15)" fg:x="523" fg:w="2"/><text x="42.1235%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.9536%" y="501" width="0.0801%" height="15" fill="rgb(237,101,1)" fg:x="524" fg:w="1"/><text x="42.2036%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.9536%" y="485" width="0.0801%" height="15" fill="rgb(211,99,29)" fg:x="524" fg:w="1"/><text x="42.2036%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.9536%" y="469" width="0.0801%" height="15" fill="rgb(250,167,3)" fg:x="524" fg:w="1"/><text x="42.2036%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.9536%" y="453" width="0.0801%" height="15" fill="rgb(225,58,6)" fg:x="524" fg:w="1"/><text x="42.2036%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="41.9536%" y="437" width="0.0801%" height="15" fill="rgb(251,161,21)" fg:x="524" fg:w="1"/><text x="42.2036%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.9536%" y="421" width="0.0801%" height="15" fill="rgb(253,203,35)" fg:x="524" fg:w="1"/><text x="42.2036%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.9536%" y="405" width="0.0801%" height="15" fill="rgb(214,220,52)" fg:x="524" fg:w="1"/><text x="42.2036%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.0336%" y="485" width="0.0801%" height="15" fill="rgb(235,216,33)" fg:x="525" fg:w="1"/><text x="42.2836%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.0336%" y="469" width="0.0801%" height="15" fill="rgb(231,79,26)" fg:x="525" fg:w="1"/><text x="42.2836%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.0336%" y="453" width="0.0801%" height="15" fill="rgb(244,218,10)" fg:x="525" fg:w="1"/><text x="42.2836%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.0336%" y="437" width="0.0801%" height="15" fill="rgb(238,15,9)" fg:x="525" fg:w="1"/><text x="42.2836%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.0336%" y="421" width="0.0801%" height="15" fill="rgb(235,112,15)" fg:x="525" fg:w="1"/><text x="42.2836%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.0336%" y="405" width="0.0801%" height="15" fill="rgb(239,126,18)" fg:x="525" fg:w="1"/><text x="42.2836%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.0336%" y="389" width="0.0801%" height="15" fill="rgb(253,171,19)" fg:x="525" fg:w="1"/><text x="42.2836%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="42.0336%" y="565" width="0.1601%" height="15" fill="rgb(237,218,25)" fg:x="525" fg:w="2"/><text x="42.2836%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="42.0336%" y="549" width="0.1601%" height="15" fill="rgb(213,88,46)" fg:x="525" fg:w="2"/><text x="42.2836%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="42.0336%" y="533" width="0.1601%" height="15" fill="rgb(222,124,54)" fg:x="525" fg:w="2"/><text x="42.2836%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="42.0336%" y="517" width="0.1601%" height="15" fill="rgb(209,206,42)" fg:x="525" fg:w="2"/><text x="42.2836%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="42.0336%" y="501" width="0.1601%" height="15" fill="rgb(219,25,49)" fg:x="525" fg:w="2"/><text x="42.2836%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="42.1137%" y="485" width="0.0801%" height="15" fill="rgb(228,207,53)" fg:x="526" fg:w="1"/><text x="42.3637%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="42.1137%" y="469" width="0.0801%" height="15" fill="rgb(224,3,4)" fg:x="526" fg:w="1"/><text x="42.3637%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="42.2738%" y="533" width="0.1601%" height="15" fill="rgb(254,206,26)" fg:x="528" fg:w="2"/><text x="42.5238%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="42.4339%" y="517" width="0.1601%" height="15" fill="rgb(209,4,26)" fg:x="530" fg:w="2"/><text x="42.6839%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.5140%" y="501" width="0.0801%" height="15" fill="rgb(243,193,32)" fg:x="531" fg:w="1"/><text x="42.7640%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.5140%" y="485" width="0.0801%" height="15" fill="rgb(225,150,36)" fg:x="531" fg:w="1"/><text x="42.7640%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.5140%" y="469" width="0.0801%" height="15" fill="rgb(225,131,26)" fg:x="531" fg:w="1"/><text x="42.7640%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.5140%" y="453" width="0.0801%" height="15" fill="rgb(236,126,12)" fg:x="531" fg:w="1"/><text x="42.7640%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.5140%" y="437" width="0.0801%" height="15" fill="rgb(238,167,44)" fg:x="531" fg:w="1"/><text x="42.7640%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.5140%" y="421" width="0.0801%" height="15" fill="rgb(238,153,31)" fg:x="531" fg:w="1"/><text x="42.7640%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.5140%" y="405" width="0.0801%" height="15" fill="rgb(254,41,51)" fg:x="531" fg:w="1"/><text x="42.7640%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.5140%" y="389" width="0.0801%" height="15" fill="rgb(224,100,52)" fg:x="531" fg:w="1"/><text x="42.7640%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.5140%" y="373" width="0.0801%" height="15" fill="rgb(246,226,38)" fg:x="531" fg:w="1"/><text x="42.7640%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.5140%" y="357" width="0.0801%" height="15" fill="rgb(252,21,43)" fg:x="531" fg:w="1"/><text x="42.7640%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.5140%" y="341" width="0.0801%" height="15" fill="rgb(250,44,8)" fg:x="531" fg:w="1"/><text x="42.7640%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.5140%" y="325" width="0.0801%" height="15" fill="rgb(224,200,45)" fg:x="531" fg:w="1"/><text x="42.7640%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.5140%" y="309" width="0.0801%" height="15" fill="rgb(208,75,52)" fg:x="531" fg:w="1"/><text x="42.7640%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="42.5941%" y="517" width="0.2402%" height="15" fill="rgb(213,167,20)" fg:x="532" fg:w="3"/><text x="42.8441%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="42.5941%" y="501" width="0.2402%" height="15" fill="rgb(236,163,42)" fg:x="532" fg:w="3"/><text x="42.8441%" y="511.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="42.5941%" y="485" width="0.2402%" height="15" fill="rgb(210,98,31)" fg:x="532" fg:w="3"/><text x="42.8441%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="42.8343%" y="517" width="0.0801%" height="15" fill="rgb(246,166,15)" fg:x="535" fg:w="1"/><text x="43.0843%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.8343%" y="501" width="0.0801%" height="15" fill="rgb(214,114,7)" fg:x="535" fg:w="1"/><text x="43.0843%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="42.9944%" y="469" width="0.0801%" height="15" fill="rgb(217,202,34)" fg:x="537" fg:w="1"/><text x="43.2444%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="42.9944%" y="453" width="0.0801%" height="15" fill="rgb(227,226,29)" fg:x="537" fg:w="1"/><text x="43.2444%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="43.0745%" y="261" width="0.0801%" height="15" fill="rgb(254,65,44)" fg:x="538" fg:w="1"/><text x="43.3245%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="43.0745%" y="245" width="0.0801%" height="15" fill="rgb(213,150,32)" fg:x="538" fg:w="1"/><text x="43.3245%" y="255.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.0745%" y="229" width="0.0801%" height="15" fill="rgb(208,86,46)" fg:x="538" fg:w="1"/><text x="43.3245%" y="239.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="43.0745%" y="213" width="0.0801%" height="15" fill="rgb(222,75,3)" fg:x="538" fg:w="1"/><text x="43.3245%" y="223.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="43.0745%" y="197" width="0.0801%" height="15" fill="rgb(225,213,9)" fg:x="538" fg:w="1"/><text x="43.3245%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="42.9944%" y="501" width="0.2402%" height="15" fill="rgb(209,199,10)" fg:x="537" fg:w="3"/><text x="43.2444%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="42.9944%" y="485" width="0.2402%" height="15" fill="rgb(213,18,17)" fg:x="537" fg:w="3"/><text x="43.2444%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="43.0745%" y="469" width="0.1601%" height="15" fill="rgb(243,79,44)" fg:x="538" fg:w="2"/><text x="43.3245%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="43.0745%" y="453" width="0.1601%" height="15" fill="rgb(226,20,5)" fg:x="538" fg:w="2"/><text x="43.3245%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="43.0745%" y="437" width="0.1601%" height="15" fill="rgb(217,52,31)" fg:x="538" fg:w="2"/><text x="43.3245%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="43.0745%" y="421" width="0.1601%" height="15" fill="rgb(229,42,7)" fg:x="538" fg:w="2"/><text x="43.3245%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="43.0745%" y="405" width="0.1601%" height="15" fill="rgb(206,118,29)" fg:x="538" fg:w="2"/><text x="43.3245%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="43.0745%" y="389" width="0.1601%" height="15" fill="rgb(248,132,44)" fg:x="538" fg:w="2"/><text x="43.3245%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="43.0745%" y="373" width="0.1601%" height="15" fill="rgb(231,56,33)" fg:x="538" fg:w="2"/><text x="43.3245%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="43.0745%" y="357" width="0.1601%" height="15" fill="rgb(208,31,11)" fg:x="538" fg:w="2"/><text x="43.3245%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="43.0745%" y="341" width="0.1601%" height="15" fill="rgb(216,56,33)" fg:x="538" fg:w="2"/><text x="43.3245%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="43.0745%" y="325" width="0.1601%" height="15" fill="rgb(213,100,0)" fg:x="538" fg:w="2"/><text x="43.3245%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="43.0745%" y="309" width="0.1601%" height="15" fill="rgb(236,166,18)" fg:x="538" fg:w="2"/><text x="43.3245%" y="319.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="43.0745%" y="293" width="0.1601%" height="15" fill="rgb(251,132,12)" fg:x="538" fg:w="2"/><text x="43.3245%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="43.0745%" y="277" width="0.1601%" height="15" fill="rgb(216,117,7)" fg:x="538" fg:w="2"/><text x="43.3245%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.1545%" y="261" width="0.0801%" height="15" fill="rgb(243,184,8)" fg:x="539" fg:w="1"/><text x="43.4045%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.1545%" y="245" width="0.0801%" height="15" fill="rgb(212,91,32)" fg:x="539" fg:w="1"/><text x="43.4045%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="43.1545%" y="229" width="0.0801%" height="15" fill="rgb(224,147,15)" fg:x="539" fg:w="1"/><text x="43.4045%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="43.1545%" y="213" width="0.0801%" height="15" fill="rgb(228,84,10)" fg:x="539" fg:w="1"/><text x="43.4045%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="43.1545%" y="197" width="0.0801%" height="15" fill="rgb(221,161,22)" fg:x="539" fg:w="1"/><text x="43.4045%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="43.1545%" y="181" width="0.0801%" height="15" fill="rgb(250,132,20)" fg:x="539" fg:w="1"/><text x="43.4045%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="43.1545%" y="165" width="0.0801%" height="15" fill="rgb(209,161,12)" fg:x="539" fg:w="1"/><text x="43.4045%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="43.1545%" y="149" width="0.0801%" height="15" fill="rgb(232,142,42)" fg:x="539" fg:w="1"/><text x="43.4045%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="43.1545%" y="133" width="0.0801%" height="15" fill="rgb(240,228,27)" fg:x="539" fg:w="1"/><text x="43.4045%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="43.1545%" y="117" width="0.0801%" height="15" fill="rgb(243,0,31)" fg:x="539" fg:w="1"/><text x="43.4045%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="43.1545%" y="101" width="0.0801%" height="15" fill="rgb(237,100,15)" fg:x="539" fg:w="1"/><text x="43.4045%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="43.1545%" y="85" width="0.0801%" height="15" fill="rgb(230,26,48)" fg:x="539" fg:w="1"/><text x="43.4045%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="43.1545%" y="69" width="0.0801%" height="15" fill="rgb(215,7,13)" fg:x="539" fg:w="1"/><text x="43.4045%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="43.1545%" y="53" width="0.0801%" height="15" fill="rgb(227,172,5)" fg:x="539" fg:w="1"/><text x="43.4045%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="43.1545%" y="37" width="0.0801%" height="15" fill="rgb(248,206,14)" fg:x="539" fg:w="1"/><text x="43.4045%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="43.2346%" y="501" width="0.0801%" height="15" fill="rgb(231,62,54)" fg:x="540" fg:w="1"/><text x="43.4846%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="43.2346%" y="485" width="0.0801%" height="15" fill="rgb(222,136,26)" fg:x="540" fg:w="1"/><text x="43.4846%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.2346%" y="469" width="0.0801%" height="15" fill="rgb(211,115,42)" fg:x="540" fg:w="1"/><text x="43.4846%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3147%" y="437" width="0.0801%" height="15" fill="rgb(234,5,17)" fg:x="541" fg:w="1"/><text x="43.5647%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3147%" y="421" width="0.0801%" height="15" fill="rgb(233,67,14)" fg:x="541" fg:w="1"/><text x="43.5647%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.3147%" y="405" width="0.0801%" height="15" fill="rgb(225,133,51)" fg:x="541" fg:w="1"/><text x="43.5647%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.3147%" y="389" width="0.0801%" height="15" fill="rgb(206,107,40)" fg:x="541" fg:w="1"/><text x="43.5647%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.3147%" y="373" width="0.0801%" height="15" fill="rgb(210,56,9)" fg:x="541" fg:w="1"/><text x="43.5647%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.3147%" y="357" width="0.0801%" height="15" fill="rgb(222,204,4)" fg:x="541" fg:w="1"/><text x="43.5647%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.3147%" y="341" width="0.0801%" height="15" fill="rgb(210,168,3)" fg:x="541" fg:w="1"/><text x="43.5647%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.3147%" y="325" width="0.0801%" height="15" fill="rgb(246,183,26)" fg:x="541" fg:w="1"/><text x="43.5647%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.3147%" y="309" width="0.0801%" height="15" fill="rgb(228,27,31)" fg:x="541" fg:w="1"/><text x="43.5647%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.3147%" y="293" width="0.0801%" height="15" fill="rgb(206,8,2)" fg:x="541" fg:w="1"/><text x="43.5647%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.3147%" y="277" width="0.0801%" height="15" fill="rgb(251,229,16)" fg:x="541" fg:w="1"/><text x="43.5647%" y="287.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="43.3147%" y="261" width="0.0801%" height="15" fill="rgb(208,84,44)" fg:x="541" fg:w="1"/><text x="43.5647%" y="271.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.3147%" y="245" width="0.0801%" height="15" fill="rgb(221,228,13)" fg:x="541" fg:w="1"/><text x="43.5647%" y="255.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="43.3147%" y="469" width="0.1601%" height="15" fill="rgb(248,42,47)" fg:x="541" fg:w="2"/><text x="43.5647%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="43.3147%" y="453" width="0.1601%" height="15" fill="rgb(222,124,41)" fg:x="541" fg:w="2"/><text x="43.5647%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3947%" y="437" width="0.0801%" height="15" fill="rgb(244,191,35)" fg:x="542" fg:w="1"/><text x="43.6447%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.3947%" y="421" width="0.0801%" height="15" fill="rgb(222,223,54)" fg:x="542" fg:w="1"/><text x="43.6447%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3947%" y="405" width="0.0801%" height="15" fill="rgb(248,178,42)" fg:x="542" fg:w="1"/><text x="43.6447%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.3947%" y="389" width="0.0801%" height="15" fill="rgb(238,21,24)" fg:x="542" fg:w="1"/><text x="43.6447%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.3947%" y="373" width="0.0801%" height="15" fill="rgb(227,134,7)" fg:x="542" fg:w="1"/><text x="43.6447%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.3947%" y="357" width="0.0801%" height="15" fill="rgb(205,191,1)" fg:x="542" fg:w="1"/><text x="43.6447%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.3947%" y="341" width="0.0801%" height="15" fill="rgb(222,166,30)" fg:x="542" fg:w="1"/><text x="43.6447%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.3947%" y="325" width="0.0801%" height="15" fill="rgb(229,94,26)" fg:x="542" fg:w="1"/><text x="43.6447%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.3947%" y="309" width="0.0801%" height="15" fill="rgb(246,97,2)" fg:x="542" fg:w="1"/><text x="43.6447%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.3947%" y="293" width="0.0801%" height="15" fill="rgb(252,112,53)" fg:x="542" fg:w="1"/><text x="43.6447%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.3947%" y="277" width="0.0801%" height="15" fill="rgb(225,52,38)" fg:x="542" fg:w="1"/><text x="43.6447%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.3947%" y="261" width="0.0801%" height="15" fill="rgb(215,203,24)" fg:x="542" fg:w="1"/><text x="43.6447%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.3947%" y="245" width="0.0801%" height="15" fill="rgb(210,122,52)" fg:x="542" fg:w="1"/><text x="43.6447%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.3947%" y="229" width="0.0801%" height="15" fill="rgb(209,161,44)" fg:x="542" fg:w="1"/><text x="43.6447%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="43.4748%" y="309" width="0.0801%" height="15" fill="rgb(221,97,16)" fg:x="543" fg:w="1"/><text x="43.7248%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.4748%" y="293" width="0.0801%" height="15" fill="rgb(209,87,13)" fg:x="543" fg:w="1"/><text x="43.7248%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.6349%" y="277" width="0.0801%" height="15" fill="rgb(242,1,21)" fg:x="545" fg:w="1"/><text x="43.8849%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.6349%" y="261" width="0.0801%" height="15" fill="rgb(251,170,41)" fg:x="545" fg:w="1"/><text x="43.8849%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.6349%" y="245" width="0.0801%" height="15" fill="rgb(227,201,10)" fg:x="545" fg:w="1"/><text x="43.8849%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.6349%" y="229" width="0.0801%" height="15" fill="rgb(231,100,29)" fg:x="545" fg:w="1"/><text x="43.8849%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.7150%" y="245" width="0.0801%" height="15" fill="rgb(226,31,35)" fg:x="546" fg:w="1"/><text x="43.9650%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.7950%" y="213" width="0.0801%" height="15" fill="rgb(254,99,26)" fg:x="547" fg:w="1"/><text x="44.0450%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.8751%" y="181" width="0.0801%" height="15" fill="rgb(217,228,17)" fg:x="548" fg:w="1"/><text x="44.1251%" y="191.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (7 samples, 0.56%)</title><rect x="43.4748%" y="357" width="0.5604%" height="15" fill="rgb(226,132,8)" fg:x="543" fg:w="7"/><text x="43.7248%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="43.4748%" y="341" width="0.5604%" height="15" fill="rgb(220,202,47)" fg:x="543" fg:w="7"/><text x="43.7248%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="43.4748%" y="325" width="0.5604%" height="15" fill="rgb(245,194,10)" fg:x="543" fg:w="7"/><text x="43.7248%" y="335.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="43.5548%" y="309" width="0.4804%" height="15" fill="rgb(225,44,52)" fg:x="544" fg:w="6"/><text x="43.8048%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="43.5548%" y="293" width="0.4804%" height="15" fill="rgb(235,10,4)" fg:x="544" fg:w="6"/><text x="43.8048%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="43.7150%" y="277" width="0.3203%" height="15" fill="rgb(244,32,23)" fg:x="546" fg:w="4"/><text x="43.9650%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="43.7150%" y="261" width="0.3203%" height="15" fill="rgb(210,115,0)" fg:x="546" fg:w="4"/><text x="43.9650%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="43.7950%" y="245" width="0.2402%" height="15" fill="rgb(246,72,16)" fg:x="547" fg:w="3"/><text x="44.0450%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.7950%" y="229" width="0.2402%" height="15" fill="rgb(223,32,10)" fg:x="547" fg:w="3"/><text x="44.0450%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="43.8751%" y="213" width="0.1601%" height="15" fill="rgb(223,97,52)" fg:x="548" fg:w="2"/><text x="44.1251%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.8751%" y="197" width="0.1601%" height="15" fill="rgb(238,69,38)" fg:x="548" fg:w="2"/><text x="44.1251%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.9552%" y="181" width="0.0801%" height="15" fill="rgb(226,61,1)" fg:x="549" fg:w="1"/><text x="44.2052%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.9552%" y="165" width="0.0801%" height="15" fill="rgb(244,56,14)" fg:x="549" fg:w="1"/><text x="44.2052%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.9552%" y="149" width="0.0801%" height="15" fill="rgb(242,164,18)" fg:x="549" fg:w="1"/><text x="44.2052%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.9552%" y="133" width="0.0801%" height="15" fill="rgb(217,130,28)" fg:x="549" fg:w="1"/><text x="44.2052%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="43.9552%" y="117" width="0.0801%" height="15" fill="rgb(218,118,52)" fg:x="549" fg:w="1"/><text x="44.2052%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.0352%" y="261" width="0.0801%" height="15" fill="rgb(251,112,38)" fg:x="550" fg:w="1"/><text x="44.2852%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.1954%" y="229" width="0.0801%" height="15" fill="rgb(239,14,50)" fg:x="552" fg:w="1"/><text x="44.4454%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.1954%" y="213" width="0.0801%" height="15" fill="rgb(228,141,54)" fg:x="552" fg:w="1"/><text x="44.4454%" y="223.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="44.0352%" y="341" width="0.4804%" height="15" fill="rgb(236,128,15)" fg:x="550" fg:w="6"/><text x="44.2852%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="44.0352%" y="325" width="0.4804%" height="15" fill="rgb(206,140,54)" fg:x="550" fg:w="6"/><text x="44.2852%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="44.0352%" y="309" width="0.4804%" height="15" fill="rgb(240,0,44)" fg:x="550" fg:w="6"/><text x="44.2852%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="44.0352%" y="293" width="0.4804%" height="15" fill="rgb(243,207,23)" fg:x="550" fg:w="6"/><text x="44.2852%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="44.0352%" y="277" width="0.4804%" height="15" fill="rgb(247,202,1)" fg:x="550" fg:w="6"/><text x="44.2852%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="44.1153%" y="261" width="0.4003%" height="15" fill="rgb(239,83,27)" fg:x="551" fg:w="5"/><text x="44.3653%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="44.1153%" y="245" width="0.4003%" height="15" fill="rgb(219,205,7)" fg:x="551" fg:w="5"/><text x="44.3653%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="44.2754%" y="229" width="0.2402%" height="15" fill="rgb(249,184,22)" fg:x="553" fg:w="3"/><text x="44.5254%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="44.2754%" y="213" width="0.2402%" height="15" fill="rgb(230,150,14)" fg:x="553" fg:w="3"/><text x="44.5254%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.3555%" y="197" width="0.1601%" height="15" fill="rgb(240,118,34)" fg:x="554" fg:w="2"/><text x="44.6055%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.3555%" y="181" width="0.1601%" height="15" fill="rgb(227,162,21)" fg:x="554" fg:w="2"/><text x="44.6055%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.3555%" y="165" width="0.1601%" height="15" fill="rgb(219,14,9)" fg:x="554" fg:w="2"/><text x="44.6055%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.3555%" y="149" width="0.1601%" height="15" fill="rgb(223,226,16)" fg:x="554" fg:w="2"/><text x="44.6055%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.3555%" y="133" width="0.1601%" height="15" fill="rgb(246,161,37)" fg:x="554" fg:w="2"/><text x="44.6055%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.4355%" y="117" width="0.0801%" height="15" fill="rgb(205,221,43)" fg:x="555" fg:w="1"/><text x="44.6855%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.4355%" y="101" width="0.0801%" height="15" fill="rgb(228,216,26)" fg:x="555" fg:w="1"/><text x="44.6855%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.4355%" y="85" width="0.0801%" height="15" fill="rgb(251,33,17)" fg:x="555" fg:w="1"/><text x="44.6855%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="44.5957%" y="165" width="0.0801%" height="15" fill="rgb(246,126,36)" fg:x="557" fg:w="1"/><text x="44.8457%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="44.5957%" y="149" width="0.0801%" height="15" fill="rgb(217,160,24)" fg:x="557" fg:w="1"/><text x="44.8457%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.5957%" y="133" width="0.0801%" height="15" fill="rgb(211,64,12)" fg:x="557" fg:w="1"/><text x="44.8457%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="44.6757%" y="117" width="0.1601%" height="15" fill="rgb(238,47,36)" fg:x="558" fg:w="2"/><text x="44.9257%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="44.6757%" y="101" width="0.1601%" height="15" fill="rgb(210,157,42)" fg:x="558" fg:w="2"/><text x="44.9257%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="44.7558%" y="85" width="0.0801%" height="15" fill="rgb(242,84,39)" fg:x="559" fg:w="1"/><text x="45.0058%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="44.5957%" y="197" width="0.3203%" height="15" fill="rgb(207,65,41)" fg:x="557" fg:w="4"/><text x="44.8457%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="44.5957%" y="181" width="0.3203%" height="15" fill="rgb(246,97,27)" fg:x="557" fg:w="4"/><text x="44.8457%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="44.6757%" y="165" width="0.2402%" height="15" fill="rgb(229,9,43)" fg:x="558" fg:w="3"/><text x="44.9257%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="44.6757%" y="149" width="0.2402%" height="15" fill="rgb(211,82,44)" fg:x="558" fg:w="3"/><text x="44.9257%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="44.6757%" y="133" width="0.2402%" height="15" fill="rgb(253,45,54)" fg:x="558" fg:w="3"/><text x="44.9257%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="44.8359%" y="117" width="0.0801%" height="15" fill="rgb(235,94,32)" fg:x="560" fg:w="1"/><text x="45.0859%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.8359%" y="101" width="0.0801%" height="15" fill="rgb(252,143,1)" fg:x="560" fg:w="1"/><text x="45.0859%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="44.5156%" y="261" width="0.5604%" height="15" fill="rgb(239,164,4)" fg:x="556" fg:w="7"/><text x="44.7656%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="44.5156%" y="245" width="0.5604%" height="15" fill="rgb(222,25,39)" fg:x="556" fg:w="7"/><text x="44.7656%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="44.5156%" y="229" width="0.5604%" height="15" fill="rgb(234,175,9)" fg:x="556" fg:w="7"/><text x="44.7656%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="44.5957%" y="213" width="0.4804%" height="15" fill="rgb(247,200,41)" fg:x="557" fg:w="6"/><text x="44.8457%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.9159%" y="197" width="0.1601%" height="15" fill="rgb(245,101,27)" fg:x="561" fg:w="2"/><text x="45.1659%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.9159%" y="181" width="0.1601%" height="15" fill="rgb(221,29,7)" fg:x="561" fg:w="2"/><text x="45.1659%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="45.0761%" y="261" width="0.0801%" height="15" fill="rgb(240,184,10)" fg:x="563" fg:w="1"/><text x="45.3261%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="45.0761%" y="245" width="0.0801%" height="15" fill="rgb(251,85,15)" fg:x="563" fg:w="1"/><text x="45.3261%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="45.0761%" y="229" width="0.0801%" height="15" fill="rgb(252,84,16)" fg:x="563" fg:w="1"/><text x="45.3261%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.0761%" y="213" width="0.0801%" height="15" fill="rgb(233,136,6)" fg:x="563" fg:w="1"/><text x="45.3261%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.72%)</title><rect x="44.5156%" y="309" width="0.7206%" height="15" fill="rgb(226,169,30)" fg:x="556" fg:w="9"/><text x="44.7656%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="44.5156%" y="293" width="0.7206%" height="15" fill="rgb(241,83,18)" fg:x="556" fg:w="9"/><text x="44.7656%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="44.5156%" y="277" width="0.7206%" height="15" fill="rgb(239,151,5)" fg:x="556" fg:w="9"/><text x="44.7656%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.1561%" y="261" width="0.0801%" height="15" fill="rgb(238,56,13)" fg:x="564" fg:w="1"/><text x="45.4061%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.1561%" y="245" width="0.0801%" height="15" fill="rgb(224,100,0)" fg:x="564" fg:w="1"/><text x="45.4061%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="45.1561%" y="229" width="0.0801%" height="15" fill="rgb(231,168,26)" fg:x="564" fg:w="1"/><text x="45.4061%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.1561%" y="213" width="0.0801%" height="15" fill="rgb(238,110,3)" fg:x="564" fg:w="1"/><text x="45.4061%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.1561%" y="197" width="0.0801%" height="15" fill="rgb(216,190,1)" fg:x="564" fg:w="1"/><text x="45.4061%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="45.1561%" y="181" width="0.0801%" height="15" fill="rgb(208,130,52)" fg:x="564" fg:w="1"/><text x="45.4061%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.1561%" y="165" width="0.0801%" height="15" fill="rgb(233,74,12)" fg:x="564" fg:w="1"/><text x="45.4061%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.1561%" y="149" width="0.0801%" height="15" fill="rgb(248,12,15)" fg:x="564" fg:w="1"/><text x="45.4061%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="45.1561%" y="133" width="0.0801%" height="15" fill="rgb(228,18,29)" fg:x="564" fg:w="1"/><text x="45.4061%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.1561%" y="117" width="0.0801%" height="15" fill="rgb(206,153,11)" fg:x="564" fg:w="1"/><text x="45.4061%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.1561%" y="101" width="0.0801%" height="15" fill="rgb(216,50,30)" fg:x="564" fg:w="1"/><text x="45.4061%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="45.1561%" y="85" width="0.0801%" height="15" fill="rgb(217,20,39)" fg:x="564" fg:w="1"/><text x="45.4061%" y="95.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.1561%" y="69" width="0.0801%" height="15" fill="rgb(232,130,46)" fg:x="564" fg:w="1"/><text x="45.4061%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.1561%" y="53" width="0.0801%" height="15" fill="rgb(233,141,43)" fg:x="564" fg:w="1"/><text x="45.4061%" y="63.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.1561%" y="37" width="0.0801%" height="15" fill="rgb(240,64,34)" fg:x="564" fg:w="1"/><text x="45.4061%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (16 samples, 1.28%)</title><rect x="44.0352%" y="357" width="1.2810%" height="15" fill="rgb(230,28,31)" fg:x="550" fg:w="16"/><text x="44.2852%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="44.5156%" y="341" width="0.8006%" height="15" fill="rgb(223,56,30)" fg:x="556" fg:w="10"/><text x="44.7656%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="44.5156%" y="325" width="0.8006%" height="15" fill="rgb(248,134,16)" fg:x="556" fg:w="10"/><text x="44.7656%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.2362%" y="309" width="0.0801%" height="15" fill="rgb(206,202,4)" fg:x="565" fg:w="1"/><text x="45.4862%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.3163%" y="309" width="0.0801%" height="15" fill="rgb(219,116,48)" fg:x="566" fg:w="1"/><text x="45.5663%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.3163%" y="293" width="0.0801%" height="15" fill="rgb(224,122,46)" fg:x="566" fg:w="1"/><text x="45.5663%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.3163%" y="277" width="0.0801%" height="15" fill="rgb(219,114,47)" fg:x="566" fg:w="1"/><text x="45.5663%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.3163%" y="261" width="0.0801%" height="15" fill="rgb(244,60,44)" fg:x="566" fg:w="1"/><text x="45.5663%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.3163%" y="245" width="0.0801%" height="15" fill="rgb(243,226,25)" fg:x="566" fg:w="1"/><text x="45.5663%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.3163%" y="229" width="0.0801%" height="15" fill="rgb(243,101,52)" fg:x="566" fg:w="1"/><text x="45.5663%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.3163%" y="213" width="0.0801%" height="15" fill="rgb(207,69,25)" fg:x="566" fg:w="1"/><text x="45.5663%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.3163%" y="197" width="0.0801%" height="15" fill="rgb(222,204,53)" fg:x="566" fg:w="1"/><text x="45.5663%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.3163%" y="181" width="0.0801%" height="15" fill="rgb(234,84,49)" fg:x="566" fg:w="1"/><text x="45.5663%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.3163%" y="165" width="0.0801%" height="15" fill="rgb(233,77,41)" fg:x="566" fg:w="1"/><text x="45.5663%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.3163%" y="149" width="0.0801%" height="15" fill="rgb(221,200,42)" fg:x="566" fg:w="1"/><text x="45.5663%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.3163%" y="133" width="0.0801%" height="15" fill="rgb(221,29,35)" fg:x="566" fg:w="1"/><text x="45.5663%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.3163%" y="117" width="0.0801%" height="15" fill="rgb(221,71,22)" fg:x="566" fg:w="1"/><text x="45.5663%" y="127.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="45.3163%" y="357" width="0.1601%" height="15" fill="rgb(216,162,23)" fg:x="566" fg:w="2"/><text x="45.5663%" y="367.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="45.3163%" y="341" width="0.1601%" height="15" fill="rgb(248,32,48)" fg:x="566" fg:w="2"/><text x="45.5663%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="45.3163%" y="325" width="0.1601%" height="15" fill="rgb(241,156,30)" fg:x="566" fg:w="2"/><text x="45.5663%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.3963%" y="309" width="0.0801%" height="15" fill="rgb(237,196,46)" fg:x="567" fg:w="1"/><text x="45.6463%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.3963%" y="293" width="0.0801%" height="15" fill="rgb(216,2,6)" fg:x="567" fg:w="1"/><text x="45.6463%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.3963%" y="277" width="0.0801%" height="15" fill="rgb(214,47,16)" fg:x="567" fg:w="1"/><text x="45.6463%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.3963%" y="261" width="0.0801%" height="15" fill="rgb(240,123,13)" fg:x="567" fg:w="1"/><text x="45.6463%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="45.3963%" y="245" width="0.0801%" height="15" fill="rgb(206,47,48)" fg:x="567" fg:w="1"/><text x="45.6463%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.3963%" y="229" width="0.0801%" height="15" fill="rgb(252,88,27)" fg:x="567" fg:w="1"/><text x="45.6463%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.3963%" y="213" width="0.0801%" height="15" fill="rgb(218,105,30)" fg:x="567" fg:w="1"/><text x="45.6463%" y="223.50"></text></g><g><title>core::iter::adapters::try_process (29 samples, 2.32%)</title><rect x="43.4748%" y="453" width="2.3219%" height="15" fill="rgb(227,52,46)" fg:x="543" fg:w="29"/><text x="43.7248%" y="463.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 2.32%)</title><rect x="43.4748%" y="437" width="2.3219%" height="15" fill="rgb(222,190,21)" fg:x="543" fg:w="29"/><text x="43.7248%" y="447.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (29 samples, 2.32%)</title><rect x="43.4748%" y="421" width="2.3219%" height="15" fill="rgb(205,86,20)" fg:x="543" fg:w="29"/><text x="43.7248%" y="431.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (29 samples, 2.32%)</title><rect x="43.4748%" y="405" width="2.3219%" height="15" fill="rgb(233,45,1)" fg:x="543" fg:w="29"/><text x="43.7248%" y="415.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (29 samples, 2.32%)</title><rect x="43.4748%" y="389" width="2.3219%" height="15" fill="rgb(208,39,6)" fg:x="543" fg:w="29"/><text x="43.7248%" y="399.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (29 samples, 2.32%)</title><rect x="43.4748%" y="373" width="2.3219%" height="15" fill="rgb(211,178,22)" fg:x="543" fg:w="29"/><text x="43.7248%" y="383.50">e..</text></g><g><title>engine::session::internal::EntityMap::add_entity (4 samples, 0.32%)</title><rect x="45.4764%" y="357" width="0.3203%" height="15" fill="rgb(227,112,23)" fg:x="568" fg:w="4"/><text x="45.7264%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="45.4764%" y="341" width="0.3203%" height="15" fill="rgb(214,41,4)" fg:x="568" fg:w="4"/><text x="45.7264%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="45.4764%" y="325" width="0.3203%" height="15" fill="rgb(219,144,46)" fg:x="568" fg:w="4"/><text x="45.7264%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="45.4764%" y="309" width="0.3203%" height="15" fill="rgb(253,176,50)" fg:x="568" fg:w="4"/><text x="45.7264%" y="319.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="45.4764%" y="293" width="0.3203%" height="15" fill="rgb(206,123,1)" fg:x="568" fg:w="4"/><text x="45.7264%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (31 samples, 2.48%)</title><rect x="43.4748%" y="469" width="2.4820%" height="15" fill="rgb(250,111,32)" fg:x="543" fg:w="31"/><text x="43.7248%" y="479.50">&lt;p..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="45.7966%" y="453" width="0.1601%" height="15" fill="rgb(229,17,49)" fg:x="572" fg:w="2"/><text x="46.0466%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.8767%" y="437" width="0.0801%" height="15" fill="rgb(250,123,19)" fg:x="573" fg:w="1"/><text x="46.1267%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (46 samples, 3.68%)</title><rect x="42.4339%" y="533" width="3.6829%" height="15" fill="rgb(220,124,20)" fg:x="530" fg:w="46"/><text x="42.6839%" y="543.50">plug..</text></g><g><title>plugins_core::tools::contained_by (40 samples, 3.20%)</title><rect x="42.9143%" y="517" width="3.2026%" height="15" fill="rgb(242,85,25)" fg:x="536" fg:w="40"/><text x="43.1643%" y="527.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (35 samples, 2.80%)</title><rect x="43.3147%" y="501" width="2.8022%" height="15" fill="rgb(245,217,7)" fg:x="541" fg:w="35"/><text x="43.5647%" y="511.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (35 samples, 2.80%)</title><rect x="43.3147%" y="485" width="2.8022%" height="15" fill="rgb(242,50,25)" fg:x="541" fg:w="35"/><text x="43.5647%" y="495.50">ke..</text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (2 samples, 0.16%)</title><rect x="45.9568%" y="469" width="0.1601%" height="15" fill="rgb(251,210,24)" fg:x="574" fg:w="2"/><text x="46.2068%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="45.9568%" y="453" width="0.1601%" height="15" fill="rgb(238,24,8)" fg:x="574" fg:w="2"/><text x="46.2068%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="46.1970%" y="517" width="0.1601%" height="15" fill="rgb(211,96,19)" fg:x="577" fg:w="2"/><text x="46.4470%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.2770%" y="501" width="0.0801%" height="15" fill="rgb(222,186,12)" fg:x="578" fg:w="1"/><text x="46.5270%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.2770%" y="485" width="0.0801%" height="15" fill="rgb(212,70,49)" fg:x="578" fg:w="1"/><text x="46.5270%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.2770%" y="469" width="0.0801%" height="15" fill="rgb(238,69,49)" fg:x="578" fg:w="1"/><text x="46.5270%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.2770%" y="453" width="0.0801%" height="15" fill="rgb(225,13,3)" fg:x="578" fg:w="1"/><text x="46.5270%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.2770%" y="437" width="0.0801%" height="15" fill="rgb(229,188,14)" fg:x="578" fg:w="1"/><text x="46.5270%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.2770%" y="421" width="0.0801%" height="15" fill="rgb(218,58,16)" fg:x="578" fg:w="1"/><text x="46.5270%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.2770%" y="405" width="0.0801%" height="15" fill="rgb(206,213,49)" fg:x="578" fg:w="1"/><text x="46.5270%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.2770%" y="389" width="0.0801%" height="15" fill="rgb(225,152,48)" fg:x="578" fg:w="1"/><text x="46.5270%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.2770%" y="373" width="0.0801%" height="15" fill="rgb(216,103,42)" fg:x="578" fg:w="1"/><text x="46.5270%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.2770%" y="357" width="0.0801%" height="15" fill="rgb(212,214,39)" fg:x="578" fg:w="1"/><text x="46.5270%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.2770%" y="341" width="0.0801%" height="15" fill="rgb(249,52,41)" fg:x="578" fg:w="1"/><text x="46.5270%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.2770%" y="325" width="0.0801%" height="15" fill="rgb(212,173,53)" fg:x="578" fg:w="1"/><text x="46.5270%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="46.3571%" y="517" width="0.2402%" height="15" fill="rgb(232,222,21)" fg:x="579" fg:w="3"/><text x="46.6071%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (3 samples, 0.24%)</title><rect x="46.3571%" y="501" width="0.2402%" height="15" fill="rgb(206,228,31)" fg:x="579" fg:w="3"/><text x="46.6071%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.5172%" y="485" width="0.0801%" height="15" fill="rgb(231,121,16)" fg:x="581" fg:w="1"/><text x="46.7672%" y="495.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="46.5973%" y="453" width="0.0801%" height="15" fill="rgb(241,3,23)" fg:x="582" fg:w="1"/><text x="46.8473%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.5973%" y="437" width="0.0801%" height="15" fill="rgb(220,68,37)" fg:x="582" fg:w="1"/><text x="46.8473%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.6773%" y="405" width="0.0801%" height="15" fill="rgb(212,23,49)" fg:x="583" fg:w="1"/><text x="46.9273%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.6773%" y="389" width="0.0801%" height="15" fill="rgb(231,38,8)" fg:x="583" fg:w="1"/><text x="46.9273%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.6773%" y="373" width="0.0801%" height="15" fill="rgb(222,137,29)" fg:x="583" fg:w="1"/><text x="46.9273%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.6773%" y="357" width="0.0801%" height="15" fill="rgb(239,8,6)" fg:x="583" fg:w="1"/><text x="46.9273%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.6773%" y="341" width="0.0801%" height="15" fill="rgb(224,142,47)" fg:x="583" fg:w="1"/><text x="46.9273%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.6773%" y="325" width="0.0801%" height="15" fill="rgb(226,67,29)" fg:x="583" fg:w="1"/><text x="46.9273%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.6773%" y="309" width="0.0801%" height="15" fill="rgb(212,144,29)" fg:x="583" fg:w="1"/><text x="46.9273%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.6773%" y="293" width="0.0801%" height="15" fill="rgb(252,2,51)" fg:x="583" fg:w="1"/><text x="46.9273%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.6773%" y="277" width="0.0801%" height="15" fill="rgb(246,103,52)" fg:x="583" fg:w="1"/><text x="46.9273%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.6773%" y="261" width="0.0801%" height="15" fill="rgb(229,229,35)" fg:x="583" fg:w="1"/><text x="46.9273%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.6773%" y="245" width="0.0801%" height="15" fill="rgb(209,83,15)" fg:x="583" fg:w="1"/><text x="46.9273%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.6773%" y="229" width="0.0801%" height="15" fill="rgb(218,54,16)" fg:x="583" fg:w="1"/><text x="46.9273%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.6773%" y="213" width="0.0801%" height="15" fill="rgb(205,2,26)" fg:x="583" fg:w="1"/><text x="46.9273%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.6773%" y="197" width="0.0801%" height="15" fill="rgb(248,180,0)" fg:x="583" fg:w="1"/><text x="46.9273%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.6773%" y="181" width="0.0801%" height="15" fill="rgb(231,136,16)" fg:x="583" fg:w="1"/><text x="46.9273%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.6773%" y="421" width="0.1601%" height="15" fill="rgb(215,90,4)" fg:x="583" fg:w="2"/><text x="46.9273%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.7574%" y="405" width="0.0801%" height="15" fill="rgb(251,131,3)" fg:x="584" fg:w="1"/><text x="47.0074%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.7574%" y="389" width="0.0801%" height="15" fill="rgb(244,47,21)" fg:x="584" fg:w="1"/><text x="47.0074%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.7574%" y="373" width="0.0801%" height="15" fill="rgb(231,115,9)" fg:x="584" fg:w="1"/><text x="47.0074%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.7574%" y="357" width="0.0801%" height="15" fill="rgb(241,119,20)" fg:x="584" fg:w="1"/><text x="47.0074%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.7574%" y="341" width="0.0801%" height="15" fill="rgb(224,99,0)" fg:x="584" fg:w="1"/><text x="47.0074%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.7574%" y="325" width="0.0801%" height="15" fill="rgb(219,213,18)" fg:x="584" fg:w="1"/><text x="47.0074%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.7574%" y="309" width="0.0801%" height="15" fill="rgb(209,71,34)" fg:x="584" fg:w="1"/><text x="47.0074%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.7574%" y="293" width="0.0801%" height="15" fill="rgb(245,203,20)" fg:x="584" fg:w="1"/><text x="47.0074%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.7574%" y="277" width="0.0801%" height="15" fill="rgb(221,44,20)" fg:x="584" fg:w="1"/><text x="47.0074%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.7574%" y="261" width="0.0801%" height="15" fill="rgb(229,97,0)" fg:x="584" fg:w="1"/><text x="47.0074%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.7574%" y="245" width="0.0801%" height="15" fill="rgb(206,56,49)" fg:x="584" fg:w="1"/><text x="47.0074%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.7574%" y="229" width="0.0801%" height="15" fill="rgb(208,216,41)" fg:x="584" fg:w="1"/><text x="47.0074%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.8375%" y="421" width="0.0801%" height="15" fill="rgb(231,31,6)" fg:x="585" fg:w="1"/><text x="47.0875%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="46.9175%" y="421" width="0.0801%" height="15" fill="rgb(239,88,23)" fg:x="586" fg:w="1"/><text x="47.1675%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="46.9175%" y="405" width="0.0801%" height="15" fill="rgb(227,111,45)" fg:x="586" fg:w="1"/><text x="47.1675%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="46.9175%" y="389" width="0.0801%" height="15" fill="rgb(207,167,18)" fg:x="586" fg:w="1"/><text x="47.1675%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.9175%" y="373" width="0.0801%" height="15" fill="rgb(253,127,17)" fg:x="586" fg:w="1"/><text x="47.1675%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (61 samples, 4.88%)</title><rect x="42.1938%" y="565" width="4.8839%" height="15" fill="rgb(211,229,9)" fg:x="527" fg:w="61"/><text x="42.4438%" y="575.50">&lt;engin..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (61 samples, 4.88%)</title><rect x="42.1938%" y="549" width="4.8839%" height="15" fill="rgb(249,25,14)" fg:x="527" fg:w="61"/><text x="42.4438%" y="559.50">&lt;plugi..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (12 samples, 0.96%)</title><rect x="46.1169%" y="533" width="0.9608%" height="15" fill="rgb(237,177,4)" fg:x="576" fg:w="12"/><text x="46.3669%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (6 samples, 0.48%)</title><rect x="46.5973%" y="517" width="0.4804%" height="15" fill="rgb(248,163,50)" fg:x="582" fg:w="6"/><text x="46.8473%" y="527.50"></text></g><g><title>plugins_core::finding::matches_description (6 samples, 0.48%)</title><rect x="46.5973%" y="501" width="0.4804%" height="15" fill="rgb(246,67,42)" fg:x="582" fg:w="6"/><text x="46.8473%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::name (6 samples, 0.48%)</title><rect x="46.5973%" y="485" width="0.4804%" height="15" fill="rgb(228,136,45)" fg:x="582" fg:w="6"/><text x="46.8473%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="46.5973%" y="469" width="0.4804%" height="15" fill="rgb(218,93,4)" fg:x="582" fg:w="6"/><text x="46.8473%" y="479.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="46.6773%" y="453" width="0.4003%" height="15" fill="rgb(209,82,29)" fg:x="583" fg:w="5"/><text x="46.9273%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="46.6773%" y="437" width="0.4003%" height="15" fill="rgb(213,219,38)" fg:x="583" fg:w="5"/><text x="46.9273%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.9976%" y="421" width="0.0801%" height="15" fill="rgb(233,212,17)" fg:x="587" fg:w="1"/><text x="47.2476%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.9976%" y="405" width="0.0801%" height="15" fill="rgb(225,65,3)" fg:x="587" fg:w="1"/><text x="47.2476%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.9976%" y="389" width="0.0801%" height="15" fill="rgb(226,25,1)" fg:x="587" fg:w="1"/><text x="47.2476%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.9976%" y="373" width="0.0801%" height="15" fill="rgb(229,83,27)" fg:x="587" fg:w="1"/><text x="47.2476%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="46.9976%" y="357" width="0.0801%" height="15" fill="rgb(245,80,47)" fg:x="587" fg:w="1"/><text x="47.2476%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.9976%" y="341" width="0.0801%" height="15" fill="rgb(213,79,27)" fg:x="587" fg:w="1"/><text x="47.2476%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9976%" y="325" width="0.0801%" height="15" fill="rgb(232,38,28)" fg:x="587" fg:w="1"/><text x="47.2476%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.9976%" y="309" width="0.0801%" height="15" fill="rgb(253,63,39)" fg:x="587" fg:w="1"/><text x="47.2476%" y="319.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (1 samples, 0.08%)</title><rect x="47.0777%" y="565" width="0.0801%" height="15" fill="rgb(222,204,17)" fg:x="588" fg:w="1"/><text x="47.3277%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.0777%" y="549" width="0.0801%" height="15" fill="rgb(254,135,49)" fg:x="588" fg:w="1"/><text x="47.3277%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.1577%" y="485" width="0.0801%" height="15" fill="rgb(226,203,24)" fg:x="589" fg:w="1"/><text x="47.4077%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.1577%" y="469" width="0.0801%" height="15" fill="rgb(225,2,17)" fg:x="589" fg:w="1"/><text x="47.4077%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.2378%" y="485" width="0.0801%" height="15" fill="rgb(234,135,43)" fg:x="590" fg:w="1"/><text x="47.4878%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="47.3179%" y="389" width="0.0801%" height="15" fill="rgb(224,14,46)" fg:x="591" fg:w="1"/><text x="47.5679%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="47.1577%" y="533" width="0.4003%" height="15" fill="rgb(206,42,0)" fg:x="589" fg:w="5"/><text x="47.4077%" y="543.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="47.1577%" y="517" width="0.4003%" height="15" fill="rgb(244,38,23)" fg:x="589" fg:w="5"/><text x="47.4077%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="47.1577%" y="501" width="0.4003%" height="15" fill="rgb(230,25,21)" fg:x="589" fg:w="5"/><text x="47.4077%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="47.3179%" y="485" width="0.2402%" height="15" fill="rgb(252,217,28)" fg:x="591" fg:w="3"/><text x="47.5679%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="47.3179%" y="469" width="0.2402%" height="15" fill="rgb(251,4,49)" fg:x="591" fg:w="3"/><text x="47.5679%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="47.3179%" y="453" width="0.2402%" height="15" fill="rgb(217,126,31)" fg:x="591" fg:w="3"/><text x="47.5679%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="47.3179%" y="437" width="0.2402%" height="15" fill="rgb(242,181,33)" fg:x="591" fg:w="3"/><text x="47.5679%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="47.3179%" y="421" width="0.2402%" height="15" fill="rgb(241,108,6)" fg:x="591" fg:w="3"/><text x="47.5679%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="47.3179%" y="405" width="0.2402%" height="15" fill="rgb(238,87,39)" fg:x="591" fg:w="3"/><text x="47.5679%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.3979%" y="389" width="0.1601%" height="15" fill="rgb(244,101,49)" fg:x="592" fg:w="2"/><text x="47.6479%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.3979%" y="373" width="0.1601%" height="15" fill="rgb(211,43,42)" fg:x="592" fg:w="2"/><text x="47.6479%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.3979%" y="357" width="0.1601%" height="15" fill="rgb(210,93,2)" fg:x="592" fg:w="2"/><text x="47.6479%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.3979%" y="341" width="0.1601%" height="15" fill="rgb(242,149,32)" fg:x="592" fg:w="2"/><text x="47.6479%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="47.3979%" y="325" width="0.1601%" height="15" fill="rgb(228,1,6)" fg:x="592" fg:w="2"/><text x="47.6479%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="47.3979%" y="309" width="0.1601%" height="15" fill="rgb(221,0,20)" fg:x="592" fg:w="2"/><text x="47.6479%" y="319.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="47.3979%" y="293" width="0.1601%" height="15" fill="rgb(230,39,32)" fg:x="592" fg:w="2"/><text x="47.6479%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.7182%" y="421" width="0.0801%" height="15" fill="rgb(240,89,38)" fg:x="596" fg:w="1"/><text x="47.9682%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="47.5580%" y="485" width="0.3203%" height="15" fill="rgb(208,221,23)" fg:x="594" fg:w="4"/><text x="47.8080%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="47.5580%" y="469" width="0.3203%" height="15" fill="rgb(220,145,29)" fg:x="594" fg:w="4"/><text x="47.8080%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="47.6381%" y="453" width="0.2402%" height="15" fill="rgb(219,146,23)" fg:x="595" fg:w="3"/><text x="47.8881%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="47.6381%" y="437" width="0.2402%" height="15" fill="rgb(244,114,49)" fg:x="595" fg:w="3"/><text x="47.8881%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.7982%" y="421" width="0.0801%" height="15" fill="rgb(221,17,10)" fg:x="597" fg:w="1"/><text x="48.0482%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.7982%" y="405" width="0.0801%" height="15" fill="rgb(228,133,21)" fg:x="597" fg:w="1"/><text x="48.0482%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.7982%" y="389" width="0.0801%" height="15" fill="rgb(218,81,30)" fg:x="597" fg:w="1"/><text x="48.0482%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.7982%" y="373" width="0.0801%" height="15" fill="rgb(240,29,36)" fg:x="597" fg:w="1"/><text x="48.0482%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.7982%" y="357" width="0.0801%" height="15" fill="rgb(246,0,36)" fg:x="597" fg:w="1"/><text x="48.0482%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.7982%" y="341" width="0.0801%" height="15" fill="rgb(217,79,8)" fg:x="597" fg:w="1"/><text x="48.0482%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.7982%" y="325" width="0.0801%" height="15" fill="rgb(229,124,44)" fg:x="597" fg:w="1"/><text x="48.0482%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.7982%" y="309" width="0.0801%" height="15" fill="rgb(210,187,22)" fg:x="597" fg:w="1"/><text x="48.0482%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="47.7982%" y="293" width="0.0801%" height="15" fill="rgb(212,115,40)" fg:x="597" fg:w="1"/><text x="48.0482%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="47.7982%" y="277" width="0.0801%" height="15" fill="rgb(210,2,54)" fg:x="597" fg:w="1"/><text x="48.0482%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.8783%" y="485" width="0.0801%" height="15" fill="rgb(227,168,43)" fg:x="598" fg:w="1"/><text x="48.1283%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="47.8783%" y="469" width="0.0801%" height="15" fill="rgb(249,92,8)" fg:x="598" fg:w="1"/><text x="48.1283%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.8783%" y="453" width="0.0801%" height="15" fill="rgb(239,111,35)" fg:x="598" fg:w="1"/><text x="48.1283%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="47.8783%" y="437" width="0.0801%" height="15" fill="rgb(230,126,13)" fg:x="598" fg:w="1"/><text x="48.1283%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.8783%" y="421" width="0.0801%" height="15" fill="rgb(243,116,33)" fg:x="598" fg:w="1"/><text x="48.1283%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.8783%" y="405" width="0.0801%" height="15" fill="rgb(246,103,21)" fg:x="598" fg:w="1"/><text x="48.1283%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (12 samples, 0.96%)</title><rect x="47.1577%" y="565" width="0.9608%" height="15" fill="rgb(237,53,26)" fg:x="589" fg:w="12"/><text x="47.4077%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (12 samples, 0.96%)</title><rect x="47.1577%" y="549" width="0.9608%" height="15" fill="rgb(213,121,15)" fg:x="589" fg:w="12"/><text x="47.4077%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="47.5580%" y="533" width="0.5604%" height="15" fill="rgb(251,83,35)" fg:x="594" fg:w="7"/><text x="47.8080%" y="543.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="47.5580%" y="517" width="0.5604%" height="15" fill="rgb(222,79,8)" fg:x="594" fg:w="7"/><text x="47.8080%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="47.5580%" y="501" width="0.5604%" height="15" fill="rgb(217,74,36)" fg:x="594" fg:w="7"/><text x="47.8080%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.9584%" y="485" width="0.1601%" height="15" fill="rgb(221,14,30)" fg:x="599" fg:w="2"/><text x="48.2084%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.9584%" y="469" width="0.1601%" height="15" fill="rgb(216,221,5)" fg:x="599" fg:w="2"/><text x="48.2084%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.9584%" y="453" width="0.1601%" height="15" fill="rgb(236,118,16)" fg:x="599" fg:w="2"/><text x="48.2084%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.9584%" y="437" width="0.1601%" height="15" fill="rgb(243,91,43)" fg:x="599" fg:w="2"/><text x="48.2084%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="47.9584%" y="421" width="0.1601%" height="15" fill="rgb(231,110,7)" fg:x="599" fg:w="2"/><text x="48.2084%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.9584%" y="405" width="0.1601%" height="15" fill="rgb(217,80,6)" fg:x="599" fg:w="2"/><text x="48.2084%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.9584%" y="389" width="0.1601%" height="15" fill="rgb(251,116,7)" fg:x="599" fg:w="2"/><text x="48.2084%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.9584%" y="373" width="0.1601%" height="15" fill="rgb(236,70,22)" fg:x="599" fg:w="2"/><text x="48.2084%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.0384%" y="357" width="0.0801%" height="15" fill="rgb(245,13,10)" fg:x="600" fg:w="1"/><text x="48.2884%" y="367.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="48.1185%" y="565" width="0.0801%" height="15" fill="rgb(233,146,34)" fg:x="601" fg:w="1"/><text x="48.3685%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.1185%" y="549" width="0.0801%" height="15" fill="rgb(241,196,34)" fg:x="601" fg:w="1"/><text x="48.3685%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.1185%" y="533" width="0.0801%" height="15" fill="rgb(207,150,20)" fg:x="601" fg:w="1"/><text x="48.3685%" y="543.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="48.1986%" y="565" width="0.0801%" height="15" fill="rgb(251,27,52)" fg:x="602" fg:w="1"/><text x="48.4486%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="48.1986%" y="549" width="0.0801%" height="15" fill="rgb(221,76,2)" fg:x="602" fg:w="1"/><text x="48.4486%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="48.1986%" y="533" width="0.0801%" height="15" fill="rgb(242,94,41)" fg:x="602" fg:w="1"/><text x="48.4486%" y="543.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="48.1986%" y="517" width="0.0801%" height="15" fill="rgb(245,9,8)" fg:x="602" fg:w="1"/><text x="48.4486%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="48.1986%" y="501" width="0.0801%" height="15" fill="rgb(236,139,26)" fg:x="602" fg:w="1"/><text x="48.4486%" y="511.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="48.1986%" y="485" width="0.0801%" height="15" fill="rgb(249,11,18)" fg:x="602" fg:w="1"/><text x="48.4486%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="48.1986%" y="469" width="0.0801%" height="15" fill="rgb(206,175,35)" fg:x="602" fg:w="1"/><text x="48.4486%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.2786%" y="549" width="0.0801%" height="15" fill="rgb(231,3,46)" fg:x="603" fg:w="1"/><text x="48.5286%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="48.3587%" y="549" width="0.0801%" height="15" fill="rgb(243,27,8)" fg:x="604" fg:w="1"/><text x="48.6087%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="48.3587%" y="533" width="0.0801%" height="15" fill="rgb(223,53,13)" fg:x="604" fg:w="1"/><text x="48.6087%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.3587%" y="517" width="0.0801%" height="15" fill="rgb(248,68,15)" fg:x="604" fg:w="1"/><text x="48.6087%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.4388%" y="453" width="0.0801%" height="15" fill="rgb(216,61,26)" fg:x="605" fg:w="1"/><text x="48.6888%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.4388%" y="437" width="0.0801%" height="15" fill="rgb(213,201,24)" fg:x="605" fg:w="1"/><text x="48.6888%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.4388%" y="421" width="0.0801%" height="15" fill="rgb(214,20,17)" fg:x="605" fg:w="1"/><text x="48.6888%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.4388%" y="405" width="0.0801%" height="15" fill="rgb(206,21,46)" fg:x="605" fg:w="1"/><text x="48.6888%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.4388%" y="389" width="0.0801%" height="15" fill="rgb(234,222,24)" fg:x="605" fg:w="1"/><text x="48.6888%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.4388%" y="373" width="0.0801%" height="15" fill="rgb(221,25,26)" fg:x="605" fg:w="1"/><text x="48.6888%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.4388%" y="357" width="0.0801%" height="15" fill="rgb(241,148,26)" fg:x="605" fg:w="1"/><text x="48.6888%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.4388%" y="341" width="0.0801%" height="15" fill="rgb(248,119,35)" fg:x="605" fg:w="1"/><text x="48.6888%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.4388%" y="325" width="0.0801%" height="15" fill="rgb(239,126,23)" fg:x="605" fg:w="1"/><text x="48.6888%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.4388%" y="309" width="0.0801%" height="15" fill="rgb(247,120,25)" fg:x="605" fg:w="1"/><text x="48.6888%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.4388%" y="293" width="0.0801%" height="15" fill="rgb(220,93,32)" fg:x="605" fg:w="1"/><text x="48.6888%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.4388%" y="277" width="0.0801%" height="15" fill="rgb(236,46,26)" fg:x="605" fg:w="1"/><text x="48.6888%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.4388%" y="261" width="0.0801%" height="15" fill="rgb(229,20,45)" fg:x="605" fg:w="1"/><text x="48.6888%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.4388%" y="245" width="0.0801%" height="15" fill="rgb(225,168,41)" fg:x="605" fg:w="1"/><text x="48.6888%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.4388%" y="229" width="0.0801%" height="15" fill="rgb(253,123,20)" fg:x="605" fg:w="1"/><text x="48.6888%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="48.4388%" y="469" width="0.1601%" height="15" fill="rgb(244,17,29)" fg:x="605" fg:w="2"/><text x="48.6888%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.5188%" y="453" width="0.0801%" height="15" fill="rgb(242,196,24)" fg:x="606" fg:w="1"/><text x="48.7688%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.5188%" y="437" width="0.0801%" height="15" fill="rgb(210,113,45)" fg:x="606" fg:w="1"/><text x="48.7688%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.5188%" y="421" width="0.0801%" height="15" fill="rgb(205,129,3)" fg:x="606" fg:w="1"/><text x="48.7688%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.5188%" y="405" width="0.0801%" height="15" fill="rgb(232,74,10)" fg:x="606" fg:w="1"/><text x="48.7688%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.5188%" y="389" width="0.0801%" height="15" fill="rgb(251,63,43)" fg:x="606" fg:w="1"/><text x="48.7688%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.5188%" y="373" width="0.0801%" height="15" fill="rgb(228,215,15)" fg:x="606" fg:w="1"/><text x="48.7688%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.5188%" y="357" width="0.0801%" height="15" fill="rgb(233,179,38)" fg:x="606" fg:w="1"/><text x="48.7688%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.5188%" y="341" width="0.0801%" height="15" fill="rgb(227,187,9)" fg:x="606" fg:w="1"/><text x="48.7688%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.5188%" y="325" width="0.0801%" height="15" fill="rgb(231,89,27)" fg:x="606" fg:w="1"/><text x="48.7688%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.5188%" y="309" width="0.0801%" height="15" fill="rgb(225,117,1)" fg:x="606" fg:w="1"/><text x="48.7688%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.5188%" y="293" width="0.0801%" height="15" fill="rgb(239,120,49)" fg:x="606" fg:w="1"/><text x="48.7688%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.5188%" y="277" width="0.0801%" height="15" fill="rgb(236,137,37)" fg:x="606" fg:w="1"/><text x="48.7688%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.5989%" y="469" width="0.0801%" height="15" fill="rgb(239,73,42)" fg:x="607" fg:w="1"/><text x="48.8489%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="48.5989%" y="453" width="0.0801%" height="15" fill="rgb(207,169,6)" fg:x="607" fg:w="1"/><text x="48.8489%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.5989%" y="437" width="0.0801%" height="15" fill="rgb(228,171,10)" fg:x="607" fg:w="1"/><text x="48.8489%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.5989%" y="421" width="0.0801%" height="15" fill="rgb(217,228,47)" fg:x="607" fg:w="1"/><text x="48.8489%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.5989%" y="405" width="0.0801%" height="15" fill="rgb(227,116,17)" fg:x="607" fg:w="1"/><text x="48.8489%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.5989%" y="389" width="0.0801%" height="15" fill="rgb(245,128,36)" fg:x="607" fg:w="1"/><text x="48.8489%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.5989%" y="373" width="0.0801%" height="15" fill="rgb(221,139,3)" fg:x="607" fg:w="1"/><text x="48.8489%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.5989%" y="357" width="0.0801%" height="15" fill="rgb(207,59,54)" fg:x="607" fg:w="1"/><text x="48.8489%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.6789%" y="373" width="0.0801%" height="15" fill="rgb(231,129,12)" fg:x="608" fg:w="1"/><text x="48.9289%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.6789%" y="357" width="0.0801%" height="15" fill="rgb(235,49,17)" fg:x="608" fg:w="1"/><text x="48.9289%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="48.4388%" y="517" width="0.4003%" height="15" fill="rgb(229,175,11)" fg:x="605" fg:w="5"/><text x="48.6888%" y="527.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="48.4388%" y="501" width="0.4003%" height="15" fill="rgb(206,187,30)" fg:x="605" fg:w="5"/><text x="48.6888%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="48.4388%" y="485" width="0.4003%" height="15" fill="rgb(214,39,19)" fg:x="605" fg:w="5"/><text x="48.6888%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.6789%" y="469" width="0.1601%" height="15" fill="rgb(243,92,46)" fg:x="608" fg:w="2"/><text x="48.9289%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.6789%" y="453" width="0.1601%" height="15" fill="rgb(240,125,36)" fg:x="608" fg:w="2"/><text x="48.9289%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.6789%" y="437" width="0.1601%" height="15" fill="rgb(217,193,45)" fg:x="608" fg:w="2"/><text x="48.9289%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.6789%" y="421" width="0.1601%" height="15" fill="rgb(230,127,16)" fg:x="608" fg:w="2"/><text x="48.9289%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="48.6789%" y="405" width="0.1601%" height="15" fill="rgb(208,161,0)" fg:x="608" fg:w="2"/><text x="48.9289%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.6789%" y="389" width="0.1601%" height="15" fill="rgb(251,69,39)" fg:x="608" fg:w="2"/><text x="48.9289%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.7590%" y="373" width="0.0801%" height="15" fill="rgb(229,86,22)" fg:x="609" fg:w="1"/><text x="49.0090%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.7590%" y="357" width="0.0801%" height="15" fill="rgb(223,67,43)" fg:x="609" fg:w="1"/><text x="49.0090%" y="367.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="48.8391%" y="501" width="0.0801%" height="15" fill="rgb(254,80,31)" fg:x="610" fg:w="1"/><text x="49.0891%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="48.8391%" y="485" width="0.0801%" height="15" fill="rgb(225,149,52)" fg:x="610" fg:w="1"/><text x="49.0891%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.9191%" y="405" width="0.0801%" height="15" fill="rgb(214,169,18)" fg:x="611" fg:w="1"/><text x="49.1691%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.9191%" y="389" width="0.0801%" height="15" fill="rgb(236,224,43)" fg:x="611" fg:w="1"/><text x="49.1691%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="48.9191%" y="469" width="0.1601%" height="15" fill="rgb(251,125,34)" fg:x="611" fg:w="2"/><text x="49.1691%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="48.9191%" y="453" width="0.1601%" height="15" fill="rgb(224,39,44)" fg:x="611" fg:w="2"/><text x="49.1691%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="48.9191%" y="437" width="0.1601%" height="15" fill="rgb(206,111,46)" fg:x="611" fg:w="2"/><text x="49.1691%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="48.9191%" y="421" width="0.1601%" height="15" fill="rgb(227,147,50)" fg:x="611" fg:w="2"/><text x="49.1691%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9992%" y="405" width="0.0801%" height="15" fill="rgb(239,144,36)" fg:x="612" fg:w="1"/><text x="49.2492%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="48.4388%" y="549" width="0.7206%" height="15" fill="rgb(216,17,19)" fg:x="605" fg:w="9"/><text x="48.6888%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="48.4388%" y="533" width="0.7206%" height="15" fill="rgb(211,192,29)" fg:x="605" fg:w="9"/><text x="48.6888%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="48.8391%" y="517" width="0.3203%" height="15" fill="rgb(238,195,20)" fg:x="610" fg:w="4"/><text x="49.0891%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="48.9191%" y="501" width="0.2402%" height="15" fill="rgb(213,210,42)" fg:x="611" fg:w="3"/><text x="49.1691%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="48.9191%" y="485" width="0.2402%" height="15" fill="rgb(244,4,49)" fg:x="611" fg:w="3"/><text x="49.1691%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="49.0793%" y="469" width="0.0801%" height="15" fill="rgb(254,106,42)" fg:x="613" fg:w="1"/><text x="49.3293%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="49.0793%" y="453" width="0.0801%" height="15" fill="rgb(222,182,12)" fg:x="613" fg:w="1"/><text x="49.3293%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="49.0793%" y="437" width="0.0801%" height="15" fill="rgb(228,160,15)" fg:x="613" fg:w="1"/><text x="49.3293%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="49.0793%" y="421" width="0.0801%" height="15" fill="rgb(243,149,43)" fg:x="613" fg:w="1"/><text x="49.3293%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="49.0793%" y="405" width="0.0801%" height="15" fill="rgb(245,150,32)" fg:x="613" fg:w="1"/><text x="49.3293%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.1593%" y="533" width="0.0801%" height="15" fill="rgb(205,43,19)" fg:x="614" fg:w="1"/><text x="49.4093%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.1593%" y="517" width="0.0801%" height="15" fill="rgb(249,189,35)" fg:x="614" fg:w="1"/><text x="49.4093%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.1593%" y="501" width="0.0801%" height="15" fill="rgb(223,9,0)" fg:x="614" fg:w="1"/><text x="49.4093%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.1593%" y="485" width="0.0801%" height="15" fill="rgb(213,142,45)" fg:x="614" fg:w="1"/><text x="49.4093%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.1593%" y="469" width="0.0801%" height="15" fill="rgb(208,148,2)" fg:x="614" fg:w="1"/><text x="49.4093%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.1593%" y="453" width="0.0801%" height="15" fill="rgb(207,191,42)" fg:x="614" fg:w="1"/><text x="49.4093%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.1593%" y="437" width="0.0801%" height="15" fill="rgb(215,218,38)" fg:x="614" fg:w="1"/><text x="49.4093%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.1593%" y="421" width="0.0801%" height="15" fill="rgb(223,195,24)" fg:x="614" fg:w="1"/><text x="49.4093%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.1593%" y="405" width="0.0801%" height="15" fill="rgb(254,60,30)" fg:x="614" fg:w="1"/><text x="49.4093%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.1593%" y="389" width="0.0801%" height="15" fill="rgb(223,2,9)" fg:x="614" fg:w="1"/><text x="49.4093%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.1593%" y="373" width="0.0801%" height="15" fill="rgb(253,134,46)" fg:x="614" fg:w="1"/><text x="49.4093%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.1593%" y="357" width="0.0801%" height="15" fill="rgb(206,209,20)" fg:x="614" fg:w="1"/><text x="49.4093%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="49.1593%" y="341" width="0.0801%" height="15" fill="rgb(253,104,42)" fg:x="614" fg:w="1"/><text x="49.4093%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="49.1593%" y="325" width="0.0801%" height="15" fill="rgb(223,47,23)" fg:x="614" fg:w="1"/><text x="49.4093%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.3995%" y="373" width="0.0801%" height="15" fill="rgb(247,148,44)" fg:x="617" fg:w="1"/><text x="49.6495%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.3995%" y="357" width="0.0801%" height="15" fill="rgb(221,224,16)" fg:x="617" fg:w="1"/><text x="49.6495%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.3995%" y="341" width="0.0801%" height="15" fill="rgb(252,103,29)" fg:x="617" fg:w="1"/><text x="49.6495%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.3995%" y="325" width="0.0801%" height="15" fill="rgb(244,185,34)" fg:x="617" fg:w="1"/><text x="49.6495%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.3995%" y="309" width="0.0801%" height="15" fill="rgb(218,18,50)" fg:x="617" fg:w="1"/><text x="49.6495%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.3995%" y="293" width="0.0801%" height="15" fill="rgb(234,105,8)" fg:x="617" fg:w="1"/><text x="49.6495%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.3995%" y="277" width="0.0801%" height="15" fill="rgb(249,51,19)" fg:x="617" fg:w="1"/><text x="49.6495%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="49.3995%" y="453" width="0.1601%" height="15" fill="rgb(233,132,7)" fg:x="617" fg:w="2"/><text x="49.6495%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="49.3995%" y="437" width="0.1601%" height="15" fill="rgb(229,181,43)" fg:x="617" fg:w="2"/><text x="49.6495%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="49.3995%" y="421" width="0.1601%" height="15" fill="rgb(223,20,7)" fg:x="617" fg:w="2"/><text x="49.6495%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="49.3995%" y="405" width="0.1601%" height="15" fill="rgb(245,13,34)" fg:x="617" fg:w="2"/><text x="49.6495%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="49.3995%" y="389" width="0.1601%" height="15" fill="rgb(242,0,53)" fg:x="617" fg:w="2"/><text x="49.6495%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="49.4796%" y="373" width="0.0801%" height="15" fill="rgb(233,115,19)" fg:x="618" fg:w="1"/><text x="49.7296%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.4796%" y="357" width="0.0801%" height="15" fill="rgb(216,170,26)" fg:x="618" fg:w="1"/><text x="49.7296%" y="367.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="49.2394%" y="517" width="0.4003%" height="15" fill="rgb(233,13,0)" fg:x="615" fg:w="5"/><text x="49.4894%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="49.2394%" y="501" width="0.4003%" height="15" fill="rgb(228,79,21)" fg:x="615" fg:w="5"/><text x="49.4894%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="49.2394%" y="485" width="0.4003%" height="15" fill="rgb(244,17,41)" fg:x="615" fg:w="5"/><text x="49.4894%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="49.2394%" y="469" width="0.4003%" height="15" fill="rgb(253,152,11)" fg:x="615" fg:w="5"/><text x="49.4894%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="49.5596%" y="453" width="0.0801%" height="15" fill="rgb(254,94,47)" fg:x="619" fg:w="1"/><text x="49.8096%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="49.5596%" y="437" width="0.0801%" height="15" fill="rgb(239,66,43)" fg:x="619" fg:w="1"/><text x="49.8096%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="49.6397%" y="517" width="0.1601%" height="15" fill="rgb(251,25,22)" fg:x="620" fg:w="2"/><text x="49.8897%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.7198%" y="501" width="0.0801%" height="15" fill="rgb(227,65,46)" fg:x="621" fg:w="1"/><text x="49.9698%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="49.7998%" y="517" width="0.0801%" height="15" fill="rgb(240,180,32)" fg:x="622" fg:w="1"/><text x="50.0498%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="49.8799%" y="485" width="0.0801%" height="15" fill="rgb(242,11,35)" fg:x="623" fg:w="1"/><text x="50.1299%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (11 samples, 0.88%)</title><rect x="49.1593%" y="549" width="0.8807%" height="15" fill="rgb(221,41,49)" fg:x="614" fg:w="11"/><text x="49.4093%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="49.2394%" y="533" width="0.8006%" height="15" fill="rgb(253,80,52)" fg:x="615" fg:w="10"/><text x="49.4894%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (2 samples, 0.16%)</title><rect x="49.8799%" y="517" width="0.1601%" height="15" fill="rgb(232,152,28)" fg:x="623" fg:w="2"/><text x="50.1299%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.8799%" y="501" width="0.1601%" height="15" fill="rgb(219,110,12)" fg:x="623" fg:w="2"/><text x="50.1299%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="49.9600%" y="485" width="0.0801%" height="15" fill="rgb(218,98,43)" fg:x="624" fg:w="1"/><text x="50.2100%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="49.9600%" y="469" width="0.0801%" height="15" fill="rgb(253,96,49)" fg:x="624" fg:w="1"/><text x="50.2100%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="49.9600%" y="453" width="0.0801%" height="15" fill="rgb(238,132,17)" fg:x="624" fg:w="1"/><text x="50.2100%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.9600%" y="437" width="0.0801%" height="15" fill="rgb(208,82,25)" fg:x="624" fg:w="1"/><text x="50.2100%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.9600%" y="421" width="0.0801%" height="15" fill="rgb(237,77,13)" fg:x="624" fg:w="1"/><text x="50.2100%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.9600%" y="405" width="0.0801%" height="15" fill="rgb(230,6,11)" fg:x="624" fg:w="1"/><text x="50.2100%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.0400%" y="501" width="0.0801%" height="15" fill="rgb(207,29,48)" fg:x="625" fg:w="1"/><text x="50.2900%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.0400%" y="485" width="0.0801%" height="15" fill="rgb(247,105,22)" fg:x="625" fg:w="1"/><text x="50.2900%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.0400%" y="469" width="0.0801%" height="15" fill="rgb(223,114,44)" fg:x="625" fg:w="1"/><text x="50.2900%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.0400%" y="453" width="0.0801%" height="15" fill="rgb(242,3,46)" fg:x="625" fg:w="1"/><text x="50.2900%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.0400%" y="437" width="0.0801%" height="15" fill="rgb(243,197,8)" fg:x="625" fg:w="1"/><text x="50.2900%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.0400%" y="421" width="0.0801%" height="15" fill="rgb(238,171,27)" fg:x="625" fg:w="1"/><text x="50.2900%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.0400%" y="405" width="0.0801%" height="15" fill="rgb(254,144,27)" fg:x="625" fg:w="1"/><text x="50.2900%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.0400%" y="389" width="0.0801%" height="15" fill="rgb(216,203,36)" fg:x="625" fg:w="1"/><text x="50.2900%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.0400%" y="373" width="0.0801%" height="15" fill="rgb(247,27,26)" fg:x="625" fg:w="1"/><text x="50.2900%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.0400%" y="357" width="0.0801%" height="15" fill="rgb(234,180,24)" fg:x="625" fg:w="1"/><text x="50.2900%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.0400%" y="341" width="0.0801%" height="15" fill="rgb(221,50,43)" fg:x="625" fg:w="1"/><text x="50.2900%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.0400%" y="325" width="0.0801%" height="15" fill="rgb(236,50,6)" fg:x="625" fg:w="1"/><text x="50.2900%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="50.0400%" y="517" width="0.1601%" height="15" fill="rgb(245,172,32)" fg:x="625" fg:w="2"/><text x="50.2900%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.1201%" y="501" width="0.0801%" height="15" fill="rgb(207,54,46)" fg:x="626" fg:w="1"/><text x="50.3701%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.1201%" y="485" width="0.0801%" height="15" fill="rgb(218,67,44)" fg:x="626" fg:w="1"/><text x="50.3701%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.1201%" y="469" width="0.0801%" height="15" fill="rgb(208,152,22)" fg:x="626" fg:w="1"/><text x="50.3701%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.1201%" y="453" width="0.0801%" height="15" fill="rgb(243,177,0)" fg:x="626" fg:w="1"/><text x="50.3701%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.1201%" y="437" width="0.0801%" height="15" fill="rgb(212,75,12)" fg:x="626" fg:w="1"/><text x="50.3701%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.1201%" y="421" width="0.0801%" height="15" fill="rgb(212,129,29)" fg:x="626" fg:w="1"/><text x="50.3701%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.1201%" y="405" width="0.0801%" height="15" fill="rgb(241,229,35)" fg:x="626" fg:w="1"/><text x="50.3701%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.1201%" y="389" width="0.0801%" height="15" fill="rgb(232,49,32)" fg:x="626" fg:w="1"/><text x="50.3701%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.1201%" y="373" width="0.0801%" height="15" fill="rgb(243,119,48)" fg:x="626" fg:w="1"/><text x="50.3701%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.1201%" y="357" width="0.0801%" height="15" fill="rgb(212,205,30)" fg:x="626" fg:w="1"/><text x="50.3701%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.1201%" y="341" width="0.0801%" height="15" fill="rgb(218,175,42)" fg:x="626" fg:w="1"/><text x="50.3701%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.1201%" y="325" width="0.0801%" height="15" fill="rgb(230,156,27)" fg:x="626" fg:w="1"/><text x="50.3701%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.1201%" y="309" width="0.0801%" height="15" fill="rgb(254,32,43)" fg:x="626" fg:w="1"/><text x="50.3701%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.1201%" y="293" width="0.0801%" height="15" fill="rgb(246,89,34)" fg:x="626" fg:w="1"/><text x="50.3701%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="50.2002%" y="517" width="0.1601%" height="15" fill="rgb(247,162,17)" fg:x="627" fg:w="2"/><text x="50.4502%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="50.2002%" y="501" width="0.1601%" height="15" fill="rgb(219,71,37)" fg:x="627" fg:w="2"/><text x="50.4502%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="50.2002%" y="485" width="0.1601%" height="15" fill="rgb(210,184,7)" fg:x="627" fg:w="2"/><text x="50.4502%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.3603%" y="485" width="0.1601%" height="15" fill="rgb(245,16,32)" fg:x="629" fg:w="2"/><text x="50.6103%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (7 samples, 0.56%)</title><rect x="50.0400%" y="549" width="0.5604%" height="15" fill="rgb(209,62,7)" fg:x="625" fg:w="7"/><text x="50.2900%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="50.0400%" y="533" width="0.5604%" height="15" fill="rgb(215,16,15)" fg:x="625" fg:w="7"/><text x="50.2900%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="50.3603%" y="517" width="0.2402%" height="15" fill="rgb(223,60,14)" fg:x="629" fg:w="3"/><text x="50.6103%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="50.3603%" y="501" width="0.2402%" height="15" fill="rgb(244,134,12)" fg:x="629" fg:w="3"/><text x="50.6103%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.5204%" y="485" width="0.0801%" height="15" fill="rgb(224,3,41)" fg:x="631" fg:w="1"/><text x="50.7704%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="50.5204%" y="469" width="0.0801%" height="15" fill="rgb(213,84,2)" fg:x="631" fg:w="1"/><text x="50.7704%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="50.5204%" y="453" width="0.0801%" height="15" fill="rgb(213,216,27)" fg:x="631" fg:w="1"/><text x="50.7704%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.6805%" y="453" width="0.0801%" height="15" fill="rgb(218,76,35)" fg:x="633" fg:w="1"/><text x="50.9305%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="50.6005%" y="533" width="0.2402%" height="15" fill="rgb(253,89,24)" fg:x="632" fg:w="3"/><text x="50.8505%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="50.6005%" y="517" width="0.2402%" height="15" fill="rgb(217,188,40)" fg:x="632" fg:w="3"/><text x="50.8505%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="50.6005%" y="501" width="0.2402%" height="15" fill="rgb(237,79,38)" fg:x="632" fg:w="3"/><text x="50.8505%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="50.6805%" y="485" width="0.1601%" height="15" fill="rgb(215,116,13)" fg:x="633" fg:w="2"/><text x="50.9305%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="50.6805%" y="469" width="0.1601%" height="15" fill="rgb(249,66,35)" fg:x="633" fg:w="2"/><text x="50.9305%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="50.7606%" y="453" width="0.0801%" height="15" fill="rgb(253,86,18)" fg:x="634" fg:w="1"/><text x="51.0106%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="50.7606%" y="437" width="0.0801%" height="15" fill="rgb(209,175,36)" fg:x="634" fg:w="1"/><text x="51.0106%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="50.7606%" y="421" width="0.0801%" height="15" fill="rgb(253,149,3)" fg:x="634" fg:w="1"/><text x="51.0106%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="50.7606%" y="405" width="0.0801%" height="15" fill="rgb(242,124,49)" fg:x="634" fg:w="1"/><text x="51.0106%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="50.7606%" y="389" width="0.0801%" height="15" fill="rgb(219,171,24)" fg:x="634" fg:w="1"/><text x="51.0106%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="50.7606%" y="373" width="0.0801%" height="15" fill="rgb(216,121,30)" fg:x="634" fg:w="1"/><text x="51.0106%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="50.7606%" y="357" width="0.0801%" height="15" fill="rgb(234,165,21)" fg:x="634" fg:w="1"/><text x="51.0106%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="50.7606%" y="341" width="0.0801%" height="15" fill="rgb(234,103,40)" fg:x="634" fg:w="1"/><text x="51.0106%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="50.7606%" y="325" width="0.0801%" height="15" fill="rgb(250,137,24)" fg:x="634" fg:w="1"/><text x="51.0106%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="50.7606%" y="309" width="0.0801%" height="15" fill="rgb(253,22,21)" fg:x="634" fg:w="1"/><text x="51.0106%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="50.7606%" y="293" width="0.0801%" height="15" fill="rgb(243,22,5)" fg:x="634" fg:w="1"/><text x="51.0106%" y="303.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="50.7606%" y="277" width="0.0801%" height="15" fill="rgb(212,56,7)" fg:x="634" fg:w="1"/><text x="51.0106%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.7606%" y="261" width="0.0801%" height="15" fill="rgb(223,190,49)" fg:x="634" fg:w="1"/><text x="51.0106%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.7606%" y="245" width="0.0801%" height="15" fill="rgb(221,110,35)" fg:x="634" fg:w="1"/><text x="51.0106%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="50.7606%" y="229" width="0.0801%" height="15" fill="rgb(212,113,34)" fg:x="634" fg:w="1"/><text x="51.0106%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="50.7606%" y="213" width="0.0801%" height="15" fill="rgb(216,125,47)" fg:x="634" fg:w="1"/><text x="51.0106%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="50.7606%" y="197" width="0.0801%" height="15" fill="rgb(251,112,19)" fg:x="634" fg:w="1"/><text x="51.0106%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="50.7606%" y="181" width="0.0801%" height="15" fill="rgb(254,200,41)" fg:x="634" fg:w="1"/><text x="51.0106%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="50.7606%" y="165" width="0.0801%" height="15" fill="rgb(225,17,42)" fg:x="634" fg:w="1"/><text x="51.0106%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="50.7606%" y="149" width="0.0801%" height="15" fill="rgb(208,105,35)" fg:x="634" fg:w="1"/><text x="51.0106%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="50.7606%" y="133" width="0.0801%" height="15" fill="rgb(210,125,51)" fg:x="634" fg:w="1"/><text x="51.0106%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="50.7606%" y="117" width="0.0801%" height="15" fill="rgb(227,213,18)" fg:x="634" fg:w="1"/><text x="51.0106%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="50.7606%" y="101" width="0.0801%" height="15" fill="rgb(221,174,32)" fg:x="634" fg:w="1"/><text x="51.0106%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="50.7606%" y="85" width="0.0801%" height="15" fill="rgb(234,23,1)" fg:x="634" fg:w="1"/><text x="51.0106%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="50.7606%" y="69" width="0.0801%" height="15" fill="rgb(209,65,17)" fg:x="634" fg:w="1"/><text x="51.0106%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="50.7606%" y="53" width="0.0801%" height="15" fill="rgb(206,224,31)" fg:x="634" fg:w="1"/><text x="51.0106%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="50.7606%" y="37" width="0.0801%" height="15" fill="rgb(230,20,38)" fg:x="634" fg:w="1"/><text x="51.0106%" y="47.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.9207%" y="357" width="0.0801%" height="15" fill="rgb(211,9,41)" fg:x="636" fg:w="1"/><text x="51.1707%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.0008%" y="357" width="0.0801%" height="15" fill="rgb(233,214,4)" fg:x="637" fg:w="1"/><text x="51.2508%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.0008%" y="341" width="0.0801%" height="15" fill="rgb(225,60,54)" fg:x="637" fg:w="1"/><text x="51.2508%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="50.8407%" y="501" width="0.3203%" height="15" fill="rgb(206,228,35)" fg:x="635" fg:w="4"/><text x="51.0907%" y="511.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="50.8407%" y="485" width="0.3203%" height="15" fill="rgb(212,178,50)" fg:x="635" fg:w="4"/><text x="51.0907%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="50.8407%" y="469" width="0.3203%" height="15" fill="rgb(206,192,33)" fg:x="635" fg:w="4"/><text x="51.0907%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="50.8407%" y="453" width="0.3203%" height="15" fill="rgb(238,210,1)" fg:x="635" fg:w="4"/><text x="51.0907%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="50.8407%" y="437" width="0.3203%" height="15" fill="rgb(205,65,52)" fg:x="635" fg:w="4"/><text x="51.0907%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="50.9207%" y="421" width="0.2402%" height="15" fill="rgb(237,204,51)" fg:x="636" fg:w="3"/><text x="51.1707%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="50.9207%" y="405" width="0.2402%" height="15" fill="rgb(213,119,51)" fg:x="636" fg:w="3"/><text x="51.1707%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="50.9207%" y="389" width="0.2402%" height="15" fill="rgb(244,156,37)" fg:x="636" fg:w="3"/><text x="51.1707%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="50.9207%" y="373" width="0.2402%" height="15" fill="rgb(249,96,18)" fg:x="636" fg:w="3"/><text x="51.1707%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.0809%" y="357" width="0.0801%" height="15" fill="rgb(231,65,11)" fg:x="638" fg:w="1"/><text x="51.3309%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.0809%" y="341" width="0.0801%" height="15" fill="rgb(240,187,2)" fg:x="638" fg:w="1"/><text x="51.3309%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.0809%" y="325" width="0.0801%" height="15" fill="rgb(242,121,39)" fg:x="638" fg:w="1"/><text x="51.3309%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.0809%" y="309" width="0.0801%" height="15" fill="rgb(233,205,18)" fg:x="638" fg:w="1"/><text x="51.3309%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.0809%" y="293" width="0.0801%" height="15" fill="rgb(219,67,33)" fg:x="638" fg:w="1"/><text x="51.3309%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.0809%" y="277" width="0.0801%" height="15" fill="rgb(227,84,12)" fg:x="638" fg:w="1"/><text x="51.3309%" y="287.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.64%)</title><rect x="50.6005%" y="549" width="0.6405%" height="15" fill="rgb(227,42,52)" fg:x="632" fg:w="8"/><text x="50.8505%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="50.8407%" y="533" width="0.4003%" height="15" fill="rgb(231,27,28)" fg:x="635" fg:w="5"/><text x="51.0907%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="50.8407%" y="517" width="0.4003%" height="15" fill="rgb(238,42,2)" fg:x="635" fg:w="5"/><text x="51.0907%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="51.1609%" y="501" width="0.0801%" height="15" fill="rgb(215,15,9)" fg:x="639" fg:w="1"/><text x="51.4109%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="51.1609%" y="485" width="0.0801%" height="15" fill="rgb(205,195,15)" fg:x="639" fg:w="1"/><text x="51.4109%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="51.1609%" y="469" width="0.0801%" height="15" fill="rgb(233,143,2)" fg:x="639" fg:w="1"/><text x="51.4109%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="51.1609%" y="453" width="0.0801%" height="15" fill="rgb(207,108,8)" fg:x="639" fg:w="1"/><text x="51.4109%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="51.1609%" y="437" width="0.0801%" height="15" fill="rgb(214,53,21)" fg:x="639" fg:w="1"/><text x="51.4109%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="51.1609%" y="421" width="0.0801%" height="15" fill="rgb(238,212,36)" fg:x="639" fg:w="1"/><text x="51.4109%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="51.1609%" y="405" width="0.0801%" height="15" fill="rgb(218,151,47)" fg:x="639" fg:w="1"/><text x="51.4109%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="51.1609%" y="389" width="0.0801%" height="15" fill="rgb(245,160,3)" fg:x="639" fg:w="1"/><text x="51.4109%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.1609%" y="373" width="0.0801%" height="15" fill="rgb(238,106,19)" fg:x="639" fg:w="1"/><text x="51.4109%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.2410%" y="533" width="0.0801%" height="15" fill="rgb(207,206,9)" fg:x="640" fg:w="1"/><text x="51.4910%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.2410%" y="517" width="0.0801%" height="15" fill="rgb(254,40,10)" fg:x="640" fg:w="1"/><text x="51.4910%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.2410%" y="501" width="0.0801%" height="15" fill="rgb(245,81,8)" fg:x="640" fg:w="1"/><text x="51.4910%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.2410%" y="485" width="0.0801%" height="15" fill="rgb(214,119,17)" fg:x="640" fg:w="1"/><text x="51.4910%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.2410%" y="469" width="0.0801%" height="15" fill="rgb(245,100,39)" fg:x="640" fg:w="1"/><text x="51.4910%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.2410%" y="453" width="0.0801%" height="15" fill="rgb(243,105,16)" fg:x="640" fg:w="1"/><text x="51.4910%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.2410%" y="437" width="0.0801%" height="15" fill="rgb(214,53,2)" fg:x="640" fg:w="1"/><text x="51.4910%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.2410%" y="421" width="0.0801%" height="15" fill="rgb(251,54,50)" fg:x="640" fg:w="1"/><text x="51.4910%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.2410%" y="405" width="0.0801%" height="15" fill="rgb(244,121,37)" fg:x="640" fg:w="1"/><text x="51.4910%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.2410%" y="389" width="0.0801%" height="15" fill="rgb(236,158,39)" fg:x="640" fg:w="1"/><text x="51.4910%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.2410%" y="373" width="0.0801%" height="15" fill="rgb(226,25,37)" fg:x="640" fg:w="1"/><text x="51.4910%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="51.3211%" y="533" width="0.0801%" height="15" fill="rgb(222,71,46)" fg:x="641" fg:w="1"/><text x="51.5711%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="51.3211%" y="517" width="0.0801%" height="15" fill="rgb(209,27,29)" fg:x="641" fg:w="1"/><text x="51.5711%" y="527.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="51.3211%" y="501" width="0.0801%" height="15" fill="rgb(210,196,17)" fg:x="641" fg:w="1"/><text x="51.5711%" y="511.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (3 samples, 0.24%)</title><rect x="51.2410%" y="549" width="0.2402%" height="15" fill="rgb(236,76,23)" fg:x="640" fg:w="3"/><text x="51.4910%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (1 samples, 0.08%)</title><rect x="51.4011%" y="533" width="0.0801%" height="15" fill="rgb(214,33,32)" fg:x="642" fg:w="1"/><text x="51.6511%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="51.4011%" y="517" width="0.0801%" height="15" fill="rgb(243,16,26)" fg:x="642" fg:w="1"/><text x="51.6511%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.4011%" y="501" width="0.0801%" height="15" fill="rgb(241,30,48)" fg:x="642" fg:w="1"/><text x="51.6511%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.4812%" y="517" width="0.0801%" height="15" fill="rgb(241,106,1)" fg:x="643" fg:w="1"/><text x="51.7312%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.4812%" y="501" width="0.0801%" height="15" fill="rgb(230,62,29)" fg:x="643" fg:w="1"/><text x="51.7312%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.4812%" y="485" width="0.0801%" height="15" fill="rgb(207,166,53)" fg:x="643" fg:w="1"/><text x="51.7312%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.4812%" y="469" width="0.0801%" height="15" fill="rgb(244,54,13)" fg:x="643" fg:w="1"/><text x="51.7312%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.4812%" y="453" width="0.0801%" height="15" fill="rgb(205,144,19)" fg:x="643" fg:w="1"/><text x="51.7312%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.4812%" y="437" width="0.0801%" height="15" fill="rgb(225,165,45)" fg:x="643" fg:w="1"/><text x="51.7312%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.4812%" y="421" width="0.0801%" height="15" fill="rgb(220,140,6)" fg:x="643" fg:w="1"/><text x="51.7312%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.4812%" y="405" width="0.0801%" height="15" fill="rgb(234,69,14)" fg:x="643" fg:w="1"/><text x="51.7312%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.4812%" y="389" width="0.0801%" height="15" fill="rgb(243,24,33)" fg:x="643" fg:w="1"/><text x="51.7312%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.4812%" y="373" width="0.0801%" height="15" fill="rgb(253,100,43)" fg:x="643" fg:w="1"/><text x="51.7312%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.4812%" y="357" width="0.0801%" height="15" fill="rgb(221,168,15)" fg:x="643" fg:w="1"/><text x="51.7312%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.4812%" y="341" width="0.0801%" height="15" fill="rgb(237,15,11)" fg:x="643" fg:w="1"/><text x="51.7312%" y="351.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.5612%" y="501" width="0.0801%" height="15" fill="rgb(229,207,40)" fg:x="644" fg:w="1"/><text x="51.8112%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.5612%" y="485" width="0.0801%" height="15" fill="rgb(246,125,48)" fg:x="644" fg:w="1"/><text x="51.8112%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.5612%" y="469" width="0.0801%" height="15" fill="rgb(231,65,10)" fg:x="644" fg:w="1"/><text x="51.8112%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="51.5612%" y="453" width="0.0801%" height="15" fill="rgb(222,152,40)" fg:x="644" fg:w="1"/><text x="51.8112%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="51.5612%" y="437" width="0.0801%" height="15" fill="rgb(214,12,30)" fg:x="644" fg:w="1"/><text x="51.8112%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="51.6413%" y="501" width="0.0801%" height="15" fill="rgb(239,80,41)" fg:x="645" fg:w="1"/><text x="51.8913%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.6413%" y="485" width="0.0801%" height="15" fill="rgb(206,175,27)" fg:x="645" fg:w="1"/><text x="51.8913%" y="495.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="51.7214%" y="501" width="0.0801%" height="15" fill="rgb(222,43,39)" fg:x="646" fg:w="1"/><text x="51.9714%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="51.7214%" y="485" width="0.0801%" height="15" fill="rgb(243,47,50)" fg:x="646" fg:w="1"/><text x="51.9714%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="51.7214%" y="469" width="0.0801%" height="15" fill="rgb(243,61,21)" fg:x="646" fg:w="1"/><text x="51.9714%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="51.7214%" y="453" width="0.0801%" height="15" fill="rgb(208,172,5)" fg:x="646" fg:w="1"/><text x="51.9714%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.40%)</title><rect x="51.4812%" y="533" width="0.4003%" height="15" fill="rgb(219,24,25)" fg:x="643" fg:w="5"/><text x="51.7312%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="51.5612%" y="517" width="0.3203%" height="15" fill="rgb(235,42,41)" fg:x="644" fg:w="4"/><text x="51.8112%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.8014%" y="501" width="0.0801%" height="15" fill="rgb(226,190,24)" fg:x="647" fg:w="1"/><text x="52.0514%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.8014%" y="485" width="0.0801%" height="15" fill="rgb(216,55,27)" fg:x="647" fg:w="1"/><text x="52.0514%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.8014%" y="469" width="0.0801%" height="15" fill="rgb(231,77,14)" fg:x="647" fg:w="1"/><text x="52.0514%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.8014%" y="453" width="0.0801%" height="15" fill="rgb(208,108,34)" fg:x="647" fg:w="1"/><text x="52.0514%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="51.8815%" y="517" width="0.2402%" height="15" fill="rgb(228,183,52)" fg:x="648" fg:w="3"/><text x="52.1315%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="51.8815%" y="501" width="0.2402%" height="15" fill="rgb(224,152,1)" fg:x="648" fg:w="3"/><text x="52.1315%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="51.8815%" y="485" width="0.2402%" height="15" fill="rgb(246,115,8)" fg:x="648" fg:w="3"/><text x="52.1315%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="51.8815%" y="469" width="0.2402%" height="15" fill="rgb(211,76,13)" fg:x="648" fg:w="3"/><text x="52.1315%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.0416%" y="453" width="0.0801%" height="15" fill="rgb(233,214,49)" fg:x="650" fg:w="1"/><text x="52.2916%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (131 samples, 10.49%)</title><rect x="41.7134%" y="581" width="10.4884%" height="15" fill="rgb(223,44,51)" fg:x="521" fg:w="131"/><text x="41.9634%" y="591.50">&lt;plugins_core::..</text></g><g><title>plugins_core::location::change_location (49 samples, 3.92%)</title><rect x="48.2786%" y="565" width="3.9231%" height="15" fill="rgb(225,111,51)" fg:x="603" fg:w="49"/><text x="48.5286%" y="575.50">plug..</text></g><g><title>plugins_core::location::Location::set (9 samples, 0.72%)</title><rect x="51.4812%" y="549" width="0.7206%" height="15" fill="rgb(231,185,26)" fg:x="643" fg:w="9"/><text x="51.7312%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="51.8815%" y="533" width="0.3203%" height="15" fill="rgb(233,111,30)" fg:x="648" fg:w="4"/><text x="52.1315%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="52.1217%" y="517" width="0.0801%" height="15" fill="rgb(250,1,47)" fg:x="651" fg:w="1"/><text x="52.3717%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="52.1217%" y="501" width="0.0801%" height="15" fill="rgb(254,210,3)" fg:x="651" fg:w="1"/><text x="52.3717%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="52.1217%" y="485" width="0.0801%" height="15" fill="rgb(234,14,22)" fg:x="651" fg:w="1"/><text x="52.3717%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="52.1217%" y="469" width="0.0801%" height="15" fill="rgb(221,117,4)" fg:x="651" fg:w="1"/><text x="52.3717%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.1217%" y="453" width="0.0801%" height="15" fill="rgb(251,147,27)" fg:x="651" fg:w="1"/><text x="52.3717%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.3619%" y="469" width="0.1601%" height="15" fill="rgb(226,52,11)" fg:x="654" fg:w="2"/><text x="52.6119%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.3619%" y="453" width="0.1601%" height="15" fill="rgb(229,222,5)" fg:x="654" fg:w="2"/><text x="52.6119%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.4420%" y="437" width="0.0801%" height="15" fill="rgb(232,76,2)" fg:x="655" fg:w="1"/><text x="52.6920%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="52.3619%" y="501" width="0.2402%" height="15" fill="rgb(242,108,2)" fg:x="654" fg:w="3"/><text x="52.6119%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="52.3619%" y="485" width="0.2402%" height="15" fill="rgb(213,165,6)" fg:x="654" fg:w="3"/><text x="52.6119%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.5220%" y="469" width="0.0801%" height="15" fill="rgb(222,24,42)" fg:x="656" fg:w="1"/><text x="52.7720%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.5220%" y="453" width="0.0801%" height="15" fill="rgb(242,170,24)" fg:x="656" fg:w="1"/><text x="52.7720%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.5220%" y="437" width="0.0801%" height="15" fill="rgb(209,110,40)" fg:x="656" fg:w="1"/><text x="52.7720%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.5220%" y="421" width="0.0801%" height="15" fill="rgb(233,146,36)" fg:x="656" fg:w="1"/><text x="52.7720%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.5220%" y="405" width="0.0801%" height="15" fill="rgb(229,33,32)" fg:x="656" fg:w="1"/><text x="52.7720%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.5220%" y="389" width="0.0801%" height="15" fill="rgb(225,55,34)" fg:x="656" fg:w="1"/><text x="52.7720%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.5220%" y="373" width="0.0801%" height="15" fill="rgb(217,32,50)" fg:x="656" fg:w="1"/><text x="52.7720%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.5220%" y="357" width="0.0801%" height="15" fill="rgb(206,110,53)" fg:x="656" fg:w="1"/><text x="52.7720%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.5220%" y="341" width="0.0801%" height="15" fill="rgb(247,25,10)" fg:x="656" fg:w="1"/><text x="52.7720%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.5220%" y="325" width="0.0801%" height="15" fill="rgb(226,67,48)" fg:x="656" fg:w="1"/><text x="52.7720%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.5220%" y="309" width="0.0801%" height="15" fill="rgb(239,73,28)" fg:x="656" fg:w="1"/><text x="52.7720%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.5220%" y="293" width="0.0801%" height="15" fill="rgb(234,200,41)" fg:x="656" fg:w="1"/><text x="52.7720%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (6 samples, 0.48%)</title><rect x="52.2018%" y="549" width="0.4804%" height="15" fill="rgb(233,76,35)" fg:x="652" fg:w="6"/><text x="52.4518%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="52.2818%" y="533" width="0.4003%" height="15" fill="rgb(238,166,31)" fg:x="653" fg:w="5"/><text x="52.5318%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="52.2818%" y="517" width="0.4003%" height="15" fill="rgb(219,218,51)" fg:x="653" fg:w="5"/><text x="52.5318%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.6021%" y="501" width="0.0801%" height="15" fill="rgb(221,82,53)" fg:x="657" fg:w="1"/><text x="52.8521%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.6021%" y="485" width="0.0801%" height="15" fill="rgb(218,179,13)" fg:x="657" fg:w="1"/><text x="52.8521%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.6021%" y="469" width="0.0801%" height="15" fill="rgb(210,53,38)" fg:x="657" fg:w="1"/><text x="52.8521%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.6021%" y="453" width="0.0801%" height="15" fill="rgb(214,167,31)" fg:x="657" fg:w="1"/><text x="52.8521%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="52.6021%" y="437" width="0.0801%" height="15" fill="rgb(223,26,5)" fg:x="657" fg:w="1"/><text x="52.8521%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.6021%" y="421" width="0.0801%" height="15" fill="rgb(218,95,23)" fg:x="657" fg:w="1"/><text x="52.8521%" y="431.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="52.6021%" y="405" width="0.0801%" height="15" fill="rgb(248,205,45)" fg:x="657" fg:w="1"/><text x="52.8521%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.6821%" y="501" width="0.0801%" height="15" fill="rgb(211,76,6)" fg:x="658" fg:w="1"/><text x="52.9321%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="52.6821%" y="485" width="0.0801%" height="15" fill="rgb(250,176,29)" fg:x="658" fg:w="1"/><text x="52.9321%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.6821%" y="469" width="0.0801%" height="15" fill="rgb(240,107,31)" fg:x="658" fg:w="1"/><text x="52.9321%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.6821%" y="453" width="0.0801%" height="15" fill="rgb(229,215,17)" fg:x="658" fg:w="1"/><text x="52.9321%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.6821%" y="437" width="0.0801%" height="15" fill="rgb(240,79,8)" fg:x="658" fg:w="1"/><text x="52.9321%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.6821%" y="421" width="0.0801%" height="15" fill="rgb(243,110,48)" fg:x="658" fg:w="1"/><text x="52.9321%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.6821%" y="405" width="0.0801%" height="15" fill="rgb(236,201,9)" fg:x="658" fg:w="1"/><text x="52.9321%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.7622%" y="405" width="0.0801%" height="15" fill="rgb(220,87,26)" fg:x="659" fg:w="1"/><text x="53.0122%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.7622%" y="389" width="0.0801%" height="15" fill="rgb(212,118,27)" fg:x="659" fg:w="1"/><text x="53.0122%" y="399.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (9 samples, 0.72%)</title><rect x="52.2018%" y="565" width="0.7206%" height="15" fill="rgb(244,178,50)" fg:x="652" fg:w="9"/><text x="52.4518%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="52.6821%" y="549" width="0.2402%" height="15" fill="rgb(215,204,7)" fg:x="658" fg:w="3"/><text x="52.9321%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="52.6821%" y="533" width="0.2402%" height="15" fill="rgb(214,122,43)" fg:x="658" fg:w="3"/><text x="52.9321%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="52.6821%" y="517" width="0.2402%" height="15" fill="rgb(251,178,26)" fg:x="658" fg:w="3"/><text x="52.9321%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.7622%" y="501" width="0.1601%" height="15" fill="rgb(210,7,35)" fg:x="659" fg:w="2"/><text x="53.0122%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.7622%" y="485" width="0.1601%" height="15" fill="rgb(227,164,54)" fg:x="659" fg:w="2"/><text x="53.0122%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.7622%" y="469" width="0.1601%" height="15" fill="rgb(205,18,34)" fg:x="659" fg:w="2"/><text x="53.0122%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.7622%" y="453" width="0.1601%" height="15" fill="rgb(239,50,19)" fg:x="659" fg:w="2"/><text x="53.0122%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="52.7622%" y="437" width="0.1601%" height="15" fill="rgb(224,85,6)" fg:x="659" fg:w="2"/><text x="53.0122%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.7622%" y="421" width="0.1601%" height="15" fill="rgb(252,167,34)" fg:x="659" fg:w="2"/><text x="53.0122%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.8423%" y="405" width="0.0801%" height="15" fill="rgb(243,180,35)" fg:x="660" fg:w="1"/><text x="53.0923%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.8423%" y="389" width="0.0801%" height="15" fill="rgb(213,214,53)" fg:x="660" fg:w="1"/><text x="53.0923%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.8423%" y="373" width="0.0801%" height="15" fill="rgb(244,39,37)" fg:x="660" fg:w="1"/><text x="53.0923%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.8423%" y="357" width="0.0801%" height="15" fill="rgb(215,141,14)" fg:x="660" fg:w="1"/><text x="53.0923%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.9223%" y="517" width="0.0801%" height="15" fill="rgb(210,2,42)" fg:x="661" fg:w="1"/><text x="53.1723%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.9223%" y="501" width="0.0801%" height="15" fill="rgb(252,189,47)" fg:x="661" fg:w="1"/><text x="53.1723%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.9223%" y="485" width="0.0801%" height="15" fill="rgb(222,154,47)" fg:x="661" fg:w="1"/><text x="53.1723%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.9223%" y="469" width="0.0801%" height="15" fill="rgb(228,20,37)" fg:x="661" fg:w="1"/><text x="53.1723%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.9223%" y="453" width="0.0801%" height="15" fill="rgb(236,17,4)" fg:x="661" fg:w="1"/><text x="53.1723%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.9223%" y="437" width="0.0801%" height="15" fill="rgb(222,211,31)" fg:x="661" fg:w="1"/><text x="53.1723%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.9223%" y="421" width="0.0801%" height="15" fill="rgb(218,134,25)" fg:x="661" fg:w="1"/><text x="53.1723%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.9223%" y="405" width="0.0801%" height="15" fill="rgb(218,97,43)" fg:x="661" fg:w="1"/><text x="53.1723%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.9223%" y="389" width="0.0801%" height="15" fill="rgb(234,163,32)" fg:x="661" fg:w="1"/><text x="53.1723%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.9223%" y="373" width="0.0801%" height="15" fill="rgb(251,171,42)" fg:x="661" fg:w="1"/><text x="53.1723%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.9223%" y="357" width="0.0801%" height="15" fill="rgb(223,104,12)" fg:x="661" fg:w="1"/><text x="53.1723%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.9223%" y="341" width="0.0801%" height="15" fill="rgb(225,29,49)" fg:x="661" fg:w="1"/><text x="53.1723%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.9223%" y="325" width="0.0801%" height="15" fill="rgb(253,77,7)" fg:x="661" fg:w="1"/><text x="53.1723%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.9223%" y="309" width="0.0801%" height="15" fill="rgb(213,81,26)" fg:x="661" fg:w="1"/><text x="53.1723%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="53.0024%" y="517" width="0.2402%" height="15" fill="rgb(246,126,6)" fg:x="662" fg:w="3"/><text x="53.2524%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="53.0024%" y="501" width="0.2402%" height="15" fill="rgb(232,186,21)" fg:x="662" fg:w="3"/><text x="53.2524%" y="511.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="53.0024%" y="485" width="0.2402%" height="15" fill="rgb(215,126,18)" fg:x="662" fg:w="3"/><text x="53.2524%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="53.2426%" y="469" width="0.0801%" height="15" fill="rgb(210,47,5)" fg:x="665" fg:w="1"/><text x="53.4926%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="53.2426%" y="453" width="0.0801%" height="15" fill="rgb(240,70,6)" fg:x="665" fg:w="1"/><text x="53.4926%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.2426%" y="437" width="0.0801%" height="15" fill="rgb(230,99,49)" fg:x="665" fg:w="1"/><text x="53.4926%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="53.2426%" y="501" width="0.1601%" height="15" fill="rgb(212,57,36)" fg:x="665" fg:w="2"/><text x="53.4926%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="53.2426%" y="485" width="0.1601%" height="15" fill="rgb(243,14,50)" fg:x="665" fg:w="2"/><text x="53.4926%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="53.3227%" y="469" width="0.0801%" height="15" fill="rgb(240,2,53)" fg:x="666" fg:w="1"/><text x="53.5727%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="53.3227%" y="453" width="0.0801%" height="15" fill="rgb(208,47,53)" fg:x="666" fg:w="1"/><text x="53.5727%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="53.3227%" y="437" width="0.0801%" height="15" fill="rgb(235,186,39)" fg:x="666" fg:w="1"/><text x="53.5727%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="53.3227%" y="421" width="0.0801%" height="15" fill="rgb(212,35,47)" fg:x="666" fg:w="1"/><text x="53.5727%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="53.3227%" y="405" width="0.0801%" height="15" fill="rgb(248,59,37)" fg:x="666" fg:w="1"/><text x="53.5727%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="53.3227%" y="389" width="0.0801%" height="15" fill="rgb(223,186,16)" fg:x="666" fg:w="1"/><text x="53.5727%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="53.3227%" y="373" width="0.0801%" height="15" fill="rgb(215,106,35)" fg:x="666" fg:w="1"/><text x="53.5727%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="53.3227%" y="357" width="0.0801%" height="15" fill="rgb(217,141,29)" fg:x="666" fg:w="1"/><text x="53.5727%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="53.3227%" y="341" width="0.0801%" height="15" fill="rgb(221,227,46)" fg:x="666" fg:w="1"/><text x="53.5727%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="53.3227%" y="325" width="0.0801%" height="15" fill="rgb(212,36,41)" fg:x="666" fg:w="1"/><text x="53.5727%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="53.3227%" y="309" width="0.0801%" height="15" fill="rgb(222,35,11)" fg:x="666" fg:w="1"/><text x="53.5727%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="53.3227%" y="293" width="0.0801%" height="15" fill="rgb(232,165,33)" fg:x="666" fg:w="1"/><text x="53.5727%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.7230%" y="277" width="0.0801%" height="15" fill="rgb(211,38,20)" fg:x="671" fg:w="1"/><text x="53.9730%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.7230%" y="261" width="0.0801%" height="15" fill="rgb(230,7,36)" fg:x="671" fg:w="1"/><text x="53.9730%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.7230%" y="245" width="0.0801%" height="15" fill="rgb(213,128,35)" fg:x="671" fg:w="1"/><text x="53.9730%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7230%" y="229" width="0.0801%" height="15" fill="rgb(218,11,14)" fg:x="671" fg:w="1"/><text x="53.9730%" y="239.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="53.4828%" y="469" width="0.4003%" height="15" fill="rgb(249,105,7)" fg:x="668" fg:w="5"/><text x="53.7328%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="53.5629%" y="453" width="0.3203%" height="15" fill="rgb(226,125,21)" fg:x="669" fg:w="4"/><text x="53.8129%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="53.6429%" y="437" width="0.2402%" height="15" fill="rgb(239,90,47)" fg:x="670" fg:w="3"/><text x="53.8929%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="53.6429%" y="421" width="0.2402%" height="15" fill="rgb(226,19,1)" fg:x="670" fg:w="3"/><text x="53.8929%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.7230%" y="405" width="0.1601%" height="15" fill="rgb(205,117,40)" fg:x="671" fg:w="2"/><text x="53.9730%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.7230%" y="389" width="0.1601%" height="15" fill="rgb(234,6,54)" fg:x="671" fg:w="2"/><text x="53.9730%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="53.7230%" y="373" width="0.1601%" height="15" fill="rgb(239,73,32)" fg:x="671" fg:w="2"/><text x="53.9730%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="53.7230%" y="357" width="0.1601%" height="15" fill="rgb(226,197,12)" fg:x="671" fg:w="2"/><text x="53.9730%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="53.7230%" y="341" width="0.1601%" height="15" fill="rgb(226,53,42)" fg:x="671" fg:w="2"/><text x="53.9730%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="53.7230%" y="325" width="0.1601%" height="15" fill="rgb(234,99,30)" fg:x="671" fg:w="2"/><text x="53.9730%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="53.7230%" y="309" width="0.1601%" height="15" fill="rgb(237,175,49)" fg:x="671" fg:w="2"/><text x="53.9730%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="53.7230%" y="293" width="0.1601%" height="15" fill="rgb(228,75,42)" fg:x="671" fg:w="2"/><text x="53.9730%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="53.8030%" y="277" width="0.0801%" height="15" fill="rgb(223,162,48)" fg:x="672" fg:w="1"/><text x="54.0530%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="53.8030%" y="261" width="0.0801%" height="15" fill="rgb(221,192,29)" fg:x="672" fg:w="1"/><text x="54.0530%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="53.8831%" y="421" width="0.0801%" height="15" fill="rgb(249,150,41)" fg:x="673" fg:w="1"/><text x="54.1331%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="53.8831%" y="405" width="0.0801%" height="15" fill="rgb(243,107,34)" fg:x="673" fg:w="1"/><text x="54.1331%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="53.8831%" y="389" width="0.0801%" height="15" fill="rgb(214,227,11)" fg:x="673" fg:w="1"/><text x="54.1331%" y="399.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="53.8831%" y="373" width="0.0801%" height="15" fill="rgb(209,37,13)" fg:x="673" fg:w="1"/><text x="54.1331%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.8831%" y="357" width="0.0801%" height="15" fill="rgb(249,124,20)" fg:x="673" fg:w="1"/><text x="54.1331%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.8831%" y="341" width="0.0801%" height="15" fill="rgb(228,28,2)" fg:x="673" fg:w="1"/><text x="54.1331%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.8831%" y="325" width="0.0801%" height="15" fill="rgb(244,55,1)" fg:x="673" fg:w="1"/><text x="54.1331%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.8831%" y="309" width="0.0801%" height="15" fill="rgb(216,26,19)" fg:x="673" fg:w="1"/><text x="54.1331%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.8831%" y="293" width="0.0801%" height="15" fill="rgb(209,162,10)" fg:x="673" fg:w="1"/><text x="54.1331%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.8831%" y="277" width="0.0801%" height="15" fill="rgb(235,168,42)" fg:x="673" fg:w="1"/><text x="54.1331%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.8831%" y="261" width="0.0801%" height="15" fill="rgb(240,24,14)" fg:x="673" fg:w="1"/><text x="54.1331%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.8831%" y="245" width="0.0801%" height="15" fill="rgb(224,107,11)" fg:x="673" fg:w="1"/><text x="54.1331%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.8831%" y="229" width="0.0801%" height="15" fill="rgb(226,48,4)" fg:x="673" fg:w="1"/><text x="54.1331%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.8831%" y="213" width="0.0801%" height="15" fill="rgb(254,31,21)" fg:x="673" fg:w="1"/><text x="54.1331%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.8831%" y="197" width="0.0801%" height="15" fill="rgb(205,156,19)" fg:x="673" fg:w="1"/><text x="54.1331%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.8831%" y="181" width="0.0801%" height="15" fill="rgb(216,73,31)" fg:x="673" fg:w="1"/><text x="54.1331%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.8831%" y="165" width="0.0801%" height="15" fill="rgb(237,88,35)" fg:x="673" fg:w="1"/><text x="54.1331%" y="175.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="53.8831%" y="469" width="0.1601%" height="15" fill="rgb(254,79,48)" fg:x="673" fg:w="2"/><text x="54.1331%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="53.8831%" y="453" width="0.1601%" height="15" fill="rgb(211,66,36)" fg:x="673" fg:w="2"/><text x="54.1331%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="53.8831%" y="437" width="0.1601%" height="15" fill="rgb(222,13,1)" fg:x="673" fg:w="2"/><text x="54.1331%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.9632%" y="421" width="0.0801%" height="15" fill="rgb(221,216,41)" fg:x="674" fg:w="1"/><text x="54.2132%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="54.0432%" y="469" width="0.0801%" height="15" fill="rgb(220,10,17)" fg:x="675" fg:w="1"/><text x="54.2932%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="54.0432%" y="453" width="0.0801%" height="15" fill="rgb(242,43,35)" fg:x="675" fg:w="1"/><text x="54.2932%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.0432%" y="437" width="0.0801%" height="15" fill="rgb(216,182,18)" fg:x="675" fg:w="1"/><text x="54.2932%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.1233%" y="437" width="0.1601%" height="15" fill="rgb(246,217,36)" fg:x="676" fg:w="2"/><text x="54.3733%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (19 samples, 1.52%)</title><rect x="52.9223%" y="533" width="1.5212%" height="15" fill="rgb(208,107,8)" fg:x="661" fg:w="19"/><text x="53.1723%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (15 samples, 1.20%)</title><rect x="53.2426%" y="517" width="1.2010%" height="15" fill="rgb(208,189,15)" fg:x="665" fg:w="15"/><text x="53.4926%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (13 samples, 1.04%)</title><rect x="53.4027%" y="501" width="1.0408%" height="15" fill="rgb(211,70,9)" fg:x="667" fg:w="13"/><text x="53.6527%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.04%)</title><rect x="53.4027%" y="485" width="1.0408%" height="15" fill="rgb(217,95,34)" fg:x="667" fg:w="13"/><text x="53.6527%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (4 samples, 0.32%)</title><rect x="54.1233%" y="469" width="0.3203%" height="15" fill="rgb(240,223,2)" fg:x="676" fg:w="4"/><text x="54.3733%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="54.1233%" y="453" width="0.3203%" height="15" fill="rgb(231,18,6)" fg:x="676" fg:w="4"/><text x="54.3733%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="54.2834%" y="437" width="0.1601%" height="15" fill="rgb(254,44,46)" fg:x="678" fg:w="2"/><text x="54.5334%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="54.2834%" y="421" width="0.1601%" height="15" fill="rgb(223,222,46)" fg:x="678" fg:w="2"/><text x="54.5334%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="54.2834%" y="405" width="0.1601%" height="15" fill="rgb(229,163,13)" fg:x="678" fg:w="2"/><text x="54.5334%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.2834%" y="389" width="0.1601%" height="15" fill="rgb(220,208,13)" fg:x="678" fg:w="2"/><text x="54.5334%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.2834%" y="373" width="0.1601%" height="15" fill="rgb(244,28,53)" fg:x="678" fg:w="2"/><text x="54.5334%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="54.4436%" y="469" width="0.0801%" height="15" fill="rgb(243,138,0)" fg:x="680" fg:w="1"/><text x="54.6936%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.4436%" y="453" width="0.0801%" height="15" fill="rgb(209,90,49)" fg:x="680" fg:w="1"/><text x="54.6936%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.5236%" y="437" width="0.1601%" height="15" fill="rgb(247,114,18)" fg:x="681" fg:w="2"/><text x="54.7736%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.5236%" y="421" width="0.1601%" height="15" fill="rgb(221,14,46)" fg:x="681" fg:w="2"/><text x="54.7736%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.5236%" y="405" width="0.1601%" height="15" fill="rgb(215,29,23)" fg:x="681" fg:w="2"/><text x="54.7736%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.5236%" y="389" width="0.1601%" height="15" fill="rgb(241,37,25)" fg:x="681" fg:w="2"/><text x="54.7736%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.6037%" y="373" width="0.0801%" height="15" fill="rgb(225,17,22)" fg:x="682" fg:w="1"/><text x="54.8537%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.6037%" y="357" width="0.0801%" height="15" fill="rgb(241,182,7)" fg:x="682" fg:w="1"/><text x="54.8537%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::name (5 samples, 0.40%)</title><rect x="54.4436%" y="501" width="0.4003%" height="15" fill="rgb(248,125,10)" fg:x="680" fg:w="5"/><text x="54.6936%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="54.4436%" y="485" width="0.4003%" height="15" fill="rgb(250,3,37)" fg:x="680" fg:w="5"/><text x="54.6936%" y="495.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="54.5236%" y="469" width="0.3203%" height="15" fill="rgb(237,102,7)" fg:x="681" fg:w="4"/><text x="54.7736%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="54.5236%" y="453" width="0.3203%" height="15" fill="rgb(235,5,5)" fg:x="681" fg:w="4"/><text x="54.7736%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.6837%" y="437" width="0.1601%" height="15" fill="rgb(249,147,38)" fg:x="683" fg:w="2"/><text x="54.9337%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.6837%" y="421" width="0.1601%" height="15" fill="rgb(221,25,18)" fg:x="683" fg:w="2"/><text x="54.9337%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.6837%" y="405" width="0.1601%" height="15" fill="rgb(211,88,9)" fg:x="683" fg:w="2"/><text x="54.9337%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.6837%" y="389" width="0.1601%" height="15" fill="rgb(219,62,54)" fg:x="683" fg:w="2"/><text x="54.9337%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="54.6837%" y="373" width="0.1601%" height="15" fill="rgb(243,133,46)" fg:x="683" fg:w="2"/><text x="54.9337%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.6837%" y="357" width="0.1601%" height="15" fill="rgb(214,168,53)" fg:x="683" fg:w="2"/><text x="54.9337%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.6837%" y="341" width="0.1601%" height="15" fill="rgb(250,58,7)" fg:x="683" fg:w="2"/><text x="54.9337%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.6837%" y="325" width="0.1601%" height="15" fill="rgb(249,131,5)" fg:x="683" fg:w="2"/><text x="54.9337%" y="335.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (6 samples, 0.48%)</title><rect x="54.4436%" y="533" width="0.4804%" height="15" fill="rgb(234,40,44)" fg:x="680" fg:w="6"/><text x="54.6936%" y="543.50"></text></g><g><title>plugins_core::finding::matches_description (6 samples, 0.48%)</title><rect x="54.4436%" y="517" width="0.4804%" height="15" fill="rgb(225,188,42)" fg:x="680" fg:w="6"/><text x="54.6936%" y="527.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="54.8439%" y="501" width="0.0801%" height="15" fill="rgb(218,201,51)" fg:x="685" fg:w="1"/><text x="55.0939%" y="511.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="54.8439%" y="485" width="0.0801%" height="15" fill="rgb(214,209,38)" fg:x="685" fg:w="1"/><text x="55.0939%" y="495.50"></text></g><g><title>alloc::str::convert_while_ascii (1 samples, 0.08%)</title><rect x="54.8439%" y="469" width="0.0801%" height="15" fill="rgb(217,0,20)" fg:x="685" fg:w="1"/><text x="55.0939%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="54.8439%" y="453" width="0.0801%" height="15" fill="rgb(248,183,46)" fg:x="685" fg:w="1"/><text x="55.0939%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.8439%" y="437" width="0.0801%" height="15" fill="rgb(208,99,41)" fg:x="685" fg:w="1"/><text x="55.0939%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.8439%" y="421" width="0.0801%" height="15" fill="rgb(210,189,49)" fg:x="685" fg:w="1"/><text x="55.0939%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.8439%" y="405" width="0.0801%" height="15" fill="rgb(239,191,42)" fg:x="685" fg:w="1"/><text x="55.0939%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.8439%" y="389" width="0.0801%" height="15" fill="rgb(240,138,26)" fg:x="685" fg:w="1"/><text x="55.0939%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.8439%" y="373" width="0.0801%" height="15" fill="rgb(234,45,22)" fg:x="685" fg:w="1"/><text x="55.0939%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.8439%" y="357" width="0.0801%" height="15" fill="rgb(228,43,35)" fg:x="685" fg:w="1"/><text x="55.0939%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (27 samples, 2.16%)</title><rect x="52.9223%" y="565" width="2.1617%" height="15" fill="rgb(215,201,54)" fg:x="661" fg:w="27"/><text x="53.1723%" y="575.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (27 samples, 2.16%)</title><rect x="52.9223%" y="549" width="2.1617%" height="15" fill="rgb(209,60,31)" fg:x="661" fg:w="27"/><text x="53.1723%" y="559.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (2 samples, 0.16%)</title><rect x="54.9239%" y="533" width="0.1601%" height="15" fill="rgb(232,66,12)" fg:x="686" fg:w="2"/><text x="55.1739%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.9239%" y="517" width="0.1601%" height="15" fill="rgb(244,78,24)" fg:x="686" fg:w="2"/><text x="55.1739%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.9239%" y="501" width="0.1601%" height="15" fill="rgb(249,65,27)" fg:x="686" fg:w="2"/><text x="55.1739%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.0040%" y="485" width="0.0801%" height="15" fill="rgb(208,218,19)" fg:x="687" fg:w="1"/><text x="55.2540%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.0040%" y="469" width="0.0801%" height="15" fill="rgb(212,181,38)" fg:x="687" fg:w="1"/><text x="55.2540%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.0040%" y="453" width="0.0801%" height="15" fill="rgb(207,118,40)" fg:x="687" fg:w="1"/><text x="55.2540%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.0040%" y="437" width="0.0801%" height="15" fill="rgb(207,126,20)" fg:x="687" fg:w="1"/><text x="55.2540%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.0040%" y="421" width="0.0801%" height="15" fill="rgb(232,15,46)" fg:x="687" fg:w="1"/><text x="55.2540%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.0040%" y="405" width="0.0801%" height="15" fill="rgb(254,33,30)" fg:x="687" fg:w="1"/><text x="55.2540%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.0040%" y="389" width="0.0801%" height="15" fill="rgb(233,92,20)" fg:x="687" fg:w="1"/><text x="55.2540%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.0040%" y="373" width="0.0801%" height="15" fill="rgb(225,195,54)" fg:x="687" fg:w="1"/><text x="55.2540%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.0040%" y="357" width="0.0801%" height="15" fill="rgb(208,196,7)" fg:x="687" fg:w="1"/><text x="55.2540%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.0040%" y="341" width="0.0801%" height="15" fill="rgb(253,19,35)" fg:x="687" fg:w="1"/><text x="55.2540%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="55.0040%" y="325" width="0.0801%" height="15" fill="rgb(228,180,1)" fg:x="687" fg:w="1"/><text x="55.2540%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="55.0040%" y="309" width="0.0801%" height="15" fill="rgb(248,35,18)" fg:x="687" fg:w="1"/><text x="55.2540%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="55.0841%" y="565" width="0.0801%" height="15" fill="rgb(220,34,8)" fg:x="688" fg:w="1"/><text x="55.3341%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.1641%" y="517" width="0.0801%" height="15" fill="rgb(219,223,17)" fg:x="689" fg:w="1"/><text x="55.4141%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2442%" y="485" width="0.0801%" height="15" fill="rgb(223,183,15)" fg:x="690" fg:w="1"/><text x="55.4942%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2442%" y="469" width="0.0801%" height="15" fill="rgb(253,184,45)" fg:x="690" fg:w="1"/><text x="55.4942%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2442%" y="453" width="0.0801%" height="15" fill="rgb(207,97,29)" fg:x="690" fg:w="1"/><text x="55.4942%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2442%" y="437" width="0.0801%" height="15" fill="rgb(250,170,27)" fg:x="690" fg:w="1"/><text x="55.4942%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2442%" y="421" width="0.0801%" height="15" fill="rgb(206,178,17)" fg:x="690" fg:w="1"/><text x="55.4942%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="55.1641%" y="533" width="0.4003%" height="15" fill="rgb(213,92,46)" fg:x="689" fg:w="5"/><text x="55.4141%" y="543.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="55.2442%" y="517" width="0.3203%" height="15" fill="rgb(223,114,30)" fg:x="690" fg:w="4"/><text x="55.4942%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="55.2442%" y="501" width="0.3203%" height="15" fill="rgb(207,228,9)" fg:x="690" fg:w="4"/><text x="55.4942%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="55.3243%" y="485" width="0.2402%" height="15" fill="rgb(205,70,25)" fg:x="691" fg:w="3"/><text x="55.5743%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="55.3243%" y="469" width="0.2402%" height="15" fill="rgb(252,45,30)" fg:x="691" fg:w="3"/><text x="55.5743%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="55.3243%" y="453" width="0.2402%" height="15" fill="rgb(219,185,54)" fg:x="691" fg:w="3"/><text x="55.5743%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.4043%" y="437" width="0.1601%" height="15" fill="rgb(219,208,54)" fg:x="692" fg:w="2"/><text x="55.6543%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="55.4043%" y="421" width="0.1601%" height="15" fill="rgb(207,164,54)" fg:x="692" fg:w="2"/><text x="55.6543%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.4043%" y="405" width="0.1601%" height="15" fill="rgb(240,155,22)" fg:x="692" fg:w="2"/><text x="55.6543%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.4043%" y="389" width="0.1601%" height="15" fill="rgb(217,127,14)" fg:x="692" fg:w="2"/><text x="55.6543%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.4043%" y="373" width="0.1601%" height="15" fill="rgb(232,179,42)" fg:x="692" fg:w="2"/><text x="55.6543%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.5645%" y="485" width="0.0801%" height="15" fill="rgb(247,55,45)" fg:x="694" fg:w="1"/><text x="55.8145%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="55.5645%" y="469" width="0.0801%" height="15" fill="rgb(217,11,18)" fg:x="694" fg:w="1"/><text x="55.8145%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.5645%" y="453" width="0.0801%" height="15" fill="rgb(227,127,4)" fg:x="694" fg:w="1"/><text x="55.8145%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.5645%" y="437" width="0.0801%" height="15" fill="rgb(217,97,45)" fg:x="694" fg:w="1"/><text x="55.8145%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.7246%" y="389" width="0.0801%" height="15" fill="rgb(250,135,20)" fg:x="696" fg:w="1"/><text x="55.9746%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.7246%" y="373" width="0.0801%" height="15" fill="rgb(224,213,26)" fg:x="696" fg:w="1"/><text x="55.9746%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.8046%" y="325" width="0.0801%" height="15" fill="rgb(237,86,25)" fg:x="697" fg:w="1"/><text x="56.0546%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (10 samples, 0.80%)</title><rect x="55.1641%" y="565" width="0.8006%" height="15" fill="rgb(251,105,18)" fg:x="689" fg:w="10"/><text x="55.4141%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="55.1641%" y="549" width="0.8006%" height="15" fill="rgb(246,124,25)" fg:x="689" fg:w="10"/><text x="55.4141%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="55.5645%" y="533" width="0.4003%" height="15" fill="rgb(210,90,3)" fg:x="694" fg:w="5"/><text x="55.8145%" y="543.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="55.5645%" y="517" width="0.4003%" height="15" fill="rgb(249,40,31)" fg:x="694" fg:w="5"/><text x="55.8145%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="55.5645%" y="501" width="0.4003%" height="15" fill="rgb(231,228,1)" fg:x="694" fg:w="5"/><text x="55.8145%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="55.6445%" y="485" width="0.3203%" height="15" fill="rgb(242,25,49)" fg:x="695" fg:w="4"/><text x="55.8945%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="55.6445%" y="469" width="0.3203%" height="15" fill="rgb(224,142,22)" fg:x="695" fg:w="4"/><text x="55.8945%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="55.6445%" y="453" width="0.3203%" height="15" fill="rgb(228,106,29)" fg:x="695" fg:w="4"/><text x="55.8945%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="55.6445%" y="437" width="0.3203%" height="15" fill="rgb(207,2,15)" fg:x="695" fg:w="4"/><text x="55.8945%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="55.6445%" y="421" width="0.3203%" height="15" fill="rgb(231,43,37)" fg:x="695" fg:w="4"/><text x="55.8945%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="55.6445%" y="405" width="0.3203%" height="15" fill="rgb(245,193,12)" fg:x="695" fg:w="4"/><text x="55.8945%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.8046%" y="389" width="0.1601%" height="15" fill="rgb(246,9,49)" fg:x="697" fg:w="2"/><text x="56.0546%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.8046%" y="373" width="0.1601%" height="15" fill="rgb(218,50,36)" fg:x="697" fg:w="2"/><text x="56.0546%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.8046%" y="357" width="0.1601%" height="15" fill="rgb(225,206,16)" fg:x="697" fg:w="2"/><text x="56.0546%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.8046%" y="341" width="0.1601%" height="15" fill="rgb(242,52,5)" fg:x="697" fg:w="2"/><text x="56.0546%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="55.8847%" y="325" width="0.0801%" height="15" fill="rgb(217,158,11)" fg:x="698" fg:w="1"/><text x="56.1347%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="55.8847%" y="309" width="0.0801%" height="15" fill="rgb(242,144,22)" fg:x="698" fg:w="1"/><text x="56.1347%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="56.2050%" y="549" width="0.0801%" height="15" fill="rgb(236,191,3)" fg:x="702" fg:w="1"/><text x="56.4550%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="56.2050%" y="533" width="0.0801%" height="15" fill="rgb(241,22,19)" fg:x="702" fg:w="1"/><text x="56.4550%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.2050%" y="517" width="0.0801%" height="15" fill="rgb(205,217,44)" fg:x="702" fg:w="1"/><text x="56.4550%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="56.2850%" y="517" width="0.1601%" height="15" fill="rgb(231,53,3)" fg:x="703" fg:w="2"/><text x="56.5350%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="56.2850%" y="501" width="0.1601%" height="15" fill="rgb(207,13,22)" fg:x="703" fg:w="2"/><text x="56.5350%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="56.2850%" y="485" width="0.1601%" height="15" fill="rgb(234,62,29)" fg:x="703" fg:w="2"/><text x="56.5350%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.3651%" y="469" width="0.0801%" height="15" fill="rgb(226,175,44)" fg:x="704" fg:w="1"/><text x="56.6151%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.3651%" y="453" width="0.0801%" height="15" fill="rgb(239,177,6)" fg:x="704" fg:w="1"/><text x="56.6151%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.3651%" y="437" width="0.0801%" height="15" fill="rgb(249,125,15)" fg:x="704" fg:w="1"/><text x="56.6151%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.3651%" y="421" width="0.0801%" height="15" fill="rgb(210,201,5)" fg:x="704" fg:w="1"/><text x="56.6151%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.3651%" y="405" width="0.0801%" height="15" fill="rgb(210,14,6)" fg:x="704" fg:w="1"/><text x="56.6151%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.3651%" y="389" width="0.0801%" height="15" fill="rgb(239,141,15)" fg:x="704" fg:w="1"/><text x="56.6151%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.3651%" y="373" width="0.0801%" height="15" fill="rgb(235,75,9)" fg:x="704" fg:w="1"/><text x="56.6151%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.3651%" y="357" width="0.0801%" height="15" fill="rgb(246,122,37)" fg:x="704" fg:w="1"/><text x="56.6151%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.3651%" y="341" width="0.0801%" height="15" fill="rgb(235,75,52)" fg:x="704" fg:w="1"/><text x="56.6151%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.3651%" y="325" width="0.0801%" height="15" fill="rgb(235,179,12)" fg:x="704" fg:w="1"/><text x="56.6151%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.3651%" y="309" width="0.0801%" height="15" fill="rgb(223,20,9)" fg:x="704" fg:w="1"/><text x="56.6151%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.3651%" y="293" width="0.0801%" height="15" fill="rgb(223,75,22)" fg:x="704" fg:w="1"/><text x="56.6151%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.3651%" y="277" width="0.0801%" height="15" fill="rgb(248,148,18)" fg:x="704" fg:w="1"/><text x="56.6151%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.3651%" y="261" width="0.0801%" height="15" fill="rgb(225,103,8)" fg:x="704" fg:w="1"/><text x="56.6151%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.3651%" y="245" width="0.0801%" height="15" fill="rgb(237,168,17)" fg:x="704" fg:w="1"/><text x="56.6151%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.3651%" y="229" width="0.0801%" height="15" fill="rgb(215,192,38)" fg:x="704" fg:w="1"/><text x="56.6151%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.3651%" y="213" width="0.0801%" height="15" fill="rgb(237,69,28)" fg:x="704" fg:w="1"/><text x="56.6151%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.4452%" y="469" width="0.0801%" height="15" fill="rgb(254,167,32)" fg:x="705" fg:w="1"/><text x="56.6952%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.4452%" y="453" width="0.0801%" height="15" fill="rgb(250,81,30)" fg:x="705" fg:w="1"/><text x="56.6952%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.4452%" y="437" width="0.0801%" height="15" fill="rgb(240,68,52)" fg:x="705" fg:w="1"/><text x="56.6952%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.4452%" y="421" width="0.0801%" height="15" fill="rgb(205,97,42)" fg:x="705" fg:w="1"/><text x="56.6952%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.4452%" y="405" width="0.0801%" height="15" fill="rgb(217,10,22)" fg:x="705" fg:w="1"/><text x="56.6952%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.4452%" y="389" width="0.0801%" height="15" fill="rgb(216,21,26)" fg:x="705" fg:w="1"/><text x="56.6952%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.4452%" y="373" width="0.0801%" height="15" fill="rgb(239,0,36)" fg:x="705" fg:w="1"/><text x="56.6952%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.4452%" y="357" width="0.0801%" height="15" fill="rgb(216,162,28)" fg:x="705" fg:w="1"/><text x="56.6952%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.4452%" y="341" width="0.0801%" height="15" fill="rgb(246,22,39)" fg:x="705" fg:w="1"/><text x="56.6952%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.4452%" y="325" width="0.0801%" height="15" fill="rgb(222,84,49)" fg:x="705" fg:w="1"/><text x="56.6952%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="56.4452%" y="309" width="0.0801%" height="15" fill="rgb(250,38,34)" fg:x="705" fg:w="1"/><text x="56.6952%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="56.4452%" y="293" width="0.0801%" height="15" fill="rgb(236,0,38)" fg:x="705" fg:w="1"/><text x="56.6952%" y="303.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="56.2850%" y="549" width="0.4003%" height="15" fill="rgb(237,205,54)" fg:x="703" fg:w="5"/><text x="56.5350%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="56.2850%" y="533" width="0.4003%" height="15" fill="rgb(221,80,35)" fg:x="703" fg:w="5"/><text x="56.5350%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="56.4452%" y="517" width="0.2402%" height="15" fill="rgb(237,204,22)" fg:x="705" fg:w="3"/><text x="56.6952%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="56.4452%" y="501" width="0.2402%" height="15" fill="rgb(213,108,15)" fg:x="705" fg:w="3"/><text x="56.6952%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="56.4452%" y="485" width="0.2402%" height="15" fill="rgb(251,187,9)" fg:x="705" fg:w="3"/><text x="56.6952%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.5252%" y="469" width="0.1601%" height="15" fill="rgb(250,61,9)" fg:x="706" fg:w="2"/><text x="56.7752%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.5252%" y="453" width="0.1601%" height="15" fill="rgb(230,131,33)" fg:x="706" fg:w="2"/><text x="56.7752%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.6053%" y="437" width="0.0801%" height="15" fill="rgb(239,117,11)" fg:x="707" fg:w="1"/><text x="56.8553%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.6053%" y="421" width="0.0801%" height="15" fill="rgb(222,112,44)" fg:x="707" fg:w="1"/><text x="56.8553%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="56.6053%" y="405" width="0.0801%" height="15" fill="rgb(251,33,25)" fg:x="707" fg:w="1"/><text x="56.8553%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.6053%" y="389" width="0.0801%" height="15" fill="rgb(208,171,34)" fg:x="707" fg:w="1"/><text x="56.8553%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.6053%" y="373" width="0.0801%" height="15" fill="rgb(250,166,54)" fg:x="707" fg:w="1"/><text x="56.8553%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.6053%" y="357" width="0.0801%" height="15" fill="rgb(212,148,2)" fg:x="707" fg:w="1"/><text x="56.8553%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.6053%" y="341" width="0.0801%" height="15" fill="rgb(224,92,39)" fg:x="707" fg:w="1"/><text x="56.8553%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.6853%" y="533" width="0.0801%" height="15" fill="rgb(250,28,16)" fg:x="708" fg:w="1"/><text x="56.9353%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.6853%" y="517" width="0.0801%" height="15" fill="rgb(227,128,26)" fg:x="708" fg:w="1"/><text x="56.9353%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.6853%" y="501" width="0.0801%" height="15" fill="rgb(248,66,7)" fg:x="708" fg:w="1"/><text x="56.9353%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.6853%" y="485" width="0.0801%" height="15" fill="rgb(215,124,51)" fg:x="708" fg:w="1"/><text x="56.9353%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.6853%" y="469" width="0.0801%" height="15" fill="rgb(207,91,1)" fg:x="708" fg:w="1"/><text x="56.9353%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.6853%" y="453" width="0.0801%" height="15" fill="rgb(217,207,38)" fg:x="708" fg:w="1"/><text x="56.9353%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.6853%" y="437" width="0.0801%" height="15" fill="rgb(240,118,9)" fg:x="708" fg:w="1"/><text x="56.9353%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.6853%" y="421" width="0.0801%" height="15" fill="rgb(224,147,4)" fg:x="708" fg:w="1"/><text x="56.9353%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.6853%" y="405" width="0.0801%" height="15" fill="rgb(205,105,13)" fg:x="708" fg:w="1"/><text x="56.9353%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.6853%" y="389" width="0.0801%" height="15" fill="rgb(251,78,39)" fg:x="708" fg:w="1"/><text x="56.9353%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.6853%" y="373" width="0.0801%" height="15" fill="rgb(225,60,44)" fg:x="708" fg:w="1"/><text x="56.9353%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.6853%" y="357" width="0.0801%" height="15" fill="rgb(221,228,40)" fg:x="708" fg:w="1"/><text x="56.9353%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.6853%" y="341" width="0.0801%" height="15" fill="rgb(215,104,30)" fg:x="708" fg:w="1"/><text x="56.9353%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7654%" y="485" width="0.0801%" height="15" fill="rgb(206,183,3)" fg:x="709" fg:w="1"/><text x="57.0154%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7654%" y="469" width="0.0801%" height="15" fill="rgb(236,199,25)" fg:x="709" fg:w="1"/><text x="57.0154%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.7654%" y="453" width="0.0801%" height="15" fill="rgb(230,107,29)" fg:x="709" fg:w="1"/><text x="57.0154%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.7654%" y="437" width="0.0801%" height="15" fill="rgb(216,12,37)" fg:x="709" fg:w="1"/><text x="57.0154%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.7654%" y="421" width="0.0801%" height="15" fill="rgb(238,165,28)" fg:x="709" fg:w="1"/><text x="57.0154%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.7654%" y="405" width="0.0801%" height="15" fill="rgb(226,173,5)" fg:x="709" fg:w="1"/><text x="57.0154%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.7654%" y="389" width="0.0801%" height="15" fill="rgb(229,9,37)" fg:x="709" fg:w="1"/><text x="57.0154%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.7654%" y="373" width="0.0801%" height="15" fill="rgb(252,194,43)" fg:x="709" fg:w="1"/><text x="57.0154%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.7654%" y="357" width="0.0801%" height="15" fill="rgb(215,58,45)" fg:x="709" fg:w="1"/><text x="57.0154%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.7654%" y="341" width="0.0801%" height="15" fill="rgb(218,34,51)" fg:x="709" fg:w="1"/><text x="57.0154%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.7654%" y="325" width="0.0801%" height="15" fill="rgb(230,104,27)" fg:x="709" fg:w="1"/><text x="57.0154%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.7654%" y="309" width="0.0801%" height="15" fill="rgb(250,9,6)" fg:x="709" fg:w="1"/><text x="57.0154%" y="319.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.7654%" y="517" width="0.1601%" height="15" fill="rgb(245,10,16)" fg:x="709" fg:w="2"/><text x="57.0154%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.7654%" y="501" width="0.1601%" height="15" fill="rgb(227,182,27)" fg:x="709" fg:w="2"/><text x="57.0154%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.8455%" y="485" width="0.0801%" height="15" fill="rgb(225,91,37)" fg:x="710" fg:w="1"/><text x="57.0955%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.8455%" y="469" width="0.0801%" height="15" fill="rgb(240,16,41)" fg:x="710" fg:w="1"/><text x="57.0955%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.8455%" y="453" width="0.0801%" height="15" fill="rgb(214,108,54)" fg:x="710" fg:w="1"/><text x="57.0955%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.8455%" y="437" width="0.0801%" height="15" fill="rgb(253,65,28)" fg:x="710" fg:w="1"/><text x="57.0955%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.8455%" y="421" width="0.0801%" height="15" fill="rgb(246,105,4)" fg:x="710" fg:w="1"/><text x="57.0955%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.8455%" y="405" width="0.0801%" height="15" fill="rgb(223,163,37)" fg:x="710" fg:w="1"/><text x="57.0955%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.8455%" y="389" width="0.0801%" height="15" fill="rgb(206,202,31)" fg:x="710" fg:w="1"/><text x="57.0955%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.8455%" y="373" width="0.0801%" height="15" fill="rgb(241,202,54)" fg:x="710" fg:w="1"/><text x="57.0955%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.8455%" y="357" width="0.0801%" height="15" fill="rgb(220,22,45)" fg:x="710" fg:w="1"/><text x="57.0955%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.8455%" y="341" width="0.0801%" height="15" fill="rgb(234,215,40)" fg:x="710" fg:w="1"/><text x="57.0955%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.8455%" y="325" width="0.0801%" height="15" fill="rgb(220,3,5)" fg:x="710" fg:w="1"/><text x="57.0955%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.8455%" y="309" width="0.0801%" height="15" fill="rgb(210,8,15)" fg:x="710" fg:w="1"/><text x="57.0955%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.8455%" y="293" width="0.0801%" height="15" fill="rgb(218,113,45)" fg:x="710" fg:w="1"/><text x="57.0955%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.8455%" y="277" width="0.0801%" height="15" fill="rgb(249,208,10)" fg:x="710" fg:w="1"/><text x="57.0955%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="56.9255%" y="437" width="0.0801%" height="15" fill="rgb(250,145,17)" fg:x="711" fg:w="1"/><text x="57.1755%" y="447.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="56.9255%" y="421" width="0.0801%" height="15" fill="rgb(254,24,13)" fg:x="711" fg:w="1"/><text x="57.1755%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.9255%" y="405" width="0.0801%" height="15" fill="rgb(244,36,15)" fg:x="711" fg:w="1"/><text x="57.1755%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.9255%" y="389" width="0.0801%" height="15" fill="rgb(228,168,26)" fg:x="711" fg:w="1"/><text x="57.1755%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.9255%" y="373" width="0.0801%" height="15" fill="rgb(214,145,10)" fg:x="711" fg:w="1"/><text x="57.1755%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.9255%" y="357" width="0.0801%" height="15" fill="rgb(232,59,25)" fg:x="711" fg:w="1"/><text x="57.1755%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.9255%" y="341" width="0.0801%" height="15" fill="rgb(254,181,2)" fg:x="711" fg:w="1"/><text x="57.1755%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.9255%" y="325" width="0.0801%" height="15" fill="rgb(221,139,49)" fg:x="711" fg:w="1"/><text x="57.1755%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="56.9255%" y="517" width="0.1601%" height="15" fill="rgb(235,84,36)" fg:x="711" fg:w="2"/><text x="57.1755%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="56.9255%" y="501" width="0.1601%" height="15" fill="rgb(254,32,49)" fg:x="711" fg:w="2"/><text x="57.1755%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="56.9255%" y="485" width="0.1601%" height="15" fill="rgb(214,136,49)" fg:x="711" fg:w="2"/><text x="57.1755%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="56.9255%" y="469" width="0.1601%" height="15" fill="rgb(206,113,54)" fg:x="711" fg:w="2"/><text x="57.1755%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="56.9255%" y="453" width="0.1601%" height="15" fill="rgb(226,78,17)" fg:x="711" fg:w="2"/><text x="57.1755%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.0056%" y="437" width="0.0801%" height="15" fill="rgb(249,189,19)" fg:x="712" fg:w="1"/><text x="57.2556%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="57.0857%" y="517" width="0.0801%" height="15" fill="rgb(211,82,26)" fg:x="713" fg:w="1"/><text x="57.3357%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="57.0857%" y="501" width="0.0801%" height="15" fill="rgb(206,131,52)" fg:x="713" fg:w="1"/><text x="57.3357%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.0857%" y="485" width="0.0801%" height="15" fill="rgb(223,51,24)" fg:x="713" fg:w="1"/><text x="57.3357%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="57.0857%" y="469" width="0.0801%" height="15" fill="rgb(235,93,36)" fg:x="713" fg:w="1"/><text x="57.3357%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="57.0857%" y="453" width="0.0801%" height="15" fill="rgb(219,118,14)" fg:x="713" fg:w="1"/><text x="57.3357%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="57.2458%" y="485" width="0.0801%" height="15" fill="rgb(240,145,10)" fg:x="715" fg:w="1"/><text x="57.4958%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.2458%" y="469" width="0.0801%" height="15" fill="rgb(241,104,15)" fg:x="715" fg:w="1"/><text x="57.4958%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.2458%" y="453" width="0.0801%" height="15" fill="rgb(248,117,21)" fg:x="715" fg:w="1"/><text x="57.4958%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (10 samples, 0.80%)</title><rect x="56.6853%" y="549" width="0.8006%" height="15" fill="rgb(250,184,34)" fg:x="708" fg:w="10"/><text x="56.9353%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="56.7654%" y="533" width="0.7206%" height="15" fill="rgb(218,169,23)" fg:x="709" fg:w="9"/><text x="57.0154%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (4 samples, 0.32%)</title><rect x="57.1657%" y="517" width="0.3203%" height="15" fill="rgb(214,33,53)" fg:x="714" fg:w="4"/><text x="57.4157%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="57.1657%" y="501" width="0.3203%" height="15" fill="rgb(239,78,4)" fg:x="714" fg:w="4"/><text x="57.4157%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="57.3259%" y="485" width="0.1601%" height="15" fill="rgb(250,25,23)" fg:x="716" fg:w="2"/><text x="57.5759%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="57.3259%" y="469" width="0.1601%" height="15" fill="rgb(220,205,51)" fg:x="716" fg:w="2"/><text x="57.5759%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="57.4059%" y="453" width="0.0801%" height="15" fill="rgb(252,115,2)" fg:x="717" fg:w="1"/><text x="57.6559%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.4059%" y="437" width="0.0801%" height="15" fill="rgb(222,106,48)" fg:x="717" fg:w="1"/><text x="57.6559%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.4059%" y="421" width="0.0801%" height="15" fill="rgb(225,77,33)" fg:x="717" fg:w="1"/><text x="57.6559%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.4059%" y="405" width="0.0801%" height="15" fill="rgb(250,135,2)" fg:x="717" fg:w="1"/><text x="57.6559%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.5661%" y="517" width="0.0801%" height="15" fill="rgb(221,217,54)" fg:x="719" fg:w="1"/><text x="57.8161%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.5661%" y="501" width="0.0801%" height="15" fill="rgb(233,12,6)" fg:x="719" fg:w="1"/><text x="57.8161%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.6461%" y="517" width="0.1601%" height="15" fill="rgb(251,10,27)" fg:x="720" fg:w="2"/><text x="57.8961%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.8062%" y="485" width="0.0801%" height="15" fill="rgb(214,20,35)" fg:x="722" fg:w="1"/><text x="58.0562%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (7 samples, 0.56%)</title><rect x="57.4860%" y="549" width="0.5604%" height="15" fill="rgb(249,13,18)" fg:x="718" fg:w="7"/><text x="57.7360%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="57.4860%" y="533" width="0.5604%" height="15" fill="rgb(251,115,18)" fg:x="718" fg:w="7"/><text x="57.7360%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="57.8062%" y="517" width="0.2402%" height="15" fill="rgb(219,91,11)" fg:x="722" fg:w="3"/><text x="58.0562%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="57.8062%" y="501" width="0.2402%" height="15" fill="rgb(238,130,14)" fg:x="722" fg:w="3"/><text x="58.0562%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="57.8863%" y="485" width="0.1601%" height="15" fill="rgb(216,197,46)" fg:x="723" fg:w="2"/><text x="58.1363%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="57.8863%" y="469" width="0.1601%" height="15" fill="rgb(239,113,46)" fg:x="723" fg:w="2"/><text x="58.1363%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="57.8863%" y="453" width="0.1601%" height="15" fill="rgb(220,76,52)" fg:x="723" fg:w="2"/><text x="58.1363%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="57.8863%" y="437" width="0.1601%" height="15" fill="rgb(247,167,28)" fg:x="723" fg:w="2"/><text x="58.1363%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.0464%" y="453" width="0.0801%" height="15" fill="rgb(228,6,44)" fg:x="725" fg:w="1"/><text x="58.2964%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.0464%" y="437" width="0.0801%" height="15" fill="rgb(214,75,23)" fg:x="725" fg:w="1"/><text x="58.2964%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.0464%" y="421" width="0.0801%" height="15" fill="rgb(241,211,28)" fg:x="725" fg:w="1"/><text x="58.2964%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.1265%" y="453" width="0.0801%" height="15" fill="rgb(216,147,39)" fg:x="726" fg:w="1"/><text x="58.3765%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="58.1265%" y="437" width="0.0801%" height="15" fill="rgb(237,121,45)" fg:x="726" fg:w="1"/><text x="58.3765%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.1265%" y="421" width="0.0801%" height="15" fill="rgb(214,115,15)" fg:x="726" fg:w="1"/><text x="58.3765%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.1265%" y="405" width="0.0801%" height="15" fill="rgb(253,132,27)" fg:x="726" fg:w="1"/><text x="58.3765%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.1265%" y="389" width="0.0801%" height="15" fill="rgb(222,56,1)" fg:x="726" fg:w="1"/><text x="58.3765%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="58.0464%" y="501" width="0.3203%" height="15" fill="rgb(216,99,46)" fg:x="725" fg:w="4"/><text x="58.2964%" y="511.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="58.0464%" y="485" width="0.3203%" height="15" fill="rgb(232,1,9)" fg:x="725" fg:w="4"/><text x="58.2964%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="58.0464%" y="469" width="0.3203%" height="15" fill="rgb(215,41,52)" fg:x="725" fg:w="4"/><text x="58.2964%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.2066%" y="453" width="0.1601%" height="15" fill="rgb(223,107,41)" fg:x="727" fg:w="2"/><text x="58.4566%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.2066%" y="437" width="0.1601%" height="15" fill="rgb(208,151,32)" fg:x="727" fg:w="2"/><text x="58.4566%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.2066%" y="421" width="0.1601%" height="15" fill="rgb(229,32,3)" fg:x="727" fg:w="2"/><text x="58.4566%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.2066%" y="405" width="0.1601%" height="15" fill="rgb(234,186,36)" fg:x="727" fg:w="2"/><text x="58.4566%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="58.2066%" y="389" width="0.1601%" height="15" fill="rgb(216,9,5)" fg:x="727" fg:w="2"/><text x="58.4566%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.2066%" y="373" width="0.1601%" height="15" fill="rgb(226,151,21)" fg:x="727" fg:w="2"/><text x="58.4566%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.2866%" y="357" width="0.0801%" height="15" fill="rgb(210,130,28)" fg:x="728" fg:w="1"/><text x="58.5366%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.2866%" y="341" width="0.0801%" height="15" fill="rgb(239,58,31)" fg:x="728" fg:w="1"/><text x="58.5366%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.2866%" y="325" width="0.0801%" height="15" fill="rgb(213,14,0)" fg:x="728" fg:w="1"/><text x="58.5366%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.2866%" y="309" width="0.0801%" height="15" fill="rgb(228,97,38)" fg:x="728" fg:w="1"/><text x="58.5366%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="58.2866%" y="293" width="0.0801%" height="15" fill="rgb(248,9,13)" fg:x="728" fg:w="1"/><text x="58.5366%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="58.2866%" y="277" width="0.0801%" height="15" fill="rgb(233,149,17)" fg:x="728" fg:w="1"/><text x="58.5366%" y="287.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="58.2866%" y="261" width="0.0801%" height="15" fill="rgb(233,127,53)" fg:x="728" fg:w="1"/><text x="58.5366%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.4468%" y="437" width="0.0801%" height="15" fill="rgb(207,120,37)" fg:x="730" fg:w="1"/><text x="58.6968%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.4468%" y="421" width="0.0801%" height="15" fill="rgb(210,65,38)" fg:x="730" fg:w="1"/><text x="58.6968%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.4468%" y="405" width="0.0801%" height="15" fill="rgb(229,206,39)" fg:x="730" fg:w="1"/><text x="58.6968%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.4468%" y="389" width="0.0801%" height="15" fill="rgb(237,11,35)" fg:x="730" fg:w="1"/><text x="58.6968%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.4468%" y="373" width="0.0801%" height="15" fill="rgb(237,159,38)" fg:x="730" fg:w="1"/><text x="58.6968%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.4468%" y="357" width="0.0801%" height="15" fill="rgb(239,79,36)" fg:x="730" fg:w="1"/><text x="58.6968%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.4468%" y="341" width="0.0801%" height="15" fill="rgb(231,163,51)" fg:x="730" fg:w="1"/><text x="58.6968%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.4468%" y="325" width="0.0801%" height="15" fill="rgb(226,68,29)" fg:x="730" fg:w="1"/><text x="58.6968%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.4468%" y="309" width="0.0801%" height="15" fill="rgb(250,192,3)" fg:x="730" fg:w="1"/><text x="58.6968%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.4468%" y="293" width="0.0801%" height="15" fill="rgb(206,11,13)" fg:x="730" fg:w="1"/><text x="58.6968%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.4468%" y="277" width="0.0801%" height="15" fill="rgb(234,128,26)" fg:x="730" fg:w="1"/><text x="58.6968%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.4468%" y="261" width="0.0801%" height="15" fill="rgb(226,134,12)" fg:x="730" fg:w="1"/><text x="58.6968%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.4468%" y="245" width="0.0801%" height="15" fill="rgb(240,60,15)" fg:x="730" fg:w="1"/><text x="58.6968%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.4468%" y="229" width="0.0801%" height="15" fill="rgb(222,112,11)" fg:x="730" fg:w="1"/><text x="58.6968%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.4468%" y="213" width="0.0801%" height="15" fill="rgb(231,207,44)" fg:x="730" fg:w="1"/><text x="58.6968%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.4468%" y="453" width="0.1601%" height="15" fill="rgb(250,222,54)" fg:x="730" fg:w="2"/><text x="58.6968%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.5268%" y="437" width="0.0801%" height="15" fill="rgb(243,223,15)" fg:x="731" fg:w="1"/><text x="58.7768%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.5268%" y="421" width="0.0801%" height="15" fill="rgb(239,2,5)" fg:x="731" fg:w="1"/><text x="58.7768%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.5268%" y="405" width="0.0801%" height="15" fill="rgb(241,83,27)" fg:x="731" fg:w="1"/><text x="58.7768%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.5268%" y="389" width="0.0801%" height="15" fill="rgb(223,175,51)" fg:x="731" fg:w="1"/><text x="58.7768%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.5268%" y="373" width="0.0801%" height="15" fill="rgb(209,11,47)" fg:x="731" fg:w="1"/><text x="58.7768%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.64%)</title><rect x="58.0464%" y="549" width="0.6405%" height="15" fill="rgb(249,60,43)" fg:x="725" fg:w="8"/><text x="58.2964%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="58.0464%" y="533" width="0.6405%" height="15" fill="rgb(244,84,47)" fg:x="725" fg:w="8"/><text x="58.2964%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="58.0464%" y="517" width="0.6405%" height="15" fill="rgb(241,110,24)" fg:x="725" fg:w="8"/><text x="58.2964%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="58.3667%" y="501" width="0.3203%" height="15" fill="rgb(236,79,1)" fg:x="729" fg:w="4"/><text x="58.6167%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="58.4468%" y="485" width="0.2402%" height="15" fill="rgb(210,152,4)" fg:x="730" fg:w="3"/><text x="58.6968%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="58.4468%" y="469" width="0.2402%" height="15" fill="rgb(218,71,19)" fg:x="730" fg:w="3"/><text x="58.6968%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.6069%" y="453" width="0.0801%" height="15" fill="rgb(207,161,51)" fg:x="732" fg:w="1"/><text x="58.8569%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="58.6069%" y="437" width="0.0801%" height="15" fill="rgb(219,84,54)" fg:x="732" fg:w="1"/><text x="58.8569%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.6069%" y="421" width="0.0801%" height="15" fill="rgb(243,172,34)" fg:x="732" fg:w="1"/><text x="58.8569%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.6069%" y="405" width="0.0801%" height="15" fill="rgb(233,181,1)" fg:x="732" fg:w="1"/><text x="58.8569%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.6069%" y="389" width="0.0801%" height="15" fill="rgb(236,21,18)" fg:x="732" fg:w="1"/><text x="58.8569%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.6069%" y="373" width="0.0801%" height="15" fill="rgb(244,165,15)" fg:x="732" fg:w="1"/><text x="58.8569%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.6069%" y="357" width="0.0801%" height="15" fill="rgb(235,75,19)" fg:x="732" fg:w="1"/><text x="58.8569%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.6069%" y="341" width="0.0801%" height="15" fill="rgb(217,229,29)" fg:x="732" fg:w="1"/><text x="58.8569%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="58.6869%" y="533" width="0.0801%" height="15" fill="rgb(250,200,19)" fg:x="733" fg:w="1"/><text x="58.9369%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="58.6869%" y="517" width="0.0801%" height="15" fill="rgb(218,195,36)" fg:x="733" fg:w="1"/><text x="58.9369%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="58.7670%" y="533" width="0.0801%" height="15" fill="rgb(206,183,32)" fg:x="734" fg:w="1"/><text x="59.0170%" y="543.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="58.8471%" y="453" width="0.0801%" height="15" fill="rgb(235,151,53)" fg:x="735" fg:w="1"/><text x="59.0971%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="58.8471%" y="437" width="0.0801%" height="15" fill="rgb(244,120,37)" fg:x="735" fg:w="1"/><text x="59.0971%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.8471%" y="421" width="0.0801%" height="15" fill="rgb(209,96,41)" fg:x="735" fg:w="1"/><text x="59.0971%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.8471%" y="405" width="0.0801%" height="15" fill="rgb(208,229,20)" fg:x="735" fg:w="1"/><text x="59.0971%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.8471%" y="389" width="0.0801%" height="15" fill="rgb(208,153,33)" fg:x="735" fg:w="1"/><text x="59.0971%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.8471%" y="373" width="0.0801%" height="15" fill="rgb(223,196,8)" fg:x="735" fg:w="1"/><text x="59.0971%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.8471%" y="357" width="0.0801%" height="15" fill="rgb(241,75,49)" fg:x="735" fg:w="1"/><text x="59.0971%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.8471%" y="341" width="0.0801%" height="15" fill="rgb(212,52,42)" fg:x="735" fg:w="1"/><text x="59.0971%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.8471%" y="325" width="0.0801%" height="15" fill="rgb(220,148,43)" fg:x="735" fg:w="1"/><text x="59.0971%" y="335.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (4 samples, 0.32%)</title><rect x="58.6869%" y="549" width="0.3203%" height="15" fill="rgb(228,88,15)" fg:x="733" fg:w="4"/><text x="58.9369%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="58.8471%" y="533" width="0.1601%" height="15" fill="rgb(213,87,14)" fg:x="735" fg:w="2"/><text x="59.0971%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="58.8471%" y="517" width="0.1601%" height="15" fill="rgb(220,198,31)" fg:x="735" fg:w="2"/><text x="59.0971%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="58.8471%" y="501" width="0.1601%" height="15" fill="rgb(223,165,38)" fg:x="735" fg:w="2"/><text x="59.0971%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="58.8471%" y="485" width="0.1601%" height="15" fill="rgb(247,56,48)" fg:x="735" fg:w="2"/><text x="59.0971%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="58.8471%" y="469" width="0.1601%" height="15" fill="rgb(222,150,13)" fg:x="735" fg:w="2"/><text x="59.0971%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="58.9271%" y="453" width="0.0801%" height="15" fill="rgb(218,214,11)" fg:x="736" fg:w="1"/><text x="59.1771%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="59.0072%" y="533" width="0.0801%" height="15" fill="rgb(246,111,16)" fg:x="737" fg:w="1"/><text x="59.2572%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.0873%" y="517" width="0.0801%" height="15" fill="rgb(250,127,26)" fg:x="738" fg:w="1"/><text x="59.3373%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.0873%" y="501" width="0.0801%" height="15" fill="rgb(237,156,23)" fg:x="738" fg:w="1"/><text x="59.3373%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.0873%" y="485" width="0.0801%" height="15" fill="rgb(215,143,51)" fg:x="738" fg:w="1"/><text x="59.3373%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.0873%" y="469" width="0.0801%" height="15" fill="rgb(209,119,39)" fg:x="738" fg:w="1"/><text x="59.3373%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.0873%" y="453" width="0.0801%" height="15" fill="rgb(228,181,16)" fg:x="738" fg:w="1"/><text x="59.3373%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.0873%" y="437" width="0.0801%" height="15" fill="rgb(236,113,51)" fg:x="738" fg:w="1"/><text x="59.3373%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.0873%" y="421" width="0.0801%" height="15" fill="rgb(223,132,1)" fg:x="738" fg:w="1"/><text x="59.3373%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.0873%" y="405" width="0.0801%" height="15" fill="rgb(227,4,54)" fg:x="738" fg:w="1"/><text x="59.3373%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.0873%" y="389" width="0.0801%" height="15" fill="rgb(254,72,52)" fg:x="738" fg:w="1"/><text x="59.3373%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.0873%" y="373" width="0.0801%" height="15" fill="rgb(252,104,52)" fg:x="738" fg:w="1"/><text x="59.3373%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.0873%" y="357" width="0.0801%" height="15" fill="rgb(251,146,26)" fg:x="738" fg:w="1"/><text x="59.3373%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.0873%" y="341" width="0.0801%" height="15" fill="rgb(214,146,19)" fg:x="738" fg:w="1"/><text x="59.3373%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.0873%" y="325" width="0.0801%" height="15" fill="rgb(242,222,1)" fg:x="738" fg:w="1"/><text x="59.3373%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.1673%" y="501" width="0.0801%" height="15" fill="rgb(220,178,32)" fg:x="739" fg:w="1"/><text x="59.4173%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.1673%" y="485" width="0.0801%" height="15" fill="rgb(220,50,48)" fg:x="739" fg:w="1"/><text x="59.4173%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="59.0873%" y="533" width="0.2402%" height="15" fill="rgb(207,117,22)" fg:x="738" fg:w="3"/><text x="59.3373%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="59.1673%" y="517" width="0.1601%" height="15" fill="rgb(247,195,50)" fg:x="739" fg:w="2"/><text x="59.4173%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="59.2474%" y="501" width="0.0801%" height="15" fill="rgb(206,50,39)" fg:x="740" fg:w="1"/><text x="59.4974%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="59.2474%" y="485" width="0.0801%" height="15" fill="rgb(236,141,29)" fg:x="740" fg:w="1"/><text x="59.4974%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.2474%" y="469" width="0.0801%" height="15" fill="rgb(247,18,44)" fg:x="740" fg:w="1"/><text x="59.4974%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.3275%" y="517" width="0.1601%" height="15" fill="rgb(243,179,46)" fg:x="741" fg:w="2"/><text x="59.5775%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.3275%" y="501" width="0.1601%" height="15" fill="rgb(241,178,53)" fg:x="741" fg:w="2"/><text x="59.5775%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4075%" y="485" width="0.0801%" height="15" fill="rgb(236,100,9)" fg:x="742" fg:w="1"/><text x="59.6575%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4075%" y="469" width="0.0801%" height="15" fill="rgb(208,180,29)" fg:x="742" fg:w="1"/><text x="59.6575%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.4075%" y="453" width="0.0801%" height="15" fill="rgb(241,204,36)" fg:x="742" fg:w="1"/><text x="59.6575%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.4075%" y="437" width="0.0801%" height="15" fill="rgb(248,106,5)" fg:x="742" fg:w="1"/><text x="59.6575%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.4075%" y="421" width="0.0801%" height="15" fill="rgb(245,13,49)" fg:x="742" fg:w="1"/><text x="59.6575%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="59.4075%" y="405" width="0.0801%" height="15" fill="rgb(221,209,34)" fg:x="742" fg:w="1"/><text x="59.6575%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.4075%" y="389" width="0.0801%" height="15" fill="rgb(224,83,31)" fg:x="742" fg:w="1"/><text x="59.6575%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="59.4876%" y="517" width="0.0801%" height="15" fill="rgb(218,63,22)" fg:x="743" fg:w="1"/><text x="59.7376%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="59.4876%" y="501" width="0.0801%" height="15" fill="rgb(214,167,5)" fg:x="743" fg:w="1"/><text x="59.7376%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.4876%" y="485" width="0.0801%" height="15" fill="rgb(243,13,0)" fg:x="743" fg:w="1"/><text x="59.7376%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (93 samples, 7.45%)</title><rect x="52.2018%" y="581" width="7.4460%" height="15" fill="rgb(237,20,46)" fg:x="652" fg:w="93"/><text x="52.4518%" y="591.50">&lt;plugins_c..</text></g><g><title>plugins_core::location::change_location (46 samples, 3.68%)</title><rect x="55.9648%" y="565" width="3.6829%" height="15" fill="rgb(240,94,48)" fg:x="699" fg:w="46"/><text x="56.2148%" y="575.50">plug..</text></g><g><title>plugins_core::location::Location::set (8 samples, 0.64%)</title><rect x="59.0072%" y="549" width="0.6405%" height="15" fill="rgb(205,160,17)" fg:x="737" fg:w="8"/><text x="59.2572%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="59.3275%" y="533" width="0.3203%" height="15" fill="rgb(234,42,33)" fg:x="741" fg:w="4"/><text x="59.5775%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="59.5677%" y="517" width="0.0801%" height="15" fill="rgb(215,166,5)" fg:x="744" fg:w="1"/><text x="59.8177%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="59.5677%" y="501" width="0.0801%" height="15" fill="rgb(215,9,6)" fg:x="744" fg:w="1"/><text x="59.8177%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="59.5677%" y="485" width="0.0801%" height="15" fill="rgb(212,53,6)" fg:x="744" fg:w="1"/><text x="59.8177%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="59.5677%" y="469" width="0.0801%" height="15" fill="rgb(249,157,19)" fg:x="744" fg:w="1"/><text x="59.8177%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5677%" y="453" width="0.0801%" height="15" fill="rgb(222,212,45)" fg:x="744" fg:w="1"/><text x="59.8177%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (254 samples, 20.34%)</title><rect x="39.3915%" y="757" width="20.3363%" height="15" fill="rgb(232,155,17)" fg:x="492" fg:w="254"/><text x="39.6415%" y="767.50">&lt;engine::session::Session as ker..</text></g><g><title>kernel::plugins::mw::apply_middleware (254 samples, 20.34%)</title><rect x="39.3915%" y="741" width="20.3363%" height="15" fill="rgb(212,159,50)" fg:x="492" fg:w="254"/><text x="39.6415%" y="751.50">kernel::plugins::mw::apply_middl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (254 samples, 20.34%)</title><rect x="39.3915%" y="725" width="20.3363%" height="15" fill="rgb(247,71,8)" fg:x="492" fg:w="254"/><text x="39.6415%" y="735.50">kernel::plugins::mw::MiddlewareN..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (254 samples, 20.34%)</title><rect x="39.3915%" y="709" width="20.3363%" height="15" fill="rgb(239,128,29)" fg:x="492" fg:w="254"/><text x="39.6415%" y="719.50">&lt;engine::session::ExpandSurround..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (227 samples, 18.17%)</title><rect x="41.5532%" y="693" width="18.1745%" height="15" fill="rgb(227,117,11)" fg:x="519" fg:w="227"/><text x="41.8032%" y="703.50">kernel::plugins::mw::Middlew..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (227 samples, 18.17%)</title><rect x="41.5532%" y="677" width="18.1745%" height="15" fill="rgb(247,183,4)" fg:x="519" fg:w="227"/><text x="41.8032%" y="687.50">&lt;plugins_dynlib::DynamicMidd..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (226 samples, 18.09%)</title><rect x="41.6333%" y="661" width="18.0945%" height="15" fill="rgb(211,161,41)" fg:x="520" fg:w="226"/><text x="41.8833%" y="671.50">kernel::plugins::mw::Middlew..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (226 samples, 18.09%)</title><rect x="41.6333%" y="645" width="18.0945%" height="15" fill="rgb(250,157,52)" fg:x="520" fg:w="226"/><text x="41.8833%" y="655.50">core::ops::function::FnOnce:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (226 samples, 18.09%)</title><rect x="41.6333%" y="629" width="18.0945%" height="15" fill="rgb(249,118,26)" fg:x="520" fg:w="226"/><text x="41.8833%" y="639.50">kernel::plugins::mw::Middlew..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (225 samples, 18.01%)</title><rect x="41.7134%" y="613" width="18.0144%" height="15" fill="rgb(234,52,37)" fg:x="521" fg:w="225"/><text x="41.9634%" y="623.50">core::ops::function::FnOnce:..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (225 samples, 18.01%)</title><rect x="41.7134%" y="597" width="18.0144%" height="15" fill="rgb(237,188,45)" fg:x="521" fg:w="225"/><text x="41.9634%" y="607.50">&lt;engine::session::state::Sta..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.6477%" y="581" width="0.0801%" height="15" fill="rgb(241,3,40)" fg:x="745" fg:w="1"/><text x="59.8977%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="59.8078%" y="677" width="0.1601%" height="15" fill="rgb(246,192,7)" fg:x="747" fg:w="2"/><text x="60.0578%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="59.8078%" y="661" width="0.1601%" height="15" fill="rgb(206,168,17)" fg:x="747" fg:w="2"/><text x="60.0578%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="59.8078%" y="645" width="0.1601%" height="15" fill="rgb(208,124,33)" fg:x="747" fg:w="2"/><text x="60.0578%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.8078%" y="629" width="0.1601%" height="15" fill="rgb(226,186,11)" fg:x="747" fg:w="2"/><text x="60.0578%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.8078%" y="613" width="0.1601%" height="15" fill="rgb(218,223,1)" fg:x="747" fg:w="2"/><text x="60.0578%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.8078%" y="597" width="0.1601%" height="15" fill="rgb(254,65,21)" fg:x="747" fg:w="2"/><text x="60.0578%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.8078%" y="581" width="0.1601%" height="15" fill="rgb(239,63,32)" fg:x="747" fg:w="2"/><text x="60.0578%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.8078%" y="565" width="0.1601%" height="15" fill="rgb(219,85,29)" fg:x="747" fg:w="2"/><text x="60.0578%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.9680%" y="661" width="0.0801%" height="15" fill="rgb(246,74,32)" fg:x="749" fg:w="1"/><text x="60.2180%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="59.8078%" y="709" width="0.4003%" height="15" fill="rgb(251,20,52)" fg:x="747" fg:w="5"/><text x="60.0578%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="59.8078%" y="693" width="0.4003%" height="15" fill="rgb(222,160,46)" fg:x="747" fg:w="5"/><text x="60.0578%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="59.9680%" y="677" width="0.2402%" height="15" fill="rgb(230,68,24)" fg:x="749" fg:w="3"/><text x="60.2180%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="60.0480%" y="661" width="0.1601%" height="15" fill="rgb(233,83,32)" fg:x="750" fg:w="2"/><text x="60.2980%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="60.0480%" y="645" width="0.1601%" height="15" fill="rgb(253,79,36)" fg:x="750" fg:w="2"/><text x="60.2980%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.0480%" y="629" width="0.1601%" height="15" fill="rgb(224,125,51)" fg:x="750" fg:w="2"/><text x="60.2980%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.0480%" y="613" width="0.1601%" height="15" fill="rgb(254,158,3)" fg:x="750" fg:w="2"/><text x="60.2980%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.1281%" y="597" width="0.0801%" height="15" fill="rgb(243,226,3)" fg:x="751" fg:w="1"/><text x="60.3781%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.1281%" y="581" width="0.0801%" height="15" fill="rgb(208,37,10)" fg:x="751" fg:w="1"/><text x="60.3781%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="60.1281%" y="565" width="0.0801%" height="15" fill="rgb(227,35,6)" fg:x="751" fg:w="1"/><text x="60.3781%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.1281%" y="549" width="0.0801%" height="15" fill="rgb(236,35,38)" fg:x="751" fg:w="1"/><text x="60.3781%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.1281%" y="533" width="0.0801%" height="15" fill="rgb(247,165,26)" fg:x="751" fg:w="1"/><text x="60.3781%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.1281%" y="517" width="0.0801%" height="15" fill="rgb(251,131,20)" fg:x="751" fg:w="1"/><text x="60.3781%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.4484%" y="645" width="0.0801%" height="15" fill="rgb(248,168,52)" fg:x="755" fg:w="1"/><text x="60.6984%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.4484%" y="629" width="0.0801%" height="15" fill="rgb(241,220,45)" fg:x="755" fg:w="1"/><text x="60.6984%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.5284%" y="645" width="0.0801%" height="15" fill="rgb(240,85,44)" fg:x="756" fg:w="1"/><text x="60.7784%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.5284%" y="629" width="0.0801%" height="15" fill="rgb(223,69,47)" fg:x="756" fg:w="1"/><text x="60.7784%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="60.5284%" y="613" width="0.0801%" height="15" fill="rgb(221,209,17)" fg:x="756" fg:w="1"/><text x="60.7784%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.6085%" y="581" width="0.0801%" height="15" fill="rgb(224,194,24)" fg:x="757" fg:w="1"/><text x="60.8585%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="60.6085%" y="565" width="0.0801%" height="15" fill="rgb(249,43,24)" fg:x="757" fg:w="1"/><text x="60.8585%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="60.6886%" y="565" width="0.3203%" height="15" fill="rgb(245,78,29)" fg:x="758" fg:w="4"/><text x="60.9386%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="60.6886%" y="549" width="0.3203%" height="15" fill="rgb(241,167,34)" fg:x="758" fg:w="4"/><text x="60.9386%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.7686%" y="533" width="0.2402%" height="15" fill="rgb(225,91,27)" fg:x="759" fg:w="3"/><text x="61.0186%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="60.9287%" y="517" width="0.0801%" height="15" fill="rgb(249,82,49)" fg:x="761" fg:w="1"/><text x="61.1787%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.9287%" y="501" width="0.0801%" height="15" fill="rgb(215,90,36)" fg:x="761" fg:w="1"/><text x="61.1787%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="60.9287%" y="485" width="0.0801%" height="15" fill="rgb(209,128,1)" fg:x="761" fg:w="1"/><text x="61.1787%" y="495.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="61.0088%" y="565" width="0.0801%" height="15" fill="rgb(233,184,1)" fg:x="762" fg:w="1"/><text x="61.2588%" y="575.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.80%)</title><rect x="60.3683%" y="693" width="0.8006%" height="15" fill="rgb(240,59,32)" fg:x="754" fg:w="10"/><text x="60.6183%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.80%)</title><rect x="60.3683%" y="677" width="0.8006%" height="15" fill="rgb(249,163,0)" fg:x="754" fg:w="10"/><text x="60.6183%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="60.4484%" y="661" width="0.7206%" height="15" fill="rgb(249,220,13)" fg:x="755" fg:w="9"/><text x="60.6984%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="60.6085%" y="645" width="0.5604%" height="15" fill="rgb(235,127,52)" fg:x="757" fg:w="7"/><text x="60.8585%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="60.6085%" y="629" width="0.5604%" height="15" fill="rgb(229,172,26)" fg:x="757" fg:w="7"/><text x="60.8585%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="60.6085%" y="613" width="0.5604%" height="15" fill="rgb(217,37,29)" fg:x="757" fg:w="7"/><text x="60.8585%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="60.6085%" y="597" width="0.5604%" height="15" fill="rgb(208,66,47)" fg:x="757" fg:w="7"/><text x="60.8585%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="60.6886%" y="581" width="0.4804%" height="15" fill="rgb(221,99,19)" fg:x="758" fg:w="6"/><text x="60.9386%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.0889%" y="565" width="0.0801%" height="15" fill="rgb(214,149,49)" fg:x="763" fg:w="1"/><text x="61.3389%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.0889%" y="549" width="0.0801%" height="15" fill="rgb(229,91,37)" fg:x="763" fg:w="1"/><text x="61.3389%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.0889%" y="533" width="0.0801%" height="15" fill="rgb(207,159,48)" fg:x="763" fg:w="1"/><text x="61.3389%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.0889%" y="517" width="0.0801%" height="15" fill="rgb(209,125,46)" fg:x="763" fg:w="1"/><text x="61.3389%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="61.3291%" y="549" width="0.0801%" height="15" fill="rgb(211,188,18)" fg:x="766" fg:w="1"/><text x="61.5791%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="61.2490%" y="581" width="0.2402%" height="15" fill="rgb(207,203,34)" fg:x="765" fg:w="3"/><text x="61.4990%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="61.2490%" y="565" width="0.2402%" height="15" fill="rgb(245,182,16)" fg:x="765" fg:w="3"/><text x="61.4990%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.4091%" y="549" width="0.0801%" height="15" fill="rgb(210,66,30)" fg:x="767" fg:w="1"/><text x="61.6591%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.4091%" y="533" width="0.0801%" height="15" fill="rgb(230,110,14)" fg:x="767" fg:w="1"/><text x="61.6591%" y="543.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="61.4892%" y="581" width="0.0801%" height="15" fill="rgb(242,198,32)" fg:x="768" fg:w="1"/><text x="61.7392%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.4892%" y="565" width="0.0801%" height="15" fill="rgb(213,45,23)" fg:x="768" fg:w="1"/><text x="61.7392%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.4892%" y="549" width="0.0801%" height="15" fill="rgb(205,76,9)" fg:x="768" fg:w="1"/><text x="61.7392%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.4892%" y="533" width="0.0801%" height="15" fill="rgb(250,200,25)" fg:x="768" fg:w="1"/><text x="61.7392%" y="543.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="61.4892%" y="517" width="0.0801%" height="15" fill="rgb(221,161,23)" fg:x="768" fg:w="1"/><text x="61.7392%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.4892%" y="501" width="0.0801%" height="15" fill="rgb(226,135,48)" fg:x="768" fg:w="1"/><text x="61.7392%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4892%" y="485" width="0.0801%" height="15" fill="rgb(228,33,6)" fg:x="768" fg:w="1"/><text x="61.7392%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="61.1689%" y="613" width="0.4804%" height="15" fill="rgb(237,224,9)" fg:x="764" fg:w="6"/><text x="61.4189%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="61.1689%" y="597" width="0.4804%" height="15" fill="rgb(251,61,40)" fg:x="764" fg:w="6"/><text x="61.4189%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.5693%" y="581" width="0.0801%" height="15" fill="rgb(220,222,2)" fg:x="769" fg:w="1"/><text x="61.8193%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.6493%" y="581" width="0.0801%" height="15" fill="rgb(238,4,8)" fg:x="770" fg:w="1"/><text x="61.8993%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.8094%" y="565" width="0.0801%" height="15" fill="rgb(240,153,3)" fg:x="772" fg:w="1"/><text x="62.0594%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.32%)</title><rect x="61.6493%" y="613" width="0.3203%" height="15" fill="rgb(245,29,24)" fg:x="770" fg:w="4"/><text x="61.8993%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="61.6493%" y="597" width="0.3203%" height="15" fill="rgb(231,220,37)" fg:x="770" fg:w="4"/><text x="61.8993%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="61.7294%" y="581" width="0.2402%" height="15" fill="rgb(245,33,10)" fg:x="771" fg:w="3"/><text x="61.9794%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="61.8895%" y="565" width="0.0801%" height="15" fill="rgb(220,227,43)" fg:x="773" fg:w="1"/><text x="62.1395%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="61.8895%" y="549" width="0.0801%" height="15" fill="rgb(215,183,54)" fg:x="773" fg:w="1"/><text x="62.1395%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="61.8895%" y="533" width="0.0801%" height="15" fill="rgb(242,80,26)" fg:x="773" fg:w="1"/><text x="62.1395%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="61.8895%" y="517" width="0.0801%" height="15" fill="rgb(206,172,49)" fg:x="773" fg:w="1"/><text x="62.1395%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="61.9696%" y="581" width="0.0801%" height="15" fill="rgb(249,0,10)" fg:x="774" fg:w="1"/><text x="62.2196%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.9696%" y="565" width="0.0801%" height="15" fill="rgb(246,171,19)" fg:x="774" fg:w="1"/><text x="62.2196%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.9696%" y="549" width="0.0801%" height="15" fill="rgb(236,25,43)" fg:x="774" fg:w="1"/><text x="62.2196%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="61.9696%" y="533" width="0.0801%" height="15" fill="rgb(225,146,20)" fg:x="774" fg:w="1"/><text x="62.2196%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.9696%" y="517" width="0.0801%" height="15" fill="rgb(243,50,39)" fg:x="774" fg:w="1"/><text x="62.2196%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.9696%" y="501" width="0.0801%" height="15" fill="rgb(239,153,27)" fg:x="774" fg:w="1"/><text x="62.2196%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="61.9696%" y="485" width="0.0801%" height="15" fill="rgb(208,164,31)" fg:x="774" fg:w="1"/><text x="62.2196%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.9696%" y="469" width="0.0801%" height="15" fill="rgb(231,32,38)" fg:x="774" fg:w="1"/><text x="62.2196%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.9696%" y="453" width="0.0801%" height="15" fill="rgb(247,158,12)" fg:x="774" fg:w="1"/><text x="62.2196%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.9696%" y="437" width="0.0801%" height="15" fill="rgb(254,126,16)" fg:x="774" fg:w="1"/><text x="62.2196%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.9696%" y="421" width="0.0801%" height="15" fill="rgb(246,12,32)" fg:x="774" fg:w="1"/><text x="62.2196%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (24 samples, 1.92%)</title><rect x="60.2082%" y="709" width="1.9215%" height="15" fill="rgb(245,190,44)" fg:x="752" fg:w="24"/><text x="60.4582%" y="719.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (12 samples, 0.96%)</title><rect x="61.1689%" y="693" width="0.9608%" height="15" fill="rgb(253,148,49)" fg:x="764" fg:w="12"/><text x="61.4189%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="61.1689%" y="677" width="0.9608%" height="15" fill="rgb(232,193,44)" fg:x="764" fg:w="12"/><text x="61.4189%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (12 samples, 0.96%)</title><rect x="61.1689%" y="661" width="0.9608%" height="15" fill="rgb(212,67,50)" fg:x="764" fg:w="12"/><text x="61.4189%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (12 samples, 0.96%)</title><rect x="61.1689%" y="645" width="0.9608%" height="15" fill="rgb(235,109,24)" fg:x="764" fg:w="12"/><text x="61.4189%" y="655.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (12 samples, 0.96%)</title><rect x="61.1689%" y="629" width="0.9608%" height="15" fill="rgb(242,228,23)" fg:x="764" fg:w="12"/><text x="61.4189%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.9696%" y="613" width="0.1601%" height="15" fill="rgb(232,48,19)" fg:x="774" fg:w="2"/><text x="62.2196%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.9696%" y="597" width="0.1601%" height="15" fill="rgb(221,167,25)" fg:x="774" fg:w="2"/><text x="62.2196%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.0496%" y="581" width="0.0801%" height="15" fill="rgb(220,29,38)" fg:x="775" fg:w="1"/><text x="62.2996%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.1297%" y="565" width="0.0801%" height="15" fill="rgb(245,95,26)" fg:x="776" fg:w="1"/><text x="62.3797%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.1297%" y="549" width="0.0801%" height="15" fill="rgb(227,189,38)" fg:x="776" fg:w="1"/><text x="62.3797%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="62.1297%" y="533" width="0.0801%" height="15" fill="rgb(231,212,22)" fg:x="776" fg:w="1"/><text x="62.3797%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.2098%" y="565" width="0.0801%" height="15" fill="rgb(246,25,46)" fg:x="777" fg:w="1"/><text x="62.4598%" y="575.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="62.2098%" y="549" width="0.0801%" height="15" fill="rgb(218,90,32)" fg:x="777" fg:w="1"/><text x="62.4598%" y="559.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="62.2098%" y="533" width="0.0801%" height="15" fill="rgb(207,89,34)" fg:x="777" fg:w="1"/><text x="62.4598%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="62.1297%" y="709" width="0.2402%" height="15" fill="rgb(222,30,54)" fg:x="776" fg:w="3"/><text x="62.3797%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="62.1297%" y="693" width="0.2402%" height="15" fill="rgb(224,229,32)" fg:x="776" fg:w="3"/><text x="62.3797%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="62.1297%" y="677" width="0.2402%" height="15" fill="rgb(209,188,44)" fg:x="776" fg:w="3"/><text x="62.3797%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.1297%" y="661" width="0.2402%" height="15" fill="rgb(215,174,23)" fg:x="776" fg:w="3"/><text x="62.3797%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.1297%" y="645" width="0.2402%" height="15" fill="rgb(242,104,18)" fg:x="776" fg:w="3"/><text x="62.3797%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.1297%" y="629" width="0.2402%" height="15" fill="rgb(240,173,53)" fg:x="776" fg:w="3"/><text x="62.3797%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.1297%" y="613" width="0.2402%" height="15" fill="rgb(240,105,45)" fg:x="776" fg:w="3"/><text x="62.3797%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="62.1297%" y="597" width="0.2402%" height="15" fill="rgb(252,164,29)" fg:x="776" fg:w="3"/><text x="62.3797%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.1297%" y="581" width="0.2402%" height="15" fill="rgb(217,17,6)" fg:x="776" fg:w="3"/><text x="62.3797%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.2898%" y="565" width="0.0801%" height="15" fill="rgb(245,27,23)" fg:x="778" fg:w="1"/><text x="62.5398%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2898%" y="549" width="0.0801%" height="15" fill="rgb(239,73,33)" fg:x="778" fg:w="1"/><text x="62.5398%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.2898%" y="533" width="0.0801%" height="15" fill="rgb(209,140,21)" fg:x="778" fg:w="1"/><text x="62.5398%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2898%" y="517" width="0.0801%" height="15" fill="rgb(206,36,53)" fg:x="778" fg:w="1"/><text x="62.5398%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="62.2898%" y="501" width="0.0801%" height="15" fill="rgb(238,134,8)" fg:x="778" fg:w="1"/><text x="62.5398%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="62.2898%" y="485" width="0.0801%" height="15" fill="rgb(209,3,20)" fg:x="778" fg:w="1"/><text x="62.5398%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="62.2898%" y="469" width="0.0801%" height="15" fill="rgb(208,101,32)" fg:x="778" fg:w="1"/><text x="62.5398%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::SeqDeserializer as serde::de::SeqAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="62.2898%" y="453" width="0.0801%" height="15" fill="rgb(253,56,38)" fg:x="778" fg:w="1"/><text x="62.5398%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (34 samples, 2.72%)</title><rect x="59.7278%" y="741" width="2.7222%" height="15" fill="rgb(209,85,49)" fg:x="746" fg:w="34"/><text x="59.9778%" y="751.50">&lt;e..</text></g><g><title>engine::session::internal::Entities::add_persisted (34 samples, 2.72%)</title><rect x="59.7278%" y="725" width="2.7222%" height="15" fill="rgb(234,177,21)" fg:x="746" fg:w="34"/><text x="59.9778%" y="735.50">en..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="62.3699%" y="709" width="0.0801%" height="15" fill="rgb(250,4,6)" fg:x="779" fg:w="1"/><text x="62.6199%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.3699%" y="693" width="0.0801%" height="15" fill="rgb(240,153,10)" fg:x="779" fg:w="1"/><text x="62.6199%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.3699%" y="677" width="0.0801%" height="15" fill="rgb(205,136,51)" fg:x="779" fg:w="1"/><text x="62.6199%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="62.3699%" y="661" width="0.0801%" height="15" fill="rgb(245,165,50)" fg:x="779" fg:w="1"/><text x="62.6199%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.4500%" y="725" width="0.0801%" height="15" fill="rgb(211,28,10)" fg:x="780" fg:w="1"/><text x="62.7000%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.5300%" y="549" width="0.0801%" height="15" fill="rgb(218,155,54)" fg:x="781" fg:w="1"/><text x="62.7800%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.5300%" y="533" width="0.0801%" height="15" fill="rgb(254,214,30)" fg:x="781" fg:w="1"/><text x="62.7800%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.5300%" y="517" width="0.0801%" height="15" fill="rgb(248,200,10)" fg:x="781" fg:w="1"/><text x="62.7800%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.5300%" y="501" width="0.0801%" height="15" fill="rgb(238,219,45)" fg:x="781" fg:w="1"/><text x="62.7800%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.5300%" y="485" width="0.0801%" height="15" fill="rgb(227,35,34)" fg:x="781" fg:w="1"/><text x="62.7800%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.5300%" y="469" width="0.0801%" height="15" fill="rgb(214,187,37)" fg:x="781" fg:w="1"/><text x="62.7800%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.5300%" y="453" width="0.0801%" height="15" fill="rgb(247,164,44)" fg:x="781" fg:w="1"/><text x="62.7800%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.5300%" y="437" width="0.0801%" height="15" fill="rgb(238,198,10)" fg:x="781" fg:w="1"/><text x="62.7800%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="62.5300%" y="421" width="0.0801%" height="15" fill="rgb(213,69,8)" fg:x="781" fg:w="1"/><text x="62.7800%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="62.5300%" y="405" width="0.0801%" height="15" fill="rgb(222,82,16)" fg:x="781" fg:w="1"/><text x="62.7800%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (37 samples, 2.96%)</title><rect x="59.7278%" y="757" width="2.9624%" height="15" fill="rgb(205,172,30)" fg:x="746" fg:w="37"/><text x="59.9778%" y="767.50">&lt;en..</text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="62.4500%" y="741" width="0.2402%" height="15" fill="rgb(227,39,8)" fg:x="780" fg:w="3"/><text x="62.7000%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="62.5300%" y="725" width="0.1601%" height="15" fill="rgb(249,10,19)" fg:x="781" fg:w="2"/><text x="62.7800%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="62.5300%" y="709" width="0.1601%" height="15" fill="rgb(205,158,53)" fg:x="781" fg:w="2"/><text x="62.7800%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="62.5300%" y="693" width="0.1601%" height="15" fill="rgb(237,229,35)" fg:x="781" fg:w="2"/><text x="62.7800%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="62.5300%" y="677" width="0.1601%" height="15" fill="rgb(238,129,14)" fg:x="781" fg:w="2"/><text x="62.7800%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="62.5300%" y="661" width="0.1601%" height="15" fill="rgb(218,217,40)" fg:x="781" fg:w="2"/><text x="62.7800%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="62.5300%" y="645" width="0.1601%" height="15" fill="rgb(221,187,9)" fg:x="781" fg:w="2"/><text x="62.7800%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="62.5300%" y="629" width="0.1601%" height="15" fill="rgb(214,108,19)" fg:x="781" fg:w="2"/><text x="62.7800%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="62.5300%" y="613" width="0.1601%" height="15" fill="rgb(216,86,23)" fg:x="781" fg:w="2"/><text x="62.7800%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="62.5300%" y="597" width="0.1601%" height="15" fill="rgb(209,116,23)" fg:x="781" fg:w="2"/><text x="62.7800%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="62.5300%" y="581" width="0.1601%" height="15" fill="rgb(222,185,40)" fg:x="781" fg:w="2"/><text x="62.7800%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="62.5300%" y="565" width="0.1601%" height="15" fill="rgb(238,150,2)" fg:x="781" fg:w="2"/><text x="62.7800%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="62.6101%" y="549" width="0.0801%" height="15" fill="rgb(229,132,47)" fg:x="782" fg:w="1"/><text x="62.8601%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="62.6101%" y="533" width="0.0801%" height="15" fill="rgb(231,7,23)" fg:x="782" fg:w="1"/><text x="62.8601%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="62.6101%" y="517" width="0.0801%" height="15" fill="rgb(235,12,37)" fg:x="782" fg:w="1"/><text x="62.8601%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="62.6101%" y="501" width="0.0801%" height="15" fill="rgb(247,170,51)" fg:x="782" fg:w="1"/><text x="62.8601%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="62.6101%" y="485" width="0.0801%" height="15" fill="rgb(210,62,49)" fg:x="782" fg:w="1"/><text x="62.8601%" y="495.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="62.6101%" y="469" width="0.0801%" height="15" fill="rgb(248,30,8)" fg:x="782" fg:w="1"/><text x="62.8601%" y="479.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="62.6101%" y="453" width="0.0801%" height="15" fill="rgb(252,11,2)" fg:x="782" fg:w="1"/><text x="62.8601%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.6101%" y="437" width="0.0801%" height="15" fill="rgb(249,65,4)" fg:x="782" fg:w="1"/><text x="62.8601%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.6101%" y="421" width="0.0801%" height="15" fill="rgb(217,219,7)" fg:x="782" fg:w="1"/><text x="62.8601%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="62.6101%" y="405" width="0.0801%" height="15" fill="rgb(222,186,36)" fg:x="782" fg:w="1"/><text x="62.8601%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="62.6101%" y="389" width="0.0801%" height="15" fill="rgb(247,184,5)" fg:x="782" fg:w="1"/><text x="62.8601%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="62.6101%" y="373" width="0.0801%" height="15" fill="rgb(221,108,7)" fg:x="782" fg:w="1"/><text x="62.8601%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="62.6101%" y="357" width="0.0801%" height="15" fill="rgb(209,208,22)" fg:x="782" fg:w="1"/><text x="62.8601%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.6101%" y="341" width="0.0801%" height="15" fill="rgb(247,106,21)" fg:x="782" fg:w="1"/><text x="62.8601%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="62.6101%" y="325" width="0.0801%" height="15" fill="rgb(223,2,44)" fg:x="782" fg:w="1"/><text x="62.8601%" y="335.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="62.6902%" y="757" width="0.2402%" height="15" fill="rgb(208,190,12)" fg:x="783" fg:w="3"/><text x="62.9402%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="62.6902%" y="741" width="0.2402%" height="15" fill="rgb(250,221,0)" fg:x="783" fg:w="3"/><text x="62.9402%" y="751.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="62.7702%" y="725" width="0.1601%" height="15" fill="rgb(212,210,16)" fg:x="784" fg:w="2"/><text x="63.0202%" y="735.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="62.7702%" y="709" width="0.1601%" height="15" fill="rgb(212,224,21)" fg:x="784" fg:w="2"/><text x="63.0202%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="62.7702%" y="693" width="0.1601%" height="15" fill="rgb(206,186,54)" fg:x="784" fg:w="2"/><text x="63.0202%" y="703.50"></text></g><g><title>plugins_core::library::parser::word (1 samples, 0.08%)</title><rect x="62.8503%" y="677" width="0.0801%" height="15" fill="rgb(213,211,25)" fg:x="785" fg:w="1"/><text x="63.1003%" y="687.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="62.8503%" y="661" width="0.0801%" height="15" fill="rgb(243,78,36)" fg:x="785" fg:w="1"/><text x="63.1003%" y="671.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="62.9303%" y="757" width="0.0801%" height="15" fill="rgb(236,105,24)" fg:x="786" fg:w="1"/><text x="63.1803%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (788 samples, 63.09%)</title><rect x="0.0000%" y="837" width="63.0905%" height="15" fill="rgb(223,46,45)" fg:x="0" fg:w="788"/><text x="0.2500%" y="847.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (788 samples, 63.09%)</title><rect x="0.0000%" y="821" width="63.0905%" height="15" fill="rgb(249,65,35)" fg:x="0" fg:w="788"/><text x="0.2500%" y="831.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (788 samples, 63.09%)</title><rect x="0.0000%" y="805" width="63.0905%" height="15" fill="rgb(226,122,19)" fg:x="0" fg:w="788"/><text x="0.2500%" y="815.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (296 samples, 23.70%)</title><rect x="39.3915%" y="789" width="23.6990%" height="15" fill="rgb(253,17,37)" fg:x="492" fg:w="296"/><text x="39.6415%" y="799.50">engine::session::Session::evaluate_and..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (296 samples, 23.70%)</title><rect x="39.3915%" y="773" width="23.6990%" height="15" fill="rgb(223,138,24)" fg:x="492" fg:w="296"/><text x="39.6415%" y="783.50">engine::session::Session::evaluate_and..</text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="63.0104%" y="757" width="0.0801%" height="15" fill="rgb(227,89,20)" fg:x="787" fg:w="1"/><text x="63.2604%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="63.0104%" y="741" width="0.0801%" height="15" fill="rgb(239,140,41)" fg:x="787" fg:w="1"/><text x="63.2604%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="63.0104%" y="725" width="0.0801%" height="15" fill="rgb(237,29,24)" fg:x="787" fg:w="1"/><text x="63.2604%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.0104%" y="709" width="0.0801%" height="15" fill="rgb(212,123,27)" fg:x="787" fg:w="1"/><text x="63.2604%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.0104%" y="693" width="0.0801%" height="15" fill="rgb(236,173,10)" fg:x="787" fg:w="1"/><text x="63.2604%" y="703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.0104%" y="677" width="0.0801%" height="15" fill="rgb(244,17,3)" fg:x="787" fg:w="1"/><text x="63.2604%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.0104%" y="661" width="0.0801%" height="15" fill="rgb(220,73,21)" fg:x="787" fg:w="1"/><text x="63.2604%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.0104%" y="645" width="0.0801%" height="15" fill="rgb(220,187,17)" fg:x="787" fg:w="1"/><text x="63.2604%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.0104%" y="629" width="0.0801%" height="15" fill="rgb(236,64,13)" fg:x="787" fg:w="1"/><text x="63.2604%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="63.0905%" y="677" width="0.1601%" height="15" fill="rgb(214,111,25)" fg:x="788" fg:w="2"/><text x="63.3405%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.2506%" y="677" width="0.0801%" height="15" fill="rgb(251,123,0)" fg:x="790" fg:w="1"/><text x="63.5006%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.2506%" y="661" width="0.0801%" height="15" fill="rgb(210,8,32)" fg:x="790" fg:w="1"/><text x="63.5006%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="63.3307%" y="661" width="0.1601%" height="15" fill="rgb(221,27,44)" fg:x="791" fg:w="2"/><text x="63.5807%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="63.3307%" y="645" width="0.1601%" height="15" fill="rgb(233,207,54)" fg:x="791" fg:w="2"/><text x="63.5807%" y="655.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="63.5709%" y="629" width="0.2402%" height="15" fill="rgb(219,217,1)" fg:x="794" fg:w="3"/><text x="63.8209%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.8110%" y="629" width="0.0801%" height="15" fill="rgb(236,150,15)" fg:x="797" fg:w="1"/><text x="64.0610%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.8911%" y="613" width="0.0801%" height="15" fill="rgb(244,119,54)" fg:x="798" fg:w="1"/><text x="64.1411%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="63.0905%" y="709" width="0.9608%" height="15" fill="rgb(218,116,36)" fg:x="788" fg:w="12"/><text x="63.3405%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="63.0905%" y="693" width="0.9608%" height="15" fill="rgb(215,42,32)" fg:x="788" fg:w="12"/><text x="63.3405%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="63.3307%" y="677" width="0.7206%" height="15" fill="rgb(254,87,2)" fg:x="791" fg:w="9"/><text x="63.5807%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="63.4908%" y="661" width="0.5604%" height="15" fill="rgb(241,195,45)" fg:x="793" fg:w="7"/><text x="63.7408%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="63.4908%" y="645" width="0.5604%" height="15" fill="rgb(252,11,14)" fg:x="793" fg:w="7"/><text x="63.7408%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="63.8911%" y="629" width="0.1601%" height="15" fill="rgb(233,199,43)" fg:x="798" fg:w="2"/><text x="64.1411%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.9712%" y="613" width="0.0801%" height="15" fill="rgb(243,170,27)" fg:x="799" fg:w="1"/><text x="64.2212%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.9712%" y="597" width="0.0801%" height="15" fill="rgb(236,178,54)" fg:x="799" fg:w="1"/><text x="64.2212%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="63.0905%" y="757" width="1.0408%" height="15" fill="rgb(230,38,12)" fg:x="788" fg:w="13"/><text x="63.3405%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (13 samples, 1.04%)</title><rect x="63.0905%" y="741" width="1.0408%" height="15" fill="rgb(241,44,47)" fg:x="788" fg:w="13"/><text x="63.3405%" y="751.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="63.0905%" y="725" width="1.0408%" height="15" fill="rgb(218,99,12)" fg:x="788" fg:w="13"/><text x="63.3405%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.0512%" y="709" width="0.0801%" height="15" fill="rgb(211,48,36)" fg:x="800" fg:w="1"/><text x="64.3012%" y="719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="63.0905%" y="789" width="1.1209%" height="15" fill="rgb(220,81,29)" fg:x="788" fg:w="14"/><text x="63.3405%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (14 samples, 1.12%)</title><rect x="63.0905%" y="773" width="1.1209%" height="15" fill="rgb(232,121,54)" fg:x="788" fg:w="14"/><text x="63.3405%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.1313%" y="757" width="0.0801%" height="15" fill="rgb(236,227,37)" fg:x="801" fg:w="1"/><text x="64.3813%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.2114%" y="693" width="0.0801%" height="15" fill="rgb(207,43,26)" fg:x="802" fg:w="1"/><text x="64.4614%" y="703.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="64.2914%" y="693" width="0.0801%" height="15" fill="rgb(224,163,34)" fg:x="803" fg:w="1"/><text x="64.5414%" y="703.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="64.2914%" y="677" width="0.0801%" height="15" fill="rgb(228,127,11)" fg:x="803" fg:w="1"/><text x="64.5414%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="64.2914%" y="661" width="0.0801%" height="15" fill="rgb(215,32,51)" fg:x="803" fg:w="1"/><text x="64.5414%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="64.2914%" y="645" width="0.0801%" height="15" fill="rgb(206,180,37)" fg:x="803" fg:w="1"/><text x="64.5414%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="64.2914%" y="629" width="0.0801%" height="15" fill="rgb(245,217,39)" fg:x="803" fg:w="1"/><text x="64.5414%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.2914%" y="613" width="0.0801%" height="15" fill="rgb(237,179,18)" fg:x="803" fg:w="1"/><text x="64.5414%" y="623.50"></text></g><g><title>libloading::safe::Library::new (3 samples, 0.24%)</title><rect x="64.3715%" y="693" width="0.2402%" height="15" fill="rgb(248,177,3)" fg:x="804" fg:w="3"/><text x="64.6215%" y="703.50"></text></g><g><title>dlopen (3 samples, 0.24%)</title><rect x="64.3715%" y="677" width="0.2402%" height="15" fill="rgb(208,31,45)" fg:x="804" fg:w="3"/><text x="64.6215%" y="687.50"></text></g><g><title>_dl_catch_error (3 samples, 0.24%)</title><rect x="64.3715%" y="661" width="0.2402%" height="15" fill="rgb(231,16,43)" fg:x="804" fg:w="3"/><text x="64.6215%" y="671.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="64.3715%" y="645" width="0.2402%" height="15" fill="rgb(246,12,20)" fg:x="804" fg:w="3"/><text x="64.6215%" y="655.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="64.3715%" y="629" width="0.2402%" height="15" fill="rgb(214,40,41)" fg:x="804" fg:w="3"/><text x="64.6215%" y="639.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="64.3715%" y="613" width="0.2402%" height="15" fill="rgb(225,183,42)" fg:x="804" fg:w="3"/><text x="64.6215%" y="623.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (6 samples, 0.48%)</title><rect x="64.2114%" y="709" width="0.4804%" height="15" fill="rgb(229,88,50)" fg:x="802" fg:w="6"/><text x="64.4614%" y="719.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="64.6117%" y="693" width="0.0801%" height="15" fill="rgb(247,34,33)" fg:x="807" fg:w="1"/><text x="64.8617%" y="703.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="64.6117%" y="677" width="0.0801%" height="15" fill="rgb(246,163,52)" fg:x="807" fg:w="1"/><text x="64.8617%" y="687.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (7 samples, 0.56%)</title><rect x="64.2114%" y="725" width="0.5604%" height="15" fill="rgb(251,13,27)" fg:x="802" fg:w="7"/><text x="64.4614%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="64.6918%" y="709" width="0.0801%" height="15" fill="rgb(218,127,46)" fg:x="808" fg:w="1"/><text x="64.9418%" y="719.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="64.6918%" y="693" width="0.0801%" height="15" fill="rgb(215,155,29)" fg:x="808" fg:w="1"/><text x="64.9418%" y="703.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="64.9319%" y="693" width="0.0801%" height="15" fill="rgb(251,180,13)" fg:x="811" fg:w="1"/><text x="65.1819%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.9319%" y="677" width="0.0801%" height="15" fill="rgb(246,215,19)" fg:x="811" fg:w="1"/><text x="65.1819%" y="687.50"></text></g><g><title>engine::session::Session::initialize (11 samples, 0.88%)</title><rect x="64.2114%" y="741" width="0.8807%" height="15" fill="rgb(210,47,28)" fg:x="802" fg:w="11"/><text x="64.4614%" y="751.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (4 samples, 0.32%)</title><rect x="64.7718%" y="725" width="0.3203%" height="15" fill="rgb(231,175,40)" fg:x="809" fg:w="4"/><text x="65.0218%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="64.7718%" y="709" width="0.3203%" height="15" fill="rgb(207,138,24)" fg:x="809" fg:w="4"/><text x="65.0218%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="65.0120%" y="693" width="0.0801%" height="15" fill="rgb(216,44,38)" fg:x="812" fg:w="1"/><text x="65.2620%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="65.0120%" y="677" width="0.0801%" height="15" fill="rgb(206,81,53)" fg:x="812" fg:w="1"/><text x="65.2620%" y="687.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="65.0120%" y="661" width="0.0801%" height="15" fill="rgb(246,139,21)" fg:x="812" fg:w="1"/><text x="65.2620%" y="671.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (12 samples, 0.96%)</title><rect x="64.2114%" y="789" width="0.9608%" height="15" fill="rgb(212,163,26)" fg:x="802" fg:w="12"/><text x="64.4614%" y="799.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (12 samples, 0.96%)</title><rect x="64.2114%" y="773" width="0.9608%" height="15" fill="rgb(223,82,35)" fg:x="802" fg:w="12"/><text x="64.4614%" y="783.50"></text></g><g><title>engine::session::Session::new (12 samples, 0.96%)</title><rect x="64.2114%" y="757" width="0.9608%" height="15" fill="rgb(224,76,13)" fg:x="802" fg:w="12"/><text x="64.4614%" y="767.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="65.0921%" y="741" width="0.0801%" height="15" fill="rgb(240,2,40)" fg:x="813" fg:w="1"/><text x="65.3421%" y="751.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1721%" y="773" width="0.0801%" height="15" fill="rgb(232,188,36)" fg:x="814" fg:w="1"/><text x="65.4221%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1721%" y="757" width="0.0801%" height="15" fill="rgb(249,34,46)" fg:x="814" fg:w="1"/><text x="65.4221%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1721%" y="741" width="0.0801%" height="15" fill="rgb(226,99,19)" fg:x="814" fg:w="1"/><text x="65.4221%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.1721%" y="725" width="0.0801%" height="15" fill="rgb(207,78,52)" fg:x="814" fg:w="1"/><text x="65.4221%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.1721%" y="709" width="0.0801%" height="15" fill="rgb(241,119,8)" fg:x="814" fg:w="1"/><text x="65.4221%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.1721%" y="693" width="0.0801%" height="15" fill="rgb(238,31,9)" fg:x="814" fg:w="1"/><text x="65.4221%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.1721%" y="677" width="0.0801%" height="15" fill="rgb(223,165,6)" fg:x="814" fg:w="1"/><text x="65.4221%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.1721%" y="661" width="0.0801%" height="15" fill="rgb(227,228,21)" fg:x="814" fg:w="1"/><text x="65.4221%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.1721%" y="645" width="0.0801%" height="15" fill="rgb(206,188,51)" fg:x="814" fg:w="1"/><text x="65.4221%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.1721%" y="629" width="0.0801%" height="15" fill="rgb(225,207,23)" fg:x="814" fg:w="1"/><text x="65.4221%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.1721%" y="613" width="0.0801%" height="15" fill="rgb(232,197,54)" fg:x="814" fg:w="1"/><text x="65.4221%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.1721%" y="597" width="0.0801%" height="15" fill="rgb(229,149,21)" fg:x="814" fg:w="1"/><text x="65.4221%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.1721%" y="581" width="0.0801%" height="15" fill="rgb(209,197,1)" fg:x="814" fg:w="1"/><text x="65.4221%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="65.2522%" y="773" width="0.0801%" height="15" fill="rgb(227,82,17)" fg:x="815" fg:w="1"/><text x="65.5022%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="65.2522%" y="757" width="0.0801%" height="15" fill="rgb(237,201,43)" fg:x="815" fg:w="1"/><text x="65.5022%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="65.3323%" y="757" width="0.1601%" height="15" fill="rgb(221,91,37)" fg:x="816" fg:w="2"/><text x="65.5823%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="65.4123%" y="741" width="0.0801%" height="15" fill="rgb(239,35,7)" fg:x="817" fg:w="1"/><text x="65.6623%" y="751.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="65.4924%" y="757" width="0.0801%" height="15" fill="rgb(234,145,45)" fg:x="818" fg:w="1"/><text x="65.7424%" y="767.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="65.4924%" y="741" width="0.0801%" height="15" fill="rgb(214,151,47)" fg:x="818" fg:w="1"/><text x="65.7424%" y="751.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="65.4924%" y="725" width="0.0801%" height="15" fill="rgb(248,62,54)" fg:x="818" fg:w="1"/><text x="65.7424%" y="735.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="65.4924%" y="709" width="0.0801%" height="15" fill="rgb(236,99,21)" fg:x="818" fg:w="1"/><text x="65.7424%" y="719.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="65.4924%" y="693" width="0.0801%" height="15" fill="rgb(223,94,43)" fg:x="818" fg:w="1"/><text x="65.7424%" y="703.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="65.4924%" y="677" width="0.0801%" height="15" fill="rgb(214,66,6)" fg:x="818" fg:w="1"/><text x="65.7424%" y="687.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="65.4924%" y="661" width="0.0801%" height="15" fill="rgb(231,152,46)" fg:x="818" fg:w="1"/><text x="65.7424%" y="671.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="65.4924%" y="645" width="0.0801%" height="15" fill="rgb(254,0,48)" fg:x="818" fg:w="1"/><text x="65.7424%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="65.5725%" y="677" width="0.1601%" height="15" fill="rgb(225,136,42)" fg:x="819" fg:w="2"/><text x="65.8225%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="65.5725%" y="661" width="0.1601%" height="15" fill="rgb(231,194,28)" fg:x="819" fg:w="2"/><text x="65.8225%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="65.5725%" y="645" width="0.1601%" height="15" fill="rgb(248,141,22)" fg:x="819" fg:w="2"/><text x="65.8225%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="65.5725%" y="629" width="0.1601%" height="15" fill="rgb(222,133,1)" fg:x="819" fg:w="2"/><text x="65.8225%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="65.5725%" y="613" width="0.1601%" height="15" fill="rgb(222,50,8)" fg:x="819" fg:w="2"/><text x="65.8225%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="65.7326%" y="661" width="0.0801%" height="15" fill="rgb(215,67,27)" fg:x="821" fg:w="1"/><text x="65.9826%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="65.8127%" y="661" width="0.3203%" height="15" fill="rgb(220,102,37)" fg:x="822" fg:w="4"/><text x="66.0627%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="65.9728%" y="645" width="0.1601%" height="15" fill="rgb(222,64,25)" fg:x="824" fg:w="2"/><text x="66.2228%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="65.9728%" y="629" width="0.1601%" height="15" fill="rgb(215,40,16)" fg:x="824" fg:w="2"/><text x="66.2228%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="66.1329%" y="613" width="0.0801%" height="15" fill="rgb(252,171,3)" fg:x="826" fg:w="1"/><text x="66.3829%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="66.1329%" y="645" width="0.1601%" height="15" fill="rgb(252,199,51)" fg:x="826" fg:w="2"/><text x="66.3829%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="66.1329%" y="629" width="0.1601%" height="15" fill="rgb(244,42,10)" fg:x="826" fg:w="2"/><text x="66.3829%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.2130%" y="613" width="0.0801%" height="15" fill="rgb(243,169,37)" fg:x="827" fg:w="1"/><text x="66.4630%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="66.2930%" y="645" width="0.0801%" height="15" fill="rgb(241,140,9)" fg:x="828" fg:w="1"/><text x="66.5430%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.2930%" y="629" width="0.0801%" height="15" fill="rgb(241,66,40)" fg:x="828" fg:w="1"/><text x="66.5430%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.2930%" y="613" width="0.0801%" height="15" fill="rgb(220,50,41)" fg:x="828" fg:w="1"/><text x="66.5430%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.2930%" y="597" width="0.0801%" height="15" fill="rgb(214,104,9)" fg:x="828" fg:w="1"/><text x="66.5430%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="66.2930%" y="581" width="0.0801%" height="15" fill="rgb(241,227,25)" fg:x="828" fg:w="1"/><text x="66.5430%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.2930%" y="565" width="0.0801%" height="15" fill="rgb(248,37,46)" fg:x="828" fg:w="1"/><text x="66.5430%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="66.3731%" y="613" width="0.0801%" height="15" fill="rgb(243,52,43)" fg:x="829" fg:w="1"/><text x="66.6231%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.3731%" y="597" width="0.0801%" height="15" fill="rgb(232,122,17)" fg:x="829" fg:w="1"/><text x="66.6231%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.3731%" y="581" width="0.0801%" height="15" fill="rgb(242,15,36)" fg:x="829" fg:w="1"/><text x="66.6231%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="66.3731%" y="565" width="0.0801%" height="15" fill="rgb(232,63,30)" fg:x="829" fg:w="1"/><text x="66.6231%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="66.4532%" y="597" width="0.1601%" height="15" fill="rgb(237,86,45)" fg:x="830" fg:w="2"/><text x="66.7032%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="66.4532%" y="581" width="0.1601%" height="15" fill="rgb(245,123,47)" fg:x="830" fg:w="2"/><text x="66.7032%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.5332%" y="565" width="0.0801%" height="15" fill="rgb(252,85,3)" fg:x="831" fg:w="1"/><text x="66.7832%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="66.4532%" y="613" width="0.3203%" height="15" fill="rgb(249,171,16)" fg:x="830" fg:w="4"/><text x="66.7032%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="66.6133%" y="597" width="0.1601%" height="15" fill="rgb(225,146,54)" fg:x="832" fg:w="2"/><text x="66.8633%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="66.6934%" y="581" width="0.0801%" height="15" fill="rgb(213,216,54)" fg:x="833" fg:w="1"/><text x="66.9434%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.6934%" y="565" width="0.0801%" height="15" fill="rgb(236,60,6)" fg:x="833" fg:w="1"/><text x="66.9434%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.6934%" y="549" width="0.0801%" height="15" fill="rgb(227,93,24)" fg:x="833" fg:w="1"/><text x="66.9434%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.6934%" y="533" width="0.0801%" height="15" fill="rgb(219,41,42)" fg:x="833" fg:w="1"/><text x="66.9434%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="66.3731%" y="645" width="0.4804%" height="15" fill="rgb(229,52,32)" fg:x="829" fg:w="6"/><text x="66.6231%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="66.3731%" y="629" width="0.4804%" height="15" fill="rgb(221,33,40)" fg:x="829" fg:w="6"/><text x="66.6231%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.7734%" y="613" width="0.0801%" height="15" fill="rgb(216,109,23)" fg:x="834" fg:w="1"/><text x="67.0234%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.7734%" y="597" width="0.0801%" height="15" fill="rgb(214,39,24)" fg:x="834" fg:w="1"/><text x="67.0234%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="66.1329%" y="661" width="0.8006%" height="15" fill="rgb(205,36,6)" fg:x="826" fg:w="10"/><text x="66.3829%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.8535%" y="645" width="0.0801%" height="15" fill="rgb(222,146,34)" fg:x="835" fg:w="1"/><text x="67.1035%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.36%)</title><rect x="65.7326%" y="677" width="1.3611%" height="15" fill="rgb(214,72,53)" fg:x="821" fg:w="17"/><text x="65.9826%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="66.9335%" y="661" width="0.1601%" height="15" fill="rgb(250,157,2)" fg:x="836" fg:w="2"/><text x="67.1835%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="67.0136%" y="645" width="0.0801%" height="15" fill="rgb(248,5,23)" fg:x="837" fg:w="1"/><text x="67.2636%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.0136%" y="629" width="0.0801%" height="15" fill="rgb(207,146,36)" fg:x="837" fg:w="1"/><text x="67.2636%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (20 samples, 1.60%)</title><rect x="65.5725%" y="693" width="1.6013%" height="15" fill="rgb(205,184,43)" fg:x="819" fg:w="20"/><text x="65.8225%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="67.0937%" y="677" width="0.0801%" height="15" fill="rgb(251,150,46)" fg:x="838" fg:w="1"/><text x="67.3437%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.2538%" y="661" width="0.0801%" height="15" fill="rgb(227,224,12)" fg:x="840" fg:w="1"/><text x="67.5038%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.2538%" y="645" width="0.0801%" height="15" fill="rgb(215,26,26)" fg:x="840" fg:w="1"/><text x="67.5038%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="67.1737%" y="693" width="0.2402%" height="15" fill="rgb(238,180,42)" fg:x="839" fg:w="3"/><text x="67.4237%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="67.1737%" y="677" width="0.2402%" height="15" fill="rgb(218,148,48)" fg:x="839" fg:w="3"/><text x="67.4237%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.3339%" y="661" width="0.0801%" height="15" fill="rgb(252,14,36)" fg:x="841" fg:w="1"/><text x="67.5839%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.3339%" y="645" width="0.0801%" height="15" fill="rgb(224,35,37)" fg:x="841" fg:w="1"/><text x="67.5839%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.4139%" y="645" width="0.0801%" height="15" fill="rgb(245,177,29)" fg:x="842" fg:w="1"/><text x="67.6639%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.4139%" y="629" width="0.0801%" height="15" fill="rgb(221,149,34)" fg:x="842" fg:w="1"/><text x="67.6639%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="67.4139%" y="613" width="0.0801%" height="15" fill="rgb(239,115,36)" fg:x="842" fg:w="1"/><text x="67.6639%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="67.4940%" y="645" width="0.0801%" height="15" fill="rgb(226,196,40)" fg:x="843" fg:w="1"/><text x="67.7440%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.4940%" y="629" width="0.0801%" height="15" fill="rgb(209,206,26)" fg:x="843" fg:w="1"/><text x="67.7440%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.4940%" y="613" width="0.0801%" height="15" fill="rgb(225,13,33)" fg:x="843" fg:w="1"/><text x="67.7440%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.4940%" y="597" width="0.0801%" height="15" fill="rgb(244,126,22)" fg:x="843" fg:w="1"/><text x="67.7440%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.4940%" y="581" width="0.0801%" height="15" fill="rgb(248,213,25)" fg:x="843" fg:w="1"/><text x="67.7440%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.5741%" y="597" width="0.0801%" height="15" fill="rgb(222,94,36)" fg:x="844" fg:w="1"/><text x="67.8241%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.5741%" y="581" width="0.0801%" height="15" fill="rgb(212,114,20)" fg:x="844" fg:w="1"/><text x="67.8241%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="67.6541%" y="597" width="0.0801%" height="15" fill="rgb(213,157,26)" fg:x="845" fg:w="1"/><text x="67.9041%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="67.6541%" y="581" width="0.0801%" height="15" fill="rgb(211,130,1)" fg:x="845" fg:w="1"/><text x="67.9041%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="67.6541%" y="565" width="0.0801%" height="15" fill="rgb(212,83,53)" fg:x="845" fg:w="1"/><text x="67.9041%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.6541%" y="549" width="0.0801%" height="15" fill="rgb(238,129,10)" fg:x="845" fg:w="1"/><text x="67.9041%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.6541%" y="533" width="0.0801%" height="15" fill="rgb(213,76,2)" fg:x="845" fg:w="1"/><text x="67.9041%" y="543.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="67.7342%" y="565" width="0.0801%" height="15" fill="rgb(220,189,22)" fg:x="846" fg:w="1"/><text x="67.9842%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="67.8943%" y="517" width="0.0801%" height="15" fill="rgb(250,155,31)" fg:x="848" fg:w="1"/><text x="68.1443%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="67.8943%" y="549" width="0.1601%" height="15" fill="rgb(218,184,22)" fg:x="848" fg:w="2"/><text x="68.1443%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="67.8943%" y="533" width="0.1601%" height="15" fill="rgb(247,117,4)" fg:x="848" fg:w="2"/><text x="68.1443%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="67.9744%" y="517" width="0.0801%" height="15" fill="rgb(253,185,37)" fg:x="849" fg:w="1"/><text x="68.2244%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="67.9744%" y="501" width="0.0801%" height="15" fill="rgb(226,36,44)" fg:x="849" fg:w="1"/><text x="68.2244%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.9744%" y="485" width="0.0801%" height="15" fill="rgb(224,7,24)" fg:x="849" fg:w="1"/><text x="68.2244%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="67.5741%" y="613" width="0.5604%" height="15" fill="rgb(239,201,0)" fg:x="844" fg:w="7"/><text x="67.8241%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="67.7342%" y="597" width="0.4003%" height="15" fill="rgb(218,56,33)" fg:x="846" fg:w="5"/><text x="67.9842%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="67.7342%" y="581" width="0.4003%" height="15" fill="rgb(210,187,29)" fg:x="846" fg:w="5"/><text x="67.9842%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="67.8143%" y="565" width="0.3203%" height="15" fill="rgb(206,158,49)" fg:x="847" fg:w="4"/><text x="68.0643%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.0544%" y="549" width="0.0801%" height="15" fill="rgb(234,36,5)" fg:x="850" fg:w="1"/><text x="68.3044%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="67.5741%" y="629" width="0.6405%" height="15" fill="rgb(239,79,15)" fg:x="844" fg:w="8"/><text x="67.8241%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="68.1345%" y="613" width="0.0801%" height="15" fill="rgb(240,136,17)" fg:x="851" fg:w="1"/><text x="68.3845%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1345%" y="597" width="0.0801%" height="15" fill="rgb(227,83,12)" fg:x="851" fg:w="1"/><text x="68.3845%" y="607.50"></text></g><g><title>engine::session::Session::flush (37 samples, 2.96%)</title><rect x="65.3323%" y="773" width="2.9624%" height="15" fill="rgb(212,2,8)" fg:x="816" fg:w="37"/><text x="65.5823%" y="783.50">eng..</text></g><g><title>engine::session::state::State::close (34 samples, 2.72%)</title><rect x="65.5725%" y="757" width="2.7222%" height="15" fill="rgb(219,144,5)" fg:x="819" fg:w="34"/><text x="65.8225%" y="767.50">en..</text></g><g><title>engine::session::state::State::flush_entities (34 samples, 2.72%)</title><rect x="65.5725%" y="741" width="2.7222%" height="15" fill="rgb(253,204,27)" fg:x="819" fg:w="34"/><text x="65.8225%" y="751.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (34 samples, 2.72%)</title><rect x="65.5725%" y="725" width="2.7222%" height="15" fill="rgb(228,188,17)" fg:x="819" fg:w="34"/><text x="65.8225%" y="735.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (34 samples, 2.72%)</title><rect x="65.5725%" y="709" width="2.7222%" height="15" fill="rgb(208,198,33)" fg:x="819" fg:w="34"/><text x="65.8225%" y="719.50">en..</text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.88%)</title><rect x="67.4139%" y="693" width="0.8807%" height="15" fill="rgb(249,153,19)" fg:x="842" fg:w="11"/><text x="67.6639%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.88%)</title><rect x="67.4139%" y="677" width="0.8807%" height="15" fill="rgb(222,193,37)" fg:x="842" fg:w="11"/><text x="67.6639%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="67.4139%" y="661" width="0.8807%" height="15" fill="rgb(215,168,16)" fg:x="842" fg:w="11"/><text x="67.6639%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="67.5741%" y="645" width="0.7206%" height="15" fill="rgb(238,69,36)" fg:x="844" fg:w="9"/><text x="67.8241%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.2146%" y="629" width="0.0801%" height="15" fill="rgb(227,11,51)" fg:x="852" fg:w="1"/><text x="68.4646%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="68.2946%" y="725" width="0.0801%" height="15" fill="rgb(214,204,5)" fg:x="853" fg:w="1"/><text x="68.5446%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="68.2946%" y="709" width="0.0801%" height="15" fill="rgb(242,182,42)" fg:x="853" fg:w="1"/><text x="68.5446%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="68.2946%" y="693" width="0.0801%" height="15" fill="rgb(212,208,46)" fg:x="853" fg:w="1"/><text x="68.5446%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.2946%" y="677" width="0.0801%" height="15" fill="rgb(249,22,49)" fg:x="853" fg:w="1"/><text x="68.5446%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.2946%" y="661" width="0.0801%" height="15" fill="rgb(226,130,52)" fg:x="853" fg:w="1"/><text x="68.5446%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.2946%" y="645" width="0.0801%" height="15" fill="rgb(209,156,10)" fg:x="853" fg:w="1"/><text x="68.5446%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.2946%" y="629" width="0.0801%" height="15" fill="rgb(207,125,47)" fg:x="853" fg:w="1"/><text x="68.5446%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="68.2946%" y="757" width="0.4003%" height="15" fill="rgb(221,117,28)" fg:x="853" fg:w="5"/><text x="68.5446%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="68.2946%" y="741" width="0.4003%" height="15" fill="rgb(221,170,12)" fg:x="853" fg:w="5"/><text x="68.5446%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (4 samples, 0.32%)</title><rect x="68.3747%" y="725" width="0.3203%" height="15" fill="rgb(241,222,52)" fg:x="854" fg:w="4"/><text x="68.6247%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="68.3747%" y="709" width="0.3203%" height="15" fill="rgb(219,52,6)" fg:x="854" fg:w="4"/><text x="68.6247%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="68.3747%" y="693" width="0.3203%" height="15" fill="rgb(226,144,34)" fg:x="854" fg:w="4"/><text x="68.6247%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="68.3747%" y="677" width="0.3203%" height="15" fill="rgb(231,179,27)" fg:x="854" fg:w="4"/><text x="68.6247%" y="687.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="68.3747%" y="661" width="0.3203%" height="15" fill="rgb(211,178,51)" fg:x="854" fg:w="4"/><text x="68.6247%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="68.6950%" y="741" width="0.0801%" height="15" fill="rgb(233,141,5)" fg:x="858" fg:w="1"/><text x="68.9450%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="68.6950%" y="725" width="0.0801%" height="15" fill="rgb(214,10,9)" fg:x="858" fg:w="1"/><text x="68.9450%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.6950%" y="709" width="0.0801%" height="15" fill="rgb(209,0,1)" fg:x="858" fg:w="1"/><text x="68.9450%" y="719.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.64%)</title><rect x="68.2946%" y="773" width="0.6405%" height="15" fill="rgb(207,82,30)" fg:x="853" fg:w="8"/><text x="68.5446%" y="783.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="68.6950%" y="757" width="0.2402%" height="15" fill="rgb(224,214,13)" fg:x="858" fg:w="3"/><text x="68.9450%" y="767.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="68.7750%" y="741" width="0.1601%" height="15" fill="rgb(237,84,33)" fg:x="859" fg:w="2"/><text x="69.0250%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="68.7750%" y="725" width="0.1601%" height="15" fill="rgb(231,25,9)" fg:x="859" fg:w="2"/><text x="69.0250%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="68.7750%" y="709" width="0.1601%" height="15" fill="rgb(207,51,8)" fg:x="859" fg:w="2"/><text x="69.0250%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="68.7750%" y="693" width="0.1601%" height="15" fill="rgb(234,189,54)" fg:x="859" fg:w="2"/><text x="69.0250%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="68.7750%" y="677" width="0.1601%" height="15" fill="rgb(214,188,52)" fg:x="859" fg:w="2"/><text x="69.0250%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="68.7750%" y="661" width="0.1601%" height="15" fill="rgb(214,17,11)" fg:x="859" fg:w="2"/><text x="69.0250%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.7750%" y="645" width="0.1601%" height="15" fill="rgb(250,31,36)" fg:x="859" fg:w="2"/><text x="69.0250%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.8551%" y="629" width="0.0801%" height="15" fill="rgb(244,57,44)" fg:x="860" fg:w="1"/><text x="69.1051%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.8551%" y="613" width="0.0801%" height="15" fill="rgb(209,209,31)" fg:x="860" fg:w="1"/><text x="69.1051%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.8551%" y="597" width="0.0801%" height="15" fill="rgb(217,47,5)" fg:x="860" fg:w="1"/><text x="69.1051%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.8551%" y="581" width="0.0801%" height="15" fill="rgb(214,78,42)" fg:x="860" fg:w="1"/><text x="69.1051%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.8551%" y="565" width="0.0801%" height="15" fill="rgb(226,15,23)" fg:x="860" fg:w="1"/><text x="69.1051%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="69.0152%" y="741" width="0.1601%" height="15" fill="rgb(230,171,7)" fg:x="862" fg:w="2"/><text x="69.2652%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="69.0152%" y="725" width="0.1601%" height="15" fill="rgb(229,71,9)" fg:x="862" fg:w="2"/><text x="69.2652%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="69.0152%" y="709" width="0.1601%" height="15" fill="rgb(221,111,31)" fg:x="862" fg:w="2"/><text x="69.2652%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.0152%" y="693" width="0.1601%" height="15" fill="rgb(237,86,50)" fg:x="862" fg:w="2"/><text x="69.2652%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.0152%" y="677" width="0.1601%" height="15" fill="rgb(234,49,32)" fg:x="862" fg:w="2"/><text x="69.2652%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.0152%" y="661" width="0.1601%" height="15" fill="rgb(225,144,27)" fg:x="862" fg:w="2"/><text x="69.2652%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.0152%" y="645" width="0.1601%" height="15" fill="rgb(225,209,36)" fg:x="862" fg:w="2"/><text x="69.2652%" y="655.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.0152%" y="629" width="0.1601%" height="15" fill="rgb(218,109,14)" fg:x="862" fg:w="2"/><text x="69.2652%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="69.1753%" y="741" width="0.0801%" height="15" fill="rgb(238,186,42)" fg:x="864" fg:w="1"/><text x="69.4253%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="69.1753%" y="725" width="0.0801%" height="15" fill="rgb(236,143,10)" fg:x="864" fg:w="1"/><text x="69.4253%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.1753%" y="709" width="0.0801%" height="15" fill="rgb(205,147,7)" fg:x="864" fg:w="1"/><text x="69.4253%" y="719.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.1753%" y="693" width="0.0801%" height="15" fill="rgb(245,224,0)" fg:x="864" fg:w="1"/><text x="69.4253%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.1753%" y="677" width="0.0801%" height="15" fill="rgb(213,208,32)" fg:x="864" fg:w="1"/><text x="69.4253%" y="687.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="68.9351%" y="773" width="0.4003%" height="15" fill="rgb(208,212,4)" fg:x="861" fg:w="5"/><text x="69.1851%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="68.9351%" y="757" width="0.4003%" height="15" fill="rgb(236,143,49)" fg:x="861" fg:w="5"/><text x="69.1851%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="69.2554%" y="741" width="0.0801%" height="15" fill="rgb(228,152,33)" fg:x="865" fg:w="1"/><text x="69.5054%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="69.2554%" y="725" width="0.0801%" height="15" fill="rgb(236,132,39)" fg:x="865" fg:w="1"/><text x="69.5054%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="69.2554%" y="709" width="0.0801%" height="15" fill="rgb(228,176,23)" fg:x="865" fg:w="1"/><text x="69.5054%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="69.2554%" y="693" width="0.0801%" height="15" fill="rgb(229,34,18)" fg:x="865" fg:w="1"/><text x="69.5054%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="69.2554%" y="677" width="0.0801%" height="15" fill="rgb(244,81,37)" fg:x="865" fg:w="1"/><text x="69.5054%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.2554%" y="661" width="0.0801%" height="15" fill="rgb(242,79,32)" fg:x="865" fg:w="1"/><text x="69.5054%" y="671.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="69.2554%" y="645" width="0.0801%" height="15" fill="rgb(245,15,51)" fg:x="865" fg:w="1"/><text x="69.5054%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="69.2554%" y="629" width="0.0801%" height="15" fill="rgb(209,82,8)" fg:x="865" fg:w="1"/><text x="69.5054%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="69.3355%" y="741" width="0.0801%" height="15" fill="rgb(248,65,42)" fg:x="866" fg:w="1"/><text x="69.5855%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.3355%" y="725" width="0.0801%" height="15" fill="rgb(216,132,33)" fg:x="866" fg:w="1"/><text x="69.5855%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.3355%" y="709" width="0.0801%" height="15" fill="rgb(207,21,32)" fg:x="866" fg:w="1"/><text x="69.5855%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.3355%" y="693" width="0.0801%" height="15" fill="rgb(247,27,22)" fg:x="866" fg:w="1"/><text x="69.5855%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.3355%" y="677" width="0.0801%" height="15" fill="rgb(254,72,41)" fg:x="866" fg:w="1"/><text x="69.5855%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.3355%" y="661" width="0.0801%" height="15" fill="rgb(250,6,31)" fg:x="866" fg:w="1"/><text x="69.5855%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="69.3355%" y="645" width="0.0801%" height="15" fill="rgb(224,124,0)" fg:x="866" fg:w="1"/><text x="69.5855%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="69.3355%" y="773" width="0.1601%" height="15" fill="rgb(228,7,24)" fg:x="866" fg:w="2"/><text x="69.5855%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="69.3355%" y="757" width="0.1601%" height="15" fill="rgb(250,202,22)" fg:x="866" fg:w="2"/><text x="69.5855%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="69.4155%" y="741" width="0.0801%" height="15" fill="rgb(214,89,5)" fg:x="867" fg:w="1"/><text x="69.6655%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="69.4155%" y="725" width="0.0801%" height="15" fill="rgb(228,82,34)" fg:x="867" fg:w="1"/><text x="69.6655%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="69.4956%" y="757" width="0.0801%" height="15" fill="rgb(212,164,18)" fg:x="868" fg:w="1"/><text x="69.7456%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="69.4956%" y="741" width="0.0801%" height="15" fill="rgb(210,75,6)" fg:x="868" fg:w="1"/><text x="69.7456%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="69.5757%" y="741" width="0.0801%" height="15" fill="rgb(251,11,45)" fg:x="869" fg:w="1"/><text x="69.8257%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="69.5757%" y="725" width="0.0801%" height="15" fill="rgb(234,105,14)" fg:x="869" fg:w="1"/><text x="69.8257%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="69.5757%" y="709" width="0.0801%" height="15" fill="rgb(220,123,16)" fg:x="869" fg:w="1"/><text x="69.8257%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="69.5757%" y="693" width="0.0801%" height="15" fill="rgb(238,16,42)" fg:x="869" fg:w="1"/><text x="69.8257%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="69.5757%" y="677" width="0.0801%" height="15" fill="rgb(239,101,26)" fg:x="869" fg:w="1"/><text x="69.8257%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="69.5757%" y="661" width="0.0801%" height="15" fill="rgb(228,12,27)" fg:x="869" fg:w="1"/><text x="69.8257%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="69.5757%" y="645" width="0.0801%" height="15" fill="rgb(218,165,53)" fg:x="869" fg:w="1"/><text x="69.8257%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="69.5757%" y="629" width="0.0801%" height="15" fill="rgb(250,44,27)" fg:x="869" fg:w="1"/><text x="69.8257%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="69.5757%" y="613" width="0.0801%" height="15" fill="rgb(229,69,35)" fg:x="869" fg:w="1"/><text x="69.8257%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="69.5757%" y="597" width="0.0801%" height="15" fill="rgb(241,38,31)" fg:x="869" fg:w="1"/><text x="69.8257%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="69.5757%" y="581" width="0.0801%" height="15" fill="rgb(224,152,13)" fg:x="869" fg:w="1"/><text x="69.8257%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="69.5757%" y="565" width="0.0801%" height="15" fill="rgb(207,225,8)" fg:x="869" fg:w="1"/><text x="69.8257%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="69.5757%" y="549" width="0.0801%" height="15" fill="rgb(222,135,50)" fg:x="869" fg:w="1"/><text x="69.8257%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="69.5757%" y="533" width="0.0801%" height="15" fill="rgb(245,39,15)" fg:x="869" fg:w="1"/><text x="69.8257%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.5757%" y="517" width="0.0801%" height="15" fill="rgb(233,22,17)" fg:x="869" fg:w="1"/><text x="69.8257%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.5757%" y="501" width="0.0801%" height="15" fill="rgb(227,152,49)" fg:x="869" fg:w="1"/><text x="69.8257%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="69.5757%" y="485" width="0.0801%" height="15" fill="rgb(233,162,45)" fg:x="869" fg:w="1"/><text x="69.8257%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="69.5757%" y="469" width="0.0801%" height="15" fill="rgb(217,44,48)" fg:x="869" fg:w="1"/><text x="69.8257%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="69.5757%" y="453" width="0.0801%" height="15" fill="rgb(253,41,35)" fg:x="869" fg:w="1"/><text x="69.8257%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="69.5757%" y="437" width="0.0801%" height="15" fill="rgb(254,32,37)" fg:x="869" fg:w="1"/><text x="69.8257%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="69.5757%" y="421" width="0.0801%" height="15" fill="rgb(250,9,9)" fg:x="869" fg:w="1"/><text x="69.8257%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="69.5757%" y="405" width="0.0801%" height="15" fill="rgb(212,37,16)" fg:x="869" fg:w="1"/><text x="69.8257%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="69.5757%" y="389" width="0.0801%" height="15" fill="rgb(235,142,51)" fg:x="869" fg:w="1"/><text x="69.8257%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="69.5757%" y="373" width="0.0801%" height="15" fill="rgb(250,225,53)" fg:x="869" fg:w="1"/><text x="69.8257%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="69.5757%" y="357" width="0.0801%" height="15" fill="rgb(207,188,48)" fg:x="869" fg:w="1"/><text x="69.8257%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="69.5757%" y="341" width="0.0801%" height="15" fill="rgb(222,25,21)" fg:x="869" fg:w="1"/><text x="69.8257%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="69.5757%" y="325" width="0.0801%" height="15" fill="rgb(249,112,5)" fg:x="869" fg:w="1"/><text x="69.8257%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="69.5757%" y="309" width="0.0801%" height="15" fill="rgb(242,11,22)" fg:x="869" fg:w="1"/><text x="69.8257%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="69.5757%" y="293" width="0.0801%" height="15" fill="rgb(217,125,14)" fg:x="869" fg:w="1"/><text x="69.8257%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.6557%" y="693" width="0.2402%" height="15" fill="rgb(239,92,14)" fg:x="870" fg:w="3"/><text x="69.9057%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.6557%" y="677" width="0.2402%" height="15" fill="rgb(232,145,17)" fg:x="870" fg:w="3"/><text x="69.9057%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.6557%" y="661" width="0.2402%" height="15" fill="rgb(250,158,16)" fg:x="870" fg:w="3"/><text x="69.9057%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.6557%" y="645" width="0.2402%" height="15" fill="rgb(247,30,22)" fg:x="870" fg:w="3"/><text x="69.9057%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.6557%" y="629" width="0.2402%" height="15" fill="rgb(219,215,46)" fg:x="870" fg:w="3"/><text x="69.9057%" y="639.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="69.6557%" y="613" width="0.2402%" height="15" fill="rgb(237,40,53)" fg:x="870" fg:w="3"/><text x="69.9057%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="69.6557%" y="741" width="0.3203%" height="15" fill="rgb(253,207,11)" fg:x="870" fg:w="4"/><text x="69.9057%" y="751.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="69.6557%" y="725" width="0.3203%" height="15" fill="rgb(242,16,9)" fg:x="870" fg:w="4"/><text x="69.9057%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="69.6557%" y="709" width="0.3203%" height="15" fill="rgb(237,94,35)" fg:x="870" fg:w="4"/><text x="69.9057%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.8959%" y="693" width="0.0801%" height="15" fill="rgb(244,145,23)" fg:x="873" fg:w="1"/><text x="70.1459%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.8959%" y="677" width="0.0801%" height="15" fill="rgb(209,93,17)" fg:x="873" fg:w="1"/><text x="70.1459%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.8959%" y="661" width="0.0801%" height="15" fill="rgb(205,201,0)" fg:x="873" fg:w="1"/><text x="70.1459%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.8959%" y="645" width="0.0801%" height="15" fill="rgb(225,198,48)" fg:x="873" fg:w="1"/><text x="70.1459%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="69.8959%" y="629" width="0.0801%" height="15" fill="rgb(211,131,51)" fg:x="873" fg:w="1"/><text x="70.1459%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.8959%" y="613" width="0.0801%" height="15" fill="rgb(237,196,37)" fg:x="873" fg:w="1"/><text x="70.1459%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.8959%" y="597" width="0.0801%" height="15" fill="rgb(218,204,52)" fg:x="873" fg:w="1"/><text x="70.1459%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.8959%" y="581" width="0.0801%" height="15" fill="rgb(251,67,25)" fg:x="873" fg:w="1"/><text x="70.1459%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.8959%" y="565" width="0.0801%" height="15" fill="rgb(219,87,2)" fg:x="873" fg:w="1"/><text x="70.1459%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="69.5757%" y="757" width="0.4804%" height="15" fill="rgb(224,171,9)" fg:x="869" fg:w="6"/><text x="69.8257%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.9760%" y="741" width="0.0801%" height="15" fill="rgb(215,98,45)" fg:x="874" fg:w="1"/><text x="70.2260%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.0560%" y="661" width="0.0801%" height="15" fill="rgb(231,48,23)" fg:x="875" fg:w="1"/><text x="70.3060%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1361%" y="629" width="0.0801%" height="15" fill="rgb(233,138,42)" fg:x="876" fg:w="1"/><text x="70.3861%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1361%" y="613" width="0.0801%" height="15" fill="rgb(244,107,0)" fg:x="876" fg:w="1"/><text x="70.3861%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1361%" y="597" width="0.0801%" height="15" fill="rgb(224,15,0)" fg:x="876" fg:w="1"/><text x="70.3861%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.1361%" y="581" width="0.0801%" height="15" fill="rgb(218,71,35)" fg:x="876" fg:w="1"/><text x="70.3861%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.1361%" y="565" width="0.0801%" height="15" fill="rgb(244,32,22)" fg:x="876" fg:w="1"/><text x="70.3861%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.1361%" y="549" width="0.0801%" height="15" fill="rgb(232,209,34)" fg:x="876" fg:w="1"/><text x="70.3861%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.1361%" y="533" width="0.0801%" height="15" fill="rgb(232,54,38)" fg:x="876" fg:w="1"/><text x="70.3861%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.1361%" y="517" width="0.0801%" height="15" fill="rgb(208,83,16)" fg:x="876" fg:w="1"/><text x="70.3861%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.1361%" y="501" width="0.0801%" height="15" fill="rgb(208,70,33)" fg:x="876" fg:w="1"/><text x="70.3861%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.1361%" y="485" width="0.0801%" height="15" fill="rgb(247,38,12)" fg:x="876" fg:w="1"/><text x="70.3861%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.1361%" y="469" width="0.0801%" height="15" fill="rgb(206,34,42)" fg:x="876" fg:w="1"/><text x="70.3861%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.1361%" y="453" width="0.0801%" height="15" fill="rgb(226,75,43)" fg:x="876" fg:w="1"/><text x="70.3861%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.1361%" y="437" width="0.0801%" height="15" fill="rgb(223,109,12)" fg:x="876" fg:w="1"/><text x="70.3861%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.1361%" y="421" width="0.0801%" height="15" fill="rgb(218,53,16)" fg:x="876" fg:w="1"/><text x="70.3861%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.1361%" y="405" width="0.0801%" height="15" fill="rgb(236,44,50)" fg:x="876" fg:w="1"/><text x="70.3861%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.1361%" y="389" width="0.0801%" height="15" fill="rgb(211,163,12)" fg:x="876" fg:w="1"/><text x="70.3861%" y="399.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="70.0560%" y="709" width="0.2402%" height="15" fill="rgb(230,67,52)" fg:x="875" fg:w="3"/><text x="70.3060%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="70.0560%" y="693" width="0.2402%" height="15" fill="rgb(224,204,24)" fg:x="875" fg:w="3"/><text x="70.3060%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="70.0560%" y="677" width="0.2402%" height="15" fill="rgb(210,50,27)" fg:x="875" fg:w="3"/><text x="70.3060%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="70.1361%" y="661" width="0.1601%" height="15" fill="rgb(251,202,23)" fg:x="876" fg:w="2"/><text x="70.3861%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.1361%" y="645" width="0.1601%" height="15" fill="rgb(230,210,21)" fg:x="876" fg:w="2"/><text x="70.3861%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.2162%" y="629" width="0.0801%" height="15" fill="rgb(222,72,44)" fg:x="877" fg:w="1"/><text x="70.4662%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.2162%" y="613" width="0.0801%" height="15" fill="rgb(223,182,13)" fg:x="877" fg:w="1"/><text x="70.4662%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="70.2962%" y="629" width="0.0801%" height="15" fill="rgb(228,61,15)" fg:x="878" fg:w="1"/><text x="70.5462%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.2962%" y="613" width="0.0801%" height="15" fill="rgb(253,207,22)" fg:x="878" fg:w="1"/><text x="70.5462%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.2962%" y="597" width="0.0801%" height="15" fill="rgb(232,10,15)" fg:x="878" fg:w="1"/><text x="70.5462%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.2962%" y="581" width="0.0801%" height="15" fill="rgb(227,207,39)" fg:x="878" fg:w="1"/><text x="70.5462%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.2962%" y="565" width="0.0801%" height="15" fill="rgb(228,187,3)" fg:x="878" fg:w="1"/><text x="70.5462%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.2962%" y="549" width="0.0801%" height="15" fill="rgb(246,45,9)" fg:x="878" fg:w="1"/><text x="70.5462%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.2962%" y="533" width="0.0801%" height="15" fill="rgb(249,10,17)" fg:x="878" fg:w="1"/><text x="70.5462%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.2962%" y="517" width="0.0801%" height="15" fill="rgb(251,56,51)" fg:x="878" fg:w="1"/><text x="70.5462%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.2962%" y="501" width="0.0801%" height="15" fill="rgb(232,51,36)" fg:x="878" fg:w="1"/><text x="70.5462%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.2962%" y="485" width="0.0801%" height="15" fill="rgb(215,38,28)" fg:x="878" fg:w="1"/><text x="70.5462%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.2962%" y="469" width="0.0801%" height="15" fill="rgb(218,5,35)" fg:x="878" fg:w="1"/><text x="70.5462%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.2962%" y="453" width="0.0801%" height="15" fill="rgb(232,219,8)" fg:x="878" fg:w="1"/><text x="70.5462%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.2962%" y="437" width="0.0801%" height="15" fill="rgb(243,162,8)" fg:x="878" fg:w="1"/><text x="70.5462%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.3763%" y="597" width="0.0801%" height="15" fill="rgb(218,86,32)" fg:x="879" fg:w="1"/><text x="70.6263%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.3763%" y="581" width="0.0801%" height="15" fill="rgb(218,179,51)" fg:x="879" fg:w="1"/><text x="70.6263%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.3763%" y="565" width="0.0801%" height="15" fill="rgb(237,42,52)" fg:x="879" fg:w="1"/><text x="70.6263%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.3763%" y="549" width="0.0801%" height="15" fill="rgb(229,12,4)" fg:x="879" fg:w="1"/><text x="70.6263%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.4564%" y="597" width="0.0801%" height="15" fill="rgb(214,203,2)" fg:x="880" fg:w="1"/><text x="70.7064%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.4564%" y="581" width="0.0801%" height="15" fill="rgb(241,11,44)" fg:x="880" fg:w="1"/><text x="70.7064%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.4564%" y="565" width="0.0801%" height="15" fill="rgb(221,106,48)" fg:x="880" fg:w="1"/><text x="70.7064%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.4564%" y="549" width="0.0801%" height="15" fill="rgb(220,220,10)" fg:x="880" fg:w="1"/><text x="70.7064%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.4564%" y="533" width="0.0801%" height="15" fill="rgb(228,220,44)" fg:x="880" fg:w="1"/><text x="70.7064%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.4564%" y="517" width="0.0801%" height="15" fill="rgb(214,144,45)" fg:x="880" fg:w="1"/><text x="70.7064%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.4564%" y="501" width="0.0801%" height="15" fill="rgb(224,142,28)" fg:x="880" fg:w="1"/><text x="70.7064%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5364%" y="565" width="0.0801%" height="15" fill="rgb(214,79,27)" fg:x="881" fg:w="1"/><text x="70.7864%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="70.2962%" y="693" width="0.4003%" height="15" fill="rgb(208,173,30)" fg:x="878" fg:w="5"/><text x="70.5462%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="70.2962%" y="677" width="0.4003%" height="15" fill="rgb(222,81,9)" fg:x="878" fg:w="5"/><text x="70.5462%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="70.2962%" y="661" width="0.4003%" height="15" fill="rgb(217,152,25)" fg:x="878" fg:w="5"/><text x="70.5462%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="70.2962%" y="645" width="0.4003%" height="15" fill="rgb(248,170,26)" fg:x="878" fg:w="5"/><text x="70.5462%" y="655.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="70.3763%" y="629" width="0.3203%" height="15" fill="rgb(206,151,5)" fg:x="879" fg:w="4"/><text x="70.6263%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="70.3763%" y="613" width="0.3203%" height="15" fill="rgb(216,7,52)" fg:x="879" fg:w="4"/><text x="70.6263%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="70.5364%" y="597" width="0.1601%" height="15" fill="rgb(228,27,44)" fg:x="881" fg:w="2"/><text x="70.7864%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="70.5364%" y="581" width="0.1601%" height="15" fill="rgb(208,221,38)" fg:x="881" fg:w="2"/><text x="70.7864%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="70.6165%" y="565" width="0.0801%" height="15" fill="rgb(240,59,23)" fg:x="882" fg:w="1"/><text x="70.8665%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.6165%" y="549" width="0.0801%" height="15" fill="rgb(210,127,41)" fg:x="882" fg:w="1"/><text x="70.8665%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="70.6165%" y="533" width="0.0801%" height="15" fill="rgb(224,160,3)" fg:x="882" fg:w="1"/><text x="70.8665%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="70.6165%" y="517" width="0.0801%" height="15" fill="rgb(215,228,26)" fg:x="882" fg:w="1"/><text x="70.8665%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="70.6966%" y="645" width="0.0801%" height="15" fill="rgb(218,107,38)" fg:x="883" fg:w="1"/><text x="70.9466%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="70.6966%" y="629" width="0.0801%" height="15" fill="rgb(246,159,42)" fg:x="883" fg:w="1"/><text x="70.9466%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.6966%" y="613" width="0.0801%" height="15" fill="rgb(251,23,41)" fg:x="883" fg:w="1"/><text x="70.9466%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.6966%" y="597" width="0.0801%" height="15" fill="rgb(246,94,53)" fg:x="883" fg:w="1"/><text x="70.9466%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.6966%" y="581" width="0.0801%" height="15" fill="rgb(241,212,46)" fg:x="883" fg:w="1"/><text x="70.9466%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.6966%" y="565" width="0.0801%" height="15" fill="rgb(231,79,30)" fg:x="883" fg:w="1"/><text x="70.9466%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.6966%" y="549" width="0.0801%" height="15" fill="rgb(208,202,21)" fg:x="883" fg:w="1"/><text x="70.9466%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.6966%" y="533" width="0.0801%" height="15" fill="rgb(226,136,22)" fg:x="883" fg:w="1"/><text x="70.9466%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.6966%" y="517" width="0.0801%" height="15" fill="rgb(214,87,0)" fg:x="883" fg:w="1"/><text x="70.9466%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.6966%" y="501" width="0.0801%" height="15" fill="rgb(239,176,44)" fg:x="883" fg:w="1"/><text x="70.9466%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.6966%" y="485" width="0.0801%" height="15" fill="rgb(230,102,31)" fg:x="883" fg:w="1"/><text x="70.9466%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.6966%" y="469" width="0.0801%" height="15" fill="rgb(219,40,19)" fg:x="883" fg:w="1"/><text x="70.9466%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7766%" y="597" width="0.0801%" height="15" fill="rgb(228,55,4)" fg:x="884" fg:w="1"/><text x="71.0266%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7766%" y="581" width="0.0801%" height="15" fill="rgb(239,120,21)" fg:x="884" fg:w="1"/><text x="71.0266%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7766%" y="565" width="0.0801%" height="15" fill="rgb(243,136,1)" fg:x="884" fg:w="1"/><text x="71.0266%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7766%" y="549" width="0.0801%" height="15" fill="rgb(237,12,45)" fg:x="884" fg:w="1"/><text x="71.0266%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7766%" y="533" width="0.0801%" height="15" fill="rgb(245,142,47)" fg:x="884" fg:w="1"/><text x="71.0266%" y="543.50"></text></g><g><title>plugins_core::build::Build::leads_to (8 samples, 0.64%)</title><rect x="70.2962%" y="709" width="0.6405%" height="15" fill="rgb(237,24,54)" fg:x="878" fg:w="8"/><text x="70.5462%" y="719.50"></text></g><g><title>plugins_core::tools::leads_to (3 samples, 0.24%)</title><rect x="70.6966%" y="693" width="0.2402%" height="15" fill="rgb(234,164,40)" fg:x="883" fg:w="3"/><text x="70.9466%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="70.6966%" y="677" width="0.2402%" height="15" fill="rgb(242,95,12)" fg:x="883" fg:w="3"/><text x="70.9466%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="70.6966%" y="661" width="0.2402%" height="15" fill="rgb(238,75,28)" fg:x="883" fg:w="3"/><text x="70.9466%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="70.7766%" y="645" width="0.1601%" height="15" fill="rgb(236,4,26)" fg:x="884" fg:w="2"/><text x="71.0266%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="70.7766%" y="629" width="0.1601%" height="15" fill="rgb(252,158,20)" fg:x="884" fg:w="2"/><text x="71.0266%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.7766%" y="613" width="0.1601%" height="15" fill="rgb(231,67,31)" fg:x="884" fg:w="2"/><text x="71.0266%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.8567%" y="597" width="0.0801%" height="15" fill="rgb(241,151,13)" fg:x="885" fg:w="1"/><text x="71.1067%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.8567%" y="581" width="0.0801%" height="15" fill="rgb(242,25,36)" fg:x="885" fg:w="1"/><text x="71.1067%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.8567%" y="565" width="0.0801%" height="15" fill="rgb(205,222,34)" fg:x="885" fg:w="1"/><text x="71.1067%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.8567%" y="549" width="0.0801%" height="15" fill="rgb(235,154,26)" fg:x="885" fg:w="1"/><text x="71.1067%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.8567%" y="533" width="0.0801%" height="15" fill="rgb(233,17,9)" fg:x="885" fg:w="1"/><text x="71.1067%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.8567%" y="517" width="0.0801%" height="15" fill="rgb(245,113,50)" fg:x="885" fg:w="1"/><text x="71.1067%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.96%)</title><rect x="70.0560%" y="757" width="0.9608%" height="15" fill="rgb(247,105,34)" fg:x="875" fg:w="12"/><text x="70.3060%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.96%)</title><rect x="70.0560%" y="741" width="0.9608%" height="15" fill="rgb(225,50,23)" fg:x="875" fg:w="12"/><text x="70.3060%" y="751.50"></text></g><g><title>plugins_core::build::QuickThing::make (12 samples, 0.96%)</title><rect x="70.0560%" y="725" width="0.9608%" height="15" fill="rgb(253,189,32)" fg:x="875" fg:w="12"/><text x="70.3060%" y="735.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="70.9367%" y="709" width="0.0801%" height="15" fill="rgb(208,159,41)" fg:x="886" fg:w="1"/><text x="71.1867%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="70.9367%" y="693" width="0.0801%" height="15" fill="rgb(222,135,10)" fg:x="886" fg:w="1"/><text x="71.1867%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="70.9367%" y="677" width="0.0801%" height="15" fill="rgb(214,75,20)" fg:x="886" fg:w="1"/><text x="71.1867%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="70.9367%" y="661" width="0.0801%" height="15" fill="rgb(231,65,33)" fg:x="886" fg:w="1"/><text x="71.1867%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="70.9367%" y="645" width="0.0801%" height="15" fill="rgb(251,139,6)" fg:x="886" fg:w="1"/><text x="71.1867%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.9367%" y="629" width="0.0801%" height="15" fill="rgb(225,220,53)" fg:x="886" fg:w="1"/><text x="71.1867%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="70.9367%" y="613" width="0.0801%" height="15" fill="rgb(244,73,26)" fg:x="886" fg:w="1"/><text x="71.1867%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.9367%" y="597" width="0.0801%" height="15" fill="rgb(244,98,34)" fg:x="886" fg:w="1"/><text x="71.1867%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="70.9367%" y="581" width="0.0801%" height="15" fill="rgb(211,131,5)" fg:x="886" fg:w="1"/><text x="71.1867%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="70.9367%" y="565" width="0.0801%" height="15" fill="rgb(238,14,50)" fg:x="886" fg:w="1"/><text x="71.1867%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.9367%" y="549" width="0.0801%" height="15" fill="rgb(206,132,52)" fg:x="886" fg:w="1"/><text x="71.1867%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="70.9367%" y="533" width="0.0801%" height="15" fill="rgb(228,200,17)" fg:x="886" fg:w="1"/><text x="71.1867%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.9367%" y="517" width="0.0801%" height="15" fill="rgb(209,53,28)" fg:x="886" fg:w="1"/><text x="71.1867%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="71.0168%" y="741" width="0.0801%" height="15" fill="rgb(240,214,22)" fg:x="887" fg:w="1"/><text x="71.2668%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.0168%" y="725" width="0.0801%" height="15" fill="rgb(213,217,46)" fg:x="887" fg:w="1"/><text x="71.2668%" y="735.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="71.0969%" y="725" width="0.0801%" height="15" fill="rgb(241,159,53)" fg:x="888" fg:w="1"/><text x="71.3469%" y="735.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="71.0969%" y="709" width="0.0801%" height="15" fill="rgb(241,70,32)" fg:x="888" fg:w="1"/><text x="71.3469%" y="719.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="71.1769%" y="693" width="0.0801%" height="15" fill="rgb(233,117,50)" fg:x="889" fg:w="1"/><text x="71.4269%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="71.1769%" y="677" width="0.0801%" height="15" fill="rgb(211,114,15)" fg:x="889" fg:w="1"/><text x="71.4269%" y="687.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="71.1769%" y="661" width="0.0801%" height="15" fill="rgb(254,0,36)" fg:x="889" fg:w="1"/><text x="71.4269%" y="671.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="71.1769%" y="645" width="0.0801%" height="15" fill="rgb(221,74,12)" fg:x="889" fg:w="1"/><text x="71.4269%" y="655.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="71.2570%" y="661" width="0.0801%" height="15" fill="rgb(241,221,3)" fg:x="890" fg:w="1"/><text x="71.5070%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="71.2570%" y="645" width="0.0801%" height="15" fill="rgb(252,91,23)" fg:x="890" fg:w="1"/><text x="71.5070%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.2570%" y="629" width="0.0801%" height="15" fill="rgb(232,1,25)" fg:x="890" fg:w="1"/><text x="71.5070%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.2570%" y="613" width="0.0801%" height="15" fill="rgb(253,145,25)" fg:x="890" fg:w="1"/><text x="71.5070%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.2570%" y="597" width="0.0801%" height="15" fill="rgb(226,43,53)" fg:x="890" fg:w="1"/><text x="71.5070%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.2570%" y="581" width="0.0801%" height="15" fill="rgb(245,116,39)" fg:x="890" fg:w="1"/><text x="71.5070%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.2570%" y="565" width="0.0801%" height="15" fill="rgb(231,205,33)" fg:x="890" fg:w="1"/><text x="71.5070%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="71.3371%" y="629" width="0.1601%" height="15" fill="rgb(238,96,15)" fg:x="891" fg:w="2"/><text x="71.5871%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="71.3371%" y="613" width="0.1601%" height="15" fill="rgb(212,80,14)" fg:x="891" fg:w="2"/><text x="71.5871%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="71.3371%" y="597" width="0.1601%" height="15" fill="rgb(209,118,24)" fg:x="891" fg:w="2"/><text x="71.5871%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.4171%" y="581" width="0.0801%" height="15" fill="rgb(234,176,14)" fg:x="892" fg:w="1"/><text x="71.6671%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="71.3371%" y="645" width="0.2402%" height="15" fill="rgb(207,145,21)" fg:x="891" fg:w="3"/><text x="71.5871%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="71.4972%" y="629" width="0.0801%" height="15" fill="rgb(218,58,54)" fg:x="893" fg:w="1"/><text x="71.7472%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="71.4972%" y="613" width="0.0801%" height="15" fill="rgb(229,11,50)" fg:x="893" fg:w="1"/><text x="71.7472%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.4972%" y="597" width="0.0801%" height="15" fill="rgb(221,170,33)" fg:x="893" fg:w="1"/><text x="71.7472%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="71.5773%" y="629" width="0.0801%" height="15" fill="rgb(221,121,40)" fg:x="894" fg:w="1"/><text x="71.8273%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="71.5773%" y="613" width="0.0801%" height="15" fill="rgb(214,165,32)" fg:x="894" fg:w="1"/><text x="71.8273%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="71.5773%" y="597" width="0.0801%" height="15" fill="rgb(243,195,30)" fg:x="894" fg:w="1"/><text x="71.8273%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.5773%" y="581" width="0.0801%" height="15" fill="rgb(238,0,27)" fg:x="894" fg:w="1"/><text x="71.8273%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="71.6573%" y="613" width="0.0801%" height="15" fill="rgb(226,0,50)" fg:x="895" fg:w="1"/><text x="71.9073%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="71.7374%" y="581" width="0.0801%" height="15" fill="rgb(222,93,46)" fg:x="896" fg:w="1"/><text x="71.9874%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="71.7374%" y="565" width="0.0801%" height="15" fill="rgb(210,34,24)" fg:x="896" fg:w="1"/><text x="71.9874%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="71.7374%" y="549" width="0.0801%" height="15" fill="rgb(217,47,8)" fg:x="896" fg:w="1"/><text x="71.9874%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.7374%" y="533" width="0.0801%" height="15" fill="rgb(217,0,26)" fg:x="896" fg:w="1"/><text x="71.9874%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="71.8975%" y="565" width="0.1601%" height="15" fill="rgb(218,228,31)" fg:x="898" fg:w="2"/><text x="72.1475%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="71.8975%" y="549" width="0.1601%" height="15" fill="rgb(208,101,40)" fg:x="898" fg:w="2"/><text x="72.1475%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="71.9776%" y="533" width="0.0801%" height="15" fill="rgb(225,134,0)" fg:x="899" fg:w="1"/><text x="72.2276%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.9776%" y="517" width="0.0801%" height="15" fill="rgb(241,37,25)" fg:x="899" fg:w="1"/><text x="72.2276%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="72.0576%" y="565" width="0.0801%" height="15" fill="rgb(251,149,9)" fg:x="900" fg:w="1"/><text x="72.3076%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.0576%" y="549" width="0.0801%" height="15" fill="rgb(225,196,54)" fg:x="900" fg:w="1"/><text x="72.3076%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.0576%" y="533" width="0.0801%" height="15" fill="rgb(240,46,24)" fg:x="900" fg:w="1"/><text x="72.3076%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.0576%" y="517" width="0.0801%" height="15" fill="rgb(214,189,4)" fg:x="900" fg:w="1"/><text x="72.3076%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.0576%" y="501" width="0.0801%" height="15" fill="rgb(222,3,8)" fg:x="900" fg:w="1"/><text x="72.3076%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.0576%" y="485" width="0.0801%" height="15" fill="rgb(250,163,6)" fg:x="900" fg:w="1"/><text x="72.3076%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.0576%" y="469" width="0.0801%" height="15" fill="rgb(225,23,45)" fg:x="900" fg:w="1"/><text x="72.3076%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="72.0576%" y="453" width="0.0801%" height="15" fill="rgb(225,177,23)" fg:x="900" fg:w="1"/><text x="72.3076%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="71.8175%" y="581" width="0.4003%" height="15" fill="rgb(253,75,3)" fg:x="897" fg:w="5"/><text x="72.0675%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.1377%" y="565" width="0.0801%" height="15" fill="rgb(237,85,4)" fg:x="901" fg:w="1"/><text x="72.3877%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="71.6573%" y="629" width="0.6405%" height="15" fill="rgb(212,23,3)" fg:x="895" fg:w="8"/><text x="71.9073%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="71.7374%" y="613" width="0.5604%" height="15" fill="rgb(250,127,19)" fg:x="896" fg:w="7"/><text x="71.9874%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="71.7374%" y="597" width="0.5604%" height="15" fill="rgb(222,82,14)" fg:x="896" fg:w="7"/><text x="71.9874%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.2178%" y="581" width="0.0801%" height="15" fill="rgb(213,63,47)" fg:x="902" fg:w="1"/><text x="72.4678%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.2178%" y="565" width="0.0801%" height="15" fill="rgb(219,132,41)" fg:x="902" fg:w="1"/><text x="72.4678%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (15 samples, 1.20%)</title><rect x="71.3371%" y="661" width="1.2010%" height="15" fill="rgb(251,205,16)" fg:x="891" fg:w="15"/><text x="71.5871%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="71.5773%" y="645" width="0.9608%" height="15" fill="rgb(239,102,23)" fg:x="894" fg:w="12"/><text x="71.8273%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="72.2978%" y="629" width="0.2402%" height="15" fill="rgb(222,218,4)" fg:x="903" fg:w="3"/><text x="72.5478%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="72.2978%" y="613" width="0.2402%" height="15" fill="rgb(232,91,40)" fg:x="903" fg:w="3"/><text x="72.5478%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="72.2978%" y="597" width="0.2402%" height="15" fill="rgb(238,170,50)" fg:x="903" fg:w="3"/><text x="72.5478%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="72.2978%" y="581" width="0.2402%" height="15" fill="rgb(243,52,25)" fg:x="903" fg:w="3"/><text x="72.5478%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="72.2978%" y="565" width="0.2402%" height="15" fill="rgb(236,151,10)" fg:x="903" fg:w="3"/><text x="72.5478%" y="575.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="72.3779%" y="549" width="0.1601%" height="15" fill="rgb(216,123,7)" fg:x="904" fg:w="2"/><text x="72.6279%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="72.5380%" y="661" width="0.1601%" height="15" fill="rgb(247,115,15)" fg:x="906" fg:w="2"/><text x="72.7880%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="72.5380%" y="645" width="0.1601%" height="15" fill="rgb(249,65,46)" fg:x="906" fg:w="2"/><text x="72.7880%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.6181%" y="629" width="0.0801%" height="15" fill="rgb(230,132,24)" fg:x="907" fg:w="1"/><text x="72.8681%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.6181%" y="613" width="0.0801%" height="15" fill="rgb(253,115,7)" fg:x="907" fg:w="1"/><text x="72.8681%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="72.6982%" y="613" width="0.2402%" height="15" fill="rgb(233,23,21)" fg:x="908" fg:w="3"/><text x="72.9482%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.8583%" y="597" width="0.0801%" height="15" fill="rgb(231,203,18)" fg:x="910" fg:w="1"/><text x="73.1083%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.8583%" y="581" width="0.0801%" height="15" fill="rgb(233,19,15)" fg:x="910" fg:w="1"/><text x="73.1083%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="72.9384%" y="613" width="0.0801%" height="15" fill="rgb(213,12,4)" fg:x="911" fg:w="1"/><text x="73.1884%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="72.9384%" y="597" width="0.0801%" height="15" fill="rgb(221,198,54)" fg:x="911" fg:w="1"/><text x="73.1884%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="73.0184%" y="565" width="0.1601%" height="15" fill="rgb(247,189,16)" fg:x="912" fg:w="2"/><text x="73.2684%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.0985%" y="549" width="0.0801%" height="15" fill="rgb(213,82,46)" fg:x="913" fg:w="1"/><text x="73.3485%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.0985%" y="533" width="0.0801%" height="15" fill="rgb(216,129,40)" fg:x="913" fg:w="1"/><text x="73.3485%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.1785%" y="565" width="0.0801%" height="15" fill="rgb(222,154,45)" fg:x="914" fg:w="1"/><text x="73.4285%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="73.1785%" y="549" width="0.0801%" height="15" fill="rgb(214,223,41)" fg:x="914" fg:w="1"/><text x="73.4285%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="73.3387%" y="549" width="0.0801%" height="15" fill="rgb(212,167,3)" fg:x="916" fg:w="1"/><text x="73.5887%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.4988%" y="533" width="0.0801%" height="15" fill="rgb(219,226,20)" fg:x="918" fg:w="1"/><text x="73.7488%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.4988%" y="517" width="0.0801%" height="15" fill="rgb(231,29,48)" fg:x="918" fg:w="1"/><text x="73.7488%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.4988%" y="501" width="0.0801%" height="15" fill="rgb(224,12,4)" fg:x="918" fg:w="1"/><text x="73.7488%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="73.5789%" y="485" width="0.0801%" height="15" fill="rgb(217,180,30)" fg:x="919" fg:w="1"/><text x="73.8289%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="73.7390%" y="453" width="0.0801%" height="15" fill="rgb(237,137,17)" fg:x="921" fg:w="1"/><text x="73.9890%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.7390%" y="437" width="0.0801%" height="15" fill="rgb(252,225,18)" fg:x="921" fg:w="1"/><text x="73.9890%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.7390%" y="421" width="0.0801%" height="15" fill="rgb(209,177,11)" fg:x="921" fg:w="1"/><text x="73.9890%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.7390%" y="405" width="0.0801%" height="15" fill="rgb(214,147,8)" fg:x="921" fg:w="1"/><text x="73.9890%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="73.6589%" y="485" width="0.2402%" height="15" fill="rgb(213,225,52)" fg:x="920" fg:w="3"/><text x="73.9089%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="73.7390%" y="469" width="0.1601%" height="15" fill="rgb(205,99,43)" fg:x="921" fg:w="2"/><text x="73.9890%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.8191%" y="453" width="0.0801%" height="15" fill="rgb(248,141,45)" fg:x="922" fg:w="1"/><text x="74.0691%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="73.4187%" y="549" width="0.6405%" height="15" fill="rgb(233,198,44)" fg:x="917" fg:w="8"/><text x="73.6687%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="73.5789%" y="533" width="0.4804%" height="15" fill="rgb(231,176,38)" fg:x="919" fg:w="6"/><text x="73.8289%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="73.5789%" y="517" width="0.4804%" height="15" fill="rgb(209,31,1)" fg:x="919" fg:w="6"/><text x="73.8289%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="73.5789%" y="501" width="0.4804%" height="15" fill="rgb(246,42,27)" fg:x="919" fg:w="6"/><text x="73.8289%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="73.8991%" y="485" width="0.1601%" height="15" fill="rgb(244,104,27)" fg:x="923" fg:w="2"/><text x="74.1491%" y="495.50"></text></g><g><title>engine::session::Session::flush (39 samples, 3.12%)</title><rect x="71.0168%" y="757" width="3.1225%" height="15" fill="rgb(209,14,27)" fg:x="887" fg:w="39"/><text x="71.2668%" y="767.50">eng..</text></g><g><title>engine::session::Session::save_changes (38 samples, 3.04%)</title><rect x="71.0969%" y="741" width="3.0424%" height="15" fill="rgb(205,170,50)" fg:x="888" fg:w="38"/><text x="71.3469%" y="751.50">eng..</text></g><g><title>engine::session::state::State::close (37 samples, 2.96%)</title><rect x="71.1769%" y="725" width="2.9624%" height="15" fill="rgb(241,127,20)" fg:x="889" fg:w="37"/><text x="71.4269%" y="735.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (37 samples, 2.96%)</title><rect x="71.1769%" y="709" width="2.9624%" height="15" fill="rgb(230,72,5)" fg:x="889" fg:w="37"/><text x="71.4269%" y="719.50">eng..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (36 samples, 2.88%)</title><rect x="71.2570%" y="693" width="2.8823%" height="15" fill="rgb(231,221,3)" fg:x="890" fg:w="36"/><text x="71.5070%" y="703.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (36 samples, 2.88%)</title><rect x="71.2570%" y="677" width="2.8823%" height="15" fill="rgb(232,150,49)" fg:x="890" fg:w="36"/><text x="71.5070%" y="687.50">en..</text></g><g><title>kernel::model::any_entity_changes (18 samples, 1.44%)</title><rect x="72.6982%" y="661" width="1.4412%" height="15" fill="rgb(225,13,46)" fg:x="908" fg:w="18"/><text x="72.9482%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (18 samples, 1.44%)</title><rect x="72.6982%" y="645" width="1.4412%" height="15" fill="rgb(236,192,49)" fg:x="908" fg:w="18"/><text x="72.9482%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 1.44%)</title><rect x="72.6982%" y="629" width="1.4412%" height="15" fill="rgb(242,107,14)" fg:x="908" fg:w="18"/><text x="72.9482%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.12%)</title><rect x="73.0184%" y="613" width="1.1209%" height="15" fill="rgb(251,185,35)" fg:x="912" fg:w="14"/><text x="73.2684%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.12%)</title><rect x="73.0184%" y="597" width="1.1209%" height="15" fill="rgb(212,128,8)" fg:x="912" fg:w="14"/><text x="73.2684%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.12%)</title><rect x="73.0184%" y="581" width="1.1209%" height="15" fill="rgb(215,223,6)" fg:x="912" fg:w="14"/><text x="73.2684%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="73.2586%" y="565" width="0.8807%" height="15" fill="rgb(216,23,45)" fg:x="915" fg:w="11"/><text x="73.5086%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.0592%" y="549" width="0.0801%" height="15" fill="rgb(215,71,45)" fg:x="925" fg:w="1"/><text x="74.3092%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="74.1393%" y="725" width="0.0801%" height="15" fill="rgb(224,2,48)" fg:x="926" fg:w="1"/><text x="74.3893%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="74.1393%" y="741" width="0.1601%" height="15" fill="rgb(218,48,8)" fg:x="926" fg:w="2"/><text x="74.3893%" y="751.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="74.2194%" y="725" width="0.0801%" height="15" fill="rgb(254,37,27)" fg:x="927" fg:w="1"/><text x="74.4694%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="74.2194%" y="709" width="0.0801%" height="15" fill="rgb(237,112,2)" fg:x="927" fg:w="1"/><text x="74.4694%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="74.1393%" y="757" width="0.2402%" height="15" fill="rgb(243,64,54)" fg:x="926" fg:w="3"/><text x="74.3893%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="74.2994%" y="741" width="0.0801%" height="15" fill="rgb(211,93,4)" fg:x="928" fg:w="1"/><text x="74.5494%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="74.2994%" y="725" width="0.0801%" height="15" fill="rgb(249,127,30)" fg:x="928" fg:w="1"/><text x="74.5494%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.2994%" y="709" width="0.0801%" height="15" fill="rgb(248,76,17)" fg:x="928" fg:w="1"/><text x="74.5494%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.2994%" y="693" width="0.0801%" height="15" fill="rgb(244,153,49)" fg:x="928" fg:w="1"/><text x="74.5494%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.2994%" y="677" width="0.0801%" height="15" fill="rgb(231,94,34)" fg:x="928" fg:w="1"/><text x="74.5494%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.2994%" y="661" width="0.0801%" height="15" fill="rgb(253,162,40)" fg:x="928" fg:w="1"/><text x="74.5494%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.2994%" y="645" width="0.0801%" height="15" fill="rgb(219,194,14)" fg:x="928" fg:w="1"/><text x="74.5494%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.2994%" y="629" width="0.0801%" height="15" fill="rgb(226,80,42)" fg:x="928" fg:w="1"/><text x="74.5494%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.2994%" y="613" width="0.0801%" height="15" fill="rgb(208,108,5)" fg:x="928" fg:w="1"/><text x="74.5494%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.2994%" y="597" width="0.0801%" height="15" fill="rgb(209,204,33)" fg:x="928" fg:w="1"/><text x="74.5494%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.2994%" y="581" width="0.0801%" height="15" fill="rgb(232,22,14)" fg:x="928" fg:w="1"/><text x="74.5494%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.2994%" y="565" width="0.0801%" height="15" fill="rgb(236,139,41)" fg:x="928" fg:w="1"/><text x="74.5494%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.2994%" y="549" width="0.0801%" height="15" fill="rgb(220,91,0)" fg:x="928" fg:w="1"/><text x="74.5494%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.2994%" y="533" width="0.0801%" height="15" fill="rgb(243,200,48)" fg:x="928" fg:w="1"/><text x="74.5494%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.2994%" y="517" width="0.0801%" height="15" fill="rgb(237,172,41)" fg:x="928" fg:w="1"/><text x="74.5494%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.2994%" y="501" width="0.0801%" height="15" fill="rgb(247,152,34)" fg:x="928" fg:w="1"/><text x="74.5494%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.2994%" y="485" width="0.0801%" height="15" fill="rgb(205,88,40)" fg:x="928" fg:w="1"/><text x="74.5494%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.3795%" y="725" width="0.0801%" height="15" fill="rgb(223,30,13)" fg:x="929" fg:w="1"/><text x="74.6295%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.3795%" y="709" width="0.0801%" height="15" fill="rgb(249,7,18)" fg:x="929" fg:w="1"/><text x="74.6295%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.3795%" y="693" width="0.0801%" height="15" fill="rgb(242,185,6)" fg:x="929" fg:w="1"/><text x="74.6295%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3795%" y="677" width="0.0801%" height="15" fill="rgb(234,115,47)" fg:x="929" fg:w="1"/><text x="74.6295%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3795%" y="661" width="0.0801%" height="15" fill="rgb(213,98,2)" fg:x="929" fg:w="1"/><text x="74.6295%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3795%" y="645" width="0.0801%" height="15" fill="rgb(237,162,23)" fg:x="929" fg:w="1"/><text x="74.6295%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3795%" y="629" width="0.0801%" height="15" fill="rgb(240,174,26)" fg:x="929" fg:w="1"/><text x="74.6295%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3795%" y="613" width="0.0801%" height="15" fill="rgb(249,90,45)" fg:x="929" fg:w="1"/><text x="74.6295%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.3795%" y="597" width="0.0801%" height="15" fill="rgb(212,126,4)" fg:x="929" fg:w="1"/><text x="74.6295%" y="607.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="74.4596%" y="725" width="0.0801%" height="15" fill="rgb(236,98,48)" fg:x="930" fg:w="1"/><text x="74.7096%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="74.4596%" y="709" width="0.0801%" height="15" fill="rgb(250,14,51)" fg:x="930" fg:w="1"/><text x="74.7096%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.4596%" y="693" width="0.0801%" height="15" fill="rgb(236,2,16)" fg:x="930" fg:w="1"/><text x="74.7096%" y="703.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.4596%" y="677" width="0.0801%" height="15" fill="rgb(250,146,3)" fg:x="930" fg:w="1"/><text x="74.7096%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.4596%" y="661" width="0.0801%" height="15" fill="rgb(233,72,0)" fg:x="930" fg:w="1"/><text x="74.7096%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.4596%" y="645" width="0.0801%" height="15" fill="rgb(249,172,7)" fg:x="930" fg:w="1"/><text x="74.7096%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.4596%" y="629" width="0.0801%" height="15" fill="rgb(224,213,17)" fg:x="930" fg:w="1"/><text x="74.7096%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.4596%" y="613" width="0.0801%" height="15" fill="rgb(221,52,2)" fg:x="930" fg:w="1"/><text x="74.7096%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.4596%" y="597" width="0.0801%" height="15" fill="rgb(220,8,41)" fg:x="930" fg:w="1"/><text x="74.7096%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.4596%" y="581" width="0.0801%" height="15" fill="rgb(230,207,34)" fg:x="930" fg:w="1"/><text x="74.7096%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.4596%" y="565" width="0.0801%" height="15" fill="rgb(240,157,11)" fg:x="930" fg:w="1"/><text x="74.7096%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.4596%" y="549" width="0.0801%" height="15" fill="rgb(243,209,15)" fg:x="930" fg:w="1"/><text x="74.7096%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.4596%" y="533" width="0.0801%" height="15" fill="rgb(251,191,33)" fg:x="930" fg:w="1"/><text x="74.7096%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.4596%" y="517" width="0.0801%" height="15" fill="rgb(217,58,8)" fg:x="930" fg:w="1"/><text x="74.7096%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.4596%" y="501" width="0.0801%" height="15" fill="rgb(210,35,1)" fg:x="930" fg:w="1"/><text x="74.7096%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.4596%" y="485" width="0.0801%" height="15" fill="rgb(231,62,7)" fg:x="930" fg:w="1"/><text x="74.7096%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.4596%" y="469" width="0.0801%" height="15" fill="rgb(207,73,10)" fg:x="930" fg:w="1"/><text x="74.7096%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="74.3795%" y="741" width="0.2402%" height="15" fill="rgb(216,178,40)" fg:x="929" fg:w="3"/><text x="74.6295%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="74.5396%" y="725" width="0.0801%" height="15" fill="rgb(238,220,1)" fg:x="931" fg:w="1"/><text x="74.7896%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="74.5396%" y="709" width="0.0801%" height="15" fill="rgb(246,169,39)" fg:x="931" fg:w="1"/><text x="74.7896%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="74.5396%" y="693" width="0.0801%" height="15" fill="rgb(240,186,45)" fg:x="931" fg:w="1"/><text x="74.7896%" y="703.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="74.5396%" y="677" width="0.0801%" height="15" fill="rgb(225,14,29)" fg:x="931" fg:w="1"/><text x="74.7896%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.5396%" y="661" width="0.0801%" height="15" fill="rgb(243,96,26)" fg:x="931" fg:w="1"/><text x="74.7896%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.5396%" y="645" width="0.0801%" height="15" fill="rgb(234,139,10)" fg:x="931" fg:w="1"/><text x="74.7896%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6197%" y="645" width="0.0801%" height="15" fill="rgb(235,208,23)" fg:x="932" fg:w="1"/><text x="74.8697%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6197%" y="629" width="0.0801%" height="15" fill="rgb(230,140,47)" fg:x="932" fg:w="1"/><text x="74.8697%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6197%" y="613" width="0.0801%" height="15" fill="rgb(241,227,54)" fg:x="932" fg:w="1"/><text x="74.8697%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6197%" y="597" width="0.0801%" height="15" fill="rgb(221,210,40)" fg:x="932" fg:w="1"/><text x="74.8697%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6197%" y="581" width="0.0801%" height="15" fill="rgb(207,52,1)" fg:x="932" fg:w="1"/><text x="74.8697%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="74.6197%" y="725" width="0.1601%" height="15" fill="rgb(243,147,42)" fg:x="932" fg:w="2"/><text x="74.8697%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="74.6197%" y="709" width="0.1601%" height="15" fill="rgb(245,93,7)" fg:x="932" fg:w="2"/><text x="74.8697%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="74.6197%" y="693" width="0.1601%" height="15" fill="rgb(243,119,13)" fg:x="932" fg:w="2"/><text x="74.8697%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.6197%" y="677" width="0.1601%" height="15" fill="rgb(228,164,28)" fg:x="932" fg:w="2"/><text x="74.8697%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.6197%" y="661" width="0.1601%" height="15" fill="rgb(234,37,39)" fg:x="932" fg:w="2"/><text x="74.8697%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6998%" y="645" width="0.0801%" height="15" fill="rgb(246,155,10)" fg:x="933" fg:w="1"/><text x="74.9498%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6998%" y="629" width="0.0801%" height="15" fill="rgb(208,140,53)" fg:x="933" fg:w="1"/><text x="74.9498%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6998%" y="613" width="0.0801%" height="15" fill="rgb(234,107,29)" fg:x="933" fg:w="1"/><text x="74.9498%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6998%" y="597" width="0.0801%" height="15" fill="rgb(217,45,5)" fg:x="933" fg:w="1"/><text x="74.9498%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.6998%" y="581" width="0.0801%" height="15" fill="rgb(251,168,5)" fg:x="933" fg:w="1"/><text x="74.9498%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6998%" y="565" width="0.0801%" height="15" fill="rgb(242,96,14)" fg:x="933" fg:w="1"/><text x="74.9498%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.6998%" y="549" width="0.0801%" height="15" fill="rgb(231,148,6)" fg:x="933" fg:w="1"/><text x="74.9498%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7798%" y="597" width="0.0801%" height="15" fill="rgb(249,100,2)" fg:x="934" fg:w="1"/><text x="75.0298%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7798%" y="581" width="0.0801%" height="15" fill="rgb(212,22,52)" fg:x="934" fg:w="1"/><text x="75.0298%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.7798%" y="565" width="0.0801%" height="15" fill="rgb(212,97,14)" fg:x="934" fg:w="1"/><text x="75.0298%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.7798%" y="613" width="0.1601%" height="15" fill="rgb(212,24,14)" fg:x="934" fg:w="2"/><text x="75.0298%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8599%" y="597" width="0.0801%" height="15" fill="rgb(239,209,43)" fg:x="935" fg:w="1"/><text x="75.1099%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.8599%" y="581" width="0.0801%" height="15" fill="rgb(226,211,38)" fg:x="935" fg:w="1"/><text x="75.1099%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.8599%" y="565" width="0.0801%" height="15" fill="rgb(216,118,11)" fg:x="935" fg:w="1"/><text x="75.1099%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.8599%" y="549" width="0.0801%" height="15" fill="rgb(223,214,43)" fg:x="935" fg:w="1"/><text x="75.1099%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.8599%" y="533" width="0.0801%" height="15" fill="rgb(213,225,15)" fg:x="935" fg:w="1"/><text x="75.1099%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.8599%" y="517" width="0.0801%" height="15" fill="rgb(233,115,42)" fg:x="935" fg:w="1"/><text x="75.1099%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.8599%" y="501" width="0.0801%" height="15" fill="rgb(229,93,16)" fg:x="935" fg:w="1"/><text x="75.1099%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.8599%" y="485" width="0.0801%" height="15" fill="rgb(220,114,48)" fg:x="935" fg:w="1"/><text x="75.1099%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.8599%" y="469" width="0.0801%" height="15" fill="rgb(253,78,24)" fg:x="935" fg:w="1"/><text x="75.1099%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.8599%" y="453" width="0.0801%" height="15" fill="rgb(206,29,19)" fg:x="935" fg:w="1"/><text x="75.1099%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.8599%" y="437" width="0.0801%" height="15" fill="rgb(220,96,19)" fg:x="935" fg:w="1"/><text x="75.1099%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.8599%" y="421" width="0.0801%" height="15" fill="rgb(222,62,18)" fg:x="935" fg:w="1"/><text x="75.1099%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="74.7798%" y="677" width="0.3203%" height="15" fill="rgb(243,4,41)" fg:x="934" fg:w="4"/><text x="75.0298%" y="687.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="74.7798%" y="661" width="0.3203%" height="15" fill="rgb(232,199,53)" fg:x="934" fg:w="4"/><text x="75.0298%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="74.7798%" y="645" width="0.3203%" height="15" fill="rgb(212,18,26)" fg:x="934" fg:w="4"/><text x="75.0298%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="74.7798%" y="629" width="0.3203%" height="15" fill="rgb(218,30,49)" fg:x="934" fg:w="4"/><text x="75.0298%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.9400%" y="613" width="0.1601%" height="15" fill="rgb(250,154,52)" fg:x="936" fg:w="2"/><text x="75.1900%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="74.7798%" y="725" width="0.4804%" height="15" fill="rgb(218,176,16)" fg:x="934" fg:w="6"/><text x="75.0298%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="74.7798%" y="709" width="0.4804%" height="15" fill="rgb(215,61,51)" fg:x="934" fg:w="6"/><text x="75.0298%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="74.7798%" y="693" width="0.4804%" height="15" fill="rgb(234,40,53)" fg:x="934" fg:w="6"/><text x="75.0298%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="75.1001%" y="677" width="0.1601%" height="15" fill="rgb(214,142,25)" fg:x="938" fg:w="2"/><text x="75.3501%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.1001%" y="661" width="0.1601%" height="15" fill="rgb(206,61,7)" fg:x="938" fg:w="2"/><text x="75.3501%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.1001%" y="645" width="0.1601%" height="15" fill="rgb(245,225,1)" fg:x="938" fg:w="2"/><text x="75.3501%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1801%" y="629" width="0.0801%" height="15" fill="rgb(224,122,37)" fg:x="939" fg:w="1"/><text x="75.4301%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1801%" y="613" width="0.0801%" height="15" fill="rgb(209,221,12)" fg:x="939" fg:w="1"/><text x="75.4301%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1801%" y="597" width="0.0801%" height="15" fill="rgb(248,70,2)" fg:x="939" fg:w="1"/><text x="75.4301%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1801%" y="581" width="0.0801%" height="15" fill="rgb(227,173,19)" fg:x="939" fg:w="1"/><text x="75.4301%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (14 samples, 1.12%)</title><rect x="74.3795%" y="757" width="1.1209%" height="15" fill="rgb(228,217,53)" fg:x="929" fg:w="14"/><text x="74.6295%" y="767.50"></text></g><g><title>plugins_core::tools::set_container (11 samples, 0.88%)</title><rect x="74.6197%" y="741" width="0.8807%" height="15" fill="rgb(248,43,46)" fg:x="932" fg:w="11"/><text x="74.8697%" y="751.50"></text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="75.2602%" y="725" width="0.2402%" height="15" fill="rgb(236,202,32)" fg:x="940" fg:w="3"/><text x="75.5102%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="75.2602%" y="709" width="0.2402%" height="15" fill="rgb(231,220,0)" fg:x="940" fg:w="3"/><text x="75.5102%" y="719.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (3 samples, 0.24%)</title><rect x="75.2602%" y="693" width="0.2402%" height="15" fill="rgb(235,11,31)" fg:x="940" fg:w="3"/><text x="75.5102%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="75.2602%" y="677" width="0.2402%" height="15" fill="rgb(247,159,37)" fg:x="940" fg:w="3"/><text x="75.5102%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="75.3403%" y="661" width="0.1601%" height="15" fill="rgb(246,179,15)" fg:x="941" fg:w="2"/><text x="75.5903%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="75.3403%" y="645" width="0.1601%" height="15" fill="rgb(221,193,41)" fg:x="941" fg:w="2"/><text x="75.5903%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.4203%" y="629" width="0.0801%" height="15" fill="rgb(228,30,1)" fg:x="942" fg:w="1"/><text x="75.6703%" y="639.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="75.5004%" y="757" width="0.1601%" height="15" fill="rgb(233,226,32)" fg:x="943" fg:w="2"/><text x="75.7504%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="75.5004%" y="741" width="0.1601%" height="15" fill="rgb(238,110,42)" fg:x="943" fg:w="2"/><text x="75.7504%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="75.5004%" y="725" width="0.1601%" height="15" fill="rgb(233,141,16)" fg:x="943" fg:w="2"/><text x="75.7504%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.5004%" y="709" width="0.1601%" height="15" fill="rgb(212,227,9)" fg:x="943" fg:w="2"/><text x="75.7504%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.5004%" y="693" width="0.1601%" height="15" fill="rgb(247,119,37)" fg:x="943" fg:w="2"/><text x="75.7504%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.5004%" y="677" width="0.1601%" height="15" fill="rgb(219,101,42)" fg:x="943" fg:w="2"/><text x="75.7504%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.5004%" y="661" width="0.1601%" height="15" fill="rgb(252,226,3)" fg:x="943" fg:w="2"/><text x="75.7504%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.5004%" y="645" width="0.1601%" height="15" fill="rgb(229,50,28)" fg:x="943" fg:w="2"/><text x="75.7504%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.5004%" y="629" width="0.1601%" height="15" fill="rgb(249,122,7)" fg:x="943" fg:w="2"/><text x="75.7504%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.5805%" y="613" width="0.0801%" height="15" fill="rgb(207,101,46)" fg:x="944" fg:w="1"/><text x="75.8305%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.5805%" y="597" width="0.0801%" height="15" fill="rgb(249,90,48)" fg:x="944" fg:w="1"/><text x="75.8305%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.5805%" y="581" width="0.0801%" height="15" fill="rgb(231,10,48)" fg:x="944" fg:w="1"/><text x="75.8305%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.5805%" y="565" width="0.0801%" height="15" fill="rgb(234,120,19)" fg:x="944" fg:w="1"/><text x="75.8305%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.5805%" y="549" width="0.0801%" height="15" fill="rgb(212,221,36)" fg:x="944" fg:w="1"/><text x="75.8305%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.5805%" y="533" width="0.0801%" height="15" fill="rgb(230,151,52)" fg:x="944" fg:w="1"/><text x="75.8305%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.5805%" y="517" width="0.0801%" height="15" fill="rgb(246,35,38)" fg:x="944" fg:w="1"/><text x="75.8305%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.5805%" y="501" width="0.0801%" height="15" fill="rgb(208,110,54)" fg:x="944" fg:w="1"/><text x="75.8305%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.5805%" y="485" width="0.0801%" height="15" fill="rgb(250,206,40)" fg:x="944" fg:w="1"/><text x="75.8305%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.5805%" y="469" width="0.0801%" height="15" fill="rgb(225,204,22)" fg:x="944" fg:w="1"/><text x="75.8305%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.5805%" y="453" width="0.0801%" height="15" fill="rgb(220,29,11)" fg:x="944" fg:w="1"/><text x="75.8305%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.5805%" y="437" width="0.0801%" height="15" fill="rgb(254,133,9)" fg:x="944" fg:w="1"/><text x="75.8305%" y="447.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="75.5805%" y="421" width="0.0801%" height="15" fill="rgb(254,178,33)" fg:x="944" fg:w="1"/><text x="75.8305%" y="431.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="75.7406%" y="725" width="0.0801%" height="15" fill="rgb(239,217,37)" fg:x="946" fg:w="1"/><text x="75.9906%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.7406%" y="709" width="0.0801%" height="15" fill="rgb(210,41,5)" fg:x="946" fg:w="1"/><text x="75.9906%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.7406%" y="693" width="0.0801%" height="15" fill="rgb(227,23,47)" fg:x="946" fg:w="1"/><text x="75.9906%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.7406%" y="677" width="0.0801%" height="15" fill="rgb(215,18,46)" fg:x="946" fg:w="1"/><text x="75.9906%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.7406%" y="661" width="0.0801%" height="15" fill="rgb(247,172,0)" fg:x="946" fg:w="1"/><text x="75.9906%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.7406%" y="645" width="0.0801%" height="15" fill="rgb(254,23,27)" fg:x="946" fg:w="1"/><text x="75.9906%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.7406%" y="629" width="0.0801%" height="15" fill="rgb(223,61,6)" fg:x="946" fg:w="1"/><text x="75.9906%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="75.6605%" y="757" width="0.2402%" height="15" fill="rgb(237,65,24)" fg:x="945" fg:w="3"/><text x="75.9105%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="75.6605%" y="741" width="0.2402%" height="15" fill="rgb(238,133,22)" fg:x="945" fg:w="3"/><text x="75.9105%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="75.8207%" y="725" width="0.0801%" height="15" fill="rgb(217,219,5)" fg:x="947" fg:w="1"/><text x="76.0707%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="75.8207%" y="709" width="0.0801%" height="15" fill="rgb(254,24,44)" fg:x="947" fg:w="1"/><text x="76.0707%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="75.8207%" y="693" width="0.0801%" height="15" fill="rgb(217,136,50)" fg:x="947" fg:w="1"/><text x="76.0707%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.8207%" y="677" width="0.0801%" height="15" fill="rgb(243,85,15)" fg:x="947" fg:w="1"/><text x="76.0707%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="75.8207%" y="661" width="0.0801%" height="15" fill="rgb(224,85,42)" fg:x="947" fg:w="1"/><text x="76.0707%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.8207%" y="645" width="0.0801%" height="15" fill="rgb(237,142,36)" fg:x="947" fg:w="1"/><text x="76.0707%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.8207%" y="629" width="0.0801%" height="15" fill="rgb(215,131,52)" fg:x="947" fg:w="1"/><text x="76.0707%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.8207%" y="613" width="0.0801%" height="15" fill="rgb(216,124,50)" fg:x="947" fg:w="1"/><text x="76.0707%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.8207%" y="597" width="0.0801%" height="15" fill="rgb(223,61,20)" fg:x="947" fg:w="1"/><text x="76.0707%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="75.9007%" y="725" width="0.1601%" height="15" fill="rgb(250,62,47)" fg:x="948" fg:w="2"/><text x="76.1507%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.9007%" y="709" width="0.1601%" height="15" fill="rgb(225,180,21)" fg:x="948" fg:w="2"/><text x="76.1507%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.9007%" y="693" width="0.1601%" height="15" fill="rgb(210,89,33)" fg:x="948" fg:w="2"/><text x="76.1507%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9808%" y="677" width="0.0801%" height="15" fill="rgb(205,215,50)" fg:x="949" fg:w="1"/><text x="76.2308%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9808%" y="661" width="0.0801%" height="15" fill="rgb(207,191,48)" fg:x="949" fg:w="1"/><text x="76.2308%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9808%" y="645" width="0.0801%" height="15" fill="rgb(247,32,5)" fg:x="949" fg:w="1"/><text x="76.2308%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9808%" y="629" width="0.0801%" height="15" fill="rgb(210,113,39)" fg:x="949" fg:w="1"/><text x="76.2308%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.9808%" y="613" width="0.0801%" height="15" fill="rgb(242,181,23)" fg:x="949" fg:w="1"/><text x="76.2308%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="76.0608%" y="709" width="0.0801%" height="15" fill="rgb(215,58,22)" fg:x="950" fg:w="1"/><text x="76.3108%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.0608%" y="693" width="0.0801%" height="15" fill="rgb(236,31,11)" fg:x="950" fg:w="1"/><text x="76.3108%" y="703.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.0608%" y="677" width="0.0801%" height="15" fill="rgb(244,198,15)" fg:x="950" fg:w="1"/><text x="76.3108%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="76.0608%" y="725" width="0.1601%" height="15" fill="rgb(230,142,36)" fg:x="950" fg:w="2"/><text x="76.3108%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.1409%" y="709" width="0.0801%" height="15" fill="rgb(219,48,29)" fg:x="951" fg:w="1"/><text x="76.3909%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="76.1409%" y="693" width="0.0801%" height="15" fill="rgb(237,179,43)" fg:x="951" fg:w="1"/><text x="76.3909%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.1409%" y="677" width="0.0801%" height="15" fill="rgb(221,67,37)" fg:x="951" fg:w="1"/><text x="76.3909%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.1409%" y="661" width="0.0801%" height="15" fill="rgb(222,217,18)" fg:x="951" fg:w="1"/><text x="76.3909%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.1409%" y="645" width="0.0801%" height="15" fill="rgb(235,107,38)" fg:x="951" fg:w="1"/><text x="76.3909%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="75.9007%" y="741" width="0.4003%" height="15" fill="rgb(227,110,50)" fg:x="948" fg:w="5"/><text x="76.1507%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="76.2210%" y="725" width="0.0801%" height="15" fill="rgb(224,176,42)" fg:x="952" fg:w="1"/><text x="76.4710%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="76.2210%" y="709" width="0.0801%" height="15" fill="rgb(250,34,11)" fg:x="952" fg:w="1"/><text x="76.4710%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="76.2210%" y="693" width="0.0801%" height="15" fill="rgb(253,107,24)" fg:x="952" fg:w="1"/><text x="76.4710%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="76.2210%" y="677" width="0.0801%" height="15" fill="rgb(213,146,11)" fg:x="952" fg:w="1"/><text x="76.4710%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.2210%" y="661" width="0.0801%" height="15" fill="rgb(216,88,42)" fg:x="952" fg:w="1"/><text x="76.4710%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="76.2210%" y="645" width="0.0801%" height="15" fill="rgb(231,37,19)" fg:x="952" fg:w="1"/><text x="76.4710%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.3010%" y="645" width="0.0801%" height="15" fill="rgb(213,154,5)" fg:x="953" fg:w="1"/><text x="76.5510%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.3010%" y="629" width="0.0801%" height="15" fill="rgb(234,102,6)" fg:x="953" fg:w="1"/><text x="76.5510%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.3010%" y="613" width="0.0801%" height="15" fill="rgb(206,125,39)" fg:x="953" fg:w="1"/><text x="76.5510%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.3010%" y="597" width="0.0801%" height="15" fill="rgb(254,216,50)" fg:x="953" fg:w="1"/><text x="76.5510%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.3010%" y="581" width="0.0801%" height="15" fill="rgb(205,65,40)" fg:x="953" fg:w="1"/><text x="76.5510%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="76.3010%" y="693" width="0.1601%" height="15" fill="rgb(244,217,7)" fg:x="953" fg:w="2"/><text x="76.5510%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.3010%" y="677" width="0.1601%" height="15" fill="rgb(220,203,19)" fg:x="953" fg:w="2"/><text x="76.5510%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.3010%" y="661" width="0.1601%" height="15" fill="rgb(254,124,45)" fg:x="953" fg:w="2"/><text x="76.5510%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.3811%" y="645" width="0.0801%" height="15" fill="rgb(236,111,39)" fg:x="954" fg:w="1"/><text x="76.6311%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.3811%" y="629" width="0.0801%" height="15" fill="rgb(243,49,31)" fg:x="954" fg:w="1"/><text x="76.6311%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.3811%" y="613" width="0.0801%" height="15" fill="rgb(252,80,32)" fg:x="954" fg:w="1"/><text x="76.6311%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.3811%" y="597" width="0.0801%" height="15" fill="rgb(221,67,33)" fg:x="954" fg:w="1"/><text x="76.6311%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.3811%" y="581" width="0.0801%" height="15" fill="rgb(225,12,36)" fg:x="954" fg:w="1"/><text x="76.6311%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="76.3010%" y="725" width="0.2402%" height="15" fill="rgb(210,14,38)" fg:x="953" fg:w="3"/><text x="76.5510%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="76.3010%" y="709" width="0.2402%" height="15" fill="rgb(251,82,7)" fg:x="953" fg:w="3"/><text x="76.5510%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="76.4612%" y="693" width="0.0801%" height="15" fill="rgb(253,73,22)" fg:x="955" fg:w="1"/><text x="76.7112%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="76.4612%" y="677" width="0.0801%" height="15" fill="rgb(237,31,38)" fg:x="955" fg:w="1"/><text x="76.7112%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.4612%" y="661" width="0.0801%" height="15" fill="rgb(234,184,33)" fg:x="955" fg:w="1"/><text x="76.7112%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.4612%" y="645" width="0.0801%" height="15" fill="rgb(219,43,13)" fg:x="955" fg:w="1"/><text x="76.7112%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.4612%" y="629" width="0.0801%" height="15" fill="rgb(252,139,13)" fg:x="955" fg:w="1"/><text x="76.7112%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.4612%" y="613" width="0.0801%" height="15" fill="rgb(229,79,33)" fg:x="955" fg:w="1"/><text x="76.7112%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.4612%" y="597" width="0.0801%" height="15" fill="rgb(248,8,21)" fg:x="955" fg:w="1"/><text x="76.7112%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.4612%" y="581" width="0.0801%" height="15" fill="rgb(225,124,31)" fg:x="955" fg:w="1"/><text x="76.7112%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.4612%" y="565" width="0.0801%" height="15" fill="rgb(248,141,9)" fg:x="955" fg:w="1"/><text x="76.7112%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.4612%" y="549" width="0.0801%" height="15" fill="rgb(251,223,32)" fg:x="955" fg:w="1"/><text x="76.7112%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="76.4612%" y="533" width="0.0801%" height="15" fill="rgb(251,8,33)" fg:x="955" fg:w="1"/><text x="76.7112%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="76.4612%" y="517" width="0.0801%" height="15" fill="rgb(205,95,13)" fg:x="955" fg:w="1"/><text x="76.7112%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="76.5412%" y="725" width="0.1601%" height="15" fill="rgb(235,208,38)" fg:x="956" fg:w="2"/><text x="76.7912%" y="735.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="76.5412%" y="709" width="0.1601%" height="15" fill="rgb(222,33,24)" fg:x="956" fg:w="2"/><text x="76.7912%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="76.5412%" y="693" width="0.1601%" height="15" fill="rgb(219,97,3)" fg:x="956" fg:w="2"/><text x="76.7912%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="76.5412%" y="677" width="0.1601%" height="15" fill="rgb(209,15,37)" fg:x="956" fg:w="2"/><text x="76.7912%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="76.5412%" y="661" width="0.1601%" height="15" fill="rgb(206,100,16)" fg:x="956" fg:w="2"/><text x="76.7912%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="76.5412%" y="645" width="0.1601%" height="15" fill="rgb(208,61,41)" fg:x="956" fg:w="2"/><text x="76.7912%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.6213%" y="629" width="0.0801%" height="15" fill="rgb(226,154,13)" fg:x="957" fg:w="1"/><text x="76.8713%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7014%" y="629" width="0.0801%" height="15" fill="rgb(226,113,19)" fg:x="958" fg:w="1"/><text x="76.9514%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7014%" y="613" width="0.0801%" height="15" fill="rgb(209,115,46)" fg:x="958" fg:w="1"/><text x="76.9514%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7014%" y="597" width="0.0801%" height="15" fill="rgb(234,170,38)" fg:x="958" fg:w="1"/><text x="76.9514%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7014%" y="581" width="0.0801%" height="15" fill="rgb(228,23,37)" fg:x="958" fg:w="1"/><text x="76.9514%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="76.7014%" y="677" width="0.1601%" height="15" fill="rgb(243,83,27)" fg:x="958" fg:w="2"/><text x="76.9514%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.7014%" y="661" width="0.1601%" height="15" fill="rgb(251,121,22)" fg:x="958" fg:w="2"/><text x="76.9514%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.7014%" y="645" width="0.1601%" height="15" fill="rgb(205,106,26)" fg:x="958" fg:w="2"/><text x="76.9514%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7814%" y="629" width="0.0801%" height="15" fill="rgb(251,23,10)" fg:x="959" fg:w="1"/><text x="77.0314%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7814%" y="613" width="0.0801%" height="15" fill="rgb(250,218,35)" fg:x="959" fg:w="1"/><text x="77.0314%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7814%" y="597" width="0.0801%" height="15" fill="rgb(211,16,34)" fg:x="959" fg:w="1"/><text x="77.0314%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7814%" y="581" width="0.0801%" height="15" fill="rgb(238,148,30)" fg:x="959" fg:w="1"/><text x="77.0314%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.7814%" y="565" width="0.0801%" height="15" fill="rgb(236,171,40)" fg:x="959" fg:w="1"/><text x="77.0314%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7814%" y="549" width="0.0801%" height="15" fill="rgb(237,128,15)" fg:x="959" fg:w="1"/><text x="77.0314%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7814%" y="533" width="0.0801%" height="15" fill="rgb(222,8,10)" fg:x="959" fg:w="1"/><text x="77.0314%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7814%" y="517" width="0.0801%" height="15" fill="rgb(244,223,11)" fg:x="959" fg:w="1"/><text x="77.0314%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.8615%" y="661" width="0.0801%" height="15" fill="rgb(230,23,54)" fg:x="960" fg:w="1"/><text x="77.1115%" y="671.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (94 samples, 7.53%)</title><rect x="69.4956%" y="773" width="7.5260%" height="15" fill="rgb(206,71,18)" fg:x="868" fg:w="94"/><text x="69.7456%" y="783.50">plugins_co..</text></g><g><title>plugins_core::build::Build::occupying (14 samples, 1.12%)</title><rect x="75.9007%" y="757" width="1.1209%" height="15" fill="rgb(221,190,41)" fg:x="948" fg:w="14"/><text x="76.1507%" y="767.50"></text></g><g><title>plugins_core::tools::set_occupying (9 samples, 0.72%)</title><rect x="76.3010%" y="741" width="0.7206%" height="15" fill="rgb(242,202,19)" fg:x="953" fg:w="9"/><text x="76.5510%" y="751.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (4 samples, 0.32%)</title><rect x="76.7014%" y="725" width="0.3203%" height="15" fill="rgb(242,213,28)" fg:x="958" fg:w="4"/><text x="76.9514%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="76.7014%" y="709" width="0.3203%" height="15" fill="rgb(224,77,34)" fg:x="958" fg:w="4"/><text x="76.9514%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="76.7014%" y="693" width="0.3203%" height="15" fill="rgb(231,13,30)" fg:x="958" fg:w="4"/><text x="76.9514%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="76.8615%" y="677" width="0.1601%" height="15" fill="rgb(231,126,46)" fg:x="960" fg:w="2"/><text x="77.1115%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="76.9416%" y="661" width="0.0801%" height="15" fill="rgb(237,50,16)" fg:x="961" fg:w="1"/><text x="77.1916%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.9416%" y="645" width="0.0801%" height="15" fill="rgb(250,0,53)" fg:x="961" fg:w="1"/><text x="77.1916%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.9416%" y="629" width="0.0801%" height="15" fill="rgb(206,168,4)" fg:x="961" fg:w="1"/><text x="77.1916%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.9416%" y="613" width="0.0801%" height="15" fill="rgb(237,195,30)" fg:x="961" fg:w="1"/><text x="77.1916%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.9416%" y="597" width="0.0801%" height="15" fill="rgb(250,185,28)" fg:x="961" fg:w="1"/><text x="77.1916%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.9416%" y="581" width="0.0801%" height="15" fill="rgb(236,31,48)" fg:x="961" fg:w="1"/><text x="77.1916%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.9416%" y="565" width="0.0801%" height="15" fill="rgb(240,210,1)" fg:x="961" fg:w="1"/><text x="77.1916%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9416%" y="549" width="0.0801%" height="15" fill="rgb(211,67,10)" fg:x="961" fg:w="1"/><text x="77.1916%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="77.0216%" y="773" width="0.0801%" height="15" fill="rgb(224,37,37)" fg:x="962" fg:w="1"/><text x="77.2716%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="77.0216%" y="757" width="0.0801%" height="15" fill="rgb(211,57,29)" fg:x="962" fg:w="1"/><text x="77.2716%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="77.0216%" y="741" width="0.0801%" height="15" fill="rgb(222,128,38)" fg:x="962" fg:w="1"/><text x="77.2716%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.1817%" y="725" width="0.0801%" height="15" fill="rgb(222,119,2)" fg:x="964" fg:w="1"/><text x="77.4317%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.1817%" y="709" width="0.0801%" height="15" fill="rgb(207,185,13)" fg:x="964" fg:w="1"/><text x="77.4317%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.1817%" y="693" width="0.0801%" height="15" fill="rgb(234,134,26)" fg:x="964" fg:w="1"/><text x="77.4317%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.1817%" y="677" width="0.0801%" height="15" fill="rgb(236,28,54)" fg:x="964" fg:w="1"/><text x="77.4317%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.1817%" y="661" width="0.0801%" height="15" fill="rgb(218,4,16)" fg:x="964" fg:w="1"/><text x="77.4317%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.1817%" y="645" width="0.0801%" height="15" fill="rgb(206,115,32)" fg:x="964" fg:w="1"/><text x="77.4317%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.1817%" y="629" width="0.0801%" height="15" fill="rgb(221,12,8)" fg:x="964" fg:w="1"/><text x="77.4317%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.2618%" y="677" width="0.0801%" height="15" fill="rgb(239,207,6)" fg:x="965" fg:w="1"/><text x="77.5118%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.2618%" y="661" width="0.0801%" height="15" fill="rgb(217,119,6)" fg:x="965" fg:w="1"/><text x="77.5118%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.2618%" y="645" width="0.0801%" height="15" fill="rgb(230,27,1)" fg:x="965" fg:w="1"/><text x="77.5118%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.2618%" y="629" width="0.0801%" height="15" fill="rgb(237,155,1)" fg:x="965" fg:w="1"/><text x="77.5118%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.2618%" y="613" width="0.0801%" height="15" fill="rgb(248,66,50)" fg:x="965" fg:w="1"/><text x="77.5118%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.2618%" y="597" width="0.0801%" height="15" fill="rgb(218,66,19)" fg:x="965" fg:w="1"/><text x="77.5118%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.2618%" y="581" width="0.0801%" height="15" fill="rgb(229,19,7)" fg:x="965" fg:w="1"/><text x="77.5118%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.2618%" y="565" width="0.0801%" height="15" fill="rgb(223,65,18)" fg:x="965" fg:w="1"/><text x="77.5118%" y="575.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="77.2618%" y="549" width="0.0801%" height="15" fill="rgb(216,100,6)" fg:x="965" fg:w="1"/><text x="77.5118%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="77.1817%" y="741" width="0.2402%" height="15" fill="rgb(215,16,2)" fg:x="964" fg:w="3"/><text x="77.4317%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="77.2618%" y="725" width="0.1601%" height="15" fill="rgb(219,20,33)" fg:x="965" fg:w="2"/><text x="77.5118%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="77.2618%" y="709" width="0.1601%" height="15" fill="rgb(215,120,26)" fg:x="965" fg:w="2"/><text x="77.5118%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="77.2618%" y="693" width="0.1601%" height="15" fill="rgb(240,175,31)" fg:x="965" fg:w="2"/><text x="77.5118%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="77.3419%" y="677" width="0.0801%" height="15" fill="rgb(245,165,43)" fg:x="966" fg:w="1"/><text x="77.5919%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.3419%" y="661" width="0.0801%" height="15" fill="rgb(228,92,16)" fg:x="966" fg:w="1"/><text x="77.5919%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3419%" y="645" width="0.0801%" height="15" fill="rgb(252,37,37)" fg:x="966" fg:w="1"/><text x="77.5919%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3419%" y="629" width="0.0801%" height="15" fill="rgb(220,96,32)" fg:x="966" fg:w="1"/><text x="77.5919%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3419%" y="613" width="0.0801%" height="15" fill="rgb(206,224,2)" fg:x="966" fg:w="1"/><text x="77.5919%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3419%" y="597" width="0.0801%" height="15" fill="rgb(221,63,25)" fg:x="966" fg:w="1"/><text x="77.5919%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3419%" y="581" width="0.0801%" height="15" fill="rgb(244,60,40)" fg:x="966" fg:w="1"/><text x="77.5919%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="77.4219%" y="725" width="0.1601%" height="15" fill="rgb(209,102,13)" fg:x="967" fg:w="2"/><text x="77.6719%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="77.5020%" y="709" width="0.0801%" height="15" fill="rgb(216,127,17)" fg:x="968" fg:w="1"/><text x="77.7520%" y="719.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="77.5020%" y="693" width="0.0801%" height="15" fill="rgb(242,182,26)" fg:x="968" fg:w="1"/><text x="77.7520%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="77.5020%" y="677" width="0.0801%" height="15" fill="rgb(233,22,19)" fg:x="968" fg:w="1"/><text x="77.7520%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="77.5020%" y="661" width="0.0801%" height="15" fill="rgb(238,173,31)" fg:x="968" fg:w="1"/><text x="77.7520%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.5020%" y="645" width="0.0801%" height="15" fill="rgb(244,165,10)" fg:x="968" fg:w="1"/><text x="77.7520%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.5020%" y="629" width="0.0801%" height="15" fill="rgb(251,138,36)" fg:x="968" fg:w="1"/><text x="77.7520%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="77.5020%" y="613" width="0.0801%" height="15" fill="rgb(233,2,19)" fg:x="968" fg:w="1"/><text x="77.7520%" y="623.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="77.5020%" y="597" width="0.0801%" height="15" fill="rgb(206,178,31)" fg:x="968" fg:w="1"/><text x="77.7520%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.5020%" y="581" width="0.0801%" height="15" fill="rgb(223,128,44)" fg:x="968" fg:w="1"/><text x="77.7520%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.5020%" y="565" width="0.0801%" height="15" fill="rgb(238,24,5)" fg:x="968" fg:w="1"/><text x="77.7520%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="77.5020%" y="549" width="0.0801%" height="15" fill="rgb(217,140,4)" fg:x="968" fg:w="1"/><text x="77.7520%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="77.5020%" y="533" width="0.0801%" height="15" fill="rgb(250,89,54)" fg:x="968" fg:w="1"/><text x="77.7520%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="77.5020%" y="517" width="0.0801%" height="15" fill="rgb(223,199,30)" fg:x="968" fg:w="1"/><text x="77.7520%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="77.5020%" y="501" width="0.0801%" height="15" fill="rgb(220,47,34)" fg:x="968" fg:w="1"/><text x="77.7520%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="77.5020%" y="485" width="0.0801%" height="15" fill="rgb(206,12,44)" fg:x="968" fg:w="1"/><text x="77.7520%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (7 samples, 0.56%)</title><rect x="77.1017%" y="773" width="0.5604%" height="15" fill="rgb(226,159,9)" fg:x="963" fg:w="7"/><text x="77.3517%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.56%)</title><rect x="77.1017%" y="757" width="0.5604%" height="15" fill="rgb(224,150,25)" fg:x="963" fg:w="7"/><text x="77.3517%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="77.4219%" y="741" width="0.2402%" height="15" fill="rgb(248,214,17)" fg:x="967" fg:w="3"/><text x="77.6719%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="77.5821%" y="725" width="0.0801%" height="15" fill="rgb(208,189,54)" fg:x="969" fg:w="1"/><text x="77.8321%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.5821%" y="709" width="0.0801%" height="15" fill="rgb(233,78,33)" fg:x="969" fg:w="1"/><text x="77.8321%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.5821%" y="693" width="0.0801%" height="15" fill="rgb(244,217,34)" fg:x="969" fg:w="1"/><text x="77.8321%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.5821%" y="677" width="0.0801%" height="15" fill="rgb(221,41,46)" fg:x="969" fg:w="1"/><text x="77.8321%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.5821%" y="661" width="0.0801%" height="15" fill="rgb(216,152,46)" fg:x="969" fg:w="1"/><text x="77.8321%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.5821%" y="645" width="0.0801%" height="15" fill="rgb(235,72,49)" fg:x="969" fg:w="1"/><text x="77.8321%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.7422%" y="597" width="0.0801%" height="15" fill="rgb(214,12,0)" fg:x="971" fg:w="1"/><text x="77.9922%" y="607.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="77.7422%" y="581" width="0.0801%" height="15" fill="rgb(254,8,3)" fg:x="971" fg:w="1"/><text x="77.9922%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.8223%" y="565" width="0.0801%" height="15" fill="rgb(238,167,16)" fg:x="972" fg:w="1"/><text x="78.0723%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="77.6621%" y="741" width="0.3203%" height="15" fill="rgb(236,220,0)" fg:x="970" fg:w="4"/><text x="77.9121%" y="751.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="77.6621%" y="725" width="0.3203%" height="15" fill="rgb(207,8,20)" fg:x="970" fg:w="4"/><text x="77.9121%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="77.6621%" y="709" width="0.3203%" height="15" fill="rgb(236,113,14)" fg:x="970" fg:w="4"/><text x="77.9121%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="77.6621%" y="693" width="0.3203%" height="15" fill="rgb(207,6,6)" fg:x="970" fg:w="4"/><text x="77.9121%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="77.6621%" y="677" width="0.3203%" height="15" fill="rgb(225,92,41)" fg:x="970" fg:w="4"/><text x="77.9121%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="77.6621%" y="661" width="0.3203%" height="15" fill="rgb(234,224,18)" fg:x="970" fg:w="4"/><text x="77.9121%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="77.6621%" y="645" width="0.3203%" height="15" fill="rgb(248,195,4)" fg:x="970" fg:w="4"/><text x="77.9121%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="77.6621%" y="629" width="0.3203%" height="15" fill="rgb(229,146,7)" fg:x="970" fg:w="4"/><text x="77.9121%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="77.6621%" y="613" width="0.3203%" height="15" fill="rgb(249,192,15)" fg:x="970" fg:w="4"/><text x="77.9121%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="77.8223%" y="597" width="0.1601%" height="15" fill="rgb(253,77,34)" fg:x="972" fg:w="2"/><text x="78.0723%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.8223%" y="581" width="0.1601%" height="15" fill="rgb(236,228,3)" fg:x="972" fg:w="2"/><text x="78.0723%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.9023%" y="565" width="0.0801%" height="15" fill="rgb(233,71,16)" fg:x="973" fg:w="1"/><text x="78.1523%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.9023%" y="549" width="0.0801%" height="15" fill="rgb(239,41,1)" fg:x="973" fg:w="1"/><text x="78.1523%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.9824%" y="693" width="0.0801%" height="15" fill="rgb(214,119,41)" fg:x="974" fg:w="1"/><text x="78.2324%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.9824%" y="677" width="0.0801%" height="15" fill="rgb(213,17,39)" fg:x="974" fg:w="1"/><text x="78.2324%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.9824%" y="661" width="0.0801%" height="15" fill="rgb(245,42,20)" fg:x="974" fg:w="1"/><text x="78.2324%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9824%" y="645" width="0.0801%" height="15" fill="rgb(252,18,22)" fg:x="974" fg:w="1"/><text x="78.2324%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0624%" y="661" width="0.0801%" height="15" fill="rgb(219,125,29)" fg:x="975" fg:w="1"/><text x="78.3124%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0624%" y="645" width="0.0801%" height="15" fill="rgb(215,56,47)" fg:x="975" fg:w="1"/><text x="78.3124%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0624%" y="629" width="0.0801%" height="15" fill="rgb(212,211,43)" fg:x="975" fg:w="1"/><text x="78.3124%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0624%" y="613" width="0.0801%" height="15" fill="rgb(225,24,34)" fg:x="975" fg:w="1"/><text x="78.3124%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0624%" y="597" width="0.0801%" height="15" fill="rgb(229,104,27)" fg:x="975" fg:w="1"/><text x="78.3124%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="77.9824%" y="725" width="0.2402%" height="15" fill="rgb(208,56,42)" fg:x="974" fg:w="3"/><text x="78.2324%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="77.9824%" y="709" width="0.2402%" height="15" fill="rgb(210,79,18)" fg:x="974" fg:w="3"/><text x="78.2324%" y="719.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="78.0624%" y="693" width="0.1601%" height="15" fill="rgb(236,125,53)" fg:x="975" fg:w="2"/><text x="78.3124%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="78.0624%" y="677" width="0.1601%" height="15" fill="rgb(207,101,52)" fg:x="975" fg:w="2"/><text x="78.3124%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.1425%" y="661" width="0.0801%" height="15" fill="rgb(248,51,10)" fg:x="976" fg:w="1"/><text x="78.3925%" y="671.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (164 samples, 13.13%)</title><rect x="65.1721%" y="789" width="13.1305%" height="15" fill="rgb(222,184,26)" fg:x="814" fg:w="164"/><text x="65.4221%" y="799.50">&lt;tests::HoldingKeyIn..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (8 samples, 0.64%)</title><rect x="77.6621%" y="773" width="0.6405%" height="15" fill="rgb(226,13,15)" fg:x="970" fg:w="8"/><text x="77.9121%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="77.6621%" y="757" width="0.6405%" height="15" fill="rgb(238,108,43)" fg:x="970" fg:w="8"/><text x="77.9121%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="77.9824%" y="741" width="0.3203%" height="15" fill="rgb(252,6,18)" fg:x="974" fg:w="4"/><text x="78.2324%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="78.2226%" y="725" width="0.0801%" height="15" fill="rgb(215,206,11)" fg:x="977" fg:w="1"/><text x="78.4726%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.2226%" y="709" width="0.0801%" height="15" fill="rgb(243,20,18)" fg:x="977" fg:w="1"/><text x="78.4726%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="78.3026%" y="773" width="0.0801%" height="15" fill="rgb(213,39,51)" fg:x="978" fg:w="1"/><text x="78.5526%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3026%" y="757" width="0.0801%" height="15" fill="rgb(225,153,38)" fg:x="978" fg:w="1"/><text x="78.5526%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="78.3827%" y="741" width="0.0801%" height="15" fill="rgb(235,8,28)" fg:x="979" fg:w="1"/><text x="78.6327%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.3827%" y="725" width="0.0801%" height="15" fill="rgb(215,0,21)" fg:x="979" fg:w="1"/><text x="78.6327%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.3827%" y="709" width="0.0801%" height="15" fill="rgb(205,153,39)" fg:x="979" fg:w="1"/><text x="78.6327%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.3827%" y="693" width="0.0801%" height="15" fill="rgb(231,172,8)" fg:x="979" fg:w="1"/><text x="78.6327%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.3827%" y="677" width="0.0801%" height="15" fill="rgb(251,142,40)" fg:x="979" fg:w="1"/><text x="78.6327%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.3827%" y="661" width="0.0801%" height="15" fill="rgb(214,48,45)" fg:x="979" fg:w="1"/><text x="78.6327%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.3827%" y="645" width="0.0801%" height="15" fill="rgb(231,29,28)" fg:x="979" fg:w="1"/><text x="78.6327%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.3827%" y="629" width="0.0801%" height="15" fill="rgb(245,57,8)" fg:x="979" fg:w="1"/><text x="78.6327%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.3827%" y="613" width="0.0801%" height="15" fill="rgb(236,199,39)" fg:x="979" fg:w="1"/><text x="78.6327%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.3827%" y="597" width="0.0801%" height="15" fill="rgb(208,132,35)" fg:x="979" fg:w="1"/><text x="78.6327%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.3827%" y="581" width="0.0801%" height="15" fill="rgb(225,217,34)" fg:x="979" fg:w="1"/><text x="78.6327%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3827%" y="565" width="0.0801%" height="15" fill="rgb(252,227,26)" fg:x="979" fg:w="1"/><text x="78.6327%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="78.4628%" y="725" width="0.0801%" height="15" fill="rgb(250,228,18)" fg:x="980" fg:w="1"/><text x="78.7128%" y="735.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="78.5428%" y="693" width="0.0801%" height="15" fill="rgb(222,176,49)" fg:x="981" fg:w="1"/><text x="78.7928%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.5428%" y="677" width="0.0801%" height="15" fill="rgb(212,89,5)" fg:x="981" fg:w="1"/><text x="78.7928%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="78.5428%" y="661" width="0.0801%" height="15" fill="rgb(211,131,11)" fg:x="981" fg:w="1"/><text x="78.7928%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="78.5428%" y="645" width="0.0801%" height="15" fill="rgb(226,185,34)" fg:x="981" fg:w="1"/><text x="78.7928%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.08%)</title><rect x="78.7030%" y="661" width="0.0801%" height="15" fill="rgb(239,228,52)" fg:x="983" fg:w="1"/><text x="78.9530%" y="671.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (6 samples, 0.48%)</title><rect x="78.3827%" y="757" width="0.4804%" height="15" fill="rgb(213,126,26)" fg:x="979" fg:w="6"/><text x="78.6327%" y="767.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (5 samples, 0.40%)</title><rect x="78.4628%" y="741" width="0.4003%" height="15" fill="rgb(248,59,21)" fg:x="980" fg:w="5"/><text x="78.7128%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="78.5428%" y="725" width="0.3203%" height="15" fill="rgb(207,10,1)" fg:x="981" fg:w="4"/><text x="78.7928%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="78.5428%" y="709" width="0.3203%" height="15" fill="rgb(240,122,43)" fg:x="981" fg:w="4"/><text x="78.7928%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="78.6229%" y="693" width="0.2402%" height="15" fill="rgb(250,158,39)" fg:x="982" fg:w="3"/><text x="78.8729%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="78.6229%" y="677" width="0.2402%" height="15" fill="rgb(212,108,0)" fg:x="982" fg:w="3"/><text x="78.8729%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.7830%" y="661" width="0.0801%" height="15" fill="rgb(231,150,38)" fg:x="984" fg:w="1"/><text x="79.0330%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.7830%" y="645" width="0.0801%" height="15" fill="rgb(249,154,4)" fg:x="984" fg:w="1"/><text x="79.0330%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.7830%" y="629" width="0.0801%" height="15" fill="rgb(219,46,1)" fg:x="984" fg:w="1"/><text x="79.0330%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.7830%" y="613" width="0.0801%" height="15" fill="rgb(227,68,4)" fg:x="984" fg:w="1"/><text x="79.0330%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Raised&gt; (1 samples, 0.08%)</title><rect x="78.8631%" y="757" width="0.0801%" height="15" fill="rgb(254,224,51)" fg:x="985" fg:w="1"/><text x="79.1131%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="78.8631%" y="741" width="0.0801%" height="15" fill="rgb(220,89,20)" fg:x="985" fg:w="1"/><text x="79.1131%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.0232%" y="709" width="0.0801%" height="15" fill="rgb(245,148,36)" fg:x="987" fg:w="1"/><text x="79.2732%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.0232%" y="693" width="0.0801%" height="15" fill="rgb(216,50,30)" fg:x="987" fg:w="1"/><text x="79.2732%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.0232%" y="677" width="0.0801%" height="15" fill="rgb(254,186,48)" fg:x="987" fg:w="1"/><text x="79.2732%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.0232%" y="661" width="0.0801%" height="15" fill="rgb(237,78,54)" fg:x="987" fg:w="1"/><text x="79.2732%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.0232%" y="645" width="0.0801%" height="15" fill="rgb(208,122,28)" fg:x="987" fg:w="1"/><text x="79.2732%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.0232%" y="629" width="0.0801%" height="15" fill="rgb(237,71,0)" fg:x="987" fg:w="1"/><text x="79.2732%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.0232%" y="613" width="0.0801%" height="15" fill="rgb(241,168,21)" fg:x="987" fg:w="1"/><text x="79.2732%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.0232%" y="597" width="0.0801%" height="15" fill="rgb(252,223,14)" fg:x="987" fg:w="1"/><text x="79.2732%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.0232%" y="581" width="0.0801%" height="15" fill="rgb(228,172,14)" fg:x="987" fg:w="1"/><text x="79.2732%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.0232%" y="565" width="0.0801%" height="15" fill="rgb(236,44,24)" fg:x="987" fg:w="1"/><text x="79.2732%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.0232%" y="549" width="0.0801%" height="15" fill="rgb(211,153,1)" fg:x="987" fg:w="1"/><text x="79.2732%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.0232%" y="533" width="0.0801%" height="15" fill="rgb(242,70,19)" fg:x="987" fg:w="1"/><text x="79.2732%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.1833%" y="677" width="0.0801%" height="15" fill="rgb(237,172,13)" fg:x="989" fg:w="1"/><text x="79.4333%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.1833%" y="661" width="0.0801%" height="15" fill="rgb(215,222,51)" fg:x="989" fg:w="1"/><text x="79.4333%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.1833%" y="645" width="0.0801%" height="15" fill="rgb(227,136,3)" fg:x="989" fg:w="1"/><text x="79.4333%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="79.1833%" y="693" width="0.1601%" height="15" fill="rgb(234,107,46)" fg:x="989" fg:w="2"/><text x="79.4333%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.2634%" y="677" width="0.0801%" height="15" fill="rgb(224,56,35)" fg:x="990" fg:w="1"/><text x="79.5134%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.3435%" y="677" width="0.1601%" height="15" fill="rgb(253,132,31)" fg:x="991" fg:w="2"/><text x="79.5935%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.3435%" y="661" width="0.1601%" height="15" fill="rgb(249,97,5)" fg:x="991" fg:w="2"/><text x="79.5935%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.4235%" y="645" width="0.0801%" height="15" fill="rgb(225,135,20)" fg:x="992" fg:w="1"/><text x="79.6735%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.5036%" y="629" width="0.0801%" height="15" fill="rgb(220,48,27)" fg:x="993" fg:w="1"/><text x="79.7536%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.5036%" y="613" width="0.0801%" height="15" fill="rgb(214,91,28)" fg:x="993" fg:w="1"/><text x="79.7536%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.5036%" y="597" width="0.0801%" height="15" fill="rgb(232,51,16)" fg:x="993" fg:w="1"/><text x="79.7536%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.5036%" y="581" width="0.0801%" height="15" fill="rgb(254,38,15)" fg:x="993" fg:w="1"/><text x="79.7536%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.5036%" y="565" width="0.0801%" height="15" fill="rgb(243,186,4)" fg:x="993" fg:w="1"/><text x="79.7536%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.5036%" y="549" width="0.0801%" height="15" fill="rgb(222,210,21)" fg:x="993" fg:w="1"/><text x="79.7536%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.5036%" y="533" width="0.0801%" height="15" fill="rgb(228,132,3)" fg:x="993" fg:w="1"/><text x="79.7536%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="79.5036%" y="661" width="0.1601%" height="15" fill="rgb(253,188,15)" fg:x="993" fg:w="2"/><text x="79.7536%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.5036%" y="645" width="0.1601%" height="15" fill="rgb(216,192,40)" fg:x="993" fg:w="2"/><text x="79.7536%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.5837%" y="629" width="0.0801%" height="15" fill="rgb(230,126,2)" fg:x="994" fg:w="1"/><text x="79.8337%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.5837%" y="613" width="0.0801%" height="15" fill="rgb(246,23,15)" fg:x="994" fg:w="1"/><text x="79.8337%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.5837%" y="597" width="0.0801%" height="15" fill="rgb(250,224,8)" fg:x="994" fg:w="1"/><text x="79.8337%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.5837%" y="581" width="0.0801%" height="15" fill="rgb(247,226,46)" fg:x="994" fg:w="1"/><text x="79.8337%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.6637%" y="661" width="0.1601%" height="15" fill="rgb(226,67,43)" fg:x="995" fg:w="2"/><text x="79.9137%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.9039%" y="645" width="0.0801%" height="15" fill="rgb(239,37,7)" fg:x="998" fg:w="1"/><text x="80.1539%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.9039%" y="629" width="0.0801%" height="15" fill="rgb(239,125,3)" fg:x="998" fg:w="1"/><text x="80.1539%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.9840%" y="645" width="0.0801%" height="15" fill="rgb(235,59,37)" fg:x="999" fg:w="1"/><text x="80.2340%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.9840%" y="629" width="0.0801%" height="15" fill="rgb(241,214,47)" fg:x="999" fg:w="1"/><text x="80.2340%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.1441%" y="613" width="0.0801%" height="15" fill="rgb(214,114,51)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.1441%" y="597" width="0.0801%" height="15" fill="rgb(221,180,19)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.1441%" y="581" width="0.0801%" height="15" fill="rgb(223,66,32)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.1441%" y="565" width="0.0801%" height="15" fill="rgb(218,134,38)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.1441%" y="549" width="0.0801%" height="15" fill="rgb(250,83,11)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.1441%" y="533" width="0.0801%" height="15" fill="rgb(239,137,18)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.1441%" y="517" width="0.0801%" height="15" fill="rgb(242,185,53)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.1441%" y="501" width="0.0801%" height="15" fill="rgb(244,165,31)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="79.5036%" y="677" width="1.1209%" height="15" fill="rgb(223,129,30)" fg:x="993" fg:w="14"/><text x="79.7536%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="79.8239%" y="661" width="0.8006%" height="15" fill="rgb(240,148,35)" fg:x="997" fg:w="10"/><text x="80.0739%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="80.0641%" y="645" width="0.5604%" height="15" fill="rgb(231,3,24)" fg:x="1000" fg:w="7"/><text x="80.3141%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="80.1441%" y="629" width="0.4804%" height="15" fill="rgb(227,197,42)" fg:x="1001" fg:w="6"/><text x="80.3941%" y="639.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="80.2242%" y="613" width="0.4003%" height="15" fill="rgb(251,41,31)" fg:x="1002" fg:w="5"/><text x="80.4742%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="80.2242%" y="597" width="0.4003%" height="15" fill="rgb(207,92,5)" fg:x="1002" fg:w="5"/><text x="80.4742%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="80.2242%" y="581" width="0.4003%" height="15" fill="rgb(236,62,31)" fg:x="1002" fg:w="5"/><text x="80.4742%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="80.2242%" y="565" width="0.4003%" height="15" fill="rgb(248,218,41)" fg:x="1002" fg:w="5"/><text x="80.4742%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="80.2242%" y="549" width="0.4003%" height="15" fill="rgb(250,128,19)" fg:x="1002" fg:w="5"/><text x="80.4742%" y="559.50"></text></g><g><title>realloc (5 samples, 0.40%)</title><rect x="80.2242%" y="533" width="0.4003%" height="15" fill="rgb(239,216,33)" fg:x="1002" fg:w="5"/><text x="80.4742%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (22 samples, 1.76%)</title><rect x="79.1033%" y="709" width="1.7614%" height="15" fill="rgb(216,44,26)" fg:x="988" fg:w="22"/><text x="79.3533%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.52%)</title><rect x="79.3435%" y="693" width="1.5212%" height="15" fill="rgb(207,69,29)" fg:x="991" fg:w="19"/><text x="79.5935%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="80.6245%" y="677" width="0.2402%" height="15" fill="rgb(246,182,38)" fg:x="1007" fg:w="3"/><text x="80.8745%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="80.7046%" y="661" width="0.1601%" height="15" fill="rgb(252,219,28)" fg:x="1008" fg:w="2"/><text x="80.9546%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="80.7046%" y="645" width="0.1601%" height="15" fill="rgb(209,164,16)" fg:x="1008" fg:w="2"/><text x="80.9546%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.7846%" y="629" width="0.0801%" height="15" fill="rgb(208,49,15)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.7846%" y="613" width="0.0801%" height="15" fill="rgb(235,42,45)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.7846%" y="597" width="0.0801%" height="15" fill="rgb(246,198,8)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="80.9448%" y="677" width="0.1601%" height="15" fill="rgb(237,205,33)" fg:x="1011" fg:w="2"/><text x="81.1948%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.1849%" y="645" width="0.0801%" height="15" fill="rgb(249,116,21)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="80.8647%" y="709" width="0.4804%" height="15" fill="rgb(230,35,49)" fg:x="1010" fg:w="6"/><text x="81.1147%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="80.8647%" y="693" width="0.4804%" height="15" fill="rgb(207,8,52)" fg:x="1010" fg:w="6"/><text x="81.1147%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.1049%" y="677" width="0.2402%" height="15" fill="rgb(218,173,0)" fg:x="1013" fg:w="3"/><text x="81.3549%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.1849%" y="661" width="0.1601%" height="15" fill="rgb(248,106,34)" fg:x="1014" fg:w="2"/><text x="81.4349%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.2650%" y="645" width="0.0801%" height="15" fill="rgb(232,50,11)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="81.2650%" y="629" width="0.0801%" height="15" fill="rgb(213,142,18)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.2650%" y="613" width="0.0801%" height="15" fill="rgb(246,117,38)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="81.5052%" y="645" width="0.1601%" height="15" fill="rgb(218,133,54)" fg:x="1018" fg:w="2"/><text x="81.7552%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.6653%" y="629" width="0.0801%" height="15" fill="rgb(216,154,35)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.7454%" y="629" width="0.0801%" height="15" fill="rgb(219,175,36)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="81.8255%" y="613" width="0.1601%" height="15" fill="rgb(224,0,16)" fg:x="1022" fg:w="2"/><text x="82.0755%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.9856%" y="597" width="0.0801%" height="15" fill="rgb(221,186,40)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.0657%" y="565" width="0.0801%" height="15" fill="rgb(254,0,31)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.0657%" y="549" width="0.0801%" height="15" fill="rgb(206,138,52)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="81.4251%" y="677" width="0.8006%" height="15" fill="rgb(229,99,30)" fg:x="1017" fg:w="10"/><text x="81.6751%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="81.4251%" y="661" width="0.8006%" height="15" fill="rgb(205,131,29)" fg:x="1017" fg:w="10"/><text x="81.6751%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="81.6653%" y="645" width="0.5604%" height="15" fill="rgb(232,114,46)" fg:x="1020" fg:w="7"/><text x="81.9153%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="81.8255%" y="629" width="0.4003%" height="15" fill="rgb(206,181,31)" fg:x="1022" fg:w="5"/><text x="82.0755%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.9856%" y="613" width="0.2402%" height="15" fill="rgb(251,142,12)" fg:x="1024" fg:w="3"/><text x="82.2356%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.0657%" y="597" width="0.1601%" height="15" fill="rgb(252,128,47)" fg:x="1025" fg:w="2"/><text x="82.3157%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.0657%" y="581" width="0.1601%" height="15" fill="rgb(208,51,33)" fg:x="1025" fg:w="2"/><text x="82.3157%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.1457%" y="565" width="0.0801%" height="15" fill="rgb(240,36,11)" fg:x="1026" fg:w="1"/><text x="82.3957%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.1457%" y="549" width="0.0801%" height="15" fill="rgb(245,160,28)" fg:x="1026" fg:w="1"/><text x="82.3957%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.1457%" y="533" width="0.0801%" height="15" fill="rgb(230,37,49)" fg:x="1026" fg:w="1"/><text x="82.3957%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.2258%" y="677" width="0.0801%" height="15" fill="rgb(227,40,34)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.2258%" y="661" width="0.0801%" height="15" fill="rgb(253,212,23)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.3058%" y="661" width="0.0801%" height="15" fill="rgb(230,155,36)" fg:x="1028" fg:w="1"/><text x="82.5558%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.3859%" y="645" width="0.0801%" height="15" fill="rgb(221,176,6)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.3859%" y="629" width="0.0801%" height="15" fill="rgb(207,203,40)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3859%" y="613" width="0.0801%" height="15" fill="rgb(215,88,16)" fg:x="1029" fg:w="1"/><text x="82.6359%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="82.4660%" y="645" width="0.0801%" height="15" fill="rgb(233,52,54)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.4660%" y="629" width="0.0801%" height="15" fill="rgb(205,47,52)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.4660%" y="613" width="0.0801%" height="15" fill="rgb(218,56,43)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.5460%" y="629" width="0.0801%" height="15" fill="rgb(251,225,48)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="639.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (17 samples, 1.36%)</title><rect x="81.3451%" y="693" width="1.3611%" height="15" fill="rgb(244,56,1)" fg:x="1016" fg:w="17"/><text x="81.5951%" y="703.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.40%)</title><rect x="82.3058%" y="677" width="0.4003%" height="15" fill="rgb(215,46,3)" fg:x="1028" fg:w="5"/><text x="82.5558%" y="687.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="82.3859%" y="661" width="0.3203%" height="15" fill="rgb(252,25,51)" fg:x="1029" fg:w="4"/><text x="82.6359%" y="671.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="82.5460%" y="645" width="0.1601%" height="15" fill="rgb(243,86,25)" fg:x="1031" fg:w="2"/><text x="82.7960%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.6261%" y="629" width="0.0801%" height="15" fill="rgb(223,57,49)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.7062%" y="661" width="0.1601%" height="15" fill="rgb(226,26,11)" fg:x="1033" fg:w="2"/><text x="82.9562%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7862%" y="645" width="0.0801%" height="15" fill="rgb(233,166,51)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="82.7862%" y="629" width="0.0801%" height="15" fill="rgb(232,145,44)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="82.8663%" y="661" width="0.0801%" height="15" fill="rgb(246,98,4)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.8663%" y="645" width="0.0801%" height="15" fill="rgb(223,187,1)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.8663%" y="629" width="0.0801%" height="15" fill="rgb(245,183,34)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9464%" y="661" width="0.0801%" height="15" fill="rgb(223,6,23)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.9464%" y="645" width="0.0801%" height="15" fill="rgb(226,63,21)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="83.0264%" y="629" width="0.0801%" height="15" fill="rgb(244,58,43)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2666%" y="613" width="0.0801%" height="15" fill="rgb(221,65,27)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2666%" y="597" width="0.0801%" height="15" fill="rgb(231,17,48)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.2666%" y="581" width="0.0801%" height="15" fill="rgb(229,198,23)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="83.3467%" y="613" width="0.3203%" height="15" fill="rgb(220,192,38)" fg:x="1041" fg:w="4"/><text x="83.5967%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="83.3467%" y="597" width="0.3203%" height="15" fill="rgb(224,157,12)" fg:x="1041" fg:w="4"/><text x="83.5967%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="83.3467%" y="581" width="0.3203%" height="15" fill="rgb(210,74,7)" fg:x="1041" fg:w="4"/><text x="83.5967%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="83.3467%" y="565" width="0.3203%" height="15" fill="rgb(233,184,31)" fg:x="1041" fg:w="4"/><text x="83.5967%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="83.4267%" y="549" width="0.2402%" height="15" fill="rgb(246,44,22)" fg:x="1042" fg:w="3"/><text x="83.6767%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.5869%" y="533" width="0.0801%" height="15" fill="rgb(236,102,41)" fg:x="1044" fg:w="1"/><text x="83.8369%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6669%" y="517" width="0.0801%" height="15" fill="rgb(245,17,40)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.6669%" y="549" width="0.1601%" height="15" fill="rgb(227,165,9)" fg:x="1045" fg:w="2"/><text x="83.9169%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.6669%" y="533" width="0.1601%" height="15" fill="rgb(220,123,37)" fg:x="1045" fg:w="2"/><text x="83.9169%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.7470%" y="517" width="0.0801%" height="15" fill="rgb(239,124,16)" fg:x="1046" fg:w="1"/><text x="83.9970%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.9071%" y="517" width="0.1601%" height="15" fill="rgb(214,215,39)" fg:x="1048" fg:w="2"/><text x="84.1571%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.9872%" y="501" width="0.0801%" height="15" fill="rgb(224,72,47)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="83.6669%" y="565" width="0.4804%" height="15" fill="rgb(252,112,7)" fg:x="1045" fg:w="6"/><text x="83.9169%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="83.8271%" y="549" width="0.3203%" height="15" fill="rgb(228,116,35)" fg:x="1047" fg:w="4"/><text x="84.0771%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="83.8271%" y="533" width="0.3203%" height="15" fill="rgb(246,125,25)" fg:x="1047" fg:w="4"/><text x="84.0771%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.0673%" y="517" width="0.0801%" height="15" fill="rgb(230,220,33)" fg:x="1050" fg:w="1"/><text x="84.3173%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.0673%" y="501" width="0.0801%" height="15" fill="rgb(220,48,47)" fg:x="1050" fg:w="1"/><text x="84.3173%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.0673%" y="485" width="0.0801%" height="15" fill="rgb(240,130,32)" fg:x="1050" fg:w="1"/><text x="84.3173%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.0673%" y="469" width="0.0801%" height="15" fill="rgb(252,97,40)" fg:x="1050" fg:w="1"/><text x="84.3173%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.0673%" y="453" width="0.0801%" height="15" fill="rgb(211,117,15)" fg:x="1050" fg:w="1"/><text x="84.3173%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.1473%" y="565" width="0.0801%" height="15" fill="rgb(223,47,44)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.60%)</title><rect x="82.7062%" y="693" width="1.6013%" height="15" fill="rgb(239,53,20)" fg:x="1033" fg:w="20"/><text x="82.9562%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.60%)</title><rect x="82.7062%" y="677" width="1.6013%" height="15" fill="rgb(242,71,22)" fg:x="1033" fg:w="20"/><text x="82.9562%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.28%)</title><rect x="83.0264%" y="661" width="1.2810%" height="15" fill="rgb(244,146,41)" fg:x="1037" fg:w="16"/><text x="83.2764%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.28%)</title><rect x="83.0264%" y="645" width="1.2810%" height="15" fill="rgb(206,133,42)" fg:x="1037" fg:w="16"/><text x="83.2764%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="83.1065%" y="629" width="1.2010%" height="15" fill="rgb(220,206,16)" fg:x="1038" fg:w="15"/><text x="83.3565%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="83.6669%" y="613" width="0.6405%" height="15" fill="rgb(234,5,52)" fg:x="1045" fg:w="8"/><text x="83.9169%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="83.6669%" y="597" width="0.6405%" height="15" fill="rgb(206,81,46)" fg:x="1045" fg:w="8"/><text x="83.9169%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="83.6669%" y="581" width="0.6405%" height="15" fill="rgb(245,111,47)" fg:x="1045" fg:w="8"/><text x="83.9169%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="84.2274%" y="565" width="0.0801%" height="15" fill="rgb(227,198,45)" fg:x="1052" fg:w="1"/><text x="84.4774%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="84.2274%" y="549" width="0.0801%" height="15" fill="rgb(223,141,47)" fg:x="1052" fg:w="1"/><text x="84.4774%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="84.3074%" y="613" width="0.0801%" height="15" fill="rgb(234,124,3)" fg:x="1053" fg:w="1"/><text x="84.5574%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="84.4676%" y="517" width="0.1601%" height="15" fill="rgb(218,189,15)" fg:x="1055" fg:w="2"/><text x="84.7176%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="84.5476%" y="501" width="0.0801%" height="15" fill="rgb(253,91,25)" fg:x="1056" fg:w="1"/><text x="84.7976%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="84.4676%" y="549" width="0.3203%" height="15" fill="rgb(243,103,39)" fg:x="1055" fg:w="4"/><text x="84.7176%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="84.4676%" y="533" width="0.3203%" height="15" fill="rgb(252,94,6)" fg:x="1055" fg:w="4"/><text x="84.7176%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="84.6277%" y="517" width="0.1601%" height="15" fill="rgb(236,153,18)" fg:x="1057" fg:w="2"/><text x="84.8777%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="84.6277%" y="501" width="0.1601%" height="15" fill="rgb(218,227,22)" fg:x="1057" fg:w="2"/><text x="84.8777%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="84.7878%" y="501" width="0.1601%" height="15" fill="rgb(209,53,33)" fg:x="1059" fg:w="2"/><text x="85.0378%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="84.7878%" y="485" width="0.1601%" height="15" fill="rgb(252,183,3)" fg:x="1059" fg:w="2"/><text x="85.0378%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="84.7878%" y="469" width="0.1601%" height="15" fill="rgb(249,138,54)" fg:x="1059" fg:w="2"/><text x="85.0378%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="84.7878%" y="453" width="0.1601%" height="15" fill="rgb(226,39,3)" fg:x="1059" fg:w="2"/><text x="85.0378%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.8679%" y="437" width="0.0801%" height="15" fill="rgb(237,129,38)" fg:x="1060" fg:w="1"/><text x="85.1179%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="84.8679%" y="421" width="0.0801%" height="15" fill="rgb(218,214,54)" fg:x="1060" fg:w="1"/><text x="85.1179%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="84.7878%" y="533" width="0.2402%" height="15" fill="rgb(228,112,8)" fg:x="1059" fg:w="3"/><text x="85.0378%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="84.7878%" y="517" width="0.2402%" height="15" fill="rgb(219,128,11)" fg:x="1059" fg:w="3"/><text x="85.0378%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9480%" y="501" width="0.0801%" height="15" fill="rgb(240,39,37)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9480%" y="485" width="0.0801%" height="15" fill="rgb(215,199,42)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9480%" y="469" width="0.0801%" height="15" fill="rgb(248,51,13)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="84.7878%" y="549" width="0.3203%" height="15" fill="rgb(225,196,0)" fg:x="1059" fg:w="4"/><text x="85.0378%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.0280%" y="533" width="0.0801%" height="15" fill="rgb(221,31,53)" fg:x="1062" fg:w="1"/><text x="85.2780%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="85.0280%" y="517" width="0.0801%" height="15" fill="rgb(211,79,37)" fg:x="1062" fg:w="1"/><text x="85.2780%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="84.3875%" y="565" width="0.8006%" height="15" fill="rgb(227,118,20)" fg:x="1054" fg:w="10"/><text x="84.6375%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="85.1081%" y="549" width="0.0801%" height="15" fill="rgb(225,142,40)" fg:x="1063" fg:w="1"/><text x="85.3581%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.1081%" y="533" width="0.0801%" height="15" fill="rgb(208,183,34)" fg:x="1063" fg:w="1"/><text x="85.3581%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1081%" y="517" width="0.0801%" height="15" fill="rgb(209,112,52)" fg:x="1063" fg:w="1"/><text x="85.3581%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.96%)</title><rect x="84.3875%" y="597" width="0.9608%" height="15" fill="rgb(236,9,32)" fg:x="1054" fg:w="12"/><text x="84.6375%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="84.3875%" y="581" width="0.9608%" height="15" fill="rgb(208,222,9)" fg:x="1054" fg:w="12"/><text x="84.6375%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.1882%" y="565" width="0.1601%" height="15" fill="rgb(214,142,24)" fg:x="1064" fg:w="2"/><text x="85.4382%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.1882%" y="549" width="0.1601%" height="15" fill="rgb(244,48,51)" fg:x="1064" fg:w="2"/><text x="85.4382%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="85.3483%" y="581" width="0.1601%" height="15" fill="rgb(253,171,44)" fg:x="1066" fg:w="2"/><text x="85.5983%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="85.3483%" y="597" width="0.2402%" height="15" fill="rgb(221,85,21)" fg:x="1066" fg:w="3"/><text x="85.5983%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.5084%" y="581" width="0.0801%" height="15" fill="rgb(245,40,38)" fg:x="1068" fg:w="1"/><text x="85.7584%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.44%)</title><rect x="84.3074%" y="629" width="1.4412%" height="15" fill="rgb(220,135,37)" fg:x="1053" fg:w="18"/><text x="84.5574%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.36%)</title><rect x="84.3875%" y="613" width="1.3611%" height="15" fill="rgb(249,62,46)" fg:x="1054" fg:w="17"/><text x="84.6375%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.5885%" y="597" width="0.1601%" height="15" fill="rgb(232,81,15)" fg:x="1069" fg:w="2"/><text x="85.8385%" y="607.50"></text></g><g><title>engine::session::state::State::close (93 samples, 7.45%)</title><rect x="78.3827%" y="773" width="7.4460%" height="15" fill="rgb(244,179,28)" fg:x="979" fg:w="93"/><text x="78.6327%" y="783.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (86 samples, 6.89%)</title><rect x="78.9432%" y="757" width="6.8855%" height="15" fill="rgb(220,4,32)" fg:x="986" fg:w="86"/><text x="79.1932%" y="767.50">engine::s..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (86 samples, 6.89%)</title><rect x="78.9432%" y="741" width="6.8855%" height="15" fill="rgb(214,116,42)" fg:x="986" fg:w="86"/><text x="79.1932%" y="751.50">engine::s..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (86 samples, 6.89%)</title><rect x="78.9432%" y="725" width="6.8855%" height="15" fill="rgb(226,94,31)" fg:x="986" fg:w="86"/><text x="79.1932%" y="735.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (56 samples, 4.48%)</title><rect x="81.3451%" y="709" width="4.4836%" height="15" fill="rgb(241,172,26)" fg:x="1016" fg:w="56"/><text x="81.5951%" y="719.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (19 samples, 1.52%)</title><rect x="84.3074%" y="693" width="1.5212%" height="15" fill="rgb(206,38,39)" fg:x="1053" fg:w="19"/><text x="84.5574%" y="703.50"></text></g><g><title>serde_json::de::from_trait (19 samples, 1.52%)</title><rect x="84.3074%" y="677" width="1.5212%" height="15" fill="rgb(210,139,19)" fg:x="1053" fg:w="19"/><text x="84.5574%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19 samples, 1.52%)</title><rect x="84.3074%" y="661" width="1.5212%" height="15" fill="rgb(220,10,22)" fg:x="1053" fg:w="19"/><text x="84.5574%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.52%)</title><rect x="84.3074%" y="645" width="1.5212%" height="15" fill="rgb(225,218,36)" fg:x="1053" fg:w="19"/><text x="84.5574%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7486%" y="629" width="0.0801%" height="15" fill="rgb(244,50,47)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="639.50"></text></g><g><title>engine::session::Session::close (95 samples, 7.61%)</title><rect x="78.3026%" y="789" width="7.6061%" height="15" fill="rgb(247,80,2)" fg:x="978" fg:w="95"/><text x="78.5526%" y="799.50">engine::se..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="85.8287%" y="773" width="0.0801%" height="15" fill="rgb(234,70,38)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="783.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="85.8287%" y="757" width="0.0801%" height="15" fill="rgb(238,170,25)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="85.8287%" y="741" width="0.0801%" height="15" fill="rgb(252,23,6)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="85.8287%" y="725" width="0.0801%" height="15" fill="rgb(209,98,49)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="735.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="85.8287%" y="709" width="0.0801%" height="15" fill="rgb(213,29,25)" fg:x="1072" fg:w="1"/><text x="86.0787%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="85.9888%" y="661" width="0.1601%" height="15" fill="rgb(235,71,32)" fg:x="1074" fg:w="2"/><text x="86.2388%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="85.9888%" y="645" width="0.1601%" height="15" fill="rgb(227,75,49)" fg:x="1074" fg:w="2"/><text x="86.2388%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="85.9888%" y="629" width="0.1601%" height="15" fill="rgb(220,19,24)" fg:x="1074" fg:w="2"/><text x="86.2388%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="86.0689%" y="613" width="0.0801%" height="15" fill="rgb(249,67,15)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.0689%" y="597" width="0.0801%" height="15" fill="rgb(233,197,44)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.0689%" y="581" width="0.0801%" height="15" fill="rgb(245,206,23)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="591.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="86.0689%" y="565" width="0.0801%" height="15" fill="rgb(205,164,14)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="86.2290%" y="581" width="0.0801%" height="15" fill="rgb(209,57,33)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="86.2290%" y="565" width="0.0801%" height="15" fill="rgb(237,209,41)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.2290%" y="549" width="0.0801%" height="15" fill="rgb(252,93,6)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.2290%" y="533" width="0.0801%" height="15" fill="rgb(218,214,32)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.2290%" y="517" width="0.0801%" height="15" fill="rgb(243,144,9)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.2290%" y="501" width="0.0801%" height="15" fill="rgb(254,62,38)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.2290%" y="485" width="0.0801%" height="15" fill="rgb(247,146,11)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.2290%" y="469" width="0.0801%" height="15" fill="rgb(213,96,14)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.2290%" y="453" width="0.0801%" height="15" fill="rgb(246,102,11)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.2290%" y="437" width="0.0801%" height="15" fill="rgb(241,182,16)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.2290%" y="421" width="0.0801%" height="15" fill="rgb(225,28,43)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.2290%" y="405" width="0.0801%" height="15" fill="rgb(247,87,15)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.2290%" y="389" width="0.0801%" height="15" fill="rgb(225,211,30)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.2290%" y="373" width="0.0801%" height="15" fill="rgb(223,111,44)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.2290%" y="357" width="0.0801%" height="15" fill="rgb(225,60,10)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="86.2290%" y="341" width="0.0801%" height="15" fill="rgb(245,196,31)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="86.2290%" y="325" width="0.0801%" height="15" fill="rgb(238,71,27)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.3090%" y="485" width="0.0801%" height="15" fill="rgb(212,77,40)" fg:x="1078" fg:w="1"/><text x="86.5590%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="86.3090%" y="469" width="0.0801%" height="15" fill="rgb(242,14,34)" fg:x="1078" fg:w="1"/><text x="86.5590%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.3891%" y="485" width="0.0801%" height="15" fill="rgb(227,221,15)" fg:x="1079" fg:w="1"/><text x="86.6391%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.3891%" y="469" width="0.0801%" height="15" fill="rgb(230,80,41)" fg:x="1079" fg:w="1"/><text x="86.6391%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.3891%" y="453" width="0.0801%" height="15" fill="rgb(221,65,43)" fg:x="1079" fg:w="1"/><text x="86.6391%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.4692%" y="453" width="0.0801%" height="15" fill="rgb(250,139,15)" fg:x="1080" fg:w="1"/><text x="86.7192%" y="463.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="86.3090%" y="565" width="0.3203%" height="15" fill="rgb(236,101,33)" fg:x="1078" fg:w="4"/><text x="86.5590%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="86.3090%" y="549" width="0.3203%" height="15" fill="rgb(240,185,7)" fg:x="1078" fg:w="4"/><text x="86.5590%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="86.3090%" y="533" width="0.3203%" height="15" fill="rgb(230,219,29)" fg:x="1078" fg:w="4"/><text x="86.5590%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="86.3090%" y="517" width="0.3203%" height="15" fill="rgb(250,208,42)" fg:x="1078" fg:w="4"/><text x="86.5590%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="86.3090%" y="501" width="0.3203%" height="15" fill="rgb(231,6,17)" fg:x="1078" fg:w="4"/><text x="86.5590%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="86.4692%" y="485" width="0.1601%" height="15" fill="rgb(250,180,47)" fg:x="1080" fg:w="2"/><text x="86.7192%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="86.4692%" y="469" width="0.1601%" height="15" fill="rgb(218,156,38)" fg:x="1080" fg:w="2"/><text x="86.7192%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.5492%" y="453" width="0.0801%" height="15" fill="rgb(207,13,46)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.5492%" y="437" width="0.0801%" height="15" fill="rgb(221,30,24)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.5492%" y="421" width="0.0801%" height="15" fill="rgb(239,110,29)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.5492%" y="405" width="0.0801%" height="15" fill="rgb(223,212,28)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.5492%" y="389" width="0.0801%" height="15" fill="rgb(206,148,43)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.5492%" y="373" width="0.0801%" height="15" fill="rgb(227,139,9)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.5492%" y="357" width="0.0801%" height="15" fill="rgb(244,64,31)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.5492%" y="341" width="0.0801%" height="15" fill="rgb(219,45,45)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="86.6293%" y="485" width="0.1601%" height="15" fill="rgb(205,112,40)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="86.6293%" y="469" width="0.1601%" height="15" fill="rgb(207,18,46)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="86.6293%" y="453" width="0.1601%" height="15" fill="rgb(219,65,15)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="86.6293%" y="437" width="0.1601%" height="15" fill="rgb(248,191,24)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="86.6293%" y="421" width="0.1601%" height="15" fill="rgb(251,155,16)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="86.6293%" y="405" width="0.1601%" height="15" fill="rgb(249,62,38)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="415.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="86.6293%" y="389" width="0.1601%" height="15" fill="rgb(252,214,17)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="86.7094%" y="373" width="0.0801%" height="15" fill="rgb(246,215,53)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="86.7094%" y="357" width="0.0801%" height="15" fill="rgb(232,148,8)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="86.7094%" y="341" width="0.0801%" height="15" fill="rgb(221,119,15)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (7 samples, 0.56%)</title><rect x="86.3090%" y="581" width="0.5604%" height="15" fill="rgb(239,69,36)" fg:x="1078" fg:w="7"/><text x="86.5590%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="86.6293%" y="565" width="0.2402%" height="15" fill="rgb(247,164,1)" fg:x="1082" fg:w="3"/><text x="86.8793%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="86.6293%" y="549" width="0.2402%" height="15" fill="rgb(216,221,53)" fg:x="1082" fg:w="3"/><text x="86.8793%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="86.6293%" y="533" width="0.2402%" height="15" fill="rgb(249,57,29)" fg:x="1082" fg:w="3"/><text x="86.8793%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="86.6293%" y="517" width="0.2402%" height="15" fill="rgb(227,23,6)" fg:x="1082" fg:w="3"/><text x="86.8793%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="86.6293%" y="501" width="0.2402%" height="15" fill="rgb(213,211,30)" fg:x="1082" fg:w="3"/><text x="86.8793%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="86.7894%" y="485" width="0.0801%" height="15" fill="rgb(254,202,30)" fg:x="1084" fg:w="1"/><text x="87.0394%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8695%" y="533" width="0.0801%" height="15" fill="rgb(248,213,0)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8695%" y="517" width="0.0801%" height="15" fill="rgb(248,55,48)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8695%" y="501" width="0.0801%" height="15" fill="rgb(217,221,51)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8695%" y="485" width="0.0801%" height="15" fill="rgb(233,8,16)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.8695%" y="469" width="0.0801%" height="15" fill="rgb(220,23,39)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.80%)</title><rect x="86.2290%" y="597" width="0.8006%" height="15" fill="rgb(236,20,54)" fg:x="1077" fg:w="10"/><text x="86.4790%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.8695%" y="581" width="0.1601%" height="15" fill="rgb(213,22,0)" fg:x="1085" fg:w="2"/><text x="87.1195%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.8695%" y="565" width="0.1601%" height="15" fill="rgb(226,144,21)" fg:x="1085" fg:w="2"/><text x="87.1195%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.8695%" y="549" width="0.1601%" height="15" fill="rgb(240,32,26)" fg:x="1085" fg:w="2"/><text x="87.1195%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.9496%" y="533" width="0.0801%" height="15" fill="rgb(252,225,52)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.9496%" y="517" width="0.0801%" height="15" fill="rgb(227,113,38)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.9496%" y="501" width="0.0801%" height="15" fill="rgb(246,146,48)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.9496%" y="485" width="0.0801%" height="15" fill="rgb(229,83,50)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.9496%" y="469" width="0.0801%" height="15" fill="rgb(248,146,37)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.9496%" y="453" width="0.0801%" height="15" fill="rgb(230,102,37)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.9496%" y="437" width="0.0801%" height="15" fill="rgb(226,129,21)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (12 samples, 0.96%)</title><rect x="86.1489%" y="629" width="0.9608%" height="15" fill="rgb(241,215,13)" fg:x="1076" fg:w="12"/><text x="86.3989%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (12 samples, 0.96%)</title><rect x="86.1489%" y="613" width="0.9608%" height="15" fill="rgb(217,128,6)" fg:x="1076" fg:w="12"/><text x="86.3989%" y="623.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="87.0296%" y="597" width="0.0801%" height="15" fill="rgb(248,48,54)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.0296%" y="581" width="0.0801%" height="15" fill="rgb(219,83,38)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.0296%" y="565" width="0.0801%" height="15" fill="rgb(252,210,52)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.0296%" y="549" width="0.0801%" height="15" fill="rgb(221,200,4)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.0296%" y="533" width="0.0801%" height="15" fill="rgb(216,58,11)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.0296%" y="517" width="0.0801%" height="15" fill="rgb(213,152,6)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.0296%" y="501" width="0.0801%" height="15" fill="rgb(209,210,52)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.0296%" y="485" width="0.0801%" height="15" fill="rgb(216,26,42)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.0296%" y="469" width="0.0801%" height="15" fill="rgb(229,8,52)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.0296%" y="453" width="0.0801%" height="15" fill="rgb(234,11,12)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.0296%" y="437" width="0.0801%" height="15" fill="rgb(222,132,34)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.0296%" y="421" width="0.0801%" height="15" fill="rgb(246,51,18)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.0296%" y="405" width="0.0801%" height="15" fill="rgb(234,40,7)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0296%" y="389" width="0.0801%" height="15" fill="rgb(240,11,8)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.1097%" y="597" width="0.1601%" height="15" fill="rgb(218,222,21)" fg:x="1088" fg:w="2"/><text x="87.3597%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="87.1097%" y="581" width="0.1601%" height="15" fill="rgb(238,59,21)" fg:x="1088" fg:w="2"/><text x="87.3597%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="87.1097%" y="565" width="0.1601%" height="15" fill="rgb(252,128,29)" fg:x="1088" fg:w="2"/><text x="87.3597%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="87.1097%" y="549" width="0.1601%" height="15" fill="rgb(245,61,34)" fg:x="1088" fg:w="2"/><text x="87.3597%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="87.1097%" y="533" width="0.1601%" height="15" fill="rgb(246,36,52)" fg:x="1088" fg:w="2"/><text x="87.3597%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="87.1097%" y="517" width="0.1601%" height="15" fill="rgb(243,48,49)" fg:x="1088" fg:w="2"/><text x="87.3597%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="87.1097%" y="501" width="0.1601%" height="15" fill="rgb(252,114,15)" fg:x="1088" fg:w="2"/><text x="87.3597%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="87.1097%" y="485" width="0.1601%" height="15" fill="rgb(243,228,39)" fg:x="1088" fg:w="2"/><text x="87.3597%" y="495.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="87.1097%" y="629" width="0.2402%" height="15" fill="rgb(205,143,2)" fg:x="1088" fg:w="3"/><text x="87.3597%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="87.1097%" y="613" width="0.2402%" height="15" fill="rgb(224,122,19)" fg:x="1088" fg:w="3"/><text x="87.3597%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2698%" y="597" width="0.0801%" height="15" fill="rgb(250,66,51)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2698%" y="581" width="0.0801%" height="15" fill="rgb(224,134,48)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.2698%" y="565" width="0.0801%" height="15" fill="rgb(219,137,43)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.2698%" y="549" width="0.0801%" height="15" fill="rgb(207,44,47)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.2698%" y="533" width="0.0801%" height="15" fill="rgb(245,216,11)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="87.2698%" y="517" width="0.0801%" height="15" fill="rgb(236,168,30)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="87.2698%" y="501" width="0.0801%" height="15" fill="rgb(249,110,10)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="511.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (18 samples, 1.44%)</title><rect x="85.9888%" y="677" width="1.4412%" height="15" fill="rgb(226,10,48)" fg:x="1074" fg:w="18"/><text x="86.2388%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (16 samples, 1.28%)</title><rect x="86.1489%" y="661" width="1.2810%" height="15" fill="rgb(243,14,47)" fg:x="1076" fg:w="16"/><text x="86.3989%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (16 samples, 1.28%)</title><rect x="86.1489%" y="645" width="1.2810%" height="15" fill="rgb(208,184,14)" fg:x="1076" fg:w="16"/><text x="86.3989%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.3499%" y="629" width="0.0801%" height="15" fill="rgb(236,198,54)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3499%" y="613" width="0.0801%" height="15" fill="rgb(241,186,5)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.3499%" y="597" width="0.0801%" height="15" fill="rgb(237,191,37)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.3499%" y="581" width="0.0801%" height="15" fill="rgb(216,223,24)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.3499%" y="565" width="0.0801%" height="15" fill="rgb(210,29,29)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="575.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (21 samples, 1.68%)</title><rect x="85.9087%" y="693" width="1.6813%" height="15" fill="rgb(243,36,45)" fg:x="1073" fg:w="21"/><text x="86.1587%" y="703.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="87.4299%" y="677" width="0.1601%" height="15" fill="rgb(217,109,6)" fg:x="1092" fg:w="2"/><text x="87.6799%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="87.4299%" y="661" width="0.1601%" height="15" fill="rgb(240,106,11)" fg:x="1092" fg:w="2"/><text x="87.6799%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="87.5100%" y="645" width="0.0801%" height="15" fill="rgb(230,187,12)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.5100%" y="629" width="0.0801%" height="15" fill="rgb(242,88,45)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.5100%" y="613" width="0.0801%" height="15" fill="rgb(240,181,21)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.5100%" y="597" width="0.0801%" height="15" fill="rgb(252,126,44)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.5100%" y="581" width="0.0801%" height="15" fill="rgb(230,157,48)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.5100%" y="565" width="0.0801%" height="15" fill="rgb(224,15,2)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.5100%" y="549" width="0.0801%" height="15" fill="rgb(215,1,6)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.5100%" y="533" width="0.0801%" height="15" fill="rgb(210,225,13)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.5100%" y="517" width="0.0801%" height="15" fill="rgb(214,25,30)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.5100%" y="501" width="0.0801%" height="15" fill="rgb(254,43,34)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.5100%" y="485" width="0.0801%" height="15" fill="rgb(210,6,40)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.5100%" y="469" width="0.0801%" height="15" fill="rgb(251,76,23)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.5100%" y="453" width="0.0801%" height="15" fill="rgb(214,7,14)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.5100%" y="437" width="0.0801%" height="15" fill="rgb(227,100,33)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="447.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="87.5100%" y="421" width="0.0801%" height="15" fill="rgb(211,49,7)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.5100%" y="405" width="0.0801%" height="15" fill="rgb(228,223,1)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.5100%" y="389" width="0.0801%" height="15" fill="rgb(245,92,22)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.5100%" y="373" width="0.0801%" height="15" fill="rgb(232,221,10)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.5100%" y="357" width="0.0801%" height="15" fill="rgb(252,175,23)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.5100%" y="341" width="0.0801%" height="15" fill="rgb(234,229,25)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="87.5100%" y="325" width="0.0801%" height="15" fill="rgb(254,127,20)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="87.5100%" y="309" width="0.0801%" height="15" fill="rgb(211,151,37)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="87.5100%" y="293" width="0.0801%" height="15" fill="rgb(226,185,3)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="87.5100%" y="277" width="0.0801%" height="15" fill="rgb(223,38,29)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.5100%" y="261" width="0.0801%" height="15" fill="rgb(206,134,22)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.5100%" y="245" width="0.0801%" height="15" fill="rgb(243,211,4)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.5100%" y="229" width="0.0801%" height="15" fill="rgb(244,214,18)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="87.5100%" y="213" width="0.0801%" height="15" fill="rgb(208,165,52)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.5100%" y="197" width="0.0801%" height="15" fill="rgb(245,165,39)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="87.5100%" y="181" width="0.0801%" height="15" fill="rgb(250,46,43)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="87.5100%" y="165" width="0.0801%" height="15" fill="rgb(242,86,47)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="87.5100%" y="149" width="0.0801%" height="15" fill="rgb(232,173,5)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.5100%" y="133" width="0.0801%" height="15" fill="rgb(208,117,14)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="143.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (1 samples, 0.08%)</title><rect x="87.7502%" y="549" width="0.0801%" height="15" fill="rgb(205,144,47)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.7502%" y="533" width="0.0801%" height="15" fill="rgb(228,62,6)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.7502%" y="517" width="0.0801%" height="15" fill="rgb(238,32,51)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.7502%" y="501" width="0.0801%" height="15" fill="rgb(251,211,21)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.7502%" y="485" width="0.0801%" height="15" fill="rgb(244,43,23)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.7502%" y="469" width="0.0801%" height="15" fill="rgb(219,48,27)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.7502%" y="453" width="0.0801%" height="15" fill="rgb(251,72,17)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.7502%" y="437" width="0.0801%" height="15" fill="rgb(214,69,49)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.7502%" y="421" width="0.0801%" height="15" fill="rgb(242,96,45)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.7502%" y="405" width="0.0801%" height="15" fill="rgb(233,20,50)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.7502%" y="389" width="0.0801%" height="15" fill="rgb(247,82,43)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.7502%" y="373" width="0.0801%" height="15" fill="rgb(210,97,3)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.7502%" y="357" width="0.0801%" height="15" fill="rgb(217,113,26)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.7502%" y="341" width="0.0801%" height="15" fill="rgb(207,166,18)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.7502%" y="325" width="0.0801%" height="15" fill="rgb(205,124,54)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.7502%" y="309" width="0.0801%" height="15" fill="rgb(211,140,29)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.7502%" y="293" width="0.0801%" height="15" fill="rgb(228,83,33)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.7502%" y="277" width="0.0801%" height="15" fill="rgb(225,217,40)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.8303%" y="453" width="0.0801%" height="15" fill="rgb(221,229,30)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.8303%" y="437" width="0.0801%" height="15" fill="rgb(210,1,48)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.8303%" y="501" width="0.1601%" height="15" fill="rgb(205,53,50)" fg:x="1097" fg:w="2"/><text x="88.0803%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.8303%" y="485" width="0.1601%" height="15" fill="rgb(211,25,54)" fg:x="1097" fg:w="2"/><text x="88.0803%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="87.8303%" y="469" width="0.1601%" height="15" fill="rgb(205,28,13)" fg:x="1097" fg:w="2"/><text x="88.0803%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.9103%" y="453" width="0.0801%" height="15" fill="rgb(214,37,48)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.9103%" y="437" width="0.0801%" height="15" fill="rgb(226,141,8)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.9103%" y="421" width="0.0801%" height="15" fill="rgb(206,200,0)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.9103%" y="405" width="0.0801%" height="15" fill="rgb(238,152,34)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.9103%" y="389" width="0.0801%" height="15" fill="rgb(216,72,48)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.9103%" y="373" width="0.0801%" height="15" fill="rgb(246,48,2)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.9103%" y="357" width="0.0801%" height="15" fill="rgb(249,59,28)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.9103%" y="341" width="0.0801%" height="15" fill="rgb(253,198,14)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.9103%" y="325" width="0.0801%" height="15" fill="rgb(225,162,4)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.9103%" y="309" width="0.0801%" height="15" fill="rgb(231,126,49)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.9103%" y="293" width="0.0801%" height="15" fill="rgb(207,41,3)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="303.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (4 samples, 0.32%)</title><rect x="87.7502%" y="565" width="0.3203%" height="15" fill="rgb(212,223,36)" fg:x="1096" fg:w="4"/><text x="88.0002%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="87.8303%" y="549" width="0.2402%" height="15" fill="rgb(214,96,38)" fg:x="1097" fg:w="3"/><text x="88.0803%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="87.8303%" y="533" width="0.2402%" height="15" fill="rgb(246,104,47)" fg:x="1097" fg:w="3"/><text x="88.0803%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="87.8303%" y="517" width="0.2402%" height="15" fill="rgb(227,212,36)" fg:x="1097" fg:w="3"/><text x="88.0803%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.9904%" y="501" width="0.0801%" height="15" fill="rgb(250,163,41)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9904%" y="485" width="0.0801%" height="15" fill="rgb(250,130,17)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.9904%" y="469" width="0.0801%" height="15" fill="rgb(206,42,32)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9904%" y="453" width="0.0801%" height="15" fill="rgb(224,95,7)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.9904%" y="437" width="0.0801%" height="15" fill="rgb(242,96,42)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.9904%" y="421" width="0.0801%" height="15" fill="rgb(237,194,4)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.9904%" y="405" width="0.0801%" height="15" fill="rgb(245,142,29)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.1505%" y="517" width="0.0801%" height="15" fill="rgb(247,66,43)" fg:x="1101" fg:w="1"/><text x="88.4005%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="88.2306%" y="517" width="0.1601%" height="15" fill="rgb(220,153,30)" fg:x="1102" fg:w="2"/><text x="88.4806%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="88.2306%" y="501" width="0.1601%" height="15" fill="rgb(207,130,54)" fg:x="1102" fg:w="2"/><text x="88.4806%" y="511.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="88.2306%" y="485" width="0.1601%" height="15" fill="rgb(242,49,39)" fg:x="1102" fg:w="2"/><text x="88.4806%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="88.3907%" y="501" width="0.1601%" height="15" fill="rgb(206,227,44)" fg:x="1104" fg:w="2"/><text x="88.6407%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="88.3907%" y="485" width="0.1601%" height="15" fill="rgb(236,74,29)" fg:x="1104" fg:w="2"/><text x="88.6407%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="88.4708%" y="469" width="0.0801%" height="15" fill="rgb(222,52,23)" fg:x="1105" fg:w="1"/><text x="88.7208%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="88.4708%" y="453" width="0.0801%" height="15" fill="rgb(245,65,4)" fg:x="1105" fg:w="1"/><text x="88.7208%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5508%" y="277" width="0.0801%" height="15" fill="rgb(205,120,32)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5508%" y="261" width="0.0801%" height="15" fill="rgb(226,156,21)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5508%" y="245" width="0.0801%" height="15" fill="rgb(240,117,11)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5508%" y="229" width="0.0801%" height="15" fill="rgb(232,214,36)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.5508%" y="213" width="0.0801%" height="15" fill="rgb(252,121,45)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.5508%" y="197" width="0.0801%" height="15" fill="rgb(250,206,1)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.5508%" y="181" width="0.0801%" height="15" fill="rgb(213,40,16)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="191.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.5508%" y="165" width="0.0801%" height="15" fill="rgb(222,106,3)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="175.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.5508%" y="149" width="0.0801%" height="15" fill="rgb(238,140,8)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="159.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.5508%" y="133" width="0.0801%" height="15" fill="rgb(217,119,30)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="143.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="88.5508%" y="117" width="0.0801%" height="15" fill="rgb(228,189,17)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="88.5508%" y="101" width="0.0801%" height="15" fill="rgb(243,94,42)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.5508%" y="325" width="0.1601%" height="15" fill="rgb(228,105,42)" fg:x="1106" fg:w="2"/><text x="88.8008%" y="335.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="88.5508%" y="309" width="0.1601%" height="15" fill="rgb(233,19,53)" fg:x="1106" fg:w="2"/><text x="88.8008%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.5508%" y="293" width="0.1601%" height="15" fill="rgb(240,22,26)" fg:x="1106" fg:w="2"/><text x="88.8008%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.6309%" y="277" width="0.0801%" height="15" fill="rgb(238,97,34)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6309%" y="261" width="0.0801%" height="15" fill="rgb(210,177,8)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.6309%" y="245" width="0.0801%" height="15" fill="rgb(217,168,6)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6309%" y="229" width="0.0801%" height="15" fill="rgb(223,34,43)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.6309%" y="213" width="0.0801%" height="15" fill="rgb(252,123,35)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6309%" y="197" width="0.0801%" height="15" fill="rgb(243,162,1)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.6309%" y="181" width="0.0801%" height="15" fill="rgb(250,83,22)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.6309%" y="165" width="0.0801%" height="15" fill="rgb(247,184,7)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="175.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="88.5508%" y="357" width="0.2402%" height="15" fill="rgb(254,212,7)" fg:x="1106" fg:w="3"/><text x="88.8008%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="88.5508%" y="341" width="0.2402%" height="15" fill="rgb(249,198,8)" fg:x="1106" fg:w="3"/><text x="88.8008%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="88.7110%" y="325" width="0.0801%" height="15" fill="rgb(230,74,12)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.7110%" y="309" width="0.0801%" height="15" fill="rgb(253,174,9)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.7110%" y="293" width="0.0801%" height="15" fill="rgb(222,191,12)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.7110%" y="277" width="0.0801%" height="15" fill="rgb(234,28,43)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="287.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="88.9512%" y="261" width="0.0801%" height="15" fill="rgb(232,13,38)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.0312%" y="197" width="0.0801%" height="15" fill="rgb(239,101,25)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="207.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="88.7910%" y="341" width="0.4003%" height="15" fill="rgb(237,214,49)" fg:x="1109" fg:w="5"/><text x="89.0410%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="88.7910%" y="325" width="0.4003%" height="15" fill="rgb(212,188,4)" fg:x="1109" fg:w="5"/><text x="89.0410%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="88.7910%" y="309" width="0.4003%" height="15" fill="rgb(208,167,23)" fg:x="1109" fg:w="5"/><text x="89.0410%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="88.7910%" y="293" width="0.4003%" height="15" fill="rgb(209,179,40)" fg:x="1109" fg:w="5"/><text x="89.0410%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="88.9512%" y="277" width="0.2402%" height="15" fill="rgb(233,144,24)" fg:x="1111" fg:w="3"/><text x="89.2012%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="89.0312%" y="261" width="0.1601%" height="15" fill="rgb(250,4,25)" fg:x="1112" fg:w="2"/><text x="89.2812%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="89.0312%" y="245" width="0.1601%" height="15" fill="rgb(236,222,29)" fg:x="1112" fg:w="2"/><text x="89.2812%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="89.0312%" y="229" width="0.1601%" height="15" fill="rgb(228,152,14)" fg:x="1112" fg:w="2"/><text x="89.2812%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="89.0312%" y="213" width="0.1601%" height="15" fill="rgb(240,11,37)" fg:x="1112" fg:w="2"/><text x="89.2812%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.1113%" y="197" width="0.0801%" height="15" fill="rgb(240,96,5)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.1113%" y="181" width="0.0801%" height="15" fill="rgb(242,145,4)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.1113%" y="165" width="0.0801%" height="15" fill="rgb(229,118,33)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.1113%" y="149" width="0.0801%" height="15" fill="rgb(213,82,17)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.1113%" y="133" width="0.0801%" height="15" fill="rgb(236,71,53)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="143.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="89.1113%" y="117" width="0.0801%" height="15" fill="rgb(227,158,19)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.1914%" y="277" width="0.0801%" height="15" fill="rgb(220,52,31)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.1914%" y="261" width="0.0801%" height="15" fill="rgb(232,137,27)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="89.2714%" y="261" width="0.0801%" height="15" fill="rgb(208,155,6)" fg:x="1115" fg:w="1"/><text x="89.5214%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="89.3515%" y="261" width="0.0801%" height="15" fill="rgb(253,212,46)" fg:x="1116" fg:w="1"/><text x="89.6015%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.3515%" y="245" width="0.0801%" height="15" fill="rgb(220,55,4)" fg:x="1116" fg:w="1"/><text x="89.6015%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.3515%" y="229" width="0.0801%" height="15" fill="rgb(226,100,5)" fg:x="1116" fg:w="1"/><text x="89.6015%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (9 samples, 0.72%)</title><rect x="88.7910%" y="357" width="0.7206%" height="15" fill="rgb(247,200,51)" fg:x="1109" fg:w="9"/><text x="89.0410%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="89.1914%" y="341" width="0.3203%" height="15" fill="rgb(220,203,54)" fg:x="1114" fg:w="4"/><text x="89.4414%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="89.1914%" y="325" width="0.3203%" height="15" fill="rgb(230,187,54)" fg:x="1114" fg:w="4"/><text x="89.4414%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="89.1914%" y="309" width="0.3203%" height="15" fill="rgb(225,132,12)" fg:x="1114" fg:w="4"/><text x="89.4414%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="89.1914%" y="293" width="0.3203%" height="15" fill="rgb(205,210,33)" fg:x="1114" fg:w="4"/><text x="89.4414%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="89.2714%" y="277" width="0.2402%" height="15" fill="rgb(238,192,7)" fg:x="1115" fg:w="3"/><text x="89.5214%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4315%" y="261" width="0.0801%" height="15" fill="rgb(245,82,29)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.4315%" y="245" width="0.0801%" height="15" fill="rgb(234,222,39)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="89.4315%" y="229" width="0.0801%" height="15" fill="rgb(231,222,18)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="239.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="89.4315%" y="213" width="0.0801%" height="15" fill="rgb(216,61,10)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.5116%" y="309" width="0.0801%" height="15" fill="rgb(241,116,34)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.5116%" y="293" width="0.0801%" height="15" fill="rgb(225,32,22)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.5116%" y="277" width="0.0801%" height="15" fill="rgb(236,35,19)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.5116%" y="261" width="0.0801%" height="15" fill="rgb(231,198,28)" fg:x="1118" fg:w="1"/><text x="89.7616%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="89.5917%" y="309" width="0.0801%" height="15" fill="rgb(211,215,31)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="89.5116%" y="357" width="0.2402%" height="15" fill="rgb(243,118,23)" fg:x="1118" fg:w="3"/><text x="89.7616%" y="367.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="89.5116%" y="341" width="0.2402%" height="15" fill="rgb(228,104,45)" fg:x="1118" fg:w="3"/><text x="89.7616%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="89.5116%" y="325" width="0.2402%" height="15" fill="rgb(216,198,17)" fg:x="1118" fg:w="3"/><text x="89.7616%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.6717%" y="309" width="0.0801%" height="15" fill="rgb(249,39,23)" fg:x="1120" fg:w="1"/><text x="89.9217%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.6717%" y="293" width="0.0801%" height="15" fill="rgb(250,186,54)" fg:x="1120" fg:w="1"/><text x="89.9217%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.6717%" y="277" width="0.0801%" height="15" fill="rgb(243,110,14)" fg:x="1120" fg:w="1"/><text x="89.9217%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.6717%" y="261" width="0.0801%" height="15" fill="rgb(236,32,12)" fg:x="1120" fg:w="1"/><text x="89.9217%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.6717%" y="245" width="0.0801%" height="15" fill="rgb(211,92,33)" fg:x="1120" fg:w="1"/><text x="89.9217%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.6717%" y="229" width="0.0801%" height="15" fill="rgb(254,154,8)" fg:x="1120" fg:w="1"/><text x="89.9217%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.6717%" y="213" width="0.0801%" height="15" fill="rgb(241,107,40)" fg:x="1120" fg:w="1"/><text x="89.9217%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (16 samples, 1.28%)</title><rect x="88.5508%" y="469" width="1.2810%" height="15" fill="rgb(208,24,40)" fg:x="1106" fg:w="16"/><text x="88.8008%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (16 samples, 1.28%)</title><rect x="88.5508%" y="453" width="1.2810%" height="15" fill="rgb(252,158,9)" fg:x="1106" fg:w="16"/><text x="88.8008%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.28%)</title><rect x="88.5508%" y="437" width="1.2810%" height="15" fill="rgb(241,9,28)" fg:x="1106" fg:w="16"/><text x="88.8008%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (16 samples, 1.28%)</title><rect x="88.5508%" y="421" width="1.2810%" height="15" fill="rgb(210,199,32)" fg:x="1106" fg:w="16"/><text x="88.8008%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (16 samples, 1.28%)</title><rect x="88.5508%" y="405" width="1.2810%" height="15" fill="rgb(228,147,42)" fg:x="1106" fg:w="16"/><text x="88.8008%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.28%)</title><rect x="88.5508%" y="389" width="1.2810%" height="15" fill="rgb(248,202,26)" fg:x="1106" fg:w="16"/><text x="88.8008%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.28%)</title><rect x="88.5508%" y="373" width="1.2810%" height="15" fill="rgb(225,67,4)" fg:x="1106" fg:w="16"/><text x="88.8008%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="89.7518%" y="357" width="0.0801%" height="15" fill="rgb(234,87,25)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7518%" y="341" width="0.0801%" height="15" fill="rgb(229,58,0)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7518%" y="325" width="0.0801%" height="15" fill="rgb(211,218,3)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="89.7518%" y="309" width="0.0801%" height="15" fill="rgb(216,109,54)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.7518%" y="293" width="0.0801%" height="15" fill="rgb(252,156,40)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="303.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (23 samples, 1.84%)</title><rect x="88.0705%" y="533" width="1.8415%" height="15" fill="rgb(208,1,12)" fg:x="1100" fg:w="23"/><text x="88.3205%" y="543.50">p..</text></g><g><title>plugins_core::tools::contained_by (19 samples, 1.52%)</title><rect x="88.3907%" y="517" width="1.5212%" height="15" fill="rgb(214,179,53)" fg:x="1104" fg:w="19"/><text x="88.6407%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (17 samples, 1.36%)</title><rect x="88.5508%" y="501" width="1.3611%" height="15" fill="rgb(205,173,17)" fg:x="1106" fg:w="17"/><text x="88.8008%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (17 samples, 1.36%)</title><rect x="88.5508%" y="485" width="1.3611%" height="15" fill="rgb(243,26,15)" fg:x="1106" fg:w="17"/><text x="88.8008%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.8319%" y="469" width="0.0801%" height="15" fill="rgb(231,139,31)" fg:x="1122" fg:w="1"/><text x="90.0819%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.8319%" y="453" width="0.0801%" height="15" fill="rgb(208,163,22)" fg:x="1122" fg:w="1"/><text x="90.0819%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="89.8319%" y="437" width="0.0801%" height="15" fill="rgb(245,84,24)" fg:x="1122" fg:w="1"/><text x="90.0819%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="89.8319%" y="421" width="0.0801%" height="15" fill="rgb(238,140,36)" fg:x="1122" fg:w="1"/><text x="90.0819%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="89.8319%" y="405" width="0.0801%" height="15" fill="rgb(218,211,39)" fg:x="1122" fg:w="1"/><text x="90.0819%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.8319%" y="389" width="0.0801%" height="15" fill="rgb(242,59,29)" fg:x="1122" fg:w="1"/><text x="90.0819%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.8319%" y="373" width="0.0801%" height="15" fill="rgb(245,91,22)" fg:x="1122" fg:w="1"/><text x="90.0819%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.9119%" y="517" width="0.1601%" height="15" fill="rgb(206,13,6)" fg:x="1123" fg:w="2"/><text x="90.1619%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.9119%" y="501" width="0.1601%" height="15" fill="rgb(212,147,32)" fg:x="1123" fg:w="2"/><text x="90.1619%" y="511.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.08%)</title><rect x="90.0721%" y="517" width="0.0801%" height="15" fill="rgb(254,64,12)" fg:x="1125" fg:w="1"/><text x="90.3221%" y="527.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item::{{closure}} (1 samples, 0.08%)</title><rect x="90.0721%" y="501" width="0.0801%" height="15" fill="rgb(212,104,54)" fg:x="1125" fg:w="1"/><text x="90.3221%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1521%" y="501" width="0.0801%" height="15" fill="rgb(254,77,46)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1521%" y="485" width="0.0801%" height="15" fill="rgb(219,55,26)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1521%" y="469" width="0.0801%" height="15" fill="rgb(230,133,21)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.1521%" y="453" width="0.0801%" height="15" fill="rgb(247,110,50)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.1521%" y="437" width="0.0801%" height="15" fill="rgb(229,31,50)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.1521%" y="421" width="0.0801%" height="15" fill="rgb(250,13,40)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.1521%" y="405" width="0.0801%" height="15" fill="rgb(212,163,14)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.1521%" y="389" width="0.0801%" height="15" fill="rgb(211,190,39)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.1521%" y="373" width="0.0801%" height="15" fill="rgb(245,39,52)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.1521%" y="357" width="0.0801%" height="15" fill="rgb(216,76,3)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.1521%" y="341" width="0.0801%" height="15" fill="rgb(218,225,6)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.1521%" y="325" width="0.0801%" height="15" fill="rgb(215,137,11)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1521%" y="309" width="0.0801%" height="15" fill="rgb(234,223,14)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.3122%" y="325" width="0.0801%" height="15" fill="rgb(236,24,21)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="335.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (7 samples, 0.56%)</title><rect x="89.9119%" y="533" width="0.5604%" height="15" fill="rgb(208,183,10)" fg:x="1123" fg:w="7"/><text x="90.1619%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="90.1521%" y="517" width="0.3203%" height="15" fill="rgb(254,9,3)" fg:x="1126" fg:w="4"/><text x="90.4021%" y="527.50"></text></g><g><title>plugins_core::finding::matches_description (3 samples, 0.24%)</title><rect x="90.2322%" y="501" width="0.2402%" height="15" fill="rgb(225,112,10)" fg:x="1127" fg:w="3"/><text x="90.4822%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::name (3 samples, 0.24%)</title><rect x="90.2322%" y="485" width="0.2402%" height="15" fill="rgb(232,7,4)" fg:x="1127" fg:w="3"/><text x="90.4822%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="90.2322%" y="469" width="0.2402%" height="15" fill="rgb(241,50,8)" fg:x="1127" fg:w="3"/><text x="90.4822%" y="479.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="90.2322%" y="453" width="0.2402%" height="15" fill="rgb(209,164,32)" fg:x="1127" fg:w="3"/><text x="90.4822%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="90.2322%" y="437" width="0.2402%" height="15" fill="rgb(222,99,11)" fg:x="1127" fg:w="3"/><text x="90.4822%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="90.2322%" y="421" width="0.2402%" height="15" fill="rgb(208,139,8)" fg:x="1127" fg:w="3"/><text x="90.4822%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="90.2322%" y="405" width="0.2402%" height="15" fill="rgb(210,220,31)" fg:x="1127" fg:w="3"/><text x="90.4822%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="90.3122%" y="389" width="0.1601%" height="15" fill="rgb(253,192,40)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.3122%" y="373" width="0.1601%" height="15" fill="rgb(218,174,11)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="90.3122%" y="357" width="0.1601%" height="15" fill="rgb(238,12,0)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="90.3122%" y="341" width="0.1601%" height="15" fill="rgb(223,87,52)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.3923%" y="325" width="0.0801%" height="15" fill="rgb(206,198,52)" fg:x="1129" fg:w="1"/><text x="90.6423%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3923%" y="309" width="0.0801%" height="15" fill="rgb(239,183,3)" fg:x="1129" fg:w="1"/><text x="90.6423%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.3923%" y="293" width="0.0801%" height="15" fill="rgb(216,111,9)" fg:x="1129" fg:w="1"/><text x="90.6423%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3923%" y="277" width="0.0801%" height="15" fill="rgb(221,6,16)" fg:x="1129" fg:w="1"/><text x="90.6423%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.3923%" y="261" width="0.0801%" height="15" fill="rgb(205,110,11)" fg:x="1129" fg:w="1"/><text x="90.6423%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.3923%" y="245" width="0.0801%" height="15" fill="rgb(210,162,38)" fg:x="1129" fg:w="1"/><text x="90.6423%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (31 samples, 2.48%)</title><rect x="88.0705%" y="565" width="2.4820%" height="15" fill="rgb(235,180,51)" fg:x="1100" fg:w="31"/><text x="88.3205%" y="575.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (31 samples, 2.48%)</title><rect x="88.0705%" y="549" width="2.4820%" height="15" fill="rgb(205,214,28)" fg:x="1100" fg:w="31"/><text x="88.3205%" y="559.50">&lt;p..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="90.4724%" y="533" width="0.0801%" height="15" fill="rgb(211,57,51)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4724%" y="517" width="0.0801%" height="15" fill="rgb(207,55,41)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4724%" y="501" width="0.0801%" height="15" fill="rgb(245,45,35)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4724%" y="485" width="0.0801%" height="15" fill="rgb(233,168,39)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.4724%" y="469" width="0.0801%" height="15" fill="rgb(216,61,7)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.4724%" y="453" width="0.0801%" height="15" fill="rgb(237,109,44)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.4724%" y="437" width="0.0801%" height="15" fill="rgb(240,92,7)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.4724%" y="421" width="0.0801%" height="15" fill="rgb(252,17,32)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.4724%" y="405" width="0.0801%" height="15" fill="rgb(219,85,5)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.4724%" y="389" width="0.0801%" height="15" fill="rgb(213,50,52)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.4724%" y="373" width="0.0801%" height="15" fill="rgb(239,79,50)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.4724%" y="357" width="0.0801%" height="15" fill="rgb(249,49,7)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.4724%" y="341" width="0.0801%" height="15" fill="rgb(222,126,43)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4724%" y="325" width="0.0801%" height="15" fill="rgb(230,157,52)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="90.5524%" y="565" width="0.1601%" height="15" fill="rgb(210,66,35)" fg:x="1131" fg:w="2"/><text x="90.8024%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="90.6325%" y="549" width="0.0801%" height="15" fill="rgb(220,96,16)" fg:x="1132" fg:w="1"/><text x="90.8825%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6325%" y="533" width="0.0801%" height="15" fill="rgb(242,43,33)" fg:x="1132" fg:w="1"/><text x="90.8825%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8727%" y="421" width="0.0801%" height="15" fill="rgb(248,128,51)" fg:x="1135" fg:w="1"/><text x="91.1227%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8727%" y="405" width="0.0801%" height="15" fill="rgb(234,19,35)" fg:x="1135" fg:w="1"/><text x="91.1227%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="90.7126%" y="533" width="0.3203%" height="15" fill="rgb(232,120,30)" fg:x="1133" fg:w="4"/><text x="90.9626%" y="543.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="90.7126%" y="517" width="0.3203%" height="15" fill="rgb(209,184,13)" fg:x="1133" fg:w="4"/><text x="90.9626%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="90.7126%" y="501" width="0.3203%" height="15" fill="rgb(222,153,0)" fg:x="1133" fg:w="4"/><text x="90.9626%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="90.7126%" y="485" width="0.3203%" height="15" fill="rgb(251,96,47)" fg:x="1133" fg:w="4"/><text x="90.9626%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="90.7126%" y="469" width="0.3203%" height="15" fill="rgb(253,113,5)" fg:x="1133" fg:w="4"/><text x="90.9626%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="90.7126%" y="453" width="0.3203%" height="15" fill="rgb(241,96,1)" fg:x="1133" fg:w="4"/><text x="90.9626%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="90.7926%" y="437" width="0.2402%" height="15" fill="rgb(216,225,1)" fg:x="1134" fg:w="3"/><text x="91.0426%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.9528%" y="421" width="0.0801%" height="15" fill="rgb(227,108,0)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.9528%" y="405" width="0.0801%" height="15" fill="rgb(221,29,48)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.9528%" y="389" width="0.0801%" height="15" fill="rgb(222,55,16)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.9528%" y="373" width="0.0801%" height="15" fill="rgb(242,210,22)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.9528%" y="357" width="0.0801%" height="15" fill="rgb(223,142,30)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.9528%" y="341" width="0.0801%" height="15" fill="rgb(248,92,51)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.9528%" y="325" width="0.0801%" height="15" fill="rgb(249,201,12)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.9528%" y="309" width="0.0801%" height="15" fill="rgb(230,213,39)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.9528%" y="293" width="0.0801%" height="15" fill="rgb(232,46,34)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.9528%" y="277" width="0.0801%" height="15" fill="rgb(226,194,19)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.9528%" y="261" width="0.0801%" height="15" fill="rgb(254,144,47)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.9528%" y="245" width="0.0801%" height="15" fill="rgb(254,168,3)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0328%" y="485" width="0.0801%" height="15" fill="rgb(249,104,32)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0328%" y="469" width="0.0801%" height="15" fill="rgb(213,143,0)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0328%" y="453" width="0.0801%" height="15" fill="rgb(211,72,7)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.0328%" y="437" width="0.0801%" height="15" fill="rgb(249,86,4)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (6 samples, 0.48%)</title><rect x="90.7126%" y="565" width="0.4804%" height="15" fill="rgb(252,17,31)" fg:x="1133" fg:w="6"/><text x="90.9626%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="90.7126%" y="549" width="0.4804%" height="15" fill="rgb(238,169,43)" fg:x="1133" fg:w="6"/><text x="90.9626%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="91.0328%" y="533" width="0.1601%" height="15" fill="rgb(220,206,52)" fg:x="1137" fg:w="2"/><text x="91.2828%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="91.0328%" y="517" width="0.1601%" height="15" fill="rgb(214,176,19)" fg:x="1137" fg:w="2"/><text x="91.2828%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="91.0328%" y="501" width="0.1601%" height="15" fill="rgb(206,11,39)" fg:x="1137" fg:w="2"/><text x="91.2828%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.1129%" y="485" width="0.0801%" height="15" fill="rgb(234,191,6)" fg:x="1138" fg:w="1"/><text x="91.3629%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.1129%" y="469" width="0.0801%" height="15" fill="rgb(244,46,51)" fg:x="1138" fg:w="1"/><text x="91.3629%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.1129%" y="453" width="0.0801%" height="15" fill="rgb(212,184,35)" fg:x="1138" fg:w="1"/><text x="91.3629%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.1129%" y="437" width="0.0801%" height="15" fill="rgb(217,184,38)" fg:x="1138" fg:w="1"/><text x="91.3629%" y="447.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="91.1129%" y="421" width="0.0801%" height="15" fill="rgb(218,88,44)" fg:x="1138" fg:w="1"/><text x="91.3629%" y="431.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="91.1930%" y="565" width="0.0801%" height="15" fill="rgb(241,121,2)" fg:x="1139" fg:w="1"/><text x="91.4430%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1930%" y="549" width="0.0801%" height="15" fill="rgb(232,92,4)" fg:x="1139" fg:w="1"/><text x="91.4430%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1930%" y="533" width="0.0801%" height="15" fill="rgb(233,16,51)" fg:x="1139" fg:w="1"/><text x="91.4430%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1930%" y="517" width="0.0801%" height="15" fill="rgb(205,138,9)" fg:x="1139" fg:w="1"/><text x="91.4430%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.1930%" y="501" width="0.0801%" height="15" fill="rgb(212,133,44)" fg:x="1139" fg:w="1"/><text x="91.4430%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.1930%" y="485" width="0.0801%" height="15" fill="rgb(247,170,39)" fg:x="1139" fg:w="1"/><text x="91.4430%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.1930%" y="469" width="0.0801%" height="15" fill="rgb(236,183,8)" fg:x="1139" fg:w="1"/><text x="91.4430%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1930%" y="453" width="0.0801%" height="15" fill="rgb(245,194,21)" fg:x="1139" fg:w="1"/><text x="91.4430%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1930%" y="437" width="0.0801%" height="15" fill="rgb(244,142,33)" fg:x="1139" fg:w="1"/><text x="91.4430%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.1930%" y="421" width="0.0801%" height="15" fill="rgb(237,159,51)" fg:x="1139" fg:w="1"/><text x="91.4430%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.1930%" y="405" width="0.0801%" height="15" fill="rgb(223,134,40)" fg:x="1139" fg:w="1"/><text x="91.4430%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.1930%" y="389" width="0.0801%" height="15" fill="rgb(217,227,45)" fg:x="1139" fg:w="1"/><text x="91.4430%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.1930%" y="373" width="0.0801%" height="15" fill="rgb(205,171,8)" fg:x="1139" fg:w="1"/><text x="91.4430%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1930%" y="357" width="0.0801%" height="15" fill="rgb(231,83,23)" fg:x="1139" fg:w="1"/><text x="91.4430%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="91.2730%" y="549" width="0.0801%" height="15" fill="rgb(226,65,0)" fg:x="1140" fg:w="1"/><text x="91.5230%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="91.2730%" y="533" width="0.0801%" height="15" fill="rgb(218,127,49)" fg:x="1140" fg:w="1"/><text x="91.5230%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="91.3531%" y="501" width="0.0801%" height="15" fill="rgb(238,61,34)" fg:x="1141" fg:w="1"/><text x="91.6031%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.3531%" y="485" width="0.0801%" height="15" fill="rgb(228,144,3)" fg:x="1141" fg:w="1"/><text x="91.6031%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.4331%" y="453" width="0.0801%" height="15" fill="rgb(212,155,32)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.4331%" y="437" width="0.0801%" height="15" fill="rgb(219,3,13)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.4331%" y="421" width="0.0801%" height="15" fill="rgb(225,41,39)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="91.3531%" y="549" width="0.2402%" height="15" fill="rgb(236,169,50)" fg:x="1141" fg:w="3"/><text x="91.6031%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="91.3531%" y="533" width="0.2402%" height="15" fill="rgb(253,211,17)" fg:x="1141" fg:w="3"/><text x="91.6031%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="91.3531%" y="517" width="0.2402%" height="15" fill="rgb(219,67,7)" fg:x="1141" fg:w="3"/><text x="91.6031%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="91.4331%" y="501" width="0.1601%" height="15" fill="rgb(236,198,21)" fg:x="1142" fg:w="2"/><text x="91.6831%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="91.4331%" y="485" width="0.1601%" height="15" fill="rgb(250,83,24)" fg:x="1142" fg:w="2"/><text x="91.6831%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.4331%" y="469" width="0.1601%" height="15" fill="rgb(249,175,20)" fg:x="1142" fg:w="2"/><text x="91.6831%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.5132%" y="453" width="0.0801%" height="15" fill="rgb(239,72,36)" fg:x="1143" fg:w="1"/><text x="91.7632%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.7534%" y="517" width="0.0801%" height="15" fill="rgb(225,33,12)" fg:x="1146" fg:w="1"/><text x="92.0034%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.7534%" y="501" width="0.0801%" height="15" fill="rgb(213,209,10)" fg:x="1146" fg:w="1"/><text x="92.0034%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.7534%" y="485" width="0.0801%" height="15" fill="rgb(233,156,7)" fg:x="1146" fg:w="1"/><text x="92.0034%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.7534%" y="469" width="0.0801%" height="15" fill="rgb(242,71,8)" fg:x="1146" fg:w="1"/><text x="92.0034%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="91.8335%" y="517" width="0.0801%" height="15" fill="rgb(223,170,53)" fg:x="1147" fg:w="1"/><text x="92.0835%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="91.8335%" y="501" width="0.0801%" height="15" fill="rgb(252,23,27)" fg:x="1147" fg:w="1"/><text x="92.0835%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.8335%" y="485" width="0.0801%" height="15" fill="rgb(220,23,37)" fg:x="1147" fg:w="1"/><text x="92.0835%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="91.8335%" y="469" width="0.0801%" height="15" fill="rgb(208,60,20)" fg:x="1147" fg:w="1"/><text x="92.0835%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="91.8335%" y="453" width="0.0801%" height="15" fill="rgb(246,105,41)" fg:x="1147" fg:w="1"/><text x="92.0835%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="91.8335%" y="437" width="0.0801%" height="15" fill="rgb(229,80,14)" fg:x="1147" fg:w="1"/><text x="92.0835%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.40%)</title><rect x="91.5933%" y="549" width="0.4003%" height="15" fill="rgb(223,226,8)" fg:x="1144" fg:w="5"/><text x="91.8433%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="91.5933%" y="533" width="0.4003%" height="15" fill="rgb(212,227,24)" fg:x="1144" fg:w="5"/><text x="91.8433%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.9135%" y="517" width="0.0801%" height="15" fill="rgb(234,38,14)" fg:x="1148" fg:w="1"/><text x="92.1635%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9135%" y="501" width="0.0801%" height="15" fill="rgb(222,86,39)" fg:x="1148" fg:w="1"/><text x="92.1635%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="91.9135%" y="485" width="0.0801%" height="15" fill="rgb(208,189,2)" fg:x="1148" fg:w="1"/><text x="92.1635%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="91.9135%" y="469" width="0.0801%" height="15" fill="rgb(229,19,19)" fg:x="1148" fg:w="1"/><text x="92.1635%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="91.9135%" y="453" width="0.0801%" height="15" fill="rgb(250,169,51)" fg:x="1148" fg:w="1"/><text x="92.1635%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.9135%" y="437" width="0.0801%" height="15" fill="rgb(209,182,25)" fg:x="1148" fg:w="1"/><text x="92.1635%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.9135%" y="421" width="0.0801%" height="15" fill="rgb(240,113,23)" fg:x="1148" fg:w="1"/><text x="92.1635%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.9936%" y="517" width="0.0801%" height="15" fill="rgb(224,93,33)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.9936%" y="501" width="0.0801%" height="15" fill="rgb(234,37,17)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.9936%" y="485" width="0.0801%" height="15" fill="rgb(219,199,15)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.9936%" y="469" width="0.0801%" height="15" fill="rgb(249,190,12)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.9936%" y="453" width="0.0801%" height="15" fill="rgb(254,188,20)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.9936%" y="437" width="0.0801%" height="15" fill="rgb(227,85,36)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.9936%" y="421" width="0.0801%" height="15" fill="rgb(214,186,36)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.9936%" y="405" width="0.0801%" height="15" fill="rgb(207,67,47)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.9936%" y="389" width="0.0801%" height="15" fill="rgb(224,140,32)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.9936%" y="373" width="0.0801%" height="15" fill="rgb(225,114,12)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.9936%" y="357" width="0.0801%" height="15" fill="rgb(209,199,39)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.9936%" y="341" width="0.0801%" height="15" fill="rgb(216,181,6)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.9936%" y="325" width="0.0801%" height="15" fill="rgb(210,39,50)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.9936%" y="309" width="0.0801%" height="15" fill="rgb(239,154,53)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9936%" y="293" width="0.0801%" height="15" fill="rgb(235,123,22)" fg:x="1149" fg:w="1"/><text x="92.2436%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="92.0737%" y="517" width="0.0801%" height="15" fill="rgb(243,194,26)" fg:x="1150" fg:w="1"/><text x="92.3237%" y="527.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="91.9936%" y="549" width="0.2402%" height="15" fill="rgb(245,23,33)" fg:x="1149" fg:w="3"/><text x="92.2436%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="91.9936%" y="533" width="0.2402%" height="15" fill="rgb(213,191,38)" fg:x="1149" fg:w="3"/><text x="92.2436%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="92.1537%" y="517" width="0.0801%" height="15" fill="rgb(226,199,18)" fg:x="1151" fg:w="1"/><text x="92.4037%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="92.1537%" y="501" width="0.0801%" height="15" fill="rgb(210,106,30)" fg:x="1151" fg:w="1"/><text x="92.4037%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.1537%" y="485" width="0.0801%" height="15" fill="rgb(219,177,27)" fg:x="1151" fg:w="1"/><text x="92.4037%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.2338%" y="357" width="0.0801%" height="15" fill="rgb(215,14,22)" fg:x="1152" fg:w="1"/><text x="92.4838%" y="367.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="92.2338%" y="549" width="0.1601%" height="15" fill="rgb(240,24,8)" fg:x="1152" fg:w="2"/><text x="92.4838%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="92.2338%" y="533" width="0.1601%" height="15" fill="rgb(220,138,5)" fg:x="1152" fg:w="2"/><text x="92.4838%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="92.2338%" y="517" width="0.1601%" height="15" fill="rgb(254,39,11)" fg:x="1152" fg:w="2"/><text x="92.4838%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="92.2338%" y="501" width="0.1601%" height="15" fill="rgb(223,92,18)" fg:x="1152" fg:w="2"/><text x="92.4838%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="92.2338%" y="485" width="0.1601%" height="15" fill="rgb(231,216,35)" fg:x="1152" fg:w="2"/><text x="92.4838%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="92.2338%" y="469" width="0.1601%" height="15" fill="rgb(210,197,31)" fg:x="1152" fg:w="2"/><text x="92.4838%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.2338%" y="453" width="0.1601%" height="15" fill="rgb(233,78,6)" fg:x="1152" fg:w="2"/><text x="92.4838%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.2338%" y="437" width="0.1601%" height="15" fill="rgb(219,192,52)" fg:x="1152" fg:w="2"/><text x="92.4838%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.2338%" y="421" width="0.1601%" height="15" fill="rgb(240,140,47)" fg:x="1152" fg:w="2"/><text x="92.4838%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.2338%" y="405" width="0.1601%" height="15" fill="rgb(214,22,41)" fg:x="1152" fg:w="2"/><text x="92.4838%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="92.2338%" y="389" width="0.1601%" height="15" fill="rgb(216,28,18)" fg:x="1152" fg:w="2"/><text x="92.4838%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.2338%" y="373" width="0.1601%" height="15" fill="rgb(219,204,4)" fg:x="1152" fg:w="2"/><text x="92.4838%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3139%" y="357" width="0.0801%" height="15" fill="rgb(216,98,27)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3139%" y="341" width="0.0801%" height="15" fill="rgb(208,139,37)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.3939%" y="533" width="0.0801%" height="15" fill="rgb(241,193,50)" fg:x="1154" fg:w="1"/><text x="92.6439%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.3939%" y="517" width="0.0801%" height="15" fill="rgb(227,24,47)" fg:x="1154" fg:w="1"/><text x="92.6439%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.3939%" y="501" width="0.0801%" height="15" fill="rgb(212,91,31)" fg:x="1154" fg:w="1"/><text x="92.6439%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.3939%" y="485" width="0.0801%" height="15" fill="rgb(253,174,34)" fg:x="1154" fg:w="1"/><text x="92.6439%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.3939%" y="469" width="0.0801%" height="15" fill="rgb(219,214,52)" fg:x="1154" fg:w="1"/><text x="92.6439%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.3939%" y="453" width="0.0801%" height="15" fill="rgb(222,221,3)" fg:x="1154" fg:w="1"/><text x="92.6439%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.3939%" y="437" width="0.0801%" height="15" fill="rgb(209,130,23)" fg:x="1154" fg:w="1"/><text x="92.6439%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.3939%" y="421" width="0.0801%" height="15" fill="rgb(232,162,43)" fg:x="1154" fg:w="1"/><text x="92.6439%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.3939%" y="405" width="0.0801%" height="15" fill="rgb(245,34,38)" fg:x="1154" fg:w="1"/><text x="92.6439%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.3939%" y="389" width="0.0801%" height="15" fill="rgb(226,70,5)" fg:x="1154" fg:w="1"/><text x="92.6439%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.3939%" y="373" width="0.0801%" height="15" fill="rgb(238,97,25)" fg:x="1154" fg:w="1"/><text x="92.6439%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="92.3939%" y="357" width="0.0801%" height="15" fill="rgb(246,1,22)" fg:x="1154" fg:w="1"/><text x="92.6439%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="92.3939%" y="341" width="0.0801%" height="15" fill="rgb(248,180,27)" fg:x="1154" fg:w="1"/><text x="92.6439%" y="351.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (3 samples, 0.24%)</title><rect x="92.3939%" y="549" width="0.2402%" height="15" fill="rgb(223,147,15)" fg:x="1154" fg:w="3"/><text x="92.6439%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="92.4740%" y="533" width="0.1601%" height="15" fill="rgb(220,142,50)" fg:x="1155" fg:w="2"/><text x="92.7240%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.5540%" y="517" width="0.0801%" height="15" fill="rgb(209,24,8)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="92.5540%" y="501" width="0.0801%" height="15" fill="rgb(245,95,15)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="92.5540%" y="485" width="0.0801%" height="15" fill="rgb(254,132,39)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="92.5540%" y="469" width="0.0801%" height="15" fill="rgb(230,135,4)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="479.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="92.5540%" y="453" width="0.0801%" height="15" fill="rgb(233,65,45)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="92.5540%" y="437" width="0.0801%" height="15" fill="rgb(238,156,12)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.5540%" y="421" width="0.0801%" height="15" fill="rgb(230,14,54)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.5540%" y="405" width="0.0801%" height="15" fill="rgb(242,41,37)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.5540%" y="389" width="0.0801%" height="15" fill="rgb(231,37,53)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.5540%" y="373" width="0.0801%" height="15" fill="rgb(235,181,47)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.5540%" y="357" width="0.0801%" height="15" fill="rgb(253,41,16)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.5540%" y="341" width="0.0801%" height="15" fill="rgb(245,44,19)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5540%" y="325" width="0.0801%" height="15" fill="rgb(245,22,46)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (63 samples, 5.04%)</title><rect x="87.7502%" y="581" width="5.0440%" height="15" fill="rgb(207,84,51)" fg:x="1096" fg:w="63"/><text x="88.0002%" y="591.50">&lt;plugi..</text></g><g><title>plugins_core::location::change_location (19 samples, 1.52%)</title><rect x="91.2730%" y="565" width="1.5212%" height="15" fill="rgb(212,36,12)" fg:x="1140" fg:w="19"/><text x="91.5230%" y="575.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="92.6341%" y="549" width="0.1601%" height="15" fill="rgb(240,188,18)" fg:x="1157" fg:w="2"/><text x="92.8841%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="92.6341%" y="533" width="0.1601%" height="15" fill="rgb(245,89,47)" fg:x="1157" fg:w="2"/><text x="92.8841%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="92.6341%" y="517" width="0.1601%" height="15" fill="rgb(216,24,14)" fg:x="1157" fg:w="2"/><text x="92.8841%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="92.6341%" y="501" width="0.1601%" height="15" fill="rgb(217,71,21)" fg:x="1157" fg:w="2"/><text x="92.8841%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.7142%" y="485" width="0.0801%" height="15" fill="rgb(251,142,29)" fg:x="1158" fg:w="1"/><text x="92.9642%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.8743%" y="469" width="0.0801%" height="15" fill="rgb(210,29,22)" fg:x="1160" fg:w="1"/><text x="93.1243%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.8743%" y="453" width="0.0801%" height="15" fill="rgb(248,174,36)" fg:x="1160" fg:w="1"/><text x="93.1243%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.8743%" y="437" width="0.0801%" height="15" fill="rgb(224,111,34)" fg:x="1160" fg:w="1"/><text x="93.1243%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.8743%" y="421" width="0.0801%" height="15" fill="rgb(245,177,23)" fg:x="1160" fg:w="1"/><text x="93.1243%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.8743%" y="501" width="0.1601%" height="15" fill="rgb(217,114,53)" fg:x="1160" fg:w="2"/><text x="93.1243%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.8743%" y="485" width="0.1601%" height="15" fill="rgb(223,157,10)" fg:x="1160" fg:w="2"/><text x="93.1243%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.9544%" y="469" width="0.0801%" height="15" fill="rgb(217,134,44)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.9544%" y="453" width="0.0801%" height="15" fill="rgb(222,195,7)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.9544%" y="437" width="0.0801%" height="15" fill="rgb(235,153,27)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.9544%" y="421" width="0.0801%" height="15" fill="rgb(247,105,14)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.9544%" y="405" width="0.0801%" height="15" fill="rgb(250,6,2)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.9544%" y="389" width="0.0801%" height="15" fill="rgb(250,41,38)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.9544%" y="373" width="0.0801%" height="15" fill="rgb(234,127,49)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.9544%" y="357" width="0.0801%" height="15" fill="rgb(242,79,16)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.9544%" y="341" width="0.0801%" height="15" fill="rgb(236,15,0)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.9544%" y="325" width="0.0801%" height="15" fill="rgb(217,113,36)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.9544%" y="309" width="0.0801%" height="15" fill="rgb(239,12,4)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="92.9544%" y="293" width="0.0801%" height="15" fill="rgb(236,142,50)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (4 samples, 0.32%)</title><rect x="92.7942%" y="549" width="0.3203%" height="15" fill="rgb(244,108,52)" fg:x="1159" fg:w="4"/><text x="93.0442%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="92.8743%" y="533" width="0.2402%" height="15" fill="rgb(223,79,42)" fg:x="1160" fg:w="3"/><text x="93.1243%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="92.8743%" y="517" width="0.2402%" height="15" fill="rgb(245,34,19)" fg:x="1160" fg:w="3"/><text x="93.1243%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.0344%" y="501" width="0.0801%" height="15" fill="rgb(222,137,30)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.0344%" y="485" width="0.0801%" height="15" fill="rgb(213,216,50)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.0344%" y="469" width="0.0801%" height="15" fill="rgb(206,117,33)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.0344%" y="453" width="0.0801%" height="15" fill="rgb(234,122,47)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.0344%" y="437" width="0.0801%" height="15" fill="rgb(226,61,39)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="447.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (6 samples, 0.48%)</title><rect x="92.7942%" y="565" width="0.4804%" height="15" fill="rgb(229,174,28)" fg:x="1159" fg:w="6"/><text x="93.0442%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="93.1145%" y="549" width="0.1601%" height="15" fill="rgb(246,207,11)" fg:x="1163" fg:w="2"/><text x="93.3645%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="93.1145%" y="533" width="0.1601%" height="15" fill="rgb(245,212,19)" fg:x="1163" fg:w="2"/><text x="93.3645%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="93.1145%" y="517" width="0.1601%" height="15" fill="rgb(240,107,51)" fg:x="1163" fg:w="2"/><text x="93.3645%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.1946%" y="501" width="0.0801%" height="15" fill="rgb(238,67,13)" fg:x="1164" fg:w="1"/><text x="93.4446%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1946%" y="485" width="0.0801%" height="15" fill="rgb(250,8,29)" fg:x="1164" fg:w="1"/><text x="93.4446%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.1946%" y="469" width="0.0801%" height="15" fill="rgb(227,44,9)" fg:x="1164" fg:w="1"/><text x="93.4446%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1946%" y="453" width="0.0801%" height="15" fill="rgb(247,128,2)" fg:x="1164" fg:w="1"/><text x="93.4446%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.1946%" y="437" width="0.0801%" height="15" fill="rgb(239,11,50)" fg:x="1164" fg:w="1"/><text x="93.4446%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1946%" y="421" width="0.0801%" height="15" fill="rgb(241,11,28)" fg:x="1164" fg:w="1"/><text x="93.4446%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.1946%" y="405" width="0.0801%" height="15" fill="rgb(220,15,14)" fg:x="1164" fg:w="1"/><text x="93.4446%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1946%" y="389" width="0.0801%" height="15" fill="rgb(226,97,9)" fg:x="1164" fg:w="1"/><text x="93.4446%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.1946%" y="373" width="0.0801%" height="15" fill="rgb(240,221,24)" fg:x="1164" fg:w="1"/><text x="93.4446%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.1946%" y="357" width="0.0801%" height="15" fill="rgb(238,199,31)" fg:x="1164" fg:w="1"/><text x="93.4446%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.3547%" y="517" width="0.0801%" height="15" fill="rgb(222,15,37)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="93.3547%" y="533" width="0.1601%" height="15" fill="rgb(225,66,12)" fg:x="1166" fg:w="2"/><text x="93.6047%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="93.4347%" y="517" width="0.0801%" height="15" fill="rgb(224,142,38)" fg:x="1167" fg:w="1"/><text x="93.6847%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.4347%" y="501" width="0.0801%" height="15" fill="rgb(208,206,25)" fg:x="1167" fg:w="1"/><text x="93.6847%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.5148%" y="517" width="0.1601%" height="15" fill="rgb(205,153,20)" fg:x="1168" fg:w="2"/><text x="93.7648%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.5148%" y="501" width="0.1601%" height="15" fill="rgb(206,199,32)" fg:x="1168" fg:w="2"/><text x="93.7648%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5949%" y="485" width="0.0801%" height="15" fill="rgb(246,135,31)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5949%" y="469" width="0.0801%" height="15" fill="rgb(208,211,40)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.5949%" y="453" width="0.0801%" height="15" fill="rgb(210,219,1)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.5949%" y="437" width="0.0801%" height="15" fill="rgb(232,190,35)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.5949%" y="421" width="0.0801%" height="15" fill="rgb(211,9,18)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.5949%" y="405" width="0.0801%" height="15" fill="rgb(212,15,38)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.5949%" y="389" width="0.0801%" height="15" fill="rgb(238,74,28)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.5949%" y="373" width="0.0801%" height="15" fill="rgb(230,98,34)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.5949%" y="357" width="0.0801%" height="15" fill="rgb(212,130,40)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.5949%" y="341" width="0.0801%" height="15" fill="rgb(234,200,15)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.5949%" y="325" width="0.0801%" height="15" fill="rgb(216,227,29)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.5949%" y="309" width="0.0801%" height="15" fill="rgb(226,47,50)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="93.6749%" y="501" width="0.1601%" height="15" fill="rgb(232,146,36)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="93.6749%" y="485" width="0.1601%" height="15" fill="rgb(234,162,39)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="93.6749%" y="469" width="0.1601%" height="15" fill="rgb(253,148,35)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="93.6749%" y="453" width="0.1601%" height="15" fill="rgb(253,200,8)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="93.6749%" y="437" width="0.1601%" height="15" fill="rgb(220,107,20)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="93.6749%" y="421" width="0.1601%" height="15" fill="rgb(205,200,12)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="93.6749%" y="405" width="0.1601%" height="15" fill="rgb(219,123,42)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="93.6749%" y="389" width="0.1601%" height="15" fill="rgb(236,136,3)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="93.6749%" y="373" width="0.1601%" height="15" fill="rgb(213,112,27)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="93.6749%" y="357" width="0.1601%" height="15" fill="rgb(229,181,47)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="93.7550%" y="341" width="0.0801%" height="15" fill="rgb(243,123,15)" fg:x="1171" fg:w="1"/><text x="94.0050%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="93.7550%" y="325" width="0.0801%" height="15" fill="rgb(206,135,33)" fg:x="1171" fg:w="1"/><text x="94.0050%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="93.7550%" y="309" width="0.0801%" height="15" fill="rgb(232,190,44)" fg:x="1171" fg:w="1"/><text x="94.0050%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.8351%" y="325" width="0.0801%" height="15" fill="rgb(237,122,12)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.8351%" y="309" width="0.0801%" height="15" fill="rgb(245,157,35)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.8351%" y="293" width="0.0801%" height="15" fill="rgb(205,164,34)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.8351%" y="277" width="0.0801%" height="15" fill="rgb(237,82,1)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.8351%" y="261" width="0.0801%" height="15" fill="rgb(220,167,39)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.8351%" y="245" width="0.0801%" height="15" fill="rgb(208,133,37)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.8351%" y="229" width="0.0801%" height="15" fill="rgb(243,161,51)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="239.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.8351%" y="469" width="0.1601%" height="15" fill="rgb(232,127,41)" fg:x="1172" fg:w="2"/><text x="94.0851%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.8351%" y="453" width="0.1601%" height="15" fill="rgb(237,20,11)" fg:x="1172" fg:w="2"/><text x="94.0851%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.8351%" y="437" width="0.1601%" height="15" fill="rgb(233,186,24)" fg:x="1172" fg:w="2"/><text x="94.0851%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.8351%" y="421" width="0.1601%" height="15" fill="rgb(210,39,6)" fg:x="1172" fg:w="2"/><text x="94.0851%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.8351%" y="405" width="0.1601%" height="15" fill="rgb(216,11,48)" fg:x="1172" fg:w="2"/><text x="94.0851%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.8351%" y="389" width="0.1601%" height="15" fill="rgb(222,13,18)" fg:x="1172" fg:w="2"/><text x="94.0851%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="93.8351%" y="373" width="0.1601%" height="15" fill="rgb(238,150,15)" fg:x="1172" fg:w="2"/><text x="94.0851%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="93.8351%" y="357" width="0.1601%" height="15" fill="rgb(235,57,5)" fg:x="1172" fg:w="2"/><text x="94.0851%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="93.8351%" y="341" width="0.1601%" height="15" fill="rgb(214,196,13)" fg:x="1172" fg:w="2"/><text x="94.0851%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="93.9151%" y="325" width="0.0801%" height="15" fill="rgb(217,219,39)" fg:x="1173" fg:w="1"/><text x="94.1651%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.9151%" y="309" width="0.0801%" height="15" fill="rgb(237,225,39)" fg:x="1173" fg:w="1"/><text x="94.1651%" y="319.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="93.9952%" y="453" width="0.0801%" height="15" fill="rgb(221,88,26)" fg:x="1174" fg:w="1"/><text x="94.2452%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="93.9952%" y="437" width="0.0801%" height="15" fill="rgb(205,45,48)" fg:x="1174" fg:w="1"/><text x="94.2452%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="93.9952%" y="421" width="0.0801%" height="15" fill="rgb(234,216,37)" fg:x="1174" fg:w="1"/><text x="94.2452%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="93.9952%" y="469" width="0.1601%" height="15" fill="rgb(243,210,39)" fg:x="1174" fg:w="2"/><text x="94.2452%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="94.0753%" y="453" width="0.0801%" height="15" fill="rgb(232,86,47)" fg:x="1175" fg:w="1"/><text x="94.3253%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.0753%" y="437" width="0.0801%" height="15" fill="rgb(234,222,31)" fg:x="1175" fg:w="1"/><text x="94.3253%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.1553%" y="389" width="0.0801%" height="15" fill="rgb(211,202,13)" fg:x="1176" fg:w="1"/><text x="94.4053%" y="399.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (10 samples, 0.80%)</title><rect x="93.5148%" y="533" width="0.8006%" height="15" fill="rgb(237,138,3)" fg:x="1168" fg:w="10"/><text x="93.7648%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (8 samples, 0.64%)</title><rect x="93.6749%" y="517" width="0.6405%" height="15" fill="rgb(225,74,1)" fg:x="1170" fg:w="8"/><text x="93.9249%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="93.8351%" y="501" width="0.4804%" height="15" fill="rgb(252,76,17)" fg:x="1172" fg:w="6"/><text x="94.0851%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="93.8351%" y="485" width="0.4804%" height="15" fill="rgb(217,109,21)" fg:x="1172" fg:w="6"/><text x="94.0851%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.1553%" y="469" width="0.1601%" height="15" fill="rgb(235,7,3)" fg:x="1176" fg:w="2"/><text x="94.4053%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.1553%" y="453" width="0.1601%" height="15" fill="rgb(238,16,13)" fg:x="1176" fg:w="2"/><text x="94.4053%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="94.1553%" y="437" width="0.1601%" height="15" fill="rgb(242,32,47)" fg:x="1176" fg:w="2"/><text x="94.4053%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="94.1553%" y="421" width="0.1601%" height="15" fill="rgb(241,38,43)" fg:x="1176" fg:w="2"/><text x="94.4053%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="94.1553%" y="405" width="0.1601%" height="15" fill="rgb(213,124,26)" fg:x="1176" fg:w="2"/><text x="94.4053%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.2354%" y="389" width="0.0801%" height="15" fill="rgb(208,183,39)" fg:x="1177" fg:w="1"/><text x="94.4854%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.2354%" y="373" width="0.0801%" height="15" fill="rgb(222,116,36)" fg:x="1177" fg:w="1"/><text x="94.4854%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.3155%" y="501" width="0.0801%" height="15" fill="rgb(214,36,24)" fg:x="1178" fg:w="1"/><text x="94.5655%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="94.3955%" y="469" width="0.0801%" height="15" fill="rgb(254,64,37)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.3955%" y="453" width="0.0801%" height="15" fill="rgb(216,166,14)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="94.3955%" y="437" width="0.0801%" height="15" fill="rgb(242,144,17)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::name (2 samples, 0.16%)</title><rect x="94.3955%" y="501" width="0.1601%" height="15" fill="rgb(233,229,42)" fg:x="1179" fg:w="2"/><text x="94.6455%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="94.3955%" y="485" width="0.1601%" height="15" fill="rgb(221,204,47)" fg:x="1179" fg:w="2"/><text x="94.6455%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="94.4756%" y="469" width="0.0801%" height="15" fill="rgb(230,26,44)" fg:x="1180" fg:w="1"/><text x="94.7256%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.4756%" y="453" width="0.0801%" height="15" fill="rgb(242,209,3)" fg:x="1180" fg:w="1"/><text x="94.7256%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4756%" y="437" width="0.0801%" height="15" fill="rgb(229,32,19)" fg:x="1180" fg:w="1"/><text x="94.7256%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4756%" y="421" width="0.0801%" height="15" fill="rgb(211,49,50)" fg:x="1180" fg:w="1"/><text x="94.7256%" y="431.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="94.3155%" y="533" width="0.3203%" height="15" fill="rgb(208,171,21)" fg:x="1178" fg:w="4"/><text x="94.5655%" y="543.50"></text></g><g><title>plugins_core::finding::matches_description (4 samples, 0.32%)</title><rect x="94.3155%" y="517" width="0.3203%" height="15" fill="rgb(240,86,9)" fg:x="1178" fg:w="4"/><text x="94.5655%" y="527.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="94.5556%" y="501" width="0.0801%" height="15" fill="rgb(207,169,47)" fg:x="1181" fg:w="1"/><text x="94.8056%" y="511.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="94.5556%" y="485" width="0.0801%" height="15" fill="rgb(212,103,33)" fg:x="1181" fg:w="1"/><text x="94.8056%" y="495.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="94.5556%" y="469" width="0.0801%" height="15" fill="rgb(209,86,21)" fg:x="1181" fg:w="1"/><text x="94.8056%" y="479.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="94.5556%" y="453" width="0.0801%" height="15" fill="rgb(221,77,49)" fg:x="1181" fg:w="1"/><text x="94.8056%" y="463.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.08%)</title><rect x="94.5556%" y="437" width="0.0801%" height="15" fill="rgb(244,188,21)" fg:x="1181" fg:w="1"/><text x="94.8056%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (18 samples, 1.44%)</title><rect x="93.2746%" y="565" width="1.4412%" height="15" fill="rgb(228,11,38)" fg:x="1165" fg:w="18"/><text x="93.5246%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (17 samples, 1.36%)</title><rect x="93.3547%" y="549" width="1.3611%" height="15" fill="rgb(222,158,25)" fg:x="1166" fg:w="17"/><text x="93.6047%" y="559.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="94.6357%" y="533" width="0.0801%" height="15" fill="rgb(232,223,3)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.6357%" y="517" width="0.0801%" height="15" fill="rgb(218,55,0)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.6357%" y="501" width="0.0801%" height="15" fill="rgb(223,130,7)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.6357%" y="485" width="0.0801%" height="15" fill="rgb(246,183,32)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.6357%" y="469" width="0.0801%" height="15" fill="rgb(233,194,27)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.6357%" y="453" width="0.0801%" height="15" fill="rgb(244,187,35)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.6357%" y="437" width="0.0801%" height="15" fill="rgb(238,33,29)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.6357%" y="421" width="0.0801%" height="15" fill="rgb(235,216,15)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.6357%" y="405" width="0.0801%" height="15" fill="rgb(211,167,33)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.6357%" y="389" width="0.0801%" height="15" fill="rgb(235,74,3)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.6357%" y="373" width="0.0801%" height="15" fill="rgb(241,103,0)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.6357%" y="357" width="0.0801%" height="15" fill="rgb(223,138,54)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.6357%" y="341" width="0.0801%" height="15" fill="rgb(228,24,36)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6357%" y="325" width="0.0801%" height="15" fill="rgb(215,14,8)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="94.7158%" y="533" width="0.0801%" height="15" fill="rgb(231,9,2)" fg:x="1183" fg:w="1"/><text x="94.9658%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="94.7158%" y="517" width="0.0801%" height="15" fill="rgb(215,150,51)" fg:x="1183" fg:w="1"/><text x="94.9658%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.7158%" y="501" width="0.0801%" height="15" fill="rgb(254,124,6)" fg:x="1183" fg:w="1"/><text x="94.9658%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.7158%" y="485" width="0.0801%" height="15" fill="rgb(216,111,25)" fg:x="1183" fg:w="1"/><text x="94.9658%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.7158%" y="469" width="0.0801%" height="15" fill="rgb(237,87,46)" fg:x="1183" fg:w="1"/><text x="94.9658%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.7158%" y="453" width="0.0801%" height="15" fill="rgb(216,183,42)" fg:x="1183" fg:w="1"/><text x="94.9658%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.7158%" y="437" width="0.0801%" height="15" fill="rgb(214,175,46)" fg:x="1183" fg:w="1"/><text x="94.9658%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.7158%" y="421" width="0.0801%" height="15" fill="rgb(247,223,23)" fg:x="1183" fg:w="1"/><text x="94.9658%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.7158%" y="405" width="0.0801%" height="15" fill="rgb(240,132,12)" fg:x="1183" fg:w="1"/><text x="94.9658%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.7158%" y="389" width="0.0801%" height="15" fill="rgb(245,123,48)" fg:x="1183" fg:w="1"/><text x="94.9658%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.7158%" y="373" width="0.0801%" height="15" fill="rgb(245,156,12)" fg:x="1183" fg:w="1"/><text x="94.9658%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (2 samples, 0.16%)</title><rect x="94.7158%" y="565" width="0.1601%" height="15" fill="rgb(212,48,35)" fg:x="1183" fg:w="2"/><text x="94.9658%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="94.7158%" y="549" width="0.1601%" height="15" fill="rgb(213,21,25)" fg:x="1183" fg:w="2"/><text x="94.9658%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="94.7958%" y="533" width="0.0801%" height="15" fill="rgb(215,17,16)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="94.7958%" y="517" width="0.0801%" height="15" fill="rgb(235,160,36)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.7958%" y="501" width="0.0801%" height="15" fill="rgb(248,141,20)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7958%" y="485" width="0.0801%" height="15" fill="rgb(253,123,32)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7958%" y="469" width="0.0801%" height="15" fill="rgb(214,72,40)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7958%" y="453" width="0.0801%" height="15" fill="rgb(234,122,41)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7958%" y="437" width="0.0801%" height="15" fill="rgb(236,55,21)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.7958%" y="421" width="0.0801%" height="15" fill="rgb(222,162,54)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7958%" y="405" width="0.0801%" height="15" fill="rgb(219,74,8)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7958%" y="389" width="0.0801%" height="15" fill="rgb(222,106,42)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7958%" y="373" width="0.0801%" height="15" fill="rgb(223,40,43)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="383.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="94.7958%" y="357" width="0.0801%" height="15" fill="rgb(229,216,28)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="367.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="94.8759%" y="565" width="0.1601%" height="15" fill="rgb(222,17,5)" fg:x="1185" fg:w="2"/><text x="95.1259%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.8759%" y="549" width="0.1601%" height="15" fill="rgb(212,51,2)" fg:x="1185" fg:w="2"/><text x="95.1259%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.8759%" y="533" width="0.1601%" height="15" fill="rgb(243,213,35)" fg:x="1185" fg:w="2"/><text x="95.1259%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.8759%" y="517" width="0.1601%" height="15" fill="rgb(218,68,26)" fg:x="1185" fg:w="2"/><text x="95.1259%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="94.8759%" y="501" width="0.1601%" height="15" fill="rgb(214,135,33)" fg:x="1185" fg:w="2"/><text x="95.1259%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="94.8759%" y="485" width="0.1601%" height="15" fill="rgb(248,7,20)" fg:x="1185" fg:w="2"/><text x="95.1259%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="94.8759%" y="469" width="0.1601%" height="15" fill="rgb(209,147,4)" fg:x="1185" fg:w="2"/><text x="95.1259%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="94.8759%" y="453" width="0.1601%" height="15" fill="rgb(251,48,10)" fg:x="1185" fg:w="2"/><text x="95.1259%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="94.8759%" y="437" width="0.1601%" height="15" fill="rgb(226,62,22)" fg:x="1185" fg:w="2"/><text x="95.1259%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="94.8759%" y="421" width="0.1601%" height="15" fill="rgb(218,5,25)" fg:x="1185" fg:w="2"/><text x="95.1259%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="94.8759%" y="405" width="0.1601%" height="15" fill="rgb(240,229,8)" fg:x="1185" fg:w="2"/><text x="95.1259%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="94.8759%" y="389" width="0.1601%" height="15" fill="rgb(219,123,53)" fg:x="1185" fg:w="2"/><text x="95.1259%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="94.8759%" y="373" width="0.1601%" height="15" fill="rgb(239,77,49)" fg:x="1185" fg:w="2"/><text x="95.1259%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.9560%" y="357" width="0.0801%" height="15" fill="rgb(247,22,15)" fg:x="1186" fg:w="1"/><text x="95.2060%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="95.0360%" y="549" width="0.0801%" height="15" fill="rgb(210,55,17)" fg:x="1187" fg:w="1"/><text x="95.2860%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="95.0360%" y="533" width="0.0801%" height="15" fill="rgb(228,130,51)" fg:x="1187" fg:w="1"/><text x="95.2860%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.0360%" y="517" width="0.0801%" height="15" fill="rgb(206,81,33)" fg:x="1187" fg:w="1"/><text x="95.2860%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="95.1161%" y="517" width="0.1601%" height="15" fill="rgb(241,104,30)" fg:x="1188" fg:w="2"/><text x="95.3661%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="95.1161%" y="501" width="0.1601%" height="15" fill="rgb(240,88,12)" fg:x="1188" fg:w="2"/><text x="95.3661%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.1161%" y="485" width="0.1601%" height="15" fill="rgb(249,116,19)" fg:x="1188" fg:w="2"/><text x="95.3661%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1962%" y="469" width="0.0801%" height="15" fill="rgb(250,218,1)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1962%" y="453" width="0.0801%" height="15" fill="rgb(233,220,16)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1962%" y="437" width="0.0801%" height="15" fill="rgb(248,195,9)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1962%" y="421" width="0.0801%" height="15" fill="rgb(230,58,11)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.1962%" y="405" width="0.0801%" height="15" fill="rgb(217,125,51)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.1962%" y="389" width="0.0801%" height="15" fill="rgb(252,119,13)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.1962%" y="373" width="0.0801%" height="15" fill="rgb(245,23,2)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1962%" y="357" width="0.0801%" height="15" fill="rgb(216,98,41)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1962%" y="341" width="0.0801%" height="15" fill="rgb(228,181,52)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.1962%" y="325" width="0.0801%" height="15" fill="rgb(238,203,39)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.1962%" y="309" width="0.0801%" height="15" fill="rgb(214,56,7)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.1962%" y="293" width="0.0801%" height="15" fill="rgb(229,167,38)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.1962%" y="277" width="0.0801%" height="15" fill="rgb(242,135,4)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1962%" y="261" width="0.0801%" height="15" fill="rgb(211,228,4)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="271.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="95.1161%" y="549" width="0.3203%" height="15" fill="rgb(206,139,51)" fg:x="1188" fg:w="4"/><text x="95.3661%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="95.1161%" y="533" width="0.3203%" height="15" fill="rgb(236,70,25)" fg:x="1188" fg:w="4"/><text x="95.3661%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="95.2762%" y="517" width="0.1601%" height="15" fill="rgb(224,211,44)" fg:x="1190" fg:w="2"/><text x="95.5262%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="95.2762%" y="501" width="0.1601%" height="15" fill="rgb(226,160,45)" fg:x="1190" fg:w="2"/><text x="95.5262%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.2762%" y="485" width="0.1601%" height="15" fill="rgb(235,150,10)" fg:x="1190" fg:w="2"/><text x="95.5262%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.2762%" y="469" width="0.1601%" height="15" fill="rgb(253,222,52)" fg:x="1190" fg:w="2"/><text x="95.5262%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.2762%" y="453" width="0.1601%" height="15" fill="rgb(248,159,14)" fg:x="1190" fg:w="2"/><text x="95.5262%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.2762%" y="437" width="0.1601%" height="15" fill="rgb(252,161,4)" fg:x="1190" fg:w="2"/><text x="95.5262%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.2762%" y="421" width="0.1601%" height="15" fill="rgb(227,107,7)" fg:x="1190" fg:w="2"/><text x="95.5262%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.2762%" y="405" width="0.1601%" height="15" fill="rgb(248,227,35)" fg:x="1190" fg:w="2"/><text x="95.5262%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3563%" y="389" width="0.0801%" height="15" fill="rgb(240,68,14)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3563%" y="373" width="0.0801%" height="15" fill="rgb(243,5,47)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.3563%" y="357" width="0.0801%" height="15" fill="rgb(225,134,14)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.3563%" y="341" width="0.0801%" height="15" fill="rgb(225,207,41)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.3563%" y="325" width="0.0801%" height="15" fill="rgb(207,214,21)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.3563%" y="309" width="0.0801%" height="15" fill="rgb(230,100,48)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.3563%" y="293" width="0.0801%" height="15" fill="rgb(231,155,51)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.3563%" y="277" width="0.0801%" height="15" fill="rgb(252,98,23)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.3563%" y="261" width="0.0801%" height="15" fill="rgb(216,151,14)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.3563%" y="245" width="0.0801%" height="15" fill="rgb(250,20,49)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.3563%" y="229" width="0.0801%" height="15" fill="rgb(217,134,33)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.3563%" y="213" width="0.0801%" height="15" fill="rgb(205,94,24)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="223.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="95.5164%" y="517" width="0.2402%" height="15" fill="rgb(244,96,26)" fg:x="1193" fg:w="3"/><text x="95.7664%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="95.5164%" y="501" width="0.2402%" height="15" fill="rgb(218,48,4)" fg:x="1193" fg:w="3"/><text x="95.7664%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.5965%" y="485" width="0.1601%" height="15" fill="rgb(210,74,37)" fg:x="1194" fg:w="2"/><text x="95.8465%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.5965%" y="469" width="0.1601%" height="15" fill="rgb(240,170,7)" fg:x="1194" fg:w="2"/><text x="95.8465%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="95.7566%" y="517" width="0.1601%" height="15" fill="rgb(251,120,48)" fg:x="1196" fg:w="2"/><text x="96.0066%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="95.8367%" y="501" width="0.0801%" height="15" fill="rgb(219,149,25)" fg:x="1197" fg:w="1"/><text x="96.0867%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.8367%" y="485" width="0.0801%" height="15" fill="rgb(223,222,45)" fg:x="1197" fg:w="1"/><text x="96.0867%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="95.8367%" y="469" width="0.0801%" height="15" fill="rgb(216,18,1)" fg:x="1197" fg:w="1"/><text x="96.0867%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="95.8367%" y="453" width="0.0801%" height="15" fill="rgb(251,184,12)" fg:x="1197" fg:w="1"/><text x="96.0867%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="95.8367%" y="437" width="0.0801%" height="15" fill="rgb(222,116,37)" fg:x="1197" fg:w="1"/><text x="96.0867%" y="447.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="95.8367%" y="421" width="0.0801%" height="15" fill="rgb(236,223,24)" fg:x="1197" fg:w="1"/><text x="96.0867%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9167%" y="517" width="0.0801%" height="15" fill="rgb(229,38,32)" fg:x="1198" fg:w="1"/><text x="96.1667%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (8 samples, 0.64%)</title><rect x="95.4363%" y="549" width="0.6405%" height="15" fill="rgb(251,208,7)" fg:x="1192" fg:w="8"/><text x="95.6863%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="95.4363%" y="533" width="0.6405%" height="15" fill="rgb(207,226,43)" fg:x="1192" fg:w="8"/><text x="95.6863%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.9968%" y="517" width="0.0801%" height="15" fill="rgb(247,229,43)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.9968%" y="501" width="0.0801%" height="15" fill="rgb(217,201,52)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.9968%" y="485" width="0.0801%" height="15" fill="rgb(228,68,39)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.9968%" y="469" width="0.0801%" height="15" fill="rgb(218,138,7)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.9968%" y="453" width="0.0801%" height="15" fill="rgb(230,78,37)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="96.2370%" y="517" width="0.0801%" height="15" fill="rgb(246,177,36)" fg:x="1202" fg:w="1"/><text x="96.4870%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.2370%" y="501" width="0.0801%" height="15" fill="rgb(231,190,6)" fg:x="1202" fg:w="1"/><text x="96.4870%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.2370%" y="485" width="0.0801%" height="15" fill="rgb(234,217,25)" fg:x="1202" fg:w="1"/><text x="96.4870%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.3171%" y="485" width="0.0801%" height="15" fill="rgb(249,131,38)" fg:x="1203" fg:w="1"/><text x="96.5671%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.3971%" y="437" width="0.0801%" height="15" fill="rgb(253,168,16)" fg:x="1204" fg:w="1"/><text x="96.6471%" y="447.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (6 samples, 0.48%)</title><rect x="96.0769%" y="549" width="0.4804%" height="15" fill="rgb(232,181,39)" fg:x="1200" fg:w="6"/><text x="96.3269%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.48%)</title><rect x="96.0769%" y="533" width="0.4804%" height="15" fill="rgb(216,167,0)" fg:x="1200" fg:w="6"/><text x="96.3269%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="96.3171%" y="517" width="0.2402%" height="15" fill="rgb(247,77,10)" fg:x="1203" fg:w="3"/><text x="96.5671%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="96.3171%" y="501" width="0.2402%" height="15" fill="rgb(220,28,10)" fg:x="1203" fg:w="3"/><text x="96.5671%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.3971%" y="485" width="0.1601%" height="15" fill="rgb(251,163,49)" fg:x="1204" fg:w="2"/><text x="96.6471%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="96.3971%" y="469" width="0.1601%" height="15" fill="rgb(249,148,50)" fg:x="1204" fg:w="2"/><text x="96.6471%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="96.3971%" y="453" width="0.1601%" height="15" fill="rgb(238,149,36)" fg:x="1204" fg:w="2"/><text x="96.6471%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.4772%" y="437" width="0.0801%" height="15" fill="rgb(248,191,13)" fg:x="1205" fg:w="1"/><text x="96.7272%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.5572%" y="453" width="0.1601%" height="15" fill="rgb(233,73,17)" fg:x="1206" fg:w="2"/><text x="96.8072%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.5572%" y="437" width="0.1601%" height="15" fill="rgb(233,197,11)" fg:x="1206" fg:w="2"/><text x="96.8072%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.6373%" y="421" width="0.0801%" height="15" fill="rgb(245,42,8)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.6373%" y="405" width="0.0801%" height="15" fill="rgb(217,39,50)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.6373%" y="389" width="0.0801%" height="15" fill="rgb(250,23,13)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.6373%" y="373" width="0.0801%" height="15" fill="rgb(219,204,45)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.6373%" y="357" width="0.0801%" height="15" fill="rgb(248,54,16)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.6373%" y="341" width="0.0801%" height="15" fill="rgb(213,16,14)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.6373%" y="325" width="0.0801%" height="15" fill="rgb(245,18,44)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.6373%" y="309" width="0.0801%" height="15" fill="rgb(232,10,47)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.6373%" y="293" width="0.0801%" height="15" fill="rgb(237,185,33)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.6373%" y="277" width="0.0801%" height="15" fill="rgb(224,223,44)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.6373%" y="261" width="0.0801%" height="15" fill="rgb(238,98,11)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.6373%" y="245" width="0.0801%" height="15" fill="rgb(217,33,34)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6373%" y="229" width="0.0801%" height="15" fill="rgb(232,193,38)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.7174%" y="325" width="0.0801%" height="15" fill="rgb(231,23,4)" fg:x="1208" fg:w="1"/><text x="96.9674%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="96.5572%" y="501" width="0.3203%" height="15" fill="rgb(218,154,4)" fg:x="1206" fg:w="4"/><text x="96.8072%" y="511.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="96.5572%" y="485" width="0.3203%" height="15" fill="rgb(243,171,32)" fg:x="1206" fg:w="4"/><text x="96.8072%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="96.5572%" y="469" width="0.3203%" height="15" fill="rgb(210,102,6)" fg:x="1206" fg:w="4"/><text x="96.8072%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.7174%" y="453" width="0.1601%" height="15" fill="rgb(205,134,8)" fg:x="1208" fg:w="2"/><text x="96.9674%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.7174%" y="437" width="0.1601%" height="15" fill="rgb(240,115,17)" fg:x="1208" fg:w="2"/><text x="96.9674%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.7174%" y="421" width="0.1601%" height="15" fill="rgb(213,62,14)" fg:x="1208" fg:w="2"/><text x="96.9674%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.7174%" y="405" width="0.1601%" height="15" fill="rgb(249,149,16)" fg:x="1208" fg:w="2"/><text x="96.9674%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="96.7174%" y="389" width="0.1601%" height="15" fill="rgb(220,195,22)" fg:x="1208" fg:w="2"/><text x="96.9674%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.7174%" y="373" width="0.1601%" height="15" fill="rgb(211,106,49)" fg:x="1208" fg:w="2"/><text x="96.9674%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.7174%" y="357" width="0.1601%" height="15" fill="rgb(214,176,52)" fg:x="1208" fg:w="2"/><text x="96.9674%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.7174%" y="341" width="0.1601%" height="15" fill="rgb(212,121,30)" fg:x="1208" fg:w="2"/><text x="96.9674%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.7974%" y="325" width="0.0801%" height="15" fill="rgb(231,167,39)" fg:x="1209" fg:w="1"/><text x="97.0474%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.7974%" y="309" width="0.0801%" height="15" fill="rgb(233,93,22)" fg:x="1209" fg:w="1"/><text x="97.0474%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="96.7974%" y="293" width="0.0801%" height="15" fill="rgb(242,187,26)" fg:x="1209" fg:w="1"/><text x="97.0474%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.7974%" y="277" width="0.0801%" height="15" fill="rgb(209,152,0)" fg:x="1209" fg:w="1"/><text x="97.0474%" y="287.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="96.5572%" y="533" width="0.4003%" height="15" fill="rgb(208,174,22)" fg:x="1206" fg:w="5"/><text x="96.8072%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="96.5572%" y="517" width="0.4003%" height="15" fill="rgb(216,172,41)" fg:x="1206" fg:w="5"/><text x="96.8072%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="96.8775%" y="501" width="0.0801%" height="15" fill="rgb(238,206,48)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.8775%" y="485" width="0.0801%" height="15" fill="rgb(229,70,36)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.8775%" y="469" width="0.0801%" height="15" fill="rgb(230,152,25)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8775%" y="453" width="0.0801%" height="15" fill="rgb(243,173,54)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8775%" y="437" width="0.0801%" height="15" fill="rgb(252,104,23)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8775%" y="421" width="0.0801%" height="15" fill="rgb(224,24,50)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8775%" y="405" width="0.0801%" height="15" fill="rgb(212,13,43)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8775%" y="389" width="0.0801%" height="15" fill="rgb(243,34,26)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8775%" y="373" width="0.0801%" height="15" fill="rgb(239,209,5)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8775%" y="357" width="0.0801%" height="15" fill="rgb(239,212,43)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.8775%" y="341" width="0.0801%" height="15" fill="rgb(228,72,25)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.8775%" y="325" width="0.0801%" height="15" fill="rgb(205,82,49)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.8775%" y="309" width="0.0801%" height="15" fill="rgb(221,205,24)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.8775%" y="293" width="0.0801%" height="15" fill="rgb(206,213,29)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.8775%" y="277" width="0.0801%" height="15" fill="rgb(228,180,8)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.8775%" y="261" width="0.0801%" height="15" fill="rgb(217,131,9)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.8775%" y="245" width="0.0801%" height="15" fill="rgb(207,188,14)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.8775%" y="229" width="0.0801%" height="15" fill="rgb(254,82,24)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.8775%" y="213" width="0.0801%" height="15" fill="rgb(209,29,48)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8775%" y="197" width="0.0801%" height="15" fill="rgb(248,24,3)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="207.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="96.5572%" y="549" width="0.4804%" height="15" fill="rgb(209,134,11)" fg:x="1206" fg:w="6"/><text x="96.8072%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="96.9576%" y="533" width="0.0801%" height="15" fill="rgb(253,54,47)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.9576%" y="517" width="0.0801%" height="15" fill="rgb(214,163,42)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="96.9576%" y="501" width="0.0801%" height="15" fill="rgb(206,25,12)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="96.9576%" y="485" width="0.0801%" height="15" fill="rgb(240,49,44)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="96.9576%" y="469" width="0.0801%" height="15" fill="rgb(245,4,38)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="96.9576%" y="453" width="0.0801%" height="15" fill="rgb(215,72,38)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.9576%" y="437" width="0.0801%" height="15" fill="rgb(215,123,24)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.9576%" y="421" width="0.0801%" height="15" fill="rgb(242,140,44)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="96.9576%" y="405" width="0.0801%" height="15" fill="rgb(243,36,26)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="415.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="96.9576%" y="389" width="0.0801%" height="15" fill="rgb(207,91,21)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="96.9576%" y="373" width="0.0801%" height="15" fill="rgb(253,111,50)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="96.9576%" y="357" width="0.0801%" height="15" fill="rgb(228,163,27)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="96.9576%" y="341" width="0.0801%" height="15" fill="rgb(205,182,13)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="96.9576%" y="325" width="0.0801%" height="15" fill="rgb(247,194,0)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="96.9576%" y="309" width="0.0801%" height="15" fill="rgb(241,58,47)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="96.9576%" y="293" width="0.0801%" height="15" fill="rgb(219,25,53)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.9576%" y="277" width="0.0801%" height="15" fill="rgb(210,11,24)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.0376%" y="533" width="0.0801%" height="15" fill="rgb(247,114,30)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.0376%" y="517" width="0.0801%" height="15" fill="rgb(213,74,28)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.0376%" y="501" width="0.0801%" height="15" fill="rgb(208,210,48)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.0376%" y="485" width="0.0801%" height="15" fill="rgb(218,46,19)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.0376%" y="469" width="0.0801%" height="15" fill="rgb(242,194,21)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.0376%" y="453" width="0.0801%" height="15" fill="rgb(229,72,4)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.0376%" y="437" width="0.0801%" height="15" fill="rgb(231,58,6)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.0376%" y="421" width="0.0801%" height="15" fill="rgb(252,78,15)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.0376%" y="405" width="0.0801%" height="15" fill="rgb(246,64,50)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.0376%" y="389" width="0.0801%" height="15" fill="rgb(217,41,24)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.0376%" y="373" width="0.0801%" height="15" fill="rgb(246,48,46)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.0376%" y="357" width="0.0801%" height="15" fill="rgb(210,188,31)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="367.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="97.0376%" y="549" width="0.1601%" height="15" fill="rgb(211,152,13)" fg:x="1212" fg:w="2"/><text x="97.2876%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1177%" y="533" width="0.0801%" height="15" fill="rgb(225,3,9)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (56 samples, 4.48%)</title><rect x="92.7942%" y="581" width="4.4836%" height="15" fill="rgb(209,228,2)" fg:x="1159" fg:w="56"/><text x="93.0442%" y="591.50">&lt;plug..</text></g><g><title>plugins_core::location::change_location (28 samples, 2.24%)</title><rect x="95.0360%" y="565" width="2.2418%" height="15" fill="rgb(238,228,1)" fg:x="1187" fg:w="28"/><text x="95.2860%" y="575.50">p..</text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="97.1978%" y="549" width="0.0801%" height="15" fill="rgb(211,198,35)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="97.1978%" y="533" width="0.0801%" height="15" fill="rgb(248,76,52)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.1978%" y="517" width="0.0801%" height="15" fill="rgb(227,204,49)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1978%" y="501" width="0.0801%" height="15" fill="rgb(254,148,46)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1978%" y="485" width="0.0801%" height="15" fill="rgb(252,97,43)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.1978%" y="469" width="0.0801%" height="15" fill="rgb(212,80,12)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1978%" y="453" width="0.0801%" height="15" fill="rgb(254,99,49)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1978%" y="437" width="0.0801%" height="15" fill="rgb(206,194,15)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.1978%" y="421" width="0.0801%" height="15" fill="rgb(226,19,53)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.1978%" y="405" width="0.0801%" height="15" fill="rgb(246,39,21)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.1978%" y="389" width="0.0801%" height="15" fill="rgb(208,4,51)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1978%" y="373" width="0.0801%" height="15" fill="rgb(205,70,9)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.1978%" y="357" width="0.0801%" height="15" fill="rgb(238,107,40)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.1978%" y="341" width="0.0801%" height="15" fill="rgb(251,94,20)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.1978%" y="325" width="0.0801%" height="15" fill="rgb(238,124,23)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.1978%" y="309" width="0.0801%" height="15" fill="rgb(236,18,23)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.1978%" y="293" width="0.0801%" height="15" fill="rgb(236,56,32)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1978%" y="277" width="0.0801%" height="15" fill="rgb(244,115,51)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.2778%" y="565" width="0.0801%" height="15" fill="rgb(228,170,36)" fg:x="1215" fg:w="1"/><text x="97.5278%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (144 samples, 11.53%)</title><rect x="85.9087%" y="757" width="11.5292%" height="15" fill="rgb(205,135,5)" fg:x="1073" fg:w="144"/><text x="86.1587%" y="767.50">&lt;engine::session:..</text></g><g><title>kernel::plugins::mw::apply_middleware (144 samples, 11.53%)</title><rect x="85.9087%" y="741" width="11.5292%" height="15" fill="rgb(244,153,21)" fg:x="1073" fg:w="144"/><text x="86.1587%" y="751.50">kernel::plugins::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (144 samples, 11.53%)</title><rect x="85.9087%" y="725" width="11.5292%" height="15" fill="rgb(241,51,45)" fg:x="1073" fg:w="144"/><text x="86.1587%" y="735.50">kernel::plugins::..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (144 samples, 11.53%)</title><rect x="85.9087%" y="709" width="11.5292%" height="15" fill="rgb(235,30,2)" fg:x="1073" fg:w="144"/><text x="86.1587%" y="719.50">&lt;engine::session:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (123 samples, 9.85%)</title><rect x="87.5901%" y="693" width="9.8479%" height="15" fill="rgb(230,138,17)" fg:x="1094" fg:w="123"/><text x="87.8401%" y="703.50">kernel::plugin..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (122 samples, 9.77%)</title><rect x="87.6701%" y="677" width="9.7678%" height="15" fill="rgb(225,227,46)" fg:x="1095" fg:w="122"/><text x="87.9201%" y="687.50">&lt;plugins_dynli..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (122 samples, 9.77%)</title><rect x="87.6701%" y="661" width="9.7678%" height="15" fill="rgb(242,120,29)" fg:x="1095" fg:w="122"/><text x="87.9201%" y="671.50">kernel::plugin..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (122 samples, 9.77%)</title><rect x="87.6701%" y="645" width="9.7678%" height="15" fill="rgb(214,204,1)" fg:x="1095" fg:w="122"/><text x="87.9201%" y="655.50">core::ops::fun..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (122 samples, 9.77%)</title><rect x="87.6701%" y="629" width="9.7678%" height="15" fill="rgb(239,202,12)" fg:x="1095" fg:w="122"/><text x="87.9201%" y="639.50">kernel::plugin..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (122 samples, 9.77%)</title><rect x="87.6701%" y="613" width="9.7678%" height="15" fill="rgb(221,101,34)" fg:x="1095" fg:w="122"/><text x="87.9201%" y="623.50">core::ops::fun..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (121 samples, 9.69%)</title><rect x="87.7502%" y="597" width="9.6878%" height="15" fill="rgb(215,109,50)" fg:x="1096" fg:w="121"/><text x="88.0002%" y="607.50">&lt;engine::sessi..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="97.2778%" y="581" width="0.1601%" height="15" fill="rgb(229,199,13)" fg:x="1215" fg:w="2"/><text x="97.5278%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="97.3579%" y="565" width="0.0801%" height="15" fill="rgb(253,82,26)" fg:x="1216" fg:w="1"/><text x="97.6079%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.3579%" y="549" width="0.0801%" height="15" fill="rgb(205,57,20)" fg:x="1216" fg:w="1"/><text x="97.6079%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="97.4380%" y="725" width="0.0801%" height="15" fill="rgb(207,57,32)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="97.5180%" y="709" width="0.3203%" height="15" fill="rgb(235,173,42)" fg:x="1218" fg:w="4"/><text x="97.7680%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="97.5180%" y="693" width="0.3203%" height="15" fill="rgb(230,147,10)" fg:x="1218" fg:w="4"/><text x="97.7680%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="97.5981%" y="677" width="0.2402%" height="15" fill="rgb(220,135,16)" fg:x="1219" fg:w="3"/><text x="97.8481%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="97.5981%" y="661" width="0.2402%" height="15" fill="rgb(239,28,10)" fg:x="1219" fg:w="3"/><text x="97.8481%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="97.5981%" y="645" width="0.2402%" height="15" fill="rgb(220,197,38)" fg:x="1219" fg:w="3"/><text x="97.8481%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.6781%" y="629" width="0.1601%" height="15" fill="rgb(217,13,1)" fg:x="1220" fg:w="2"/><text x="97.9281%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.6781%" y="613" width="0.1601%" height="15" fill="rgb(225,34,30)" fg:x="1220" fg:w="2"/><text x="97.9281%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.6781%" y="597" width="0.1601%" height="15" fill="rgb(234,19,10)" fg:x="1220" fg:w="2"/><text x="97.9281%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.6781%" y="581" width="0.1601%" height="15" fill="rgb(237,68,47)" fg:x="1220" fg:w="2"/><text x="97.9281%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="97.6781%" y="565" width="0.1601%" height="15" fill="rgb(210,125,44)" fg:x="1220" fg:w="2"/><text x="97.9281%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.6781%" y="549" width="0.1601%" height="15" fill="rgb(206,207,2)" fg:x="1220" fg:w="2"/><text x="97.9281%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.6781%" y="533" width="0.1601%" height="15" fill="rgb(207,198,43)" fg:x="1220" fg:w="2"/><text x="97.9281%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.6781%" y="517" width="0.1601%" height="15" fill="rgb(249,58,35)" fg:x="1220" fg:w="2"/><text x="97.9281%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.7582%" y="501" width="0.0801%" height="15" fill="rgb(236,66,11)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7582%" y="485" width="0.0801%" height="15" fill="rgb(215,104,28)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.7582%" y="469" width="0.0801%" height="15" fill="rgb(221,172,14)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.9183%" y="645" width="0.0801%" height="15" fill="rgb(251,215,21)" fg:x="1223" fg:w="1"/><text x="98.1683%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9183%" y="629" width="0.0801%" height="15" fill="rgb(215,154,36)" fg:x="1223" fg:w="1"/><text x="98.1683%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.1585%" y="613" width="0.0801%" height="15" fill="rgb(245,85,25)" fg:x="1226" fg:w="1"/><text x="98.4085%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2386%" y="613" width="0.0801%" height="15" fill="rgb(254,37,10)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2386%" y="597" width="0.0801%" height="15" fill="rgb(248,63,2)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.3187%" y="517" width="0.0801%" height="15" fill="rgb(222,195,50)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="527.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="97.8383%" y="693" width="0.6405%" height="15" fill="rgb(218,157,4)" fg:x="1222" fg:w="8"/><text x="98.0883%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="97.8383%" y="677" width="0.6405%" height="15" fill="rgb(217,186,23)" fg:x="1222" fg:w="8"/><text x="98.0883%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="97.8383%" y="661" width="0.6405%" height="15" fill="rgb(211,100,12)" fg:x="1222" fg:w="8"/><text x="98.0883%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="97.9984%" y="645" width="0.4804%" height="15" fill="rgb(252,7,25)" fg:x="1224" fg:w="6"/><text x="98.2484%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="98.0785%" y="629" width="0.4003%" height="15" fill="rgb(219,6,30)" fg:x="1225" fg:w="5"/><text x="98.3285%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.3187%" y="613" width="0.1601%" height="15" fill="rgb(228,68,4)" fg:x="1228" fg:w="2"/><text x="98.5687%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3187%" y="597" width="0.1601%" height="15" fill="rgb(238,104,53)" fg:x="1228" fg:w="2"/><text x="98.5687%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.3187%" y="581" width="0.1601%" height="15" fill="rgb(209,110,10)" fg:x="1228" fg:w="2"/><text x="98.5687%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3187%" y="565" width="0.1601%" height="15" fill="rgb(214,190,40)" fg:x="1228" fg:w="2"/><text x="98.5687%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.3187%" y="549" width="0.1601%" height="15" fill="rgb(222,103,43)" fg:x="1228" fg:w="2"/><text x="98.5687%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.3187%" y="533" width="0.1601%" height="15" fill="rgb(247,105,41)" fg:x="1228" fg:w="2"/><text x="98.5687%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.3987%" y="517" width="0.0801%" height="15" fill="rgb(249,173,41)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3987%" y="501" width="0.0801%" height="15" fill="rgb(229,171,54)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.3987%" y="485" width="0.0801%" height="15" fill="rgb(223,229,10)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.3987%" y="469" width="0.0801%" height="15" fill="rgb(243,218,44)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.3987%" y="453" width="0.0801%" height="15" fill="rgb(215,188,5)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3987%" y="437" width="0.0801%" height="15" fill="rgb(239,133,39)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.16%)</title><rect x="98.4788%" y="661" width="0.1601%" height="15" fill="rgb(229,215,45)" fg:x="1230" fg:w="2"/><text x="98.7288%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.6389%" y="581" width="0.0801%" height="15" fill="rgb(237,222,4)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6389%" y="565" width="0.0801%" height="15" fill="rgb(219,191,34)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.6389%" y="549" width="0.0801%" height="15" fill="rgb(236,20,29)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6389%" y="533" width="0.0801%" height="15" fill="rgb(206,19,36)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="98.6389%" y="613" width="0.1601%" height="15" fill="rgb(234,192,51)" fg:x="1232" fg:w="2"/><text x="98.8889%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.6389%" y="597" width="0.1601%" height="15" fill="rgb(243,23,26)" fg:x="1232" fg:w="2"/><text x="98.8889%" y="607.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.7190%" y="581" width="0.0801%" height="15" fill="rgb(253,92,16)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.7190%" y="565" width="0.0801%" height="15" fill="rgb(218,82,11)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.7190%" y="549" width="0.0801%" height="15" fill="rgb(214,207,16)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.7190%" y="533" width="0.0801%" height="15" fill="rgb(207,202,38)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="543.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.7190%" y="517" width="0.0801%" height="15" fill="rgb(216,51,45)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="98.7190%" y="501" width="0.0801%" height="15" fill="rgb(233,185,52)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7190%" y="485" width="0.0801%" height="15" fill="rgb(217,21,41)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.7990%" y="613" width="0.0801%" height="15" fill="rgb(251,137,39)" fg:x="1234" fg:w="1"/><text x="99.0490%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.7990%" y="597" width="0.0801%" height="15" fill="rgb(241,93,18)" fg:x="1234" fg:w="1"/><text x="99.0490%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="98.7990%" y="581" width="0.0801%" height="15" fill="rgb(212,224,28)" fg:x="1234" fg:w="1"/><text x="99.0490%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="98.6389%" y="661" width="0.3203%" height="15" fill="rgb(221,151,41)" fg:x="1232" fg:w="4"/><text x="98.8889%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.6389%" y="645" width="0.3203%" height="15" fill="rgb(248,215,5)" fg:x="1232" fg:w="4"/><text x="98.8889%" y="655.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.6389%" y="629" width="0.3203%" height="15" fill="rgb(207,34,23)" fg:x="1232" fg:w="4"/><text x="98.8889%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8791%" y="613" width="0.0801%" height="15" fill="rgb(235,209,54)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8791%" y="597" width="0.0801%" height="15" fill="rgb(205,12,35)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.8791%" y="581" width="0.0801%" height="15" fill="rgb(250,83,24)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8791%" y="565" width="0.0801%" height="15" fill="rgb(241,127,6)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8791%" y="549" width="0.0801%" height="15" fill="rgb(207,19,46)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.8791%" y="533" width="0.0801%" height="15" fill="rgb(233,9,54)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8791%" y="517" width="0.0801%" height="15" fill="rgb(209,229,48)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8791%" y="501" width="0.0801%" height="15" fill="rgb(231,110,47)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.8791%" y="485" width="0.0801%" height="15" fill="rgb(225,200,45)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8791%" y="469" width="0.0801%" height="15" fill="rgb(208,153,32)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8791%" y="453" width="0.0801%" height="15" fill="rgb(208,35,2)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.8791%" y="437" width="0.0801%" height="15" fill="rgb(252,120,50)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8791%" y="421" width="0.0801%" height="15" fill="rgb(251,83,29)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8791%" y="405" width="0.0801%" height="15" fill="rgb(207,183,43)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (15 samples, 1.20%)</title><rect x="97.8383%" y="709" width="1.2010%" height="15" fill="rgb(230,100,25)" fg:x="1222" fg:w="15"/><text x="98.0883%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="98.4788%" y="693" width="0.5604%" height="15" fill="rgb(231,117,24)" fg:x="1230" fg:w="7"/><text x="98.7288%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="98.4788%" y="677" width="0.5604%" height="15" fill="rgb(222,12,48)" fg:x="1230" fg:w="7"/><text x="98.7288%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.9592%" y="661" width="0.0801%" height="15" fill="rgb(251,18,48)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.9592%" y="645" width="0.0801%" height="15" fill="rgb(242,225,24)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.9592%" y="629" width="0.0801%" height="15" fill="rgb(253,162,42)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.9592%" y="613" width="0.0801%" height="15" fill="rgb(212,34,6)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (21 samples, 1.68%)</title><rect x="97.4380%" y="741" width="1.6813%" height="15" fill="rgb(237,158,6)" fg:x="1217" fg:w="21"/><text x="97.6880%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (20 samples, 1.60%)</title><rect x="97.5180%" y="725" width="1.6013%" height="15" fill="rgb(219,93,8)" fg:x="1218" fg:w="20"/><text x="97.7680%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.0392%" y="709" width="0.0801%" height="15" fill="rgb(222,112,13)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.0392%" y="693" width="0.0801%" height="15" fill="rgb(230,77,36)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.0392%" y="677" width="0.0801%" height="15" fill="rgb(236,71,34)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0392%" y="661" width="0.0801%" height="15" fill="rgb(211,176,26)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0392%" y="645" width="0.0801%" height="15" fill="rgb(235,184,14)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0392%" y="629" width="0.0801%" height="15" fill="rgb(205,205,54)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0392%" y="613" width="0.0801%" height="15" fill="rgb(219,118,46)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.0392%" y="597" width="0.0801%" height="15" fill="rgb(219,187,54)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0392%" y="581" width="0.0801%" height="15" fill="rgb(228,42,5)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.1994%" y="469" width="0.0801%" height="15" fill="rgb(232,134,35)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.1994%" y="453" width="0.0801%" height="15" fill="rgb(248,57,6)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.1994%" y="437" width="0.0801%" height="15" fill="rgb(244,78,46)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.1994%" y="421" width="0.0801%" height="15" fill="rgb(220,132,41)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.1994%" y="405" width="0.0801%" height="15" fill="rgb(238,14,54)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.1994%" y="389" width="0.0801%" height="15" fill="rgb(206,75,49)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.1994%" y="373" width="0.0801%" height="15" fill="rgb(234,70,47)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.1994%" y="357" width="0.0801%" height="15" fill="rgb(225,66,18)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.1994%" y="341" width="0.0801%" height="15" fill="rgb(242,56,6)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.1994%" y="325" width="0.0801%" height="15" fill="rgb(221,184,32)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.1994%" y="309" width="0.0801%" height="15" fill="rgb(209,16,24)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="99.1994%" y="293" width="0.0801%" height="15" fill="rgb(215,7,25)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="99.1994%" y="277" width="0.0801%" height="15" fill="rgb(218,149,6)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="99.1994%" y="261" width="0.0801%" height="15" fill="rgb(251,164,43)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.1994%" y="245" width="0.0801%" height="15" fill="rgb(205,140,26)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (24 samples, 1.92%)</title><rect x="97.4380%" y="757" width="1.9215%" height="15" fill="rgb(246,4,17)" fg:x="1217" fg:w="24"/><text x="97.6880%" y="767.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="99.1193%" y="741" width="0.2402%" height="15" fill="rgb(241,107,34)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="99.1193%" y="725" width="0.2402%" height="15" fill="rgb(217,221,1)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="99.1193%" y="709" width="0.2402%" height="15" fill="rgb(229,28,23)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="719.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="99.1193%" y="693" width="0.2402%" height="15" fill="rgb(225,217,45)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="99.1193%" y="677" width="0.2402%" height="15" fill="rgb(246,170,39)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="99.1193%" y="661" width="0.2402%" height="15" fill="rgb(205,183,44)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="99.1193%" y="645" width="0.2402%" height="15" fill="rgb(206,200,29)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="655.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="99.1193%" y="629" width="0.2402%" height="15" fill="rgb(245,56,1)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="99.1193%" y="613" width="0.2402%" height="15" fill="rgb(253,122,1)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="99.1193%" y="597" width="0.2402%" height="15" fill="rgb(219,155,50)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="99.1193%" y="581" width="0.2402%" height="15" fill="rgb(226,14,49)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="591.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="99.1193%" y="565" width="0.2402%" height="15" fill="rgb(216,109,54)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="99.1193%" y="549" width="0.2402%" height="15" fill="rgb(209,180,14)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="99.1193%" y="533" width="0.2402%" height="15" fill="rgb(245,113,8)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="99.1193%" y="517" width="0.2402%" height="15" fill="rgb(246,126,24)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="527.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="99.1193%" y="501" width="0.2402%" height="15" fill="rgb(220,77,11)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="99.1994%" y="485" width="0.1601%" height="15" fill="rgb(229,44,8)" fg:x="1239" fg:w="2"/><text x="99.4494%" y="495.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="99.2794%" y="469" width="0.0801%" height="15" fill="rgb(211,151,33)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="479.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="99.2794%" y="453" width="0.0801%" height="15" fill="rgb(223,50,37)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.2794%" y="437" width="0.0801%" height="15" fill="rgb(207,138,32)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.2794%" y="421" width="0.0801%" height="15" fill="rgb(241,19,54)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.2794%" y="405" width="0.0801%" height="15" fill="rgb(254,74,52)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.2794%" y="389" width="0.0801%" height="15" fill="rgb(235,134,9)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.2794%" y="373" width="0.0801%" height="15" fill="rgb(246,190,27)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.2794%" y="357" width="0.0801%" height="15" fill="rgb(210,159,52)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.2794%" y="341" width="0.0801%" height="15" fill="rgb(213,153,4)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.2794%" y="325" width="0.0801%" height="15" fill="rgb(222,217,31)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.2794%" y="309" width="0.0801%" height="15" fill="rgb(219,121,28)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.2794%" y="293" width="0.0801%" height="15" fill="rgb(242,229,44)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.2794%" y="277" width="0.0801%" height="15" fill="rgb(205,18,44)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="99.2794%" y="261" width="0.0801%" height="15" fill="rgb(240,84,34)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="99.2794%" y="245" width="0.0801%" height="15" fill="rgb(208,23,25)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="99.2794%" y="229" width="0.0801%" height="15" fill="rgb(239,65,6)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.2794%" y="213" width="0.0801%" height="15" fill="rgb(222,86,0)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.3595%" y="725" width="0.0801%" height="15" fill="rgb(233,72,40)" fg:x="1241" fg:w="1"/><text x="99.6095%" y="735.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.3595%" y="709" width="0.0801%" height="15" fill="rgb(218,153,22)" fg:x="1241" fg:w="1"/><text x="99.6095%" y="719.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="99.3595%" y="757" width="0.1601%" height="15" fill="rgb(216,227,21)" fg:x="1241" fg:w="2"/><text x="99.6095%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="99.3595%" y="741" width="0.1601%" height="15" fill="rgb(206,30,3)" fg:x="1241" fg:w="2"/><text x="99.6095%" y="751.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.4396%" y="725" width="0.0801%" height="15" fill="rgb(235,47,48)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="735.50"></text></g><g><title>&lt;plugins_core::chat::parser::SpeakActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.4396%" y="709" width="0.0801%" height="15" fill="rgb(249,101,39)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.5196%" y="757" width="0.0801%" height="15" fill="rgb(219,68,12)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="767.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="99.5997%" y="757" width="0.0801%" height="15" fill="rgb(235,71,54)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="767.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="99.6797%" y="709" width="0.1601%" height="15" fill="rgb(236,173,42)" fg:x="1245" fg:w="2"/><text x="99.9297%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.6797%" y="693" width="0.1601%" height="15" fill="rgb(249,184,22)" fg:x="1245" fg:w="2"/><text x="99.9297%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.6797%" y="677" width="0.1601%" height="15" fill="rgb(243,217,22)" fg:x="1245" fg:w="2"/><text x="99.9297%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="99.6797%" y="661" width="0.1601%" height="15" fill="rgb(209,173,0)" fg:x="1245" fg:w="2"/><text x="99.9297%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7598%" y="645" width="0.0801%" height="15" fill="rgb(224,64,31)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.7598%" y="629" width="0.0801%" height="15" fill="rgb(252,58,39)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.7598%" y="613" width="0.0801%" height="15" fill="rgb(214,104,22)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.7598%" y="597" width="0.0801%" height="15" fill="rgb(233,160,5)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="99.7598%" y="581" width="0.0801%" height="15" fill="rgb(217,188,8)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.7598%" y="565" width="0.0801%" height="15" fill="rgb(235,9,47)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.8399%" y="709" width="0.0801%" height="15" fill="rgb(219,103,15)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="719.50"></text></g><g><title>all (1,249 samples, 100%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(217,83,31)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1151.50"></text></g><g><title>simple-150160d8 (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(236,56,24)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1135.50">simple-150160d8</text></g><g><title>_start (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(230,126,27)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1119.50">_start</text></g><g><title>__libc_start_main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(206,65,43)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1103.50">__libc_start_main</text></g><g><title>main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(250,125,28)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1087.50">main</text></g><g><title>std::rt::lang_start_internal (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(247,179,53)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1071.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(243,197,21)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(237,144,43)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(236,198,30)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1023.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,249 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(247,36,5)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1007.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,249 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(245,203,15)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,249 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(227,125,51)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,249 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(230,130,13)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="959.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,249 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(232,40,46)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="943.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,249 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(213,3,44)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="927.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,249 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(239,161,30)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="911.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(231,191,11)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="895.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,249 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(214,97,49)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="879.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,249 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(252,222,2)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="863.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (461 samples, 36.91%)</title><rect x="63.0905%" y="837" width="36.9095%" height="15" fill="rgb(236,164,34)" fg:x="788" fg:w="461"/><text x="63.3405%" y="847.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (461 samples, 36.91%)</title><rect x="63.0905%" y="821" width="36.9095%" height="15" fill="rgb(214,34,54)" fg:x="788" fg:w="461"/><text x="63.3405%" y="831.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (461 samples, 36.91%)</title><rect x="63.0905%" y="805" width="36.9095%" height="15" fill="rgb(219,108,29)" fg:x="788" fg:w="461"/><text x="63.3405%" y="815.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (176 samples, 14.09%)</title><rect x="85.9087%" y="789" width="14.0913%" height="15" fill="rgb(206,157,9)" fg:x="1073" fg:w="176"/><text x="86.1587%" y="799.50">engine::session::Sess..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (176 samples, 14.09%)</title><rect x="85.9087%" y="773" width="14.0913%" height="15" fill="rgb(230,67,35)" fg:x="1073" fg:w="176"/><text x="86.1587%" y="783.50">engine::session::Sess..</text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="99.6797%" y="757" width="0.3203%" height="15" fill="rgb(234,183,23)" fg:x="1245" fg:w="4"/><text x="99.9297%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="99.6797%" y="741" width="0.3203%" height="15" fill="rgb(214,123,37)" fg:x="1245" fg:w="4"/><text x="99.9297%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="99.6797%" y="725" width="0.3203%" height="15" fill="rgb(246,95,28)" fg:x="1245" fg:w="4"/><text x="99.9297%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.9199%" y="709" width="0.0801%" height="15" fill="rgb(207,89,5)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.9199%" y="693" width="0.0801%" height="15" fill="rgb(254,169,2)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.9199%" y="677" width="0.0801%" height="15" fill="rgb(237,192,42)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.9199%" y="661" width="0.0801%" height="15" fill="rgb(250,5,42)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="671.50"></text></g></svg></svg>