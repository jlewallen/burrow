<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1142" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1125.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1125.00"> </text><svg id="frames" x="10" width="1180" total_samples="1234"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="0.2431%" y="725" width="0.1621%" height="15" fill="rgb(248,87,8)" fg:x="3" fg:w="2"/><text x="0.4931%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3241%" y="709" width="0.0810%" height="15" fill="rgb(250,160,50)" fg:x="4" fg:w="1"/><text x="0.5741%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4052%" y="693" width="0.0810%" height="15" fill="rgb(246,165,25)" fg:x="5" fg:w="1"/><text x="0.6552%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5673%" y="629" width="0.0810%" height="15" fill="rgb(249,219,3)" fg:x="7" fg:w="1"/><text x="0.8173%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.6483%" y="629" width="0.0810%" height="15" fill="rgb(226,66,5)" fg:x="8" fg:w="1"/><text x="0.8983%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.7293%" y="613" width="0.0810%" height="15" fill="rgb(250,220,43)" fg:x="9" fg:w="1"/><text x="0.9793%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.7293%" y="597" width="0.0810%" height="15" fill="rgb(225,111,31)" fg:x="9" fg:w="1"/><text x="0.9793%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7293%" y="581" width="0.0810%" height="15" fill="rgb(248,106,18)" fg:x="9" fg:w="1"/><text x="0.9793%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.8104%" y="597" width="0.1621%" height="15" fill="rgb(220,226,45)" fg:x="10" fg:w="2"/><text x="1.0604%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.9724%" y="597" width="0.1621%" height="15" fill="rgb(208,58,53)" fg:x="12" fg:w="2"/><text x="1.2224%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.9724%" y="581" width="0.1621%" height="15" fill="rgb(209,133,1)" fg:x="12" fg:w="2"/><text x="1.2224%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1345%" y="581" width="0.0810%" height="15" fill="rgb(228,216,27)" fg:x="14" fg:w="1"/><text x="1.3845%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.2156%" y="581" width="0.1621%" height="15" fill="rgb(238,155,2)" fg:x="15" fg:w="2"/><text x="1.4656%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.2156%" y="565" width="0.1621%" height="15" fill="rgb(244,99,37)" fg:x="15" fg:w="2"/><text x="1.4656%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3776%" y="565" width="0.0810%" height="15" fill="rgb(254,32,3)" fg:x="17" fg:w="1"/><text x="1.6276%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="1.1345%" y="597" width="0.4052%" height="15" fill="rgb(234,46,50)" fg:x="14" fg:w="5"/><text x="1.3845%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="1.3776%" y="581" width="0.1621%" height="15" fill="rgb(232,118,51)" fg:x="17" fg:w="2"/><text x="1.6276%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.4587%" y="565" width="0.0810%" height="15" fill="rgb(207,24,32)" fg:x="18" fg:w="1"/><text x="1.7087%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4587%" y="549" width="0.0810%" height="15" fill="rgb(208,107,43)" fg:x="18" fg:w="1"/><text x="1.7087%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="0.7293%" y="629" width="0.8914%" height="15" fill="rgb(231,28,9)" fg:x="9" fg:w="11"/><text x="0.9793%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="0.8104%" y="613" width="0.8104%" height="15" fill="rgb(241,204,15)" fg:x="10" fg:w="10"/><text x="1.0604%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::Write::write_fmt::Adapter&lt;std::sys::unix::stdio::Stderr&gt;&gt; (1 samples, 0.08%)</title><rect x="1.5397%" y="597" width="0.0810%" height="15" fill="rgb(214,54,15)" fg:x="19" fg:w="1"/><text x="1.7897%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.22%)</title><rect x="0.4862%" y="661" width="1.2156%" height="15" fill="rgb(230,12,28)" fg:x="6" fg:w="15"/><text x="0.7362%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.22%)</title><rect x="0.4862%" y="645" width="1.2156%" height="15" fill="rgb(221,171,5)" fg:x="6" fg:w="15"/><text x="0.7362%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::Write::write_fmt::Adapter&lt;std::sys::unix::stdio::Stderr&gt;&gt; (1 samples, 0.08%)</title><rect x="1.6207%" y="629" width="0.0810%" height="15" fill="rgb(207,72,25)" fg:x="20" fg:w="1"/><text x="1.8707%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (17 samples, 1.38%)</title><rect x="0.4052%" y="725" width="1.3776%" height="15" fill="rgb(249,79,37)" fg:x="5" fg:w="17"/><text x="0.6552%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.38%)</title><rect x="0.4052%" y="709" width="1.3776%" height="15" fill="rgb(209,98,49)" fg:x="5" fg:w="17"/><text x="0.6552%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (16 samples, 1.30%)</title><rect x="0.4862%" y="693" width="1.2966%" height="15" fill="rgb(221,62,13)" fg:x="6" fg:w="16"/><text x="0.7362%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.30%)</title><rect x="0.4862%" y="677" width="1.2966%" height="15" fill="rgb(223,39,6)" fg:x="6" fg:w="16"/><text x="0.7362%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7018%" y="661" width="0.0810%" height="15" fill="rgb(246,163,20)" fg:x="21" fg:w="1"/><text x="1.9518%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.70%)</title><rect x="0.1621%" y="741" width="1.7018%" height="15" fill="rgb(211,111,29)" fg:x="2" fg:w="21"/><text x="0.4121%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="1.7828%" y="725" width="0.0810%" height="15" fill="rgb(243,118,5)" fg:x="22" fg:w="1"/><text x="2.0328%" y="735.50"></text></g><g><title>dlerror (4 samples, 0.32%)</title><rect x="1.9449%" y="645" width="0.3241%" height="15" fill="rgb(240,144,52)" fg:x="24" fg:w="4"/><text x="2.1949%" y="655.50"></text></g><g><title>__asprintf (3 samples, 0.24%)</title><rect x="2.0259%" y="629" width="0.2431%" height="15" fill="rgb(244,158,36)" fg:x="25" fg:w="3"/><text x="2.2759%" y="639.50"></text></g><g><title>_IO_setb (1 samples, 0.08%)</title><rect x="2.1880%" y="613" width="0.0810%" height="15" fill="rgb(241,109,37)" fg:x="27" fg:w="1"/><text x="2.4380%" y="623.50"></text></g><g><title>libloading::os::unix::Library::open (13 samples, 1.05%)</title><rect x="1.9449%" y="661" width="1.0535%" height="15" fill="rgb(213,95,32)" fg:x="24" fg:w="13"/><text x="2.1949%" y="671.50"></text></g><g><title>dlopen (9 samples, 0.73%)</title><rect x="2.2690%" y="645" width="0.7293%" height="15" fill="rgb(252,193,9)" fg:x="28" fg:w="9"/><text x="2.5190%" y="655.50"></text></g><g><title>_dl_catch_error (9 samples, 0.73%)</title><rect x="2.2690%" y="629" width="0.7293%" height="15" fill="rgb(225,213,21)" fg:x="28" fg:w="9"/><text x="2.5190%" y="639.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.73%)</title><rect x="2.2690%" y="613" width="0.7293%" height="15" fill="rgb(220,172,46)" fg:x="28" fg:w="9"/><text x="2.5190%" y="623.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.73%)</title><rect x="2.2690%" y="597" width="0.7293%" height="15" fill="rgb(235,75,41)" fg:x="28" fg:w="9"/><text x="2.5190%" y="607.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.73%)</title><rect x="2.2690%" y="581" width="0.7293%" height="15" fill="rgb(213,86,9)" fg:x="28" fg:w="9"/><text x="2.5190%" y="591.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (14 samples, 1.13%)</title><rect x="1.9449%" y="677" width="1.1345%" height="15" fill="rgb(238,127,51)" fg:x="24" fg:w="14"/><text x="2.1949%" y="687.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="2.9984%" y="661" width="0.0810%" height="15" fill="rgb(215,2,54)" fg:x="37" fg:w="1"/><text x="3.2484%" y="671.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="2.9984%" y="645" width="0.0810%" height="15" fill="rgb(245,80,6)" fg:x="37" fg:w="1"/><text x="3.2484%" y="655.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="2.9984%" y="629" width="0.0810%" height="15" fill="rgb(233,106,42)" fg:x="37" fg:w="1"/><text x="3.2484%" y="639.50"></text></g><g><title>engine::session::Session::initialize (15 samples, 1.22%)</title><rect x="1.9449%" y="709" width="1.2156%" height="15" fill="rgb(244,86,38)" fg:x="24" fg:w="15"/><text x="2.1949%" y="719.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (15 samples, 1.22%)</title><rect x="1.9449%" y="693" width="1.2156%" height="15" fill="rgb(242,167,7)" fg:x="24" fg:w="15"/><text x="2.1949%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="3.0794%" y="677" width="0.0810%" height="15" fill="rgb(218,216,3)" fg:x="38" fg:w="1"/><text x="3.3294%" y="687.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (18 samples, 1.46%)</title><rect x="1.8639%" y="741" width="1.4587%" height="15" fill="rgb(206,136,36)" fg:x="23" fg:w="18"/><text x="2.1139%" y="751.50"></text></g><g><title>engine::session::Session::new (18 samples, 1.46%)</title><rect x="1.8639%" y="725" width="1.4587%" height="15" fill="rgb(206,206,15)" fg:x="23" fg:w="18"/><text x="2.1139%" y="735.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="3.1605%" y="709" width="0.1621%" height="15" fill="rgb(207,163,34)" fg:x="39" fg:w="2"/><text x="3.4105%" y="719.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="3.1605%" y="693" width="0.1621%" height="15" fill="rgb(240,127,22)" fg:x="39" fg:w="2"/><text x="3.4105%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="3.1605%" y="677" width="0.1621%" height="15" fill="rgb(227,49,5)" fg:x="39" fg:w="2"/><text x="3.4105%" y="687.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (2 samples, 0.16%)</title><rect x="3.1605%" y="661" width="0.1621%" height="15" fill="rgb(231,8,6)" fg:x="39" fg:w="2"/><text x="3.4105%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.2415%" y="645" width="0.0810%" height="15" fill="rgb(223,21,24)" fg:x="40" fg:w="1"/><text x="3.4915%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.3225%" y="725" width="0.0810%" height="15" fill="rgb(244,44,52)" fg:x="41" fg:w="1"/><text x="3.5725%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.3225%" y="709" width="0.0810%" height="15" fill="rgb(207,73,28)" fg:x="41" fg:w="1"/><text x="3.5725%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.3225%" y="693" width="0.0810%" height="15" fill="rgb(234,215,10)" fg:x="41" fg:w="1"/><text x="3.5725%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="3.3225%" y="677" width="0.0810%" height="15" fill="rgb(236,85,3)" fg:x="41" fg:w="1"/><text x="3.5725%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="3.3225%" y="661" width="0.0810%" height="15" fill="rgb(236,102,39)" fg:x="41" fg:w="1"/><text x="3.5725%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="3.3225%" y="645" width="0.0810%" height="15" fill="rgb(243,50,8)" fg:x="41" fg:w="1"/><text x="3.5725%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="3.3225%" y="629" width="0.0810%" height="15" fill="rgb(207,111,4)" fg:x="41" fg:w="1"/><text x="3.5725%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="3.3225%" y="613" width="0.0810%" height="15" fill="rgb(230,52,42)" fg:x="41" fg:w="1"/><text x="3.5725%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="3.4036%" y="725" width="0.0810%" height="15" fill="rgb(252,178,50)" fg:x="42" fg:w="1"/><text x="3.6536%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.4036%" y="709" width="0.0810%" height="15" fill="rgb(234,46,35)" fg:x="42" fg:w="1"/><text x="3.6536%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="3.4036%" y="693" width="0.0810%" height="15" fill="rgb(228,69,37)" fg:x="42" fg:w="1"/><text x="3.6536%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="3.4846%" y="725" width="0.0810%" height="15" fill="rgb(221,21,11)" fg:x="43" fg:w="1"/><text x="3.7346%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.4846%" y="709" width="0.0810%" height="15" fill="rgb(223,56,9)" fg:x="43" fg:w="1"/><text x="3.7346%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.4846%" y="693" width="0.0810%" height="15" fill="rgb(234,30,19)" fg:x="43" fg:w="1"/><text x="3.7346%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="3.5656%" y="709" width="0.0810%" height="15" fill="rgb(211,64,54)" fg:x="44" fg:w="1"/><text x="3.8156%" y="719.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="3.6467%" y="709" width="0.1621%" height="15" fill="rgb(250,189,5)" fg:x="45" fg:w="2"/><text x="3.8967%" y="719.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="3.6467%" y="693" width="0.1621%" height="15" fill="rgb(214,180,13)" fg:x="45" fg:w="2"/><text x="3.8967%" y="703.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="3.6467%" y="677" width="0.1621%" height="15" fill="rgb(238,40,40)" fg:x="45" fg:w="2"/><text x="3.8967%" y="687.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="3.6467%" y="661" width="0.1621%" height="15" fill="rgb(214,101,38)" fg:x="45" fg:w="2"/><text x="3.8967%" y="671.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="3.6467%" y="645" width="0.1621%" height="15" fill="rgb(242,65,53)" fg:x="45" fg:w="2"/><text x="3.8967%" y="655.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="3.6467%" y="629" width="0.1621%" height="15" fill="rgb(230,22,45)" fg:x="45" fg:w="2"/><text x="3.8967%" y="639.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="3.6467%" y="613" width="0.1621%" height="15" fill="rgb(223,77,1)" fg:x="45" fg:w="2"/><text x="3.8967%" y="623.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="3.7277%" y="597" width="0.0810%" height="15" fill="rgb(227,33,37)" fg:x="46" fg:w="1"/><text x="3.9777%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="3.8088%" y="629" width="0.0810%" height="15" fill="rgb(224,148,39)" fg:x="47" fg:w="1"/><text x="4.0588%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="3.8898%" y="629" width="0.3241%" height="15" fill="rgb(232,212,39)" fg:x="48" fg:w="4"/><text x="4.1398%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="3.8898%" y="613" width="0.3241%" height="15" fill="rgb(251,172,7)" fg:x="48" fg:w="4"/><text x="4.1398%" y="623.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="3.8898%" y="597" width="0.3241%" height="15" fill="rgb(219,39,9)" fg:x="48" fg:w="4"/><text x="4.1398%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="3.8898%" y="581" width="0.3241%" height="15" fill="rgb(228,118,14)" fg:x="48" fg:w="4"/><text x="4.1398%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.0519%" y="565" width="0.1621%" height="15" fill="rgb(207,140,10)" fg:x="50" fg:w="2"/><text x="4.3019%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="4.2139%" y="613" width="0.0810%" height="15" fill="rgb(227,111,53)" fg:x="52" fg:w="1"/><text x="4.4639%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.2139%" y="597" width="0.0810%" height="15" fill="rgb(216,165,16)" fg:x="52" fg:w="1"/><text x="4.4639%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="4.2950%" y="613" width="0.2431%" height="15" fill="rgb(226,111,18)" fg:x="53" fg:w="3"/><text x="4.5450%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.3760%" y="597" width="0.1621%" height="15" fill="rgb(251,27,17)" fg:x="54" fg:w="2"/><text x="4.6260%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.4571%" y="581" width="0.0810%" height="15" fill="rgb(254,69,9)" fg:x="55" fg:w="1"/><text x="4.7071%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.4571%" y="565" width="0.0810%" height="15" fill="rgb(234,140,37)" fg:x="55" fg:w="1"/><text x="4.7071%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="4.5381%" y="597" width="0.1621%" height="15" fill="rgb(220,93,8)" fg:x="56" fg:w="2"/><text x="4.7881%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.5381%" y="581" width="0.1621%" height="15" fill="rgb(236,113,3)" fg:x="56" fg:w="2"/><text x="4.7881%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.6191%" y="565" width="0.0810%" height="15" fill="rgb(234,108,23)" fg:x="57" fg:w="1"/><text x="4.8691%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.7002%" y="581" width="0.0810%" height="15" fill="rgb(205,114,34)" fg:x="58" fg:w="1"/><text x="4.9502%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.7002%" y="565" width="0.0810%" height="15" fill="rgb(236,200,45)" fg:x="58" fg:w="1"/><text x="4.9502%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.7002%" y="549" width="0.0810%" height="15" fill="rgb(227,194,29)" fg:x="58" fg:w="1"/><text x="4.9502%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.7002%" y="533" width="0.0810%" height="15" fill="rgb(250,76,42)" fg:x="58" fg:w="1"/><text x="4.9502%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.7812%" y="549" width="0.0810%" height="15" fill="rgb(208,128,8)" fg:x="59" fg:w="1"/><text x="5.0312%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="4.7812%" y="565" width="0.3241%" height="15" fill="rgb(229,209,35)" fg:x="59" fg:w="4"/><text x="5.0312%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="4.8622%" y="549" width="0.2431%" height="15" fill="rgb(215,39,53)" fg:x="60" fg:w="3"/><text x="5.1122%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="4.9433%" y="533" width="0.1621%" height="15" fill="rgb(219,123,41)" fg:x="61" fg:w="2"/><text x="5.1933%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.9433%" y="517" width="0.1621%" height="15" fill="rgb(212,158,18)" fg:x="61" fg:w="2"/><text x="5.1933%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.0243%" y="501" width="0.0810%" height="15" fill="rgb(234,196,53)" fg:x="62" fg:w="1"/><text x="5.2743%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="4.7812%" y="581" width="0.4052%" height="15" fill="rgb(210,139,12)" fg:x="59" fg:w="5"/><text x="5.0312%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.1053%" y="565" width="0.0810%" height="15" fill="rgb(220,116,54)" fg:x="63" fg:w="1"/><text x="5.3553%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.1053%" y="549" width="0.0810%" height="15" fill="rgb(247,103,28)" fg:x="63" fg:w="1"/><text x="5.3553%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="4.7002%" y="597" width="0.5673%" height="15" fill="rgb(253,156,45)" fg:x="58" fg:w="7"/><text x="4.9502%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.1864%" y="581" width="0.0810%" height="15" fill="rgb(237,157,52)" fg:x="64" fg:w="1"/><text x="5.4364%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="4.5381%" y="613" width="0.8104%" height="15" fill="rgb(253,112,16)" fg:x="56" fg:w="10"/><text x="4.7881%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.2674%" y="597" width="0.0810%" height="15" fill="rgb(234,70,18)" fg:x="65" fg:w="1"/><text x="5.5174%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.2674%" y="581" width="0.0810%" height="15" fill="rgb(247,138,19)" fg:x="65" fg:w="1"/><text x="5.5174%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.2674%" y="565" width="0.0810%" height="15" fill="rgb(207,171,1)" fg:x="65" fg:w="1"/><text x="5.5174%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (23 samples, 1.86%)</title><rect x="3.8088%" y="645" width="1.8639%" height="15" fill="rgb(239,213,3)" fg:x="47" fg:w="23"/><text x="4.0588%" y="655.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.46%)</title><rect x="4.2139%" y="629" width="1.4587%" height="15" fill="rgb(226,112,4)" fg:x="52" fg:w="18"/><text x="4.4639%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="5.3485%" y="613" width="0.3241%" height="15" fill="rgb(252,170,12)" fg:x="66" fg:w="4"/><text x="5.5985%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="5.3485%" y="597" width="0.3241%" height="15" fill="rgb(241,106,13)" fg:x="66" fg:w="4"/><text x="5.5985%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="5.4295%" y="581" width="0.2431%" height="15" fill="rgb(225,73,23)" fg:x="67" fg:w="3"/><text x="5.6795%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="5.5105%" y="565" width="0.1621%" height="15" fill="rgb(251,227,29)" fg:x="68" fg:w="2"/><text x="5.7605%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.5916%" y="549" width="0.0810%" height="15" fill="rgb(237,144,13)" fg:x="69" fg:w="1"/><text x="5.8416%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.5916%" y="533" width="0.0810%" height="15" fill="rgb(232,106,46)" fg:x="69" fg:w="1"/><text x="5.8416%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.6726%" y="613" width="0.0810%" height="15" fill="rgb(245,154,53)" fg:x="70" fg:w="1"/><text x="5.9226%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.8347%" y="565" width="0.0810%" height="15" fill="rgb(212,119,47)" fg:x="72" fg:w="1"/><text x="6.0847%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.8347%" y="549" width="0.0810%" height="15" fill="rgb(253,135,25)" fg:x="72" fg:w="1"/><text x="6.0847%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="5.6726%" y="645" width="0.3241%" height="15" fill="rgb(253,208,39)" fg:x="70" fg:w="4"/><text x="5.9226%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="5.6726%" y="629" width="0.3241%" height="15" fill="rgb(226,64,12)" fg:x="70" fg:w="4"/><text x="5.9226%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="5.7536%" y="613" width="0.2431%" height="15" fill="rgb(214,162,37)" fg:x="71" fg:w="3"/><text x="6.0036%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="5.8347%" y="597" width="0.1621%" height="15" fill="rgb(250,104,5)" fg:x="72" fg:w="2"/><text x="6.0847%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="5.8347%" y="581" width="0.1621%" height="15" fill="rgb(220,202,50)" fg:x="72" fg:w="2"/><text x="6.0847%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="5.9157%" y="565" width="0.0810%" height="15" fill="rgb(248,67,38)" fg:x="73" fg:w="1"/><text x="6.1657%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="5.9157%" y="549" width="0.0810%" height="15" fill="rgb(242,94,35)" fg:x="73" fg:w="1"/><text x="6.1657%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.9157%" y="533" width="0.0810%" height="15" fill="rgb(209,78,37)" fg:x="73" fg:w="1"/><text x="6.1657%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.9968%" y="597" width="0.0810%" height="15" fill="rgb(230,126,47)" fg:x="74" fg:w="1"/><text x="6.2468%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="6.0778%" y="597" width="0.1621%" height="15" fill="rgb(222,110,35)" fg:x="75" fg:w="2"/><text x="6.3278%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.1588%" y="581" width="0.0810%" height="15" fill="rgb(233,154,20)" fg:x="76" fg:w="1"/><text x="6.4088%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="6.3209%" y="565" width="0.0810%" height="15" fill="rgb(223,53,50)" fg:x="78" fg:w="1"/><text x="6.5709%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.4830%" y="549" width="0.0810%" height="15" fill="rgb(251,27,26)" fg:x="80" fg:w="1"/><text x="6.7330%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.4830%" y="533" width="0.0810%" height="15" fill="rgb(223,189,16)" fg:x="80" fg:w="1"/><text x="6.7330%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.4830%" y="517" width="0.0810%" height="15" fill="rgb(207,5,54)" fg:x="80" fg:w="1"/><text x="6.7330%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="6.5640%" y="533" width="0.0810%" height="15" fill="rgb(254,124,50)" fg:x="81" fg:w="1"/><text x="6.8140%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.5640%" y="517" width="0.0810%" height="15" fill="rgb(253,193,24)" fg:x="81" fg:w="1"/><text x="6.8140%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.6451%" y="517" width="0.0810%" height="15" fill="rgb(235,170,24)" fg:x="82" fg:w="1"/><text x="6.8951%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="6.5640%" y="549" width="0.2431%" height="15" fill="rgb(222,212,52)" fg:x="81" fg:w="3"/><text x="6.8140%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="6.6451%" y="533" width="0.1621%" height="15" fill="rgb(223,17,45)" fg:x="82" fg:w="2"/><text x="6.8951%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.7261%" y="517" width="0.0810%" height="15" fill="rgb(227,103,26)" fg:x="83" fg:w="1"/><text x="6.9761%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.8071%" y="469" width="0.0810%" height="15" fill="rgb(251,151,25)" fg:x="84" fg:w="1"/><text x="7.0571%" y="479.50"></text></g><g><title>engine::session::Session::flush (42 samples, 3.40%)</title><rect x="3.5656%" y="725" width="3.4036%" height="15" fill="rgb(248,144,29)" fg:x="44" fg:w="42"/><text x="3.8156%" y="735.50">eng..</text></g><g><title>engine::session::state::State::close (39 samples, 3.16%)</title><rect x="3.8088%" y="709" width="3.1605%" height="15" fill="rgb(245,97,16)" fg:x="47" fg:w="39"/><text x="4.0588%" y="719.50">eng..</text></g><g><title>engine::session::state::State::flush_entities (39 samples, 3.16%)</title><rect x="3.8088%" y="693" width="3.1605%" height="15" fill="rgb(220,200,29)" fg:x="47" fg:w="39"/><text x="4.0588%" y="703.50">eng..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (39 samples, 3.16%)</title><rect x="3.8088%" y="677" width="3.1605%" height="15" fill="rgb(206,38,29)" fg:x="47" fg:w="39"/><text x="4.0588%" y="687.50">eng..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (39 samples, 3.16%)</title><rect x="3.8088%" y="661" width="3.1605%" height="15" fill="rgb(245,19,52)" fg:x="47" fg:w="39"/><text x="4.0588%" y="671.50">eng..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.97%)</title><rect x="5.9968%" y="645" width="0.9724%" height="15" fill="rgb(205,67,43)" fg:x="74" fg:w="12"/><text x="6.2468%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.97%)</title><rect x="5.9968%" y="629" width="0.9724%" height="15" fill="rgb(217,128,23)" fg:x="74" fg:w="12"/><text x="6.2468%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.97%)</title><rect x="5.9968%" y="613" width="0.9724%" height="15" fill="rgb(210,109,28)" fg:x="74" fg:w="12"/><text x="6.2468%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.73%)</title><rect x="6.2399%" y="597" width="0.7293%" height="15" fill="rgb(233,181,7)" fg:x="77" fg:w="9"/><text x="6.4899%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.65%)</title><rect x="6.3209%" y="581" width="0.6483%" height="15" fill="rgb(244,11,22)" fg:x="78" fg:w="8"/><text x="6.5709%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="6.4019%" y="565" width="0.5673%" height="15" fill="rgb(205,124,54)" fg:x="79" fg:w="7"/><text x="6.6519%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="6.8071%" y="549" width="0.1621%" height="15" fill="rgb(218,21,27)" fg:x="84" fg:w="2"/><text x="7.0571%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="6.8071%" y="533" width="0.1621%" height="15" fill="rgb(224,153,33)" fg:x="84" fg:w="2"/><text x="7.0571%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="6.8071%" y="517" width="0.1621%" height="15" fill="rgb(240,219,28)" fg:x="84" fg:w="2"/><text x="7.0571%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="6.8071%" y="501" width="0.1621%" height="15" fill="rgb(214,80,29)" fg:x="84" fg:w="2"/><text x="7.0571%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="6.8071%" y="485" width="0.1621%" height="15" fill="rgb(247,148,44)" fg:x="84" fg:w="2"/><text x="7.0571%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="6.8882%" y="469" width="0.0810%" height="15" fill="rgb(243,110,30)" fg:x="85" fg:w="1"/><text x="7.1382%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.8882%" y="453" width="0.0810%" height="15" fill="rgb(243,173,41)" fg:x="85" fg:w="1"/><text x="7.1382%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.8882%" y="437" width="0.0810%" height="15" fill="rgb(225,160,47)" fg:x="85" fg:w="1"/><text x="7.1382%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.8882%" y="421" width="0.0810%" height="15" fill="rgb(215,44,21)" fg:x="85" fg:w="1"/><text x="7.1382%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.57%)</title><rect x="6.9692%" y="709" width="0.5673%" height="15" fill="rgb(248,90,3)" fg:x="86" fg:w="7"/><text x="7.2192%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.57%)</title><rect x="6.9692%" y="693" width="0.5673%" height="15" fill="rgb(220,196,49)" fg:x="86" fg:w="7"/><text x="7.2192%" y="703.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (7 samples, 0.57%)</title><rect x="6.9692%" y="677" width="0.5673%" height="15" fill="rgb(217,138,14)" fg:x="86" fg:w="7"/><text x="7.2192%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.57%)</title><rect x="6.9692%" y="661" width="0.5673%" height="15" fill="rgb(219,111,20)" fg:x="86" fg:w="7"/><text x="7.2192%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.57%)</title><rect x="6.9692%" y="645" width="0.5673%" height="15" fill="rgb(218,114,4)" fg:x="86" fg:w="7"/><text x="7.2192%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.57%)</title><rect x="6.9692%" y="629" width="0.5673%" height="15" fill="rgb(238,133,3)" fg:x="86" fg:w="7"/><text x="7.2192%" y="639.50"></text></g><g><title>__libc_malloc (7 samples, 0.57%)</title><rect x="6.9692%" y="613" width="0.5673%" height="15" fill="rgb(224,95,0)" fg:x="86" fg:w="7"/><text x="7.2192%" y="623.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.65%)</title><rect x="6.9692%" y="725" width="0.6483%" height="15" fill="rgb(220,169,35)" fg:x="86" fg:w="8"/><text x="7.2192%" y="735.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="7.5365%" y="709" width="0.0810%" height="15" fill="rgb(242,116,47)" fg:x="93" fg:w="1"/><text x="7.7865%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="7.5365%" y="693" width="0.0810%" height="15" fill="rgb(251,42,20)" fg:x="93" fg:w="1"/><text x="7.7865%" y="703.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="7.5365%" y="677" width="0.0810%" height="15" fill="rgb(234,7,34)" fg:x="93" fg:w="1"/><text x="7.7865%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.5365%" y="661" width="0.0810%" height="15" fill="rgb(243,208,13)" fg:x="93" fg:w="1"/><text x="7.7865%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="7.5365%" y="645" width="0.0810%" height="15" fill="rgb(227,33,28)" fg:x="93" fg:w="1"/><text x="7.7865%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="7.5365%" y="629" width="0.0810%" height="15" fill="rgb(250,47,37)" fg:x="93" fg:w="1"/><text x="7.7865%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.5365%" y="613" width="0.0810%" height="15" fill="rgb(235,111,52)" fg:x="93" fg:w="1"/><text x="7.7865%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.5365%" y="597" width="0.0810%" height="15" fill="rgb(223,64,28)" fg:x="93" fg:w="1"/><text x="7.7865%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="7.6175%" y="693" width="0.0810%" height="15" fill="rgb(236,67,22)" fg:x="94" fg:w="1"/><text x="7.8675%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="7.6175%" y="677" width="0.0810%" height="15" fill="rgb(243,79,24)" fg:x="94" fg:w="1"/><text x="7.8675%" y="687.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="7.6175%" y="661" width="0.0810%" height="15" fill="rgb(241,225,22)" fg:x="94" fg:w="1"/><text x="7.8675%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="7.6175%" y="645" width="0.0810%" height="15" fill="rgb(228,214,26)" fg:x="94" fg:w="1"/><text x="7.8675%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.6985%" y="613" width="0.0810%" height="15" fill="rgb(219,84,52)" fg:x="95" fg:w="1"/><text x="7.9485%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="7.6985%" y="629" width="0.1621%" height="15" fill="rgb(220,12,22)" fg:x="95" fg:w="2"/><text x="7.9485%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.7796%" y="613" width="0.0810%" height="15" fill="rgb(219,9,49)" fg:x="96" fg:w="1"/><text x="8.0296%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="7.6985%" y="645" width="0.2431%" height="15" fill="rgb(237,40,43)" fg:x="95" fg:w="3"/><text x="7.9485%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.8606%" y="629" width="0.0810%" height="15" fill="rgb(212,189,32)" fg:x="97" fg:w="1"/><text x="8.1106%" y="639.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.41%)</title><rect x="7.6175%" y="725" width="0.4052%" height="15" fill="rgb(247,48,9)" fg:x="94" fg:w="5"/><text x="7.8675%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="7.6175%" y="709" width="0.4052%" height="15" fill="rgb(247,112,3)" fg:x="94" fg:w="5"/><text x="7.8675%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="7.6985%" y="693" width="0.3241%" height="15" fill="rgb(243,110,18)" fg:x="95" fg:w="4"/><text x="7.9485%" y="703.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="7.6985%" y="677" width="0.3241%" height="15" fill="rgb(233,223,44)" fg:x="95" fg:w="4"/><text x="7.9485%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="7.6985%" y="661" width="0.3241%" height="15" fill="rgb(245,160,20)" fg:x="95" fg:w="4"/><text x="7.9485%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="7.9417%" y="645" width="0.0810%" height="15" fill="rgb(225,37,1)" fg:x="98" fg:w="1"/><text x="8.1917%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="8.0227%" y="725" width="0.0810%" height="15" fill="rgb(253,227,39)" fg:x="99" fg:w="1"/><text x="8.2727%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="8.0227%" y="709" width="0.0810%" height="15" fill="rgb(240,179,26)" fg:x="99" fg:w="1"/><text x="8.2727%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="8.0227%" y="693" width="0.0810%" height="15" fill="rgb(237,212,23)" fg:x="99" fg:w="1"/><text x="8.2727%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="8.0227%" y="677" width="0.0810%" height="15" fill="rgb(221,38,11)" fg:x="99" fg:w="1"/><text x="8.2727%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="8.0227%" y="661" width="0.0810%" height="15" fill="rgb(215,85,6)" fg:x="99" fg:w="1"/><text x="8.2727%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.0227%" y="645" width="0.0810%" height="15" fill="rgb(239,64,14)" fg:x="99" fg:w="1"/><text x="8.2727%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="8.0227%" y="629" width="0.0810%" height="15" fill="rgb(215,150,32)" fg:x="99" fg:w="1"/><text x="8.2727%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.0227%" y="613" width="0.0810%" height="15" fill="rgb(238,15,13)" fg:x="99" fg:w="1"/><text x="8.2727%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="8.0227%" y="597" width="0.0810%" height="15" fill="rgb(251,87,8)" fg:x="99" fg:w="1"/><text x="8.2727%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="8.0227%" y="581" width="0.0810%" height="15" fill="rgb(206,86,1)" fg:x="99" fg:w="1"/><text x="8.2727%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="8.0227%" y="565" width="0.0810%" height="15" fill="rgb(208,151,45)" fg:x="99" fg:w="1"/><text x="8.2727%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.0227%" y="549" width="0.0810%" height="15" fill="rgb(231,181,24)" fg:x="99" fg:w="1"/><text x="8.2727%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="8.2658%" y="677" width="0.0810%" height="15" fill="rgb(240,106,29)" fg:x="102" fg:w="1"/><text x="8.5158%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="8.2658%" y="661" width="0.0810%" height="15" fill="rgb(227,166,11)" fg:x="102" fg:w="1"/><text x="8.5158%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="8.2658%" y="645" width="0.0810%" height="15" fill="rgb(254,14,34)" fg:x="102" fg:w="1"/><text x="8.5158%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.3468%" y="645" width="0.0810%" height="15" fill="rgb(223,222,6)" fg:x="103" fg:w="1"/><text x="8.5968%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.3468%" y="629" width="0.0810%" height="15" fill="rgb(245,69,24)" fg:x="103" fg:w="1"/><text x="8.5968%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.3468%" y="613" width="0.0810%" height="15" fill="rgb(213,193,7)" fg:x="103" fg:w="1"/><text x="8.5968%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.3468%" y="597" width="0.0810%" height="15" fill="rgb(237,92,51)" fg:x="103" fg:w="1"/><text x="8.5968%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.3468%" y="581" width="0.0810%" height="15" fill="rgb(225,194,6)" fg:x="103" fg:w="1"/><text x="8.5968%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.3468%" y="565" width="0.0810%" height="15" fill="rgb(205,159,49)" fg:x="103" fg:w="1"/><text x="8.5968%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="8.1848%" y="709" width="0.3241%" height="15" fill="rgb(219,69,2)" fg:x="101" fg:w="4"/><text x="8.4348%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="8.2658%" y="693" width="0.2431%" height="15" fill="rgb(215,107,24)" fg:x="102" fg:w="3"/><text x="8.5158%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="8.3468%" y="677" width="0.1621%" height="15" fill="rgb(249,208,29)" fg:x="103" fg:w="2"/><text x="8.5968%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="8.3468%" y="661" width="0.1621%" height="15" fill="rgb(213,147,10)" fg:x="103" fg:w="2"/><text x="8.5968%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.4279%" y="645" width="0.0810%" height="15" fill="rgb(254,140,42)" fg:x="104" fg:w="1"/><text x="8.6779%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.4279%" y="629" width="0.0810%" height="15" fill="rgb(249,9,15)" fg:x="104" fg:w="1"/><text x="8.6779%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.4279%" y="613" width="0.0810%" height="15" fill="rgb(210,19,33)" fg:x="104" fg:w="1"/><text x="8.6779%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.4279%" y="597" width="0.0810%" height="15" fill="rgb(241,121,22)" fg:x="104" fg:w="1"/><text x="8.6779%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="8.4279%" y="581" width="0.0810%" height="15" fill="rgb(244,69,52)" fg:x="104" fg:w="1"/><text x="8.6779%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.4279%" y="565" width="0.0810%" height="15" fill="rgb(244,191,54)" fg:x="104" fg:w="1"/><text x="8.6779%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.4279%" y="549" width="0.0810%" height="15" fill="rgb(250,3,53)" fg:x="104" fg:w="1"/><text x="8.6779%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.4279%" y="533" width="0.0810%" height="15" fill="rgb(205,77,3)" fg:x="104" fg:w="1"/><text x="8.6779%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.4279%" y="517" width="0.0810%" height="15" fill="rgb(207,155,3)" fg:x="104" fg:w="1"/><text x="8.6779%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="8.5089%" y="645" width="0.0810%" height="15" fill="rgb(224,79,2)" fg:x="105" fg:w="1"/><text x="8.7589%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="8.5089%" y="629" width="0.0810%" height="15" fill="rgb(243,172,5)" fg:x="105" fg:w="1"/><text x="8.7589%" y="639.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="8.5089%" y="613" width="0.0810%" height="15" fill="rgb(217,23,43)" fg:x="105" fg:w="1"/><text x="8.7589%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="8.5089%" y="597" width="0.0810%" height="15" fill="rgb(223,109,20)" fg:x="105" fg:w="1"/><text x="8.7589%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="8.5089%" y="581" width="0.0810%" height="15" fill="rgb(232,159,21)" fg:x="105" fg:w="1"/><text x="8.7589%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.5089%" y="565" width="0.0810%" height="15" fill="rgb(219,58,2)" fg:x="105" fg:w="1"/><text x="8.7589%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="8.5089%" y="549" width="0.0810%" height="15" fill="rgb(241,56,8)" fg:x="105" fg:w="1"/><text x="8.7589%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="8.5089%" y="533" width="0.0810%" height="15" fill="rgb(249,10,27)" fg:x="105" fg:w="1"/><text x="8.7589%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="8.5089%" y="517" width="0.0810%" height="15" fill="rgb(248,177,5)" fg:x="105" fg:w="1"/><text x="8.7589%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="8.5089%" y="661" width="0.1621%" height="15" fill="rgb(239,12,30)" fg:x="105" fg:w="2"/><text x="8.7589%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="8.5900%" y="645" width="0.0810%" height="15" fill="rgb(229,164,25)" fg:x="106" fg:w="1"/><text x="8.8400%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="8.5900%" y="629" width="0.0810%" height="15" fill="rgb(231,217,50)" fg:x="106" fg:w="1"/><text x="8.8400%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="8.5900%" y="613" width="0.0810%" height="15" fill="rgb(247,99,32)" fg:x="106" fg:w="1"/><text x="8.8400%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="8.5900%" y="597" width="0.0810%" height="15" fill="rgb(240,74,50)" fg:x="106" fg:w="1"/><text x="8.8400%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="8.6710%" y="629" width="0.0810%" height="15" fill="rgb(218,54,8)" fg:x="107" fg:w="1"/><text x="8.9210%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="8.6710%" y="613" width="0.0810%" height="15" fill="rgb(227,132,20)" fg:x="107" fg:w="1"/><text x="8.9210%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="8.6710%" y="597" width="0.0810%" height="15" fill="rgb(232,134,12)" fg:x="107" fg:w="1"/><text x="8.9210%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="8.6710%" y="581" width="0.0810%" height="15" fill="rgb(250,129,18)" fg:x="107" fg:w="1"/><text x="8.9210%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.6710%" y="565" width="0.0810%" height="15" fill="rgb(232,129,47)" fg:x="107" fg:w="1"/><text x="8.9210%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="8.6710%" y="549" width="0.0810%" height="15" fill="rgb(230,31,40)" fg:x="107" fg:w="1"/><text x="8.9210%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="8.6710%" y="533" width="0.0810%" height="15" fill="rgb(232,126,10)" fg:x="107" fg:w="1"/><text x="8.9210%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="8.6710%" y="517" width="0.0810%" height="15" fill="rgb(205,46,31)" fg:x="107" fg:w="1"/><text x="8.9210%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="8.7520%" y="629" width="0.1621%" height="15" fill="rgb(232,37,37)" fg:x="108" fg:w="2"/><text x="9.0020%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="8.7520%" y="613" width="0.1621%" height="15" fill="rgb(240,91,16)" fg:x="108" fg:w="2"/><text x="9.0020%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="8.7520%" y="597" width="0.1621%" height="15" fill="rgb(224,160,9)" fg:x="108" fg:w="2"/><text x="9.0020%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="8.7520%" y="581" width="0.1621%" height="15" fill="rgb(215,116,14)" fg:x="108" fg:w="2"/><text x="9.0020%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="8.7520%" y="565" width="0.1621%" height="15" fill="rgb(235,46,36)" fg:x="108" fg:w="2"/><text x="9.0020%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="8.7520%" y="549" width="0.1621%" height="15" fill="rgb(238,39,28)" fg:x="108" fg:w="2"/><text x="9.0020%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.8331%" y="533" width="0.0810%" height="15" fill="rgb(242,125,29)" fg:x="109" fg:w="1"/><text x="9.0831%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.8331%" y="517" width="0.0810%" height="15" fill="rgb(238,211,30)" fg:x="109" fg:w="1"/><text x="9.0831%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.8331%" y="501" width="0.0810%" height="15" fill="rgb(227,201,28)" fg:x="109" fg:w="1"/><text x="9.0831%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="8.6710%" y="645" width="0.3241%" height="15" fill="rgb(238,77,29)" fg:x="107" fg:w="4"/><text x="8.9210%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="8.9141%" y="629" width="0.0810%" height="15" fill="rgb(213,221,40)" fg:x="110" fg:w="1"/><text x="9.1641%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="8.9141%" y="613" width="0.0810%" height="15" fill="rgb(226,220,44)" fg:x="110" fg:w="1"/><text x="9.1641%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="8.9141%" y="597" width="0.0810%" height="15" fill="rgb(228,90,23)" fg:x="110" fg:w="1"/><text x="9.1641%" y="607.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="8.9141%" y="581" width="0.0810%" height="15" fill="rgb(235,72,29)" fg:x="110" fg:w="1"/><text x="9.1641%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="8.9141%" y="565" width="0.0810%" height="15" fill="rgb(248,117,39)" fg:x="110" fg:w="1"/><text x="9.1641%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.9141%" y="549" width="0.0810%" height="15" fill="rgb(225,43,28)" fg:x="110" fg:w="1"/><text x="9.1641%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.9141%" y="533" width="0.0810%" height="15" fill="rgb(240,93,4)" fg:x="110" fg:w="1"/><text x="9.1641%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.9141%" y="517" width="0.0810%" height="15" fill="rgb(234,178,27)" fg:x="110" fg:w="1"/><text x="9.1641%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.9141%" y="501" width="0.0810%" height="15" fill="rgb(254,88,22)" fg:x="110" fg:w="1"/><text x="9.1641%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.9141%" y="485" width="0.0810%" height="15" fill="rgb(240,206,50)" fg:x="110" fg:w="1"/><text x="9.1641%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.9141%" y="469" width="0.0810%" height="15" fill="rgb(249,103,8)" fg:x="110" fg:w="1"/><text x="9.1641%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.9141%" y="453" width="0.0810%" height="15" fill="rgb(241,178,36)" fg:x="110" fg:w="1"/><text x="9.1641%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.9141%" y="437" width="0.0810%" height="15" fill="rgb(246,110,15)" fg:x="110" fg:w="1"/><text x="9.1641%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.9141%" y="421" width="0.0810%" height="15" fill="rgb(207,14,43)" fg:x="110" fg:w="1"/><text x="9.1641%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.9141%" y="405" width="0.0810%" height="15" fill="rgb(253,219,19)" fg:x="110" fg:w="1"/><text x="9.1641%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.9141%" y="389" width="0.0810%" height="15" fill="rgb(216,126,5)" fg:x="110" fg:w="1"/><text x="9.1641%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.9141%" y="373" width="0.0810%" height="15" fill="rgb(218,78,42)" fg:x="110" fg:w="1"/><text x="9.1641%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.9141%" y="357" width="0.0810%" height="15" fill="rgb(215,154,40)" fg:x="110" fg:w="1"/><text x="9.1641%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.9141%" y="341" width="0.0810%" height="15" fill="rgb(235,129,32)" fg:x="110" fg:w="1"/><text x="9.1641%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.9141%" y="325" width="0.0810%" height="15" fill="rgb(218,51,8)" fg:x="110" fg:w="1"/><text x="9.1641%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.9141%" y="309" width="0.0810%" height="15" fill="rgb(245,48,4)" fg:x="110" fg:w="1"/><text x="9.1641%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.9951%" y="485" width="0.0810%" height="15" fill="rgb(250,175,12)" fg:x="111" fg:w="1"/><text x="9.2451%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.9951%" y="469" width="0.0810%" height="15" fill="rgb(237,95,40)" fg:x="111" fg:w="1"/><text x="9.2451%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="8.9951%" y="501" width="0.1621%" height="15" fill="rgb(244,120,0)" fg:x="111" fg:w="2"/><text x="9.2451%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.0762%" y="485" width="0.0810%" height="15" fill="rgb(241,19,42)" fg:x="112" fg:w="1"/><text x="9.3262%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.0762%" y="469" width="0.0810%" height="15" fill="rgb(217,174,48)" fg:x="112" fg:w="1"/><text x="9.3262%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="9.0762%" y="453" width="0.0810%" height="15" fill="rgb(239,36,38)" fg:x="112" fg:w="1"/><text x="9.3262%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="9.0762%" y="437" width="0.0810%" height="15" fill="rgb(220,63,49)" fg:x="112" fg:w="1"/><text x="9.3262%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="9.0762%" y="421" width="0.0810%" height="15" fill="rgb(240,101,13)" fg:x="112" fg:w="1"/><text x="9.3262%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.0762%" y="405" width="0.0810%" height="15" fill="rgb(209,184,51)" fg:x="112" fg:w="1"/><text x="9.3262%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.0762%" y="389" width="0.0810%" height="15" fill="rgb(206,136,39)" fg:x="112" fg:w="1"/><text x="9.3262%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="9.0762%" y="373" width="0.0810%" height="15" fill="rgb(254,47,45)" fg:x="112" fg:w="1"/><text x="9.3262%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="9.0762%" y="357" width="0.0810%" height="15" fill="rgb(252,103,20)" fg:x="112" fg:w="1"/><text x="9.3262%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="9.0762%" y="341" width="0.0810%" height="15" fill="rgb(230,69,12)" fg:x="112" fg:w="1"/><text x="9.3262%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="9.0762%" y="325" width="0.0810%" height="15" fill="rgb(219,2,28)" fg:x="112" fg:w="1"/><text x="9.3262%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="8.9951%" y="533" width="0.2431%" height="15" fill="rgb(210,9,12)" fg:x="111" fg:w="3"/><text x="9.2451%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="8.9951%" y="517" width="0.2431%" height="15" fill="rgb(235,99,33)" fg:x="111" fg:w="3"/><text x="9.2451%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.1572%" y="501" width="0.0810%" height="15" fill="rgb(230,11,38)" fg:x="113" fg:w="1"/><text x="9.4072%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.1572%" y="485" width="0.0810%" height="15" fill="rgb(217,129,0)" fg:x="113" fg:w="1"/><text x="9.4072%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="9.1572%" y="469" width="0.0810%" height="15" fill="rgb(222,198,4)" fg:x="113" fg:w="1"/><text x="9.4072%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="9.1572%" y="453" width="0.0810%" height="15" fill="rgb(246,170,27)" fg:x="113" fg:w="1"/><text x="9.4072%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="9.1572%" y="437" width="0.0810%" height="15" fill="rgb(229,17,28)" fg:x="113" fg:w="1"/><text x="9.4072%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="9.1572%" y="421" width="0.0810%" height="15" fill="rgb(233,198,48)" fg:x="113" fg:w="1"/><text x="9.4072%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="9.1572%" y="405" width="0.0810%" height="15" fill="rgb(238,103,23)" fg:x="113" fg:w="1"/><text x="9.4072%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="8.9951%" y="549" width="0.3241%" height="15" fill="rgb(206,91,41)" fg:x="111" fg:w="4"/><text x="9.2451%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.2382%" y="533" width="0.0810%" height="15" fill="rgb(227,34,25)" fg:x="114" fg:w="1"/><text x="9.4882%" y="543.50"></text></g><g><title>plugins_core::build::Build::leads_to (9 samples, 0.73%)</title><rect x="8.6710%" y="661" width="0.7293%" height="15" fill="rgb(210,110,44)" fg:x="107" fg:w="9"/><text x="8.9210%" y="671.50"></text></g><g><title>plugins_core::tools::leads_to (5 samples, 0.41%)</title><rect x="8.9951%" y="645" width="0.4052%" height="15" fill="rgb(216,189,8)" fg:x="111" fg:w="5"/><text x="9.2451%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.41%)</title><rect x="8.9951%" y="629" width="0.4052%" height="15" fill="rgb(234,9,46)" fg:x="111" fg:w="5"/><text x="9.2451%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.41%)</title><rect x="8.9951%" y="613" width="0.4052%" height="15" fill="rgb(251,200,5)" fg:x="111" fg:w="5"/><text x="9.2451%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.41%)</title><rect x="8.9951%" y="597" width="0.4052%" height="15" fill="rgb(238,165,37)" fg:x="111" fg:w="5"/><text x="9.2451%" y="607.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.41%)</title><rect x="8.9951%" y="581" width="0.4052%" height="15" fill="rgb(232,77,38)" fg:x="111" fg:w="5"/><text x="9.2451%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="8.9951%" y="565" width="0.4052%" height="15" fill="rgb(253,179,33)" fg:x="111" fg:w="5"/><text x="9.2451%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.3193%" y="549" width="0.0810%" height="15" fill="rgb(240,13,35)" fg:x="115" fg:w="1"/><text x="9.5693%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.3193%" y="533" width="0.0810%" height="15" fill="rgb(242,150,49)" fg:x="115" fg:w="1"/><text x="9.5693%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="9.3193%" y="517" width="0.0810%" height="15" fill="rgb(237,176,28)" fg:x="115" fg:w="1"/><text x="9.5693%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.97%)</title><rect x="8.5089%" y="709" width="0.9724%" height="15" fill="rgb(214,176,33)" fg:x="105" fg:w="12"/><text x="8.7589%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.97%)</title><rect x="8.5089%" y="693" width="0.9724%" height="15" fill="rgb(214,25,12)" fg:x="105" fg:w="12"/><text x="8.7589%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (12 samples, 0.97%)</title><rect x="8.5089%" y="677" width="0.9724%" height="15" fill="rgb(238,190,20)" fg:x="105" fg:w="12"/><text x="8.7589%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="9.4003%" y="661" width="0.0810%" height="15" fill="rgb(208,11,19)" fg:x="116" fg:w="1"/><text x="9.6503%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="9.4003%" y="645" width="0.0810%" height="15" fill="rgb(239,90,4)" fg:x="116" fg:w="1"/><text x="9.6503%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="9.4003%" y="629" width="0.0810%" height="15" fill="rgb(248,110,3)" fg:x="116" fg:w="1"/><text x="9.6503%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="9.4003%" y="613" width="0.0810%" height="15" fill="rgb(210,41,30)" fg:x="116" fg:w="1"/><text x="9.6503%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="9.4003%" y="597" width="0.0810%" height="15" fill="rgb(239,36,8)" fg:x="116" fg:w="1"/><text x="9.6503%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.4003%" y="581" width="0.0810%" height="15" fill="rgb(237,201,47)" fg:x="116" fg:w="1"/><text x="9.6503%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="9.4003%" y="565" width="0.0810%" height="15" fill="rgb(224,140,29)" fg:x="116" fg:w="1"/><text x="9.6503%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.4003%" y="549" width="0.0810%" height="15" fill="rgb(231,209,17)" fg:x="116" fg:w="1"/><text x="9.6503%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.4003%" y="533" width="0.0810%" height="15" fill="rgb(249,196,1)" fg:x="116" fg:w="1"/><text x="9.6503%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="9.4814%" y="709" width="0.0810%" height="15" fill="rgb(223,207,51)" fg:x="117" fg:w="1"/><text x="9.7314%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.4814%" y="693" width="0.0810%" height="15" fill="rgb(210,14,40)" fg:x="117" fg:w="1"/><text x="9.7314%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="9.5624%" y="693" width="0.2431%" height="15" fill="rgb(250,20,52)" fg:x="118" fg:w="3"/><text x="9.8124%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.6434%" y="677" width="0.1621%" height="15" fill="rgb(241,46,11)" fg:x="119" fg:w="2"/><text x="9.8934%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="9.6434%" y="661" width="0.1621%" height="15" fill="rgb(219,105,5)" fg:x="119" fg:w="2"/><text x="9.8934%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="9.6434%" y="645" width="0.1621%" height="15" fill="rgb(252,77,35)" fg:x="119" fg:w="2"/><text x="9.8934%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="9.6434%" y="629" width="0.1621%" height="15" fill="rgb(243,119,2)" fg:x="119" fg:w="2"/><text x="9.8934%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="9.6434%" y="613" width="0.1621%" height="15" fill="rgb(206,82,28)" fg:x="119" fg:w="2"/><text x="9.8934%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="9.8865%" y="597" width="0.2431%" height="15" fill="rgb(227,120,12)" fg:x="122" fg:w="3"/><text x="10.1365%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="9.8865%" y="581" width="0.2431%" height="15" fill="rgb(229,134,41)" fg:x="122" fg:w="3"/><text x="10.1365%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="9.8865%" y="565" width="0.2431%" height="15" fill="rgb(239,96,32)" fg:x="122" fg:w="3"/><text x="10.1365%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.9676%" y="549" width="0.1621%" height="15" fill="rgb(225,46,27)" fg:x="123" fg:w="2"/><text x="10.2176%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.0486%" y="533" width="0.0810%" height="15" fill="rgb(215,168,2)" fg:x="124" fg:w="1"/><text x="10.2986%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="10.0486%" y="517" width="0.0810%" height="15" fill="rgb(207,170,52)" fg:x="124" fg:w="1"/><text x="10.2986%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.0486%" y="501" width="0.0810%" height="15" fill="rgb(237,198,36)" fg:x="124" fg:w="1"/><text x="10.2986%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="10.0486%" y="485" width="0.0810%" height="15" fill="rgb(213,27,14)" fg:x="124" fg:w="1"/><text x="10.2986%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="10.1297%" y="581" width="0.3241%" height="15" fill="rgb(218,77,5)" fg:x="125" fg:w="4"/><text x="10.3797%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.2107%" y="565" width="0.2431%" height="15" fill="rgb(230,219,39)" fg:x="126" fg:w="3"/><text x="10.4607%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.3728%" y="549" width="0.0810%" height="15" fill="rgb(245,177,7)" fg:x="128" fg:w="1"/><text x="10.6228%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="10.4538%" y="565" width="0.2431%" height="15" fill="rgb(246,44,46)" fg:x="129" fg:w="3"/><text x="10.7038%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.4538%" y="549" width="0.2431%" height="15" fill="rgb(207,173,15)" fg:x="129" fg:w="3"/><text x="10.7038%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.5348%" y="533" width="0.1621%" height="15" fill="rgb(245,170,50)" fg:x="130" fg:w="2"/><text x="10.7848%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.6159%" y="517" width="0.0810%" height="15" fill="rgb(233,156,21)" fg:x="131" fg:w="1"/><text x="10.8659%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.6969%" y="549" width="0.0810%" height="15" fill="rgb(253,146,27)" fg:x="132" fg:w="1"/><text x="10.9469%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.7780%" y="549" width="0.0810%" height="15" fill="rgb(247,66,29)" fg:x="133" fg:w="1"/><text x="11.0280%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.7780%" y="533" width="0.0810%" height="15" fill="rgb(218,207,26)" fg:x="133" fg:w="1"/><text x="11.0280%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.7780%" y="517" width="0.0810%" height="15" fill="rgb(234,93,26)" fg:x="133" fg:w="1"/><text x="11.0280%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.7780%" y="501" width="0.0810%" height="15" fill="rgb(214,75,48)" fg:x="133" fg:w="1"/><text x="11.0280%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="10.8590%" y="517" width="0.0810%" height="15" fill="rgb(229,119,22)" fg:x="134" fg:w="1"/><text x="11.1090%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="10.8590%" y="501" width="0.0810%" height="15" fill="rgb(226,153,19)" fg:x="134" fg:w="1"/><text x="11.1090%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.8590%" y="485" width="0.0810%" height="15" fill="rgb(220,204,36)" fg:x="134" fg:w="1"/><text x="11.1090%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.8590%" y="469" width="0.0810%" height="15" fill="rgb(253,181,43)" fg:x="134" fg:w="1"/><text x="11.1090%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="10.8590%" y="533" width="0.1621%" height="15" fill="rgb(211,41,51)" fg:x="134" fg:w="2"/><text x="11.1090%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.9400%" y="517" width="0.0810%" height="15" fill="rgb(207,215,0)" fg:x="135" fg:w="1"/><text x="11.1900%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="10.6969%" y="565" width="0.4052%" height="15" fill="rgb(212,153,10)" fg:x="132" fg:w="5"/><text x="10.9469%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="10.8590%" y="549" width="0.2431%" height="15" fill="rgb(251,171,36)" fg:x="134" fg:w="3"/><text x="11.1090%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.0211%" y="533" width="0.0810%" height="15" fill="rgb(225,219,41)" fg:x="136" fg:w="1"/><text x="11.2711%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.0211%" y="517" width="0.0810%" height="15" fill="rgb(208,200,1)" fg:x="136" fg:w="1"/><text x="11.2711%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="10.4538%" y="581" width="0.8104%" height="15" fill="rgb(206,75,47)" fg:x="129" fg:w="10"/><text x="10.7038%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="11.1021%" y="565" width="0.1621%" height="15" fill="rgb(248,3,16)" fg:x="137" fg:w="2"/><text x="11.3521%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.1831%" y="549" width="0.0810%" height="15" fill="rgb(242,157,36)" fg:x="138" fg:w="1"/><text x="11.4331%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (19 samples, 1.54%)</title><rect x="9.8865%" y="613" width="1.5397%" height="15" fill="rgb(215,175,11)" fg:x="122" fg:w="19"/><text x="10.1365%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.30%)</title><rect x="10.1297%" y="597" width="1.2966%" height="15" fill="rgb(252,222,22)" fg:x="125" fg:w="16"/><text x="10.3797%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="11.2642%" y="581" width="0.1621%" height="15" fill="rgb(250,121,35)" fg:x="139" fg:w="2"/><text x="11.5142%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.3452%" y="565" width="0.0810%" height="15" fill="rgb(233,120,49)" fg:x="140" fg:w="1"/><text x="11.5952%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.3452%" y="549" width="0.0810%" height="15" fill="rgb(205,201,14)" fg:x="140" fg:w="1"/><text x="11.5952%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.4263%" y="565" width="0.0810%" height="15" fill="rgb(219,58,45)" fg:x="141" fg:w="1"/><text x="11.6763%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.4263%" y="549" width="0.0810%" height="15" fill="rgb(251,65,12)" fg:x="141" fg:w="1"/><text x="11.6763%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="11.5073%" y="533" width="0.0810%" height="15" fill="rgb(224,47,31)" fg:x="142" fg:w="1"/><text x="11.7573%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="11.4263%" y="613" width="0.3241%" height="15" fill="rgb(233,74,26)" fg:x="141" fg:w="4"/><text x="11.6763%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="11.4263%" y="597" width="0.3241%" height="15" fill="rgb(231,211,31)" fg:x="141" fg:w="4"/><text x="11.6763%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="11.4263%" y="581" width="0.3241%" height="15" fill="rgb(239,167,5)" fg:x="141" fg:w="4"/><text x="11.6763%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="11.5073%" y="565" width="0.2431%" height="15" fill="rgb(241,85,0)" fg:x="142" fg:w="3"/><text x="11.7573%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="11.5073%" y="549" width="0.2431%" height="15" fill="rgb(229,130,21)" fg:x="142" fg:w="3"/><text x="11.7573%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="11.5883%" y="533" width="0.1621%" height="15" fill="rgb(254,84,49)" fg:x="143" fg:w="2"/><text x="11.8383%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.7504%" y="565" width="0.0810%" height="15" fill="rgb(235,85,21)" fg:x="145" fg:w="1"/><text x="12.0004%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="11.8314%" y="565" width="0.0810%" height="15" fill="rgb(246,128,52)" fg:x="146" fg:w="1"/><text x="12.0814%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.8314%" y="549" width="0.0810%" height="15" fill="rgb(243,114,49)" fg:x="146" fg:w="1"/><text x="12.0814%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.8314%" y="533" width="0.0810%" height="15" fill="rgb(240,224,22)" fg:x="146" fg:w="1"/><text x="12.0814%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="11.9125%" y="549" width="0.0810%" height="15" fill="rgb(247,201,52)" fg:x="147" fg:w="1"/><text x="12.1625%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0746%" y="469" width="0.0810%" height="15" fill="rgb(231,70,45)" fg:x="149" fg:w="1"/><text x="12.3246%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0746%" y="453" width="0.0810%" height="15" fill="rgb(217,215,20)" fg:x="149" fg:w="1"/><text x="12.3246%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="12.0746%" y="517" width="0.1621%" height="15" fill="rgb(226,170,30)" fg:x="149" fg:w="2"/><text x="12.3246%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="12.0746%" y="501" width="0.1621%" height="15" fill="rgb(220,190,43)" fg:x="149" fg:w="2"/><text x="12.3246%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="12.0746%" y="485" width="0.1621%" height="15" fill="rgb(218,20,18)" fg:x="149" fg:w="2"/><text x="12.3246%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.1556%" y="469" width="0.0810%" height="15" fill="rgb(245,37,26)" fg:x="150" fg:w="1"/><text x="12.4056%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.1556%" y="453" width="0.0810%" height="15" fill="rgb(241,127,29)" fg:x="150" fg:w="1"/><text x="12.4056%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.2366%" y="501" width="0.0810%" height="15" fill="rgb(241,33,26)" fg:x="151" fg:w="1"/><text x="12.4866%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.2366%" y="485" width="0.0810%" height="15" fill="rgb(220,106,21)" fg:x="151" fg:w="1"/><text x="12.4866%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.2366%" y="469" width="0.0810%" height="15" fill="rgb(225,125,35)" fg:x="151" fg:w="1"/><text x="12.4866%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.2366%" y="453" width="0.0810%" height="15" fill="rgb(248,80,22)" fg:x="151" fg:w="1"/><text x="12.4866%" y="463.50"></text></g><g><title>engine::session::Session::save_changes (32 samples, 2.59%)</title><rect x="9.8055%" y="693" width="2.5932%" height="15" fill="rgb(231,117,39)" fg:x="121" fg:w="32"/><text x="10.0555%" y="703.50">en..</text></g><g><title>engine::session::state::State::close (32 samples, 2.59%)</title><rect x="9.8055%" y="677" width="2.5932%" height="15" fill="rgb(239,183,16)" fg:x="121" fg:w="32"/><text x="10.0555%" y="687.50">en..</text></g><g><title>engine::session::state::State::flush_entities (32 samples, 2.59%)</title><rect x="9.8055%" y="661" width="2.5932%" height="15" fill="rgb(221,61,19)" fg:x="121" fg:w="32"/><text x="10.0555%" y="671.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (32 samples, 2.59%)</title><rect x="9.8055%" y="645" width="2.5932%" height="15" fill="rgb(239,196,44)" fg:x="121" fg:w="32"/><text x="10.0555%" y="655.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (31 samples, 2.51%)</title><rect x="9.8865%" y="629" width="2.5122%" height="15" fill="rgb(206,113,19)" fg:x="122" fg:w="31"/><text x="10.1365%" y="639.50">en..</text></g><g><title>kernel::model::any_entity_changes (8 samples, 0.65%)</title><rect x="11.7504%" y="613" width="0.6483%" height="15" fill="rgb(245,114,12)" fg:x="145" fg:w="8"/><text x="12.0004%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.65%)</title><rect x="11.7504%" y="597" width="0.6483%" height="15" fill="rgb(247,89,39)" fg:x="145" fg:w="8"/><text x="12.0004%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.65%)</title><rect x="11.7504%" y="581" width="0.6483%" height="15" fill="rgb(213,85,14)" fg:x="145" fg:w="8"/><text x="12.0004%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.49%)</title><rect x="11.9125%" y="565" width="0.4862%" height="15" fill="rgb(249,206,33)" fg:x="147" fg:w="6"/><text x="12.1625%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.41%)</title><rect x="11.9935%" y="549" width="0.4052%" height="15" fill="rgb(235,167,47)" fg:x="148" fg:w="5"/><text x="12.2435%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="12.0746%" y="533" width="0.3241%" height="15" fill="rgb(217,177,16)" fg:x="149" fg:w="4"/><text x="12.3246%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="12.2366%" y="517" width="0.1621%" height="15" fill="rgb(250,228,29)" fg:x="151" fg:w="2"/><text x="12.4866%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="12.3177%" y="501" width="0.0810%" height="15" fill="rgb(216,195,42)" fg:x="152" fg:w="1"/><text x="12.5677%" y="511.50"></text></g><g><title>engine::session::Session::flush (36 samples, 2.92%)</title><rect x="9.5624%" y="709" width="2.9173%" height="15" fill="rgb(232,192,32)" fg:x="118" fg:w="36"/><text x="9.8124%" y="719.50">en..</text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="12.3987%" y="693" width="0.0810%" height="15" fill="rgb(211,8,47)" fg:x="153" fg:w="1"/><text x="12.6487%" y="703.50"></text></g><g><title>kernel::session::SetSession::new (1 samples, 0.08%)</title><rect x="12.3987%" y="677" width="0.0810%" height="15" fill="rgb(251,201,9)" fg:x="153" fg:w="1"/><text x="12.6487%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="12.4797%" y="709" width="0.1621%" height="15" fill="rgb(206,185,47)" fg:x="154" fg:w="2"/><text x="12.7297%" y="719.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (2 samples, 0.16%)</title><rect x="12.4797%" y="693" width="0.1621%" height="15" fill="rgb(245,54,32)" fg:x="154" fg:w="2"/><text x="12.7297%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="12.5608%" y="677" width="0.0810%" height="15" fill="rgb(208,1,8)" fg:x="155" fg:w="1"/><text x="12.8108%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="12.5608%" y="661" width="0.0810%" height="15" fill="rgb(228,57,24)" fg:x="155" fg:w="1"/><text x="12.8108%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="12.5608%" y="645" width="0.0810%" height="15" fill="rgb(251,24,8)" fg:x="155" fg:w="1"/><text x="12.8108%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="12.5608%" y="629" width="0.0810%" height="15" fill="rgb(236,196,50)" fg:x="155" fg:w="1"/><text x="12.8108%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.5608%" y="613" width="0.0810%" height="15" fill="rgb(246,222,29)" fg:x="155" fg:w="1"/><text x="12.8108%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.5608%" y="597" width="0.0810%" height="15" fill="rgb(211,34,40)" fg:x="155" fg:w="1"/><text x="12.8108%" y="607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="12.5608%" y="581" width="0.0810%" height="15" fill="rgb(210,66,51)" fg:x="155" fg:w="1"/><text x="12.8108%" y="591.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="12.5608%" y="565" width="0.0810%" height="15" fill="rgb(250,56,43)" fg:x="155" fg:w="1"/><text x="12.8108%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="12.6418%" y="677" width="0.1621%" height="15" fill="rgb(240,111,50)" fg:x="156" fg:w="2"/><text x="12.8918%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="12.6418%" y="661" width="0.1621%" height="15" fill="rgb(209,117,13)" fg:x="156" fg:w="2"/><text x="12.8918%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="12.6418%" y="645" width="0.1621%" height="15" fill="rgb(232,164,45)" fg:x="156" fg:w="2"/><text x="12.8918%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="12.6418%" y="629" width="0.1621%" height="15" fill="rgb(205,69,32)" fg:x="156" fg:w="2"/><text x="12.8918%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="12.6418%" y="613" width="0.1621%" height="15" fill="rgb(240,147,45)" fg:x="156" fg:w="2"/><text x="12.8918%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="12.6418%" y="597" width="0.1621%" height="15" fill="rgb(221,94,48)" fg:x="156" fg:w="2"/><text x="12.8918%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="12.6418%" y="581" width="0.1621%" height="15" fill="rgb(249,209,17)" fg:x="156" fg:w="2"/><text x="12.8918%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="12.6418%" y="565" width="0.1621%" height="15" fill="rgb(228,57,28)" fg:x="156" fg:w="2"/><text x="12.8918%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="12.6418%" y="549" width="0.1621%" height="15" fill="rgb(250,133,26)" fg:x="156" fg:w="2"/><text x="12.8918%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="12.6418%" y="533" width="0.1621%" height="15" fill="rgb(254,15,16)" fg:x="156" fg:w="2"/><text x="12.8918%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="12.6418%" y="517" width="0.1621%" height="15" fill="rgb(209,147,42)" fg:x="156" fg:w="2"/><text x="12.8918%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="12.6418%" y="501" width="0.1621%" height="15" fill="rgb(208,5,29)" fg:x="156" fg:w="2"/><text x="12.8918%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="12.6418%" y="485" width="0.1621%" height="15" fill="rgb(250,73,31)" fg:x="156" fg:w="2"/><text x="12.8918%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="12.6418%" y="469" width="0.1621%" height="15" fill="rgb(238,45,10)" fg:x="156" fg:w="2"/><text x="12.8918%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="12.6418%" y="453" width="0.1621%" height="15" fill="rgb(214,104,5)" fg:x="156" fg:w="2"/><text x="12.8918%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="12.6418%" y="437" width="0.1621%" height="15" fill="rgb(242,217,19)" fg:x="156" fg:w="2"/><text x="12.8918%" y="447.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="12.6418%" y="421" width="0.1621%" height="15" fill="rgb(246,113,27)" fg:x="156" fg:w="2"/><text x="12.8918%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="12.6418%" y="405" width="0.1621%" height="15" fill="rgb(221,34,27)" fg:x="156" fg:w="2"/><text x="12.8918%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="12.6418%" y="389" width="0.1621%" height="15" fill="rgb(246,109,6)" fg:x="156" fg:w="2"/><text x="12.8918%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="12.6418%" y="373" width="0.1621%" height="15" fill="rgb(217,12,25)" fg:x="156" fg:w="2"/><text x="12.8918%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="12.6418%" y="357" width="0.1621%" height="15" fill="rgb(250,195,5)" fg:x="156" fg:w="2"/><text x="12.8918%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="12.6418%" y="341" width="0.1621%" height="15" fill="rgb(244,140,45)" fg:x="156" fg:w="2"/><text x="12.8918%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="12.6418%" y="325" width="0.1621%" height="15" fill="rgb(230,64,14)" fg:x="156" fg:w="2"/><text x="12.8918%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="12.6418%" y="309" width="0.1621%" height="15" fill="rgb(206,27,27)" fg:x="156" fg:w="2"/><text x="12.8918%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="12.6418%" y="293" width="0.1621%" height="15" fill="rgb(230,14,50)" fg:x="156" fg:w="2"/><text x="12.8918%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="12.6418%" y="277" width="0.1621%" height="15" fill="rgb(237,172,14)" fg:x="156" fg:w="2"/><text x="12.8918%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="12.6418%" y="261" width="0.1621%" height="15" fill="rgb(209,25,21)" fg:x="156" fg:w="2"/><text x="12.8918%" y="271.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="12.6418%" y="245" width="0.1621%" height="15" fill="rgb(248,148,22)" fg:x="156" fg:w="2"/><text x="12.8918%" y="255.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="12.6418%" y="229" width="0.1621%" height="15" fill="rgb(234,100,22)" fg:x="156" fg:w="2"/><text x="12.8918%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.8849%" y="629" width="0.0810%" height="15" fill="rgb(210,20,30)" fg:x="159" fg:w="1"/><text x="13.1349%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.8849%" y="613" width="0.0810%" height="15" fill="rgb(232,58,0)" fg:x="159" fg:w="1"/><text x="13.1349%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.8849%" y="597" width="0.0810%" height="15" fill="rgb(221,68,13)" fg:x="159" fg:w="1"/><text x="13.1349%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.8849%" y="581" width="0.0810%" height="15" fill="rgb(231,194,11)" fg:x="159" fg:w="1"/><text x="13.1349%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.8849%" y="565" width="0.0810%" height="15" fill="rgb(235,51,41)" fg:x="159" fg:w="1"/><text x="13.1349%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.8849%" y="549" width="0.0810%" height="15" fill="rgb(240,50,32)" fg:x="159" fg:w="1"/><text x="13.1349%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.8849%" y="533" width="0.0810%" height="15" fill="rgb(240,185,36)" fg:x="159" fg:w="1"/><text x="13.1349%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.8849%" y="517" width="0.0810%" height="15" fill="rgb(211,168,15)" fg:x="159" fg:w="1"/><text x="13.1349%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.8849%" y="501" width="0.0810%" height="15" fill="rgb(221,70,0)" fg:x="159" fg:w="1"/><text x="13.1349%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.8849%" y="485" width="0.0810%" height="15" fill="rgb(205,21,33)" fg:x="159" fg:w="1"/><text x="13.1349%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.8849%" y="469" width="0.0810%" height="15" fill="rgb(225,106,10)" fg:x="159" fg:w="1"/><text x="13.1349%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.8849%" y="453" width="0.0810%" height="15" fill="rgb(236,200,50)" fg:x="159" fg:w="1"/><text x="13.1349%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.8849%" y="437" width="0.0810%" height="15" fill="rgb(249,93,23)" fg:x="159" fg:w="1"/><text x="13.1349%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.8849%" y="421" width="0.0810%" height="15" fill="rgb(244,115,35)" fg:x="159" fg:w="1"/><text x="13.1349%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.8849%" y="405" width="0.0810%" height="15" fill="rgb(231,129,47)" fg:x="159" fg:w="1"/><text x="13.1349%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8849%" y="389" width="0.0810%" height="15" fill="rgb(225,160,50)" fg:x="159" fg:w="1"/><text x="13.1349%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="12.8039%" y="677" width="0.2431%" height="15" fill="rgb(218,135,23)" fg:x="158" fg:w="3"/><text x="13.0539%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="12.8039%" y="661" width="0.2431%" height="15" fill="rgb(227,119,14)" fg:x="158" fg:w="3"/><text x="13.0539%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="12.8039%" y="645" width="0.2431%" height="15" fill="rgb(242,138,13)" fg:x="158" fg:w="3"/><text x="13.0539%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.9660%" y="629" width="0.0810%" height="15" fill="rgb(215,11,16)" fg:x="160" fg:w="1"/><text x="13.2160%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.9660%" y="613" width="0.0810%" height="15" fill="rgb(234,170,50)" fg:x="160" fg:w="1"/><text x="13.2160%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.9660%" y="597" width="0.0810%" height="15" fill="rgb(233,34,20)" fg:x="160" fg:w="1"/><text x="13.2160%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.9660%" y="581" width="0.0810%" height="15" fill="rgb(237,100,45)" fg:x="160" fg:w="1"/><text x="13.2160%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.9660%" y="565" width="0.0810%" height="15" fill="rgb(231,184,36)" fg:x="160" fg:w="1"/><text x="13.2160%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.9660%" y="549" width="0.0810%" height="15" fill="rgb(252,93,2)" fg:x="160" fg:w="1"/><text x="13.2160%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.9660%" y="533" width="0.0810%" height="15" fill="rgb(248,176,47)" fg:x="160" fg:w="1"/><text x="13.2160%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.9660%" y="517" width="0.0810%" height="15" fill="rgb(249,125,23)" fg:x="160" fg:w="1"/><text x="13.2160%" y="527.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="13.0470%" y="677" width="0.0810%" height="15" fill="rgb(239,67,42)" fg:x="161" fg:w="1"/><text x="13.2970%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="13.0470%" y="661" width="0.0810%" height="15" fill="rgb(244,162,4)" fg:x="161" fg:w="1"/><text x="13.2970%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.0470%" y="645" width="0.0810%" height="15" fill="rgb(214,150,38)" fg:x="161" fg:w="1"/><text x="13.2970%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="13.0470%" y="629" width="0.0810%" height="15" fill="rgb(228,211,28)" fg:x="161" fg:w="1"/><text x="13.2970%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.2091%" y="645" width="0.0810%" height="15" fill="rgb(212,98,48)" fg:x="163" fg:w="1"/><text x="13.4591%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.81%)</title><rect x="12.6418%" y="693" width="0.8104%" height="15" fill="rgb(213,45,13)" fg:x="156" fg:w="10"/><text x="12.8918%" y="703.50"></text></g><g><title>engine::identifiers::model::set_gid (4 samples, 0.32%)</title><rect x="13.1280%" y="677" width="0.3241%" height="15" fill="rgb(218,35,29)" fg:x="162" fg:w="4"/><text x="13.3780%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="13.2091%" y="661" width="0.2431%" height="15" fill="rgb(244,13,3)" fg:x="163" fg:w="3"/><text x="13.4591%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="13.2901%" y="645" width="0.1621%" height="15" fill="rgb(235,170,19)" fg:x="164" fg:w="2"/><text x="13.5401%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="13.2901%" y="629" width="0.1621%" height="15" fill="rgb(233,193,43)" fg:x="164" fg:w="2"/><text x="13.5401%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.3712%" y="613" width="0.0810%" height="15" fill="rgb(228,223,20)" fg:x="165" fg:w="1"/><text x="13.6212%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.3712%" y="597" width="0.0810%" height="15" fill="rgb(208,85,54)" fg:x="165" fg:w="1"/><text x="13.6212%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="13.5332%" y="645" width="0.0810%" height="15" fill="rgb(254,14,45)" fg:x="167" fg:w="1"/><text x="13.7832%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="13.5332%" y="629" width="0.0810%" height="15" fill="rgb(247,99,29)" fg:x="167" fg:w="1"/><text x="13.7832%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.5332%" y="613" width="0.0810%" height="15" fill="rgb(225,180,54)" fg:x="167" fg:w="1"/><text x="13.7832%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="13.5332%" y="597" width="0.0810%" height="15" fill="rgb(239,88,43)" fg:x="167" fg:w="1"/><text x="13.7832%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.5332%" y="581" width="0.0810%" height="15" fill="rgb(209,47,11)" fg:x="167" fg:w="1"/><text x="13.7832%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.5332%" y="565" width="0.0810%" height="15" fill="rgb(219,179,23)" fg:x="167" fg:w="1"/><text x="13.7832%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.5332%" y="549" width="0.0810%" height="15" fill="rgb(213,183,19)" fg:x="167" fg:w="1"/><text x="13.7832%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.5332%" y="533" width="0.0810%" height="15" fill="rgb(210,11,9)" fg:x="167" fg:w="1"/><text x="13.7832%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="13.5332%" y="677" width="0.2431%" height="15" fill="rgb(239,194,16)" fg:x="167" fg:w="3"/><text x="13.7832%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="13.5332%" y="661" width="0.2431%" height="15" fill="rgb(246,23,50)" fg:x="167" fg:w="3"/><text x="13.7832%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="13.6143%" y="645" width="0.1621%" height="15" fill="rgb(245,10,41)" fg:x="168" fg:w="2"/><text x="13.8643%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="13.6143%" y="629" width="0.1621%" height="15" fill="rgb(228,43,24)" fg:x="168" fg:w="2"/><text x="13.8643%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.6143%" y="613" width="0.1621%" height="15" fill="rgb(220,151,0)" fg:x="168" fg:w="2"/><text x="13.8643%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.6143%" y="597" width="0.1621%" height="15" fill="rgb(232,219,10)" fg:x="168" fg:w="2"/><text x="13.8643%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.6143%" y="581" width="0.1621%" height="15" fill="rgb(227,217,48)" fg:x="168" fg:w="2"/><text x="13.8643%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6953%" y="565" width="0.0810%" height="15" fill="rgb(210,66,35)" fg:x="169" fg:w="1"/><text x="13.9453%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6953%" y="549" width="0.0810%" height="15" fill="rgb(254,6,7)" fg:x="169" fg:w="1"/><text x="13.9453%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.6953%" y="533" width="0.0810%" height="15" fill="rgb(235,222,42)" fg:x="169" fg:w="1"/><text x="13.9453%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.6953%" y="517" width="0.0810%" height="15" fill="rgb(245,126,5)" fg:x="169" fg:w="1"/><text x="13.9453%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.6953%" y="501" width="0.0810%" height="15" fill="rgb(215,73,17)" fg:x="169" fg:w="1"/><text x="13.9453%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.6953%" y="485" width="0.0810%" height="15" fill="rgb(219,198,52)" fg:x="169" fg:w="1"/><text x="13.9453%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.6953%" y="469" width="0.0810%" height="15" fill="rgb(217,159,18)" fg:x="169" fg:w="1"/><text x="13.9453%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.6953%" y="453" width="0.0810%" height="15" fill="rgb(212,177,18)" fg:x="169" fg:w="1"/><text x="13.9453%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.6953%" y="437" width="0.0810%" height="15" fill="rgb(241,10,11)" fg:x="169" fg:w="1"/><text x="13.9453%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.6953%" y="421" width="0.0810%" height="15" fill="rgb(232,114,35)" fg:x="169" fg:w="1"/><text x="13.9453%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.6953%" y="405" width="0.0810%" height="15" fill="rgb(238,222,8)" fg:x="169" fg:w="1"/><text x="13.9453%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.6953%" y="389" width="0.0810%" height="15" fill="rgb(251,153,44)" fg:x="169" fg:w="1"/><text x="13.9453%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.6953%" y="373" width="0.0810%" height="15" fill="rgb(210,140,51)" fg:x="169" fg:w="1"/><text x="13.9453%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.6953%" y="357" width="0.0810%" height="15" fill="rgb(222,63,0)" fg:x="169" fg:w="1"/><text x="13.9453%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="13.7763%" y="581" width="0.0810%" height="15" fill="rgb(240,18,40)" fg:x="170" fg:w="1"/><text x="14.0263%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.7763%" y="565" width="0.0810%" height="15" fill="rgb(237,88,16)" fg:x="170" fg:w="1"/><text x="14.0263%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.7763%" y="549" width="0.0810%" height="15" fill="rgb(251,117,13)" fg:x="170" fg:w="1"/><text x="14.0263%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.7763%" y="533" width="0.0810%" height="15" fill="rgb(251,228,8)" fg:x="170" fg:w="1"/><text x="14.0263%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.7763%" y="517" width="0.0810%" height="15" fill="rgb(205,107,49)" fg:x="170" fg:w="1"/><text x="14.0263%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.7763%" y="501" width="0.0810%" height="15" fill="rgb(238,72,41)" fg:x="170" fg:w="1"/><text x="14.0263%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.7763%" y="485" width="0.0810%" height="15" fill="rgb(248,183,52)" fg:x="170" fg:w="1"/><text x="14.0263%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.7763%" y="469" width="0.0810%" height="15" fill="rgb(215,58,20)" fg:x="170" fg:w="1"/><text x="14.0263%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.7763%" y="629" width="0.1621%" height="15" fill="rgb(209,49,13)" fg:x="170" fg:w="2"/><text x="14.0263%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="13.7763%" y="613" width="0.1621%" height="15" fill="rgb(208,113,17)" fg:x="170" fg:w="2"/><text x="14.0263%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.7763%" y="597" width="0.1621%" height="15" fill="rgb(208,14,22)" fg:x="170" fg:w="2"/><text x="14.0263%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.8574%" y="581" width="0.0810%" height="15" fill="rgb(222,95,2)" fg:x="171" fg:w="1"/><text x="14.1074%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.8574%" y="565" width="0.0810%" height="15" fill="rgb(253,180,37)" fg:x="171" fg:w="1"/><text x="14.1074%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="13.8574%" y="549" width="0.0810%" height="15" fill="rgb(250,81,33)" fg:x="171" fg:w="1"/><text x="14.1074%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9384%" y="533" width="0.0810%" height="15" fill="rgb(251,151,41)" fg:x="172" fg:w="1"/><text x="14.1884%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.9384%" y="517" width="0.0810%" height="15" fill="rgb(210,135,17)" fg:x="172" fg:w="1"/><text x="14.1884%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9384%" y="501" width="0.0810%" height="15" fill="rgb(239,21,29)" fg:x="172" fg:w="1"/><text x="14.1884%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.9384%" y="581" width="0.1621%" height="15" fill="rgb(231,215,16)" fg:x="172" fg:w="2"/><text x="14.1884%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.9384%" y="565" width="0.1621%" height="15" fill="rgb(239,151,54)" fg:x="172" fg:w="2"/><text x="14.1884%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.9384%" y="549" width="0.1621%" height="15" fill="rgb(222,122,38)" fg:x="172" fg:w="2"/><text x="14.1884%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0194%" y="533" width="0.0810%" height="15" fill="rgb(243,128,1)" fg:x="173" fg:w="1"/><text x="14.2694%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.1005%" y="549" width="0.0810%" height="15" fill="rgb(225,74,21)" fg:x="174" fg:w="1"/><text x="14.3505%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.49%)</title><rect x="13.7763%" y="661" width="0.4862%" height="15" fill="rgb(216,210,10)" fg:x="170" fg:w="6"/><text x="14.0263%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.49%)</title><rect x="13.7763%" y="645" width="0.4862%" height="15" fill="rgb(228,76,19)" fg:x="170" fg:w="6"/><text x="14.0263%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="13.9384%" y="629" width="0.3241%" height="15" fill="rgb(236,80,34)" fg:x="172" fg:w="4"/><text x="14.1884%" y="639.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="13.9384%" y="613" width="0.3241%" height="15" fill="rgb(225,173,23)" fg:x="172" fg:w="4"/><text x="14.1884%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="13.9384%" y="597" width="0.3241%" height="15" fill="rgb(253,38,1)" fg:x="172" fg:w="4"/><text x="14.1884%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="14.1005%" y="581" width="0.1621%" height="15" fill="rgb(206,155,35)" fg:x="174" fg:w="2"/><text x="14.3505%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="14.1005%" y="565" width="0.1621%" height="15" fill="rgb(254,27,53)" fg:x="174" fg:w="2"/><text x="14.3505%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.1815%" y="549" width="0.0810%" height="15" fill="rgb(225,52,41)" fg:x="175" fg:w="1"/><text x="14.4315%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.1815%" y="533" width="0.0810%" height="15" fill="rgb(244,53,18)" fg:x="175" fg:w="1"/><text x="14.4315%" y="543.50"></text></g><g><title>plugins_core::build::Build::holding (21 samples, 1.70%)</title><rect x="12.6418%" y="709" width="1.7018%" height="15" fill="rgb(254,206,48)" fg:x="156" fg:w="21"/><text x="12.8918%" y="719.50"></text></g><g><title>plugins_core::tools::set_container (11 samples, 0.89%)</title><rect x="13.4522%" y="693" width="0.8914%" height="15" fill="rgb(236,182,23)" fg:x="166" fg:w="11"/><text x="13.7022%" y="703.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.57%)</title><rect x="13.7763%" y="677" width="0.5673%" height="15" fill="rgb(236,191,37)" fg:x="170" fg:w="7"/><text x="14.0263%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="14.2626%" y="661" width="0.0810%" height="15" fill="rgb(245,53,8)" fg:x="176" fg:w="1"/><text x="14.5126%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.2626%" y="645" width="0.0810%" height="15" fill="rgb(245,147,9)" fg:x="176" fg:w="1"/><text x="14.5126%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="14.2626%" y="629" width="0.0810%" height="15" fill="rgb(218,24,48)" fg:x="176" fg:w="1"/><text x="14.5126%" y="639.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="14.2626%" y="613" width="0.0810%" height="15" fill="rgb(254,23,9)" fg:x="176" fg:w="1"/><text x="14.5126%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="14.2626%" y="597" width="0.0810%" height="15" fill="rgb(244,105,9)" fg:x="176" fg:w="1"/><text x="14.5126%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3436%" y="629" width="0.0810%" height="15" fill="rgb(212,142,22)" fg:x="177" fg:w="1"/><text x="14.5936%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3436%" y="613" width="0.0810%" height="15" fill="rgb(221,114,49)" fg:x="177" fg:w="1"/><text x="14.5936%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3436%" y="597" width="0.0810%" height="15" fill="rgb(223,210,25)" fg:x="177" fg:w="1"/><text x="14.5936%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3436%" y="581" width="0.0810%" height="15" fill="rgb(235,162,44)" fg:x="177" fg:w="1"/><text x="14.5936%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="14.3436%" y="709" width="0.1621%" height="15" fill="rgb(237,65,45)" fg:x="177" fg:w="2"/><text x="14.5936%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="14.3436%" y="693" width="0.1621%" height="15" fill="rgb(208,79,9)" fg:x="177" fg:w="2"/><text x="14.5936%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="14.3436%" y="677" width="0.1621%" height="15" fill="rgb(215,228,8)" fg:x="177" fg:w="2"/><text x="14.5936%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="14.3436%" y="661" width="0.1621%" height="15" fill="rgb(205,185,17)" fg:x="177" fg:w="2"/><text x="14.5936%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.3436%" y="645" width="0.1621%" height="15" fill="rgb(213,62,36)" fg:x="177" fg:w="2"/><text x="14.5936%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="14.4246%" y="629" width="0.0810%" height="15" fill="rgb(209,34,9)" fg:x="178" fg:w="1"/><text x="14.6746%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.4246%" y="613" width="0.0810%" height="15" fill="rgb(246,151,27)" fg:x="178" fg:w="1"/><text x="14.6746%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.4246%" y="597" width="0.0810%" height="15" fill="rgb(218,206,3)" fg:x="178" fg:w="1"/><text x="14.6746%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.4246%" y="581" width="0.0810%" height="15" fill="rgb(242,202,1)" fg:x="178" fg:w="1"/><text x="14.6746%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.4246%" y="565" width="0.0810%" height="15" fill="rgb(227,185,16)" fg:x="178" fg:w="1"/><text x="14.6746%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.4246%" y="549" width="0.0810%" height="15" fill="rgb(241,1,14)" fg:x="178" fg:w="1"/><text x="14.6746%" y="559.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="14.5057%" y="677" width="0.0810%" height="15" fill="rgb(212,113,25)" fg:x="179" fg:w="1"/><text x="14.7557%" y="687.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="14.5867%" y="677" width="0.0810%" height="15" fill="rgb(247,37,43)" fg:x="180" fg:w="1"/><text x="14.8367%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.5867%" y="661" width="0.0810%" height="15" fill="rgb(226,54,8)" fg:x="180" fg:w="1"/><text x="14.8367%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.5867%" y="645" width="0.0810%" height="15" fill="rgb(251,205,25)" fg:x="180" fg:w="1"/><text x="14.8367%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.5867%" y="629" width="0.0810%" height="15" fill="rgb(246,87,35)" fg:x="180" fg:w="1"/><text x="14.8367%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="14.5867%" y="613" width="0.0810%" height="15" fill="rgb(251,145,46)" fg:x="180" fg:w="1"/><text x="14.8367%" y="623.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="14.5057%" y="709" width="0.2431%" height="15" fill="rgb(210,210,33)" fg:x="179" fg:w="3"/><text x="14.7557%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="14.5057%" y="693" width="0.2431%" height="15" fill="rgb(221,151,11)" fg:x="179" fg:w="3"/><text x="14.7557%" y="703.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="14.6677%" y="677" width="0.0810%" height="15" fill="rgb(208,160,28)" fg:x="181" fg:w="1"/><text x="14.9177%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="14.7488%" y="677" width="0.0810%" height="15" fill="rgb(243,69,29)" fg:x="182" fg:w="1"/><text x="14.9988%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="14.7488%" y="661" width="0.0810%" height="15" fill="rgb(224,144,4)" fg:x="182" fg:w="1"/><text x="14.9988%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.7488%" y="645" width="0.0810%" height="15" fill="rgb(211,140,38)" fg:x="182" fg:w="1"/><text x="14.9988%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.7488%" y="629" width="0.0810%" height="15" fill="rgb(252,189,15)" fg:x="182" fg:w="1"/><text x="14.9988%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.7488%" y="613" width="0.0810%" height="15" fill="rgb(251,175,23)" fg:x="182" fg:w="1"/><text x="14.9988%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.7488%" y="597" width="0.0810%" height="15" fill="rgb(212,184,11)" fg:x="182" fg:w="1"/><text x="14.9988%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.7488%" y="581" width="0.0810%" height="15" fill="rgb(217,205,6)" fg:x="182" fg:w="1"/><text x="14.9988%" y="591.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.8298%" y="629" width="0.0810%" height="15" fill="rgb(235,45,45)" fg:x="183" fg:w="1"/><text x="15.0798%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8298%" y="613" width="0.0810%" height="15" fill="rgb(211,157,53)" fg:x="183" fg:w="1"/><text x="15.0798%" y="623.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="14.8298%" y="677" width="0.1621%" height="15" fill="rgb(212,13,8)" fg:x="183" fg:w="2"/><text x="15.0798%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="14.8298%" y="661" width="0.1621%" height="15" fill="rgb(218,80,36)" fg:x="183" fg:w="2"/><text x="15.0798%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.8298%" y="645" width="0.1621%" height="15" fill="rgb(211,123,43)" fg:x="183" fg:w="2"/><text x="15.0798%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="14.9109%" y="629" width="0.0810%" height="15" fill="rgb(206,165,2)" fg:x="184" fg:w="1"/><text x="15.1609%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.9109%" y="613" width="0.0810%" height="15" fill="rgb(248,63,35)" fg:x="184" fg:w="1"/><text x="15.1609%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.9109%" y="597" width="0.0810%" height="15" fill="rgb(219,133,41)" fg:x="184" fg:w="1"/><text x="15.1609%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.9109%" y="581" width="0.0810%" height="15" fill="rgb(206,175,46)" fg:x="184" fg:w="1"/><text x="15.1609%" y="591.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="14.9919%" y="677" width="0.0810%" height="15" fill="rgb(224,41,35)" fg:x="185" fg:w="1"/><text x="15.2419%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="14.9919%" y="661" width="0.0810%" height="15" fill="rgb(226,113,24)" fg:x="185" fg:w="1"/><text x="15.2419%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.9919%" y="645" width="0.0810%" height="15" fill="rgb(219,51,41)" fg:x="185" fg:w="1"/><text x="15.2419%" y="655.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.9919%" y="629" width="0.0810%" height="15" fill="rgb(220,145,47)" fg:x="185" fg:w="1"/><text x="15.2419%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.9919%" y="613" width="0.0810%" height="15" fill="rgb(239,121,47)" fg:x="185" fg:w="1"/><text x="15.2419%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.9919%" y="597" width="0.0810%" height="15" fill="rgb(207,60,40)" fg:x="185" fg:w="1"/><text x="15.2419%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="14.7488%" y="693" width="0.4052%" height="15" fill="rgb(224,229,11)" fg:x="182" fg:w="5"/><text x="14.9988%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="15.0729%" y="677" width="0.0810%" height="15" fill="rgb(252,28,32)" fg:x="186" fg:w="1"/><text x="15.3229%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="15.0729%" y="661" width="0.0810%" height="15" fill="rgb(207,52,49)" fg:x="186" fg:w="1"/><text x="15.3229%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="15.0729%" y="645" width="0.0810%" height="15" fill="rgb(243,51,50)" fg:x="186" fg:w="1"/><text x="15.3229%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="15.0729%" y="629" width="0.0810%" height="15" fill="rgb(212,92,21)" fg:x="186" fg:w="1"/><text x="15.3229%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.0729%" y="613" width="0.0810%" height="15" fill="rgb(230,183,50)" fg:x="186" fg:w="1"/><text x="15.3229%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0729%" y="597" width="0.0810%" height="15" fill="rgb(225,48,9)" fg:x="186" fg:w="1"/><text x="15.3229%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0729%" y="581" width="0.0810%" height="15" fill="rgb(254,44,4)" fg:x="186" fg:w="1"/><text x="15.3229%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0729%" y="565" width="0.0810%" height="15" fill="rgb(252,128,37)" fg:x="186" fg:w="1"/><text x="15.3229%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0729%" y="549" width="0.0810%" height="15" fill="rgb(227,178,8)" fg:x="186" fg:w="1"/><text x="15.3229%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.1540%" y="645" width="0.0810%" height="15" fill="rgb(205,206,32)" fg:x="187" fg:w="1"/><text x="15.4040%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.1540%" y="629" width="0.0810%" height="15" fill="rgb(220,218,22)" fg:x="187" fg:w="1"/><text x="15.4040%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.1540%" y="613" width="0.0810%" height="15" fill="rgb(236,41,28)" fg:x="187" fg:w="1"/><text x="15.4040%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.1540%" y="597" width="0.0810%" height="15" fill="rgb(219,37,7)" fg:x="187" fg:w="1"/><text x="15.4040%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1540%" y="581" width="0.0810%" height="15" fill="rgb(206,160,15)" fg:x="187" fg:w="1"/><text x="15.4040%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.1540%" y="565" width="0.0810%" height="15" fill="rgb(208,82,21)" fg:x="187" fg:w="1"/><text x="15.4040%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1540%" y="549" width="0.0810%" height="15" fill="rgb(226,130,25)" fg:x="187" fg:w="1"/><text x="15.4040%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.1540%" y="533" width="0.0810%" height="15" fill="rgb(212,72,24)" fg:x="187" fg:w="1"/><text x="15.4040%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.1540%" y="517" width="0.0810%" height="15" fill="rgb(206,28,16)" fg:x="187" fg:w="1"/><text x="15.4040%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.1540%" y="501" width="0.0810%" height="15" fill="rgb(249,41,5)" fg:x="187" fg:w="1"/><text x="15.4040%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.1540%" y="485" width="0.0810%" height="15" fill="rgb(233,96,48)" fg:x="187" fg:w="1"/><text x="15.4040%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="15.1540%" y="469" width="0.0810%" height="15" fill="rgb(240,198,11)" fg:x="187" fg:w="1"/><text x="15.4040%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.2350%" y="549" width="0.0810%" height="15" fill="rgb(209,175,35)" fg:x="188" fg:w="1"/><text x="15.4850%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="15.1540%" y="677" width="0.2431%" height="15" fill="rgb(214,40,51)" fg:x="187" fg:w="3"/><text x="15.4040%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="15.1540%" y="661" width="0.2431%" height="15" fill="rgb(252,56,4)" fg:x="187" fg:w="3"/><text x="15.4040%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="15.2350%" y="645" width="0.1621%" height="15" fill="rgb(219,131,5)" fg:x="188" fg:w="2"/><text x="15.4850%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="15.2350%" y="629" width="0.1621%" height="15" fill="rgb(223,67,53)" fg:x="188" fg:w="2"/><text x="15.4850%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="15.2350%" y="613" width="0.1621%" height="15" fill="rgb(227,154,8)" fg:x="188" fg:w="2"/><text x="15.4850%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.2350%" y="597" width="0.1621%" height="15" fill="rgb(216,174,51)" fg:x="188" fg:w="2"/><text x="15.4850%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.2350%" y="581" width="0.1621%" height="15" fill="rgb(239,60,34)" fg:x="188" fg:w="2"/><text x="15.4850%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.2350%" y="565" width="0.1621%" height="15" fill="rgb(236,165,48)" fg:x="188" fg:w="2"/><text x="15.4850%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3160%" y="549" width="0.0810%" height="15" fill="rgb(210,37,26)" fg:x="189" fg:w="1"/><text x="15.5660%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3160%" y="533" width="0.0810%" height="15" fill="rgb(211,3,17)" fg:x="189" fg:w="1"/><text x="15.5660%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.3160%" y="517" width="0.0810%" height="15" fill="rgb(234,88,49)" fg:x="189" fg:w="1"/><text x="15.5660%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.3160%" y="501" width="0.0810%" height="15" fill="rgb(233,40,17)" fg:x="189" fg:w="1"/><text x="15.5660%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.3160%" y="485" width="0.0810%" height="15" fill="rgb(235,127,31)" fg:x="189" fg:w="1"/><text x="15.5660%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.3160%" y="469" width="0.0810%" height="15" fill="rgb(248,167,17)" fg:x="189" fg:w="1"/><text x="15.5660%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.3160%" y="453" width="0.0810%" height="15" fill="rgb(218,179,8)" fg:x="189" fg:w="1"/><text x="15.5660%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.3160%" y="437" width="0.0810%" height="15" fill="rgb(216,92,14)" fg:x="189" fg:w="1"/><text x="15.5660%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.3160%" y="421" width="0.0810%" height="15" fill="rgb(221,198,46)" fg:x="189" fg:w="1"/><text x="15.5660%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.3160%" y="405" width="0.0810%" height="15" fill="rgb(244,7,25)" fg:x="189" fg:w="1"/><text x="15.5660%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.3160%" y="389" width="0.0810%" height="15" fill="rgb(233,75,6)" fg:x="189" fg:w="1"/><text x="15.5660%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3160%" y="373" width="0.0810%" height="15" fill="rgb(240,189,41)" fg:x="189" fg:w="1"/><text x="15.5660%" y="383.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (91 samples, 7.37%)</title><rect x="8.1037%" y="725" width="7.3744%" height="15" fill="rgb(237,157,21)" fg:x="100" fg:w="91"/><text x="8.3537%" y="735.50">plugins_co..</text></g><g><title>plugins_core::build::Build::occupying (9 samples, 0.73%)</title><rect x="14.7488%" y="709" width="0.7293%" height="15" fill="rgb(210,136,49)" fg:x="182" fg:w="9"/><text x="14.9988%" y="719.50"></text></g><g><title>plugins_core::tools::set_occupying (4 samples, 0.32%)</title><rect x="15.1540%" y="693" width="0.3241%" height="15" fill="rgb(210,68,29)" fg:x="187" fg:w="4"/><text x="15.4040%" y="703.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="15.3971%" y="677" width="0.0810%" height="15" fill="rgb(247,207,20)" fg:x="190" fg:w="1"/><text x="15.6471%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="15.3971%" y="661" width="0.0810%" height="15" fill="rgb(224,73,48)" fg:x="190" fg:w="1"/><text x="15.6471%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="15.3971%" y="645" width="0.0810%" height="15" fill="rgb(215,136,47)" fg:x="190" fg:w="1"/><text x="15.6471%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.3971%" y="629" width="0.0810%" height="15" fill="rgb(232,222,16)" fg:x="190" fg:w="1"/><text x="15.6471%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.3971%" y="613" width="0.0810%" height="15" fill="rgb(249,202,47)" fg:x="190" fg:w="1"/><text x="15.6471%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.3971%" y="597" width="0.0810%" height="15" fill="rgb(236,56,8)" fg:x="190" fg:w="1"/><text x="15.6471%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.3971%" y="581" width="0.0810%" height="15" fill="rgb(222,6,3)" fg:x="190" fg:w="1"/><text x="15.6471%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.3971%" y="565" width="0.0810%" height="15" fill="rgb(254,222,28)" fg:x="190" fg:w="1"/><text x="15.6471%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="15.4781%" y="725" width="0.0810%" height="15" fill="rgb(219,57,23)" fg:x="191" fg:w="1"/><text x="15.7281%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="15.4781%" y="709" width="0.0810%" height="15" fill="rgb(251,106,48)" fg:x="191" fg:w="1"/><text x="15.7281%" y="719.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="15.4781%" y="693" width="0.0810%" height="15" fill="rgb(242,2,23)" fg:x="191" fg:w="1"/><text x="15.7281%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="15.4781%" y="677" width="0.0810%" height="15" fill="rgb(212,109,31)" fg:x="191" fg:w="1"/><text x="15.7281%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="15.4781%" y="661" width="0.0810%" height="15" fill="rgb(241,9,22)" fg:x="191" fg:w="1"/><text x="15.7281%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.5592%" y="677" width="0.0810%" height="15" fill="rgb(209,64,27)" fg:x="192" fg:w="1"/><text x="15.8092%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.5592%" y="661" width="0.0810%" height="15" fill="rgb(248,13,44)" fg:x="192" fg:w="1"/><text x="15.8092%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.5592%" y="645" width="0.0810%" height="15" fill="rgb(213,86,6)" fg:x="192" fg:w="1"/><text x="15.8092%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5592%" y="629" width="0.0810%" height="15" fill="rgb(247,11,18)" fg:x="192" fg:w="1"/><text x="15.8092%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5592%" y="613" width="0.0810%" height="15" fill="rgb(252,31,11)" fg:x="192" fg:w="1"/><text x="15.8092%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5592%" y="597" width="0.0810%" height="15" fill="rgb(215,63,51)" fg:x="192" fg:w="1"/><text x="15.8092%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.5592%" y="581" width="0.0810%" height="15" fill="rgb(222,180,4)" fg:x="192" fg:w="1"/><text x="15.8092%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="15.6402%" y="661" width="0.1621%" height="15" fill="rgb(233,4,23)" fg:x="193" fg:w="2"/><text x="15.8902%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="15.6402%" y="645" width="0.1621%" height="15" fill="rgb(230,116,22)" fg:x="193" fg:w="2"/><text x="15.8902%" y="655.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="15.6402%" y="629" width="0.1621%" height="15" fill="rgb(222,20,14)" fg:x="193" fg:w="2"/><text x="15.8902%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="15.6402%" y="613" width="0.1621%" height="15" fill="rgb(210,176,43)" fg:x="193" fg:w="2"/><text x="15.8902%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="15.7212%" y="597" width="0.0810%" height="15" fill="rgb(219,67,32)" fg:x="194" fg:w="1"/><text x="15.9712%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.7212%" y="581" width="0.0810%" height="15" fill="rgb(228,91,39)" fg:x="194" fg:w="1"/><text x="15.9712%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7212%" y="565" width="0.0810%" height="15" fill="rgb(254,63,14)" fg:x="194" fg:w="1"/><text x="15.9712%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7212%" y="549" width="0.0810%" height="15" fill="rgb(216,171,39)" fg:x="194" fg:w="1"/><text x="15.9712%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.7212%" y="533" width="0.0810%" height="15" fill="rgb(248,68,25)" fg:x="194" fg:w="1"/><text x="15.9712%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="15.5592%" y="693" width="0.3241%" height="15" fill="rgb(239,63,16)" fg:x="192" fg:w="4"/><text x="15.8092%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="15.6402%" y="677" width="0.2431%" height="15" fill="rgb(225,111,43)" fg:x="193" fg:w="3"/><text x="15.8902%" y="687.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="15.8023%" y="661" width="0.0810%" height="15" fill="rgb(246,165,17)" fg:x="195" fg:w="1"/><text x="16.0523%" y="671.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.41%)</title><rect x="15.5592%" y="725" width="0.4052%" height="15" fill="rgb(208,124,1)" fg:x="192" fg:w="5"/><text x="15.8092%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.41%)</title><rect x="15.5592%" y="709" width="0.4052%" height="15" fill="rgb(234,147,33)" fg:x="192" fg:w="5"/><text x="15.8092%" y="719.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="15.8833%" y="693" width="0.0810%" height="15" fill="rgb(240,86,30)" fg:x="196" fg:w="1"/><text x="16.1333%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="15.8833%" y="677" width="0.0810%" height="15" fill="rgb(237,34,51)" fg:x="196" fg:w="1"/><text x="16.1333%" y="687.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="15.8833%" y="661" width="0.0810%" height="15" fill="rgb(232,131,41)" fg:x="196" fg:w="1"/><text x="16.1333%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.8833%" y="645" width="0.0810%" height="15" fill="rgb(227,129,53)" fg:x="196" fg:w="1"/><text x="16.1333%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="15.8833%" y="629" width="0.0810%" height="15" fill="rgb(230,90,35)" fg:x="196" fg:w="1"/><text x="16.1333%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.8833%" y="613" width="0.0810%" height="15" fill="rgb(248,88,27)" fg:x="196" fg:w="1"/><text x="16.1333%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="15.8833%" y="597" width="0.0810%" height="15" fill="rgb(223,18,17)" fg:x="196" fg:w="1"/><text x="16.1333%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.8833%" y="581" width="0.0810%" height="15" fill="rgb(241,11,10)" fg:x="196" fg:w="1"/><text x="16.1333%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.8833%" y="565" width="0.0810%" height="15" fill="rgb(232,111,52)" fg:x="196" fg:w="1"/><text x="16.1333%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="15.8833%" y="549" width="0.0810%" height="15" fill="rgb(228,67,8)" fg:x="196" fg:w="1"/><text x="16.1333%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="15.8833%" y="533" width="0.0810%" height="15" fill="rgb(251,168,31)" fg:x="196" fg:w="1"/><text x="16.1333%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.8833%" y="517" width="0.0810%" height="15" fill="rgb(249,164,11)" fg:x="196" fg:w="1"/><text x="16.1333%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.0454%" y="693" width="0.0810%" height="15" fill="rgb(239,81,9)" fg:x="198" fg:w="1"/><text x="16.2954%" y="703.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="16.0454%" y="677" width="0.0810%" height="15" fill="rgb(222,145,38)" fg:x="198" fg:w="1"/><text x="16.2954%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.1264%" y="645" width="0.0810%" height="15" fill="rgb(238,80,54)" fg:x="199" fg:w="1"/><text x="16.3764%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.1264%" y="629" width="0.0810%" height="15" fill="rgb(237,116,16)" fg:x="199" fg:w="1"/><text x="16.3764%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.1264%" y="613" width="0.0810%" height="15" fill="rgb(218,135,19)" fg:x="199" fg:w="1"/><text x="16.3764%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.1264%" y="597" width="0.0810%" height="15" fill="rgb(216,207,44)" fg:x="199" fg:w="1"/><text x="16.3764%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.1264%" y="581" width="0.0810%" height="15" fill="rgb(226,152,40)" fg:x="199" fg:w="1"/><text x="16.3764%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.1264%" y="565" width="0.0810%" height="15" fill="rgb(219,98,35)" fg:x="199" fg:w="1"/><text x="16.3764%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.1264%" y="549" width="0.0810%" height="15" fill="rgb(222,136,46)" fg:x="199" fg:w="1"/><text x="16.3764%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.1264%" y="533" width="0.0810%" height="15" fill="rgb(222,71,8)" fg:x="199" fg:w="1"/><text x="16.3764%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.1264%" y="517" width="0.0810%" height="15" fill="rgb(209,89,53)" fg:x="199" fg:w="1"/><text x="16.3764%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.1264%" y="501" width="0.0810%" height="15" fill="rgb(210,97,51)" fg:x="199" fg:w="1"/><text x="16.3764%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="16.1264%" y="693" width="0.1621%" height="15" fill="rgb(248,65,21)" fg:x="199" fg:w="2"/><text x="16.3764%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="16.1264%" y="677" width="0.1621%" height="15" fill="rgb(222,5,31)" fg:x="199" fg:w="2"/><text x="16.3764%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="16.1264%" y="661" width="0.1621%" height="15" fill="rgb(241,16,30)" fg:x="199" fg:w="2"/><text x="16.3764%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="16.2075%" y="645" width="0.0810%" height="15" fill="rgb(215,86,30)" fg:x="200" fg:w="1"/><text x="16.4575%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.2075%" y="629" width="0.0810%" height="15" fill="rgb(235,26,44)" fg:x="200" fg:w="1"/><text x="16.4575%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="15.9643%" y="709" width="0.4052%" height="15" fill="rgb(228,147,14)" fg:x="197" fg:w="5"/><text x="16.2143%" y="719.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="16.2885%" y="693" width="0.0810%" height="15" fill="rgb(253,38,50)" fg:x="201" fg:w="1"/><text x="16.5385%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="16.3695%" y="709" width="0.0810%" height="15" fill="rgb(251,151,16)" fg:x="202" fg:w="1"/><text x="16.6195%" y="719.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="16.4506%" y="709" width="0.0810%" height="15" fill="rgb(224,64,19)" fg:x="203" fg:w="1"/><text x="16.7006%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="16.5316%" y="661" width="0.0810%" height="15" fill="rgb(235,214,47)" fg:x="204" fg:w="1"/><text x="16.7816%" y="671.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (166 samples, 13.45%)</title><rect x="3.3225%" y="741" width="13.4522%" height="15" fill="rgb(218,15,19)" fg:x="41" fg:w="166"/><text x="3.5725%" y="751.50">&lt;tests::HoldingKeyIn..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (10 samples, 0.81%)</title><rect x="15.9643%" y="725" width="0.8104%" height="15" fill="rgb(247,209,3)" fg:x="197" fg:w="10"/><text x="16.2143%" y="735.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="16.5316%" y="709" width="0.2431%" height="15" fill="rgb(217,29,2)" fg:x="204" fg:w="3"/><text x="16.7816%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="16.5316%" y="693" width="0.2431%" height="15" fill="rgb(234,9,9)" fg:x="204" fg:w="3"/><text x="16.7816%" y="703.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="16.5316%" y="677" width="0.2431%" height="15" fill="rgb(207,43,14)" fg:x="204" fg:w="3"/><text x="16.7816%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="16.6126%" y="661" width="0.1621%" height="15" fill="rgb(216,219,36)" fg:x="205" fg:w="2"/><text x="16.8626%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="16.6126%" y="645" width="0.1621%" height="15" fill="rgb(238,12,26)" fg:x="205" fg:w="2"/><text x="16.8626%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.6126%" y="629" width="0.1621%" height="15" fill="rgb(226,67,30)" fg:x="205" fg:w="2"/><text x="16.8626%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="16.6126%" y="613" width="0.1621%" height="15" fill="rgb(229,154,7)" fg:x="205" fg:w="2"/><text x="16.8626%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.6126%" y="597" width="0.1621%" height="15" fill="rgb(249,90,18)" fg:x="205" fg:w="2"/><text x="16.8626%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="16.6126%" y="581" width="0.1621%" height="15" fill="rgb(223,53,15)" fg:x="205" fg:w="2"/><text x="16.8626%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="16.6937%" y="565" width="0.0810%" height="15" fill="rgb(253,86,38)" fg:x="206" fg:w="1"/><text x="16.9437%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.6937%" y="549" width="0.0810%" height="15" fill="rgb(222,198,9)" fg:x="206" fg:w="1"/><text x="16.9437%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.6937%" y="533" width="0.0810%" height="15" fill="rgb(240,146,25)" fg:x="206" fg:w="1"/><text x="16.9437%" y="543.50"></text></g><g><title>engine::domain::Domain::new (1 samples, 0.08%)</title><rect x="16.7747%" y="741" width="0.0810%" height="15" fill="rgb(225,38,10)" fg:x="207" fg:w="1"/><text x="17.0247%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="16.9368%" y="725" width="0.0810%" height="15" fill="rgb(246,93,4)" fg:x="209" fg:w="1"/><text x="17.1868%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="17.0178%" y="725" width="0.0810%" height="15" fill="rgb(222,55,18)" fg:x="210" fg:w="1"/><text x="17.2678%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="17.0178%" y="709" width="0.0810%" height="15" fill="rgb(233,137,48)" fg:x="210" fg:w="1"/><text x="17.2678%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.0178%" y="693" width="0.0810%" height="15" fill="rgb(214,8,54)" fg:x="210" fg:w="1"/><text x="17.2678%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.0178%" y="677" width="0.0810%" height="15" fill="rgb(206,75,4)" fg:x="210" fg:w="1"/><text x="17.2678%" y="687.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="17.0178%" y="661" width="0.0810%" height="15" fill="rgb(238,171,14)" fg:x="210" fg:w="1"/><text x="17.2678%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="17.0178%" y="645" width="0.0810%" height="15" fill="rgb(233,70,41)" fg:x="210" fg:w="1"/><text x="17.2678%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="17.0178%" y="629" width="0.0810%" height="15" fill="rgb(214,68,36)" fg:x="210" fg:w="1"/><text x="17.2678%" y="639.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="17.0989%" y="725" width="0.0810%" height="15" fill="rgb(223,29,5)" fg:x="211" fg:w="1"/><text x="17.3489%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="17.1799%" y="453" width="0.0810%" height="15" fill="rgb(251,22,40)" fg:x="212" fg:w="1"/><text x="17.4299%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="17.1799%" y="437" width="0.0810%" height="15" fill="rgb(210,67,41)" fg:x="212" fg:w="1"/><text x="17.4299%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="17.1799%" y="421" width="0.0810%" height="15" fill="rgb(225,177,31)" fg:x="212" fg:w="1"/><text x="17.4299%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="17.1799%" y="405" width="0.0810%" height="15" fill="rgb(221,229,11)" fg:x="212" fg:w="1"/><text x="17.4299%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.1799%" y="389" width="0.0810%" height="15" fill="rgb(247,172,52)" fg:x="212" fg:w="1"/><text x="17.4299%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.1799%" y="373" width="0.0810%" height="15" fill="rgb(212,73,19)" fg:x="212" fg:w="1"/><text x="17.4299%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="17.1799%" y="549" width="0.1621%" height="15" fill="rgb(244,7,46)" fg:x="212" fg:w="2"/><text x="17.4299%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="17.1799%" y="533" width="0.1621%" height="15" fill="rgb(230,113,20)" fg:x="212" fg:w="2"/><text x="17.4299%" y="543.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="17.1799%" y="517" width="0.1621%" height="15" fill="rgb(209,97,30)" fg:x="212" fg:w="2"/><text x="17.4299%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="17.1799%" y="501" width="0.1621%" height="15" fill="rgb(243,89,12)" fg:x="212" fg:w="2"/><text x="17.4299%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="17.1799%" y="485" width="0.1621%" height="15" fill="rgb(228,32,19)" fg:x="212" fg:w="2"/><text x="17.4299%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="17.1799%" y="469" width="0.1621%" height="15" fill="rgb(248,25,17)" fg:x="212" fg:w="2"/><text x="17.4299%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="17.2609%" y="453" width="0.0810%" height="15" fill="rgb(232,161,29)" fg:x="213" fg:w="1"/><text x="17.5109%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="17.1799%" y="693" width="0.2431%" height="15" fill="rgb(251,192,11)" fg:x="212" fg:w="3"/><text x="17.4299%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="17.1799%" y="677" width="0.2431%" height="15" fill="rgb(240,47,32)" fg:x="212" fg:w="3"/><text x="17.4299%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="17.1799%" y="661" width="0.2431%" height="15" fill="rgb(250,16,45)" fg:x="212" fg:w="3"/><text x="17.4299%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="17.1799%" y="645" width="0.2431%" height="15" fill="rgb(227,217,42)" fg:x="212" fg:w="3"/><text x="17.4299%" y="655.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="17.1799%" y="629" width="0.2431%" height="15" fill="rgb(206,82,54)" fg:x="212" fg:w="3"/><text x="17.4299%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="17.1799%" y="613" width="0.2431%" height="15" fill="rgb(243,145,25)" fg:x="212" fg:w="3"/><text x="17.4299%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="17.1799%" y="597" width="0.2431%" height="15" fill="rgb(207,166,24)" fg:x="212" fg:w="3"/><text x="17.4299%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="17.1799%" y="581" width="0.2431%" height="15" fill="rgb(215,191,44)" fg:x="212" fg:w="3"/><text x="17.4299%" y="591.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="17.1799%" y="565" width="0.2431%" height="15" fill="rgb(234,218,51)" fg:x="212" fg:w="3"/><text x="17.4299%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="17.3420%" y="549" width="0.0810%" height="15" fill="rgb(245,133,21)" fg:x="214" fg:w="1"/><text x="17.5920%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="17.3420%" y="533" width="0.0810%" height="15" fill="rgb(230,136,45)" fg:x="214" fg:w="1"/><text x="17.5920%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.3420%" y="517" width="0.0810%" height="15" fill="rgb(247,63,43)" fg:x="214" fg:w="1"/><text x="17.5920%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.3420%" y="501" width="0.0810%" height="15" fill="rgb(254,223,31)" fg:x="214" fg:w="1"/><text x="17.5920%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.5041%" y="613" width="0.0810%" height="15" fill="rgb(236,185,0)" fg:x="216" fg:w="1"/><text x="17.7541%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="17.5851%" y="613" width="0.1621%" height="15" fill="rgb(231,139,46)" fg:x="217" fg:w="2"/><text x="17.8351%" y="623.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="17.5851%" y="597" width="0.1621%" height="15" fill="rgb(236,147,31)" fg:x="217" fg:w="2"/><text x="17.8351%" y="607.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="17.5851%" y="581" width="0.1621%" height="15" fill="rgb(225,222,22)" fg:x="217" fg:w="2"/><text x="17.8351%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.5851%" y="565" width="0.1621%" height="15" fill="rgb(225,193,14)" fg:x="217" fg:w="2"/><text x="17.8351%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.5851%" y="549" width="0.1621%" height="15" fill="rgb(253,193,46)" fg:x="217" fg:w="2"/><text x="17.8351%" y="559.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (9 samples, 0.73%)</title><rect x="17.1799%" y="709" width="0.7293%" height="15" fill="rgb(218,187,39)" fg:x="212" fg:w="9"/><text x="17.4299%" y="719.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (6 samples, 0.49%)</title><rect x="17.4230%" y="693" width="0.4862%" height="15" fill="rgb(227,162,48)" fg:x="215" fg:w="6"/><text x="17.6730%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.49%)</title><rect x="17.4230%" y="677" width="0.4862%" height="15" fill="rgb(222,25,5)" fg:x="215" fg:w="6"/><text x="17.6730%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="17.4230%" y="661" width="0.4862%" height="15" fill="rgb(211,205,16)" fg:x="215" fg:w="6"/><text x="17.6730%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.41%)</title><rect x="17.5041%" y="645" width="0.4052%" height="15" fill="rgb(244,191,2)" fg:x="216" fg:w="5"/><text x="17.7541%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.41%)</title><rect x="17.5041%" y="629" width="0.4052%" height="15" fill="rgb(248,159,12)" fg:x="216" fg:w="5"/><text x="17.7541%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.7472%" y="613" width="0.1621%" height="15" fill="rgb(235,204,17)" fg:x="219" fg:w="2"/><text x="17.9972%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.8282%" y="597" width="0.0810%" height="15" fill="rgb(240,21,27)" fg:x="220" fg:w="1"/><text x="18.0782%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8282%" y="581" width="0.0810%" height="15" fill="rgb(224,170,31)" fg:x="220" fg:w="1"/><text x="18.0782%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::state::RaisedEvent&gt; (1 samples, 0.08%)</title><rect x="17.9092%" y="709" width="0.0810%" height="15" fill="rgb(223,145,32)" fg:x="221" fg:w="1"/><text x="18.1592%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="17.9092%" y="693" width="0.0810%" height="15" fill="rgb(243,100,5)" fg:x="221" fg:w="1"/><text x="18.1592%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.9092%" y="677" width="0.0810%" height="15" fill="rgb(242,131,51)" fg:x="221" fg:w="1"/><text x="18.1592%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="17.9903%" y="693" width="0.0810%" height="15" fill="rgb(223,156,46)" fg:x="222" fg:w="1"/><text x="18.2403%" y="703.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="18.0713%" y="693" width="0.0810%" height="15" fill="rgb(215,10,40)" fg:x="223" fg:w="1"/><text x="18.3213%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="18.0713%" y="677" width="0.0810%" height="15" fill="rgb(233,155,0)" fg:x="223" fg:w="1"/><text x="18.3213%" y="687.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="18.0713%" y="661" width="0.0810%" height="15" fill="rgb(247,78,6)" fg:x="223" fg:w="1"/><text x="18.3213%" y="671.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="18.0713%" y="645" width="0.0810%" height="15" fill="rgb(237,217,21)" fg:x="223" fg:w="1"/><text x="18.3213%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.0713%" y="629" width="0.0810%" height="15" fill="rgb(212,1,21)" fg:x="223" fg:w="1"/><text x="18.3213%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="18.1524%" y="661" width="0.0810%" height="15" fill="rgb(213,7,14)" fg:x="224" fg:w="1"/><text x="18.4024%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.1524%" y="645" width="0.0810%" height="15" fill="rgb(225,84,14)" fg:x="224" fg:w="1"/><text x="18.4024%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.1524%" y="629" width="0.0810%" height="15" fill="rgb(239,216,39)" fg:x="224" fg:w="1"/><text x="18.4024%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.1524%" y="613" width="0.0810%" height="15" fill="rgb(253,29,23)" fg:x="224" fg:w="1"/><text x="18.4024%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.1524%" y="597" width="0.0810%" height="15" fill="rgb(220,167,50)" fg:x="224" fg:w="1"/><text x="18.4024%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="18.3144%" y="629" width="0.0810%" height="15" fill="rgb(232,141,1)" fg:x="226" fg:w="1"/><text x="18.5644%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.3144%" y="613" width="0.0810%" height="15" fill="rgb(222,210,1)" fg:x="226" fg:w="1"/><text x="18.5644%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.3144%" y="597" width="0.0810%" height="15" fill="rgb(219,84,10)" fg:x="226" fg:w="1"/><text x="18.5644%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="18.2334%" y="645" width="0.3241%" height="15" fill="rgb(245,188,6)" fg:x="225" fg:w="4"/><text x="18.4834%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="18.3955%" y="629" width="0.1621%" height="15" fill="rgb(252,139,39)" fg:x="227" fg:w="2"/><text x="18.6455%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="18.3955%" y="613" width="0.1621%" height="15" fill="rgb(218,42,26)" fg:x="227" fg:w="2"/><text x="18.6455%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.4765%" y="597" width="0.0810%" height="15" fill="rgb(237,226,51)" fg:x="228" fg:w="1"/><text x="18.7265%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.41%)</title><rect x="18.6386%" y="629" width="0.4052%" height="15" fill="rgb(246,15,17)" fg:x="230" fg:w="5"/><text x="18.8886%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="18.7196%" y="613" width="0.3241%" height="15" fill="rgb(228,170,42)" fg:x="231" fg:w="4"/><text x="18.9696%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="18.8006%" y="597" width="0.2431%" height="15" fill="rgb(248,118,53)" fg:x="232" fg:w="3"/><text x="19.0506%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="18.8006%" y="581" width="0.2431%" height="15" fill="rgb(207,30,10)" fg:x="232" fg:w="3"/><text x="19.0506%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="18.8817%" y="565" width="0.1621%" height="15" fill="rgb(217,104,38)" fg:x="233" fg:w="2"/><text x="19.1317%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="18.8817%" y="549" width="0.1621%" height="15" fill="rgb(211,165,26)" fg:x="233" fg:w="2"/><text x="19.1317%" y="559.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="18.8817%" y="533" width="0.1621%" height="15" fill="rgb(247,38,9)" fg:x="233" fg:w="2"/><text x="19.1317%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="19.0438%" y="613" width="0.2431%" height="15" fill="rgb(218,187,8)" fg:x="235" fg:w="3"/><text x="19.2938%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="19.0438%" y="597" width="0.2431%" height="15" fill="rgb(247,94,28)" fg:x="235" fg:w="3"/><text x="19.2938%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="19.0438%" y="581" width="0.2431%" height="15" fill="rgb(218,173,30)" fg:x="235" fg:w="3"/><text x="19.2938%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="19.1248%" y="565" width="0.1621%" height="15" fill="rgb(245,45,36)" fg:x="236" fg:w="2"/><text x="19.3748%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="19.2869%" y="613" width="0.1621%" height="15" fill="rgb(221,172,44)" fg:x="238" fg:w="2"/><text x="19.5369%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.4489%" y="597" width="0.0810%" height="15" fill="rgb(222,45,12)" fg:x="240" fg:w="1"/><text x="19.6989%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.6110%" y="581" width="0.0810%" height="15" fill="rgb(250,10,22)" fg:x="242" fg:w="1"/><text x="19.8610%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.6110%" y="565" width="0.0810%" height="15" fill="rgb(239,27,0)" fg:x="242" fg:w="1"/><text x="19.8610%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.6110%" y="549" width="0.0810%" height="15" fill="rgb(223,118,22)" fg:x="242" fg:w="1"/><text x="19.8610%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.6110%" y="533" width="0.0810%" height="15" fill="rgb(251,81,25)" fg:x="242" fg:w="1"/><text x="19.8610%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.6110%" y="517" width="0.0810%" height="15" fill="rgb(237,225,53)" fg:x="242" fg:w="1"/><text x="19.8610%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.6110%" y="501" width="0.0810%" height="15" fill="rgb(237,186,51)" fg:x="242" fg:w="1"/><text x="19.8610%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.6110%" y="485" width="0.0810%" height="15" fill="rgb(247,209,11)" fg:x="242" fg:w="1"/><text x="19.8610%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.8541%" y="565" width="0.0810%" height="15" fill="rgb(223,109,27)" fg:x="245" fg:w="1"/><text x="20.1041%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.9352%" y="565" width="0.0810%" height="15" fill="rgb(246,181,13)" fg:x="246" fg:w="1"/><text x="20.1852%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.9352%" y="549" width="0.0810%" height="15" fill="rgb(234,57,44)" fg:x="246" fg:w="1"/><text x="20.1852%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.0162%" y="549" width="0.0810%" height="15" fill="rgb(211,227,50)" fg:x="247" fg:w="1"/><text x="20.2662%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="20.0162%" y="565" width="0.1621%" height="15" fill="rgb(254,57,34)" fg:x="247" fg:w="2"/><text x="20.2662%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.0972%" y="549" width="0.0810%" height="15" fill="rgb(227,212,26)" fg:x="248" fg:w="1"/><text x="20.3472%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.0972%" y="533" width="0.0810%" height="15" fill="rgb(244,169,44)" fg:x="248" fg:w="1"/><text x="20.3472%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.0972%" y="517" width="0.0810%" height="15" fill="rgb(236,135,50)" fg:x="248" fg:w="1"/><text x="20.3472%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.0972%" y="501" width="0.0810%" height="15" fill="rgb(241,89,30)" fg:x="248" fg:w="1"/><text x="20.3472%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="19.5300%" y="597" width="0.7293%" height="15" fill="rgb(206,113,34)" fg:x="241" fg:w="9"/><text x="19.7800%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="19.6921%" y="581" width="0.5673%" height="15" fill="rgb(218,104,52)" fg:x="243" fg:w="7"/><text x="19.9421%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.1783%" y="565" width="0.0810%" height="15" fill="rgb(223,82,32)" fg:x="249" fg:w="1"/><text x="20.4283%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.1783%" y="549" width="0.0810%" height="15" fill="rgb(249,219,30)" fg:x="249" fg:w="1"/><text x="20.4283%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.1783%" y="533" width="0.0810%" height="15" fill="rgb(233,141,21)" fg:x="249" fg:w="1"/><text x="20.4283%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.1783%" y="517" width="0.0810%" height="15" fill="rgb(252,87,44)" fg:x="249" fg:w="1"/><text x="20.4283%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.1783%" y="501" width="0.0810%" height="15" fill="rgb(229,48,33)" fg:x="249" fg:w="1"/><text x="20.4283%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="20.1783%" y="485" width="0.0810%" height="15" fill="rgb(229,23,22)" fg:x="249" fg:w="1"/><text x="20.4283%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="19.4489%" y="613" width="0.8914%" height="15" fill="rgb(244,116,16)" fg:x="240" fg:w="11"/><text x="19.6989%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.2593%" y="597" width="0.0810%" height="15" fill="rgb(247,45,10)" fg:x="250" fg:w="1"/><text x="20.5093%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.2593%" y="581" width="0.0810%" height="15" fill="rgb(228,60,29)" fg:x="250" fg:w="1"/><text x="20.5093%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.2593%" y="565" width="0.0810%" height="15" fill="rgb(205,129,15)" fg:x="250" fg:w="1"/><text x="20.5093%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.38%)</title><rect x="19.0438%" y="629" width="1.3776%" height="15" fill="rgb(206,229,4)" fg:x="235" fg:w="17"/><text x="19.2938%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.3404%" y="613" width="0.0810%" height="15" fill="rgb(249,191,30)" fg:x="251" fg:w="1"/><text x="20.5904%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (29 samples, 2.35%)</title><rect x="18.2334%" y="661" width="2.3501%" height="15" fill="rgb(250,84,54)" fg:x="225" fg:w="29"/><text x="18.4834%" y="671.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 2.03%)</title><rect x="18.5575%" y="645" width="2.0259%" height="15" fill="rgb(207,25,53)" fg:x="229" fg:w="25"/><text x="18.8075%" y="655.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.4214%" y="629" width="0.1621%" height="15" fill="rgb(235,40,8)" fg:x="252" fg:w="2"/><text x="20.6714%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.5024%" y="613" width="0.0810%" height="15" fill="rgb(226,169,33)" fg:x="253" fg:w="1"/><text x="20.7524%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.5024%" y="597" width="0.0810%" height="15" fill="rgb(238,110,8)" fg:x="253" fg:w="1"/><text x="20.7524%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.5024%" y="581" width="0.0810%" height="15" fill="rgb(251,206,12)" fg:x="253" fg:w="1"/><text x="20.7524%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.5024%" y="565" width="0.0810%" height="15" fill="rgb(248,171,18)" fg:x="253" fg:w="1"/><text x="20.7524%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="20.5024%" y="549" width="0.0810%" height="15" fill="rgb(213,65,46)" fg:x="253" fg:w="1"/><text x="20.7524%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="20.5835%" y="629" width="0.1621%" height="15" fill="rgb(211,154,15)" fg:x="254" fg:w="2"/><text x="20.8335%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.7455%" y="597" width="0.0810%" height="15" fill="rgb(217,75,43)" fg:x="256" fg:w="1"/><text x="20.9955%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.7455%" y="581" width="0.0810%" height="15" fill="rgb(230,32,33)" fg:x="256" fg:w="1"/><text x="20.9955%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.41%)</title><rect x="20.5835%" y="661" width="0.4052%" height="15" fill="rgb(221,100,16)" fg:x="254" fg:w="5"/><text x="20.8335%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.41%)</title><rect x="20.5835%" y="645" width="0.4052%" height="15" fill="rgb(212,129,47)" fg:x="254" fg:w="5"/><text x="20.8335%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="20.7455%" y="629" width="0.2431%" height="15" fill="rgb(239,217,47)" fg:x="256" fg:w="3"/><text x="20.9955%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="20.7455%" y="613" width="0.2431%" height="15" fill="rgb(230,84,24)" fg:x="256" fg:w="3"/><text x="20.9955%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="20.8266%" y="597" width="0.1621%" height="15" fill="rgb(214,153,51)" fg:x="257" fg:w="2"/><text x="21.0766%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="20.8266%" y="581" width="0.1621%" height="15" fill="rgb(231,6,35)" fg:x="257" fg:w="2"/><text x="21.0766%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.9076%" y="565" width="0.0810%" height="15" fill="rgb(229,122,30)" fg:x="258" fg:w="1"/><text x="21.1576%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.9076%" y="549" width="0.0810%" height="15" fill="rgb(234,71,10)" fg:x="258" fg:w="1"/><text x="21.1576%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.9887%" y="597" width="0.0810%" height="15" fill="rgb(215,173,26)" fg:x="259" fg:w="1"/><text x="21.2387%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.0697%" y="597" width="0.0810%" height="15" fill="rgb(248,118,52)" fg:x="260" fg:w="1"/><text x="21.3197%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.0697%" y="581" width="0.0810%" height="15" fill="rgb(237,55,46)" fg:x="260" fg:w="1"/><text x="21.3197%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="21.2318%" y="549" width="0.1621%" height="15" fill="rgb(243,214,43)" fg:x="262" fg:w="2"/><text x="21.4818%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.49%)</title><rect x="20.9887%" y="629" width="0.4862%" height="15" fill="rgb(252,123,30)" fg:x="259" fg:w="6"/><text x="21.2387%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.49%)</title><rect x="20.9887%" y="613" width="0.4862%" height="15" fill="rgb(215,73,39)" fg:x="259" fg:w="6"/><text x="21.2387%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="21.1507%" y="597" width="0.3241%" height="15" fill="rgb(251,194,29)" fg:x="261" fg:w="4"/><text x="21.4007%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="21.2318%" y="581" width="0.2431%" height="15" fill="rgb(224,58,52)" fg:x="262" fg:w="3"/><text x="21.4818%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="21.2318%" y="565" width="0.2431%" height="15" fill="rgb(248,106,46)" fg:x="262" fg:w="3"/><text x="21.4818%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="21.3938%" y="549" width="0.0810%" height="15" fill="rgb(223,80,29)" fg:x="264" fg:w="1"/><text x="21.6438%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.3938%" y="533" width="0.0810%" height="15" fill="rgb(243,137,9)" fg:x="264" fg:w="1"/><text x="21.6438%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.3938%" y="517" width="0.0810%" height="15" fill="rgb(235,121,28)" fg:x="264" fg:w="1"/><text x="21.6438%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="21.4749%" y="613" width="0.0810%" height="15" fill="rgb(219,121,41)" fg:x="265" fg:w="1"/><text x="21.7249%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="21.4749%" y="597" width="0.0810%" height="15" fill="rgb(251,60,6)" fg:x="265" fg:w="1"/><text x="21.7249%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.4749%" y="581" width="0.0810%" height="15" fill="rgb(208,12,30)" fg:x="265" fg:w="1"/><text x="21.7249%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.5559%" y="613" width="0.0810%" height="15" fill="rgb(207,176,36)" fg:x="266" fg:w="1"/><text x="21.8059%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.5559%" y="597" width="0.0810%" height="15" fill="rgb(211,188,29)" fg:x="266" fg:w="1"/><text x="21.8059%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.6370%" y="613" width="0.0810%" height="15" fill="rgb(220,184,37)" fg:x="267" fg:w="1"/><text x="21.8870%" y="623.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (1 samples, 0.08%)</title><rect x="21.7180%" y="613" width="0.0810%" height="15" fill="rgb(239,87,37)" fg:x="268" fg:w="1"/><text x="21.9680%" y="623.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="21.7990%" y="565" width="0.0810%" height="15" fill="rgb(232,113,44)" fg:x="269" fg:w="1"/><text x="22.0490%" y="575.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="21.7990%" y="549" width="0.0810%" height="15" fill="rgb(246,25,39)" fg:x="269" fg:w="1"/><text x="22.0490%" y="559.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="21.7990%" y="533" width="0.0810%" height="15" fill="rgb(247,30,13)" fg:x="269" fg:w="1"/><text x="22.0490%" y="543.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (12 samples, 0.97%)</title><rect x="20.9887%" y="645" width="0.9724%" height="15" fill="rgb(230,176,35)" fg:x="259" fg:w="12"/><text x="21.2387%" y="655.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.49%)</title><rect x="21.4749%" y="629" width="0.4862%" height="15" fill="rgb(222,23,18)" fg:x="265" fg:w="6"/><text x="21.7249%" y="639.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="21.7990%" y="613" width="0.1621%" height="15" fill="rgb(234,86,8)" fg:x="269" fg:w="2"/><text x="22.0490%" y="623.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="21.7990%" y="597" width="0.1621%" height="15" fill="rgb(206,218,47)" fg:x="269" fg:w="2"/><text x="22.0490%" y="607.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="21.7990%" y="581" width="0.1621%" height="15" fill="rgb(229,35,31)" fg:x="269" fg:w="2"/><text x="22.0490%" y="591.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="21.8801%" y="565" width="0.0810%" height="15" fill="rgb(242,81,7)" fg:x="270" fg:w="1"/><text x="22.1301%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.1232%" y="613" width="0.0810%" height="15" fill="rgb(231,11,35)" fg:x="273" fg:w="1"/><text x="22.3732%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.1232%" y="597" width="0.0810%" height="15" fill="rgb(219,218,17)" fg:x="273" fg:w="1"/><text x="22.3732%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="22.1232%" y="581" width="0.0810%" height="15" fill="rgb(221,83,32)" fg:x="273" fg:w="1"/><text x="22.3732%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="22.2042%" y="613" width="0.0810%" height="15" fill="rgb(233,49,54)" fg:x="274" fg:w="1"/><text x="22.4542%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="22.2853%" y="613" width="0.0810%" height="15" fill="rgb(206,18,51)" fg:x="275" fg:w="1"/><text x="22.5353%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.2853%" y="597" width="0.0810%" height="15" fill="rgb(249,193,15)" fg:x="275" fg:w="1"/><text x="22.5353%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.2853%" y="581" width="0.0810%" height="15" fill="rgb(245,186,19)" fg:x="275" fg:w="1"/><text x="22.5353%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.7715%" y="533" width="0.1621%" height="15" fill="rgb(230,4,24)" fg:x="281" fg:w="2"/><text x="23.0215%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.8525%" y="517" width="0.0810%" height="15" fill="rgb(234,75,27)" fg:x="282" fg:w="1"/><text x="23.1025%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.8525%" y="501" width="0.0810%" height="15" fill="rgb(244,187,35)" fg:x="282" fg:w="1"/><text x="23.1025%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.0146%" y="469" width="0.0810%" height="15" fill="rgb(241,97,43)" fg:x="284" fg:w="1"/><text x="23.2646%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="23.2577%" y="453" width="0.0810%" height="15" fill="rgb(236,94,2)" fg:x="287" fg:w="1"/><text x="23.5077%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2577%" y="437" width="0.0810%" height="15" fill="rgb(231,175,7)" fg:x="287" fg:w="1"/><text x="23.5077%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2577%" y="421" width="0.0810%" height="15" fill="rgb(236,89,47)" fg:x="287" fg:w="1"/><text x="23.5077%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.2577%" y="405" width="0.0810%" height="15" fill="rgb(213,191,37)" fg:x="287" fg:w="1"/><text x="23.5077%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="23.0146%" y="485" width="0.4052%" height="15" fill="rgb(252,0,34)" fg:x="284" fg:w="5"/><text x="23.2646%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="23.0956%" y="469" width="0.3241%" height="15" fill="rgb(208,145,44)" fg:x="285" fg:w="4"/><text x="23.3456%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.3387%" y="453" width="0.0810%" height="15" fill="rgb(227,95,50)" fg:x="288" fg:w="1"/><text x="23.5887%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.73%)</title><rect x="22.7715%" y="549" width="0.7293%" height="15" fill="rgb(222,136,24)" fg:x="281" fg:w="9"/><text x="23.0215%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="22.9335%" y="533" width="0.5673%" height="15" fill="rgb(218,105,10)" fg:x="283" fg:w="7"/><text x="23.1835%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="23.0146%" y="517" width="0.4862%" height="15" fill="rgb(216,65,28)" fg:x="284" fg:w="6"/><text x="23.2646%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.49%)</title><rect x="23.0146%" y="501" width="0.4862%" height="15" fill="rgb(229,6,28)" fg:x="284" fg:w="6"/><text x="23.2646%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.4198%" y="485" width="0.0810%" height="15" fill="rgb(222,160,42)" fg:x="289" fg:w="1"/><text x="23.6698%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.62%)</title><rect x="21.9611%" y="645" width="1.6207%" height="15" fill="rgb(235,83,49)" fg:x="271" fg:w="20"/><text x="22.2111%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 1.46%)</title><rect x="22.1232%" y="629" width="1.4587%" height="15" fill="rgb(236,86,36)" fg:x="273" fg:w="18"/><text x="22.3732%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.22%)</title><rect x="22.3663%" y="613" width="1.2156%" height="15" fill="rgb(236,19,41)" fg:x="276" fg:w="15"/><text x="22.6163%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.13%)</title><rect x="22.4473%" y="597" width="1.1345%" height="15" fill="rgb(217,71,31)" fg:x="277" fg:w="14"/><text x="22.6973%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.05%)</title><rect x="22.5284%" y="581" width="1.0535%" height="15" fill="rgb(236,209,25)" fg:x="278" fg:w="13"/><text x="22.7784%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.05%)</title><rect x="22.5284%" y="565" width="1.0535%" height="15" fill="rgb(247,104,21)" fg:x="278" fg:w="13"/><text x="22.7784%" y="575.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="23.5008%" y="549" width="0.0810%" height="15" fill="rgb(243,80,38)" fg:x="290" fg:w="1"/><text x="23.7508%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="23.5008%" y="533" width="0.0810%" height="15" fill="rgb(232,109,38)" fg:x="290" fg:w="1"/><text x="23.7508%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="23.6629%" y="469" width="0.0810%" height="15" fill="rgb(212,177,53)" fg:x="292" fg:w="1"/><text x="23.9129%" y="479.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="23.6629%" y="453" width="0.0810%" height="15" fill="rgb(227,30,34)" fg:x="292" fg:w="1"/><text x="23.9129%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="23.7439%" y="469" width="0.1621%" height="15" fill="rgb(205,175,25)" fg:x="293" fg:w="2"/><text x="23.9939%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.8250%" y="453" width="0.0810%" height="15" fill="rgb(249,39,54)" fg:x="294" fg:w="1"/><text x="24.0750%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="23.6629%" y="501" width="0.3241%" height="15" fill="rgb(215,54,37)" fg:x="292" fg:w="4"/><text x="23.9129%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="23.6629%" y="485" width="0.3241%" height="15" fill="rgb(205,60,46)" fg:x="292" fg:w="4"/><text x="23.9129%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.9060%" y="469" width="0.0810%" height="15" fill="rgb(238,89,29)" fg:x="295" fg:w="1"/><text x="24.1560%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.9060%" y="453" width="0.0810%" height="15" fill="rgb(212,48,10)" fg:x="295" fg:w="1"/><text x="24.1560%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.9060%" y="437" width="0.0810%" height="15" fill="rgb(237,186,28)" fg:x="295" fg:w="1"/><text x="24.1560%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="24.1491%" y="421" width="0.0810%" height="15" fill="rgb(237,204,4)" fg:x="298" fg:w="1"/><text x="24.3991%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="24.1491%" y="405" width="0.0810%" height="15" fill="rgb(237,15,47)" fg:x="298" fg:w="1"/><text x="24.3991%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="24.0681%" y="485" width="0.3241%" height="15" fill="rgb(244,110,25)" fg:x="297" fg:w="4"/><text x="24.3181%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="24.0681%" y="469" width="0.3241%" height="15" fill="rgb(241,12,16)" fg:x="297" fg:w="4"/><text x="24.3181%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="24.0681%" y="453" width="0.3241%" height="15" fill="rgb(235,25,9)" fg:x="297" fg:w="4"/><text x="24.3181%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="24.0681%" y="437" width="0.3241%" height="15" fill="rgb(245,159,19)" fg:x="297" fg:w="4"/><text x="24.3181%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.2301%" y="421" width="0.1621%" height="15" fill="rgb(236,63,32)" fg:x="299" fg:w="2"/><text x="24.4801%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.2301%" y="405" width="0.1621%" height="15" fill="rgb(235,32,52)" fg:x="299" fg:w="2"/><text x="24.4801%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.3112%" y="389" width="0.0810%" height="15" fill="rgb(209,176,21)" fg:x="300" fg:w="1"/><text x="24.5612%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.81%)</title><rect x="23.6629%" y="549" width="0.8104%" height="15" fill="rgb(205,90,42)" fg:x="292" fg:w="10"/><text x="23.9129%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.81%)</title><rect x="23.6629%" y="533" width="0.8104%" height="15" fill="rgb(213,132,16)" fg:x="292" fg:w="10"/><text x="23.9129%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.81%)</title><rect x="23.6629%" y="517" width="0.8104%" height="15" fill="rgb(232,11,22)" fg:x="292" fg:w="10"/><text x="23.9129%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="23.9870%" y="501" width="0.4862%" height="15" fill="rgb(248,167,41)" fg:x="296" fg:w="6"/><text x="24.2370%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.3922%" y="485" width="0.0810%" height="15" fill="rgb(209,127,6)" fg:x="301" fg:w="1"/><text x="24.6422%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.3922%" y="469" width="0.0810%" height="15" fill="rgb(246,210,34)" fg:x="301" fg:w="1"/><text x="24.6422%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="24.3922%" y="453" width="0.0810%" height="15" fill="rgb(238,165,13)" fg:x="301" fg:w="1"/><text x="24.6422%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="24.4733%" y="549" width="0.1621%" height="15" fill="rgb(233,98,15)" fg:x="302" fg:w="2"/><text x="24.7233%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.05%)</title><rect x="23.6629%" y="581" width="1.0535%" height="15" fill="rgb(215,215,51)" fg:x="292" fg:w="13"/><text x="23.9129%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.05%)</title><rect x="23.6629%" y="565" width="1.0535%" height="15" fill="rgb(217,161,25)" fg:x="292" fg:w="13"/><text x="23.9129%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.6353%" y="549" width="0.0810%" height="15" fill="rgb(217,167,48)" fg:x="304" fg:w="1"/><text x="24.8853%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.6353%" y="533" width="0.0810%" height="15" fill="rgb(205,163,34)" fg:x="304" fg:w="1"/><text x="24.8853%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6353%" y="517" width="0.0810%" height="15" fill="rgb(241,197,31)" fg:x="304" fg:w="1"/><text x="24.8853%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="24.7974%" y="565" width="0.0810%" height="15" fill="rgb(225,123,11)" fg:x="306" fg:w="1"/><text x="25.0474%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="24.7164%" y="581" width="0.2431%" height="15" fill="rgb(217,4,20)" fg:x="305" fg:w="3"/><text x="24.9664%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.8784%" y="565" width="0.0810%" height="15" fill="rgb(215,55,9)" fg:x="307" fg:w="1"/><text x="25.1284%" y="575.50"></text></g><g><title>engine::session::Session::close (101 samples, 8.18%)</title><rect x="16.8558%" y="741" width="8.1848%" height="15" fill="rgb(218,165,5)" fg:x="208" fg:w="101"/><text x="17.1058%" y="751.50">engine::ses..</text></g><g><title>engine::session::state::State::close (97 samples, 7.86%)</title><rect x="17.1799%" y="725" width="7.8606%" height="15" fill="rgb(222,175,15)" fg:x="212" fg:w="97"/><text x="17.4299%" y="735.50">engine::ses..</text></g><g><title>engine::session::state::State::flush_entities (87 samples, 7.05%)</title><rect x="17.9903%" y="709" width="7.0502%" height="15" fill="rgb(223,85,34)" fg:x="222" fg:w="87"/><text x="18.2403%" y="719.50">engine::s..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (85 samples, 6.89%)</title><rect x="18.1524%" y="693" width="6.8882%" height="15" fill="rgb(234,228,29)" fg:x="224" fg:w="85"/><text x="18.4024%" y="703.50">engine::s..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (85 samples, 6.89%)</title><rect x="18.1524%" y="677" width="6.8882%" height="15" fill="rgb(239,7,28)" fg:x="224" fg:w="85"/><text x="18.4024%" y="687.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (50 samples, 4.05%)</title><rect x="20.9887%" y="661" width="4.0519%" height="15" fill="rgb(252,222,53)" fg:x="259" fg:w="50"/><text x="21.2387%" y="671.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (18 samples, 1.46%)</title><rect x="23.5818%" y="645" width="1.4587%" height="15" fill="rgb(232,146,44)" fg:x="291" fg:w="18"/><text x="23.8318%" y="655.50"></text></g><g><title>serde_json::de::from_trait (18 samples, 1.46%)</title><rect x="23.5818%" y="629" width="1.4587%" height="15" fill="rgb(243,223,53)" fg:x="291" fg:w="18"/><text x="23.8318%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.38%)</title><rect x="23.6629%" y="613" width="1.3776%" height="15" fill="rgb(219,128,25)" fg:x="292" fg:w="17"/><text x="23.9129%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.38%)</title><rect x="23.6629%" y="597" width="1.3776%" height="15" fill="rgb(223,56,32)" fg:x="292" fg:w="17"/><text x="23.9129%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9595%" y="581" width="0.0810%" height="15" fill="rgb(237,41,3)" fg:x="308" fg:w="1"/><text x="25.2095%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="25.0405%" y="677" width="0.0810%" height="15" fill="rgb(235,138,9)" fg:x="309" fg:w="1"/><text x="25.2905%" y="687.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="25.2026%" y="629" width="0.0810%" height="15" fill="rgb(214,131,10)" fg:x="311" fg:w="1"/><text x="25.4526%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.2026%" y="613" width="0.0810%" height="15" fill="rgb(229,89,7)" fg:x="311" fg:w="1"/><text x="25.4526%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.2026%" y="597" width="0.0810%" height="15" fill="rgb(240,24,42)" fg:x="311" fg:w="1"/><text x="25.4526%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.2026%" y="581" width="0.0810%" height="15" fill="rgb(243,188,54)" fg:x="311" fg:w="1"/><text x="25.4526%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.2026%" y="565" width="0.0810%" height="15" fill="rgb(246,92,22)" fg:x="311" fg:w="1"/><text x="25.4526%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.2026%" y="549" width="0.0810%" height="15" fill="rgb(211,176,51)" fg:x="311" fg:w="1"/><text x="25.4526%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.2026%" y="533" width="0.0810%" height="15" fill="rgb(246,207,34)" fg:x="311" fg:w="1"/><text x="25.4526%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.2026%" y="517" width="0.0810%" height="15" fill="rgb(239,95,2)" fg:x="311" fg:w="1"/><text x="25.4526%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.2026%" y="501" width="0.0810%" height="15" fill="rgb(211,124,25)" fg:x="311" fg:w="1"/><text x="25.4526%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.2026%" y="485" width="0.0810%" height="15" fill="rgb(231,221,19)" fg:x="311" fg:w="1"/><text x="25.4526%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.2026%" y="469" width="0.0810%" height="15" fill="rgb(239,183,19)" fg:x="311" fg:w="1"/><text x="25.4526%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.2026%" y="453" width="0.0810%" height="15" fill="rgb(221,130,29)" fg:x="311" fg:w="1"/><text x="25.4526%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.2026%" y="437" width="0.0810%" height="15" fill="rgb(206,130,36)" fg:x="311" fg:w="1"/><text x="25.4526%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="25.2836%" y="597" width="0.0810%" height="15" fill="rgb(215,70,19)" fg:x="312" fg:w="1"/><text x="25.5336%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="25.2836%" y="581" width="0.0810%" height="15" fill="rgb(244,16,43)" fg:x="312" fg:w="1"/><text x="25.5336%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.2836%" y="565" width="0.0810%" height="15" fill="rgb(222,115,32)" fg:x="312" fg:w="1"/><text x="25.5336%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.2836%" y="549" width="0.0810%" height="15" fill="rgb(247,48,25)" fg:x="312" fg:w="1"/><text x="25.5336%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2836%" y="533" width="0.0810%" height="15" fill="rgb(226,180,51)" fg:x="312" fg:w="1"/><text x="25.5336%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.2836%" y="517" width="0.0810%" height="15" fill="rgb(217,142,42)" fg:x="312" fg:w="1"/><text x="25.5336%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2836%" y="501" width="0.0810%" height="15" fill="rgb(220,178,3)" fg:x="312" fg:w="1"/><text x="25.5336%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.2836%" y="485" width="0.0810%" height="15" fill="rgb(217,221,4)" fg:x="312" fg:w="1"/><text x="25.5336%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2836%" y="469" width="0.0810%" height="15" fill="rgb(237,63,43)" fg:x="312" fg:w="1"/><text x="25.5336%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.2836%" y="453" width="0.0810%" height="15" fill="rgb(220,57,8)" fg:x="312" fg:w="1"/><text x="25.5336%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.5267%" y="469" width="0.1621%" height="15" fill="rgb(254,186,27)" fg:x="315" fg:w="2"/><text x="25.7767%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.6078%" y="453" width="0.0810%" height="15" fill="rgb(251,57,28)" fg:x="316" fg:w="1"/><text x="25.8578%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.6078%" y="437" width="0.0810%" height="15" fill="rgb(215,228,0)" fg:x="316" fg:w="1"/><text x="25.8578%" y="447.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.41%)</title><rect x="25.3647%" y="581" width="0.4052%" height="15" fill="rgb(237,218,39)" fg:x="313" fg:w="5"/><text x="25.6147%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="25.3647%" y="565" width="0.4052%" height="15" fill="rgb(207,2,54)" fg:x="313" fg:w="5"/><text x="25.6147%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="25.3647%" y="549" width="0.4052%" height="15" fill="rgb(232,76,50)" fg:x="313" fg:w="5"/><text x="25.6147%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="25.4457%" y="533" width="0.3241%" height="15" fill="rgb(211,85,31)" fg:x="314" fg:w="4"/><text x="25.6957%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="25.4457%" y="517" width="0.3241%" height="15" fill="rgb(223,210,27)" fg:x="314" fg:w="4"/><text x="25.6957%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="25.4457%" y="501" width="0.3241%" height="15" fill="rgb(254,36,8)" fg:x="314" fg:w="4"/><text x="25.6957%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="25.5267%" y="485" width="0.2431%" height="15" fill="rgb(213,4,25)" fg:x="315" fg:w="3"/><text x="25.7767%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.6888%" y="469" width="0.0810%" height="15" fill="rgb(224,2,39)" fg:x="317" fg:w="1"/><text x="25.9388%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="25.7699%" y="501" width="0.0810%" height="15" fill="rgb(208,8,39)" fg:x="318" fg:w="1"/><text x="26.0199%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="25.7699%" y="485" width="0.0810%" height="15" fill="rgb(216,226,3)" fg:x="318" fg:w="1"/><text x="26.0199%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.7699%" y="469" width="0.0810%" height="15" fill="rgb(249,139,31)" fg:x="318" fg:w="1"/><text x="26.0199%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.7699%" y="453" width="0.0810%" height="15" fill="rgb(242,170,35)" fg:x="318" fg:w="1"/><text x="26.0199%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="25.7699%" y="437" width="0.0810%" height="15" fill="rgb(238,14,9)" fg:x="318" fg:w="1"/><text x="26.0199%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="25.8509%" y="501" width="0.0810%" height="15" fill="rgb(251,81,46)" fg:x="319" fg:w="1"/><text x="26.1009%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="25.8509%" y="485" width="0.0810%" height="15" fill="rgb(230,23,4)" fg:x="319" fg:w="1"/><text x="26.1009%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.8509%" y="469" width="0.0810%" height="15" fill="rgb(211,85,25)" fg:x="319" fg:w="1"/><text x="26.1009%" y="479.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.73%)</title><rect x="25.2836%" y="613" width="0.7293%" height="15" fill="rgb(252,23,31)" fg:x="312" fg:w="9"/><text x="25.5336%" y="623.50"></text></g><g><title>kernel::model::entity::Entity::from_str (8 samples, 0.65%)</title><rect x="25.3647%" y="597" width="0.6483%" height="15" fill="rgb(234,163,38)" fg:x="313" fg:w="8"/><text x="25.6147%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="25.7699%" y="581" width="0.2431%" height="15" fill="rgb(210,190,50)" fg:x="318" fg:w="3"/><text x="26.0199%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="25.7699%" y="565" width="0.2431%" height="15" fill="rgb(228,158,3)" fg:x="318" fg:w="3"/><text x="26.0199%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="25.7699%" y="549" width="0.2431%" height="15" fill="rgb(216,130,0)" fg:x="318" fg:w="3"/><text x="26.0199%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="25.7699%" y="533" width="0.2431%" height="15" fill="rgb(224,184,10)" fg:x="318" fg:w="3"/><text x="26.0199%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="25.7699%" y="517" width="0.2431%" height="15" fill="rgb(214,202,18)" fg:x="318" fg:w="3"/><text x="26.0199%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9319%" y="501" width="0.0810%" height="15" fill="rgb(213,229,54)" fg:x="320" fg:w="1"/><text x="26.1819%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="25.9319%" y="485" width="0.0810%" height="15" fill="rgb(246,120,0)" fg:x="320" fg:w="1"/><text x="26.1819%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="25.9319%" y="469" width="0.0810%" height="15" fill="rgb(237,6,15)" fg:x="320" fg:w="1"/><text x="26.1819%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9319%" y="453" width="0.0810%" height="15" fill="rgb(252,156,15)" fg:x="320" fg:w="1"/><text x="26.1819%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="25.9319%" y="437" width="0.0810%" height="15" fill="rgb(249,78,18)" fg:x="320" fg:w="1"/><text x="26.1819%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="25.9319%" y="421" width="0.0810%" height="15" fill="rgb(230,223,44)" fg:x="320" fg:w="1"/><text x="26.1819%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9319%" y="405" width="0.0810%" height="15" fill="rgb(230,222,32)" fg:x="320" fg:w="1"/><text x="26.1819%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="25.9319%" y="389" width="0.0810%" height="15" fill="rgb(247,54,6)" fg:x="320" fg:w="1"/><text x="26.1819%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="25.9319%" y="373" width="0.0810%" height="15" fill="rgb(247,115,45)" fg:x="320" fg:w="1"/><text x="26.1819%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9319%" y="357" width="0.0810%" height="15" fill="rgb(213,203,37)" fg:x="320" fg:w="1"/><text x="26.1819%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="25.9319%" y="341" width="0.0810%" height="15" fill="rgb(248,188,18)" fg:x="320" fg:w="1"/><text x="26.1819%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.9319%" y="325" width="0.0810%" height="15" fill="rgb(206,80,8)" fg:x="320" fg:w="1"/><text x="26.1819%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (11 samples, 0.89%)</title><rect x="25.2026%" y="645" width="0.8914%" height="15" fill="rgb(245,217,31)" fg:x="311" fg:w="11"/><text x="25.4526%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.81%)</title><rect x="25.2836%" y="629" width="0.8104%" height="15" fill="rgb(220,193,15)" fg:x="312" fg:w="10"/><text x="25.5336%" y="639.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="26.0130%" y="613" width="0.0810%" height="15" fill="rgb(226,7,19)" fg:x="321" fg:w="1"/><text x="26.2630%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0130%" y="597" width="0.0810%" height="15" fill="rgb(222,145,31)" fg:x="321" fg:w="1"/><text x="26.2630%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0130%" y="581" width="0.0810%" height="15" fill="rgb(241,193,36)" fg:x="321" fg:w="1"/><text x="26.2630%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0130%" y="565" width="0.0810%" height="15" fill="rgb(225,123,33)" fg:x="321" fg:w="1"/><text x="26.2630%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.0130%" y="549" width="0.0810%" height="15" fill="rgb(246,136,38)" fg:x="321" fg:w="1"/><text x="26.2630%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.0130%" y="533" width="0.0810%" height="15" fill="rgb(243,56,24)" fg:x="321" fg:w="1"/><text x="26.2630%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.0130%" y="517" width="0.0810%" height="15" fill="rgb(215,147,2)" fg:x="321" fg:w="1"/><text x="26.2630%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="26.0130%" y="501" width="0.0810%" height="15" fill="rgb(209,155,27)" fg:x="321" fg:w="1"/><text x="26.2630%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="26.0130%" y="485" width="0.0810%" height="15" fill="rgb(222,177,11)" fg:x="321" fg:w="1"/><text x="26.2630%" y="495.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (14 samples, 1.13%)</title><rect x="25.0405%" y="693" width="1.1345%" height="15" fill="rgb(212,227,15)" fg:x="309" fg:w="14"/><text x="25.2905%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (13 samples, 1.05%)</title><rect x="25.1216%" y="677" width="1.0535%" height="15" fill="rgb(214,138,20)" fg:x="310" fg:w="13"/><text x="25.3716%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.05%)</title><rect x="25.1216%" y="661" width="1.0535%" height="15" fill="rgb(221,170,31)" fg:x="310" fg:w="13"/><text x="25.3716%" y="671.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0940%" y="645" width="0.0810%" height="15" fill="rgb(253,207,5)" fg:x="322" fg:w="1"/><text x="26.3440%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.0940%" y="629" width="0.0810%" height="15" fill="rgb(212,64,37)" fg:x="322" fg:w="1"/><text x="26.3440%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.0940%" y="613" width="0.0810%" height="15" fill="rgb(208,113,51)" fg:x="322" fg:w="1"/><text x="26.3440%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0940%" y="597" width="0.0810%" height="15" fill="rgb(237,15,5)" fg:x="322" fg:w="1"/><text x="26.3440%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.0940%" y="581" width="0.0810%" height="15" fill="rgb(238,33,18)" fg:x="322" fg:w="1"/><text x="26.3440%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.0940%" y="565" width="0.0810%" height="15" fill="rgb(253,206,50)" fg:x="322" fg:w="1"/><text x="26.3440%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.0940%" y="549" width="0.0810%" height="15" fill="rgb(242,158,43)" fg:x="322" fg:w="1"/><text x="26.3440%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.0940%" y="533" width="0.0810%" height="15" fill="rgb(213,125,27)" fg:x="322" fg:w="1"/><text x="26.3440%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.0940%" y="517" width="0.0810%" height="15" fill="rgb(233,161,31)" fg:x="322" fg:w="1"/><text x="26.3440%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.0940%" y="501" width="0.0810%" height="15" fill="rgb(218,135,6)" fg:x="322" fg:w="1"/><text x="26.3440%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.0940%" y="485" width="0.0810%" height="15" fill="rgb(222,73,53)" fg:x="322" fg:w="1"/><text x="26.3440%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.0940%" y="469" width="0.0810%" height="15" fill="rgb(229,66,53)" fg:x="322" fg:w="1"/><text x="26.3440%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.0940%" y="453" width="0.0810%" height="15" fill="rgb(208,128,19)" fg:x="322" fg:w="1"/><text x="26.3440%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.0940%" y="437" width="0.0810%" height="15" fill="rgb(235,70,27)" fg:x="322" fg:w="1"/><text x="26.3440%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.0940%" y="421" width="0.0810%" height="15" fill="rgb(241,130,30)" fg:x="322" fg:w="1"/><text x="26.3440%" y="431.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="26.1750%" y="693" width="0.0810%" height="15" fill="rgb(222,57,48)" fg:x="323" fg:w="1"/><text x="26.4250%" y="703.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="26.1750%" y="677" width="0.0810%" height="15" fill="rgb(225,204,29)" fg:x="323" fg:w="1"/><text x="26.4250%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="26.1750%" y="661" width="0.0810%" height="15" fill="rgb(240,196,35)" fg:x="323" fg:w="1"/><text x="26.4250%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="26.1750%" y="645" width="0.0810%" height="15" fill="rgb(215,150,16)" fg:x="323" fg:w="1"/><text x="26.4250%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="26.1750%" y="629" width="0.0810%" height="15" fill="rgb(209,170,13)" fg:x="323" fg:w="1"/><text x="26.4250%" y="639.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (16 samples, 1.30%)</title><rect x="25.0405%" y="709" width="1.2966%" height="15" fill="rgb(235,75,31)" fg:x="309" fg:w="16"/><text x="25.2905%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.2561%" y="693" width="0.0810%" height="15" fill="rgb(252,1,47)" fg:x="324" fg:w="1"/><text x="26.5061%" y="703.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="26.6613%" y="677" width="0.0810%" height="15" fill="rgb(241,2,36)" fg:x="329" fg:w="1"/><text x="26.9113%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6613%" y="661" width="0.0810%" height="15" fill="rgb(236,191,4)" fg:x="329" fg:w="1"/><text x="26.9113%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="27.4716%" y="565" width="0.1621%" height="15" fill="rgb(212,65,35)" fg:x="339" fg:w="2"/><text x="27.7216%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="27.4716%" y="549" width="0.1621%" height="15" fill="rgb(209,49,33)" fg:x="339" fg:w="2"/><text x="27.7216%" y="559.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="27.6337%" y="565" width="0.3241%" height="15" fill="rgb(208,36,46)" fg:x="341" fg:w="4"/><text x="27.8837%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="27.3096%" y="581" width="0.7293%" height="15" fill="rgb(210,125,2)" fg:x="337" fg:w="9"/><text x="27.5596%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="27.9579%" y="565" width="0.0810%" height="15" fill="rgb(225,62,6)" fg:x="345" fg:w="1"/><text x="28.2079%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.89%)</title><rect x="27.2285%" y="597" width="0.8914%" height="15" fill="rgb(210,54,27)" fg:x="336" fg:w="11"/><text x="27.4785%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.0389%" y="581" width="0.0810%" height="15" fill="rgb(249,189,52)" fg:x="346" fg:w="1"/><text x="28.2889%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.97%)</title><rect x="27.2285%" y="613" width="0.9724%" height="15" fill="rgb(225,134,40)" fg:x="336" fg:w="12"/><text x="27.4785%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.1199%" y="597" width="0.0810%" height="15" fill="rgb(206,13,37)" fg:x="347" fg:w="1"/><text x="28.3699%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.46%)</title><rect x="26.9854%" y="629" width="1.4587%" height="15" fill="rgb(232,114,28)" fg:x="333" fg:w="18"/><text x="27.2354%" y="639.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="28.2010%" y="613" width="0.2431%" height="15" fill="rgb(253,215,8)" fg:x="348" fg:w="3"/><text x="28.4510%" y="623.50"></text></g><g><title>__libc_free (5 samples, 0.41%)</title><rect x="28.4441%" y="629" width="0.4052%" height="15" fill="rgb(254,64,19)" fg:x="351" fg:w="5"/><text x="28.6941%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.11%)</title><rect x="26.8233%" y="645" width="2.1070%" height="15" fill="rgb(242,18,46)" fg:x="331" fg:w="26"/><text x="27.0733%" y="655.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="28.8493%" y="629" width="0.0810%" height="15" fill="rgb(239,192,30)" fg:x="356" fg:w="1"/><text x="29.0993%" y="639.50"></text></g><g><title>__libc_free (10 samples, 0.81%)</title><rect x="28.9303%" y="645" width="0.8104%" height="15" fill="rgb(232,73,14)" fg:x="357" fg:w="10"/><text x="29.1803%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 3.08%)</title><rect x="26.7423%" y="661" width="3.0794%" height="15" fill="rgb(225,51,9)" fg:x="330" fg:w="38"/><text x="26.9923%" y="671.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="29.7407%" y="645" width="0.0810%" height="15" fill="rgb(242,217,54)" fg:x="367" fg:w="1"/><text x="29.9907%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (40 samples, 3.24%)</title><rect x="26.7423%" y="677" width="3.2415%" height="15" fill="rgb(216,93,3)" fg:x="330" fg:w="40"/><text x="26.9923%" y="687.50">cor..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="29.8217%" y="661" width="0.1621%" height="15" fill="rgb(230,119,33)" fg:x="368" fg:w="2"/><text x="30.0717%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="30.3890%" y="629" width="0.1621%" height="15" fill="rgb(238,170,27)" fg:x="375" fg:w="2"/><text x="30.6390%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.4700%" y="613" width="0.0810%" height="15" fill="rgb(229,8,2)" fg:x="376" fg:w="1"/><text x="30.7200%" y="623.50"></text></g><g><title>__libc_malloc (8 samples, 0.65%)</title><rect x="30.5511%" y="629" width="0.6483%" height="15" fill="rgb(205,214,42)" fg:x="377" fg:w="8"/><text x="30.8011%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.97%)</title><rect x="30.3079%" y="645" width="0.9724%" height="15" fill="rgb(245,113,1)" fg:x="374" fg:w="12"/><text x="30.5579%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="31.1994%" y="629" width="0.0810%" height="15" fill="rgb(252,50,2)" fg:x="385" fg:w="1"/><text x="31.4494%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="31.1994%" y="613" width="0.0810%" height="15" fill="rgb(225,122,24)" fg:x="385" fg:w="1"/><text x="31.4494%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.1994%" y="597" width="0.0810%" height="15" fill="rgb(234,129,31)" fg:x="385" fg:w="1"/><text x="31.4494%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="31.2804%" y="645" width="0.3241%" height="15" fill="rgb(219,177,4)" fg:x="386" fg:w="4"/><text x="31.5304%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="31.2804%" y="629" width="0.3241%" height="15" fill="rgb(225,142,27)" fg:x="386" fg:w="4"/><text x="31.5304%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="31.3614%" y="613" width="0.2431%" height="15" fill="rgb(205,107,51)" fg:x="387" fg:w="3"/><text x="31.6114%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (3 samples, 0.24%)</title><rect x="31.3614%" y="597" width="0.2431%" height="15" fill="rgb(236,223,15)" fg:x="387" fg:w="3"/><text x="31.6114%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.5235%" y="581" width="0.0810%" height="15" fill="rgb(235,133,11)" fg:x="389" fg:w="1"/><text x="31.7735%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="31.6856%" y="517" width="0.0810%" height="15" fill="rgb(247,172,13)" fg:x="391" fg:w="1"/><text x="31.9356%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.7666%" y="389" width="0.0810%" height="15" fill="rgb(233,191,41)" fg:x="392" fg:w="1"/><text x="32.0166%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="31.7666%" y="373" width="0.0810%" height="15" fill="rgb(250,65,16)" fg:x="392" fg:w="1"/><text x="32.0166%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.7666%" y="357" width="0.0810%" height="15" fill="rgb(206,10,27)" fg:x="392" fg:w="1"/><text x="32.0166%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.7666%" y="341" width="0.0810%" height="15" fill="rgb(212,96,22)" fg:x="392" fg:w="1"/><text x="32.0166%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.7666%" y="325" width="0.0810%" height="15" fill="rgb(206,50,0)" fg:x="392" fg:w="1"/><text x="32.0166%" y="335.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="31.7666%" y="309" width="0.0810%" height="15" fill="rgb(249,105,52)" fg:x="392" fg:w="1"/><text x="32.0166%" y="319.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="31.7666%" y="293" width="0.0810%" height="15" fill="rgb(216,93,51)" fg:x="392" fg:w="1"/><text x="32.0166%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.7666%" y="277" width="0.0810%" height="15" fill="rgb(217,172,13)" fg:x="392" fg:w="1"/><text x="32.0166%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.7666%" y="261" width="0.0810%" height="15" fill="rgb(235,199,38)" fg:x="392" fg:w="1"/><text x="32.0166%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="31.7666%" y="245" width="0.0810%" height="15" fill="rgb(221,97,33)" fg:x="392" fg:w="1"/><text x="32.0166%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="31.7666%" y="229" width="0.0810%" height="15" fill="rgb(205,156,50)" fg:x="392" fg:w="1"/><text x="32.0166%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="31.7666%" y="213" width="0.0810%" height="15" fill="rgb(215,142,19)" fg:x="392" fg:w="1"/><text x="32.0166%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="31.7666%" y="197" width="0.0810%" height="15" fill="rgb(232,170,7)" fg:x="392" fg:w="1"/><text x="32.0166%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.7666%" y="181" width="0.0810%" height="15" fill="rgb(223,50,17)" fg:x="392" fg:w="1"/><text x="32.0166%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="31.7666%" y="165" width="0.0810%" height="15" fill="rgb(230,103,46)" fg:x="392" fg:w="1"/><text x="32.0166%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="31.7666%" y="149" width="0.0810%" height="15" fill="rgb(254,30,34)" fg:x="392" fg:w="1"/><text x="32.0166%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="31.7666%" y="133" width="0.0810%" height="15" fill="rgb(235,198,1)" fg:x="392" fg:w="1"/><text x="32.0166%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.7666%" y="117" width="0.0810%" height="15" fill="rgb(217,105,47)" fg:x="392" fg:w="1"/><text x="32.0166%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="31.7666%" y="101" width="0.0810%" height="15" fill="rgb(231,18,12)" fg:x="392" fg:w="1"/><text x="32.0166%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="31.7666%" y="85" width="0.0810%" height="15" fill="rgb(218,196,1)" fg:x="392" fg:w="1"/><text x="32.0166%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="31.7666%" y="69" width="0.0810%" height="15" fill="rgb(210,32,3)" fg:x="392" fg:w="1"/><text x="32.0166%" y="79.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="31.7666%" y="53" width="0.0810%" height="15" fill="rgb(227,178,30)" fg:x="392" fg:w="1"/><text x="32.0166%" y="63.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="31.7666%" y="37" width="0.0810%" height="15" fill="rgb(231,140,27)" fg:x="392" fg:w="1"/><text x="32.0166%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="31.6856%" y="581" width="0.2431%" height="15" fill="rgb(206,66,35)" fg:x="391" fg:w="3"/><text x="31.9356%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="31.6856%" y="565" width="0.2431%" height="15" fill="rgb(212,34,2)" fg:x="391" fg:w="3"/><text x="31.9356%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (3 samples, 0.24%)</title><rect x="31.6856%" y="549" width="0.2431%" height="15" fill="rgb(207,201,33)" fg:x="391" fg:w="3"/><text x="31.9356%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="31.6856%" y="533" width="0.2431%" height="15" fill="rgb(221,135,32)" fg:x="391" fg:w="3"/><text x="31.9356%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="31.7666%" y="517" width="0.1621%" height="15" fill="rgb(206,77,31)" fg:x="392" fg:w="2"/><text x="32.0166%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="31.7666%" y="501" width="0.1621%" height="15" fill="rgb(252,198,50)" fg:x="392" fg:w="2"/><text x="32.0166%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="31.7666%" y="485" width="0.1621%" height="15" fill="rgb(206,79,27)" fg:x="392" fg:w="2"/><text x="32.0166%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="31.7666%" y="469" width="0.1621%" height="15" fill="rgb(228,108,9)" fg:x="392" fg:w="2"/><text x="32.0166%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="31.7666%" y="453" width="0.1621%" height="15" fill="rgb(213,9,39)" fg:x="392" fg:w="2"/><text x="32.0166%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="31.7666%" y="437" width="0.1621%" height="15" fill="rgb(252,51,13)" fg:x="392" fg:w="2"/><text x="32.0166%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="31.7666%" y="421" width="0.1621%" height="15" fill="rgb(218,202,39)" fg:x="392" fg:w="2"/><text x="32.0166%" y="431.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="31.7666%" y="405" width="0.1621%" height="15" fill="rgb(214,122,21)" fg:x="392" fg:w="2"/><text x="32.0166%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.08%)</title><rect x="31.8476%" y="389" width="0.0810%" height="15" fill="rgb(217,205,48)" fg:x="393" fg:w="1"/><text x="32.0976%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.08%)</title><rect x="31.8476%" y="373" width="0.0810%" height="15" fill="rgb(230,216,13)" fg:x="393" fg:w="1"/><text x="32.0976%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.9287%" y="581" width="0.0810%" height="15" fill="rgb(249,118,4)" fg:x="394" fg:w="1"/><text x="32.1787%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="32.0097%" y="565" width="0.0810%" height="15" fill="rgb(212,207,40)" fg:x="395" fg:w="1"/><text x="32.2597%" y="575.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="32.2528%" y="501" width="0.0810%" height="15" fill="rgb(217,156,26)" fg:x="398" fg:w="1"/><text x="32.5028%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.2528%" y="485" width="0.0810%" height="15" fill="rgb(226,86,34)" fg:x="398" fg:w="1"/><text x="32.5028%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.2528%" y="469" width="0.0810%" height="15" fill="rgb(217,111,30)" fg:x="398" fg:w="1"/><text x="32.5028%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.2528%" y="453" width="0.0810%" height="15" fill="rgb(228,64,18)" fg:x="398" fg:w="1"/><text x="32.5028%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.2528%" y="437" width="0.0810%" height="15" fill="rgb(254,217,48)" fg:x="398" fg:w="1"/><text x="32.5028%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.2528%" y="421" width="0.0810%" height="15" fill="rgb(226,156,48)" fg:x="398" fg:w="1"/><text x="32.5028%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.2528%" y="405" width="0.0810%" height="15" fill="rgb(236,168,20)" fg:x="398" fg:w="1"/><text x="32.5028%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.2528%" y="389" width="0.0810%" height="15" fill="rgb(239,210,33)" fg:x="398" fg:w="1"/><text x="32.5028%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.2528%" y="373" width="0.0810%" height="15" fill="rgb(242,85,17)" fg:x="398" fg:w="1"/><text x="32.5028%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.2528%" y="357" width="0.0810%" height="15" fill="rgb(221,196,15)" fg:x="398" fg:w="1"/><text x="32.5028%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.2528%" y="341" width="0.0810%" height="15" fill="rgb(249,76,21)" fg:x="398" fg:w="1"/><text x="32.5028%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.2528%" y="325" width="0.0810%" height="15" fill="rgb(243,67,29)" fg:x="398" fg:w="1"/><text x="32.5028%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.2528%" y="309" width="0.0810%" height="15" fill="rgb(240,159,2)" fg:x="398" fg:w="1"/><text x="32.5028%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="32.3339%" y="421" width="0.0810%" height="15" fill="rgb(244,64,3)" fg:x="399" fg:w="1"/><text x="32.5839%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.3339%" y="405" width="0.0810%" height="15" fill="rgb(220,86,40)" fg:x="399" fg:w="1"/><text x="32.5839%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.4149%" y="389" width="0.0810%" height="15" fill="rgb(222,194,51)" fg:x="400" fg:w="1"/><text x="32.6649%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.4149%" y="373" width="0.0810%" height="15" fill="rgb(207,154,19)" fg:x="400" fg:w="1"/><text x="32.6649%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.4149%" y="357" width="0.0810%" height="15" fill="rgb(206,178,36)" fg:x="400" fg:w="1"/><text x="32.6649%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.4149%" y="341" width="0.0810%" height="15" fill="rgb(218,8,24)" fg:x="400" fg:w="1"/><text x="32.6649%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.4149%" y="325" width="0.0810%" height="15" fill="rgb(226,83,41)" fg:x="400" fg:w="1"/><text x="32.6649%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.4149%" y="309" width="0.0810%" height="15" fill="rgb(224,23,22)" fg:x="400" fg:w="1"/><text x="32.6649%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.4149%" y="293" width="0.0810%" height="15" fill="rgb(218,198,45)" fg:x="400" fg:w="1"/><text x="32.6649%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.4149%" y="277" width="0.0810%" height="15" fill="rgb(249,147,41)" fg:x="400" fg:w="1"/><text x="32.6649%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.4149%" y="261" width="0.0810%" height="15" fill="rgb(244,224,13)" fg:x="400" fg:w="1"/><text x="32.6649%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.4149%" y="245" width="0.0810%" height="15" fill="rgb(225,97,27)" fg:x="400" fg:w="1"/><text x="32.6649%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.4149%" y="229" width="0.0810%" height="15" fill="rgb(254,64,0)" fg:x="400" fg:w="1"/><text x="32.6649%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.4149%" y="213" width="0.0810%" height="15" fill="rgb(208,130,43)" fg:x="400" fg:w="1"/><text x="32.6649%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.4149%" y="197" width="0.0810%" height="15" fill="rgb(247,91,25)" fg:x="400" fg:w="1"/><text x="32.6649%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.4149%" y="181" width="0.0810%" height="15" fill="rgb(215,218,42)" fg:x="400" fg:w="1"/><text x="32.6649%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.4149%" y="165" width="0.0810%" height="15" fill="rgb(233,9,24)" fg:x="400" fg:w="1"/><text x="32.6649%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.4149%" y="149" width="0.0810%" height="15" fill="rgb(252,105,38)" fg:x="400" fg:w="1"/><text x="32.6649%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="32.3339%" y="437" width="0.2431%" height="15" fill="rgb(225,40,49)" fg:x="399" fg:w="3"/><text x="32.5839%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="32.4149%" y="421" width="0.1621%" height="15" fill="rgb(232,196,19)" fg:x="400" fg:w="2"/><text x="32.6649%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="32.4149%" y="405" width="0.1621%" height="15" fill="rgb(207,35,15)" fg:x="400" fg:w="2"/><text x="32.6649%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.4959%" y="389" width="0.0810%" height="15" fill="rgb(238,68,36)" fg:x="401" fg:w="1"/><text x="32.7459%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.4959%" y="373" width="0.0810%" height="15" fill="rgb(205,158,20)" fg:x="401" fg:w="1"/><text x="32.7459%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.4959%" y="357" width="0.0810%" height="15" fill="rgb(232,32,22)" fg:x="401" fg:w="1"/><text x="32.7459%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.4959%" y="341" width="0.0810%" height="15" fill="rgb(210,169,6)" fg:x="401" fg:w="1"/><text x="32.7459%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.4959%" y="325" width="0.0810%" height="15" fill="rgb(229,28,12)" fg:x="401" fg:w="1"/><text x="32.7459%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.4959%" y="309" width="0.0810%" height="15" fill="rgb(229,78,10)" fg:x="401" fg:w="1"/><text x="32.7459%" y="319.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="32.3339%" y="469" width="0.3241%" height="15" fill="rgb(223,139,54)" fg:x="399" fg:w="4"/><text x="32.5839%" y="479.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="32.3339%" y="453" width="0.3241%" height="15" fill="rgb(207,110,4)" fg:x="399" fg:w="4"/><text x="32.5839%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="32.5770%" y="437" width="0.0810%" height="15" fill="rgb(248,30,41)" fg:x="402" fg:w="1"/><text x="32.8270%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="32.5770%" y="421" width="0.0810%" height="15" fill="rgb(235,54,25)" fg:x="402" fg:w="1"/><text x="32.8270%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.5770%" y="405" width="0.0810%" height="15" fill="rgb(213,107,41)" fg:x="402" fg:w="1"/><text x="32.8270%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.5770%" y="389" width="0.0810%" height="15" fill="rgb(237,102,9)" fg:x="402" fg:w="1"/><text x="32.8270%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.5770%" y="373" width="0.0810%" height="15" fill="rgb(252,137,49)" fg:x="402" fg:w="1"/><text x="32.8270%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.5770%" y="357" width="0.0810%" height="15" fill="rgb(233,202,33)" fg:x="402" fg:w="1"/><text x="32.8270%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.5770%" y="341" width="0.0810%" height="15" fill="rgb(223,14,51)" fg:x="402" fg:w="1"/><text x="32.8270%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="32.6580%" y="469" width="0.0810%" height="15" fill="rgb(248,70,23)" fg:x="403" fg:w="1"/><text x="32.9080%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="32.6580%" y="453" width="0.0810%" height="15" fill="rgb(209,207,47)" fg:x="403" fg:w="1"/><text x="32.9080%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="32.6580%" y="437" width="0.0810%" height="15" fill="rgb(245,124,2)" fg:x="403" fg:w="1"/><text x="32.9080%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.6580%" y="421" width="0.0810%" height="15" fill="rgb(249,208,11)" fg:x="403" fg:w="1"/><text x="32.9080%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.6580%" y="405" width="0.0810%" height="15" fill="rgb(247,112,7)" fg:x="403" fg:w="1"/><text x="32.9080%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.6580%" y="389" width="0.0810%" height="15" fill="rgb(209,192,31)" fg:x="403" fg:w="1"/><text x="32.9080%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.6580%" y="373" width="0.0810%" height="15" fill="rgb(236,55,19)" fg:x="403" fg:w="1"/><text x="32.9080%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.6580%" y="357" width="0.0810%" height="15" fill="rgb(252,89,41)" fg:x="403" fg:w="1"/><text x="32.9080%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.6580%" y="341" width="0.0810%" height="15" fill="rgb(220,172,14)" fg:x="403" fg:w="1"/><text x="32.9080%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.6580%" y="325" width="0.0810%" height="15" fill="rgb(252,65,2)" fg:x="403" fg:w="1"/><text x="32.9080%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.6580%" y="309" width="0.0810%" height="15" fill="rgb(250,20,8)" fg:x="403" fg:w="1"/><text x="32.9080%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="32.7391%" y="373" width="0.0810%" height="15" fill="rgb(234,149,13)" fg:x="404" fg:w="1"/><text x="32.9891%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.7391%" y="357" width="0.0810%" height="15" fill="rgb(223,219,12)" fg:x="404" fg:w="1"/><text x="32.9891%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="32.8201%" y="245" width="0.0810%" height="15" fill="rgb(234,13,49)" fg:x="405" fg:w="1"/><text x="33.0701%" y="255.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="32.7391%" y="453" width="0.2431%" height="15" fill="rgb(214,41,25)" fg:x="404" fg:w="3"/><text x="32.9891%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="32.7391%" y="437" width="0.2431%" height="15" fill="rgb(232,198,52)" fg:x="404" fg:w="3"/><text x="32.9891%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="32.7391%" y="421" width="0.2431%" height="15" fill="rgb(236,111,46)" fg:x="404" fg:w="3"/><text x="32.9891%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="32.7391%" y="405" width="0.2431%" height="15" fill="rgb(253,30,20)" fg:x="404" fg:w="3"/><text x="32.9891%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="32.7391%" y="389" width="0.2431%" height="15" fill="rgb(247,141,17)" fg:x="404" fg:w="3"/><text x="32.9891%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="32.8201%" y="373" width="0.1621%" height="15" fill="rgb(214,195,21)" fg:x="405" fg:w="2"/><text x="33.0701%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="32.8201%" y="357" width="0.1621%" height="15" fill="rgb(214,98,12)" fg:x="405" fg:w="2"/><text x="33.0701%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="32.8201%" y="341" width="0.1621%" height="15" fill="rgb(239,4,26)" fg:x="405" fg:w="2"/><text x="33.0701%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="32.8201%" y="325" width="0.1621%" height="15" fill="rgb(234,210,35)" fg:x="405" fg:w="2"/><text x="33.0701%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="32.8201%" y="309" width="0.1621%" height="15" fill="rgb(252,178,27)" fg:x="405" fg:w="2"/><text x="33.0701%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="32.8201%" y="293" width="0.1621%" height="15" fill="rgb(217,50,1)" fg:x="405" fg:w="2"/><text x="33.0701%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="32.8201%" y="277" width="0.1621%" height="15" fill="rgb(233,137,5)" fg:x="405" fg:w="2"/><text x="33.0701%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="32.8201%" y="261" width="0.1621%" height="15" fill="rgb(217,227,25)" fg:x="405" fg:w="2"/><text x="33.0701%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="32.9011%" y="245" width="0.0810%" height="15" fill="rgb(242,89,38)" fg:x="406" fg:w="1"/><text x="33.1511%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="32.9011%" y="229" width="0.0810%" height="15" fill="rgb(212,190,30)" fg:x="406" fg:w="1"/><text x="33.1511%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.9822%" y="421" width="0.0810%" height="15" fill="rgb(222,120,8)" fg:x="407" fg:w="1"/><text x="33.2322%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.9822%" y="405" width="0.0810%" height="15" fill="rgb(227,181,9)" fg:x="407" fg:w="1"/><text x="33.2322%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.9822%" y="389" width="0.0810%" height="15" fill="rgb(222,125,29)" fg:x="407" fg:w="1"/><text x="33.2322%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.9822%" y="373" width="0.0810%" height="15" fill="rgb(215,153,31)" fg:x="407" fg:w="1"/><text x="33.2322%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (12 samples, 0.97%)</title><rect x="32.1718%" y="517" width="0.9724%" height="15" fill="rgb(228,77,30)" fg:x="397" fg:w="12"/><text x="32.4218%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (10 samples, 0.81%)</title><rect x="32.3339%" y="501" width="0.8104%" height="15" fill="rgb(226,110,9)" fg:x="399" fg:w="10"/><text x="32.5839%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.81%)</title><rect x="32.3339%" y="485" width="0.8104%" height="15" fill="rgb(219,111,7)" fg:x="399" fg:w="10"/><text x="32.5839%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::from_str (5 samples, 0.41%)</title><rect x="32.7391%" y="469" width="0.4052%" height="15" fill="rgb(229,167,25)" fg:x="404" fg:w="5"/><text x="32.9891%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.9822%" y="453" width="0.1621%" height="15" fill="rgb(209,77,43)" fg:x="407" fg:w="2"/><text x="33.2322%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.9822%" y="437" width="0.1621%" height="15" fill="rgb(233,70,39)" fg:x="407" fg:w="2"/><text x="33.2322%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.0632%" y="421" width="0.0810%" height="15" fill="rgb(207,171,44)" fg:x="408" fg:w="1"/><text x="33.3132%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.0632%" y="405" width="0.0810%" height="15" fill="rgb(244,91,6)" fg:x="408" fg:w="1"/><text x="33.3132%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.0632%" y="389" width="0.0810%" height="15" fill="rgb(234,136,12)" fg:x="408" fg:w="1"/><text x="33.3132%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1442%" y="485" width="0.0810%" height="15" fill="rgb(216,210,38)" fg:x="409" fg:w="1"/><text x="33.3942%" y="495.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.1442%" y="517" width="0.1621%" height="15" fill="rgb(241,227,7)" fg:x="409" fg:w="2"/><text x="33.3942%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.1442%" y="501" width="0.1621%" height="15" fill="rgb(241,222,11)" fg:x="409" fg:w="2"/><text x="33.3942%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.2253%" y="485" width="0.0810%" height="15" fill="rgb(246,86,18)" fg:x="410" fg:w="1"/><text x="33.4753%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.2253%" y="469" width="0.0810%" height="15" fill="rgb(224,151,49)" fg:x="410" fg:w="1"/><text x="33.4753%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.2253%" y="453" width="0.0810%" height="15" fill="rgb(235,4,41)" fg:x="410" fg:w="1"/><text x="33.4753%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.2253%" y="437" width="0.0810%" height="15" fill="rgb(218,30,52)" fg:x="410" fg:w="1"/><text x="33.4753%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.2253%" y="421" width="0.0810%" height="15" fill="rgb(205,124,51)" fg:x="410" fg:w="1"/><text x="33.4753%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.2253%" y="405" width="0.0810%" height="15" fill="rgb(237,126,51)" fg:x="410" fg:w="1"/><text x="33.4753%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.2253%" y="389" width="0.0810%" height="15" fill="rgb(225,32,46)" fg:x="410" fg:w="1"/><text x="33.4753%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.2253%" y="373" width="0.0810%" height="15" fill="rgb(251,60,49)" fg:x="410" fg:w="1"/><text x="33.4753%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.2253%" y="357" width="0.0810%" height="15" fill="rgb(234,18,23)" fg:x="410" fg:w="1"/><text x="33.4753%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.2253%" y="341" width="0.0810%" height="15" fill="rgb(234,25,23)" fg:x="410" fg:w="1"/><text x="33.4753%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.2253%" y="325" width="0.0810%" height="15" fill="rgb(210,43,52)" fg:x="410" fg:w="1"/><text x="33.4753%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.2253%" y="309" width="0.0810%" height="15" fill="rgb(237,198,21)" fg:x="410" fg:w="1"/><text x="33.4753%" y="319.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (17 samples, 1.38%)</title><rect x="32.0097%" y="581" width="1.3776%" height="15" fill="rgb(211,20,34)" fg:x="395" fg:w="17"/><text x="32.2597%" y="591.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (16 samples, 1.30%)</title><rect x="32.0908%" y="565" width="1.2966%" height="15" fill="rgb(221,155,50)" fg:x="396" fg:w="16"/><text x="32.3408%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (15 samples, 1.22%)</title><rect x="32.1718%" y="549" width="1.2156%" height="15" fill="rgb(213,214,53)" fg:x="397" fg:w="15"/><text x="32.4218%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (15 samples, 1.22%)</title><rect x="32.1718%" y="533" width="1.2156%" height="15" fill="rgb(215,229,48)" fg:x="397" fg:w="15"/><text x="32.4218%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.3063%" y="517" width="0.0810%" height="15" fill="rgb(243,88,5)" fg:x="411" fg:w="1"/><text x="33.5563%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.3063%" y="501" width="0.0810%" height="15" fill="rgb(216,199,8)" fg:x="411" fg:w="1"/><text x="33.5563%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.3063%" y="485" width="0.0810%" height="15" fill="rgb(241,22,4)" fg:x="411" fg:w="1"/><text x="33.5563%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.3063%" y="469" width="0.0810%" height="15" fill="rgb(209,190,22)" fg:x="411" fg:w="1"/><text x="33.5563%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.3063%" y="453" width="0.0810%" height="15" fill="rgb(251,138,45)" fg:x="411" fg:w="1"/><text x="33.5563%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6305%" y="517" width="0.0810%" height="15" fill="rgb(219,111,22)" fg:x="415" fg:w="1"/><text x="33.8805%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6305%" y="501" width="0.0810%" height="15" fill="rgb(253,29,49)" fg:x="415" fg:w="1"/><text x="33.8805%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.6305%" y="485" width="0.0810%" height="15" fill="rgb(238,129,49)" fg:x="415" fg:w="1"/><text x="33.8805%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.6305%" y="469" width="0.0810%" height="15" fill="rgb(240,26,41)" fg:x="415" fg:w="1"/><text x="33.8805%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.6305%" y="453" width="0.0810%" height="15" fill="rgb(221,47,33)" fg:x="415" fg:w="1"/><text x="33.8805%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6305%" y="437" width="0.0810%" height="15" fill="rgb(216,200,17)" fg:x="415" fg:w="1"/><text x="33.8805%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6305%" y="421" width="0.0810%" height="15" fill="rgb(230,151,26)" fg:x="415" fg:w="1"/><text x="33.8805%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.6305%" y="405" width="0.0810%" height="15" fill="rgb(242,182,16)" fg:x="415" fg:w="1"/><text x="33.8805%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.6305%" y="389" width="0.0810%" height="15" fill="rgb(236,35,53)" fg:x="415" fg:w="1"/><text x="33.8805%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.6305%" y="373" width="0.0810%" height="15" fill="rgb(214,180,28)" fg:x="415" fg:w="1"/><text x="33.8805%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.6305%" y="357" width="0.0810%" height="15" fill="rgb(208,173,36)" fg:x="415" fg:w="1"/><text x="33.8805%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6305%" y="341" width="0.0810%" height="15" fill="rgb(218,39,15)" fg:x="415" fg:w="1"/><text x="33.8805%" y="351.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (9 samples, 0.73%)</title><rect x="33.3874%" y="549" width="0.7293%" height="15" fill="rgb(213,145,15)" fg:x="412" fg:w="9"/><text x="33.6374%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9 samples, 0.73%)</title><rect x="33.3874%" y="533" width="0.7293%" height="15" fill="rgb(242,110,37)" fg:x="412" fg:w="9"/><text x="33.6374%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.41%)</title><rect x="33.7115%" y="517" width="0.4052%" height="15" fill="rgb(247,146,22)" fg:x="416" fg:w="5"/><text x="33.9615%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.41%)</title><rect x="33.7115%" y="501" width="0.4052%" height="15" fill="rgb(215,191,7)" fg:x="416" fg:w="5"/><text x="33.9615%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.41%)</title><rect x="33.7115%" y="485" width="0.4052%" height="15" fill="rgb(240,158,1)" fg:x="416" fg:w="5"/><text x="33.9615%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.41%)</title><rect x="33.7115%" y="469" width="0.4052%" height="15" fill="rgb(241,78,32)" fg:x="416" fg:w="5"/><text x="33.9615%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.41%)</title><rect x="33.7115%" y="453" width="0.4052%" height="15" fill="rgb(248,83,10)" fg:x="416" fg:w="5"/><text x="33.9615%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.41%)</title><rect x="33.7115%" y="437" width="0.4052%" height="15" fill="rgb(241,52,0)" fg:x="416" fg:w="5"/><text x="33.9615%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.41%)</title><rect x="33.7115%" y="421" width="0.4052%" height="15" fill="rgb(238,37,13)" fg:x="416" fg:w="5"/><text x="33.9615%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.41%)</title><rect x="33.7115%" y="405" width="0.4052%" height="15" fill="rgb(242,194,17)" fg:x="416" fg:w="5"/><text x="33.9615%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.41%)</title><rect x="33.7115%" y="389" width="0.4052%" height="15" fill="rgb(236,96,3)" fg:x="416" fg:w="5"/><text x="33.9615%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.41%)</title><rect x="33.7115%" y="373" width="0.4052%" height="15" fill="rgb(235,148,34)" fg:x="416" fg:w="5"/><text x="33.9615%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.41%)</title><rect x="33.7115%" y="357" width="0.4052%" height="15" fill="rgb(254,12,11)" fg:x="416" fg:w="5"/><text x="33.9615%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.41%)</title><rect x="33.7115%" y="341" width="0.4052%" height="15" fill="rgb(207,31,54)" fg:x="416" fg:w="5"/><text x="33.9615%" y="351.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.41%)</title><rect x="33.7115%" y="325" width="0.4052%" height="15" fill="rgb(252,14,28)" fg:x="416" fg:w="5"/><text x="33.9615%" y="335.50"></text></g><g><title>__libc_malloc (5 samples, 0.41%)</title><rect x="33.7115%" y="309" width="0.4052%" height="15" fill="rgb(252,108,36)" fg:x="416" fg:w="5"/><text x="33.9615%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="34.1167%" y="549" width="0.0810%" height="15" fill="rgb(214,149,7)" fg:x="421" fg:w="1"/><text x="34.3667%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="34.1167%" y="533" width="0.0810%" height="15" fill="rgb(243,94,12)" fg:x="421" fg:w="1"/><text x="34.3667%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="34.1167%" y="517" width="0.0810%" height="15" fill="rgb(208,36,10)" fg:x="421" fg:w="1"/><text x="34.3667%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="34.1167%" y="501" width="0.0810%" height="15" fill="rgb(233,185,52)" fg:x="421" fg:w="1"/><text x="34.3667%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.1977%" y="517" width="0.0810%" height="15" fill="rgb(234,50,45)" fg:x="422" fg:w="1"/><text x="34.4477%" y="527.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (33 samples, 2.67%)</title><rect x="31.6856%" y="597" width="2.6742%" height="15" fill="rgb(228,92,54)" fg:x="391" fg:w="33"/><text x="31.9356%" y="607.50">pl..</text></g><g><title>kernel::model::entry::Entry::scope (12 samples, 0.97%)</title><rect x="33.3874%" y="581" width="0.9724%" height="15" fill="rgb(224,85,25)" fg:x="412" fg:w="12"/><text x="33.6374%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.97%)</title><rect x="33.3874%" y="565" width="0.9724%" height="15" fill="rgb(246,1,45)" fg:x="412" fg:w="12"/><text x="33.6374%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.1977%" y="549" width="0.1621%" height="15" fill="rgb(240,66,23)" fg:x="422" fg:w="2"/><text x="34.4477%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.1977%" y="533" width="0.1621%" height="15" fill="rgb(222,96,27)" fg:x="422" fg:w="2"/><text x="34.4477%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="34.2788%" y="517" width="0.0810%" height="15" fill="rgb(212,136,10)" fg:x="423" fg:w="1"/><text x="34.5288%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.2788%" y="501" width="0.0810%" height="15" fill="rgb(226,192,50)" fg:x="423" fg:w="1"/><text x="34.5288%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="34.2788%" y="485" width="0.0810%" height="15" fill="rgb(241,182,31)" fg:x="423" fg:w="1"/><text x="34.5288%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.2788%" y="469" width="0.0810%" height="15" fill="rgb(219,205,47)" fg:x="423" fg:w="1"/><text x="34.5288%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="34.3598%" y="309" width="0.1621%" height="15" fill="rgb(207,96,14)" fg:x="424" fg:w="2"/><text x="34.6098%" y="319.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="34.3598%" y="549" width="0.2431%" height="15" fill="rgb(216,119,9)" fg:x="424" fg:w="3"/><text x="34.6098%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.3598%" y="533" width="0.2431%" height="15" fill="rgb(235,62,36)" fg:x="424" fg:w="3"/><text x="34.6098%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="34.3598%" y="517" width="0.2431%" height="15" fill="rgb(214,41,27)" fg:x="424" fg:w="3"/><text x="34.6098%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="34.3598%" y="501" width="0.2431%" height="15" fill="rgb(214,174,37)" fg:x="424" fg:w="3"/><text x="34.6098%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="34.3598%" y="485" width="0.2431%" height="15" fill="rgb(212,11,25)" fg:x="424" fg:w="3"/><text x="34.6098%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="34.3598%" y="469" width="0.2431%" height="15" fill="rgb(217,71,35)" fg:x="424" fg:w="3"/><text x="34.6098%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="34.3598%" y="453" width="0.2431%" height="15" fill="rgb(234,152,9)" fg:x="424" fg:w="3"/><text x="34.6098%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="34.3598%" y="437" width="0.2431%" height="15" fill="rgb(228,32,51)" fg:x="424" fg:w="3"/><text x="34.6098%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="34.3598%" y="421" width="0.2431%" height="15" fill="rgb(209,14,47)" fg:x="424" fg:w="3"/><text x="34.6098%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="34.3598%" y="405" width="0.2431%" height="15" fill="rgb(218,201,17)" fg:x="424" fg:w="3"/><text x="34.6098%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="34.3598%" y="389" width="0.2431%" height="15" fill="rgb(218,98,15)" fg:x="424" fg:w="3"/><text x="34.6098%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="34.3598%" y="373" width="0.2431%" height="15" fill="rgb(233,202,29)" fg:x="424" fg:w="3"/><text x="34.6098%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="34.3598%" y="357" width="0.2431%" height="15" fill="rgb(207,196,44)" fg:x="424" fg:w="3"/><text x="34.6098%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="34.3598%" y="341" width="0.2431%" height="15" fill="rgb(218,63,34)" fg:x="424" fg:w="3"/><text x="34.6098%" y="351.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="34.3598%" y="325" width="0.2431%" height="15" fill="rgb(209,10,5)" fg:x="424" fg:w="3"/><text x="34.6098%" y="335.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="34.5219%" y="309" width="0.0810%" height="15" fill="rgb(224,36,28)" fg:x="426" fg:w="1"/><text x="34.7719%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.6840%" y="533" width="0.0810%" height="15" fill="rgb(249,178,7)" fg:x="428" fg:w="1"/><text x="34.9340%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="34.9271%" y="453" width="0.0810%" height="15" fill="rgb(253,163,10)" fg:x="431" fg:w="1"/><text x="35.1771%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.0081%" y="437" width="0.0810%" height="15" fill="rgb(245,67,46)" fg:x="432" fg:w="1"/><text x="35.2581%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.0081%" y="421" width="0.0810%" height="15" fill="rgb(225,14,18)" fg:x="432" fg:w="1"/><text x="35.2581%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.0081%" y="405" width="0.0810%" height="15" fill="rgb(217,41,54)" fg:x="432" fg:w="1"/><text x="35.2581%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.0081%" y="389" width="0.0810%" height="15" fill="rgb(222,111,11)" fg:x="432" fg:w="1"/><text x="35.2581%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.0081%" y="373" width="0.0810%" height="15" fill="rgb(211,85,31)" fg:x="432" fg:w="1"/><text x="35.2581%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.0081%" y="357" width="0.0810%" height="15" fill="rgb(223,29,26)" fg:x="432" fg:w="1"/><text x="35.2581%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.0081%" y="341" width="0.0810%" height="15" fill="rgb(236,124,50)" fg:x="432" fg:w="1"/><text x="35.2581%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.0081%" y="325" width="0.0810%" height="15" fill="rgb(219,148,15)" fg:x="432" fg:w="1"/><text x="35.2581%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.0081%" y="309" width="0.0810%" height="15" fill="rgb(248,159,33)" fg:x="432" fg:w="1"/><text x="35.2581%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.0081%" y="293" width="0.0810%" height="15" fill="rgb(252,65,8)" fg:x="432" fg:w="1"/><text x="35.2581%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.0081%" y="277" width="0.0810%" height="15" fill="rgb(236,45,7)" fg:x="432" fg:w="1"/><text x="35.2581%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.0081%" y="261" width="0.0810%" height="15" fill="rgb(244,3,48)" fg:x="432" fg:w="1"/><text x="35.2581%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.0081%" y="245" width="0.0810%" height="15" fill="rgb(224,123,53)" fg:x="432" fg:w="1"/><text x="35.2581%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.1702%" y="357" width="0.0810%" height="15" fill="rgb(223,173,15)" fg:x="434" fg:w="1"/><text x="35.4202%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.1702%" y="341" width="0.0810%" height="15" fill="rgb(254,181,5)" fg:x="434" fg:w="1"/><text x="35.4202%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.1702%" y="325" width="0.0810%" height="15" fill="rgb(243,124,33)" fg:x="434" fg:w="1"/><text x="35.4202%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.1702%" y="309" width="0.0810%" height="15" fill="rgb(253,220,11)" fg:x="434" fg:w="1"/><text x="35.4202%" y="319.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="35.2512%" y="357" width="0.0810%" height="15" fill="rgb(217,14,4)" fg:x="435" fg:w="1"/><text x="35.5012%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="35.1702%" y="405" width="0.3241%" height="15" fill="rgb(209,196,12)" fg:x="434" fg:w="4"/><text x="35.4202%" y="415.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="35.1702%" y="389" width="0.3241%" height="15" fill="rgb(237,108,29)" fg:x="434" fg:w="4"/><text x="35.4202%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="35.1702%" y="373" width="0.3241%" height="15" fill="rgb(216,173,20)" fg:x="434" fg:w="4"/><text x="35.4202%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.3323%" y="357" width="0.1621%" height="15" fill="rgb(245,27,6)" fg:x="436" fg:w="2"/><text x="35.5823%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.3323%" y="341" width="0.1621%" height="15" fill="rgb(210,181,20)" fg:x="436" fg:w="2"/><text x="35.5823%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.3323%" y="325" width="0.1621%" height="15" fill="rgb(235,213,1)" fg:x="436" fg:w="2"/><text x="35.5823%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.3323%" y="309" width="0.1621%" height="15" fill="rgb(239,68,43)" fg:x="436" fg:w="2"/><text x="35.5823%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="35.3323%" y="293" width="0.1621%" height="15" fill="rgb(254,137,43)" fg:x="436" fg:w="2"/><text x="35.5823%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.3323%" y="277" width="0.1621%" height="15" fill="rgb(252,170,38)" fg:x="436" fg:w="2"/><text x="35.5823%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.3323%" y="261" width="0.1621%" height="15" fill="rgb(234,21,42)" fg:x="436" fg:w="2"/><text x="35.5823%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.3323%" y="245" width="0.1621%" height="15" fill="rgb(216,145,40)" fg:x="436" fg:w="2"/><text x="35.5823%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.3323%" y="229" width="0.1621%" height="15" fill="rgb(251,73,9)" fg:x="436" fg:w="2"/><text x="35.5823%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.3323%" y="213" width="0.1621%" height="15" fill="rgb(242,54,6)" fg:x="436" fg:w="2"/><text x="35.5823%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="35.4133%" y="197" width="0.0810%" height="15" fill="rgb(239,70,7)" fg:x="437" fg:w="1"/><text x="35.6633%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.4943%" y="357" width="0.0810%" height="15" fill="rgb(216,159,35)" fg:x="438" fg:w="1"/><text x="35.7443%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.4943%" y="341" width="0.0810%" height="15" fill="rgb(224,50,39)" fg:x="438" fg:w="1"/><text x="35.7443%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.4943%" y="325" width="0.0810%" height="15" fill="rgb(235,9,35)" fg:x="438" fg:w="1"/><text x="35.7443%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="35.4943%" y="309" width="0.0810%" height="15" fill="rgb(239,34,21)" fg:x="438" fg:w="1"/><text x="35.7443%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.4943%" y="293" width="0.0810%" height="15" fill="rgb(218,162,43)" fg:x="438" fg:w="1"/><text x="35.7443%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.4943%" y="277" width="0.0810%" height="15" fill="rgb(219,89,33)" fg:x="438" fg:w="1"/><text x="35.7443%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.4943%" y="261" width="0.0810%" height="15" fill="rgb(226,125,37)" fg:x="438" fg:w="1"/><text x="35.7443%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.4943%" y="245" width="0.0810%" height="15" fill="rgb(233,149,30)" fg:x="438" fg:w="1"/><text x="35.7443%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.4943%" y="229" width="0.0810%" height="15" fill="rgb(236,8,18)" fg:x="438" fg:w="1"/><text x="35.7443%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="35.4943%" y="213" width="0.0810%" height="15" fill="rgb(205,176,9)" fg:x="438" fg:w="1"/><text x="35.7443%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="35.4943%" y="197" width="0.0810%" height="15" fill="rgb(252,103,44)" fg:x="438" fg:w="1"/><text x="35.7443%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="35.5754%" y="197" width="0.0810%" height="15" fill="rgb(207,68,53)" fg:x="439" fg:w="1"/><text x="35.8254%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.5754%" y="181" width="0.0810%" height="15" fill="rgb(218,193,48)" fg:x="439" fg:w="1"/><text x="35.8254%" y="191.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (8 samples, 0.65%)</title><rect x="35.0891%" y="437" width="0.6483%" height="15" fill="rgb(234,121,52)" fg:x="433" fg:w="8"/><text x="35.3391%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.65%)</title><rect x="35.0891%" y="421" width="0.6483%" height="15" fill="rgb(227,218,49)" fg:x="433" fg:w="8"/><text x="35.3391%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="35.4943%" y="405" width="0.2431%" height="15" fill="rgb(221,8,7)" fg:x="438" fg:w="3"/><text x="35.7443%" y="415.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="35.4943%" y="389" width="0.2431%" height="15" fill="rgb(217,151,36)" fg:x="438" fg:w="3"/><text x="35.7443%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="35.4943%" y="373" width="0.2431%" height="15" fill="rgb(213,71,5)" fg:x="438" fg:w="3"/><text x="35.7443%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.5754%" y="357" width="0.1621%" height="15" fill="rgb(225,145,43)" fg:x="439" fg:w="2"/><text x="35.8254%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.5754%" y="341" width="0.1621%" height="15" fill="rgb(235,118,19)" fg:x="439" fg:w="2"/><text x="35.8254%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.5754%" y="325" width="0.1621%" height="15" fill="rgb(214,102,36)" fg:x="439" fg:w="2"/><text x="35.8254%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.5754%" y="309" width="0.1621%" height="15" fill="rgb(220,56,43)" fg:x="439" fg:w="2"/><text x="35.8254%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="35.5754%" y="293" width="0.1621%" height="15" fill="rgb(246,136,46)" fg:x="439" fg:w="2"/><text x="35.8254%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.5754%" y="277" width="0.1621%" height="15" fill="rgb(249,99,12)" fg:x="439" fg:w="2"/><text x="35.8254%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.5754%" y="261" width="0.1621%" height="15" fill="rgb(224,31,42)" fg:x="439" fg:w="2"/><text x="35.8254%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.5754%" y="245" width="0.1621%" height="15" fill="rgb(208,96,21)" fg:x="439" fg:w="2"/><text x="35.8254%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.5754%" y="229" width="0.1621%" height="15" fill="rgb(237,229,7)" fg:x="439" fg:w="2"/><text x="35.8254%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.5754%" y="213" width="0.1621%" height="15" fill="rgb(210,12,6)" fg:x="439" fg:w="2"/><text x="35.8254%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.6564%" y="197" width="0.0810%" height="15" fill="rgb(240,9,34)" fg:x="440" fg:w="1"/><text x="35.9064%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.8185%" y="293" width="0.0810%" height="15" fill="rgb(211,68,37)" fg:x="442" fg:w="1"/><text x="36.0685%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="35.7374%" y="437" width="0.2431%" height="15" fill="rgb(249,138,50)" fg:x="441" fg:w="3"/><text x="35.9874%" y="447.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="35.7374%" y="421" width="0.2431%" height="15" fill="rgb(243,185,40)" fg:x="441" fg:w="3"/><text x="35.9874%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="35.7374%" y="405" width="0.2431%" height="15" fill="rgb(242,92,35)" fg:x="441" fg:w="3"/><text x="35.9874%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="35.7374%" y="389" width="0.2431%" height="15" fill="rgb(244,98,5)" fg:x="441" fg:w="3"/><text x="35.9874%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="35.7374%" y="373" width="0.2431%" height="15" fill="rgb(228,186,29)" fg:x="441" fg:w="3"/><text x="35.9874%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="35.7374%" y="357" width="0.2431%" height="15" fill="rgb(253,7,44)" fg:x="441" fg:w="3"/><text x="35.9874%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="35.7374%" y="341" width="0.2431%" height="15" fill="rgb(216,11,45)" fg:x="441" fg:w="3"/><text x="35.9874%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="35.7374%" y="325" width="0.2431%" height="15" fill="rgb(205,67,3)" fg:x="441" fg:w="3"/><text x="35.9874%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="35.7374%" y="309" width="0.2431%" height="15" fill="rgb(250,18,3)" fg:x="441" fg:w="3"/><text x="35.9874%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="35.8995%" y="293" width="0.0810%" height="15" fill="rgb(241,222,43)" fg:x="443" fg:w="1"/><text x="36.1495%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="35.8995%" y="277" width="0.0810%" height="15" fill="rgb(233,115,3)" fg:x="443" fg:w="1"/><text x="36.1495%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.9806%" y="373" width="0.0810%" height="15" fill="rgb(215,165,25)" fg:x="444" fg:w="1"/><text x="36.2306%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="35.9806%" y="437" width="0.1621%" height="15" fill="rgb(234,179,6)" fg:x="444" fg:w="2"/><text x="36.2306%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.9806%" y="421" width="0.1621%" height="15" fill="rgb(215,82,23)" fg:x="444" fg:w="2"/><text x="36.2306%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.9806%" y="405" width="0.1621%" height="15" fill="rgb(211,47,18)" fg:x="444" fg:w="2"/><text x="36.2306%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="35.9806%" y="389" width="0.1621%" height="15" fill="rgb(248,17,9)" fg:x="444" fg:w="2"/><text x="36.2306%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.0616%" y="373" width="0.0810%" height="15" fill="rgb(210,212,12)" fg:x="445" fg:w="1"/><text x="36.3116%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.1426%" y="373" width="0.0810%" height="15" fill="rgb(230,135,45)" fg:x="446" fg:w="1"/><text x="36.3926%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.1426%" y="357" width="0.0810%" height="15" fill="rgb(214,121,41)" fg:x="446" fg:w="1"/><text x="36.3926%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.4668%" y="245" width="0.0810%" height="15" fill="rgb(239,165,45)" fg:x="450" fg:w="1"/><text x="36.7168%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="36.4668%" y="229" width="0.0810%" height="15" fill="rgb(214,85,51)" fg:x="450" fg:w="1"/><text x="36.7168%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.5478%" y="213" width="0.0810%" height="15" fill="rgb(223,90,27)" fg:x="451" fg:w="1"/><text x="36.7978%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.5478%" y="197" width="0.0810%" height="15" fill="rgb(244,84,11)" fg:x="451" fg:w="1"/><text x="36.7978%" y="207.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.57%)</title><rect x="36.1426%" y="421" width="0.5673%" height="15" fill="rgb(253,41,47)" fg:x="446" fg:w="7"/><text x="36.3926%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="36.1426%" y="405" width="0.5673%" height="15" fill="rgb(232,39,5)" fg:x="446" fg:w="7"/><text x="36.3926%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="36.1426%" y="389" width="0.5673%" height="15" fill="rgb(211,93,4)" fg:x="446" fg:w="7"/><text x="36.3926%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.49%)</title><rect x="36.2237%" y="373" width="0.4862%" height="15" fill="rgb(219,50,49)" fg:x="447" fg:w="6"/><text x="36.4737%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="36.3047%" y="357" width="0.4052%" height="15" fill="rgb(232,80,19)" fg:x="448" fg:w="5"/><text x="36.5547%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="36.3857%" y="341" width="0.3241%" height="15" fill="rgb(215,227,39)" fg:x="449" fg:w="4"/><text x="36.6357%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="36.4668%" y="325" width="0.2431%" height="15" fill="rgb(211,99,12)" fg:x="450" fg:w="3"/><text x="36.7168%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="36.4668%" y="309" width="0.2431%" height="15" fill="rgb(214,158,5)" fg:x="450" fg:w="3"/><text x="36.7168%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="36.4668%" y="293" width="0.2431%" height="15" fill="rgb(242,19,53)" fg:x="450" fg:w="3"/><text x="36.7168%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="36.4668%" y="277" width="0.2431%" height="15" fill="rgb(208,18,20)" fg:x="450" fg:w="3"/><text x="36.7168%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="36.4668%" y="261" width="0.2431%" height="15" fill="rgb(250,44,11)" fg:x="450" fg:w="3"/><text x="36.7168%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="36.5478%" y="245" width="0.1621%" height="15" fill="rgb(238,159,13)" fg:x="451" fg:w="2"/><text x="36.7978%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="36.5478%" y="229" width="0.1621%" height="15" fill="rgb(231,74,18)" fg:x="451" fg:w="2"/><text x="36.7978%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.6288%" y="213" width="0.0810%" height="15" fill="rgb(229,219,45)" fg:x="452" fg:w="1"/><text x="36.8788%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="36.6288%" y="197" width="0.0810%" height="15" fill="rgb(210,221,1)" fg:x="452" fg:w="1"/><text x="36.8788%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.6288%" y="181" width="0.0810%" height="15" fill="rgb(209,60,51)" fg:x="452" fg:w="1"/><text x="36.8788%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6288%" y="165" width="0.0810%" height="15" fill="rgb(252,97,34)" fg:x="452" fg:w="1"/><text x="36.8788%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="36.7099%" y="245" width="0.0810%" height="15" fill="rgb(243,211,37)" fg:x="453" fg:w="1"/><text x="36.9599%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="36.7099%" y="229" width="0.0810%" height="15" fill="rgb(210,229,37)" fg:x="453" fg:w="1"/><text x="36.9599%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="36.8720%" y="197" width="0.0810%" height="15" fill="rgb(220,208,43)" fg:x="455" fg:w="1"/><text x="37.1220%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="36.7099%" y="341" width="0.3241%" height="15" fill="rgb(218,118,50)" fg:x="453" fg:w="4"/><text x="36.9599%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="36.7099%" y="325" width="0.3241%" height="15" fill="rgb(254,169,52)" fg:x="453" fg:w="4"/><text x="36.9599%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="36.7099%" y="309" width="0.3241%" height="15" fill="rgb(221,214,37)" fg:x="453" fg:w="4"/><text x="36.9599%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="36.7099%" y="293" width="0.3241%" height="15" fill="rgb(254,186,32)" fg:x="453" fg:w="4"/><text x="36.9599%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="36.7099%" y="277" width="0.3241%" height="15" fill="rgb(215,144,43)" fg:x="453" fg:w="4"/><text x="36.9599%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="36.7099%" y="261" width="0.3241%" height="15" fill="rgb(252,21,46)" fg:x="453" fg:w="4"/><text x="36.9599%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="36.7909%" y="245" width="0.2431%" height="15" fill="rgb(207,166,46)" fg:x="454" fg:w="3"/><text x="37.0409%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="36.7909%" y="229" width="0.2431%" height="15" fill="rgb(253,37,49)" fg:x="454" fg:w="3"/><text x="37.0409%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="36.8720%" y="213" width="0.1621%" height="15" fill="rgb(222,97,20)" fg:x="455" fg:w="2"/><text x="37.1220%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.9530%" y="197" width="0.0810%" height="15" fill="rgb(244,181,26)" fg:x="456" fg:w="1"/><text x="37.2030%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.9530%" y="181" width="0.0810%" height="15" fill="rgb(241,22,29)" fg:x="456" fg:w="1"/><text x="37.2030%" y="191.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="36.9530%" y="165" width="0.0810%" height="15" fill="rgb(206,200,43)" fg:x="456" fg:w="1"/><text x="37.2030%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.0340%" y="309" width="0.0810%" height="15" fill="rgb(226,224,43)" fg:x="457" fg:w="1"/><text x="37.2840%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.1151%" y="293" width="0.0810%" height="15" fill="rgb(253,129,28)" fg:x="458" fg:w="1"/><text x="37.3651%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="37.0340%" y="341" width="0.2431%" height="15" fill="rgb(252,99,33)" fg:x="457" fg:w="3"/><text x="37.2840%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="37.0340%" y="325" width="0.2431%" height="15" fill="rgb(208,123,45)" fg:x="457" fg:w="3"/><text x="37.2840%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="37.1151%" y="309" width="0.1621%" height="15" fill="rgb(251,106,12)" fg:x="458" fg:w="2"/><text x="37.3651%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="37.1961%" y="293" width="0.0810%" height="15" fill="rgb(240,209,35)" fg:x="459" fg:w="1"/><text x="37.4461%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="37.1961%" y="277" width="0.0810%" height="15" fill="rgb(214,52,50)" fg:x="459" fg:w="1"/><text x="37.4461%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.1961%" y="261" width="0.0810%" height="15" fill="rgb(234,119,4)" fg:x="459" fg:w="1"/><text x="37.4461%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="37.2771%" y="309" width="0.1621%" height="15" fill="rgb(228,181,36)" fg:x="460" fg:w="2"/><text x="37.5271%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="37.2771%" y="293" width="0.1621%" height="15" fill="rgb(213,171,42)" fg:x="460" fg:w="2"/><text x="37.5271%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.3582%" y="277" width="0.0810%" height="15" fill="rgb(239,14,41)" fg:x="461" fg:w="1"/><text x="37.6082%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="37.4392%" y="213" width="0.0810%" height="15" fill="rgb(239,111,46)" fg:x="462" fg:w="1"/><text x="37.6892%" y="223.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (32 samples, 2.59%)</title><rect x="35.0081%" y="453" width="2.5932%" height="15" fill="rgb(214,72,7)" fg:x="432" fg:w="32"/><text x="35.2581%" y="463.50">en..</text></g><g><title>kernel::model::entity::Entity::from_str (18 samples, 1.46%)</title><rect x="36.1426%" y="437" width="1.4587%" height="15" fill="rgb(221,114,1)" fg:x="446" fg:w="18"/><text x="36.3926%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.89%)</title><rect x="36.7099%" y="421" width="0.8914%" height="15" fill="rgb(213,143,14)" fg:x="453" fg:w="11"/><text x="36.9599%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.89%)</title><rect x="36.7099%" y="405" width="0.8914%" height="15" fill="rgb(220,221,53)" fg:x="453" fg:w="11"/><text x="36.9599%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.89%)</title><rect x="36.7099%" y="389" width="0.8914%" height="15" fill="rgb(236,189,27)" fg:x="453" fg:w="11"/><text x="36.9599%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.89%)</title><rect x="36.7099%" y="373" width="0.8914%" height="15" fill="rgb(252,139,49)" fg:x="453" fg:w="11"/><text x="36.9599%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (11 samples, 0.89%)</title><rect x="36.7099%" y="357" width="0.8914%" height="15" fill="rgb(231,158,33)" fg:x="453" fg:w="11"/><text x="36.9599%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="37.2771%" y="341" width="0.3241%" height="15" fill="rgb(207,201,15)" fg:x="460" fg:w="4"/><text x="37.5271%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="37.2771%" y="325" width="0.3241%" height="15" fill="rgb(218,43,48)" fg:x="460" fg:w="4"/><text x="37.5271%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="37.4392%" y="309" width="0.1621%" height="15" fill="rgb(244,63,52)" fg:x="462" fg:w="2"/><text x="37.6892%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.4392%" y="293" width="0.1621%" height="15" fill="rgb(236,60,17)" fg:x="462" fg:w="2"/><text x="37.6892%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="37.4392%" y="277" width="0.1621%" height="15" fill="rgb(205,206,29)" fg:x="462" fg:w="2"/><text x="37.6892%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="37.4392%" y="261" width="0.1621%" height="15" fill="rgb(205,209,35)" fg:x="462" fg:w="2"/><text x="37.6892%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.4392%" y="245" width="0.1621%" height="15" fill="rgb(227,112,14)" fg:x="462" fg:w="2"/><text x="37.6892%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="37.4392%" y="229" width="0.1621%" height="15" fill="rgb(248,151,9)" fg:x="462" fg:w="2"/><text x="37.6892%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="37.5203%" y="213" width="0.0810%" height="15" fill="rgb(247,45,40)" fg:x="463" fg:w="1"/><text x="37.7703%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="37.5203%" y="197" width="0.0810%" height="15" fill="rgb(232,185,16)" fg:x="463" fg:w="1"/><text x="37.7703%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="37.5203%" y="181" width="0.0810%" height="15" fill="rgb(215,45,44)" fg:x="463" fg:w="1"/><text x="37.7703%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="37.5203%" y="165" width="0.0810%" height="15" fill="rgb(206,69,32)" fg:x="463" fg:w="1"/><text x="37.7703%" y="175.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6013%" y="437" width="0.0810%" height="15" fill="rgb(233,98,50)" fg:x="464" fg:w="1"/><text x="37.8513%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6013%" y="421" width="0.0810%" height="15" fill="rgb(232,217,52)" fg:x="464" fg:w="1"/><text x="37.8513%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="37.6013%" y="405" width="0.0810%" height="15" fill="rgb(250,42,51)" fg:x="464" fg:w="1"/><text x="37.8513%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="37.6013%" y="389" width="0.0810%" height="15" fill="rgb(241,200,26)" fg:x="464" fg:w="1"/><text x="37.8513%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="37.6013%" y="373" width="0.0810%" height="15" fill="rgb(207,10,32)" fg:x="464" fg:w="1"/><text x="37.8513%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="37.6013%" y="357" width="0.0810%" height="15" fill="rgb(214,63,15)" fg:x="464" fg:w="1"/><text x="37.8513%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6013%" y="341" width="0.0810%" height="15" fill="rgb(234,176,14)" fg:x="464" fg:w="1"/><text x="37.8513%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="37.6013%" y="325" width="0.0810%" height="15" fill="rgb(226,104,52)" fg:x="464" fg:w="1"/><text x="37.8513%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="37.6013%" y="309" width="0.0810%" height="15" fill="rgb(211,222,1)" fg:x="464" fg:w="1"/><text x="37.8513%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="37.6013%" y="293" width="0.0810%" height="15" fill="rgb(237,7,3)" fg:x="464" fg:w="1"/><text x="37.8513%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="37.6013%" y="277" width="0.0810%" height="15" fill="rgb(218,143,7)" fg:x="464" fg:w="1"/><text x="37.8513%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="37.6013%" y="261" width="0.0810%" height="15" fill="rgb(208,25,22)" fg:x="464" fg:w="1"/><text x="37.8513%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.6013%" y="245" width="0.0810%" height="15" fill="rgb(228,127,16)" fg:x="464" fg:w="1"/><text x="37.8513%" y="255.50"></text></g><g><title>core::iter::adapters::try_process (37 samples, 3.00%)</title><rect x="34.7650%" y="533" width="2.9984%" height="15" fill="rgb(237,86,27)" fg:x="429" fg:w="37"/><text x="35.0150%" y="543.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (37 samples, 3.00%)</title><rect x="34.7650%" y="517" width="2.9984%" height="15" fill="rgb(207,125,19)" fg:x="429" fg:w="37"/><text x="35.0150%" y="527.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (36 samples, 2.92%)</title><rect x="34.8460%" y="501" width="2.9173%" height="15" fill="rgb(243,195,0)" fg:x="430" fg:w="36"/><text x="35.0960%" y="511.50">&lt;c..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (35 samples, 2.84%)</title><rect x="34.9271%" y="485" width="2.8363%" height="15" fill="rgb(230,95,18)" fg:x="431" fg:w="35"/><text x="35.1771%" y="495.50">&lt;e..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (35 samples, 2.84%)</title><rect x="34.9271%" y="469" width="2.8363%" height="15" fill="rgb(232,157,21)" fg:x="431" fg:w="35"/><text x="35.1771%" y="479.50">&lt;e..</text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="37.6013%" y="453" width="0.1621%" height="15" fill="rgb(212,120,50)" fg:x="464" fg:w="2"/><text x="37.8513%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.6823%" y="437" width="0.0810%" height="15" fill="rgb(222,204,44)" fg:x="465" fg:w="1"/><text x="37.9323%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="37.6823%" y="421" width="0.0810%" height="15" fill="rgb(236,6,33)" fg:x="465" fg:w="1"/><text x="37.9323%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (40 samples, 3.24%)</title><rect x="34.6029%" y="549" width="3.2415%" height="15" fill="rgb(247,11,38)" fg:x="427" fg:w="40"/><text x="34.8529%" y="559.50">&lt;pl..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="37.7634%" y="533" width="0.0810%" height="15" fill="rgb(215,111,0)" fg:x="466" fg:w="1"/><text x="38.0134%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.7634%" y="517" width="0.0810%" height="15" fill="rgb(211,65,46)" fg:x="466" fg:w="1"/><text x="38.0134%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.8444%" y="549" width="0.0810%" height="15" fill="rgb(216,5,12)" fg:x="467" fg:w="1"/><text x="38.0944%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="37.9254%" y="549" width="0.0810%" height="15" fill="rgb(226,7,2)" fg:x="468" fg:w="1"/><text x="38.1754%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.9254%" y="533" width="0.0810%" height="15" fill="rgb(242,116,12)" fg:x="468" fg:w="1"/><text x="38.1754%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.9254%" y="517" width="0.0810%" height="15" fill="rgb(249,209,7)" fg:x="468" fg:w="1"/><text x="38.1754%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="37.9254%" y="501" width="0.0810%" height="15" fill="rgb(232,73,17)" fg:x="468" fg:w="1"/><text x="38.1754%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.9254%" y="485" width="0.0810%" height="15" fill="rgb(214,13,32)" fg:x="468" fg:w="1"/><text x="38.1754%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.9254%" y="469" width="0.0810%" height="15" fill="rgb(221,125,10)" fg:x="468" fg:w="1"/><text x="38.1754%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.1686%" y="517" width="0.0810%" height="15" fill="rgb(246,7,44)" fg:x="471" fg:w="1"/><text x="38.4186%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.1686%" y="501" width="0.0810%" height="15" fill="rgb(239,18,35)" fg:x="471" fg:w="1"/><text x="38.4186%" y="511.50"></text></g><g><title>plugins_core::tools::get_contained_keys (52 samples, 4.21%)</title><rect x="34.3598%" y="597" width="4.2139%" height="15" fill="rgb(250,222,16)" fg:x="424" fg:w="52"/><text x="34.6098%" y="607.50">plugi..</text></g><g><title>kernel::model::entry::Entry::scope (52 samples, 4.21%)</title><rect x="34.3598%" y="581" width="4.2139%" height="15" fill="rgb(219,100,8)" fg:x="424" fg:w="52"/><text x="34.6098%" y="591.50">kerne..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (52 samples, 4.21%)</title><rect x="34.3598%" y="565" width="4.2139%" height="15" fill="rgb(240,62,13)" fg:x="424" fg:w="52"/><text x="34.6098%" y="575.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.57%)</title><rect x="38.0065%" y="549" width="0.5673%" height="15" fill="rgb(253,194,2)" fg:x="469" fg:w="7"/><text x="38.2565%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="38.0065%" y="533" width="0.5673%" height="15" fill="rgb(235,58,31)" fg:x="469" fg:w="7"/><text x="38.2565%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.32%)</title><rect x="38.2496%" y="517" width="0.3241%" height="15" fill="rgb(231,37,11)" fg:x="472" fg:w="4"/><text x="38.4996%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="38.2496%" y="501" width="0.3241%" height="15" fill="rgb(235,133,0)" fg:x="472" fg:w="4"/><text x="38.4996%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.32%)</title><rect x="38.2496%" y="485" width="0.3241%" height="15" fill="rgb(212,185,40)" fg:x="472" fg:w="4"/><text x="38.4996%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="38.2496%" y="469" width="0.3241%" height="15" fill="rgb(216,68,42)" fg:x="472" fg:w="4"/><text x="38.4996%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="38.3306%" y="453" width="0.2431%" height="15" fill="rgb(239,81,4)" fg:x="473" fg:w="3"/><text x="38.5806%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.4927%" y="437" width="0.0810%" height="15" fill="rgb(206,86,6)" fg:x="475" fg:w="1"/><text x="38.7427%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="38.5737%" y="581" width="0.0810%" height="15" fill="rgb(249,95,27)" fg:x="476" fg:w="1"/><text x="38.8237%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="38.5737%" y="565" width="0.0810%" height="15" fill="rgb(205,155,45)" fg:x="476" fg:w="1"/><text x="38.8237%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="38.7358%" y="549" width="0.0810%" height="15" fill="rgb(213,55,42)" fg:x="478" fg:w="1"/><text x="38.9858%" y="559.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.8169%" y="549" width="0.1621%" height="15" fill="rgb(249,197,4)" fg:x="479" fg:w="2"/><text x="39.0669%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.8169%" y="533" width="0.1621%" height="15" fill="rgb(212,128,32)" fg:x="479" fg:w="2"/><text x="39.0669%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.8169%" y="517" width="0.1621%" height="15" fill="rgb(252,47,30)" fg:x="479" fg:w="2"/><text x="39.0669%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.8169%" y="501" width="0.1621%" height="15" fill="rgb(209,79,18)" fg:x="479" fg:w="2"/><text x="39.0669%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.8169%" y="485" width="0.1621%" height="15" fill="rgb(225,81,38)" fg:x="479" fg:w="2"/><text x="39.0669%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.8169%" y="469" width="0.1621%" height="15" fill="rgb(205,95,16)" fg:x="479" fg:w="2"/><text x="39.0669%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="38.8169%" y="453" width="0.1621%" height="15" fill="rgb(214,30,4)" fg:x="479" fg:w="2"/><text x="39.0669%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="38.8169%" y="437" width="0.1621%" height="15" fill="rgb(232,137,22)" fg:x="479" fg:w="2"/><text x="39.0669%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="38.8169%" y="421" width="0.1621%" height="15" fill="rgb(232,156,19)" fg:x="479" fg:w="2"/><text x="39.0669%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="38.8169%" y="405" width="0.1621%" height="15" fill="rgb(248,157,26)" fg:x="479" fg:w="2"/><text x="39.0669%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="38.8169%" y="389" width="0.1621%" height="15" fill="rgb(242,24,3)" fg:x="479" fg:w="2"/><text x="39.0669%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="38.8169%" y="373" width="0.1621%" height="15" fill="rgb(218,195,48)" fg:x="479" fg:w="2"/><text x="39.0669%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="38.8169%" y="357" width="0.1621%" height="15" fill="rgb(214,193,36)" fg:x="479" fg:w="2"/><text x="39.0669%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="38.8169%" y="341" width="0.1621%" height="15" fill="rgb(242,110,40)" fg:x="479" fg:w="2"/><text x="39.0669%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="38.8169%" y="325" width="0.1621%" height="15" fill="rgb(233,150,26)" fg:x="479" fg:w="2"/><text x="39.0669%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.8169%" y="309" width="0.1621%" height="15" fill="rgb(239,200,30)" fg:x="479" fg:w="2"/><text x="39.0669%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="38.9789%" y="533" width="0.0810%" height="15" fill="rgb(226,28,11)" fg:x="481" fg:w="1"/><text x="39.2289%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="38.9789%" y="517" width="0.0810%" height="15" fill="rgb(220,26,48)" fg:x="481" fg:w="1"/><text x="39.2289%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="38.9789%" y="501" width="0.0810%" height="15" fill="rgb(232,10,11)" fg:x="481" fg:w="1"/><text x="39.2289%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="38.9789%" y="485" width="0.0810%" height="15" fill="rgb(252,143,50)" fg:x="481" fg:w="1"/><text x="39.2289%" y="495.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="38.9789%" y="549" width="0.1621%" height="15" fill="rgb(206,58,22)" fg:x="481" fg:w="2"/><text x="39.2289%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="39.0600%" y="533" width="0.0810%" height="15" fill="rgb(250,9,45)" fg:x="482" fg:w="1"/><text x="39.3100%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.0600%" y="517" width="0.0810%" height="15" fill="rgb(225,148,14)" fg:x="482" fg:w="1"/><text x="39.3100%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (97 samples, 7.86%)</title><rect x="31.6045%" y="629" width="7.8606%" height="15" fill="rgb(205,178,40)" fg:x="390" fg:w="97"/><text x="31.8545%" y="639.50">&lt;alloc::vec..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (97 samples, 7.86%)</title><rect x="31.6045%" y="613" width="7.8606%" height="15" fill="rgb(215,201,4)" fg:x="390" fg:w="97"/><text x="31.8545%" y="623.50">&lt;core::iter..</text></g><g><title>plugins_core::tools::get_occupant_keys (11 samples, 0.89%)</title><rect x="38.5737%" y="597" width="0.8914%" height="15" fill="rgb(219,223,24)" fg:x="476" fg:w="11"/><text x="38.8237%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.81%)</title><rect x="38.6548%" y="581" width="0.8104%" height="15" fill="rgb(217,19,31)" fg:x="477" fg:w="10"/><text x="38.9048%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.73%)</title><rect x="38.7358%" y="565" width="0.7293%" height="15" fill="rgb(235,33,3)" fg:x="478" fg:w="9"/><text x="38.9858%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="39.1410%" y="549" width="0.3241%" height="15" fill="rgb(221,39,18)" fg:x="483" fg:w="4"/><text x="39.3910%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="39.1410%" y="533" width="0.3241%" height="15" fill="rgb(242,162,33)" fg:x="483" fg:w="4"/><text x="39.3910%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.3841%" y="517" width="0.0810%" height="15" fill="rgb(233,215,28)" fg:x="486" fg:w="1"/><text x="39.6341%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.3841%" y="501" width="0.0810%" height="15" fill="rgb(212,117,9)" fg:x="486" fg:w="1"/><text x="39.6341%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.5462%" y="581" width="0.0810%" height="15" fill="rgb(237,70,47)" fg:x="488" fg:w="1"/><text x="39.7962%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="39.6272%" y="565" width="0.0810%" height="15" fill="rgb(206,177,13)" fg:x="489" fg:w="1"/><text x="39.8772%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.7083%" y="373" width="0.0810%" height="15" fill="rgb(209,174,33)" fg:x="490" fg:w="1"/><text x="39.9583%" y="383.50"></text></g><g><title>kernel::model::EntityPtr::key (2 samples, 0.16%)</title><rect x="39.7083%" y="565" width="0.1621%" height="15" fill="rgb(226,6,11)" fg:x="490" fg:w="2"/><text x="39.9583%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.7083%" y="549" width="0.1621%" height="15" fill="rgb(240,214,6)" fg:x="490" fg:w="2"/><text x="39.9583%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="39.7083%" y="533" width="0.1621%" height="15" fill="rgb(254,214,40)" fg:x="490" fg:w="2"/><text x="39.9583%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="39.7083%" y="517" width="0.1621%" height="15" fill="rgb(230,187,15)" fg:x="490" fg:w="2"/><text x="39.9583%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="39.7083%" y="501" width="0.1621%" height="15" fill="rgb(250,11,27)" fg:x="490" fg:w="2"/><text x="39.9583%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="39.7083%" y="485" width="0.1621%" height="15" fill="rgb(243,107,19)" fg:x="490" fg:w="2"/><text x="39.9583%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.7083%" y="469" width="0.1621%" height="15" fill="rgb(253,66,26)" fg:x="490" fg:w="2"/><text x="39.9583%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="39.7083%" y="453" width="0.1621%" height="15" fill="rgb(228,43,8)" fg:x="490" fg:w="2"/><text x="39.9583%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="39.7083%" y="437" width="0.1621%" height="15" fill="rgb(232,197,36)" fg:x="490" fg:w="2"/><text x="39.9583%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="39.7083%" y="421" width="0.1621%" height="15" fill="rgb(221,182,31)" fg:x="490" fg:w="2"/><text x="39.9583%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="39.7083%" y="405" width="0.1621%" height="15" fill="rgb(244,25,36)" fg:x="490" fg:w="2"/><text x="39.9583%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="39.7083%" y="389" width="0.1621%" height="15" fill="rgb(247,101,19)" fg:x="490" fg:w="2"/><text x="39.9583%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="39.7893%" y="373" width="0.0810%" height="15" fill="rgb(223,117,19)" fg:x="491" fg:w="1"/><text x="40.0393%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="39.7893%" y="357" width="0.0810%" height="15" fill="rgb(249,63,38)" fg:x="491" fg:w="1"/><text x="40.0393%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.8703%" y="469" width="0.0810%" height="15" fill="rgb(220,143,23)" fg:x="492" fg:w="1"/><text x="40.1203%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.8703%" y="453" width="0.0810%" height="15" fill="rgb(252,183,22)" fg:x="492" fg:w="1"/><text x="40.1203%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.8703%" y="437" width="0.0810%" height="15" fill="rgb(243,176,15)" fg:x="492" fg:w="1"/><text x="40.1203%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.8703%" y="421" width="0.0810%" height="15" fill="rgb(244,204,46)" fg:x="492" fg:w="1"/><text x="40.1203%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.8703%" y="405" width="0.0810%" height="15" fill="rgb(227,28,54)" fg:x="492" fg:w="1"/><text x="40.1203%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.8703%" y="389" width="0.0810%" height="15" fill="rgb(231,10,15)" fg:x="492" fg:w="1"/><text x="40.1203%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.8703%" y="373" width="0.0810%" height="15" fill="rgb(210,200,17)" fg:x="492" fg:w="1"/><text x="40.1203%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.8703%" y="357" width="0.0810%" height="15" fill="rgb(251,106,46)" fg:x="492" fg:w="1"/><text x="40.1203%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.8703%" y="341" width="0.0810%" height="15" fill="rgb(218,211,15)" fg:x="492" fg:w="1"/><text x="40.1203%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.8703%" y="325" width="0.0810%" height="15" fill="rgb(239,62,10)" fg:x="492" fg:w="1"/><text x="40.1203%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.8703%" y="309" width="0.0810%" height="15" fill="rgb(225,53,53)" fg:x="492" fg:w="1"/><text x="40.1203%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.8703%" y="293" width="0.0810%" height="15" fill="rgb(207,16,24)" fg:x="492" fg:w="1"/><text x="40.1203%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.9514%" y="357" width="0.0810%" height="15" fill="rgb(217,52,28)" fg:x="493" fg:w="1"/><text x="40.2014%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.9514%" y="341" width="0.0810%" height="15" fill="rgb(246,1,5)" fg:x="493" fg:w="1"/><text x="40.2014%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="39.9514%" y="325" width="0.0810%" height="15" fill="rgb(221,29,26)" fg:x="493" fg:w="1"/><text x="40.2014%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="39.9514%" y="309" width="0.0810%" height="15" fill="rgb(250,133,32)" fg:x="493" fg:w="1"/><text x="40.2014%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="39.9514%" y="293" width="0.0810%" height="15" fill="rgb(236,63,16)" fg:x="493" fg:w="1"/><text x="40.2014%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="39.9514%" y="277" width="0.0810%" height="15" fill="rgb(231,159,14)" fg:x="493" fg:w="1"/><text x="40.2014%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.9514%" y="261" width="0.0810%" height="15" fill="rgb(207,102,36)" fg:x="493" fg:w="1"/><text x="40.2014%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.9514%" y="245" width="0.0810%" height="15" fill="rgb(230,224,31)" fg:x="493" fg:w="1"/><text x="40.2014%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="39.9514%" y="229" width="0.0810%" height="15" fill="rgb(215,182,16)" fg:x="493" fg:w="1"/><text x="40.2014%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="39.9514%" y="213" width="0.0810%" height="15" fill="rgb(226,113,2)" fg:x="493" fg:w="1"/><text x="40.2014%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.9514%" y="197" width="0.0810%" height="15" fill="rgb(241,18,35)" fg:x="493" fg:w="1"/><text x="40.2014%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="39.9514%" y="181" width="0.0810%" height="15" fill="rgb(240,165,44)" fg:x="493" fg:w="1"/><text x="40.2014%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="39.9514%" y="165" width="0.0810%" height="15" fill="rgb(229,130,47)" fg:x="493" fg:w="1"/><text x="40.2014%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="39.9514%" y="149" width="0.0810%" height="15" fill="rgb(223,93,7)" fg:x="493" fg:w="1"/><text x="40.2014%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="39.9514%" y="133" width="0.0810%" height="15" fill="rgb(205,180,36)" fg:x="493" fg:w="1"/><text x="40.2014%" y="143.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="39.9514%" y="421" width="0.1621%" height="15" fill="rgb(221,103,28)" fg:x="493" fg:w="2"/><text x="40.2014%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="39.9514%" y="405" width="0.1621%" height="15" fill="rgb(212,4,3)" fg:x="493" fg:w="2"/><text x="40.2014%" y="415.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="39.9514%" y="389" width="0.1621%" height="15" fill="rgb(209,221,53)" fg:x="493" fg:w="2"/><text x="40.2014%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="39.9514%" y="373" width="0.1621%" height="15" fill="rgb(233,229,52)" fg:x="493" fg:w="2"/><text x="40.2014%" y="383.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="40.0324%" y="357" width="0.0810%" height="15" fill="rgb(254,127,37)" fg:x="494" fg:w="1"/><text x="40.2824%" y="367.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="40.0324%" y="341" width="0.0810%" height="15" fill="rgb(207,161,26)" fg:x="494" fg:w="1"/><text x="40.2824%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.0324%" y="325" width="0.0810%" height="15" fill="rgb(223,75,5)" fg:x="494" fg:w="1"/><text x="40.2824%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.0324%" y="309" width="0.0810%" height="15" fill="rgb(235,115,52)" fg:x="494" fg:w="1"/><text x="40.2824%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="40.0324%" y="293" width="0.0810%" height="15" fill="rgb(240,91,46)" fg:x="494" fg:w="1"/><text x="40.2824%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="40.0324%" y="277" width="0.0810%" height="15" fill="rgb(251,144,21)" fg:x="494" fg:w="1"/><text x="40.2824%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="40.0324%" y="261" width="0.0810%" height="15" fill="rgb(247,220,47)" fg:x="494" fg:w="1"/><text x="40.2824%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="40.0324%" y="245" width="0.0810%" height="15" fill="rgb(253,122,1)" fg:x="494" fg:w="1"/><text x="40.2824%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="40.0324%" y="229" width="0.0810%" height="15" fill="rgb(221,0,24)" fg:x="494" fg:w="1"/><text x="40.2824%" y="239.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (7 samples, 0.57%)</title><rect x="39.6272%" y="581" width="0.5673%" height="15" fill="rgb(220,204,54)" fg:x="489" fg:w="7"/><text x="39.8772%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="39.8703%" y="565" width="0.3241%" height="15" fill="rgb(205,96,25)" fg:x="492" fg:w="4"/><text x="40.1203%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="39.8703%" y="549" width="0.3241%" height="15" fill="rgb(247,77,20)" fg:x="492" fg:w="4"/><text x="40.1203%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="39.8703%" y="533" width="0.3241%" height="15" fill="rgb(245,151,8)" fg:x="492" fg:w="4"/><text x="40.1203%" y="543.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="39.8703%" y="517" width="0.3241%" height="15" fill="rgb(242,158,39)" fg:x="492" fg:w="4"/><text x="40.1203%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="39.8703%" y="501" width="0.3241%" height="15" fill="rgb(222,214,50)" fg:x="492" fg:w="4"/><text x="40.1203%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="39.8703%" y="485" width="0.3241%" height="15" fill="rgb(229,60,39)" fg:x="492" fg:w="4"/><text x="40.1203%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="39.9514%" y="469" width="0.2431%" height="15" fill="rgb(240,148,18)" fg:x="493" fg:w="3"/><text x="40.2014%" y="479.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="39.9514%" y="453" width="0.2431%" height="15" fill="rgb(215,96,11)" fg:x="493" fg:w="3"/><text x="40.2014%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="39.9514%" y="437" width="0.2431%" height="15" fill="rgb(238,162,53)" fg:x="493" fg:w="3"/><text x="40.2014%" y="447.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="40.1135%" y="421" width="0.0810%" height="15" fill="rgb(214,83,18)" fg:x="495" fg:w="1"/><text x="40.3635%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.1394%" y="229" width="0.0810%" height="15" fill="rgb(248,117,24)" fg:x="520" fg:w="1"/><text x="42.3894%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="42.1394%" y="245" width="0.1621%" height="15" fill="rgb(238,190,6)" fg:x="520" fg:w="2"/><text x="42.3894%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2204%" y="229" width="0.0810%" height="15" fill="rgb(213,51,6)" fg:x="521" fg:w="1"/><text x="42.4704%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="42.2204%" y="213" width="0.0810%" height="15" fill="rgb(212,136,1)" fg:x="521" fg:w="1"/><text x="42.4704%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.41%)</title><rect x="42.1394%" y="277" width="0.4052%" height="15" fill="rgb(221,192,14)" fg:x="520" fg:w="5"/><text x="42.3894%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.41%)</title><rect x="42.1394%" y="261" width="0.4052%" height="15" fill="rgb(244,38,54)" fg:x="520" fg:w="5"/><text x="42.3894%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="42.3015%" y="245" width="0.2431%" height="15" fill="rgb(240,45,28)" fg:x="522" fg:w="3"/><text x="42.5515%" y="255.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="42.3015%" y="229" width="0.2431%" height="15" fill="rgb(240,123,12)" fg:x="522" fg:w="3"/><text x="42.5515%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="42.5446%" y="277" width="0.1621%" height="15" fill="rgb(216,14,30)" fg:x="525" fg:w="2"/><text x="42.7946%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.6256%" y="261" width="0.0810%" height="15" fill="rgb(212,50,24)" fg:x="526" fg:w="1"/><text x="42.8756%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.89%)</title><rect x="41.9773%" y="293" width="0.8914%" height="15" fill="rgb(253,229,47)" fg:x="518" fg:w="11"/><text x="42.2273%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.7066%" y="277" width="0.1621%" height="15" fill="rgb(214,26,17)" fg:x="527" fg:w="2"/><text x="42.9566%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="42.7877%" y="261" width="0.0810%" height="15" fill="rgb(252,60,11)" fg:x="528" fg:w="1"/><text x="43.0377%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="42.7877%" y="245" width="0.0810%" height="15" fill="rgb(209,59,37)" fg:x="528" fg:w="1"/><text x="43.0377%" y="255.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (14 samples, 1.13%)</title><rect x="41.8152%" y="325" width="1.1345%" height="15" fill="rgb(228,126,53)" fg:x="516" fg:w="14"/><text x="42.0652%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (13 samples, 1.05%)</title><rect x="41.8963%" y="309" width="1.0535%" height="15" fill="rgb(233,99,2)" fg:x="517" fg:w="13"/><text x="42.1463%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="42.8687%" y="293" width="0.0810%" height="15" fill="rgb(217,106,34)" fg:x="529" fg:w="1"/><text x="43.1187%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.8687%" y="277" width="0.0810%" height="15" fill="rgb(222,46,19)" fg:x="529" fg:w="1"/><text x="43.1187%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 1.46%)</title><rect x="41.5721%" y="341" width="1.4587%" height="15" fill="rgb(251,87,31)" fg:x="513" fg:w="18"/><text x="41.8221%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.9498%" y="325" width="0.0810%" height="15" fill="rgb(213,70,51)" fg:x="530" fg:w="1"/><text x="43.1998%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (19 samples, 1.54%)</title><rect x="41.5721%" y="373" width="1.5397%" height="15" fill="rgb(229,144,18)" fg:x="513" fg:w="19"/><text x="41.8221%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (19 samples, 1.54%)</title><rect x="41.5721%" y="357" width="1.5397%" height="15" fill="rgb(254,60,26)" fg:x="513" fg:w="19"/><text x="41.8221%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="43.0308%" y="341" width="0.0810%" height="15" fill="rgb(243,127,51)" fg:x="531" fg:w="1"/><text x="43.2808%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.0308%" y="325" width="0.0810%" height="15" fill="rgb(221,51,25)" fg:x="531" fg:w="1"/><text x="43.2808%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.1118%" y="373" width="0.0810%" height="15" fill="rgb(205,42,7)" fg:x="532" fg:w="1"/><text x="43.3618%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.1118%" y="357" width="0.0810%" height="15" fill="rgb(236,177,48)" fg:x="532" fg:w="1"/><text x="43.3618%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 1.94%)</title><rect x="41.3290%" y="389" width="1.9449%" height="15" fill="rgb(226,79,31)" fg:x="510" fg:w="24"/><text x="41.5790%" y="399.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.1929%" y="373" width="0.0810%" height="15" fill="rgb(216,170,12)" fg:x="533" fg:w="1"/><text x="43.4429%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.1929%" y="357" width="0.0810%" height="15" fill="rgb(208,62,51)" fg:x="533" fg:w="1"/><text x="43.4429%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (25 samples, 2.03%)</title><rect x="41.3290%" y="405" width="2.0259%" height="15" fill="rgb(254,129,9)" fg:x="510" fg:w="25"/><text x="41.5790%" y="415.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="43.2739%" y="389" width="0.0810%" height="15" fill="rgb(243,209,31)" fg:x="534" fg:w="1"/><text x="43.5239%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.2739%" y="373" width="0.0810%" height="15" fill="rgb(213,159,23)" fg:x="534" fg:w="1"/><text x="43.5239%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (27 samples, 2.19%)</title><rect x="41.2480%" y="421" width="2.1880%" height="15" fill="rgb(249,77,39)" fg:x="509" fg:w="27"/><text x="41.4980%" y="431.50">&lt;..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="43.3549%" y="405" width="0.0810%" height="15" fill="rgb(230,13,33)" fg:x="535" fg:w="1"/><text x="43.6049%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="43.3549%" y="389" width="0.0810%" height="15" fill="rgb(215,215,7)" fg:x="535" fg:w="1"/><text x="43.6049%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="43.3549%" y="373" width="0.0810%" height="15" fill="rgb(222,92,25)" fg:x="535" fg:w="1"/><text x="43.6049%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="43.3549%" y="357" width="0.0810%" height="15" fill="rgb(215,173,22)" fg:x="535" fg:w="1"/><text x="43.6049%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="43.3549%" y="341" width="0.0810%" height="15" fill="rgb(247,205,52)" fg:x="535" fg:w="1"/><text x="43.6049%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.3549%" y="325" width="0.0810%" height="15" fill="rgb(240,210,37)" fg:x="535" fg:w="1"/><text x="43.6049%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.3549%" y="309" width="0.0810%" height="15" fill="rgb(224,13,10)" fg:x="535" fg:w="1"/><text x="43.6049%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="43.4360%" y="421" width="0.3241%" height="15" fill="rgb(209,48,33)" fg:x="536" fg:w="4"/><text x="43.6860%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="43.5170%" y="405" width="0.2431%" height="15" fill="rgb(228,219,23)" fg:x="537" fg:w="3"/><text x="43.7670%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (35 samples, 2.84%)</title><rect x="41.0049%" y="437" width="2.8363%" height="15" fill="rgb(239,46,49)" fg:x="506" fg:w="35"/><text x="41.2549%" y="447.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.7601%" y="421" width="0.0810%" height="15" fill="rgb(206,172,51)" fg:x="540" fg:w="1"/><text x="44.0101%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.7601%" y="405" width="0.0810%" height="15" fill="rgb(213,212,35)" fg:x="540" fg:w="1"/><text x="44.0101%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (40 samples, 3.24%)</title><rect x="41.0049%" y="453" width="3.2415%" height="15" fill="rgb(252,40,27)" fg:x="506" fg:w="40"/><text x="41.2549%" y="463.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.41%)</title><rect x="43.8412%" y="437" width="0.4052%" height="15" fill="rgb(212,33,41)" fg:x="541" fg:w="5"/><text x="44.0912%" y="447.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="44.0032%" y="421" width="0.2431%" height="15" fill="rgb(232,160,27)" fg:x="543" fg:w="3"/><text x="44.2532%" y="431.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (45 samples, 3.65%)</title><rect x="40.6807%" y="469" width="3.6467%" height="15" fill="rgb(244,160,20)" fg:x="502" fg:w="45"/><text x="40.9307%" y="479.50">&lt;rpc..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="44.2464%" y="453" width="0.0810%" height="15" fill="rgb(205,66,20)" fg:x="546" fg:w="1"/><text x="44.4964%" y="463.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::try_initialize (1 samples, 0.08%)</title><rect x="44.2464%" y="437" width="0.0810%" height="15" fill="rgb(236,158,6)" fg:x="546" fg:w="1"/><text x="44.4964%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="44.3274%" y="469" width="0.1621%" height="15" fill="rgb(232,25,36)" fg:x="547" fg:w="2"/><text x="44.5774%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.4084%" y="453" width="0.0810%" height="15" fill="rgb(220,153,35)" fg:x="548" fg:w="1"/><text x="44.6584%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (53 samples, 4.29%)</title><rect x="40.5186%" y="485" width="4.2950%" height="15" fill="rgb(216,5,8)" fg:x="500" fg:w="53"/><text x="40.7686%" y="495.50">&lt;core..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="44.4895%" y="469" width="0.3241%" height="15" fill="rgb(240,97,3)" fg:x="549" fg:w="4"/><text x="44.7395%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="44.5705%" y="453" width="0.2431%" height="15" fill="rgb(220,99,26)" fg:x="550" fg:w="3"/><text x="44.8205%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="44.7326%" y="437" width="0.0810%" height="15" fill="rgb(237,96,2)" fg:x="552" fg:w="1"/><text x="44.9826%" y="447.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (58 samples, 4.70%)</title><rect x="40.4376%" y="517" width="4.7002%" height="15" fill="rgb(217,197,47)" fg:x="499" fg:w="58"/><text x="40.6876%" y="527.50">&lt;rpc_..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (57 samples, 4.62%)</title><rect x="40.5186%" y="501" width="4.6191%" height="15" fill="rgb(252,133,54)" fg:x="500" fg:w="57"/><text x="40.7686%" y="511.50">&lt;std:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="44.8136%" y="485" width="0.3241%" height="15" fill="rgb(233,37,30)" fg:x="553" fg:w="4"/><text x="45.0636%" y="495.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="44.8136%" y="469" width="0.3241%" height="15" fill="rgb(239,182,12)" fg:x="553" fg:w="4"/><text x="45.0636%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.1378%" y="517" width="0.0810%" height="15" fill="rgb(245,83,39)" fg:x="557" fg:w="1"/><text x="45.3878%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.1378%" y="501" width="0.0810%" height="15" fill="rgb(222,109,36)" fg:x="557" fg:w="1"/><text x="45.3878%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="45.3809%" y="501" width="0.2431%" height="15" fill="rgb(237,95,44)" fg:x="560" fg:w="3"/><text x="45.6309%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="45.4619%" y="485" width="0.1621%" height="15" fill="rgb(216,36,54)" fg:x="561" fg:w="2"/><text x="45.7119%" y="495.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (69 samples, 5.59%)</title><rect x="40.1945%" y="565" width="5.5916%" height="15" fill="rgb(236,164,3)" fg:x="496" fg:w="69"/><text x="40.4445%" y="575.50">&lt;rpc_pr..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (69 samples, 5.59%)</title><rect x="40.1945%" y="549" width="5.5916%" height="15" fill="rgb(223,15,21)" fg:x="496" fg:w="69"/><text x="40.4445%" y="559.50">&lt;std::c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 5.51%)</title><rect x="40.2755%" y="533" width="5.5105%" height="15" fill="rgb(239,191,12)" fg:x="497" fg:w="68"/><text x="40.5255%" y="543.50">&lt;core::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.57%)</title><rect x="45.2188%" y="517" width="0.5673%" height="15" fill="rgb(231,191,37)" fg:x="558" fg:w="7"/><text x="45.4688%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.6240%" y="501" width="0.1621%" height="15" fill="rgb(209,155,36)" fg:x="563" fg:w="2"/><text x="45.8740%" y="511.50"></text></g><g><title>__libc_malloc (5 samples, 0.41%)</title><rect x="46.1912%" y="517" width="0.4052%" height="15" fill="rgb(216,222,49)" fg:x="570" fg:w="5"/><text x="46.4412%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="46.5964%" y="517" width="0.3241%" height="15" fill="rgb(218,181,2)" fg:x="575" fg:w="4"/><text x="46.8464%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.7585%" y="501" width="0.1621%" height="15" fill="rgb(239,125,9)" fg:x="577" fg:w="2"/><text x="47.0085%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="46.8395%" y="485" width="0.0810%" height="15" fill="rgb(233,103,7)" fg:x="578" fg:w="1"/><text x="47.0895%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="46.9206%" y="517" width="0.3241%" height="15" fill="rgb(209,223,5)" fg:x="579" fg:w="4"/><text x="47.1706%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.1637%" y="501" width="0.0810%" height="15" fill="rgb(234,71,27)" fg:x="582" fg:w="1"/><text x="47.4137%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.1637%" y="485" width="0.0810%" height="15" fill="rgb(251,202,16)" fg:x="582" fg:w="1"/><text x="47.4137%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="47.2447%" y="517" width="0.0810%" height="15" fill="rgb(231,180,0)" fg:x="583" fg:w="1"/><text x="47.4947%" y="527.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="47.4068%" y="485" width="0.2431%" height="15" fill="rgb(223,58,28)" fg:x="585" fg:w="3"/><text x="47.6568%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (6 samples, 0.49%)</title><rect x="47.3258%" y="517" width="0.4862%" height="15" fill="rgb(250,34,24)" fg:x="584" fg:w="6"/><text x="47.5758%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.49%)</title><rect x="47.3258%" y="501" width="0.4862%" height="15" fill="rgb(235,24,16)" fg:x="584" fg:w="6"/><text x="47.5758%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.6499%" y="485" width="0.1621%" height="15" fill="rgb(219,28,33)" fg:x="588" fg:w="2"/><text x="47.8999%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.7310%" y="469" width="0.0810%" height="15" fill="rgb(228,150,43)" fg:x="589" fg:w="1"/><text x="47.9810%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="47.7310%" y="453" width="0.0810%" height="15" fill="rgb(221,228,36)" fg:x="589" fg:w="1"/><text x="47.9810%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="47.7310%" y="437" width="0.0810%" height="15" fill="rgb(232,116,17)" fg:x="589" fg:w="1"/><text x="47.9810%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="48.1361%" y="469" width="0.2431%" height="15" fill="rgb(220,110,51)" fg:x="594" fg:w="3"/><text x="48.3861%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.2982%" y="453" width="0.0810%" height="15" fill="rgb(207,26,25)" fg:x="596" fg:w="1"/><text x="48.5482%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.2982%" y="437" width="0.0810%" height="15" fill="rgb(223,58,19)" fg:x="596" fg:w="1"/><text x="48.5482%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.3793%" y="437" width="0.0810%" height="15" fill="rgb(234,125,39)" fg:x="597" fg:w="1"/><text x="48.6293%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="48.4603%" y="437" width="0.2431%" height="15" fill="rgb(241,48,36)" fg:x="598" fg:w="3"/><text x="48.7103%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="48.4603%" y="421" width="0.2431%" height="15" fill="rgb(217,148,51)" fg:x="598" fg:w="3"/><text x="48.7103%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.6224%" y="405" width="0.0810%" height="15" fill="rgb(247,17,25)" fg:x="600" fg:w="1"/><text x="48.8724%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.41%)</title><rect x="48.3793%" y="469" width="0.4052%" height="15" fill="rgb(219,89,38)" fg:x="597" fg:w="5"/><text x="48.6293%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="48.3793%" y="453" width="0.4052%" height="15" fill="rgb(220,145,2)" fg:x="597" fg:w="5"/><text x="48.6293%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.7034%" y="437" width="0.0810%" height="15" fill="rgb(244,66,47)" fg:x="601" fg:w="1"/><text x="48.9534%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="48.7844%" y="453" width="0.0810%" height="15" fill="rgb(226,182,5)" fg:x="602" fg:w="1"/><text x="49.0344%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="48.8655%" y="453" width="0.0810%" height="15" fill="rgb(211,98,20)" fg:x="603" fg:w="1"/><text x="49.1155%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.0276%" y="405" width="0.1621%" height="15" fill="rgb(217,103,52)" fg:x="605" fg:w="2"/><text x="49.2776%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.0276%" y="389" width="0.1621%" height="15" fill="rgb(208,125,52)" fg:x="605" fg:w="2"/><text x="49.2776%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.1086%" y="373" width="0.0810%" height="15" fill="rgb(244,70,13)" fg:x="606" fg:w="1"/><text x="49.3586%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="49.1896%" y="373" width="0.2431%" height="15" fill="rgb(253,124,3)" fg:x="607" fg:w="3"/><text x="49.4396%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="49.2707%" y="357" width="0.1621%" height="15" fill="rgb(222,145,32)" fg:x="608" fg:w="2"/><text x="49.5207%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.3517%" y="341" width="0.0810%" height="15" fill="rgb(232,183,47)" fg:x="609" fg:w="1"/><text x="49.6017%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="49.4327%" y="357" width="0.0810%" height="15" fill="rgb(246,226,4)" fg:x="610" fg:w="1"/><text x="49.6827%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.5138%" y="341" width="0.0810%" height="15" fill="rgb(228,185,46)" fg:x="611" fg:w="1"/><text x="49.7638%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.5138%" y="325" width="0.0810%" height="15" fill="rgb(213,196,4)" fg:x="611" fg:w="1"/><text x="49.7638%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.5138%" y="309" width="0.0810%" height="15" fill="rgb(212,2,45)" fg:x="611" fg:w="1"/><text x="49.7638%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="49.5138%" y="357" width="0.1621%" height="15" fill="rgb(217,145,50)" fg:x="611" fg:w="2"/><text x="49.7638%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="49.5948%" y="341" width="0.0810%" height="15" fill="rgb(242,10,46)" fg:x="612" fg:w="1"/><text x="49.8448%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="49.5948%" y="325" width="0.0810%" height="15" fill="rgb(252,91,48)" fg:x="612" fg:w="1"/><text x="49.8448%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="48.9465%" y="421" width="0.8104%" height="15" fill="rgb(216,72,13)" fg:x="604" fg:w="10"/><text x="49.1965%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="49.1896%" y="405" width="0.5673%" height="15" fill="rgb(219,6,37)" fg:x="607" fg:w="7"/><text x="49.4396%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="49.1896%" y="389" width="0.5673%" height="15" fill="rgb(236,185,40)" fg:x="607" fg:w="7"/><text x="49.4396%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="49.4327%" y="373" width="0.3241%" height="15" fill="rgb(208,81,48)" fg:x="610" fg:w="4"/><text x="49.6827%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.6759%" y="357" width="0.0810%" height="15" fill="rgb(211,42,33)" fg:x="613" fg:w="1"/><text x="49.9259%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.97%)</title><rect x="48.9465%" y="453" width="0.9724%" height="15" fill="rgb(211,90,39)" fg:x="604" fg:w="12"/><text x="49.1965%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.97%)</title><rect x="48.9465%" y="437" width="0.9724%" height="15" fill="rgb(218,136,12)" fg:x="604" fg:w="12"/><text x="49.1965%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="49.7569%" y="421" width="0.1621%" height="15" fill="rgb(234,12,32)" fg:x="614" fg:w="2"/><text x="50.0069%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (26 samples, 2.11%)</title><rect x="48.0551%" y="485" width="2.1070%" height="15" fill="rgb(221,164,18)" fg:x="593" fg:w="26"/><text x="48.3051%" y="495.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 1.38%)</title><rect x="48.7844%" y="469" width="1.3776%" height="15" fill="rgb(239,135,14)" fg:x="602" fg:w="17"/><text x="49.0344%" y="479.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="49.9190%" y="453" width="0.2431%" height="15" fill="rgb(226,198,47)" fg:x="616" fg:w="3"/><text x="50.1690%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (28 samples, 2.27%)</title><rect x="48.0551%" y="501" width="2.2690%" height="15" fill="rgb(244,121,47)" fg:x="593" fg:w="28"/><text x="48.3051%" y="511.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="50.1621%" y="485" width="0.1621%" height="15" fill="rgb(226,21,48)" fg:x="619" fg:w="2"/><text x="50.4121%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.2431%" y="469" width="0.0810%" height="15" fill="rgb(215,178,47)" fg:x="620" fg:w="1"/><text x="50.4931%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.3241%" y="501" width="0.0810%" height="15" fill="rgb(206,212,19)" fg:x="621" fg:w="1"/><text x="50.5741%" y="511.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (128 samples, 10.37%)</title><rect x="40.1945%" y="581" width="10.3728%" height="15" fill="rgb(230,104,34)" fg:x="496" fg:w="128"/><text x="40.4445%" y="591.50">&lt;rpc_proto::Jso..</text></g><g><title>kernel::model::EntityPtr::to_json_value (59 samples, 4.78%)</title><rect x="45.7861%" y="565" width="4.7812%" height="15" fill="rgb(210,96,51)" fg:x="565" fg:w="59"/><text x="46.0361%" y="575.50">kernel..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (59 samples, 4.78%)</title><rect x="45.7861%" y="549" width="4.7812%" height="15" fill="rgb(229,111,47)" fg:x="565" fg:w="59"/><text x="46.0361%" y="559.50">kernel..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (58 samples, 4.70%)</title><rect x="45.8671%" y="533" width="4.7002%" height="15" fill="rgb(218,174,45)" fg:x="566" fg:w="58"/><text x="46.1171%" y="543.50">&lt;serd..</text></g><g><title>serde::ser::Serializer::collect_map (34 samples, 2.76%)</title><rect x="47.8120%" y="517" width="2.7553%" height="15" fill="rgb(215,21,32)" fg:x="590" fg:w="34"/><text x="48.0620%" y="527.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="50.4052%" y="501" width="0.1621%" height="15" fill="rgb(235,72,21)" fg:x="622" fg:w="2"/><text x="50.6552%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.4862%" y="485" width="0.0810%" height="15" fill="rgb(250,113,30)" fg:x="623" fg:w="1"/><text x="50.7362%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="50.5673%" y="581" width="0.0810%" height="15" fill="rgb(244,136,34)" fg:x="624" fg:w="1"/><text x="50.8173%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.5673%" y="565" width="0.0810%" height="15" fill="rgb(213,226,47)" fg:x="624" fg:w="1"/><text x="50.8173%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (236 samples, 19.12%)</title><rect x="31.6045%" y="645" width="19.1248%" height="15" fill="rgb(224,136,40)" fg:x="390" fg:w="236"/><text x="31.8545%" y="655.50">core::iter::adapters::try_proc..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (139 samples, 11.26%)</title><rect x="39.4652%" y="629" width="11.2642%" height="15" fill="rgb(253,124,12)" fg:x="487" fg:w="139"/><text x="39.7152%" y="639.50">alloc::vec::in_pl..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (139 samples, 11.26%)</title><rect x="39.4652%" y="613" width="11.2642%" height="15" fill="rgb(210,67,8)" fg:x="487" fg:w="139"/><text x="39.7152%" y="623.50">&lt;core::iter::adap..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (138 samples, 11.18%)</title><rect x="39.5462%" y="597" width="11.1831%" height="15" fill="rgb(210,204,0)" fg:x="488" fg:w="138"/><text x="39.7962%" y="607.50">plugins_rpc::ses..</text></g><g><title>rpc_proto::&lt;impl core::convert::From&lt;&amp;rpc_proto::EntityKey&gt; for kernel::model::base::EntityKey&gt;::from (1 samples, 0.08%)</title><rect x="50.6483%" y="581" width="0.0810%" height="15" fill="rgb(217,179,22)" fg:x="625" fg:w="1"/><text x="50.8983%" y="591.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="50.6483%" y="565" width="0.0810%" height="15" fill="rgb(237,192,33)" fg:x="625" fg:w="1"/><text x="50.8983%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.6483%" y="549" width="0.0810%" height="15" fill="rgb(211,104,28)" fg:x="625" fg:w="1"/><text x="50.8983%" y="559.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (255 samples, 20.66%)</title><rect x="30.1459%" y="661" width="20.6645%" height="15" fill="rgb(214,75,30)" fg:x="372" fg:w="255"/><text x="30.3959%" y="671.50">&lt;plugins_rpc::sessions::SessionSe..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.7293%" y="645" width="0.0810%" height="15" fill="rgb(220,227,12)" fg:x="626" fg:w="1"/><text x="50.9793%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.7293%" y="629" width="0.0810%" height="15" fill="rgb(233,134,28)" fg:x="626" fg:w="1"/><text x="50.9793%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.8104%" y="661" width="0.0810%" height="15" fill="rgb(215,146,24)" fg:x="627" fg:w="1"/><text x="51.0604%" y="671.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (304 samples, 24.64%)</title><rect x="26.3371%" y="709" width="24.6353%" height="15" fill="rgb(248,227,20)" fg:x="325" fg:w="304"/><text x="26.5871%" y="719.50">kernel::plugins::SessionPlugins::have_s..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (304 samples, 24.64%)</title><rect x="26.3371%" y="693" width="24.6353%" height="15" fill="rgb(250,44,42)" fg:x="325" fg:w="304"/><text x="26.5871%" y="703.50">&lt;plugins_dynlib::DynamicPlugin as kerne..</text></g><g><title>plugins_rpc::querying::have_surroundings (259 samples, 20.99%)</title><rect x="29.9838%" y="677" width="20.9887%" height="15" fill="rgb(219,5,35)" fg:x="370" fg:w="259"/><text x="30.2338%" y="687.50">plugins_rpc::querying::have_surro..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="50.8914%" y="661" width="0.0810%" height="15" fill="rgb(241,132,32)" fg:x="628" fg:w="1"/><text x="51.1414%" y="671.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::base::EntityKey&gt;::into (1 samples, 0.08%)</title><rect x="50.8914%" y="645" width="0.0810%" height="15" fill="rgb(234,212,51)" fg:x="628" fg:w="1"/><text x="51.1414%" y="655.50"></text></g><g><title>kernel::model::base::&lt;impl core::convert::From&lt;kernel::model::base::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="50.8914%" y="629" width="0.0810%" height="15" fill="rgb(242,173,29)" fg:x="628" fg:w="1"/><text x="51.1414%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.8914%" y="613" width="0.0810%" height="15" fill="rgb(212,159,2)" fg:x="628" fg:w="1"/><text x="51.1414%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.9724%" y="661" width="0.0810%" height="15" fill="rgb(238,165,31)" fg:x="629" fg:w="1"/><text x="51.2224%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.49%)</title><rect x="51.2156%" y="517" width="0.4862%" height="15" fill="rgb(241,57,36)" fg:x="632" fg:w="6"/><text x="51.4656%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.49%)</title><rect x="51.2156%" y="501" width="0.4862%" height="15" fill="rgb(249,7,4)" fg:x="632" fg:w="6"/><text x="51.4656%" y="511.50"></text></g><g><title>realloc (6 samples, 0.49%)</title><rect x="51.2156%" y="485" width="0.4862%" height="15" fill="rgb(250,137,44)" fg:x="632" fg:w="6"/><text x="51.4656%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="51.7018%" y="517" width="0.0810%" height="15" fill="rgb(244,185,1)" fg:x="638" fg:w="1"/><text x="51.9518%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.7018%" y="501" width="0.0810%" height="15" fill="rgb(216,5,53)" fg:x="638" fg:w="1"/><text x="51.9518%" y="511.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.8639%" y="469" width="0.0810%" height="15" fill="rgb(234,89,21)" fg:x="640" fg:w="1"/><text x="52.1139%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.8639%" y="453" width="0.0810%" height="15" fill="rgb(250,81,43)" fg:x="640" fg:w="1"/><text x="52.1139%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.8639%" y="437" width="0.0810%" height="15" fill="rgb(243,132,11)" fg:x="640" fg:w="1"/><text x="52.1139%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.8639%" y="421" width="0.0810%" height="15" fill="rgb(253,159,28)" fg:x="640" fg:w="1"/><text x="52.1139%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.8639%" y="405" width="0.0810%" height="15" fill="rgb(237,167,34)" fg:x="640" fg:w="1"/><text x="52.1139%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.8639%" y="389" width="0.0810%" height="15" fill="rgb(237,16,50)" fg:x="640" fg:w="1"/><text x="52.1139%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.8639%" y="373" width="0.0810%" height="15" fill="rgb(247,125,2)" fg:x="640" fg:w="1"/><text x="52.1139%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.8639%" y="357" width="0.0810%" height="15" fill="rgb(254,35,3)" fg:x="640" fg:w="1"/><text x="52.1139%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.8639%" y="341" width="0.0810%" height="15" fill="rgb(237,209,21)" fg:x="640" fg:w="1"/><text x="52.1139%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.8639%" y="325" width="0.0810%" height="15" fill="rgb(224,122,20)" fg:x="640" fg:w="1"/><text x="52.1139%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.8639%" y="309" width="0.0810%" height="15" fill="rgb(224,11,46)" fg:x="640" fg:w="1"/><text x="52.1139%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.8639%" y="293" width="0.0810%" height="15" fill="rgb(248,21,33)" fg:x="640" fg:w="1"/><text x="52.1139%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.8639%" y="277" width="0.0810%" height="15" fill="rgb(222,144,7)" fg:x="640" fg:w="1"/><text x="52.1139%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="51.9449%" y="469" width="0.0810%" height="15" fill="rgb(205,141,37)" fg:x="641" fg:w="1"/><text x="52.1949%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="51.9449%" y="453" width="0.0810%" height="15" fill="rgb(237,130,8)" fg:x="641" fg:w="1"/><text x="52.1949%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="51.9449%" y="437" width="0.0810%" height="15" fill="rgb(209,179,39)" fg:x="641" fg:w="1"/><text x="52.1949%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="51.9449%" y="421" width="0.0810%" height="15" fill="rgb(207,52,17)" fg:x="641" fg:w="1"/><text x="52.1949%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="51.9449%" y="405" width="0.0810%" height="15" fill="rgb(253,158,17)" fg:x="641" fg:w="1"/><text x="52.1949%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="51.9449%" y="389" width="0.0810%" height="15" fill="rgb(208,19,53)" fg:x="641" fg:w="1"/><text x="52.1949%" y="399.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="51.9449%" y="373" width="0.0810%" height="15" fill="rgb(233,152,13)" fg:x="641" fg:w="1"/><text x="52.1949%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="52.0259%" y="469" width="0.0810%" height="15" fill="rgb(231,84,1)" fg:x="642" fg:w="1"/><text x="52.2759%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="52.0259%" y="453" width="0.0810%" height="15" fill="rgb(229,142,48)" fg:x="642" fg:w="1"/><text x="52.2759%" y="463.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (14 samples, 1.13%)</title><rect x="51.1345%" y="533" width="1.1345%" height="15" fill="rgb(248,70,29)" fg:x="631" fg:w="14"/><text x="51.3845%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (6 samples, 0.49%)</title><rect x="51.7828%" y="517" width="0.4862%" height="15" fill="rgb(250,85,7)" fg:x="639" fg:w="6"/><text x="52.0328%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.49%)</title><rect x="51.7828%" y="501" width="0.4862%" height="15" fill="rgb(235,140,43)" fg:x="639" fg:w="6"/><text x="52.0328%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="51.7828%" y="485" width="0.4862%" height="15" fill="rgb(216,0,5)" fg:x="639" fg:w="6"/><text x="52.0328%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.1070%" y="469" width="0.1621%" height="15" fill="rgb(223,167,29)" fg:x="643" fg:w="2"/><text x="52.3570%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.1070%" y="453" width="0.1621%" height="15" fill="rgb(229,150,33)" fg:x="643" fg:w="2"/><text x="52.3570%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="52.1880%" y="437" width="0.0810%" height="15" fill="rgb(227,26,52)" fg:x="644" fg:w="1"/><text x="52.4380%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="52.1880%" y="421" width="0.0810%" height="15" fill="rgb(250,60,52)" fg:x="644" fg:w="1"/><text x="52.4380%" y="431.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="52.1880%" y="405" width="0.0810%" height="15" fill="rgb(228,81,46)" fg:x="644" fg:w="1"/><text x="52.4380%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="52.2690%" y="517" width="0.0810%" height="15" fill="rgb(225,218,31)" fg:x="645" fg:w="1"/><text x="52.5190%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="52.2690%" y="501" width="0.0810%" height="15" fill="rgb(230,35,16)" fg:x="645" fg:w="1"/><text x="52.5190%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.3501%" y="501" width="0.0810%" height="15" fill="rgb(247,100,0)" fg:x="646" fg:w="1"/><text x="52.6001%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.3501%" y="485" width="0.0810%" height="15" fill="rgb(223,135,11)" fg:x="646" fg:w="1"/><text x="52.6001%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.3501%" y="469" width="0.0810%" height="15" fill="rgb(207,136,0)" fg:x="646" fg:w="1"/><text x="52.6001%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.3501%" y="453" width="0.0810%" height="15" fill="rgb(246,131,25)" fg:x="646" fg:w="1"/><text x="52.6001%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.3501%" y="437" width="0.0810%" height="15" fill="rgb(209,47,12)" fg:x="646" fg:w="1"/><text x="52.6001%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.3501%" y="421" width="0.0810%" height="15" fill="rgb(221,25,16)" fg:x="646" fg:w="1"/><text x="52.6001%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.3501%" y="405" width="0.0810%" height="15" fill="rgb(223,164,33)" fg:x="646" fg:w="1"/><text x="52.6001%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.3501%" y="389" width="0.0810%" height="15" fill="rgb(220,26,23)" fg:x="646" fg:w="1"/><text x="52.6001%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.3501%" y="373" width="0.0810%" height="15" fill="rgb(231,224,1)" fg:x="646" fg:w="1"/><text x="52.6001%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="52.4311%" y="453" width="0.0810%" height="15" fill="rgb(229,221,24)" fg:x="647" fg:w="1"/><text x="52.6811%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.4311%" y="437" width="0.0810%" height="15" fill="rgb(213,34,10)" fg:x="647" fg:w="1"/><text x="52.6811%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="52.4311%" y="421" width="0.0810%" height="15" fill="rgb(215,33,11)" fg:x="647" fg:w="1"/><text x="52.6811%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.5122%" y="357" width="0.0810%" height="15" fill="rgb(216,20,41)" fg:x="648" fg:w="1"/><text x="52.7622%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.5122%" y="341" width="0.0810%" height="15" fill="rgb(228,43,31)" fg:x="648" fg:w="1"/><text x="52.7622%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.5932%" y="277" width="0.0810%" height="15" fill="rgb(227,83,26)" fg:x="649" fg:w="1"/><text x="52.8432%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.5932%" y="261" width="0.0810%" height="15" fill="rgb(217,168,19)" fg:x="649" fg:w="1"/><text x="52.8432%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.5932%" y="245" width="0.0810%" height="15" fill="rgb(231,34,33)" fg:x="649" fg:w="1"/><text x="52.8432%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.5932%" y="229" width="0.0810%" height="15" fill="rgb(230,120,51)" fg:x="649" fg:w="1"/><text x="52.8432%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.5932%" y="213" width="0.0810%" height="15" fill="rgb(215,138,27)" fg:x="649" fg:w="1"/><text x="52.8432%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.5932%" y="197" width="0.0810%" height="15" fill="rgb(246,80,47)" fg:x="649" fg:w="1"/><text x="52.8432%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.5932%" y="181" width="0.0810%" height="15" fill="rgb(215,57,53)" fg:x="649" fg:w="1"/><text x="52.8432%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.5932%" y="357" width="0.1621%" height="15" fill="rgb(229,137,5)" fg:x="649" fg:w="2"/><text x="52.8432%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.5932%" y="341" width="0.1621%" height="15" fill="rgb(210,86,2)" fg:x="649" fg:w="2"/><text x="52.8432%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="52.5932%" y="325" width="0.1621%" height="15" fill="rgb(231,226,51)" fg:x="649" fg:w="2"/><text x="52.8432%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="52.5932%" y="309" width="0.1621%" height="15" fill="rgb(216,62,29)" fg:x="649" fg:w="2"/><text x="52.8432%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="52.5932%" y="293" width="0.1621%" height="15" fill="rgb(248,202,3)" fg:x="649" fg:w="2"/><text x="52.8432%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="52.6742%" y="277" width="0.0810%" height="15" fill="rgb(225,181,7)" fg:x="650" fg:w="1"/><text x="52.9242%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="52.6742%" y="261" width="0.0810%" height="15" fill="rgb(247,170,54)" fg:x="650" fg:w="1"/><text x="52.9242%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="52.5122%" y="421" width="0.3241%" height="15" fill="rgb(236,204,33)" fg:x="648" fg:w="4"/><text x="52.7622%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="52.5122%" y="405" width="0.3241%" height="15" fill="rgb(216,45,30)" fg:x="648" fg:w="4"/><text x="52.7622%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="52.5122%" y="389" width="0.3241%" height="15" fill="rgb(213,203,16)" fg:x="648" fg:w="4"/><text x="52.7622%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="52.5122%" y="373" width="0.3241%" height="15" fill="rgb(215,46,16)" fg:x="648" fg:w="4"/><text x="52.7622%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.7553%" y="357" width="0.0810%" height="15" fill="rgb(217,162,46)" fg:x="651" fg:w="1"/><text x="53.0053%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::props::Properties&gt; (1 samples, 0.08%)</title><rect x="52.8363%" y="421" width="0.0810%" height="15" fill="rgb(224,189,20)" fg:x="652" fg:w="1"/><text x="53.0863%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.9984%" y="325" width="0.0810%" height="15" fill="rgb(232,35,51)" fg:x="654" fg:w="1"/><text x="53.2484%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.9984%" y="309" width="0.0810%" height="15" fill="rgb(243,221,46)" fg:x="654" fg:w="1"/><text x="53.2484%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="53.0794%" y="293" width="0.0810%" height="15" fill="rgb(248,16,16)" fg:x="655" fg:w="1"/><text x="53.3294%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.0794%" y="277" width="0.0810%" height="15" fill="rgb(220,168,13)" fg:x="655" fg:w="1"/><text x="53.3294%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (27 samples, 2.19%)</title><rect x="51.0535%" y="565" width="2.1880%" height="15" fill="rgb(243,102,39)" fg:x="630" fg:w="27"/><text x="51.3035%" y="575.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (26 samples, 2.11%)</title><rect x="51.1345%" y="549" width="2.1070%" height="15" fill="rgb(245,82,32)" fg:x="631" fg:w="26"/><text x="51.3845%" y="559.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (12 samples, 0.97%)</title><rect x="52.2690%" y="533" width="0.9724%" height="15" fill="rgb(230,164,19)" fg:x="645" fg:w="12"/><text x="52.5190%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (11 samples, 0.89%)</title><rect x="52.3501%" y="517" width="0.8914%" height="15" fill="rgb(221,9,41)" fg:x="646" fg:w="11"/><text x="52.6001%" y="527.50"></text></g><g><title>plugins_core::finding::matches_description (10 samples, 0.81%)</title><rect x="52.4311%" y="501" width="0.8104%" height="15" fill="rgb(216,93,0)" fg:x="647" fg:w="10"/><text x="52.6811%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::name (10 samples, 0.81%)</title><rect x="52.4311%" y="485" width="0.8104%" height="15" fill="rgb(235,113,9)" fg:x="647" fg:w="10"/><text x="52.6811%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.81%)</title><rect x="52.4311%" y="469" width="0.8104%" height="15" fill="rgb(209,224,10)" fg:x="647" fg:w="10"/><text x="52.6811%" y="479.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.73%)</title><rect x="52.5122%" y="453" width="0.7293%" height="15" fill="rgb(226,54,34)" fg:x="648" fg:w="9"/><text x="52.7622%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.73%)</title><rect x="52.5122%" y="437" width="0.7293%" height="15" fill="rgb(222,60,8)" fg:x="648" fg:w="9"/><text x="52.7622%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="52.9173%" y="421" width="0.3241%" height="15" fill="rgb(248,228,41)" fg:x="653" fg:w="4"/><text x="53.1673%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="52.9173%" y="405" width="0.3241%" height="15" fill="rgb(226,31,32)" fg:x="653" fg:w="4"/><text x="53.1673%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="52.9173%" y="389" width="0.3241%" height="15" fill="rgb(242,132,49)" fg:x="653" fg:w="4"/><text x="53.1673%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="52.9173%" y="373" width="0.3241%" height="15" fill="rgb(224,194,19)" fg:x="653" fg:w="4"/><text x="53.1673%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="52.9173%" y="357" width="0.3241%" height="15" fill="rgb(232,200,51)" fg:x="653" fg:w="4"/><text x="53.1673%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="52.9173%" y="341" width="0.3241%" height="15" fill="rgb(235,60,46)" fg:x="653" fg:w="4"/><text x="53.1673%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="53.0794%" y="325" width="0.1621%" height="15" fill="rgb(240,109,52)" fg:x="655" fg:w="2"/><text x="53.3294%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="53.0794%" y="309" width="0.1621%" height="15" fill="rgb(215,78,37)" fg:x="655" fg:w="2"/><text x="53.3294%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.1605%" y="293" width="0.0810%" height="15" fill="rgb(225,141,7)" fg:x="656" fg:w="1"/><text x="53.4105%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.1605%" y="277" width="0.0810%" height="15" fill="rgb(216,102,54)" fg:x="656" fg:w="1"/><text x="53.4105%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="53.2415%" y="565" width="0.0810%" height="15" fill="rgb(238,143,13)" fg:x="657" fg:w="1"/><text x="53.4915%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="53.2415%" y="549" width="0.0810%" height="15" fill="rgb(219,45,51)" fg:x="657" fg:w="1"/><text x="53.4915%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.4036%" y="533" width="0.0810%" height="15" fill="rgb(242,105,46)" fg:x="659" fg:w="1"/><text x="53.6536%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.4846%" y="501" width="0.0810%" height="15" fill="rgb(206,154,49)" fg:x="660" fg:w="1"/><text x="53.7346%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.4846%" y="485" width="0.0810%" height="15" fill="rgb(239,215,4)" fg:x="660" fg:w="1"/><text x="53.7346%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.4846%" y="469" width="0.0810%" height="15" fill="rgb(238,82,17)" fg:x="660" fg:w="1"/><text x="53.7346%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.4846%" y="453" width="0.0810%" height="15" fill="rgb(242,49,30)" fg:x="660" fg:w="1"/><text x="53.7346%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="53.4036%" y="549" width="0.2431%" height="15" fill="rgb(248,5,16)" fg:x="659" fg:w="3"/><text x="53.6536%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="53.4846%" y="533" width="0.1621%" height="15" fill="rgb(237,138,32)" fg:x="660" fg:w="2"/><text x="53.7346%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="53.4846%" y="517" width="0.1621%" height="15" fill="rgb(235,79,45)" fg:x="660" fg:w="2"/><text x="53.7346%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="53.5656%" y="501" width="0.0810%" height="15" fill="rgb(213,105,25)" fg:x="661" fg:w="1"/><text x="53.8156%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="53.5656%" y="485" width="0.0810%" height="15" fill="rgb(251,131,7)" fg:x="661" fg:w="1"/><text x="53.8156%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.7277%" y="453" width="0.0810%" height="15" fill="rgb(211,155,7)" fg:x="663" fg:w="1"/><text x="53.9777%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.7277%" y="437" width="0.0810%" height="15" fill="rgb(243,70,15)" fg:x="663" fg:w="1"/><text x="53.9777%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.7277%" y="421" width="0.0810%" height="15" fill="rgb(215,171,2)" fg:x="663" fg:w="1"/><text x="53.9777%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.7277%" y="405" width="0.0810%" height="15" fill="rgb(244,121,35)" fg:x="663" fg:w="1"/><text x="53.9777%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.7277%" y="389" width="0.0810%" height="15" fill="rgb(249,147,17)" fg:x="663" fg:w="1"/><text x="53.9777%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.7277%" y="373" width="0.0810%" height="15" fill="rgb(241,193,52)" fg:x="663" fg:w="1"/><text x="53.9777%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.7277%" y="357" width="0.0810%" height="15" fill="rgb(217,159,39)" fg:x="663" fg:w="1"/><text x="53.9777%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.7277%" y="341" width="0.0810%" height="15" fill="rgb(248,110,0)" fg:x="663" fg:w="1"/><text x="53.9777%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.7277%" y="325" width="0.0810%" height="15" fill="rgb(233,227,0)" fg:x="663" fg:w="1"/><text x="53.9777%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.7277%" y="309" width="0.0810%" height="15" fill="rgb(252,55,2)" fg:x="663" fg:w="1"/><text x="53.9777%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.7277%" y="293" width="0.0810%" height="15" fill="rgb(224,194,24)" fg:x="663" fg:w="1"/><text x="53.9777%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.7277%" y="277" width="0.0810%" height="15" fill="rgb(247,5,33)" fg:x="663" fg:w="1"/><text x="53.9777%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7277%" y="261" width="0.0810%" height="15" fill="rgb(242,66,47)" fg:x="663" fg:w="1"/><text x="53.9777%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="53.6467%" y="501" width="0.3241%" height="15" fill="rgb(213,107,12)" fg:x="662" fg:w="4"/><text x="53.8967%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="53.6467%" y="485" width="0.3241%" height="15" fill="rgb(206,131,1)" fg:x="662" fg:w="4"/><text x="53.8967%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="53.6467%" y="469" width="0.3241%" height="15" fill="rgb(214,9,36)" fg:x="662" fg:w="4"/><text x="53.8967%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.8088%" y="453" width="0.1621%" height="15" fill="rgb(251,215,18)" fg:x="664" fg:w="2"/><text x="54.0588%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.8088%" y="437" width="0.1621%" height="15" fill="rgb(251,64,9)" fg:x="664" fg:w="2"/><text x="54.0588%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="53.8088%" y="421" width="0.1621%" height="15" fill="rgb(235,68,21)" fg:x="664" fg:w="2"/><text x="54.0588%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="53.8088%" y="405" width="0.1621%" height="15" fill="rgb(240,69,38)" fg:x="664" fg:w="2"/><text x="54.0588%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="53.8088%" y="389" width="0.1621%" height="15" fill="rgb(231,18,27)" fg:x="664" fg:w="2"/><text x="54.0588%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="53.8088%" y="373" width="0.1621%" height="15" fill="rgb(215,154,25)" fg:x="664" fg:w="2"/><text x="54.0588%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="53.8088%" y="357" width="0.1621%" height="15" fill="rgb(224,33,46)" fg:x="664" fg:w="2"/><text x="54.0588%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="53.8088%" y="341" width="0.1621%" height="15" fill="rgb(248,191,53)" fg:x="664" fg:w="2"/><text x="54.0588%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="53.8088%" y="325" width="0.1621%" height="15" fill="rgb(231,3,37)" fg:x="664" fg:w="2"/><text x="54.0588%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="53.8088%" y="309" width="0.1621%" height="15" fill="rgb(209,152,2)" fg:x="664" fg:w="2"/><text x="54.0588%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="53.8088%" y="293" width="0.1621%" height="15" fill="rgb(212,208,43)" fg:x="664" fg:w="2"/><text x="54.0588%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="53.8088%" y="277" width="0.1621%" height="15" fill="rgb(208,60,49)" fg:x="664" fg:w="2"/><text x="54.0588%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="53.9708%" y="501" width="0.0810%" height="15" fill="rgb(245,135,6)" fg:x="666" fg:w="1"/><text x="54.2208%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="53.9708%" y="485" width="0.0810%" height="15" fill="rgb(243,86,23)" fg:x="666" fg:w="1"/><text x="54.2208%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.9708%" y="469" width="0.0810%" height="15" fill="rgb(223,7,20)" fg:x="666" fg:w="1"/><text x="54.2208%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.0519%" y="405" width="0.0810%" height="15" fill="rgb(212,182,17)" fg:x="667" fg:w="1"/><text x="54.3019%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.0519%" y="389" width="0.0810%" height="15" fill="rgb(237,94,50)" fg:x="667" fg:w="1"/><text x="54.3019%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (11 samples, 0.89%)</title><rect x="53.3225%" y="565" width="0.8914%" height="15" fill="rgb(232,185,44)" fg:x="658" fg:w="11"/><text x="53.5725%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.57%)</title><rect x="53.6467%" y="549" width="0.5673%" height="15" fill="rgb(205,50,36)" fg:x="662" fg:w="7"/><text x="53.8967%" y="559.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.57%)</title><rect x="53.6467%" y="533" width="0.5673%" height="15" fill="rgb(252,32,32)" fg:x="662" fg:w="7"/><text x="53.8967%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.57%)</title><rect x="53.6467%" y="517" width="0.5673%" height="15" fill="rgb(241,123,33)" fg:x="662" fg:w="7"/><text x="53.8967%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.0519%" y="501" width="0.1621%" height="15" fill="rgb(212,140,16)" fg:x="667" fg:w="2"/><text x="54.3019%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.0519%" y="485" width="0.1621%" height="15" fill="rgb(247,132,5)" fg:x="667" fg:w="2"/><text x="54.3019%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.0519%" y="469" width="0.1621%" height="15" fill="rgb(209,137,38)" fg:x="667" fg:w="2"/><text x="54.3019%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.0519%" y="453" width="0.1621%" height="15" fill="rgb(248,32,42)" fg:x="667" fg:w="2"/><text x="54.3019%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="54.0519%" y="437" width="0.1621%" height="15" fill="rgb(216,188,40)" fg:x="667" fg:w="2"/><text x="54.3019%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.0519%" y="421" width="0.1621%" height="15" fill="rgb(209,127,53)" fg:x="667" fg:w="2"/><text x="54.3019%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.1329%" y="405" width="0.0810%" height="15" fill="rgb(254,162,9)" fg:x="668" fg:w="1"/><text x="54.3829%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.1329%" y="389" width="0.0810%" height="15" fill="rgb(219,183,10)" fg:x="668" fg:w="1"/><text x="54.3829%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.1329%" y="373" width="0.0810%" height="15" fill="rgb(217,192,21)" fg:x="668" fg:w="1"/><text x="54.3829%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.1329%" y="357" width="0.0810%" height="15" fill="rgb(251,89,27)" fg:x="668" fg:w="1"/><text x="54.3829%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="54.2139%" y="549" width="0.0810%" height="15" fill="rgb(253,55,28)" fg:x="669" fg:w="1"/><text x="54.4639%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="54.2139%" y="533" width="0.0810%" height="15" fill="rgb(216,159,8)" fg:x="669" fg:w="1"/><text x="54.4639%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="54.2950%" y="501" width="0.0810%" height="15" fill="rgb(231,228,44)" fg:x="670" fg:w="1"/><text x="54.5450%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.2950%" y="485" width="0.0810%" height="15" fill="rgb(247,34,48)" fg:x="670" fg:w="1"/><text x="54.5450%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="54.2950%" y="469" width="0.0810%" height="15" fill="rgb(247,222,18)" fg:x="670" fg:w="1"/><text x="54.5450%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="54.2950%" y="517" width="0.1621%" height="15" fill="rgb(227,49,4)" fg:x="670" fg:w="2"/><text x="54.5450%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="54.3760%" y="501" width="0.0810%" height="15" fill="rgb(219,189,53)" fg:x="671" fg:w="1"/><text x="54.6260%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="54.3760%" y="485" width="0.0810%" height="15" fill="rgb(241,160,53)" fg:x="671" fg:w="1"/><text x="54.6260%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.3760%" y="469" width="0.0810%" height="15" fill="rgb(227,115,4)" fg:x="671" fg:w="1"/><text x="54.6260%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3760%" y="453" width="0.0810%" height="15" fill="rgb(215,28,28)" fg:x="671" fg:w="1"/><text x="54.6260%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.3760%" y="437" width="0.0810%" height="15" fill="rgb(237,143,40)" fg:x="671" fg:w="1"/><text x="54.6260%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3760%" y="421" width="0.0810%" height="15" fill="rgb(205,107,24)" fg:x="671" fg:w="1"/><text x="54.6260%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="54.3760%" y="405" width="0.0810%" height="15" fill="rgb(209,112,35)" fg:x="671" fg:w="1"/><text x="54.6260%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3760%" y="389" width="0.0810%" height="15" fill="rgb(206,135,5)" fg:x="671" fg:w="1"/><text x="54.6260%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.4571%" y="469" width="0.0810%" height="15" fill="rgb(227,217,38)" fg:x="672" fg:w="1"/><text x="54.7071%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.4571%" y="453" width="0.0810%" height="15" fill="rgb(205,0,41)" fg:x="672" fg:w="1"/><text x="54.7071%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.4571%" y="437" width="0.0810%" height="15" fill="rgb(220,20,40)" fg:x="672" fg:w="1"/><text x="54.7071%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.4571%" y="421" width="0.0810%" height="15" fill="rgb(216,145,3)" fg:x="672" fg:w="1"/><text x="54.7071%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.41%)</title><rect x="54.2950%" y="549" width="0.4052%" height="15" fill="rgb(207,130,51)" fg:x="670" fg:w="5"/><text x="54.5450%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.41%)</title><rect x="54.2950%" y="533" width="0.4052%" height="15" fill="rgb(252,93,13)" fg:x="670" fg:w="5"/><text x="54.5450%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="54.4571%" y="517" width="0.2431%" height="15" fill="rgb(210,105,15)" fg:x="672" fg:w="3"/><text x="54.7071%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="54.4571%" y="501" width="0.2431%" height="15" fill="rgb(212,126,31)" fg:x="672" fg:w="3"/><text x="54.7071%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="54.4571%" y="485" width="0.2431%" height="15" fill="rgb(241,167,46)" fg:x="672" fg:w="3"/><text x="54.7071%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.5381%" y="469" width="0.1621%" height="15" fill="rgb(217,143,19)" fg:x="673" fg:w="2"/><text x="54.7881%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.5381%" y="453" width="0.1621%" height="15" fill="rgb(235,117,33)" fg:x="673" fg:w="2"/><text x="54.7881%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.5381%" y="437" width="0.1621%" height="15" fill="rgb(247,95,6)" fg:x="673" fg:w="2"/><text x="54.7881%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.5381%" y="421" width="0.1621%" height="15" fill="rgb(243,206,43)" fg:x="673" fg:w="2"/><text x="54.7881%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="54.5381%" y="405" width="0.1621%" height="15" fill="rgb(229,65,54)" fg:x="673" fg:w="2"/><text x="54.7881%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.5381%" y="389" width="0.1621%" height="15" fill="rgb(247,137,34)" fg:x="673" fg:w="2"/><text x="54.7881%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.5381%" y="373" width="0.1621%" height="15" fill="rgb(245,174,44)" fg:x="673" fg:w="2"/><text x="54.7881%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.5381%" y="357" width="0.1621%" height="15" fill="rgb(223,64,15)" fg:x="673" fg:w="2"/><text x="54.7881%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.5381%" y="341" width="0.1621%" height="15" fill="rgb(243,153,36)" fg:x="673" fg:w="2"/><text x="54.7881%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.5381%" y="325" width="0.1621%" height="15" fill="rgb(252,23,4)" fg:x="673" fg:w="2"/><text x="54.7881%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.6191%" y="309" width="0.0810%" height="15" fill="rgb(209,132,13)" fg:x="674" fg:w="1"/><text x="54.8691%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.6191%" y="293" width="0.0810%" height="15" fill="rgb(209,196,21)" fg:x="674" fg:w="1"/><text x="54.8691%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.7002%" y="517" width="0.0810%" height="15" fill="rgb(252,197,1)" fg:x="675" fg:w="1"/><text x="54.9502%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.7002%" y="501" width="0.0810%" height="15" fill="rgb(229,42,46)" fg:x="675" fg:w="1"/><text x="54.9502%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="54.7812%" y="517" width="0.0810%" height="15" fill="rgb(219,85,8)" fg:x="676" fg:w="1"/><text x="55.0312%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="54.7002%" y="549" width="0.3241%" height="15" fill="rgb(223,185,14)" fg:x="675" fg:w="4"/><text x="54.9502%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="54.7002%" y="533" width="0.3241%" height="15" fill="rgb(217,196,18)" fg:x="675" fg:w="4"/><text x="54.9502%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.8622%" y="517" width="0.1621%" height="15" fill="rgb(220,122,37)" fg:x="677" fg:w="2"/><text x="55.1122%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.8622%" y="501" width="0.1621%" height="15" fill="rgb(236,135,33)" fg:x="677" fg:w="2"/><text x="55.1122%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="54.9433%" y="485" width="0.0810%" height="15" fill="rgb(222,86,54)" fg:x="678" fg:w="1"/><text x="55.1933%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.9433%" y="469" width="0.0810%" height="15" fill="rgb(227,42,22)" fg:x="678" fg:w="1"/><text x="55.1933%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.1053%" y="517" width="0.0810%" height="15" fill="rgb(243,101,27)" fg:x="680" fg:w="1"/><text x="55.3553%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.1053%" y="501" width="0.0810%" height="15" fill="rgb(229,100,8)" fg:x="680" fg:w="1"/><text x="55.3553%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.1053%" y="485" width="0.0810%" height="15" fill="rgb(252,68,10)" fg:x="680" fg:w="1"/><text x="55.3553%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.1053%" y="469" width="0.0810%" height="15" fill="rgb(219,19,31)" fg:x="680" fg:w="1"/><text x="55.3553%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.1053%" y="453" width="0.0810%" height="15" fill="rgb(246,150,44)" fg:x="680" fg:w="1"/><text x="55.3553%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.1053%" y="437" width="0.0810%" height="15" fill="rgb(211,14,39)" fg:x="680" fg:w="1"/><text x="55.3553%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.1053%" y="421" width="0.0810%" height="15" fill="rgb(221,98,29)" fg:x="680" fg:w="1"/><text x="55.3553%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.1053%" y="405" width="0.0810%" height="15" fill="rgb(221,70,26)" fg:x="680" fg:w="1"/><text x="55.3553%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="55.1053%" y="389" width="0.0810%" height="15" fill="rgb(236,146,30)" fg:x="680" fg:w="1"/><text x="55.3553%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="55.1053%" y="373" width="0.0810%" height="15" fill="rgb(226,94,34)" fg:x="680" fg:w="1"/><text x="55.3553%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="55.1864%" y="517" width="0.0810%" height="15" fill="rgb(248,132,21)" fg:x="681" fg:w="1"/><text x="55.4364%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.2674%" y="485" width="0.1621%" height="15" fill="rgb(245,43,50)" fg:x="682" fg:w="2"/><text x="55.5174%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.3485%" y="469" width="0.0810%" height="15" fill="rgb(245,132,31)" fg:x="683" fg:w="1"/><text x="55.5985%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.3485%" y="453" width="0.0810%" height="15" fill="rgb(230,171,4)" fg:x="683" fg:w="1"/><text x="55.5985%" y="463.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (7 samples, 0.57%)</title><rect x="55.0243%" y="549" width="0.5673%" height="15" fill="rgb(235,6,45)" fg:x="679" fg:w="7"/><text x="55.2743%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.57%)</title><rect x="55.0243%" y="533" width="0.5673%" height="15" fill="rgb(220,80,28)" fg:x="679" fg:w="7"/><text x="55.2743%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.32%)</title><rect x="55.2674%" y="517" width="0.3241%" height="15" fill="rgb(242,171,9)" fg:x="682" fg:w="4"/><text x="55.5174%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="55.2674%" y="501" width="0.3241%" height="15" fill="rgb(214,135,29)" fg:x="682" fg:w="4"/><text x="55.5174%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="55.4295%" y="485" width="0.1621%" height="15" fill="rgb(221,229,16)" fg:x="684" fg:w="2"/><text x="55.6795%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="55.4295%" y="469" width="0.1621%" height="15" fill="rgb(253,59,46)" fg:x="684" fg:w="2"/><text x="55.6795%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="55.4295%" y="453" width="0.1621%" height="15" fill="rgb(250,147,20)" fg:x="684" fg:w="2"/><text x="55.6795%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.5105%" y="437" width="0.0810%" height="15" fill="rgb(236,64,48)" fg:x="685" fg:w="1"/><text x="55.7605%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="55.6726%" y="533" width="0.0810%" height="15" fill="rgb(240,37,42)" fg:x="687" fg:w="1"/><text x="55.9226%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="55.6726%" y="517" width="0.0810%" height="15" fill="rgb(220,41,50)" fg:x="687" fg:w="1"/><text x="55.9226%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="55.6726%" y="501" width="0.0810%" height="15" fill="rgb(216,51,14)" fg:x="687" fg:w="1"/><text x="55.9226%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="55.6726%" y="485" width="0.0810%" height="15" fill="rgb(215,83,10)" fg:x="687" fg:w="1"/><text x="55.9226%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="55.6726%" y="469" width="0.0810%" height="15" fill="rgb(206,144,17)" fg:x="687" fg:w="1"/><text x="55.9226%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="55.6726%" y="453" width="0.0810%" height="15" fill="rgb(219,196,37)" fg:x="687" fg:w="1"/><text x="55.9226%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.7536%" y="453" width="0.0810%" height="15" fill="rgb(226,135,26)" fg:x="688" fg:w="1"/><text x="56.0036%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.7536%" y="437" width="0.0810%" height="15" fill="rgb(237,195,40)" fg:x="688" fg:w="1"/><text x="56.0036%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.7536%" y="421" width="0.0810%" height="15" fill="rgb(228,182,42)" fg:x="688" fg:w="1"/><text x="56.0036%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.7536%" y="405" width="0.0810%" height="15" fill="rgb(224,135,50)" fg:x="688" fg:w="1"/><text x="56.0036%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.7536%" y="389" width="0.0810%" height="15" fill="rgb(236,215,34)" fg:x="688" fg:w="1"/><text x="56.0036%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.7536%" y="373" width="0.0810%" height="15" fill="rgb(244,213,27)" fg:x="688" fg:w="1"/><text x="56.0036%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.7536%" y="357" width="0.0810%" height="15" fill="rgb(233,37,53)" fg:x="688" fg:w="1"/><text x="56.0036%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.7536%" y="341" width="0.0810%" height="15" fill="rgb(222,132,14)" fg:x="688" fg:w="1"/><text x="56.0036%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.7536%" y="325" width="0.0810%" height="15" fill="rgb(219,202,29)" fg:x="688" fg:w="1"/><text x="56.0036%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.7536%" y="309" width="0.0810%" height="15" fill="rgb(226,157,39)" fg:x="688" fg:w="1"/><text x="56.0036%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.7536%" y="293" width="0.0810%" height="15" fill="rgb(235,213,2)" fg:x="688" fg:w="1"/><text x="56.0036%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.7536%" y="277" width="0.0810%" height="15" fill="rgb(250,121,2)" fg:x="688" fg:w="1"/><text x="56.0036%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.7536%" y="261" width="0.0810%" height="15" fill="rgb(206,192,33)" fg:x="688" fg:w="1"/><text x="56.0036%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.7536%" y="245" width="0.0810%" height="15" fill="rgb(240,161,6)" fg:x="688" fg:w="1"/><text x="56.0036%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.7536%" y="229" width="0.0810%" height="15" fill="rgb(246,53,30)" fg:x="688" fg:w="1"/><text x="56.0036%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.7536%" y="213" width="0.0810%" height="15" fill="rgb(219,123,43)" fg:x="688" fg:w="1"/><text x="56.0036%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.7536%" y="197" width="0.0810%" height="15" fill="rgb(236,53,49)" fg:x="688" fg:w="1"/><text x="56.0036%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.8347%" y="453" width="0.0810%" height="15" fill="rgb(241,156,1)" fg:x="689" fg:w="1"/><text x="56.0847%" y="463.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.41%)</title><rect x="55.5916%" y="549" width="0.4052%" height="15" fill="rgb(209,73,26)" fg:x="686" fg:w="5"/><text x="55.8416%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="55.7536%" y="533" width="0.2431%" height="15" fill="rgb(206,114,3)" fg:x="688" fg:w="3"/><text x="56.0036%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="55.7536%" y="517" width="0.2431%" height="15" fill="rgb(230,214,9)" fg:x="688" fg:w="3"/><text x="56.0036%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="55.7536%" y="501" width="0.2431%" height="15" fill="rgb(240,184,46)" fg:x="688" fg:w="3"/><text x="56.0036%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="55.7536%" y="485" width="0.2431%" height="15" fill="rgb(242,169,54)" fg:x="688" fg:w="3"/><text x="56.0036%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="55.7536%" y="469" width="0.2431%" height="15" fill="rgb(207,168,50)" fg:x="688" fg:w="3"/><text x="56.0036%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.9157%" y="453" width="0.0810%" height="15" fill="rgb(240,114,2)" fg:x="690" fg:w="1"/><text x="56.1657%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9157%" y="437" width="0.0810%" height="15" fill="rgb(211,17,40)" fg:x="690" fg:w="1"/><text x="56.1657%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.9157%" y="421" width="0.0810%" height="15" fill="rgb(235,97,36)" fg:x="690" fg:w="1"/><text x="56.1657%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9157%" y="405" width="0.0810%" height="15" fill="rgb(208,164,11)" fg:x="690" fg:w="1"/><text x="56.1657%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="55.9157%" y="389" width="0.0810%" height="15" fill="rgb(242,11,17)" fg:x="690" fg:w="1"/><text x="56.1657%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9157%" y="373" width="0.0810%" height="15" fill="rgb(215,86,33)" fg:x="690" fg:w="1"/><text x="56.1657%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.9157%" y="357" width="0.0810%" height="15" fill="rgb(245,185,28)" fg:x="690" fg:w="1"/><text x="56.1657%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9157%" y="341" width="0.0810%" height="15" fill="rgb(231,89,42)" fg:x="690" fg:w="1"/><text x="56.1657%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (62 samples, 5.02%)</title><rect x="51.0535%" y="581" width="5.0243%" height="15" fill="rgb(210,18,47)" fg:x="630" fg:w="62"/><text x="51.3035%" y="591.50">&lt;plugi..</text></g><g><title>plugins_core::tools::move_between (23 samples, 1.86%)</title><rect x="54.2139%" y="565" width="1.8639%" height="15" fill="rgb(214,84,8)" fg:x="669" fg:w="23"/><text x="54.4639%" y="575.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="55.9968%" y="549" width="0.0810%" height="15" fill="rgb(214,222,23)" fg:x="691" fg:w="1"/><text x="56.2468%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (1 samples, 0.08%)</title><rect x="55.9968%" y="533" width="0.0810%" height="15" fill="rgb(213,104,21)" fg:x="691" fg:w="1"/><text x="56.2468%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.3209%" y="501" width="0.2431%" height="15" fill="rgb(238,138,6)" fg:x="695" fg:w="3"/><text x="56.5709%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.4019%" y="485" width="0.1621%" height="15" fill="rgb(205,167,50)" fg:x="696" fg:w="2"/><text x="56.6519%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.4019%" y="469" width="0.1621%" height="15" fill="rgb(230,105,27)" fg:x="696" fg:w="2"/><text x="56.6519%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="56.4019%" y="453" width="0.1621%" height="15" fill="rgb(222,97,48)" fg:x="696" fg:w="2"/><text x="56.6519%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="56.4019%" y="437" width="0.1621%" height="15" fill="rgb(222,197,14)" fg:x="696" fg:w="2"/><text x="56.6519%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="56.4019%" y="421" width="0.1621%" height="15" fill="rgb(210,105,47)" fg:x="696" fg:w="2"/><text x="56.6519%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="56.4019%" y="405" width="0.1621%" height="15" fill="rgb(238,158,19)" fg:x="696" fg:w="2"/><text x="56.6519%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="56.4019%" y="389" width="0.1621%" height="15" fill="rgb(226,176,23)" fg:x="696" fg:w="2"/><text x="56.6519%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="56.4019%" y="373" width="0.1621%" height="15" fill="rgb(208,79,31)" fg:x="696" fg:w="2"/><text x="56.6519%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="56.4019%" y="357" width="0.1621%" height="15" fill="rgb(221,154,21)" fg:x="696" fg:w="2"/><text x="56.6519%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="56.4019%" y="341" width="0.1621%" height="15" fill="rgb(213,61,41)" fg:x="696" fg:w="2"/><text x="56.6519%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="56.4019%" y="325" width="0.1621%" height="15" fill="rgb(215,28,33)" fg:x="696" fg:w="2"/><text x="56.6519%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.4019%" y="309" width="0.1621%" height="15" fill="rgb(231,139,26)" fg:x="696" fg:w="2"/><text x="56.6519%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="56.3209%" y="517" width="0.3241%" height="15" fill="rgb(232,159,16)" fg:x="695" fg:w="4"/><text x="56.5709%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5640%" y="501" width="0.0810%" height="15" fill="rgb(233,80,10)" fg:x="698" fg:w="1"/><text x="56.8140%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.41%)</title><rect x="56.6451%" y="517" width="0.4052%" height="15" fill="rgb(208,147,29)" fg:x="699" fg:w="5"/><text x="56.8951%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.41%)</title><rect x="56.6451%" y="501" width="0.4052%" height="15" fill="rgb(213,10,12)" fg:x="699" fg:w="5"/><text x="56.8951%" y="511.50"></text></g><g><title>realloc (5 samples, 0.41%)</title><rect x="56.6451%" y="485" width="0.4052%" height="15" fill="rgb(231,218,13)" fg:x="699" fg:w="5"/><text x="56.8951%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="57.0502%" y="469" width="0.0810%" height="15" fill="rgb(244,199,44)" fg:x="704" fg:w="1"/><text x="57.3002%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="57.0502%" y="453" width="0.0810%" height="15" fill="rgb(240,144,53)" fg:x="704" fg:w="1"/><text x="57.3002%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.0502%" y="437" width="0.0810%" height="15" fill="rgb(223,57,28)" fg:x="704" fg:w="1"/><text x="57.3002%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.0502%" y="421" width="0.0810%" height="15" fill="rgb(213,134,38)" fg:x="704" fg:w="1"/><text x="57.3002%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.0502%" y="405" width="0.0810%" height="15" fill="rgb(251,182,42)" fg:x="704" fg:w="1"/><text x="57.3002%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.0502%" y="389" width="0.0810%" height="15" fill="rgb(229,93,13)" fg:x="704" fg:w="1"/><text x="57.3002%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.0502%" y="373" width="0.0810%" height="15" fill="rgb(234,171,3)" fg:x="704" fg:w="1"/><text x="57.3002%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.0502%" y="357" width="0.0810%" height="15" fill="rgb(241,105,32)" fg:x="704" fg:w="1"/><text x="57.3002%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.0502%" y="341" width="0.0810%" height="15" fill="rgb(221,66,3)" fg:x="704" fg:w="1"/><text x="57.3002%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.0502%" y="325" width="0.0810%" height="15" fill="rgb(248,155,29)" fg:x="704" fg:w="1"/><text x="57.3002%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (2 samples, 0.16%)</title><rect x="57.0502%" y="501" width="0.1621%" height="15" fill="rgb(231,31,5)" fg:x="704" fg:w="2"/><text x="57.3002%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="57.0502%" y="485" width="0.1621%" height="15" fill="rgb(213,188,31)" fg:x="704" fg:w="2"/><text x="57.3002%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="57.1313%" y="469" width="0.0810%" height="15" fill="rgb(212,104,33)" fg:x="705" fg:w="1"/><text x="57.3813%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="57.1313%" y="453" width="0.0810%" height="15" fill="rgb(254,77,51)" fg:x="705" fg:w="1"/><text x="57.3813%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="57.1313%" y="437" width="0.0810%" height="15" fill="rgb(234,39,26)" fg:x="705" fg:w="1"/><text x="57.3813%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="57.1313%" y="421" width="0.0810%" height="15" fill="rgb(208,88,36)" fg:x="705" fg:w="1"/><text x="57.3813%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="57.1313%" y="405" width="0.0810%" height="15" fill="rgb(243,222,10)" fg:x="705" fg:w="1"/><text x="57.3813%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="57.1313%" y="389" width="0.0810%" height="15" fill="rgb(218,133,52)" fg:x="705" fg:w="1"/><text x="57.3813%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="57.1313%" y="373" width="0.0810%" height="15" fill="rgb(222,25,26)" fg:x="705" fg:w="1"/><text x="57.3813%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="57.1313%" y="357" width="0.0810%" height="15" fill="rgb(243,174,24)" fg:x="705" fg:w="1"/><text x="57.3813%" y="367.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="57.2934%" y="469" width="0.2431%" height="15" fill="rgb(233,188,52)" fg:x="707" fg:w="3"/><text x="57.5434%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="57.2934%" y="453" width="0.2431%" height="15" fill="rgb(208,89,14)" fg:x="707" fg:w="3"/><text x="57.5434%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="57.2934%" y="437" width="0.2431%" height="15" fill="rgb(205,204,21)" fg:x="707" fg:w="3"/><text x="57.5434%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.3744%" y="421" width="0.1621%" height="15" fill="rgb(246,39,28)" fg:x="708" fg:w="2"/><text x="57.6244%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.3744%" y="405" width="0.1621%" height="15" fill="rgb(235,71,19)" fg:x="708" fg:w="2"/><text x="57.6244%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.3744%" y="389" width="0.1621%" height="15" fill="rgb(211,62,39)" fg:x="708" fg:w="2"/><text x="57.6244%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="57.3744%" y="373" width="0.1621%" height="15" fill="rgb(246,118,20)" fg:x="708" fg:w="2"/><text x="57.6244%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="57.3744%" y="357" width="0.1621%" height="15" fill="rgb(230,82,12)" fg:x="708" fg:w="2"/><text x="57.6244%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="57.3744%" y="341" width="0.1621%" height="15" fill="rgb(205,212,34)" fg:x="708" fg:w="2"/><text x="57.6244%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.3744%" y="325" width="0.1621%" height="15" fill="rgb(239,90,1)" fg:x="708" fg:w="2"/><text x="57.6244%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.3744%" y="309" width="0.1621%" height="15" fill="rgb(225,198,50)" fg:x="708" fg:w="2"/><text x="57.6244%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="57.3744%" y="293" width="0.1621%" height="15" fill="rgb(227,208,48)" fg:x="708" fg:w="2"/><text x="57.6244%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="57.3744%" y="277" width="0.1621%" height="15" fill="rgb(238,134,41)" fg:x="708" fg:w="2"/><text x="57.6244%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="57.3744%" y="261" width="0.1621%" height="15" fill="rgb(241,58,39)" fg:x="708" fg:w="2"/><text x="57.6244%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="57.3744%" y="245" width="0.1621%" height="15" fill="rgb(214,126,4)" fg:x="708" fg:w="2"/><text x="57.6244%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.4554%" y="229" width="0.0810%" height="15" fill="rgb(235,149,4)" fg:x="709" fg:w="1"/><text x="57.7054%" y="239.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="57.5365%" y="469" width="0.0810%" height="15" fill="rgb(236,59,29)" fg:x="710" fg:w="1"/><text x="57.7865%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="57.5365%" y="453" width="0.0810%" height="15" fill="rgb(246,11,33)" fg:x="710" fg:w="1"/><text x="57.7865%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="57.5365%" y="437" width="0.0810%" height="15" fill="rgb(232,180,35)" fg:x="710" fg:w="1"/><text x="57.7865%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="57.5365%" y="421" width="0.0810%" height="15" fill="rgb(220,35,37)" fg:x="710" fg:w="1"/><text x="57.7865%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="57.5365%" y="405" width="0.0810%" height="15" fill="rgb(238,107,48)" fg:x="710" fg:w="1"/><text x="57.7865%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="57.5365%" y="389" width="0.0810%" height="15" fill="rgb(205,65,21)" fg:x="710" fg:w="1"/><text x="57.7865%" y="399.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="57.5365%" y="373" width="0.0810%" height="15" fill="rgb(246,138,48)" fg:x="710" fg:w="1"/><text x="57.7865%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.5365%" y="357" width="0.0810%" height="15" fill="rgb(209,220,47)" fg:x="710" fg:w="1"/><text x="57.7865%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.5365%" y="341" width="0.0810%" height="15" fill="rgb(222,162,49)" fg:x="710" fg:w="1"/><text x="57.7865%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.5365%" y="325" width="0.0810%" height="15" fill="rgb(243,123,11)" fg:x="710" fg:w="1"/><text x="57.7865%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.5365%" y="309" width="0.0810%" height="15" fill="rgb(221,229,41)" fg:x="710" fg:w="1"/><text x="57.7865%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.5365%" y="293" width="0.0810%" height="15" fill="rgb(216,68,4)" fg:x="710" fg:w="1"/><text x="57.7865%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.5365%" y="277" width="0.0810%" height="15" fill="rgb(207,88,35)" fg:x="710" fg:w="1"/><text x="57.7865%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.5365%" y="261" width="0.0810%" height="15" fill="rgb(252,2,5)" fg:x="710" fg:w="1"/><text x="57.7865%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.5365%" y="245" width="0.0810%" height="15" fill="rgb(209,173,7)" fg:x="710" fg:w="1"/><text x="57.7865%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="57.6175%" y="469" width="0.0810%" height="15" fill="rgb(210,198,52)" fg:x="711" fg:w="1"/><text x="57.8675%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="57.6175%" y="453" width="0.0810%" height="15" fill="rgb(228,152,32)" fg:x="711" fg:w="1"/><text x="57.8675%" y="463.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (18 samples, 1.46%)</title><rect x="56.3209%" y="533" width="1.4587%" height="15" fill="rgb(249,98,29)" fg:x="695" fg:w="18"/><text x="56.5709%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (9 samples, 0.73%)</title><rect x="57.0502%" y="517" width="0.7293%" height="15" fill="rgb(205,148,48)" fg:x="704" fg:w="9"/><text x="57.3002%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.57%)</title><rect x="57.2123%" y="501" width="0.5673%" height="15" fill="rgb(236,69,34)" fg:x="706" fg:w="7"/><text x="57.4623%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.57%)</title><rect x="57.2123%" y="485" width="0.5673%" height="15" fill="rgb(220,151,41)" fg:x="706" fg:w="7"/><text x="57.4623%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.6985%" y="469" width="0.0810%" height="15" fill="rgb(254,106,24)" fg:x="712" fg:w="1"/><text x="57.9485%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.6985%" y="453" width="0.0810%" height="15" fill="rgb(210,37,48)" fg:x="712" fg:w="1"/><text x="57.9485%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="57.6985%" y="437" width="0.0810%" height="15" fill="rgb(254,131,5)" fg:x="712" fg:w="1"/><text x="57.9485%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="57.6985%" y="421" width="0.0810%" height="15" fill="rgb(216,55,41)" fg:x="712" fg:w="1"/><text x="57.9485%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="57.6985%" y="405" width="0.0810%" height="15" fill="rgb(250,35,31)" fg:x="712" fg:w="1"/><text x="57.9485%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.6985%" y="389" width="0.0810%" height="15" fill="rgb(207,124,33)" fg:x="712" fg:w="1"/><text x="57.9485%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.6985%" y="373" width="0.0810%" height="15" fill="rgb(249,175,17)" fg:x="712" fg:w="1"/><text x="57.9485%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="57.6985%" y="357" width="0.0810%" height="15" fill="rgb(224,175,39)" fg:x="712" fg:w="1"/><text x="57.9485%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.8606%" y="437" width="0.1621%" height="15" fill="rgb(208,67,49)" fg:x="714" fg:w="2"/><text x="58.1106%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.8606%" y="421" width="0.1621%" height="15" fill="rgb(222,188,41)" fg:x="714" fg:w="2"/><text x="58.1106%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.8606%" y="405" width="0.1621%" height="15" fill="rgb(243,213,30)" fg:x="714" fg:w="2"/><text x="58.1106%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.8606%" y="389" width="0.1621%" height="15" fill="rgb(253,100,45)" fg:x="714" fg:w="2"/><text x="58.1106%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.1037%" y="341" width="0.0810%" height="15" fill="rgb(226,24,44)" fg:x="717" fg:w="1"/><text x="58.3537%" y="351.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (6 samples, 0.49%)</title><rect x="57.7796%" y="533" width="0.4862%" height="15" fill="rgb(215,41,24)" fg:x="713" fg:w="6"/><text x="58.0296%" y="543.50"></text></g><g><title>plugins_core::finding::matches_description (6 samples, 0.49%)</title><rect x="57.7796%" y="517" width="0.4862%" height="15" fill="rgb(254,53,33)" fg:x="713" fg:w="6"/><text x="58.0296%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::name (6 samples, 0.49%)</title><rect x="57.7796%" y="501" width="0.4862%" height="15" fill="rgb(242,103,10)" fg:x="713" fg:w="6"/><text x="58.0296%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.41%)</title><rect x="57.8606%" y="485" width="0.4052%" height="15" fill="rgb(246,29,21)" fg:x="714" fg:w="5"/><text x="58.1106%" y="495.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.41%)</title><rect x="57.8606%" y="469" width="0.4052%" height="15" fill="rgb(251,154,1)" fg:x="714" fg:w="5"/><text x="58.1106%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="57.8606%" y="453" width="0.4052%" height="15" fill="rgb(254,212,26)" fg:x="714" fg:w="5"/><text x="58.1106%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.0227%" y="437" width="0.2431%" height="15" fill="rgb(251,187,46)" fg:x="716" fg:w="3"/><text x="58.2727%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.0227%" y="421" width="0.2431%" height="15" fill="rgb(224,208,14)" fg:x="716" fg:w="3"/><text x="58.2727%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.1037%" y="405" width="0.1621%" height="15" fill="rgb(222,176,26)" fg:x="717" fg:w="2"/><text x="58.3537%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.1037%" y="389" width="0.1621%" height="15" fill="rgb(241,219,52)" fg:x="717" fg:w="2"/><text x="58.3537%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="58.1037%" y="373" width="0.1621%" height="15" fill="rgb(252,198,21)" fg:x="717" fg:w="2"/><text x="58.3537%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.1037%" y="357" width="0.1621%" height="15" fill="rgb(244,196,23)" fg:x="717" fg:w="2"/><text x="58.3537%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.1848%" y="341" width="0.0810%" height="15" fill="rgb(239,121,44)" fg:x="718" fg:w="1"/><text x="58.4348%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.1848%" y="325" width="0.0810%" height="15" fill="rgb(249,203,23)" fg:x="718" fg:w="1"/><text x="58.4348%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.1848%" y="309" width="0.0810%" height="15" fill="rgb(238,219,10)" fg:x="718" fg:w="1"/><text x="58.4348%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.1848%" y="293" width="0.0810%" height="15" fill="rgb(241,35,46)" fg:x="718" fg:w="1"/><text x="58.4348%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="58.1848%" y="277" width="0.0810%" height="15" fill="rgb(218,28,6)" fg:x="718" fg:w="1"/><text x="58.4348%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="58.1848%" y="261" width="0.0810%" height="15" fill="rgb(233,151,50)" fg:x="718" fg:w="1"/><text x="58.4348%" y="271.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="58.1848%" y="245" width="0.0810%" height="15" fill="rgb(208,57,8)" fg:x="718" fg:w="1"/><text x="58.4348%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (28 samples, 2.27%)</title><rect x="56.1588%" y="565" width="2.2690%" height="15" fill="rgb(253,99,10)" fg:x="693" fg:w="28"/><text x="56.4088%" y="575.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (28 samples, 2.27%)</title><rect x="56.1588%" y="549" width="2.2690%" height="15" fill="rgb(237,196,49)" fg:x="693" fg:w="28"/><text x="56.4088%" y="559.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (2 samples, 0.16%)</title><rect x="58.2658%" y="533" width="0.1621%" height="15" fill="rgb(209,51,3)" fg:x="719" fg:w="2"/><text x="58.5158%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.2658%" y="517" width="0.1621%" height="15" fill="rgb(238,129,10)" fg:x="719" fg:w="2"/><text x="58.5158%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.2658%" y="501" width="0.1621%" height="15" fill="rgb(246,201,16)" fg:x="719" fg:w="2"/><text x="58.5158%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.2658%" y="485" width="0.1621%" height="15" fill="rgb(250,160,20)" fg:x="719" fg:w="2"/><text x="58.5158%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="58.2658%" y="469" width="0.1621%" height="15" fill="rgb(251,107,25)" fg:x="719" fg:w="2"/><text x="58.5158%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="58.2658%" y="453" width="0.1621%" height="15" fill="rgb(212,103,39)" fg:x="719" fg:w="2"/><text x="58.5158%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="58.2658%" y="437" width="0.1621%" height="15" fill="rgb(207,9,29)" fg:x="719" fg:w="2"/><text x="58.5158%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.2658%" y="421" width="0.1621%" height="15" fill="rgb(227,84,3)" fg:x="719" fg:w="2"/><text x="58.5158%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.2658%" y="405" width="0.1621%" height="15" fill="rgb(242,194,7)" fg:x="719" fg:w="2"/><text x="58.5158%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="58.2658%" y="389" width="0.1621%" height="15" fill="rgb(230,40,4)" fg:x="719" fg:w="2"/><text x="58.5158%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="58.2658%" y="373" width="0.1621%" height="15" fill="rgb(243,229,33)" fg:x="719" fg:w="2"/><text x="58.5158%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="58.2658%" y="357" width="0.1621%" height="15" fill="rgb(240,65,24)" fg:x="719" fg:w="2"/><text x="58.5158%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="58.2658%" y="341" width="0.1621%" height="15" fill="rgb(212,28,20)" fg:x="719" fg:w="2"/><text x="58.5158%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.2658%" y="325" width="0.1621%" height="15" fill="rgb(209,72,3)" fg:x="719" fg:w="2"/><text x="58.5158%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="58.4279%" y="533" width="0.0810%" height="15" fill="rgb(238,170,36)" fg:x="721" fg:w="1"/><text x="58.6779%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.4279%" y="517" width="0.0810%" height="15" fill="rgb(236,19,38)" fg:x="721" fg:w="1"/><text x="58.6779%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="58.4279%" y="501" width="0.0810%" height="15" fill="rgb(230,67,43)" fg:x="721" fg:w="1"/><text x="58.6779%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.5089%" y="501" width="0.1621%" height="15" fill="rgb(227,14,36)" fg:x="722" fg:w="2"/><text x="58.7589%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.5900%" y="485" width="0.0810%" height="15" fill="rgb(247,171,49)" fg:x="723" fg:w="1"/><text x="58.8400%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.5900%" y="469" width="0.0810%" height="15" fill="rgb(235,164,51)" fg:x="723" fg:w="1"/><text x="58.8400%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.5900%" y="453" width="0.0810%" height="15" fill="rgb(246,107,20)" fg:x="723" fg:w="1"/><text x="58.8400%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.5900%" y="437" width="0.0810%" height="15" fill="rgb(226,88,18)" fg:x="723" fg:w="1"/><text x="58.8400%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.5900%" y="421" width="0.0810%" height="15" fill="rgb(235,136,9)" fg:x="723" fg:w="1"/><text x="58.8400%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.5900%" y="405" width="0.0810%" height="15" fill="rgb(209,3,34)" fg:x="723" fg:w="1"/><text x="58.8400%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.5900%" y="389" width="0.0810%" height="15" fill="rgb(213,38,19)" fg:x="723" fg:w="1"/><text x="58.8400%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.5900%" y="373" width="0.0810%" height="15" fill="rgb(254,24,24)" fg:x="723" fg:w="1"/><text x="58.8400%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.5900%" y="357" width="0.0810%" height="15" fill="rgb(219,122,42)" fg:x="723" fg:w="1"/><text x="58.8400%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.5900%" y="341" width="0.0810%" height="15" fill="rgb(205,128,31)" fg:x="723" fg:w="1"/><text x="58.8400%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.5900%" y="325" width="0.0810%" height="15" fill="rgb(212,142,0)" fg:x="723" fg:w="1"/><text x="58.8400%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.5900%" y="309" width="0.0810%" height="15" fill="rgb(211,25,35)" fg:x="723" fg:w="1"/><text x="58.8400%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.5900%" y="293" width="0.0810%" height="15" fill="rgb(220,150,53)" fg:x="723" fg:w="1"/><text x="58.8400%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.5900%" y="277" width="0.0810%" height="15" fill="rgb(220,30,24)" fg:x="723" fg:w="1"/><text x="58.8400%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.5900%" y="261" width="0.0810%" height="15" fill="rgb(218,86,23)" fg:x="723" fg:w="1"/><text x="58.8400%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="58.6710%" y="501" width="0.0810%" height="15" fill="rgb(206,62,27)" fg:x="724" fg:w="1"/><text x="58.9210%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="58.6710%" y="485" width="0.0810%" height="15" fill="rgb(249,174,0)" fg:x="724" fg:w="1"/><text x="58.9210%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.6710%" y="469" width="0.0810%" height="15" fill="rgb(246,67,27)" fg:x="724" fg:w="1"/><text x="58.9210%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.6710%" y="453" width="0.0810%" height="15" fill="rgb(250,195,30)" fg:x="724" fg:w="1"/><text x="58.9210%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.6710%" y="437" width="0.0810%" height="15" fill="rgb(251,171,50)" fg:x="724" fg:w="1"/><text x="58.9210%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.6710%" y="421" width="0.0810%" height="15" fill="rgb(236,196,10)" fg:x="724" fg:w="1"/><text x="58.9210%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.7520%" y="437" width="0.0810%" height="15" fill="rgb(249,228,52)" fg:x="725" fg:w="1"/><text x="59.0020%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.7520%" y="469" width="0.1621%" height="15" fill="rgb(219,60,51)" fg:x="725" fg:w="2"/><text x="59.0020%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.7520%" y="453" width="0.1621%" height="15" fill="rgb(240,198,24)" fg:x="725" fg:w="2"/><text x="59.0020%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="58.8331%" y="437" width="0.0810%" height="15" fill="rgb(240,192,40)" fg:x="726" fg:w="1"/><text x="59.0831%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.8331%" y="421" width="0.0810%" height="15" fill="rgb(219,118,5)" fg:x="726" fg:w="1"/><text x="59.0831%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.8331%" y="405" width="0.0810%" height="15" fill="rgb(205,202,34)" fg:x="726" fg:w="1"/><text x="59.0831%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.8331%" y="389" width="0.0810%" height="15" fill="rgb(234,153,26)" fg:x="726" fg:w="1"/><text x="59.0831%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.8331%" y="373" width="0.0810%" height="15" fill="rgb(229,26,29)" fg:x="726" fg:w="1"/><text x="59.0831%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.57%)</title><rect x="58.4279%" y="549" width="0.5673%" height="15" fill="rgb(237,115,21)" fg:x="721" fg:w="7"/><text x="58.6779%" y="559.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.49%)</title><rect x="58.5089%" y="533" width="0.4862%" height="15" fill="rgb(252,144,15)" fg:x="722" fg:w="6"/><text x="58.7589%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="58.5089%" y="517" width="0.4862%" height="15" fill="rgb(232,26,13)" fg:x="722" fg:w="6"/><text x="58.7589%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.7520%" y="501" width="0.2431%" height="15" fill="rgb(206,44,19)" fg:x="725" fg:w="3"/><text x="59.0020%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.7520%" y="485" width="0.2431%" height="15" fill="rgb(249,159,2)" fg:x="725" fg:w="3"/><text x="59.0020%" y="495.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="58.9141%" y="469" width="0.0810%" height="15" fill="rgb(231,5,32)" fg:x="727" fg:w="1"/><text x="59.1641%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.9951%" y="501" width="0.1621%" height="15" fill="rgb(249,210,18)" fg:x="728" fg:w="2"/><text x="59.2451%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.0762%" y="485" width="0.0810%" height="15" fill="rgb(215,223,36)" fg:x="729" fg:w="1"/><text x="59.3262%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.1572%" y="501" width="0.0810%" height="15" fill="rgb(245,185,20)" fg:x="730" fg:w="1"/><text x="59.4072%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="59.1572%" y="485" width="0.0810%" height="15" fill="rgb(206,224,11)" fg:x="730" fg:w="1"/><text x="59.4072%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="59.2382%" y="405" width="0.0810%" height="15" fill="rgb(248,73,42)" fg:x="731" fg:w="1"/><text x="59.4882%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.3193%" y="405" width="0.0810%" height="15" fill="rgb(219,149,31)" fg:x="732" fg:w="1"/><text x="59.5693%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (13 samples, 1.05%)</title><rect x="58.4279%" y="565" width="1.0535%" height="15" fill="rgb(243,104,17)" fg:x="721" fg:w="13"/><text x="58.6779%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.49%)</title><rect x="58.9951%" y="549" width="0.4862%" height="15" fill="rgb(244,117,33)" fg:x="728" fg:w="6"/><text x="59.2451%" y="559.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.49%)</title><rect x="58.9951%" y="533" width="0.4862%" height="15" fill="rgb(251,25,47)" fg:x="728" fg:w="6"/><text x="59.2451%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="58.9951%" y="517" width="0.4862%" height="15" fill="rgb(249,70,13)" fg:x="728" fg:w="6"/><text x="59.2451%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="59.2382%" y="501" width="0.2431%" height="15" fill="rgb(217,133,18)" fg:x="731" fg:w="3"/><text x="59.4882%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.2382%" y="485" width="0.2431%" height="15" fill="rgb(248,97,28)" fg:x="731" fg:w="3"/><text x="59.4882%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="59.2382%" y="469" width="0.2431%" height="15" fill="rgb(237,193,4)" fg:x="731" fg:w="3"/><text x="59.4882%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.2382%" y="453" width="0.2431%" height="15" fill="rgb(247,198,45)" fg:x="731" fg:w="3"/><text x="59.4882%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="59.2382%" y="437" width="0.2431%" height="15" fill="rgb(245,2,20)" fg:x="731" fg:w="3"/><text x="59.4882%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.2382%" y="421" width="0.2431%" height="15" fill="rgb(210,71,36)" fg:x="731" fg:w="3"/><text x="59.4882%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.4003%" y="405" width="0.0810%" height="15" fill="rgb(238,114,30)" fg:x="733" fg:w="1"/><text x="59.6503%" y="415.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="59.4814%" y="565" width="0.0810%" height="15" fill="rgb(241,200,2)" fg:x="734" fg:w="1"/><text x="59.7314%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4814%" y="549" width="0.0810%" height="15" fill="rgb(232,106,18)" fg:x="734" fg:w="1"/><text x="59.7314%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4814%" y="533" width="0.0810%" height="15" fill="rgb(211,141,18)" fg:x="734" fg:w="1"/><text x="59.7314%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4814%" y="517" width="0.0810%" height="15" fill="rgb(224,9,9)" fg:x="734" fg:w="1"/><text x="59.7314%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.4814%" y="501" width="0.0810%" height="15" fill="rgb(249,137,46)" fg:x="734" fg:w="1"/><text x="59.7314%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.4814%" y="485" width="0.0810%" height="15" fill="rgb(236,44,45)" fg:x="734" fg:w="1"/><text x="59.7314%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.4814%" y="469" width="0.0810%" height="15" fill="rgb(205,68,40)" fg:x="734" fg:w="1"/><text x="59.7314%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.4814%" y="453" width="0.0810%" height="15" fill="rgb(214,198,49)" fg:x="734" fg:w="1"/><text x="59.7314%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.4814%" y="437" width="0.0810%" height="15" fill="rgb(226,140,45)" fg:x="734" fg:w="1"/><text x="59.7314%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.4814%" y="421" width="0.0810%" height="15" fill="rgb(209,109,20)" fg:x="734" fg:w="1"/><text x="59.7314%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.4814%" y="405" width="0.0810%" height="15" fill="rgb(217,33,46)" fg:x="734" fg:w="1"/><text x="59.7314%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.4814%" y="389" width="0.0810%" height="15" fill="rgb(232,150,33)" fg:x="734" fg:w="1"/><text x="59.7314%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.4814%" y="373" width="0.0810%" height="15" fill="rgb(233,76,25)" fg:x="734" fg:w="1"/><text x="59.7314%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.4814%" y="357" width="0.0810%" height="15" fill="rgb(254,219,23)" fg:x="734" fg:w="1"/><text x="59.7314%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="59.6434%" y="533" width="0.0810%" height="15" fill="rgb(233,108,4)" fg:x="736" fg:w="1"/><text x="59.8934%" y="543.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="59.6434%" y="517" width="0.0810%" height="15" fill="rgb(229,98,6)" fg:x="736" fg:w="1"/><text x="59.8934%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="59.6434%" y="501" width="0.0810%" height="15" fill="rgb(217,40,27)" fg:x="736" fg:w="1"/><text x="59.8934%" y="511.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="59.6434%" y="485" width="0.0810%" height="15" fill="rgb(221,35,43)" fg:x="736" fg:w="1"/><text x="59.8934%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="59.6434%" y="469" width="0.0810%" height="15" fill="rgb(212,107,11)" fg:x="736" fg:w="1"/><text x="59.8934%" y="479.50"></text></g><g><title>plugins_core::library::actions::reply_done (3 samples, 0.24%)</title><rect x="59.5624%" y="565" width="0.2431%" height="15" fill="rgb(245,42,44)" fg:x="735" fg:w="3"/><text x="59.8124%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (2 samples, 0.16%)</title><rect x="59.6434%" y="549" width="0.1621%" height="15" fill="rgb(209,31,12)" fg:x="736" fg:w="2"/><text x="59.8934%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.7245%" y="533" width="0.0810%" height="15" fill="rgb(210,228,54)" fg:x="737" fg:w="1"/><text x="59.9745%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="59.8865%" y="549" width="0.1621%" height="15" fill="rgb(241,19,33)" fg:x="739" fg:w="2"/><text x="60.1365%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="59.8865%" y="533" width="0.1621%" height="15" fill="rgb(229,51,27)" fg:x="739" fg:w="2"/><text x="60.1365%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="59.8865%" y="517" width="0.1621%" height="15" fill="rgb(214,167,49)" fg:x="739" fg:w="2"/><text x="60.1365%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="59.8865%" y="501" width="0.1621%" height="15" fill="rgb(248,140,47)" fg:x="739" fg:w="2"/><text x="60.1365%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="59.8865%" y="485" width="0.1621%" height="15" fill="rgb(228,6,51)" fg:x="739" fg:w="2"/><text x="60.1365%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.8865%" y="469" width="0.1621%" height="15" fill="rgb(242,44,53)" fg:x="739" fg:w="2"/><text x="60.1365%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.9676%" y="453" width="0.0810%" height="15" fill="rgb(249,90,50)" fg:x="740" fg:w="1"/><text x="60.2176%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="60.0486%" y="517" width="0.0810%" height="15" fill="rgb(222,84,19)" fg:x="741" fg:w="1"/><text x="60.2986%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.1297%" y="485" width="0.0810%" height="15" fill="rgb(214,140,12)" fg:x="742" fg:w="1"/><text x="60.3797%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="60.0486%" y="549" width="0.2431%" height="15" fill="rgb(210,20,43)" fg:x="741" fg:w="3"/><text x="60.2986%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="60.0486%" y="533" width="0.2431%" height="15" fill="rgb(243,1,40)" fg:x="741" fg:w="3"/><text x="60.2986%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.1297%" y="517" width="0.1621%" height="15" fill="rgb(224,102,26)" fg:x="742" fg:w="2"/><text x="60.3797%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.1297%" y="501" width="0.1621%" height="15" fill="rgb(221,179,1)" fg:x="742" fg:w="2"/><text x="60.3797%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="60.2107%" y="485" width="0.0810%" height="15" fill="rgb(216,209,47)" fg:x="743" fg:w="1"/><text x="60.4607%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="60.2107%" y="469" width="0.0810%" height="15" fill="rgb(251,135,9)" fg:x="743" fg:w="1"/><text x="60.4607%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="60.2107%" y="453" width="0.0810%" height="15" fill="rgb(242,9,36)" fg:x="743" fg:w="1"/><text x="60.4607%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.2107%" y="437" width="0.0810%" height="15" fill="rgb(249,60,37)" fg:x="743" fg:w="1"/><text x="60.4607%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.2107%" y="421" width="0.0810%" height="15" fill="rgb(230,66,45)" fg:x="743" fg:w="1"/><text x="60.4607%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (4 samples, 0.32%)</title><rect x="60.4538%" y="517" width="0.3241%" height="15" fill="rgb(216,1,47)" fg:x="746" fg:w="4"/><text x="60.7038%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="60.4538%" y="501" width="0.3241%" height="15" fill="rgb(235,8,23)" fg:x="746" fg:w="4"/><text x="60.7038%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="60.4538%" y="485" width="0.3241%" height="15" fill="rgb(225,136,11)" fg:x="746" fg:w="4"/><text x="60.7038%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4 samples, 0.32%)</title><rect x="60.4538%" y="469" width="0.3241%" height="15" fill="rgb(228,63,44)" fg:x="746" fg:w="4"/><text x="60.7038%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="60.4538%" y="453" width="0.3241%" height="15" fill="rgb(240,43,52)" fg:x="746" fg:w="4"/><text x="60.7038%" y="463.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="60.5348%" y="437" width="0.2431%" height="15" fill="rgb(217,167,36)" fg:x="747" fg:w="3"/><text x="60.7848%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.7780%" y="485" width="0.0810%" height="15" fill="rgb(250,19,6)" fg:x="750" fg:w="1"/><text x="61.0280%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="60.7780%" y="517" width="0.1621%" height="15" fill="rgb(236,60,51)" fg:x="750" fg:w="2"/><text x="61.0280%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="60.7780%" y="501" width="0.1621%" height="15" fill="rgb(222,217,20)" fg:x="750" fg:w="2"/><text x="61.0280%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.8590%" y="485" width="0.0810%" height="15" fill="rgb(242,65,52)" fg:x="751" fg:w="1"/><text x="61.1090%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.8590%" y="469" width="0.0810%" height="15" fill="rgb(217,5,41)" fg:x="751" fg:w="1"/><text x="61.1090%" y="479.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (9 samples, 0.73%)</title><rect x="60.2917%" y="549" width="0.7293%" height="15" fill="rgb(223,208,53)" fg:x="744" fg:w="9"/><text x="60.5417%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (8 samples, 0.65%)</title><rect x="60.3728%" y="533" width="0.6483%" height="15" fill="rgb(221,104,30)" fg:x="745" fg:w="8"/><text x="60.6228%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="60.9400%" y="517" width="0.0810%" height="15" fill="rgb(230,210,42)" fg:x="752" fg:w="1"/><text x="61.1900%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="61.0211%" y="453" width="0.0810%" height="15" fill="rgb(206,205,27)" fg:x="753" fg:w="1"/><text x="61.2711%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="61.0211%" y="437" width="0.0810%" height="15" fill="rgb(233,114,38)" fg:x="753" fg:w="1"/><text x="61.2711%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.0211%" y="421" width="0.0810%" height="15" fill="rgb(216,174,36)" fg:x="753" fg:w="1"/><text x="61.2711%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.0211%" y="405" width="0.0810%" height="15" fill="rgb(211,30,9)" fg:x="753" fg:w="1"/><text x="61.2711%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.0211%" y="389" width="0.0810%" height="15" fill="rgb(216,8,21)" fg:x="753" fg:w="1"/><text x="61.2711%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="61.0211%" y="549" width="0.1621%" height="15" fill="rgb(237,209,39)" fg:x="753" fg:w="2"/><text x="61.2711%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="61.0211%" y="533" width="0.1621%" height="15" fill="rgb(235,111,47)" fg:x="753" fg:w="2"/><text x="61.2711%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="61.0211%" y="517" width="0.1621%" height="15" fill="rgb(216,139,9)" fg:x="753" fg:w="2"/><text x="61.2711%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="61.0211%" y="501" width="0.1621%" height="15" fill="rgb(248,185,4)" fg:x="753" fg:w="2"/><text x="61.2711%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="61.0211%" y="485" width="0.1621%" height="15" fill="rgb(239,185,25)" fg:x="753" fg:w="2"/><text x="61.2711%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="61.0211%" y="469" width="0.1621%" height="15" fill="rgb(233,207,8)" fg:x="753" fg:w="2"/><text x="61.2711%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.1021%" y="453" width="0.0810%" height="15" fill="rgb(249,220,24)" fg:x="754" fg:w="1"/><text x="61.3521%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.1021%" y="437" width="0.0810%" height="15" fill="rgb(221,50,14)" fg:x="754" fg:w="1"/><text x="61.3521%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.1021%" y="421" width="0.0810%" height="15" fill="rgb(227,79,42)" fg:x="754" fg:w="1"/><text x="61.3521%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.1021%" y="405" width="0.0810%" height="15" fill="rgb(228,218,49)" fg:x="754" fg:w="1"/><text x="61.3521%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="61.1021%" y="389" width="0.0810%" height="15" fill="rgb(249,18,15)" fg:x="754" fg:w="1"/><text x="61.3521%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.1021%" y="373" width="0.0810%" height="15" fill="rgb(212,84,27)" fg:x="754" fg:w="1"/><text x="61.3521%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.1021%" y="357" width="0.0810%" height="15" fill="rgb(207,83,24)" fg:x="754" fg:w="1"/><text x="61.3521%" y="367.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (64 samples, 5.19%)</title><rect x="56.0778%" y="581" width="5.1864%" height="15" fill="rgb(219,61,7)" fg:x="692" fg:w="64"/><text x="56.3278%" y="591.50">&lt;plugi..</text></g><g><title>plugins_core::tools::move_between (18 samples, 1.46%)</title><rect x="59.8055%" y="565" width="1.4587%" height="15" fill="rgb(211,43,29)" fg:x="738" fg:w="18"/><text x="60.0555%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="61.1831%" y="549" width="0.0810%" height="15" fill="rgb(243,15,23)" fg:x="755" fg:w="1"/><text x="61.4331%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (448 samples, 36.30%)</title><rect x="25.0405%" y="725" width="36.3047%" height="15" fill="rgb(217,52,28)" fg:x="309" fg:w="448"/><text x="25.2905%" y="735.50">&lt;engine::session::Session as kernel::actions::Performer&gt;::p..</text></g><g><title>kernel::plugins::mw::apply_middleware (128 samples, 10.37%)</title><rect x="50.9724%" y="709" width="10.3728%" height="15" fill="rgb(210,35,6)" fg:x="629" fg:w="128"/><text x="51.2224%" y="719.50">kernel::plugins..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (128 samples, 10.37%)</title><rect x="50.9724%" y="693" width="10.3728%" height="15" fill="rgb(237,187,28)" fg:x="629" fg:w="128"/><text x="51.2224%" y="703.50">kernel::plugins..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (128 samples, 10.37%)</title><rect x="50.9724%" y="677" width="10.3728%" height="15" fill="rgb(231,136,24)" fg:x="629" fg:w="128"/><text x="51.2224%" y="687.50">&lt;plugins_dynlib..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (127 samples, 10.29%)</title><rect x="51.0535%" y="661" width="10.2917%" height="15" fill="rgb(205,176,52)" fg:x="630" fg:w="127"/><text x="51.3035%" y="671.50">kernel::plugins..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (127 samples, 10.29%)</title><rect x="51.0535%" y="645" width="10.2917%" height="15" fill="rgb(218,65,12)" fg:x="630" fg:w="127"/><text x="51.3035%" y="655.50">core::ops::func..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (127 samples, 10.29%)</title><rect x="51.0535%" y="629" width="10.2917%" height="15" fill="rgb(234,101,21)" fg:x="630" fg:w="127"/><text x="51.3035%" y="639.50">kernel::plugins..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (127 samples, 10.29%)</title><rect x="51.0535%" y="613" width="10.2917%" height="15" fill="rgb(206,13,20)" fg:x="630" fg:w="127"/><text x="51.3035%" y="623.50">core::ops::func..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (127 samples, 10.29%)</title><rect x="51.0535%" y="597" width="10.2917%" height="15" fill="rgb(236,89,44)" fg:x="630" fg:w="127"/><text x="51.3035%" y="607.50">&lt;engine::sessio..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="61.2642%" y="581" width="0.0810%" height="15" fill="rgb(225,52,17)" fg:x="756" fg:w="1"/><text x="61.5142%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="61.2642%" y="565" width="0.0810%" height="15" fill="rgb(214,27,25)" fg:x="756" fg:w="1"/><text x="61.5142%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.2642%" y="549" width="0.0810%" height="15" fill="rgb(240,141,35)" fg:x="756" fg:w="1"/><text x="61.5142%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.3452%" y="629" width="0.0810%" height="15" fill="rgb(216,126,3)" fg:x="757" fg:w="1"/><text x="61.5952%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.3452%" y="613" width="0.0810%" height="15" fill="rgb(249,196,23)" fg:x="757" fg:w="1"/><text x="61.5952%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.4263%" y="565" width="0.0810%" height="15" fill="rgb(215,185,43)" fg:x="758" fg:w="1"/><text x="61.6763%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.4263%" y="549" width="0.0810%" height="15" fill="rgb(208,194,36)" fg:x="758" fg:w="1"/><text x="61.6763%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4263%" y="533" width="0.0810%" height="15" fill="rgb(245,182,12)" fg:x="758" fg:w="1"/><text x="61.6763%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.5073%" y="549" width="0.0810%" height="15" fill="rgb(244,222,52)" fg:x="759" fg:w="1"/><text x="61.7573%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.5073%" y="533" width="0.0810%" height="15" fill="rgb(236,222,51)" fg:x="759" fg:w="1"/><text x="61.7573%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.5073%" y="517" width="0.0810%" height="15" fill="rgb(254,71,22)" fg:x="759" fg:w="1"/><text x="61.7573%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.5073%" y="501" width="0.0810%" height="15" fill="rgb(250,104,15)" fg:x="759" fg:w="1"/><text x="61.7573%" y="511.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="61.3452%" y="677" width="0.3241%" height="15" fill="rgb(229,223,46)" fg:x="757" fg:w="4"/><text x="61.5952%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="61.3452%" y="661" width="0.3241%" height="15" fill="rgb(209,129,18)" fg:x="757" fg:w="4"/><text x="61.5952%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="61.3452%" y="645" width="0.3241%" height="15" fill="rgb(224,160,1)" fg:x="757" fg:w="4"/><text x="61.5952%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="61.4263%" y="629" width="0.2431%" height="15" fill="rgb(237,112,21)" fg:x="758" fg:w="3"/><text x="61.6763%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="61.4263%" y="613" width="0.2431%" height="15" fill="rgb(215,198,53)" fg:x="758" fg:w="3"/><text x="61.6763%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="61.4263%" y="597" width="0.2431%" height="15" fill="rgb(218,227,35)" fg:x="758" fg:w="3"/><text x="61.6763%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="61.4263%" y="581" width="0.2431%" height="15" fill="rgb(232,121,22)" fg:x="758" fg:w="3"/><text x="61.6763%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="61.5073%" y="565" width="0.1621%" height="15" fill="rgb(235,52,54)" fg:x="759" fg:w="2"/><text x="61.7573%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.5883%" y="549" width="0.0810%" height="15" fill="rgb(219,21,44)" fg:x="760" fg:w="1"/><text x="61.8383%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.5883%" y="533" width="0.0810%" height="15" fill="rgb(221,51,43)" fg:x="760" fg:w="1"/><text x="61.8383%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.5883%" y="517" width="0.0810%" height="15" fill="rgb(225,77,42)" fg:x="760" fg:w="1"/><text x="61.8383%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="61.6694%" y="597" width="0.0810%" height="15" fill="rgb(214,117,53)" fg:x="761" fg:w="1"/><text x="61.9194%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.6694%" y="581" width="0.0810%" height="15" fill="rgb(218,227,27)" fg:x="761" fg:w="1"/><text x="61.9194%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="61.6694%" y="565" width="0.0810%" height="15" fill="rgb(223,214,36)" fg:x="761" fg:w="1"/><text x="61.9194%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.6694%" y="549" width="0.0810%" height="15" fill="rgb(235,21,7)" fg:x="761" fg:w="1"/><text x="61.9194%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="61.7504%" y="549" width="0.0810%" height="15" fill="rgb(244,216,4)" fg:x="762" fg:w="1"/><text x="62.0004%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="61.7504%" y="533" width="0.0810%" height="15" fill="rgb(249,197,24)" fg:x="762" fg:w="1"/><text x="62.0004%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.7504%" y="517" width="0.0810%" height="15" fill="rgb(222,169,49)" fg:x="762" fg:w="1"/><text x="62.0004%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.7504%" y="501" width="0.0810%" height="15" fill="rgb(207,137,33)" fg:x="762" fg:w="1"/><text x="62.0004%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.8314%" y="517" width="0.0810%" height="15" fill="rgb(219,180,40)" fg:x="763" fg:w="1"/><text x="62.0814%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.8314%" y="501" width="0.0810%" height="15" fill="rgb(250,163,42)" fg:x="763" fg:w="1"/><text x="62.0814%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.65%)</title><rect x="61.3452%" y="725" width="0.6483%" height="15" fill="rgb(239,163,0)" fg:x="757" fg:w="8"/><text x="61.5952%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.65%)</title><rect x="61.3452%" y="709" width="0.6483%" height="15" fill="rgb(252,38,28)" fg:x="757" fg:w="8"/><text x="61.5952%" y="719.50"></text></g><g><title>kernel::model::entity::Entity::from_str (8 samples, 0.65%)</title><rect x="61.3452%" y="693" width="0.6483%" height="15" fill="rgb(254,203,26)" fg:x="757" fg:w="8"/><text x="61.5952%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="61.6694%" y="677" width="0.3241%" height="15" fill="rgb(209,129,32)" fg:x="761" fg:w="4"/><text x="61.9194%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="61.6694%" y="661" width="0.3241%" height="15" fill="rgb(207,177,52)" fg:x="761" fg:w="4"/><text x="61.9194%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="61.6694%" y="645" width="0.3241%" height="15" fill="rgb(230,209,36)" fg:x="761" fg:w="4"/><text x="61.9194%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="61.6694%" y="629" width="0.3241%" height="15" fill="rgb(238,131,0)" fg:x="761" fg:w="4"/><text x="61.9194%" y="639.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="61.6694%" y="613" width="0.3241%" height="15" fill="rgb(218,61,31)" fg:x="761" fg:w="4"/><text x="61.9194%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="61.7504%" y="597" width="0.2431%" height="15" fill="rgb(232,6,53)" fg:x="762" fg:w="3"/><text x="62.0004%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="61.7504%" y="581" width="0.2431%" height="15" fill="rgb(254,100,32)" fg:x="762" fg:w="3"/><text x="62.0004%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="61.7504%" y="565" width="0.2431%" height="15" fill="rgb(229,194,49)" fg:x="762" fg:w="3"/><text x="62.0004%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.8314%" y="549" width="0.1621%" height="15" fill="rgb(206,208,39)" fg:x="763" fg:w="2"/><text x="62.0814%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.8314%" y="533" width="0.1621%" height="15" fill="rgb(246,226,14)" fg:x="763" fg:w="2"/><text x="62.0814%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="61.9125%" y="517" width="0.0810%" height="15" fill="rgb(226,48,32)" fg:x="764" fg:w="1"/><text x="62.1625%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.9125%" y="501" width="0.0810%" height="15" fill="rgb(252,43,54)" fg:x="764" fg:w="1"/><text x="62.1625%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.9125%" y="485" width="0.0810%" height="15" fill="rgb(207,124,0)" fg:x="764" fg:w="1"/><text x="62.1625%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.9125%" y="469" width="0.0810%" height="15" fill="rgb(248,188,30)" fg:x="764" fg:w="1"/><text x="62.1625%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.9125%" y="453" width="0.0810%" height="15" fill="rgb(232,14,43)" fg:x="764" fg:w="1"/><text x="62.1625%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.9125%" y="437" width="0.0810%" height="15" fill="rgb(218,52,29)" fg:x="764" fg:w="1"/><text x="62.1625%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.0746%" y="533" width="0.0810%" height="15" fill="rgb(218,176,50)" fg:x="766" fg:w="1"/><text x="62.3246%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="62.0746%" y="645" width="0.1621%" height="15" fill="rgb(213,112,0)" fg:x="766" fg:w="2"/><text x="62.3246%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="62.0746%" y="629" width="0.1621%" height="15" fill="rgb(244,216,8)" fg:x="766" fg:w="2"/><text x="62.3246%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="62.0746%" y="613" width="0.1621%" height="15" fill="rgb(224,148,53)" fg:x="766" fg:w="2"/><text x="62.3246%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.0746%" y="597" width="0.1621%" height="15" fill="rgb(241,133,40)" fg:x="766" fg:w="2"/><text x="62.3246%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.0746%" y="581" width="0.1621%" height="15" fill="rgb(232,17,44)" fg:x="766" fg:w="2"/><text x="62.3246%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="62.0746%" y="565" width="0.1621%" height="15" fill="rgb(213,32,25)" fg:x="766" fg:w="2"/><text x="62.3246%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.0746%" y="549" width="0.1621%" height="15" fill="rgb(249,115,27)" fg:x="766" fg:w="2"/><text x="62.3246%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.1556%" y="533" width="0.0810%" height="15" fill="rgb(241,50,1)" fg:x="767" fg:w="1"/><text x="62.4056%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.1556%" y="517" width="0.0810%" height="15" fill="rgb(244,175,40)" fg:x="767" fg:w="1"/><text x="62.4056%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.1556%" y="501" width="0.0810%" height="15" fill="rgb(230,94,34)" fg:x="767" fg:w="1"/><text x="62.4056%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.1556%" y="485" width="0.0810%" height="15" fill="rgb(223,185,29)" fg:x="767" fg:w="1"/><text x="62.4056%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="61.9935%" y="677" width="0.3241%" height="15" fill="rgb(225,193,15)" fg:x="765" fg:w="4"/><text x="62.2435%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="61.9935%" y="661" width="0.3241%" height="15" fill="rgb(252,121,38)" fg:x="765" fg:w="4"/><text x="62.2435%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="62.2366%" y="645" width="0.0810%" height="15" fill="rgb(232,44,12)" fg:x="768" fg:w="1"/><text x="62.4866%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="62.2366%" y="629" width="0.0810%" height="15" fill="rgb(226,45,54)" fg:x="768" fg:w="1"/><text x="62.4866%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="62.2366%" y="613" width="0.0810%" height="15" fill="rgb(209,67,17)" fg:x="768" fg:w="1"/><text x="62.4866%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.2366%" y="597" width="0.0810%" height="15" fill="rgb(219,108,52)" fg:x="768" fg:w="1"/><text x="62.4866%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2366%" y="581" width="0.0810%" height="15" fill="rgb(216,118,19)" fg:x="768" fg:w="1"/><text x="62.4866%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.2366%" y="565" width="0.0810%" height="15" fill="rgb(228,120,40)" fg:x="768" fg:w="1"/><text x="62.4866%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2366%" y="549" width="0.0810%" height="15" fill="rgb(221,218,34)" fg:x="768" fg:w="1"/><text x="62.4866%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.2366%" y="533" width="0.0810%" height="15" fill="rgb(235,89,14)" fg:x="768" fg:w="1"/><text x="62.4866%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2366%" y="517" width="0.0810%" height="15" fill="rgb(248,89,7)" fg:x="768" fg:w="1"/><text x="62.4866%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="62.3177%" y="677" width="0.0810%" height="15" fill="rgb(212,114,34)" fg:x="769" fg:w="1"/><text x="62.5677%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="62.3177%" y="661" width="0.0810%" height="15" fill="rgb(246,88,32)" fg:x="769" fg:w="1"/><text x="62.5677%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="62.3177%" y="645" width="0.0810%" height="15" fill="rgb(237,135,0)" fg:x="769" fg:w="1"/><text x="62.5677%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.3177%" y="629" width="0.0810%" height="15" fill="rgb(220,201,54)" fg:x="769" fg:w="1"/><text x="62.5677%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.3177%" y="613" width="0.0810%" height="15" fill="rgb(210,142,36)" fg:x="769" fg:w="1"/><text x="62.5677%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.3177%" y="597" width="0.0810%" height="15" fill="rgb(247,189,26)" fg:x="769" fg:w="1"/><text x="62.5677%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.3177%" y="581" width="0.0810%" height="15" fill="rgb(223,89,24)" fg:x="769" fg:w="1"/><text x="62.5677%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.3177%" y="565" width="0.0810%" height="15" fill="rgb(205,90,19)" fg:x="769" fg:w="1"/><text x="62.5677%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.3177%" y="549" width="0.0810%" height="15" fill="rgb(234,57,40)" fg:x="769" fg:w="1"/><text x="62.5677%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.3177%" y="533" width="0.0810%" height="15" fill="rgb(213,109,10)" fg:x="769" fg:w="1"/><text x="62.5677%" y="543.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="62.3987%" y="677" width="0.0810%" height="15" fill="rgb(214,189,23)" fg:x="770" fg:w="1"/><text x="62.6487%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.3987%" y="661" width="0.0810%" height="15" fill="rgb(234,200,10)" fg:x="770" fg:w="1"/><text x="62.6487%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.5608%" y="517" width="0.0810%" height="15" fill="rgb(221,148,16)" fg:x="772" fg:w="1"/><text x="62.8108%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="62.6418%" y="501" width="0.0810%" height="15" fill="rgb(230,115,10)" fg:x="773" fg:w="1"/><text x="62.8918%" y="511.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="62.4797%" y="661" width="0.3241%" height="15" fill="rgb(220,106,42)" fg:x="771" fg:w="4"/><text x="62.7297%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="62.4797%" y="645" width="0.3241%" height="15" fill="rgb(225,105,39)" fg:x="771" fg:w="4"/><text x="62.7297%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="62.4797%" y="629" width="0.3241%" height="15" fill="rgb(211,161,38)" fg:x="771" fg:w="4"/><text x="62.7297%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="62.4797%" y="613" width="0.3241%" height="15" fill="rgb(213,23,19)" fg:x="771" fg:w="4"/><text x="62.7297%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="62.4797%" y="597" width="0.3241%" height="15" fill="rgb(240,2,33)" fg:x="771" fg:w="4"/><text x="62.7297%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="62.5608%" y="581" width="0.2431%" height="15" fill="rgb(221,29,45)" fg:x="772" fg:w="3"/><text x="62.8108%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="62.5608%" y="565" width="0.2431%" height="15" fill="rgb(242,10,19)" fg:x="772" fg:w="3"/><text x="62.8108%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="62.5608%" y="549" width="0.2431%" height="15" fill="rgb(250,84,37)" fg:x="772" fg:w="3"/><text x="62.8108%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="62.5608%" y="533" width="0.2431%" height="15" fill="rgb(214,136,7)" fg:x="772" fg:w="3"/><text x="62.8108%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="62.6418%" y="517" width="0.1621%" height="15" fill="rgb(231,189,12)" fg:x="773" fg:w="2"/><text x="62.8918%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.7229%" y="501" width="0.0810%" height="15" fill="rgb(244,40,16)" fg:x="774" fg:w="1"/><text x="62.9729%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="62.7229%" y="485" width="0.0810%" height="15" fill="rgb(217,29,15)" fg:x="774" fg:w="1"/><text x="62.9729%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.7229%" y="469" width="0.0810%" height="15" fill="rgb(235,172,33)" fg:x="774" fg:w="1"/><text x="62.9729%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="62.7229%" y="453" width="0.0810%" height="15" fill="rgb(206,148,28)" fg:x="774" fg:w="1"/><text x="62.9729%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.7229%" y="437" width="0.0810%" height="15" fill="rgb(251,167,37)" fg:x="774" fg:w="1"/><text x="62.9729%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.7229%" y="421" width="0.0810%" height="15" fill="rgb(229,94,52)" fg:x="774" fg:w="1"/><text x="62.9729%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.7229%" y="405" width="0.0810%" height="15" fill="rgb(216,132,9)" fg:x="774" fg:w="1"/><text x="62.9729%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.7229%" y="389" width="0.0810%" height="15" fill="rgb(208,110,29)" fg:x="774" fg:w="1"/><text x="62.9729%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.9660%" y="549" width="0.0810%" height="15" fill="rgb(241,23,8)" fg:x="777" fg:w="1"/><text x="63.2160%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.9660%" y="533" width="0.0810%" height="15" fill="rgb(208,26,35)" fg:x="777" fg:w="1"/><text x="63.2160%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.9660%" y="517" width="0.0810%" height="15" fill="rgb(242,165,34)" fg:x="777" fg:w="1"/><text x="63.2160%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.9660%" y="501" width="0.0810%" height="15" fill="rgb(222,222,33)" fg:x="777" fg:w="1"/><text x="63.2160%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="62.9660%" y="485" width="0.0810%" height="15" fill="rgb(227,16,52)" fg:x="777" fg:w="1"/><text x="63.2160%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.9660%" y="469" width="0.0810%" height="15" fill="rgb(213,93,12)" fg:x="777" fg:w="1"/><text x="63.2160%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.9660%" y="453" width="0.0810%" height="15" fill="rgb(238,41,5)" fg:x="777" fg:w="1"/><text x="63.2160%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="62.9660%" y="437" width="0.0810%" height="15" fill="rgb(211,60,15)" fg:x="777" fg:w="1"/><text x="63.2160%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.9660%" y="421" width="0.0810%" height="15" fill="rgb(209,11,34)" fg:x="777" fg:w="1"/><text x="63.2160%" y="431.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (14 samples, 1.13%)</title><rect x="61.9935%" y="693" width="1.1345%" height="15" fill="rgb(254,155,53)" fg:x="765" fg:w="14"/><text x="62.2435%" y="703.50"></text></g><g><title>kernel::model::entity::Entity::from_str (8 samples, 0.65%)</title><rect x="62.4797%" y="677" width="0.6483%" height="15" fill="rgb(236,174,8)" fg:x="771" fg:w="8"/><text x="62.7297%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="62.8039%" y="661" width="0.3241%" height="15" fill="rgb(229,31,27)" fg:x="775" fg:w="4"/><text x="63.0539%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.8039%" y="645" width="0.3241%" height="15" fill="rgb(242,226,26)" fg:x="775" fg:w="4"/><text x="63.0539%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="62.8849%" y="629" width="0.2431%" height="15" fill="rgb(234,32,40)" fg:x="776" fg:w="3"/><text x="63.1349%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.8849%" y="613" width="0.2431%" height="15" fill="rgb(249,226,47)" fg:x="776" fg:w="3"/><text x="63.1349%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="62.8849%" y="597" width="0.2431%" height="15" fill="rgb(212,6,26)" fg:x="776" fg:w="3"/><text x="63.1349%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="62.9660%" y="581" width="0.1621%" height="15" fill="rgb(249,202,29)" fg:x="777" fg:w="2"/><text x="63.2160%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="62.9660%" y="565" width="0.1621%" height="15" fill="rgb(226,106,4)" fg:x="777" fg:w="2"/><text x="63.2160%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="63.0470%" y="549" width="0.0810%" height="15" fill="rgb(251,2,27)" fg:x="778" fg:w="1"/><text x="63.2970%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.30%)</title><rect x="61.9935%" y="709" width="1.2966%" height="15" fill="rgb(236,208,0)" fg:x="765" fg:w="16"/><text x="62.2435%" y="719.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="63.1280%" y="693" width="0.1621%" height="15" fill="rgb(211,66,17)" fg:x="779" fg:w="2"/><text x="63.3780%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.2091%" y="677" width="0.0810%" height="15" fill="rgb(216,129,9)" fg:x="780" fg:w="1"/><text x="63.4591%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.2091%" y="661" width="0.0810%" height="15" fill="rgb(215,130,23)" fg:x="780" fg:w="1"/><text x="63.4591%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.2091%" y="645" width="0.0810%" height="15" fill="rgb(253,157,11)" fg:x="780" fg:w="1"/><text x="63.4591%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.2091%" y="629" width="0.0810%" height="15" fill="rgb(224,25,14)" fg:x="780" fg:w="1"/><text x="63.4591%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.2091%" y="613" width="0.0810%" height="15" fill="rgb(238,16,7)" fg:x="780" fg:w="1"/><text x="63.4591%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.2091%" y="597" width="0.0810%" height="15" fill="rgb(228,74,11)" fg:x="780" fg:w="1"/><text x="63.4591%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.2091%" y="581" width="0.0810%" height="15" fill="rgb(239,221,27)" fg:x="780" fg:w="1"/><text x="63.4591%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.2091%" y="565" width="0.0810%" height="15" fill="rgb(229,166,18)" fg:x="780" fg:w="1"/><text x="63.4591%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.2091%" y="549" width="0.0810%" height="15" fill="rgb(254,94,46)" fg:x="780" fg:w="1"/><text x="63.4591%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.2091%" y="533" width="0.0810%" height="15" fill="rgb(241,79,19)" fg:x="780" fg:w="1"/><text x="63.4591%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.2091%" y="517" width="0.0810%" height="15" fill="rgb(228,99,51)" fg:x="780" fg:w="1"/><text x="63.4591%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.2091%" y="501" width="0.0810%" height="15" fill="rgb(211,15,6)" fg:x="780" fg:w="1"/><text x="63.4591%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="63.2091%" y="485" width="0.0810%" height="15" fill="rgb(245,107,54)" fg:x="780" fg:w="1"/><text x="63.4591%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="63.2091%" y="469" width="0.0810%" height="15" fill="rgb(243,3,2)" fg:x="780" fg:w="1"/><text x="63.4591%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (17 samples, 1.38%)</title><rect x="61.9935%" y="725" width="1.3776%" height="15" fill="rgb(206,122,10)" fg:x="765" fg:w="17"/><text x="62.2435%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.2901%" y="709" width="0.0810%" height="15" fill="rgb(224,88,4)" fg:x="781" fg:w="1"/><text x="63.5401%" y="719.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="63.3712%" y="693" width="0.0810%" height="15" fill="rgb(230,1,41)" fg:x="782" fg:w="1"/><text x="63.6212%" y="703.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="63.3712%" y="677" width="0.0810%" height="15" fill="rgb(230,1,31)" fg:x="782" fg:w="1"/><text x="63.6212%" y="687.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="63.3712%" y="725" width="0.1621%" height="15" fill="rgb(232,67,19)" fg:x="782" fg:w="2"/><text x="63.6212%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="63.3712%" y="709" width="0.1621%" height="15" fill="rgb(222,206,20)" fg:x="782" fg:w="2"/><text x="63.6212%" y="719.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="63.4522%" y="693" width="0.0810%" height="15" fill="rgb(217,225,19)" fg:x="783" fg:w="1"/><text x="63.7022%" y="703.50"></text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="63.5332%" y="725" width="0.2431%" height="15" fill="rgb(234,13,33)" fg:x="784" fg:w="3"/><text x="63.7832%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="63.5332%" y="709" width="0.2431%" height="15" fill="rgb(254,5,1)" fg:x="784" fg:w="3"/><text x="63.7832%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="63.6953%" y="693" width="0.0810%" height="15" fill="rgb(211,121,41)" fg:x="786" fg:w="1"/><text x="63.9453%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.6953%" y="677" width="0.0810%" height="15" fill="rgb(213,199,35)" fg:x="786" fg:w="1"/><text x="63.9453%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6953%" y="661" width="0.0810%" height="15" fill="rgb(240,118,22)" fg:x="786" fg:w="1"/><text x="63.9453%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="63.6953%" y="645" width="0.0810%" height="15" fill="rgb(238,184,25)" fg:x="786" fg:w="1"/><text x="63.9453%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6953%" y="629" width="0.0810%" height="15" fill="rgb(210,165,6)" fg:x="786" fg:w="1"/><text x="63.9453%" y="639.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="63.7763%" y="725" width="0.0810%" height="15" fill="rgb(235,149,5)" fg:x="787" fg:w="1"/><text x="64.0263%" y="735.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (480 samples, 38.90%)</title><rect x="25.0405%" y="741" width="38.8979%" height="15" fill="rgb(221,63,5)" fg:x="309" fg:w="480"/><text x="25.2905%" y="751.50">engine::session::Session::evaluate_and_perform</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="63.8574%" y="725" width="0.0810%" height="15" fill="rgb(250,44,41)" fg:x="788" fg:w="1"/><text x="64.1074%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="63.8574%" y="709" width="0.0810%" height="15" fill="rgb(235,112,47)" fg:x="788" fg:w="1"/><text x="64.1074%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="63.8574%" y="693" width="0.0810%" height="15" fill="rgb(252,176,34)" fg:x="788" fg:w="1"/><text x="64.1074%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="63.8574%" y="677" width="0.0810%" height="15" fill="rgb(234,50,19)" fg:x="788" fg:w="1"/><text x="64.1074%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="63.8574%" y="661" width="0.0810%" height="15" fill="rgb(241,195,31)" fg:x="788" fg:w="1"/><text x="64.1074%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="63.8574%" y="645" width="0.0810%" height="15" fill="rgb(212,93,11)" fg:x="788" fg:w="1"/><text x="64.1074%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="63.8574%" y="629" width="0.0810%" height="15" fill="rgb(254,98,51)" fg:x="788" fg:w="1"/><text x="64.1074%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="63.8574%" y="613" width="0.0810%" height="15" fill="rgb(246,18,45)" fg:x="788" fg:w="1"/><text x="64.1074%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (790 samples, 64.02%)</title><rect x="0.0000%" y="789" width="64.0194%" height="15" fill="rgb(215,148,23)" fg:x="0" fg:w="790"/><text x="0.2500%" y="799.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (790 samples, 64.02%)</title><rect x="0.0000%" y="773" width="64.0194%" height="15" fill="rgb(227,22,7)" fg:x="0" fg:w="790"/><text x="0.2500%" y="783.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (790 samples, 64.02%)</title><rect x="0.0000%" y="757" width="64.0194%" height="15" fill="rgb(207,210,37)" fg:x="0" fg:w="790"/><text x="0.2500%" y="767.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="63.9384%" y="741" width="0.0810%" height="15" fill="rgb(247,147,42)" fg:x="789" fg:w="1"/><text x="64.1884%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="63.9384%" y="725" width="0.0810%" height="15" fill="rgb(226,213,14)" fg:x="789" fg:w="1"/><text x="64.1884%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="63.9384%" y="709" width="0.0810%" height="15" fill="rgb(223,18,10)" fg:x="789" fg:w="1"/><text x="64.1884%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.9384%" y="693" width="0.0810%" height="15" fill="rgb(253,34,22)" fg:x="789" fg:w="1"/><text x="64.1884%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.0194%" y="629" width="0.0810%" height="15" fill="rgb(222,90,31)" fg:x="790" fg:w="1"/><text x="64.2694%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.0194%" y="613" width="0.0810%" height="15" fill="rgb(220,182,30)" fg:x="790" fg:w="1"/><text x="64.2694%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.1815%" y="613" width="0.0810%" height="15" fill="rgb(229,170,12)" fg:x="792" fg:w="1"/><text x="64.4315%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.1815%" y="597" width="0.0810%" height="15" fill="rgb(210,101,21)" fg:x="792" fg:w="1"/><text x="64.4315%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.1815%" y="581" width="0.0810%" height="15" fill="rgb(237,177,31)" fg:x="792" fg:w="1"/><text x="64.4315%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.2626%" y="613" width="0.0810%" height="15" fill="rgb(215,91,34)" fg:x="793" fg:w="1"/><text x="64.5126%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="64.3436%" y="613" width="0.1621%" height="15" fill="rgb(229,206,16)" fg:x="794" fg:w="2"/><text x="64.5936%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="64.3436%" y="597" width="0.1621%" height="15" fill="rgb(235,207,10)" fg:x="794" fg:w="2"/><text x="64.5936%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="64.0194%" y="741" width="0.7293%" height="15" fill="rgb(247,18,10)" fg:x="790" fg:w="9"/><text x="64.2694%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (9 samples, 0.73%)</title><rect x="64.0194%" y="725" width="0.7293%" height="15" fill="rgb(232,4,6)" fg:x="790" fg:w="9"/><text x="64.2694%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="64.0194%" y="709" width="0.7293%" height="15" fill="rgb(247,93,45)" fg:x="790" fg:w="9"/><text x="64.2694%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (9 samples, 0.73%)</title><rect x="64.0194%" y="693" width="0.7293%" height="15" fill="rgb(240,181,18)" fg:x="790" fg:w="9"/><text x="64.2694%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="64.0194%" y="677" width="0.7293%" height="15" fill="rgb(208,224,0)" fg:x="790" fg:w="9"/><text x="64.2694%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="64.0194%" y="661" width="0.7293%" height="15" fill="rgb(224,207,54)" fg:x="790" fg:w="9"/><text x="64.2694%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="64.0194%" y="645" width="0.7293%" height="15" fill="rgb(217,152,29)" fg:x="790" fg:w="9"/><text x="64.2694%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="64.1005%" y="629" width="0.6483%" height="15" fill="rgb(243,78,27)" fg:x="791" fg:w="8"/><text x="64.3505%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="64.5057%" y="613" width="0.2431%" height="15" fill="rgb(228,111,9)" fg:x="796" fg:w="3"/><text x="64.7557%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.5867%" y="597" width="0.1621%" height="15" fill="rgb(230,213,21)" fg:x="797" fg:w="2"/><text x="64.8367%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="64.5867%" y="581" width="0.1621%" height="15" fill="rgb(248,50,36)" fg:x="797" fg:w="2"/><text x="64.8367%" y="591.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="64.7488%" y="709" width="0.0810%" height="15" fill="rgb(226,19,31)" fg:x="799" fg:w="1"/><text x="64.9988%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7488%" y="693" width="0.0810%" height="15" fill="rgb(205,132,21)" fg:x="799" fg:w="1"/><text x="64.9988%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="64.9109%" y="661" width="0.0810%" height="15" fill="rgb(207,42,19)" fg:x="801" fg:w="1"/><text x="65.1609%" y="671.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="64.9919%" y="645" width="0.0810%" height="15" fill="rgb(229,69,35)" fg:x="802" fg:w="1"/><text x="65.2419%" y="655.50"></text></g><g><title>dlopen (5 samples, 0.41%)</title><rect x="65.0729%" y="645" width="0.4052%" height="15" fill="rgb(226,96,11)" fg:x="803" fg:w="5"/><text x="65.3229%" y="655.50"></text></g><g><title>_dl_catch_error (5 samples, 0.41%)</title><rect x="65.0729%" y="629" width="0.4052%" height="15" fill="rgb(236,133,54)" fg:x="803" fg:w="5"/><text x="65.3229%" y="639.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.41%)</title><rect x="65.0729%" y="613" width="0.4052%" height="15" fill="rgb(247,166,21)" fg:x="803" fg:w="5"/><text x="65.3229%" y="623.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.41%)</title><rect x="65.0729%" y="597" width="0.4052%" height="15" fill="rgb(220,132,12)" fg:x="803" fg:w="5"/><text x="65.3229%" y="607.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.41%)</title><rect x="65.0729%" y="581" width="0.4052%" height="15" fill="rgb(233,27,30)" fg:x="803" fg:w="5"/><text x="65.3229%" y="591.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (10 samples, 0.81%)</title><rect x="64.7488%" y="741" width="0.8104%" height="15" fill="rgb(246,161,27)" fg:x="799" fg:w="10"/><text x="64.9988%" y="751.50"></text></g><g><title>engine::session::Session::new (10 samples, 0.81%)</title><rect x="64.7488%" y="725" width="0.8104%" height="15" fill="rgb(240,56,3)" fg:x="799" fg:w="10"/><text x="64.9988%" y="735.50"></text></g><g><title>engine::session::Session::initialize (9 samples, 0.73%)</title><rect x="64.8298%" y="709" width="0.7293%" height="15" fill="rgb(242,190,9)" fg:x="800" fg:w="9"/><text x="65.0798%" y="719.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (8 samples, 0.65%)</title><rect x="64.9109%" y="693" width="0.6483%" height="15" fill="rgb(234,3,52)" fg:x="801" fg:w="8"/><text x="65.1609%" y="703.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (8 samples, 0.65%)</title><rect x="64.9109%" y="677" width="0.6483%" height="15" fill="rgb(220,221,19)" fg:x="801" fg:w="8"/><text x="65.1609%" y="687.50"></text></g><g><title>libloading::os::unix::Library::open (7 samples, 0.57%)</title><rect x="64.9919%" y="661" width="0.5673%" height="15" fill="rgb(247,178,30)" fg:x="802" fg:w="7"/><text x="65.2419%" y="671.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="65.4781%" y="645" width="0.0810%" height="15" fill="rgb(234,212,27)" fg:x="808" fg:w="1"/><text x="65.7281%" y="655.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="65.4781%" y="629" width="0.0810%" height="15" fill="rgb(226,199,38)" fg:x="808" fg:w="1"/><text x="65.7281%" y="639.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="65.4781%" y="613" width="0.0810%" height="15" fill="rgb(248,114,22)" fg:x="808" fg:w="1"/><text x="65.7281%" y="623.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="65.4781%" y="597" width="0.0810%" height="15" fill="rgb(221,180,4)" fg:x="808" fg:w="1"/><text x="65.7281%" y="607.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="65.4781%" y="581" width="0.0810%" height="15" fill="rgb(220,229,24)" fg:x="808" fg:w="1"/><text x="65.7281%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="65.5592%" y="725" width="0.0810%" height="15" fill="rgb(226,184,27)" fg:x="809" fg:w="1"/><text x="65.8092%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="65.5592%" y="709" width="0.0810%" height="15" fill="rgb(232,99,15)" fg:x="809" fg:w="1"/><text x="65.8092%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.5592%" y="693" width="0.0810%" height="15" fill="rgb(250,167,16)" fg:x="809" fg:w="1"/><text x="65.8092%" y="703.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="65.6402%" y="677" width="0.0810%" height="15" fill="rgb(243,113,6)" fg:x="810" fg:w="1"/><text x="65.8902%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="65.6402%" y="661" width="0.0810%" height="15" fill="rgb(244,147,52)" fg:x="810" fg:w="1"/><text x="65.8902%" y="671.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="65.6402%" y="645" width="0.0810%" height="15" fill="rgb(235,59,50)" fg:x="810" fg:w="1"/><text x="65.8902%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="65.7212%" y="629" width="0.0810%" height="15" fill="rgb(250,188,6)" fg:x="811" fg:w="1"/><text x="65.9712%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="65.7212%" y="613" width="0.0810%" height="15" fill="rgb(236,173,11)" fg:x="811" fg:w="1"/><text x="65.9712%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="65.8023%" y="613" width="0.0810%" height="15" fill="rgb(233,64,3)" fg:x="812" fg:w="1"/><text x="66.0523%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="65.8023%" y="597" width="0.0810%" height="15" fill="rgb(207,92,7)" fg:x="812" fg:w="1"/><text x="66.0523%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="65.8023%" y="581" width="0.0810%" height="15" fill="rgb(221,30,19)" fg:x="812" fg:w="1"/><text x="66.0523%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.8023%" y="565" width="0.0810%" height="15" fill="rgb(245,22,49)" fg:x="812" fg:w="1"/><text x="66.0523%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="65.8833%" y="565" width="0.0810%" height="15" fill="rgb(218,39,20)" fg:x="813" fg:w="1"/><text x="66.1333%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="65.8833%" y="549" width="0.0810%" height="15" fill="rgb(222,144,21)" fg:x="813" fg:w="1"/><text x="66.1333%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="65.8833%" y="597" width="0.1621%" height="15" fill="rgb(222,78,51)" fg:x="813" fg:w="2"/><text x="66.1333%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="65.8833%" y="581" width="0.1621%" height="15" fill="rgb(248,213,53)" fg:x="813" fg:w="2"/><text x="66.1333%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="65.9643%" y="565" width="0.0810%" height="15" fill="rgb(245,28,34)" fg:x="814" fg:w="1"/><text x="66.2143%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="65.9643%" y="549" width="0.0810%" height="15" fill="rgb(229,186,26)" fg:x="814" fg:w="1"/><text x="66.2143%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="66.0454%" y="597" width="0.1621%" height="15" fill="rgb(224,0,41)" fg:x="815" fg:w="2"/><text x="66.2954%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.1264%" y="581" width="0.0810%" height="15" fill="rgb(223,136,51)" fg:x="816" fg:w="1"/><text x="66.3764%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.1264%" y="565" width="0.0810%" height="15" fill="rgb(234,50,9)" fg:x="816" fg:w="1"/><text x="66.3764%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.1264%" y="549" width="0.0810%" height="15" fill="rgb(242,164,20)" fg:x="816" fg:w="1"/><text x="66.3764%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="66.2075%" y="565" width="0.0810%" height="15" fill="rgb(230,169,22)" fg:x="817" fg:w="1"/><text x="66.4575%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.2075%" y="549" width="0.0810%" height="15" fill="rgb(228,82,26)" fg:x="817" fg:w="1"/><text x="66.4575%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.2075%" y="533" width="0.0810%" height="15" fill="rgb(244,220,31)" fg:x="817" fg:w="1"/><text x="66.4575%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.2075%" y="517" width="0.0810%" height="15" fill="rgb(214,35,25)" fg:x="817" fg:w="1"/><text x="66.4575%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="66.2885%" y="533" width="0.0810%" height="15" fill="rgb(245,162,54)" fg:x="818" fg:w="1"/><text x="66.5385%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.2885%" y="517" width="0.0810%" height="15" fill="rgb(210,43,24)" fg:x="818" fg:w="1"/><text x="66.5385%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.2885%" y="501" width="0.0810%" height="15" fill="rgb(226,145,51)" fg:x="818" fg:w="1"/><text x="66.5385%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.2885%" y="485" width="0.0810%" height="15" fill="rgb(237,52,53)" fg:x="818" fg:w="1"/><text x="66.5385%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="66.2885%" y="549" width="0.1621%" height="15" fill="rgb(216,226,7)" fg:x="818" fg:w="2"/><text x="66.5385%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="66.3695%" y="533" width="0.0810%" height="15" fill="rgb(206,223,18)" fg:x="819" fg:w="1"/><text x="66.6195%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.3695%" y="517" width="0.0810%" height="15" fill="rgb(221,1,10)" fg:x="819" fg:w="1"/><text x="66.6195%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.3695%" y="501" width="0.0810%" height="15" fill="rgb(221,151,42)" fg:x="819" fg:w="1"/><text x="66.6195%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="66.2885%" y="565" width="0.2431%" height="15" fill="rgb(205,183,46)" fg:x="818" fg:w="3"/><text x="66.5385%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.4506%" y="549" width="0.0810%" height="15" fill="rgb(239,229,1)" fg:x="820" fg:w="1"/><text x="66.7006%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="66.4506%" y="533" width="0.0810%" height="15" fill="rgb(236,192,23)" fg:x="820" fg:w="1"/><text x="66.7006%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.4506%" y="517" width="0.0810%" height="15" fill="rgb(215,146,3)" fg:x="820" fg:w="1"/><text x="66.7006%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="65.8833%" y="613" width="0.7293%" height="15" fill="rgb(235,52,27)" fg:x="813" fg:w="9"/><text x="66.1333%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="66.2075%" y="597" width="0.4052%" height="15" fill="rgb(236,45,20)" fg:x="817" fg:w="5"/><text x="66.4575%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="66.2075%" y="581" width="0.4052%" height="15" fill="rgb(235,86,41)" fg:x="817" fg:w="5"/><text x="66.4575%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.5316%" y="565" width="0.0810%" height="15" fill="rgb(235,27,27)" fg:x="821" fg:w="1"/><text x="66.7816%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.97%)</title><rect x="65.7212%" y="645" width="0.9724%" height="15" fill="rgb(232,4,34)" fg:x="811" fg:w="12"/><text x="65.9712%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="65.8023%" y="629" width="0.8914%" height="15" fill="rgb(215,22,10)" fg:x="812" fg:w="11"/><text x="66.0523%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="66.6126%" y="613" width="0.0810%" height="15" fill="rgb(230,228,27)" fg:x="822" fg:w="1"/><text x="66.8626%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.6937%" y="597" width="0.0810%" height="15" fill="rgb(216,26,51)" fg:x="823" fg:w="1"/><text x="66.9437%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.6937%" y="581" width="0.0810%" height="15" fill="rgb(225,180,50)" fg:x="823" fg:w="1"/><text x="66.9437%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="66.6937%" y="645" width="0.1621%" height="15" fill="rgb(236,211,2)" fg:x="823" fg:w="2"/><text x="66.9437%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="66.6937%" y="629" width="0.1621%" height="15" fill="rgb(250,51,20)" fg:x="823" fg:w="2"/><text x="66.9437%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="66.6937%" y="613" width="0.1621%" height="15" fill="rgb(232,70,37)" fg:x="823" fg:w="2"/><text x="66.9437%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.7747%" y="597" width="0.0810%" height="15" fill="rgb(226,183,39)" fg:x="824" fg:w="1"/><text x="67.0247%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.7747%" y="581" width="0.0810%" height="15" fill="rgb(232,228,21)" fg:x="824" fg:w="1"/><text x="67.0247%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.7747%" y="565" width="0.0810%" height="15" fill="rgb(251,118,32)" fg:x="824" fg:w="1"/><text x="67.0247%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.7747%" y="549" width="0.0810%" height="15" fill="rgb(235,172,38)" fg:x="824" fg:w="1"/><text x="67.0247%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.7747%" y="533" width="0.0810%" height="15" fill="rgb(235,63,18)" fg:x="824" fg:w="1"/><text x="67.0247%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.7747%" y="517" width="0.0810%" height="15" fill="rgb(225,4,7)" fg:x="824" fg:w="1"/><text x="67.0247%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.9368%" y="597" width="0.0810%" height="15" fill="rgb(231,61,1)" fg:x="826" fg:w="1"/><text x="67.1868%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.9368%" y="581" width="0.0810%" height="15" fill="rgb(241,155,22)" fg:x="826" fg:w="1"/><text x="67.1868%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="66.9368%" y="565" width="0.0810%" height="15" fill="rgb(209,100,26)" fg:x="826" fg:w="1"/><text x="67.1868%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="67.0178%" y="565" width="0.0810%" height="15" fill="rgb(248,181,15)" fg:x="827" fg:w="1"/><text x="67.2678%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="67.0989%" y="549" width="0.0810%" height="15" fill="rgb(214,94,31)" fg:x="828" fg:w="1"/><text x="67.3489%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="67.0989%" y="533" width="0.0810%" height="15" fill="rgb(207,16,42)" fg:x="828" fg:w="1"/><text x="67.3489%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="67.0989%" y="517" width="0.0810%" height="15" fill="rgb(208,127,13)" fg:x="828" fg:w="1"/><text x="67.3489%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="67.0989%" y="501" width="0.0810%" height="15" fill="rgb(220,211,18)" fg:x="828" fg:w="1"/><text x="67.3489%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.1799%" y="517" width="0.0810%" height="15" fill="rgb(221,55,38)" fg:x="829" fg:w="1"/><text x="67.4299%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.1799%" y="501" width="0.0810%" height="15" fill="rgb(252,219,45)" fg:x="829" fg:w="1"/><text x="67.4299%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1799%" y="485" width="0.0810%" height="15" fill="rgb(248,53,35)" fg:x="829" fg:w="1"/><text x="67.4299%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="67.1799%" y="533" width="0.1621%" height="15" fill="rgb(210,87,2)" fg:x="829" fg:w="2"/><text x="67.4299%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="67.2609%" y="517" width="0.0810%" height="15" fill="rgb(239,133,9)" fg:x="830" fg:w="1"/><text x="67.5109%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="67.2609%" y="501" width="0.0810%" height="15" fill="rgb(214,114,5)" fg:x="830" fg:w="1"/><text x="67.5109%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="67.0989%" y="565" width="0.3241%" height="15" fill="rgb(206,124,24)" fg:x="828" fg:w="4"/><text x="67.3489%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="67.1799%" y="549" width="0.2431%" height="15" fill="rgb(212,57,33)" fg:x="829" fg:w="3"/><text x="67.4299%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.3420%" y="533" width="0.0810%" height="15" fill="rgb(246,21,20)" fg:x="831" fg:w="1"/><text x="67.5920%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.49%)</title><rect x="67.0178%" y="581" width="0.4862%" height="15" fill="rgb(253,210,39)" fg:x="827" fg:w="6"/><text x="67.2678%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="67.4230%" y="565" width="0.0810%" height="15" fill="rgb(209,187,24)" fg:x="832" fg:w="1"/><text x="67.6730%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.4230%" y="549" width="0.0810%" height="15" fill="rgb(246,136,17)" fg:x="832" fg:w="1"/><text x="67.6730%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.5041%" y="581" width="0.0810%" height="15" fill="rgb(211,0,30)" fg:x="833" fg:w="1"/><text x="67.7541%" y="591.50"></text></g><g><title>engine::session::Session::flush (25 samples, 2.03%)</title><rect x="65.6402%" y="725" width="2.0259%" height="15" fill="rgb(216,199,7)" fg:x="810" fg:w="25"/><text x="65.8902%" y="735.50">e..</text></g><g><title>engine::session::state::State::close (25 samples, 2.03%)</title><rect x="65.6402%" y="709" width="2.0259%" height="15" fill="rgb(207,210,19)" fg:x="810" fg:w="25"/><text x="65.8902%" y="719.50">e..</text></g><g><title>engine::session::state::State::flush_entities (25 samples, 2.03%)</title><rect x="65.6402%" y="693" width="2.0259%" height="15" fill="rgb(237,187,39)" fg:x="810" fg:w="25"/><text x="65.8902%" y="703.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (24 samples, 1.94%)</title><rect x="65.7212%" y="677" width="1.9449%" height="15" fill="rgb(243,194,42)" fg:x="811" fg:w="24"/><text x="65.9712%" y="687.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (24 samples, 1.94%)</title><rect x="65.7212%" y="661" width="1.9449%" height="15" fill="rgb(225,194,19)" fg:x="811" fg:w="24"/><text x="65.9712%" y="671.50">e..</text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.81%)</title><rect x="66.8558%" y="645" width="0.8104%" height="15" fill="rgb(224,192,14)" fg:x="825" fg:w="10"/><text x="67.1058%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (10 samples, 0.81%)</title><rect x="66.8558%" y="629" width="0.8104%" height="15" fill="rgb(252,21,18)" fg:x="825" fg:w="10"/><text x="67.1058%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.81%)</title><rect x="66.8558%" y="613" width="0.8104%" height="15" fill="rgb(229,69,19)" fg:x="825" fg:w="10"/><text x="67.1058%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.65%)</title><rect x="67.0178%" y="597" width="0.6483%" height="15" fill="rgb(251,31,53)" fg:x="827" fg:w="8"/><text x="67.2678%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.5851%" y="581" width="0.0810%" height="15" fill="rgb(218,39,50)" fg:x="834" fg:w="1"/><text x="67.8351%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.5851%" y="565" width="0.0810%" height="15" fill="rgb(231,50,17)" fg:x="834" fg:w="1"/><text x="67.8351%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.5851%" y="549" width="0.0810%" height="15" fill="rgb(223,217,31)" fg:x="834" fg:w="1"/><text x="67.8351%" y="559.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="67.6661%" y="693" width="0.0810%" height="15" fill="rgb(225,91,12)" fg:x="835" fg:w="1"/><text x="67.9161%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="67.6661%" y="677" width="0.0810%" height="15" fill="rgb(242,58,43)" fg:x="835" fg:w="1"/><text x="67.9161%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.41%)</title><rect x="67.7472%" y="661" width="0.4052%" height="15" fill="rgb(242,32,21)" fg:x="836" fg:w="5"/><text x="67.9972%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.41%)</title><rect x="67.7472%" y="645" width="0.4052%" height="15" fill="rgb(211,127,1)" fg:x="836" fg:w="5"/><text x="67.9972%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.41%)</title><rect x="67.7472%" y="629" width="0.4052%" height="15" fill="rgb(231,93,13)" fg:x="836" fg:w="5"/><text x="67.9972%" y="639.50"></text></g><g><title>__libc_malloc (5 samples, 0.41%)</title><rect x="67.7472%" y="613" width="0.4052%" height="15" fill="rgb(218,83,4)" fg:x="836" fg:w="5"/><text x="67.9972%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.57%)</title><rect x="67.6661%" y="709" width="0.5673%" height="15" fill="rgb(230,218,10)" fg:x="835" fg:w="7"/><text x="67.9161%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.49%)</title><rect x="67.7472%" y="693" width="0.4862%" height="15" fill="rgb(235,127,18)" fg:x="836" fg:w="6"/><text x="67.9972%" y="703.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (6 samples, 0.49%)</title><rect x="67.7472%" y="677" width="0.4862%" height="15" fill="rgb(213,137,46)" fg:x="836" fg:w="6"/><text x="67.9972%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.1524%" y="661" width="0.0810%" height="15" fill="rgb(235,179,24)" fg:x="841" fg:w="1"/><text x="68.4024%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="68.1524%" y="645" width="0.0810%" height="15" fill="rgb(247,58,49)" fg:x="841" fg:w="1"/><text x="68.4024%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1524%" y="629" width="0.0810%" height="15" fill="rgb(242,222,5)" fg:x="841" fg:w="1"/><text x="68.4024%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="68.2334%" y="693" width="0.0810%" height="15" fill="rgb(230,16,48)" fg:x="842" fg:w="1"/><text x="68.4834%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="68.2334%" y="677" width="0.0810%" height="15" fill="rgb(241,192,16)" fg:x="842" fg:w="1"/><text x="68.4834%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="68.2334%" y="661" width="0.0810%" height="15" fill="rgb(209,25,37)" fg:x="842" fg:w="1"/><text x="68.4834%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="68.2334%" y="645" width="0.0810%" height="15" fill="rgb(229,215,13)" fg:x="842" fg:w="1"/><text x="68.4834%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.2334%" y="629" width="0.0810%" height="15" fill="rgb(213,199,8)" fg:x="842" fg:w="1"/><text x="68.4834%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="68.2334%" y="613" width="0.0810%" height="15" fill="rgb(226,151,19)" fg:x="842" fg:w="1"/><text x="68.4834%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.2334%" y="597" width="0.0810%" height="15" fill="rgb(254,183,12)" fg:x="842" fg:w="1"/><text x="68.4834%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.2334%" y="581" width="0.0810%" height="15" fill="rgb(245,8,3)" fg:x="842" fg:w="1"/><text x="68.4834%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.2334%" y="565" width="0.0810%" height="15" fill="rgb(229,159,35)" fg:x="842" fg:w="1"/><text x="68.4834%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.2334%" y="549" width="0.0810%" height="15" fill="rgb(209,145,1)" fg:x="842" fg:w="1"/><text x="68.4834%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.2334%" y="533" width="0.0810%" height="15" fill="rgb(228,183,16)" fg:x="842" fg:w="1"/><text x="68.4834%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="68.3144%" y="693" width="0.0810%" height="15" fill="rgb(222,68,0)" fg:x="843" fg:w="1"/><text x="68.5644%" y="703.50"></text></g><g><title>plugins_core::build::Build::holding (11 samples, 0.89%)</title><rect x="67.6661%" y="725" width="0.8914%" height="15" fill="rgb(209,130,50)" fg:x="835" fg:w="11"/><text x="67.9161%" y="735.50"></text></g><g><title>plugins_core::tools::set_container (4 samples, 0.32%)</title><rect x="68.2334%" y="709" width="0.3241%" height="15" fill="rgb(228,176,44)" fg:x="842" fg:w="4"/><text x="68.4834%" y="719.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="68.3955%" y="693" width="0.1621%" height="15" fill="rgb(221,164,2)" fg:x="844" fg:w="2"/><text x="68.6455%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="68.3955%" y="677" width="0.1621%" height="15" fill="rgb(249,199,49)" fg:x="844" fg:w="2"/><text x="68.6455%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="68.3955%" y="661" width="0.1621%" height="15" fill="rgb(228,205,53)" fg:x="844" fg:w="2"/><text x="68.6455%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="68.3955%" y="645" width="0.1621%" height="15" fill="rgb(235,77,20)" fg:x="844" fg:w="2"/><text x="68.6455%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="68.3955%" y="629" width="0.1621%" height="15" fill="rgb(227,147,34)" fg:x="844" fg:w="2"/><text x="68.6455%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="68.3955%" y="613" width="0.1621%" height="15" fill="rgb(226,203,52)" fg:x="844" fg:w="2"/><text x="68.6455%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.3955%" y="597" width="0.1621%" height="15" fill="rgb(226,186,23)" fg:x="844" fg:w="2"/><text x="68.6455%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.3955%" y="581" width="0.1621%" height="15" fill="rgb(236,13,30)" fg:x="844" fg:w="2"/><text x="68.6455%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.4765%" y="565" width="0.0810%" height="15" fill="rgb(228,121,22)" fg:x="845" fg:w="1"/><text x="68.7265%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.4765%" y="549" width="0.0810%" height="15" fill="rgb(248,222,26)" fg:x="845" fg:w="1"/><text x="68.7265%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="68.5575%" y="693" width="0.1621%" height="15" fill="rgb(251,72,25)" fg:x="846" fg:w="2"/><text x="68.8075%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="68.5575%" y="677" width="0.1621%" height="15" fill="rgb(223,114,24)" fg:x="846" fg:w="2"/><text x="68.8075%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="68.5575%" y="661" width="0.1621%" height="15" fill="rgb(232,190,43)" fg:x="846" fg:w="2"/><text x="68.8075%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.5575%" y="645" width="0.1621%" height="15" fill="rgb(208,90,0)" fg:x="846" fg:w="2"/><text x="68.8075%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.5575%" y="629" width="0.1621%" height="15" fill="rgb(234,149,31)" fg:x="846" fg:w="2"/><text x="68.8075%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.5575%" y="613" width="0.1621%" height="15" fill="rgb(235,188,36)" fg:x="846" fg:w="2"/><text x="68.8075%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.5575%" y="597" width="0.1621%" height="15" fill="rgb(219,59,51)" fg:x="846" fg:w="2"/><text x="68.8075%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.6386%" y="581" width="0.0810%" height="15" fill="rgb(236,101,40)" fg:x="847" fg:w="1"/><text x="68.8886%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.6386%" y="565" width="0.0810%" height="15" fill="rgb(235,33,7)" fg:x="847" fg:w="1"/><text x="68.8886%" y="575.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="68.7196%" y="693" width="0.0810%" height="15" fill="rgb(213,169,26)" fg:x="848" fg:w="1"/><text x="68.9696%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="68.7196%" y="677" width="0.0810%" height="15" fill="rgb(218,99,34)" fg:x="848" fg:w="1"/><text x="68.9696%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.7196%" y="661" width="0.0810%" height="15" fill="rgb(210,57,24)" fg:x="848" fg:w="1"/><text x="68.9696%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.7196%" y="645" width="0.0810%" height="15" fill="rgb(231,181,54)" fg:x="848" fg:w="1"/><text x="68.9696%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.7196%" y="629" width="0.0810%" height="15" fill="rgb(251,188,48)" fg:x="848" fg:w="1"/><text x="68.9696%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.7196%" y="613" width="0.0810%" height="15" fill="rgb(243,12,45)" fg:x="848" fg:w="1"/><text x="68.9696%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.7196%" y="597" width="0.0810%" height="15" fill="rgb(250,197,9)" fg:x="848" fg:w="1"/><text x="68.9696%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="68.5575%" y="725" width="0.3241%" height="15" fill="rgb(235,149,35)" fg:x="846" fg:w="4"/><text x="68.8075%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="68.5575%" y="709" width="0.3241%" height="15" fill="rgb(219,27,19)" fg:x="846" fg:w="4"/><text x="68.8075%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="68.8006%" y="693" width="0.0810%" height="15" fill="rgb(244,78,31)" fg:x="849" fg:w="1"/><text x="69.0506%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="68.8006%" y="677" width="0.0810%" height="15" fill="rgb(241,13,4)" fg:x="849" fg:w="1"/><text x="69.0506%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="68.8006%" y="661" width="0.0810%" height="15" fill="rgb(212,194,26)" fg:x="849" fg:w="1"/><text x="69.0506%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="68.8006%" y="645" width="0.0810%" height="15" fill="rgb(236,80,11)" fg:x="849" fg:w="1"/><text x="69.0506%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.8006%" y="629" width="0.0810%" height="15" fill="rgb(206,1,24)" fg:x="849" fg:w="1"/><text x="69.0506%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.8006%" y="613" width="0.0810%" height="15" fill="rgb(238,215,50)" fg:x="849" fg:w="1"/><text x="69.0506%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.8006%" y="597" width="0.0810%" height="15" fill="rgb(254,126,32)" fg:x="849" fg:w="1"/><text x="69.0506%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.8006%" y="581" width="0.0810%" height="15" fill="rgb(206,111,53)" fg:x="849" fg:w="1"/><text x="69.0506%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.8006%" y="565" width="0.0810%" height="15" fill="rgb(218,72,44)" fg:x="849" fg:w="1"/><text x="69.0506%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="68.8817%" y="725" width="0.1621%" height="15" fill="rgb(238,25,3)" fg:x="850" fg:w="2"/><text x="69.1317%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="68.8817%" y="709" width="0.1621%" height="15" fill="rgb(250,191,7)" fg:x="850" fg:w="2"/><text x="69.1317%" y="719.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="68.8817%" y="693" width="0.1621%" height="15" fill="rgb(238,56,30)" fg:x="850" fg:w="2"/><text x="69.1317%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="68.8817%" y="677" width="0.1621%" height="15" fill="rgb(210,27,45)" fg:x="850" fg:w="2"/><text x="69.1317%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="68.8817%" y="661" width="0.1621%" height="15" fill="rgb(207,10,50)" fg:x="850" fg:w="2"/><text x="69.1317%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="68.8817%" y="645" width="0.1621%" height="15" fill="rgb(249,30,23)" fg:x="850" fg:w="2"/><text x="69.1317%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="68.9627%" y="629" width="0.0810%" height="15" fill="rgb(250,80,12)" fg:x="851" fg:w="1"/><text x="69.2127%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="68.9627%" y="613" width="0.0810%" height="15" fill="rgb(210,221,37)" fg:x="851" fg:w="1"/><text x="69.2127%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="69.0438%" y="709" width="0.0810%" height="15" fill="rgb(205,96,24)" fg:x="852" fg:w="1"/><text x="69.2938%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="69.0438%" y="693" width="0.0810%" height="15" fill="rgb(247,104,22)" fg:x="852" fg:w="1"/><text x="69.2938%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="69.0438%" y="677" width="0.0810%" height="15" fill="rgb(222,61,53)" fg:x="852" fg:w="1"/><text x="69.2938%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.0438%" y="661" width="0.0810%" height="15" fill="rgb(241,11,53)" fg:x="852" fg:w="1"/><text x="69.2938%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.0438%" y="645" width="0.0810%" height="15" fill="rgb(230,111,47)" fg:x="852" fg:w="1"/><text x="69.2938%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.0438%" y="629" width="0.0810%" height="15" fill="rgb(218,187,29)" fg:x="852" fg:w="1"/><text x="69.2938%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.0438%" y="613" width="0.0810%" height="15" fill="rgb(210,121,46)" fg:x="852" fg:w="1"/><text x="69.2938%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.0438%" y="597" width="0.0810%" height="15" fill="rgb(250,43,19)" fg:x="852" fg:w="1"/><text x="69.2938%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.0438%" y="581" width="0.0810%" height="15" fill="rgb(238,61,12)" fg:x="852" fg:w="1"/><text x="69.2938%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="69.1248%" y="661" width="0.0810%" height="15" fill="rgb(251,198,9)" fg:x="853" fg:w="1"/><text x="69.3748%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="69.1248%" y="645" width="0.0810%" height="15" fill="rgb(214,192,38)" fg:x="853" fg:w="1"/><text x="69.3748%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="69.1248%" y="629" width="0.0810%" height="15" fill="rgb(214,73,19)" fg:x="853" fg:w="1"/><text x="69.3748%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="69.1248%" y="613" width="0.0810%" height="15" fill="rgb(249,222,49)" fg:x="853" fg:w="1"/><text x="69.3748%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.1248%" y="597" width="0.0810%" height="15" fill="rgb(231,181,54)" fg:x="853" fg:w="1"/><text x="69.3748%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.1248%" y="581" width="0.0810%" height="15" fill="rgb(240,1,13)" fg:x="853" fg:w="1"/><text x="69.3748%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.1248%" y="565" width="0.0810%" height="15" fill="rgb(225,21,16)" fg:x="853" fg:w="1"/><text x="69.3748%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="69.2058%" y="629" width="0.0810%" height="15" fill="rgb(246,176,50)" fg:x="854" fg:w="1"/><text x="69.4558%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="69.2058%" y="613" width="0.0810%" height="15" fill="rgb(208,96,50)" fg:x="854" fg:w="1"/><text x="69.4558%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="69.2058%" y="597" width="0.0810%" height="15" fill="rgb(240,219,19)" fg:x="854" fg:w="1"/><text x="69.4558%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="69.2058%" y="581" width="0.0810%" height="15" fill="rgb(234,73,5)" fg:x="854" fg:w="1"/><text x="69.4558%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="69.2058%" y="565" width="0.0810%" height="15" fill="rgb(225,52,53)" fg:x="854" fg:w="1"/><text x="69.4558%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="69.2058%" y="549" width="0.0810%" height="15" fill="rgb(250,12,14)" fg:x="854" fg:w="1"/><text x="69.4558%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="69.2058%" y="533" width="0.0810%" height="15" fill="rgb(242,185,54)" fg:x="854" fg:w="1"/><text x="69.4558%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="69.2058%" y="517" width="0.0810%" height="15" fill="rgb(211,206,31)" fg:x="854" fg:w="1"/><text x="69.4558%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="69.2869%" y="565" width="0.0810%" height="15" fill="rgb(252,10,33)" fg:x="855" fg:w="1"/><text x="69.5369%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.2869%" y="549" width="0.0810%" height="15" fill="rgb(216,26,7)" fg:x="855" fg:w="1"/><text x="69.5369%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="69.2058%" y="645" width="0.2431%" height="15" fill="rgb(228,112,40)" fg:x="854" fg:w="3"/><text x="69.4558%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="69.2869%" y="629" width="0.1621%" height="15" fill="rgb(212,21,16)" fg:x="855" fg:w="2"/><text x="69.5369%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="69.2869%" y="613" width="0.1621%" height="15" fill="rgb(249,3,29)" fg:x="855" fg:w="2"/><text x="69.5369%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="69.2869%" y="597" width="0.1621%" height="15" fill="rgb(221,42,51)" fg:x="855" fg:w="2"/><text x="69.5369%" y="607.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="69.2869%" y="581" width="0.1621%" height="15" fill="rgb(225,90,21)" fg:x="855" fg:w="2"/><text x="69.5369%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="69.3679%" y="565" width="0.0810%" height="15" fill="rgb(242,131,5)" fg:x="856" fg:w="1"/><text x="69.6179%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="69.3679%" y="549" width="0.0810%" height="15" fill="rgb(220,187,28)" fg:x="856" fg:w="1"/><text x="69.6179%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="69.3679%" y="533" width="0.0810%" height="15" fill="rgb(210,75,48)" fg:x="856" fg:w="1"/><text x="69.6179%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="69.3679%" y="517" width="0.0810%" height="15" fill="rgb(211,91,40)" fg:x="856" fg:w="1"/><text x="69.6179%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="69.3679%" y="501" width="0.0810%" height="15" fill="rgb(205,43,18)" fg:x="856" fg:w="1"/><text x="69.6179%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="69.3679%" y="485" width="0.0810%" height="15" fill="rgb(207,123,11)" fg:x="856" fg:w="1"/><text x="69.6179%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="69.4489%" y="645" width="0.0810%" height="15" fill="rgb(235,89,39)" fg:x="857" fg:w="1"/><text x="69.6989%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="69.5300%" y="597" width="0.0810%" height="15" fill="rgb(245,217,27)" fg:x="858" fg:w="1"/><text x="69.7800%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="69.5300%" y="581" width="0.0810%" height="15" fill="rgb(216,55,17)" fg:x="858" fg:w="1"/><text x="69.7800%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.5300%" y="565" width="0.0810%" height="15" fill="rgb(252,116,44)" fg:x="858" fg:w="1"/><text x="69.7800%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.5300%" y="549" width="0.0810%" height="15" fill="rgb(229,153,4)" fg:x="858" fg:w="1"/><text x="69.7800%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.5300%" y="533" width="0.0810%" height="15" fill="rgb(222,24,35)" fg:x="858" fg:w="1"/><text x="69.7800%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.5300%" y="517" width="0.0810%" height="15" fill="rgb(214,26,20)" fg:x="858" fg:w="1"/><text x="69.7800%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.5300%" y="501" width="0.0810%" height="15" fill="rgb(215,14,45)" fg:x="858" fg:w="1"/><text x="69.7800%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="69.5300%" y="485" width="0.0810%" height="15" fill="rgb(217,212,50)" fg:x="858" fg:w="1"/><text x="69.7800%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.5300%" y="469" width="0.0810%" height="15" fill="rgb(230,172,52)" fg:x="858" fg:w="1"/><text x="69.7800%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.5300%" y="453" width="0.0810%" height="15" fill="rgb(210,48,36)" fg:x="858" fg:w="1"/><text x="69.7800%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.5300%" y="437" width="0.0810%" height="15" fill="rgb(216,213,32)" fg:x="858" fg:w="1"/><text x="69.7800%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.5300%" y="421" width="0.0810%" height="15" fill="rgb(237,202,41)" fg:x="858" fg:w="1"/><text x="69.7800%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.5300%" y="405" width="0.0810%" height="15" fill="rgb(209,14,29)" fg:x="858" fg:w="1"/><text x="69.7800%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.6110%" y="501" width="0.0810%" height="15" fill="rgb(219,29,3)" fg:x="859" fg:w="1"/><text x="69.8610%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.6110%" y="485" width="0.0810%" height="15" fill="rgb(229,13,49)" fg:x="859" fg:w="1"/><text x="69.8610%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="69.5300%" y="629" width="0.2431%" height="15" fill="rgb(210,206,2)" fg:x="858" fg:w="3"/><text x="69.7800%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="69.5300%" y="613" width="0.2431%" height="15" fill="rgb(216,154,46)" fg:x="858" fg:w="3"/><text x="69.7800%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="69.6110%" y="597" width="0.1621%" height="15" fill="rgb(211,170,52)" fg:x="859" fg:w="2"/><text x="69.8610%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="69.6110%" y="581" width="0.1621%" height="15" fill="rgb(233,109,47)" fg:x="859" fg:w="2"/><text x="69.8610%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="69.6110%" y="565" width="0.1621%" height="15" fill="rgb(208,212,30)" fg:x="859" fg:w="2"/><text x="69.8610%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="69.6110%" y="549" width="0.1621%" height="15" fill="rgb(215,190,19)" fg:x="859" fg:w="2"/><text x="69.8610%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="69.6110%" y="533" width="0.1621%" height="15" fill="rgb(207,164,53)" fg:x="859" fg:w="2"/><text x="69.8610%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="69.6110%" y="517" width="0.1621%" height="15" fill="rgb(213,87,49)" fg:x="859" fg:w="2"/><text x="69.8610%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.6921%" y="501" width="0.0810%" height="15" fill="rgb(241,216,24)" fg:x="860" fg:w="1"/><text x="69.9421%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.6921%" y="485" width="0.0810%" height="15" fill="rgb(241,123,45)" fg:x="860" fg:w="1"/><text x="69.9421%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.6921%" y="469" width="0.0810%" height="15" fill="rgb(220,36,15)" fg:x="860" fg:w="1"/><text x="69.9421%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.6921%" y="453" width="0.0810%" height="15" fill="rgb(215,202,9)" fg:x="860" fg:w="1"/><text x="69.9421%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.73%)</title><rect x="69.1248%" y="709" width="0.7293%" height="15" fill="rgb(252,71,26)" fg:x="853" fg:w="9"/><text x="69.3748%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.73%)</title><rect x="69.1248%" y="693" width="0.7293%" height="15" fill="rgb(243,195,19)" fg:x="853" fg:w="9"/><text x="69.3748%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (9 samples, 0.73%)</title><rect x="69.1248%" y="677" width="0.7293%" height="15" fill="rgb(207,167,27)" fg:x="853" fg:w="9"/><text x="69.3748%" y="687.50"></text></g><g><title>plugins_core::build::Build::leads_to (8 samples, 0.65%)</title><rect x="69.2058%" y="661" width="0.6483%" height="15" fill="rgb(250,146,54)" fg:x="854" fg:w="8"/><text x="69.4558%" y="671.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="69.5300%" y="645" width="0.3241%" height="15" fill="rgb(245,79,9)" fg:x="858" fg:w="4"/><text x="69.7800%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="69.7731%" y="629" width="0.0810%" height="15" fill="rgb(234,197,22)" fg:x="861" fg:w="1"/><text x="70.0231%" y="639.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="69.7731%" y="613" width="0.0810%" height="15" fill="rgb(221,52,48)" fg:x="861" fg:w="1"/><text x="70.0231%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="69.7731%" y="597" width="0.0810%" height="15" fill="rgb(235,80,0)" fg:x="861" fg:w="1"/><text x="70.0231%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="69.7731%" y="581" width="0.0810%" height="15" fill="rgb(221,117,53)" fg:x="861" fg:w="1"/><text x="70.0231%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="69.7731%" y="565" width="0.0810%" height="15" fill="rgb(239,48,47)" fg:x="861" fg:w="1"/><text x="70.0231%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="69.8541%" y="693" width="0.1621%" height="15" fill="rgb(227,191,52)" fg:x="862" fg:w="2"/><text x="70.1041%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.9352%" y="677" width="0.0810%" height="15" fill="rgb(241,118,1)" fg:x="863" fg:w="1"/><text x="70.1852%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="70.1783%" y="597" width="0.0810%" height="15" fill="rgb(240,85,3)" fg:x="866" fg:w="1"/><text x="70.4283%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.1783%" y="581" width="0.0810%" height="15" fill="rgb(237,68,37)" fg:x="866" fg:w="1"/><text x="70.4283%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="70.1783%" y="565" width="0.0810%" height="15" fill="rgb(212,9,20)" fg:x="866" fg:w="1"/><text x="70.4283%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.1783%" y="549" width="0.0810%" height="15" fill="rgb(218,84,17)" fg:x="866" fg:w="1"/><text x="70.4283%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="70.2593%" y="581" width="0.1621%" height="15" fill="rgb(235,147,20)" fg:x="867" fg:w="2"/><text x="70.5093%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.3404%" y="565" width="0.0810%" height="15" fill="rgb(208,224,1)" fg:x="868" fg:w="1"/><text x="70.5904%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="70.3404%" y="549" width="0.0810%" height="15" fill="rgb(232,97,50)" fg:x="868" fg:w="1"/><text x="70.5904%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.3404%" y="533" width="0.0810%" height="15" fill="rgb(238,15,45)" fg:x="868" fg:w="1"/><text x="70.5904%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="70.3404%" y="517" width="0.0810%" height="15" fill="rgb(231,46,18)" fg:x="868" fg:w="1"/><text x="70.5904%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.3404%" y="501" width="0.0810%" height="15" fill="rgb(254,169,10)" fg:x="868" fg:w="1"/><text x="70.5904%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="70.3404%" y="485" width="0.0810%" height="15" fill="rgb(243,169,30)" fg:x="868" fg:w="1"/><text x="70.5904%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="70.4214%" y="533" width="0.0810%" height="15" fill="rgb(236,90,49)" fg:x="869" fg:w="1"/><text x="70.6714%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="70.4214%" y="517" width="0.0810%" height="15" fill="rgb(218,80,15)" fg:x="869" fg:w="1"/><text x="70.6714%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.4214%" y="501" width="0.0810%" height="15" fill="rgb(222,115,37)" fg:x="869" fg:w="1"/><text x="70.6714%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="70.4214%" y="485" width="0.0810%" height="15" fill="rgb(227,0,6)" fg:x="869" fg:w="1"/><text x="70.6714%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="70.4214%" y="565" width="0.1621%" height="15" fill="rgb(217,189,13)" fg:x="869" fg:w="2"/><text x="70.6714%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="70.4214%" y="549" width="0.1621%" height="15" fill="rgb(220,74,19)" fg:x="869" fg:w="2"/><text x="70.6714%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.5024%" y="533" width="0.0810%" height="15" fill="rgb(224,81,18)" fg:x="870" fg:w="1"/><text x="70.7524%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="70.5024%" y="517" width="0.0810%" height="15" fill="rgb(245,178,48)" fg:x="870" fg:w="1"/><text x="70.7524%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.5024%" y="501" width="0.0810%" height="15" fill="rgb(207,78,24)" fg:x="870" fg:w="1"/><text x="70.7524%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="70.5835%" y="565" width="0.0810%" height="15" fill="rgb(223,222,30)" fg:x="871" fg:w="1"/><text x="70.8335%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.5835%" y="549" width="0.0810%" height="15" fill="rgb(234,101,12)" fg:x="871" fg:w="1"/><text x="70.8335%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="70.7455%" y="549" width="0.1621%" height="15" fill="rgb(209,80,46)" fg:x="873" fg:w="2"/><text x="70.9955%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="70.7455%" y="533" width="0.1621%" height="15" fill="rgb(228,79,14)" fg:x="873" fg:w="2"/><text x="70.9955%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="70.8266%" y="517" width="0.0810%" height="15" fill="rgb(220,219,34)" fg:x="874" fg:w="1"/><text x="71.0766%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.8266%" y="501" width="0.0810%" height="15" fill="rgb(207,80,21)" fg:x="874" fg:w="1"/><text x="71.0766%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="70.8266%" y="485" width="0.0810%" height="15" fill="rgb(210,154,44)" fg:x="874" fg:w="1"/><text x="71.0766%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.8266%" y="469" width="0.0810%" height="15" fill="rgb(246,44,39)" fg:x="874" fg:w="1"/><text x="71.0766%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.97%)</title><rect x="70.0162%" y="613" width="0.9724%" height="15" fill="rgb(252,175,13)" fg:x="864" fg:w="12"/><text x="70.2662%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="70.2593%" y="597" width="0.7293%" height="15" fill="rgb(211,50,39)" fg:x="867" fg:w="9"/><text x="70.5093%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="70.4214%" y="581" width="0.5673%" height="15" fill="rgb(231,204,27)" fg:x="869" fg:w="7"/><text x="70.6714%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="70.6645%" y="565" width="0.3241%" height="15" fill="rgb(253,26,34)" fg:x="872" fg:w="4"/><text x="70.9145%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="70.9076%" y="549" width="0.0810%" height="15" fill="rgb(207,139,38)" fg:x="875" fg:w="1"/><text x="71.1576%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.9887%" y="565" width="0.0810%" height="15" fill="rgb(248,54,27)" fg:x="876" fg:w="1"/><text x="71.2387%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.9887%" y="613" width="0.1621%" height="15" fill="rgb(234,25,33)" fg:x="876" fg:w="2"/><text x="71.2387%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="70.9887%" y="597" width="0.1621%" height="15" fill="rgb(249,107,47)" fg:x="876" fg:w="2"/><text x="71.2387%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.9887%" y="581" width="0.1621%" height="15" fill="rgb(230,190,31)" fg:x="876" fg:w="2"/><text x="71.2387%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.0697%" y="565" width="0.0810%" height="15" fill="rgb(238,173,45)" fg:x="877" fg:w="1"/><text x="71.3197%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.0697%" y="549" width="0.0810%" height="15" fill="rgb(222,16,50)" fg:x="877" fg:w="1"/><text x="71.3197%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.2318%" y="517" width="0.0810%" height="15" fill="rgb(251,204,47)" fg:x="879" fg:w="1"/><text x="71.4818%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.2318%" y="501" width="0.0810%" height="15" fill="rgb(225,12,3)" fg:x="879" fg:w="1"/><text x="71.4818%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.2318%" y="485" width="0.0810%" height="15" fill="rgb(214,208,22)" fg:x="879" fg:w="1"/><text x="71.4818%" y="495.50"></text></g><g><title>engine::session::Session::flush (20 samples, 1.62%)</title><rect x="69.8541%" y="709" width="1.6207%" height="15" fill="rgb(240,57,32)" fg:x="862" fg:w="20"/><text x="70.1041%" y="719.50"></text></g><g><title>engine::session::Session::save_changes (18 samples, 1.46%)</title><rect x="70.0162%" y="693" width="1.4587%" height="15" fill="rgb(243,113,48)" fg:x="864" fg:w="18"/><text x="70.2662%" y="703.50"></text></g><g><title>engine::session::state::State::close (18 samples, 1.46%)</title><rect x="70.0162%" y="677" width="1.4587%" height="15" fill="rgb(225,135,30)" fg:x="864" fg:w="18"/><text x="70.2662%" y="687.50"></text></g><g><title>engine::session::state::State::flush_entities (18 samples, 1.46%)</title><rect x="70.0162%" y="661" width="1.4587%" height="15" fill="rgb(222,3,53)" fg:x="864" fg:w="18"/><text x="70.2662%" y="671.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (18 samples, 1.46%)</title><rect x="70.0162%" y="645" width="1.4587%" height="15" fill="rgb(243,142,2)" fg:x="864" fg:w="18"/><text x="70.2662%" y="655.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (18 samples, 1.46%)</title><rect x="70.0162%" y="629" width="1.4587%" height="15" fill="rgb(233,67,14)" fg:x="864" fg:w="18"/><text x="70.2662%" y="639.50"></text></g><g><title>kernel::model::any_entity_changes (4 samples, 0.32%)</title><rect x="71.1507%" y="613" width="0.3241%" height="15" fill="rgb(245,125,36)" fg:x="878" fg:w="4"/><text x="71.4007%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="71.1507%" y="597" width="0.3241%" height="15" fill="rgb(225,199,6)" fg:x="878" fg:w="4"/><text x="71.4007%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="71.1507%" y="581" width="0.3241%" height="15" fill="rgb(244,71,6)" fg:x="878" fg:w="4"/><text x="71.4007%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="71.2318%" y="565" width="0.2431%" height="15" fill="rgb(225,62,9)" fg:x="879" fg:w="3"/><text x="71.4818%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="71.2318%" y="549" width="0.2431%" height="15" fill="rgb(246,139,53)" fg:x="879" fg:w="3"/><text x="71.4818%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="71.2318%" y="533" width="0.2431%" height="15" fill="rgb(243,161,46)" fg:x="879" fg:w="3"/><text x="71.4818%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="71.3128%" y="517" width="0.1621%" height="15" fill="rgb(236,153,7)" fg:x="880" fg:w="2"/><text x="71.5628%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="71.3128%" y="501" width="0.1621%" height="15" fill="rgb(248,42,35)" fg:x="880" fg:w="2"/><text x="71.5628%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="71.3938%" y="485" width="0.0810%" height="15" fill="rgb(250,17,31)" fg:x="881" fg:w="1"/><text x="71.6438%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="71.3938%" y="469" width="0.0810%" height="15" fill="rgb(248,138,14)" fg:x="881" fg:w="1"/><text x="71.6438%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="71.3938%" y="453" width="0.0810%" height="15" fill="rgb(228,161,3)" fg:x="881" fg:w="1"/><text x="71.6438%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3938%" y="437" width="0.0810%" height="15" fill="rgb(248,116,17)" fg:x="881" fg:w="1"/><text x="71.6438%" y="447.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="71.4749%" y="709" width="0.0810%" height="15" fill="rgb(207,78,24)" fg:x="882" fg:w="1"/><text x="71.7249%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="71.4749%" y="693" width="0.0810%" height="15" fill="rgb(234,99,48)" fg:x="882" fg:w="1"/><text x="71.7249%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.4749%" y="677" width="0.0810%" height="15" fill="rgb(242,22,26)" fg:x="882" fg:w="1"/><text x="71.7249%" y="687.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="71.5559%" y="661" width="0.0810%" height="15" fill="rgb(227,78,32)" fg:x="883" fg:w="1"/><text x="71.8059%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.5559%" y="645" width="0.0810%" height="15" fill="rgb(226,189,43)" fg:x="883" fg:w="1"/><text x="71.8059%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="71.6370%" y="613" width="0.1621%" height="15" fill="rgb(227,218,35)" fg:x="884" fg:w="2"/><text x="71.8870%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.7180%" y="597" width="0.0810%" height="15" fill="rgb(206,111,40)" fg:x="885" fg:w="1"/><text x="71.9680%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.7180%" y="581" width="0.0810%" height="15" fill="rgb(208,217,22)" fg:x="885" fg:w="1"/><text x="71.9680%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="71.5559%" y="677" width="0.3241%" height="15" fill="rgb(248,20,20)" fg:x="883" fg:w="4"/><text x="71.8059%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="71.6370%" y="661" width="0.2431%" height="15" fill="rgb(239,155,16)" fg:x="884" fg:w="3"/><text x="71.8870%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="71.6370%" y="645" width="0.2431%" height="15" fill="rgb(238,171,46)" fg:x="884" fg:w="3"/><text x="71.8870%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="71.6370%" y="629" width="0.2431%" height="15" fill="rgb(248,11,36)" fg:x="884" fg:w="3"/><text x="71.8870%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.7990%" y="613" width="0.0810%" height="15" fill="rgb(220,148,37)" fg:x="886" fg:w="1"/><text x="72.0490%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="71.5559%" y="693" width="0.4052%" height="15" fill="rgb(218,144,42)" fg:x="883" fg:w="5"/><text x="71.8059%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="71.8801%" y="677" width="0.0810%" height="15" fill="rgb(245,20,20)" fg:x="887" fg:w="1"/><text x="72.1301%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="71.8801%" y="661" width="0.0810%" height="15" fill="rgb(240,111,48)" fg:x="887" fg:w="1"/><text x="72.1301%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="71.8801%" y="645" width="0.0810%" height="15" fill="rgb(237,225,32)" fg:x="887" fg:w="1"/><text x="72.1301%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="71.8801%" y="629" width="0.0810%" height="15" fill="rgb(228,161,46)" fg:x="887" fg:w="1"/><text x="72.1301%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="71.8801%" y="613" width="0.0810%" height="15" fill="rgb(235,196,21)" fg:x="887" fg:w="1"/><text x="72.1301%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.8801%" y="597" width="0.0810%" height="15" fill="rgb(250,133,21)" fg:x="887" fg:w="1"/><text x="72.1301%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.8801%" y="581" width="0.0810%" height="15" fill="rgb(236,94,32)" fg:x="887" fg:w="1"/><text x="72.1301%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="71.9611%" y="677" width="0.1621%" height="15" fill="rgb(219,176,25)" fg:x="888" fg:w="2"/><text x="72.2111%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="72.0421%" y="661" width="0.0810%" height="15" fill="rgb(211,17,43)" fg:x="889" fg:w="1"/><text x="72.2921%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0421%" y="645" width="0.0810%" height="15" fill="rgb(220,75,23)" fg:x="889" fg:w="1"/><text x="72.2921%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1232%" y="565" width="0.0810%" height="15" fill="rgb(215,122,32)" fg:x="890" fg:w="1"/><text x="72.3732%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1232%" y="549" width="0.0810%" height="15" fill="rgb(218,57,38)" fg:x="890" fg:w="1"/><text x="72.3732%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1232%" y="533" width="0.0810%" height="15" fill="rgb(233,208,46)" fg:x="890" fg:w="1"/><text x="72.3732%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="72.1232%" y="645" width="0.1621%" height="15" fill="rgb(221,35,50)" fg:x="890" fg:w="2"/><text x="72.3732%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="72.1232%" y="629" width="0.1621%" height="15" fill="rgb(229,213,29)" fg:x="890" fg:w="2"/><text x="72.3732%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="72.1232%" y="613" width="0.1621%" height="15" fill="rgb(229,110,40)" fg:x="890" fg:w="2"/><text x="72.3732%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.1232%" y="597" width="0.1621%" height="15" fill="rgb(247,206,19)" fg:x="890" fg:w="2"/><text x="72.3732%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="72.1232%" y="581" width="0.1621%" height="15" fill="rgb(216,229,45)" fg:x="890" fg:w="2"/><text x="72.3732%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.2042%" y="565" width="0.0810%" height="15" fill="rgb(205,184,31)" fg:x="891" fg:w="1"/><text x="72.4542%" y="575.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="72.1232%" y="677" width="0.2431%" height="15" fill="rgb(213,91,10)" fg:x="890" fg:w="3"/><text x="72.3732%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="72.1232%" y="661" width="0.2431%" height="15" fill="rgb(250,49,8)" fg:x="890" fg:w="3"/><text x="72.3732%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="72.2853%" y="645" width="0.0810%" height="15" fill="rgb(207,26,8)" fg:x="892" fg:w="1"/><text x="72.5353%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="72.2853%" y="629" width="0.0810%" height="15" fill="rgb(224,2,13)" fg:x="892" fg:w="1"/><text x="72.5353%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.2853%" y="613" width="0.0810%" height="15" fill="rgb(219,108,27)" fg:x="892" fg:w="1"/><text x="72.5353%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.2853%" y="597" width="0.0810%" height="15" fill="rgb(240,89,32)" fg:x="892" fg:w="1"/><text x="72.5353%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.2853%" y="581" width="0.0810%" height="15" fill="rgb(248,205,3)" fg:x="892" fg:w="1"/><text x="72.5353%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.2853%" y="565" width="0.0810%" height="15" fill="rgb(236,197,47)" fg:x="892" fg:w="1"/><text x="72.5353%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.2853%" y="549" width="0.0810%" height="15" fill="rgb(244,185,52)" fg:x="892" fg:w="1"/><text x="72.5353%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.2853%" y="533" width="0.0810%" height="15" fill="rgb(210,206,23)" fg:x="892" fg:w="1"/><text x="72.5353%" y="543.50"></text></g><g><title>plugins_core::build::Build::holding (11 samples, 0.89%)</title><rect x="71.5559%" y="709" width="0.8914%" height="15" fill="rgb(251,177,30)" fg:x="883" fg:w="11"/><text x="71.8059%" y="719.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.49%)</title><rect x="71.9611%" y="693" width="0.4862%" height="15" fill="rgb(243,27,45)" fg:x="888" fg:w="6"/><text x="72.2111%" y="703.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="72.3663%" y="677" width="0.0810%" height="15" fill="rgb(248,141,51)" fg:x="893" fg:w="1"/><text x="72.6163%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="72.3663%" y="661" width="0.0810%" height="15" fill="rgb(235,102,15)" fg:x="893" fg:w="1"/><text x="72.6163%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="72.3663%" y="645" width="0.0810%" height="15" fill="rgb(214,164,53)" fg:x="893" fg:w="1"/><text x="72.6163%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="72.3663%" y="629" width="0.0810%" height="15" fill="rgb(228,18,51)" fg:x="893" fg:w="1"/><text x="72.6163%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="72.3663%" y="613" width="0.0810%" height="15" fill="rgb(205,211,11)" fg:x="893" fg:w="1"/><text x="72.6163%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.3663%" y="597" width="0.0810%" height="15" fill="rgb(208,63,6)" fg:x="893" fg:w="1"/><text x="72.6163%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.3663%" y="581" width="0.0810%" height="15" fill="rgb(245,76,14)" fg:x="893" fg:w="1"/><text x="72.6163%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3663%" y="565" width="0.0810%" height="15" fill="rgb(234,176,34)" fg:x="893" fg:w="1"/><text x="72.6163%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.3663%" y="549" width="0.0810%" height="15" fill="rgb(243,156,42)" fg:x="893" fg:w="1"/><text x="72.6163%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3663%" y="533" width="0.0810%" height="15" fill="rgb(237,182,10)" fg:x="893" fg:w="1"/><text x="72.6163%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.3663%" y="517" width="0.0810%" height="15" fill="rgb(244,117,0)" fg:x="893" fg:w="1"/><text x="72.6163%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3663%" y="501" width="0.0810%" height="15" fill="rgb(239,91,50)" fg:x="893" fg:w="1"/><text x="72.6163%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.3663%" y="485" width="0.0810%" height="15" fill="rgb(206,38,9)" fg:x="893" fg:w="1"/><text x="72.6163%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3663%" y="469" width="0.0810%" height="15" fill="rgb(205,25,10)" fg:x="893" fg:w="1"/><text x="72.6163%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="72.4473%" y="709" width="0.0810%" height="15" fill="rgb(206,224,7)" fg:x="894" fg:w="1"/><text x="72.6973%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="72.4473%" y="693" width="0.0810%" height="15" fill="rgb(227,157,10)" fg:x="894" fg:w="1"/><text x="72.6973%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="72.4473%" y="677" width="0.0810%" height="15" fill="rgb(214,157,37)" fg:x="894" fg:w="1"/><text x="72.6973%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="72.4473%" y="661" width="0.0810%" height="15" fill="rgb(209,180,35)" fg:x="894" fg:w="1"/><text x="72.6973%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.5284%" y="533" width="0.0810%" height="15" fill="rgb(216,174,49)" fg:x="895" fg:w="1"/><text x="72.7784%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.5284%" y="517" width="0.0810%" height="15" fill="rgb(205,96,20)" fg:x="895" fg:w="1"/><text x="72.7784%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="72.5284%" y="501" width="0.0810%" height="15" fill="rgb(214,220,39)" fg:x="895" fg:w="1"/><text x="72.7784%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="72.5284%" y="485" width="0.0810%" height="15" fill="rgb(245,126,30)" fg:x="895" fg:w="1"/><text x="72.7784%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="72.5284%" y="469" width="0.0810%" height="15" fill="rgb(215,88,33)" fg:x="895" fg:w="1"/><text x="72.7784%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="72.5284%" y="453" width="0.0810%" height="15" fill="rgb(210,1,49)" fg:x="895" fg:w="1"/><text x="72.7784%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.5284%" y="437" width="0.0810%" height="15" fill="rgb(207,133,3)" fg:x="895" fg:w="1"/><text x="72.7784%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="72.5284%" y="677" width="0.1621%" height="15" fill="rgb(231,47,43)" fg:x="895" fg:w="2"/><text x="72.7784%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="72.5284%" y="661" width="0.1621%" height="15" fill="rgb(245,64,1)" fg:x="895" fg:w="2"/><text x="72.7784%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="72.5284%" y="645" width="0.1621%" height="15" fill="rgb(253,145,20)" fg:x="895" fg:w="2"/><text x="72.7784%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="72.5284%" y="629" width="0.1621%" height="15" fill="rgb(211,39,18)" fg:x="895" fg:w="2"/><text x="72.7784%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="72.5284%" y="613" width="0.1621%" height="15" fill="rgb(223,225,18)" fg:x="895" fg:w="2"/><text x="72.7784%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="72.5284%" y="597" width="0.1621%" height="15" fill="rgb(210,202,44)" fg:x="895" fg:w="2"/><text x="72.7784%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="72.5284%" y="581" width="0.1621%" height="15" fill="rgb(231,138,36)" fg:x="895" fg:w="2"/><text x="72.7784%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="72.5284%" y="565" width="0.1621%" height="15" fill="rgb(237,115,25)" fg:x="895" fg:w="2"/><text x="72.7784%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="72.5284%" y="549" width="0.1621%" height="15" fill="rgb(215,53,48)" fg:x="895" fg:w="2"/><text x="72.7784%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.6094%" y="533" width="0.0810%" height="15" fill="rgb(243,193,24)" fg:x="896" fg:w="1"/><text x="72.8594%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="72.6094%" y="517" width="0.0810%" height="15" fill="rgb(210,106,28)" fg:x="896" fg:w="1"/><text x="72.8594%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="72.6094%" y="501" width="0.0810%" height="15" fill="rgb(249,192,0)" fg:x="896" fg:w="1"/><text x="72.8594%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.6094%" y="485" width="0.0810%" height="15" fill="rgb(224,96,21)" fg:x="896" fg:w="1"/><text x="72.8594%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.6094%" y="469" width="0.0810%" height="15" fill="rgb(243,160,19)" fg:x="896" fg:w="1"/><text x="72.8594%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.6094%" y="453" width="0.0810%" height="15" fill="rgb(219,205,50)" fg:x="896" fg:w="1"/><text x="72.8594%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.6094%" y="437" width="0.0810%" height="15" fill="rgb(218,175,44)" fg:x="896" fg:w="1"/><text x="72.8594%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="72.6094%" y="421" width="0.0810%" height="15" fill="rgb(251,84,47)" fg:x="896" fg:w="1"/><text x="72.8594%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="72.6094%" y="405" width="0.0810%" height="15" fill="rgb(241,14,16)" fg:x="896" fg:w="1"/><text x="72.8594%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="72.6094%" y="389" width="0.0810%" height="15" fill="rgb(207,142,28)" fg:x="896" fg:w="1"/><text x="72.8594%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="72.6094%" y="373" width="0.0810%" height="15" fill="rgb(208,116,22)" fg:x="896" fg:w="1"/><text x="72.8594%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="72.6094%" y="357" width="0.0810%" height="15" fill="rgb(210,0,43)" fg:x="896" fg:w="1"/><text x="72.8594%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="72.6094%" y="341" width="0.0810%" height="15" fill="rgb(246,33,21)" fg:x="896" fg:w="1"/><text x="72.8594%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="72.6094%" y="325" width="0.0810%" height="15" fill="rgb(208,158,54)" fg:x="896" fg:w="1"/><text x="72.8594%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="72.6094%" y="309" width="0.0810%" height="15" fill="rgb(218,99,29)" fg:x="896" fg:w="1"/><text x="72.8594%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.6094%" y="293" width="0.0810%" height="15" fill="rgb(226,29,7)" fg:x="896" fg:w="1"/><text x="72.8594%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="72.6094%" y="277" width="0.0810%" height="15" fill="rgb(206,178,46)" fg:x="896" fg:w="1"/><text x="72.8594%" y="287.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="72.6904%" y="677" width="0.0810%" height="15" fill="rgb(205,169,32)" fg:x="897" fg:w="1"/><text x="72.9404%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="72.6904%" y="661" width="0.0810%" height="15" fill="rgb(217,4,13)" fg:x="897" fg:w="1"/><text x="72.9404%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.6904%" y="645" width="0.0810%" height="15" fill="rgb(210,140,37)" fg:x="897" fg:w="1"/><text x="72.9404%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.8525%" y="645" width="0.0810%" height="15" fill="rgb(229,80,10)" fg:x="899" fg:w="1"/><text x="73.1025%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.49%)</title><rect x="72.5284%" y="693" width="0.4862%" height="15" fill="rgb(212,175,34)" fg:x="895" fg:w="6"/><text x="72.7784%" y="703.50"></text></g><g><title>engine::identifiers::model::set_gid (3 samples, 0.24%)</title><rect x="72.7715%" y="677" width="0.2431%" height="15" fill="rgb(216,207,24)" fg:x="898" fg:w="3"/><text x="73.0215%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="72.7715%" y="661" width="0.2431%" height="15" fill="rgb(234,163,3)" fg:x="898" fg:w="3"/><text x="73.0215%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.9335%" y="645" width="0.0810%" height="15" fill="rgb(248,101,16)" fg:x="900" fg:w="1"/><text x="73.1835%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.9335%" y="629" width="0.0810%" height="15" fill="rgb(209,152,54)" fg:x="900" fg:w="1"/><text x="73.1835%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="72.9335%" y="613" width="0.0810%" height="15" fill="rgb(229,124,51)" fg:x="900" fg:w="1"/><text x="73.1835%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="73.0146%" y="677" width="0.2431%" height="15" fill="rgb(219,83,18)" fg:x="901" fg:w="3"/><text x="73.2646%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="73.0146%" y="661" width="0.2431%" height="15" fill="rgb(206,29,38)" fg:x="901" fg:w="3"/><text x="73.2646%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="73.0146%" y="645" width="0.2431%" height="15" fill="rgb(245,123,23)" fg:x="901" fg:w="3"/><text x="73.2646%" y="655.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="73.0146%" y="629" width="0.2431%" height="15" fill="rgb(238,50,33)" fg:x="901" fg:w="3"/><text x="73.2646%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="73.0146%" y="613" width="0.2431%" height="15" fill="rgb(234,165,23)" fg:x="901" fg:w="3"/><text x="73.2646%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="73.0146%" y="597" width="0.2431%" height="15" fill="rgb(211,82,31)" fg:x="901" fg:w="3"/><text x="73.2646%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.1767%" y="581" width="0.0810%" height="15" fill="rgb(224,166,46)" fg:x="903" fg:w="1"/><text x="73.4267%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.1767%" y="565" width="0.0810%" height="15" fill="rgb(211,13,8)" fg:x="903" fg:w="1"/><text x="73.4267%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1767%" y="549" width="0.0810%" height="15" fill="rgb(212,7,42)" fg:x="903" fg:w="1"/><text x="73.4267%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1767%" y="533" width="0.0810%" height="15" fill="rgb(249,102,19)" fg:x="903" fg:w="1"/><text x="73.4267%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.1767%" y="517" width="0.0810%" height="15" fill="rgb(225,41,13)" fg:x="903" fg:w="1"/><text x="73.4267%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.1767%" y="501" width="0.0810%" height="15" fill="rgb(220,65,27)" fg:x="903" fg:w="1"/><text x="73.4267%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.1767%" y="485" width="0.0810%" height="15" fill="rgb(206,4,41)" fg:x="903" fg:w="1"/><text x="73.4267%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1767%" y="469" width="0.0810%" height="15" fill="rgb(219,60,39)" fg:x="903" fg:w="1"/><text x="73.4267%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1767%" y="453" width="0.0810%" height="15" fill="rgb(226,4,38)" fg:x="903" fg:w="1"/><text x="73.4267%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.1767%" y="437" width="0.0810%" height="15" fill="rgb(250,52,3)" fg:x="903" fg:w="1"/><text x="73.4267%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.1767%" y="421" width="0.0810%" height="15" fill="rgb(234,93,0)" fg:x="903" fg:w="1"/><text x="73.4267%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.1767%" y="405" width="0.0810%" height="15" fill="rgb(251,47,47)" fg:x="903" fg:w="1"/><text x="73.4267%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.1767%" y="389" width="0.0810%" height="15" fill="rgb(205,166,47)" fg:x="903" fg:w="1"/><text x="73.4267%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.1767%" y="373" width="0.0810%" height="15" fill="rgb(231,148,8)" fg:x="903" fg:w="1"/><text x="73.4267%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="73.2577%" y="677" width="0.0810%" height="15" fill="rgb(244,185,19)" fg:x="904" fg:w="1"/><text x="73.5077%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.2577%" y="661" width="0.0810%" height="15" fill="rgb(224,201,45)" fg:x="904" fg:w="1"/><text x="73.5077%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.3387%" y="629" width="0.0810%" height="15" fill="rgb(240,77,39)" fg:x="905" fg:w="1"/><text x="73.5887%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.3387%" y="613" width="0.0810%" height="15" fill="rgb(248,211,29)" fg:x="905" fg:w="1"/><text x="73.5887%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (55 samples, 4.46%)</title><rect x="69.0438%" y="725" width="4.4571%" height="15" fill="rgb(232,214,46)" fg:x="852" fg:w="55"/><text x="69.2938%" y="735.50">plugi..</text></g><g><title>plugins_core::build::Build::occupying (12 samples, 0.97%)</title><rect x="72.5284%" y="709" width="0.9724%" height="15" fill="rgb(213,99,54)" fg:x="895" fg:w="12"/><text x="72.7784%" y="719.50"></text></g><g><title>plugins_core::tools::set_occupying (6 samples, 0.49%)</title><rect x="73.0146%" y="693" width="0.4862%" height="15" fill="rgb(240,19,46)" fg:x="901" fg:w="6"/><text x="73.2646%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="73.3387%" y="677" width="0.1621%" height="15" fill="rgb(243,89,10)" fg:x="905" fg:w="2"/><text x="73.5887%" y="687.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="73.3387%" y="661" width="0.1621%" height="15" fill="rgb(249,28,32)" fg:x="905" fg:w="2"/><text x="73.5887%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="73.3387%" y="645" width="0.1621%" height="15" fill="rgb(253,30,9)" fg:x="905" fg:w="2"/><text x="73.5887%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.4198%" y="629" width="0.0810%" height="15" fill="rgb(217,2,26)" fg:x="906" fg:w="1"/><text x="73.6698%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="73.4198%" y="613" width="0.0810%" height="15" fill="rgb(220,28,10)" fg:x="906" fg:w="1"/><text x="73.6698%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.4198%" y="597" width="0.0810%" height="15" fill="rgb(228,167,49)" fg:x="906" fg:w="1"/><text x="73.6698%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.4198%" y="581" width="0.0810%" height="15" fill="rgb(238,212,3)" fg:x="906" fg:w="1"/><text x="73.6698%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="73.5008%" y="677" width="0.1621%" height="15" fill="rgb(229,134,44)" fg:x="907" fg:w="2"/><text x="73.7508%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="73.5008%" y="661" width="0.1621%" height="15" fill="rgb(208,71,4)" fg:x="907" fg:w="2"/><text x="73.7508%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="73.5008%" y="645" width="0.1621%" height="15" fill="rgb(221,205,45)" fg:x="907" fg:w="2"/><text x="73.7508%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="73.5008%" y="629" width="0.1621%" height="15" fill="rgb(215,132,38)" fg:x="907" fg:w="2"/><text x="73.7508%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="73.5008%" y="613" width="0.1621%" height="15" fill="rgb(227,158,6)" fg:x="907" fg:w="2"/><text x="73.7508%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="73.5008%" y="597" width="0.1621%" height="15" fill="rgb(250,10,38)" fg:x="907" fg:w="2"/><text x="73.7508%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="73.5818%" y="581" width="0.0810%" height="15" fill="rgb(225,171,40)" fg:x="908" fg:w="1"/><text x="73.8318%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="73.5818%" y="565" width="0.0810%" height="15" fill="rgb(238,17,43)" fg:x="908" fg:w="1"/><text x="73.8318%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.5818%" y="549" width="0.0810%" height="15" fill="rgb(208,145,4)" fg:x="908" fg:w="1"/><text x="73.8318%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="73.5818%" y="533" width="0.0810%" height="15" fill="rgb(232,82,7)" fg:x="908" fg:w="1"/><text x="73.8318%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="73.5818%" y="517" width="0.0810%" height="15" fill="rgb(205,166,38)" fg:x="908" fg:w="1"/><text x="73.8318%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="73.5818%" y="501" width="0.0810%" height="15" fill="rgb(240,228,4)" fg:x="908" fg:w="1"/><text x="73.8318%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.5818%" y="485" width="0.0810%" height="15" fill="rgb(233,121,40)" fg:x="908" fg:w="1"/><text x="73.8318%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="73.5818%" y="469" width="0.0810%" height="15" fill="rgb(243,84,30)" fg:x="908" fg:w="1"/><text x="73.8318%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.5818%" y="453" width="0.0810%" height="15" fill="rgb(235,81,48)" fg:x="908" fg:w="1"/><text x="73.8318%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="73.6629%" y="677" width="0.0810%" height="15" fill="rgb(218,137,0)" fg:x="909" fg:w="1"/><text x="73.9129%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="73.6629%" y="661" width="0.0810%" height="15" fill="rgb(223,151,48)" fg:x="909" fg:w="1"/><text x="73.9129%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.6629%" y="645" width="0.0810%" height="15" fill="rgb(247,30,19)" fg:x="909" fg:w="1"/><text x="73.9129%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.6629%" y="629" width="0.0810%" height="15" fill="rgb(205,129,29)" fg:x="909" fg:w="1"/><text x="73.9129%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.6629%" y="613" width="0.0810%" height="15" fill="rgb(222,29,2)" fg:x="909" fg:w="1"/><text x="73.9129%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.6629%" y="597" width="0.0810%" height="15" fill="rgb(232,145,33)" fg:x="909" fg:w="1"/><text x="73.9129%" y="607.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="73.7439%" y="677" width="0.0810%" height="15" fill="rgb(217,30,31)" fg:x="910" fg:w="1"/><text x="73.9939%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.41%)</title><rect x="73.5008%" y="725" width="0.4052%" height="15" fill="rgb(243,22,52)" fg:x="907" fg:w="5"/><text x="73.7508%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.41%)</title><rect x="73.5008%" y="709" width="0.4052%" height="15" fill="rgb(254,228,14)" fg:x="907" fg:w="5"/><text x="73.7508%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.41%)</title><rect x="73.5008%" y="693" width="0.4052%" height="15" fill="rgb(231,45,50)" fg:x="907" fg:w="5"/><text x="73.7508%" y="703.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="73.8250%" y="677" width="0.0810%" height="15" fill="rgb(248,125,3)" fg:x="911" fg:w="1"/><text x="74.0750%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="73.8250%" y="661" width="0.0810%" height="15" fill="rgb(213,76,9)" fg:x="911" fg:w="1"/><text x="74.0750%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="73.9060%" y="693" width="0.1621%" height="15" fill="rgb(238,108,21)" fg:x="912" fg:w="2"/><text x="74.1560%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="73.9060%" y="677" width="0.1621%" height="15" fill="rgb(229,214,19)" fg:x="912" fg:w="2"/><text x="74.1560%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="73.9060%" y="661" width="0.1621%" height="15" fill="rgb(252,201,5)" fg:x="912" fg:w="2"/><text x="74.1560%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.9870%" y="645" width="0.0810%" height="15" fill="rgb(233,165,49)" fg:x="913" fg:w="1"/><text x="74.2370%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.9870%" y="629" width="0.0810%" height="15" fill="rgb(208,165,19)" fg:x="913" fg:w="1"/><text x="74.2370%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.9870%" y="613" width="0.0810%" height="15" fill="rgb(216,220,31)" fg:x="913" fg:w="1"/><text x="74.2370%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.9870%" y="597" width="0.0810%" height="15" fill="rgb(214,8,31)" fg:x="913" fg:w="1"/><text x="74.2370%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="74.0681%" y="661" width="0.0810%" height="15" fill="rgb(220,32,32)" fg:x="914" fg:w="1"/><text x="74.3181%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="74.0681%" y="645" width="0.0810%" height="15" fill="rgb(237,172,34)" fg:x="914" fg:w="1"/><text x="74.3181%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="74.0681%" y="629" width="0.0810%" height="15" fill="rgb(240,209,5)" fg:x="914" fg:w="1"/><text x="74.3181%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="74.0681%" y="613" width="0.0810%" height="15" fill="rgb(221,219,1)" fg:x="914" fg:w="1"/><text x="74.3181%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="74.0681%" y="597" width="0.0810%" height="15" fill="rgb(237,90,36)" fg:x="914" fg:w="1"/><text x="74.3181%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.0681%" y="581" width="0.0810%" height="15" fill="rgb(245,14,51)" fg:x="914" fg:w="1"/><text x="74.3181%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.0681%" y="565" width="0.0810%" height="15" fill="rgb(211,71,49)" fg:x="914" fg:w="1"/><text x="74.3181%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.0681%" y="549" width="0.0810%" height="15" fill="rgb(230,223,9)" fg:x="914" fg:w="1"/><text x="74.3181%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.0681%" y="533" width="0.0810%" height="15" fill="rgb(212,33,31)" fg:x="914" fg:w="1"/><text x="74.3181%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="73.9060%" y="709" width="0.3241%" height="15" fill="rgb(218,141,5)" fg:x="912" fg:w="4"/><text x="74.1560%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="74.0681%" y="693" width="0.1621%" height="15" fill="rgb(239,194,8)" fg:x="914" fg:w="2"/><text x="74.3181%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="74.0681%" y="677" width="0.1621%" height="15" fill="rgb(225,119,29)" fg:x="914" fg:w="2"/><text x="74.3181%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="74.1491%" y="661" width="0.0810%" height="15" fill="rgb(233,32,3)" fg:x="915" fg:w="1"/><text x="74.3991%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.1491%" y="645" width="0.0810%" height="15" fill="rgb(248,126,40)" fg:x="915" fg:w="1"/><text x="74.3991%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.1491%" y="629" width="0.0810%" height="15" fill="rgb(213,102,53)" fg:x="915" fg:w="1"/><text x="74.3991%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.1491%" y="613" width="0.0810%" height="15" fill="rgb(212,69,15)" fg:x="915" fg:w="1"/><text x="74.3991%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.1491%" y="597" width="0.0810%" height="15" fill="rgb(253,39,34)" fg:x="915" fg:w="1"/><text x="74.3991%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.1491%" y="581" width="0.0810%" height="15" fill="rgb(205,189,54)" fg:x="915" fg:w="1"/><text x="74.3991%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.1491%" y="565" width="0.0810%" height="15" fill="rgb(234,229,45)" fg:x="915" fg:w="1"/><text x="74.3991%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.1491%" y="549" width="0.0810%" height="15" fill="rgb(243,79,48)" fg:x="915" fg:w="1"/><text x="74.3991%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.1491%" y="533" width="0.0810%" height="15" fill="rgb(206,71,50)" fg:x="915" fg:w="1"/><text x="74.3991%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.1491%" y="517" width="0.0810%" height="15" fill="rgb(209,32,17)" fg:x="915" fg:w="1"/><text x="74.3991%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.1491%" y="501" width="0.0810%" height="15" fill="rgb(219,229,6)" fg:x="915" fg:w="1"/><text x="74.3991%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.1491%" y="485" width="0.0810%" height="15" fill="rgb(226,25,27)" fg:x="915" fg:w="1"/><text x="74.3991%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="74.1491%" y="469" width="0.0810%" height="15" fill="rgb(218,185,23)" fg:x="915" fg:w="1"/><text x="74.3991%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="74.1491%" y="453" width="0.0810%" height="15" fill="rgb(242,123,5)" fg:x="915" fg:w="1"/><text x="74.3991%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.2301%" y="645" width="0.0810%" height="15" fill="rgb(215,53,19)" fg:x="916" fg:w="1"/><text x="74.4801%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.2301%" y="629" width="0.0810%" height="15" fill="rgb(233,20,30)" fg:x="916" fg:w="1"/><text x="74.4801%" y="639.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (109 samples, 8.83%)</title><rect x="65.5592%" y="741" width="8.8331%" height="15" fill="rgb(209,67,20)" fg:x="809" fg:w="109"/><text x="65.8092%" y="751.50">&lt;tests::Hold..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (6 samples, 0.49%)</title><rect x="73.9060%" y="725" width="0.4862%" height="15" fill="rgb(227,181,50)" fg:x="912" fg:w="6"/><text x="74.1560%" y="735.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="74.2301%" y="709" width="0.1621%" height="15" fill="rgb(252,75,38)" fg:x="916" fg:w="2"/><text x="74.4801%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="74.2301%" y="693" width="0.1621%" height="15" fill="rgb(235,9,33)" fg:x="916" fg:w="2"/><text x="74.4801%" y="703.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="74.2301%" y="677" width="0.1621%" height="15" fill="rgb(208,87,30)" fg:x="916" fg:w="2"/><text x="74.4801%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="74.2301%" y="661" width="0.1621%" height="15" fill="rgb(215,199,39)" fg:x="916" fg:w="2"/><text x="74.4801%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="74.3112%" y="645" width="0.0810%" height="15" fill="rgb(246,208,12)" fg:x="917" fg:w="1"/><text x="74.5612%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.3112%" y="629" width="0.0810%" height="15" fill="rgb(206,195,10)" fg:x="917" fg:w="1"/><text x="74.5612%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="74.3112%" y="613" width="0.0810%" height="15" fill="rgb(244,1,30)" fg:x="917" fg:w="1"/><text x="74.5612%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.3112%" y="597" width="0.0810%" height="15" fill="rgb(230,83,5)" fg:x="917" fg:w="1"/><text x="74.5612%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="74.3112%" y="581" width="0.0810%" height="15" fill="rgb(239,62,17)" fg:x="917" fg:w="1"/><text x="74.5612%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="74.3112%" y="565" width="0.0810%" height="15" fill="rgb(252,193,41)" fg:x="917" fg:w="1"/><text x="74.5612%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.3112%" y="549" width="0.0810%" height="15" fill="rgb(216,142,19)" fg:x="917" fg:w="1"/><text x="74.5612%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3112%" y="533" width="0.0810%" height="15" fill="rgb(240,81,38)" fg:x="917" fg:w="1"/><text x="74.5612%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3112%" y="517" width="0.0810%" height="15" fill="rgb(240,109,40)" fg:x="917" fg:w="1"/><text x="74.5612%" y="527.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="74.3922%" y="725" width="0.1621%" height="15" fill="rgb(230,123,10)" fg:x="918" fg:w="2"/><text x="74.6422%" y="735.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="74.3922%" y="709" width="0.1621%" height="15" fill="rgb(253,42,32)" fg:x="918" fg:w="2"/><text x="74.6422%" y="719.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="74.3922%" y="693" width="0.1621%" height="15" fill="rgb(218,154,8)" fg:x="918" fg:w="2"/><text x="74.6422%" y="703.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="74.3922%" y="677" width="0.1621%" height="15" fill="rgb(216,197,10)" fg:x="918" fg:w="2"/><text x="74.6422%" y="687.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="74.3922%" y="661" width="0.1621%" height="15" fill="rgb(223,107,12)" fg:x="918" fg:w="2"/><text x="74.6422%" y="671.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="74.3922%" y="645" width="0.1621%" height="15" fill="rgb(241,174,42)" fg:x="918" fg:w="2"/><text x="74.6422%" y="655.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="74.3922%" y="629" width="0.1621%" height="15" fill="rgb(231,78,20)" fg:x="918" fg:w="2"/><text x="74.6422%" y="639.50"></text></g><g><title>getenv (2 samples, 0.16%)</title><rect x="74.3922%" y="613" width="0.1621%" height="15" fill="rgb(230,208,49)" fg:x="918" fg:w="2"/><text x="74.6422%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="74.5543%" y="693" width="0.0810%" height="15" fill="rgb(238,11,34)" fg:x="920" fg:w="1"/><text x="74.8043%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="74.5543%" y="677" width="0.0810%" height="15" fill="rgb(210,130,26)" fg:x="920" fg:w="1"/><text x="74.8043%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="74.5543%" y="661" width="0.0810%" height="15" fill="rgb(242,131,11)" fg:x="920" fg:w="1"/><text x="74.8043%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="74.5543%" y="645" width="0.0810%" height="15" fill="rgb(237,38,28)" fg:x="920" fg:w="1"/><text x="74.8043%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.5543%" y="629" width="0.0810%" height="15" fill="rgb(244,180,43)" fg:x="920" fg:w="1"/><text x="74.8043%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.5543%" y="613" width="0.0810%" height="15" fill="rgb(214,171,19)" fg:x="920" fg:w="1"/><text x="74.8043%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="74.5543%" y="597" width="0.0810%" height="15" fill="rgb(252,101,45)" fg:x="920" fg:w="1"/><text x="74.8043%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="74.5543%" y="581" width="0.0810%" height="15" fill="rgb(211,96,33)" fg:x="920" fg:w="1"/><text x="74.8043%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.5543%" y="565" width="0.0810%" height="15" fill="rgb(207,80,25)" fg:x="920" fg:w="1"/><text x="74.8043%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.5543%" y="549" width="0.0810%" height="15" fill="rgb(225,15,35)" fg:x="920" fg:w="1"/><text x="74.8043%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="74.5543%" y="533" width="0.0810%" height="15" fill="rgb(214,93,43)" fg:x="920" fg:w="1"/><text x="74.8043%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="74.5543%" y="517" width="0.0810%" height="15" fill="rgb(248,42,37)" fg:x="920" fg:w="1"/><text x="74.8043%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (2 samples, 0.16%)</title><rect x="74.5543%" y="709" width="0.1621%" height="15" fill="rgb(217,135,32)" fg:x="920" fg:w="2"/><text x="74.8043%" y="719.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (1 samples, 0.08%)</title><rect x="74.6353%" y="693" width="0.0810%" height="15" fill="rgb(216,74,28)" fg:x="921" fg:w="1"/><text x="74.8853%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="74.7164%" y="629" width="0.2431%" height="15" fill="rgb(247,108,16)" fg:x="922" fg:w="3"/><text x="74.9664%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="74.7164%" y="613" width="0.2431%" height="15" fill="rgb(205,219,30)" fg:x="922" fg:w="3"/><text x="74.9664%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="74.7974%" y="597" width="0.1621%" height="15" fill="rgb(241,122,9)" fg:x="923" fg:w="2"/><text x="75.0474%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.8784%" y="581" width="0.0810%" height="15" fill="rgb(216,148,50)" fg:x="924" fg:w="1"/><text x="75.1284%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="74.7164%" y="645" width="0.3241%" height="15" fill="rgb(226,154,2)" fg:x="922" fg:w="4"/><text x="74.9664%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.9595%" y="629" width="0.0810%" height="15" fill="rgb(220,128,1)" fg:x="925" fg:w="1"/><text x="75.2095%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.9595%" y="613" width="0.0810%" height="15" fill="rgb(245,185,29)" fg:x="925" fg:w="1"/><text x="75.2095%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.9595%" y="597" width="0.0810%" height="15" fill="rgb(243,161,2)" fg:x="925" fg:w="1"/><text x="75.2095%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.0405%" y="629" width="0.0810%" height="15" fill="rgb(249,215,17)" fg:x="926" fg:w="1"/><text x="75.2905%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.0405%" y="613" width="0.0810%" height="15" fill="rgb(237,67,11)" fg:x="926" fg:w="1"/><text x="75.2905%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="75.1216%" y="613" width="0.0810%" height="15" fill="rgb(239,17,24)" fg:x="927" fg:w="1"/><text x="75.3716%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="75.1216%" y="597" width="0.0810%" height="15" fill="rgb(215,97,29)" fg:x="927" fg:w="1"/><text x="75.3716%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.1216%" y="581" width="0.0810%" height="15" fill="rgb(253,228,42)" fg:x="927" fg:w="1"/><text x="75.3716%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.2026%" y="597" width="0.0810%" height="15" fill="rgb(240,85,2)" fg:x="928" fg:w="1"/><text x="75.4526%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.2026%" y="581" width="0.0810%" height="15" fill="rgb(214,155,4)" fg:x="928" fg:w="1"/><text x="75.4526%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="75.1216%" y="629" width="0.2431%" height="15" fill="rgb(247,120,22)" fg:x="927" fg:w="3"/><text x="75.3716%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="75.2026%" y="613" width="0.1621%" height="15" fill="rgb(211,208,6)" fg:x="928" fg:w="2"/><text x="75.4526%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="75.2836%" y="597" width="0.0810%" height="15" fill="rgb(235,99,41)" fg:x="929" fg:w="1"/><text x="75.5336%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="75.2836%" y="581" width="0.0810%" height="15" fill="rgb(223,28,8)" fg:x="929" fg:w="1"/><text x="75.5336%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="75.2836%" y="565" width="0.0810%" height="15" fill="rgb(212,71,20)" fg:x="929" fg:w="1"/><text x="75.5336%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.2836%" y="549" width="0.0810%" height="15" fill="rgb(206,85,3)" fg:x="929" fg:w="1"/><text x="75.5336%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.2836%" y="533" width="0.0810%" height="15" fill="rgb(244,180,11)" fg:x="929" fg:w="1"/><text x="75.5336%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.2836%" y="517" width="0.0810%" height="15" fill="rgb(223,16,21)" fg:x="929" fg:w="1"/><text x="75.5336%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (9 samples, 0.73%)</title><rect x="74.7164%" y="661" width="0.7293%" height="15" fill="rgb(238,85,42)" fg:x="922" fg:w="9"/><text x="74.9664%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.41%)</title><rect x="75.0405%" y="645" width="0.4052%" height="15" fill="rgb(205,85,8)" fg:x="926" fg:w="5"/><text x="75.2905%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.3647%" y="629" width="0.0810%" height="15" fill="rgb(217,190,15)" fg:x="930" fg:w="1"/><text x="75.6147%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.4457%" y="597" width="0.0810%" height="15" fill="rgb(243,192,23)" fg:x="931" fg:w="1"/><text x="75.6957%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.5267%" y="597" width="0.0810%" height="15" fill="rgb(223,220,37)" fg:x="932" fg:w="1"/><text x="75.7767%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.5267%" y="581" width="0.0810%" height="15" fill="rgb(208,41,17)" fg:x="932" fg:w="1"/><text x="75.7767%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.6078%" y="565" width="0.0810%" height="15" fill="rgb(224,188,7)" fg:x="933" fg:w="1"/><text x="75.8578%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="75.4457%" y="629" width="0.3241%" height="15" fill="rgb(236,16,50)" fg:x="931" fg:w="4"/><text x="75.6957%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="75.4457%" y="613" width="0.3241%" height="15" fill="rgb(238,6,24)" fg:x="931" fg:w="4"/><text x="75.6957%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.6078%" y="597" width="0.1621%" height="15" fill="rgb(253,67,45)" fg:x="933" fg:w="2"/><text x="75.8578%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.6078%" y="581" width="0.1621%" height="15" fill="rgb(210,89,32)" fg:x="933" fg:w="2"/><text x="75.8578%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.6888%" y="565" width="0.0810%" height="15" fill="rgb(208,89,9)" fg:x="934" fg:w="1"/><text x="75.9388%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="75.6888%" y="549" width="0.0810%" height="15" fill="rgb(222,180,44)" fg:x="934" fg:w="1"/><text x="75.9388%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="75.6888%" y="533" width="0.0810%" height="15" fill="rgb(250,181,46)" fg:x="934" fg:w="1"/><text x="75.9388%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.6888%" y="517" width="0.0810%" height="15" fill="rgb(210,190,26)" fg:x="934" fg:w="1"/><text x="75.9388%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="75.7699%" y="613" width="0.2431%" height="15" fill="rgb(253,49,13)" fg:x="935" fg:w="3"/><text x="76.0199%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="75.8509%" y="597" width="0.1621%" height="15" fill="rgb(240,184,42)" fg:x="936" fg:w="2"/><text x="76.1009%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="75.8509%" y="581" width="0.1621%" height="15" fill="rgb(246,59,37)" fg:x="936" fg:w="2"/><text x="76.1009%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="75.8509%" y="565" width="0.1621%" height="15" fill="rgb(207,134,54)" fg:x="936" fg:w="2"/><text x="76.1009%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="75.8509%" y="549" width="0.1621%" height="15" fill="rgb(250,122,24)" fg:x="936" fg:w="2"/><text x="76.1009%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="75.8509%" y="533" width="0.1621%" height="15" fill="rgb(239,206,3)" fg:x="936" fg:w="2"/><text x="76.1009%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="75.9319%" y="517" width="0.0810%" height="15" fill="rgb(253,220,32)" fg:x="937" fg:w="1"/><text x="76.1819%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.0130%" y="613" width="0.0810%" height="15" fill="rgb(209,217,48)" fg:x="938" fg:w="1"/><text x="76.2630%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.0940%" y="613" width="0.0810%" height="15" fill="rgb(242,91,39)" fg:x="939" fg:w="1"/><text x="76.3440%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.0940%" y="597" width="0.0810%" height="15" fill="rgb(228,4,13)" fg:x="939" fg:w="1"/><text x="76.3440%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.0940%" y="581" width="0.0810%" height="15" fill="rgb(223,133,4)" fg:x="939" fg:w="1"/><text x="76.3440%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.0940%" y="565" width="0.0810%" height="15" fill="rgb(215,105,30)" fg:x="939" fg:w="1"/><text x="76.3440%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.0940%" y="549" width="0.0810%" height="15" fill="rgb(230,9,4)" fg:x="939" fg:w="1"/><text x="76.3440%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.0940%" y="533" width="0.0810%" height="15" fill="rgb(248,15,2)" fg:x="939" fg:w="1"/><text x="76.3440%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="76.0940%" y="517" width="0.0810%" height="15" fill="rgb(208,210,22)" fg:x="939" fg:w="1"/><text x="76.3440%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="76.0940%" y="501" width="0.0810%" height="15" fill="rgb(208,112,41)" fg:x="939" fg:w="1"/><text x="76.3440%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.1750%" y="581" width="0.0810%" height="15" fill="rgb(232,83,14)" fg:x="940" fg:w="1"/><text x="76.4250%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.1750%" y="613" width="0.1621%" height="15" fill="rgb(229,65,11)" fg:x="940" fg:w="2"/><text x="76.4250%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.1750%" y="597" width="0.1621%" height="15" fill="rgb(228,126,24)" fg:x="940" fg:w="2"/><text x="76.4250%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="76.2561%" y="581" width="0.0810%" height="15" fill="rgb(218,66,33)" fg:x="941" fg:w="1"/><text x="76.5061%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="76.3371%" y="597" width="0.0810%" height="15" fill="rgb(251,49,52)" fg:x="942" fg:w="1"/><text x="76.5871%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.4182%" y="597" width="0.0810%" height="15" fill="rgb(219,46,37)" fg:x="943" fg:w="1"/><text x="76.6682%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="76.4992%" y="581" width="0.0810%" height="15" fill="rgb(213,53,49)" fg:x="944" fg:w="1"/><text x="76.7492%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.6613%" y="549" width="0.0810%" height="15" fill="rgb(214,134,1)" fg:x="946" fg:w="1"/><text x="76.9113%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.6613%" y="533" width="0.0810%" height="15" fill="rgb(208,139,43)" fg:x="946" fg:w="1"/><text x="76.9113%" y="543.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (17 samples, 1.38%)</title><rect x="75.4457%" y="645" width="1.3776%" height="15" fill="rgb(231,105,35)" fg:x="931" fg:w="17"/><text x="75.6957%" y="655.50"></text></g><g><title>treediff::diff::diff (13 samples, 1.05%)</title><rect x="75.7699%" y="629" width="1.0535%" height="15" fill="rgb(247,189,9)" fg:x="935" fg:w="13"/><text x="76.0199%" y="639.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.49%)</title><rect x="76.3371%" y="613" width="0.4862%" height="15" fill="rgb(252,48,51)" fg:x="942" fg:w="6"/><text x="76.5871%" y="623.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="76.4992%" y="597" width="0.3241%" height="15" fill="rgb(209,121,1)" fg:x="944" fg:w="4"/><text x="76.7492%" y="607.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="76.5802%" y="581" width="0.2431%" height="15" fill="rgb(231,40,26)" fg:x="945" fg:w="3"/><text x="76.8302%" y="591.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="76.6613%" y="565" width="0.1621%" height="15" fill="rgb(251,8,13)" fg:x="946" fg:w="2"/><text x="76.9113%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7423%" y="549" width="0.0810%" height="15" fill="rgb(231,110,2)" fg:x="947" fg:w="1"/><text x="76.9923%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.9044%" y="613" width="0.0810%" height="15" fill="rgb(216,153,22)" fg:x="949" fg:w="1"/><text x="77.1544%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="76.9854%" y="613" width="0.0810%" height="15" fill="rgb(249,116,49)" fg:x="950" fg:w="1"/><text x="77.2354%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.9854%" y="597" width="0.0810%" height="15" fill="rgb(230,89,2)" fg:x="950" fg:w="1"/><text x="77.2354%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.9854%" y="581" width="0.0810%" height="15" fill="rgb(231,125,23)" fg:x="950" fg:w="1"/><text x="77.2354%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.9854%" y="565" width="0.0810%" height="15" fill="rgb(212,217,18)" fg:x="950" fg:w="1"/><text x="77.2354%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.1475%" y="533" width="0.0810%" height="15" fill="rgb(210,21,33)" fg:x="952" fg:w="1"/><text x="77.3975%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.1475%" y="517" width="0.0810%" height="15" fill="rgb(241,97,9)" fg:x="952" fg:w="1"/><text x="77.3975%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="77.3096%" y="453" width="0.0810%" height="15" fill="rgb(221,35,31)" fg:x="954" fg:w="1"/><text x="77.5596%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="77.3906%" y="453" width="0.0810%" height="15" fill="rgb(251,23,23)" fg:x="955" fg:w="1"/><text x="77.6406%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.3906%" y="437" width="0.0810%" height="15" fill="rgb(227,165,2)" fg:x="955" fg:w="1"/><text x="77.6406%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.3906%" y="421" width="0.0810%" height="15" fill="rgb(242,24,2)" fg:x="955" fg:w="1"/><text x="77.6406%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3906%" y="405" width="0.0810%" height="15" fill="rgb(242,138,51)" fg:x="955" fg:w="1"/><text x="77.6406%" y="415.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (10 samples, 0.81%)</title><rect x="76.8233%" y="645" width="0.8104%" height="15" fill="rgb(220,219,5)" fg:x="948" fg:w="10"/><text x="77.0733%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.73%)</title><rect x="76.9044%" y="629" width="0.7293%" height="15" fill="rgb(247,53,29)" fg:x="949" fg:w="9"/><text x="77.1544%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.57%)</title><rect x="77.0665%" y="613" width="0.5673%" height="15" fill="rgb(233,43,39)" fg:x="951" fg:w="7"/><text x="77.3165%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.57%)</title><rect x="77.0665%" y="597" width="0.5673%" height="15" fill="rgb(230,128,54)" fg:x="951" fg:w="7"/><text x="77.3165%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="77.0665%" y="581" width="0.5673%" height="15" fill="rgb(218,20,12)" fg:x="951" fg:w="7"/><text x="77.3165%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.57%)</title><rect x="77.0665%" y="565" width="0.5673%" height="15" fill="rgb(206,51,14)" fg:x="951" fg:w="7"/><text x="77.3165%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.57%)</title><rect x="77.0665%" y="549" width="0.5673%" height="15" fill="rgb(223,16,35)" fg:x="951" fg:w="7"/><text x="77.3165%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="77.2285%" y="533" width="0.4052%" height="15" fill="rgb(226,165,37)" fg:x="953" fg:w="5"/><text x="77.4785%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.41%)</title><rect x="77.2285%" y="517" width="0.4052%" height="15" fill="rgb(240,26,21)" fg:x="953" fg:w="5"/><text x="77.4785%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="77.3096%" y="501" width="0.3241%" height="15" fill="rgb(240,72,46)" fg:x="954" fg:w="4"/><text x="77.5596%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="77.3096%" y="485" width="0.3241%" height="15" fill="rgb(211,33,41)" fg:x="954" fg:w="4"/><text x="77.5596%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="77.3096%" y="469" width="0.3241%" height="15" fill="rgb(224,157,46)" fg:x="954" fg:w="4"/><text x="77.5596%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="77.4716%" y="453" width="0.1621%" height="15" fill="rgb(223,59,19)" fg:x="956" fg:w="2"/><text x="77.7216%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="77.6337%" y="565" width="0.0810%" height="15" fill="rgb(239,187,1)" fg:x="958" fg:w="1"/><text x="77.8837%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="77.7147%" y="501" width="0.0810%" height="15" fill="rgb(226,95,9)" fg:x="959" fg:w="1"/><text x="77.9647%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.7147%" y="485" width="0.0810%" height="15" fill="rgb(234,61,54)" fg:x="959" fg:w="1"/><text x="77.9647%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.7147%" y="469" width="0.0810%" height="15" fill="rgb(205,209,47)" fg:x="959" fg:w="1"/><text x="77.9647%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="77.7147%" y="453" width="0.0810%" height="15" fill="rgb(228,7,43)" fg:x="959" fg:w="1"/><text x="77.9647%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.7958%" y="501" width="0.0810%" height="15" fill="rgb(240,217,52)" fg:x="960" fg:w="1"/><text x="78.0458%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.7958%" y="485" width="0.0810%" height="15" fill="rgb(211,178,21)" fg:x="960" fg:w="1"/><text x="78.0458%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.7958%" y="469" width="0.0810%" height="15" fill="rgb(205,25,34)" fg:x="960" fg:w="1"/><text x="78.0458%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.7958%" y="453" width="0.0810%" height="15" fill="rgb(209,57,11)" fg:x="960" fg:w="1"/><text x="78.0458%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="77.7147%" y="517" width="0.2431%" height="15" fill="rgb(221,99,2)" fg:x="959" fg:w="3"/><text x="77.9647%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="77.8768%" y="501" width="0.0810%" height="15" fill="rgb(232,79,22)" fg:x="961" fg:w="1"/><text x="78.1268%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.8768%" y="485" width="0.0810%" height="15" fill="rgb(221,145,32)" fg:x="961" fg:w="1"/><text x="78.1268%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.8768%" y="469" width="0.0810%" height="15" fill="rgb(236,133,36)" fg:x="961" fg:w="1"/><text x="78.1268%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="77.9579%" y="517" width="0.1621%" height="15" fill="rgb(208,224,44)" fg:x="962" fg:w="2"/><text x="78.2079%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.0389%" y="501" width="0.0810%" height="15" fill="rgb(235,143,15)" fg:x="963" fg:w="1"/><text x="78.2889%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.49%)</title><rect x="77.7147%" y="549" width="0.4862%" height="15" fill="rgb(249,83,27)" fg:x="959" fg:w="6"/><text x="77.9647%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.49%)</title><rect x="77.7147%" y="533" width="0.4862%" height="15" fill="rgb(238,226,19)" fg:x="959" fg:w="6"/><text x="77.9647%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.1199%" y="517" width="0.0810%" height="15" fill="rgb(226,206,27)" fg:x="964" fg:w="1"/><text x="78.3699%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.65%)</title><rect x="77.6337%" y="581" width="0.6483%" height="15" fill="rgb(251,182,9)" fg:x="958" fg:w="8"/><text x="77.8837%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="77.7147%" y="565" width="0.5673%" height="15" fill="rgb(212,140,41)" fg:x="959" fg:w="7"/><text x="77.9647%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.2010%" y="549" width="0.0810%" height="15" fill="rgb(220,106,18)" fg:x="965" fg:w="1"/><text x="78.4510%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.2010%" y="533" width="0.0810%" height="15" fill="rgb(252,46,41)" fg:x="965" fg:w="1"/><text x="78.4510%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.2010%" y="517" width="0.0810%" height="15" fill="rgb(209,222,15)" fg:x="965" fg:w="1"/><text x="78.4510%" y="527.50"></text></g><g><title>engine::session::Session::close (49 samples, 3.97%)</title><rect x="74.3922%" y="741" width="3.9708%" height="15" fill="rgb(233,83,50)" fg:x="918" fg:w="49"/><text x="74.6422%" y="751.50">engi..</text></g><g><title>engine::session::state::State::close (47 samples, 3.81%)</title><rect x="74.5543%" y="725" width="3.8088%" height="15" fill="rgb(205,212,0)" fg:x="920" fg:w="47"/><text x="74.8043%" y="735.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (45 samples, 3.65%)</title><rect x="74.7164%" y="709" width="3.6467%" height="15" fill="rgb(235,117,51)" fg:x="922" fg:w="45"/><text x="74.9664%" y="719.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (45 samples, 3.65%)</title><rect x="74.7164%" y="693" width="3.6467%" height="15" fill="rgb(233,133,48)" fg:x="922" fg:w="45"/><text x="74.9664%" y="703.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (45 samples, 3.65%)</title><rect x="74.7164%" y="677" width="3.6467%" height="15" fill="rgb(219,3,2)" fg:x="922" fg:w="45"/><text x="74.9664%" y="687.50">engi..</text></g><g><title>kernel::model::any_entity_changes (36 samples, 2.92%)</title><rect x="75.4457%" y="661" width="2.9173%" height="15" fill="rgb(225,80,52)" fg:x="931" fg:w="36"/><text x="75.6957%" y="671.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.73%)</title><rect x="77.6337%" y="645" width="0.7293%" height="15" fill="rgb(235,195,42)" fg:x="958" fg:w="9"/><text x="77.8837%" y="655.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.73%)</title><rect x="77.6337%" y="629" width="0.7293%" height="15" fill="rgb(240,207,46)" fg:x="958" fg:w="9"/><text x="77.8837%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.73%)</title><rect x="77.6337%" y="613" width="0.7293%" height="15" fill="rgb(236,112,50)" fg:x="958" fg:w="9"/><text x="77.8837%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="77.6337%" y="597" width="0.7293%" height="15" fill="rgb(249,151,27)" fg:x="958" fg:w="9"/><text x="77.8837%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="78.2820%" y="581" width="0.0810%" height="15" fill="rgb(253,223,52)" fg:x="966" fg:w="1"/><text x="78.5320%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="78.2820%" y="565" width="0.0810%" height="15" fill="rgb(215,55,33)" fg:x="966" fg:w="1"/><text x="78.5320%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="78.3630%" y="597" width="0.0810%" height="15" fill="rgb(207,24,17)" fg:x="967" fg:w="1"/><text x="78.6130%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="78.3630%" y="581" width="0.0810%" height="15" fill="rgb(218,169,32)" fg:x="967" fg:w="1"/><text x="78.6130%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.4441%" y="597" width="0.0810%" height="15" fill="rgb(209,210,6)" fg:x="968" fg:w="1"/><text x="78.6941%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.4441%" y="581" width="0.0810%" height="15" fill="rgb(225,208,8)" fg:x="968" fg:w="1"/><text x="78.6941%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.4441%" y="565" width="0.0810%" height="15" fill="rgb(238,14,32)" fg:x="968" fg:w="1"/><text x="78.6941%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4441%" y="549" width="0.0810%" height="15" fill="rgb(211,137,3)" fg:x="968" fg:w="1"/><text x="78.6941%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4441%" y="533" width="0.0810%" height="15" fill="rgb(207,171,19)" fg:x="968" fg:w="1"/><text x="78.6941%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4441%" y="517" width="0.0810%" height="15" fill="rgb(250,80,8)" fg:x="968" fg:w="1"/><text x="78.6941%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.4441%" y="501" width="0.0810%" height="15" fill="rgb(209,103,53)" fg:x="968" fg:w="1"/><text x="78.6941%" y="511.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="78.5251%" y="597" width="0.0810%" height="15" fill="rgb(233,198,10)" fg:x="969" fg:w="1"/><text x="78.7751%" y="607.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="78.6062%" y="581" width="0.0810%" height="15" fill="rgb(236,125,25)" fg:x="970" fg:w="1"/><text x="78.8562%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.6062%" y="565" width="0.0810%" height="15" fill="rgb(254,182,48)" fg:x="970" fg:w="1"/><text x="78.8562%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="78.6062%" y="549" width="0.0810%" height="15" fill="rgb(216,108,44)" fg:x="970" fg:w="1"/><text x="78.8562%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.6062%" y="533" width="0.0810%" height="15" fill="rgb(222,72,39)" fg:x="970" fg:w="1"/><text x="78.8562%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="78.6062%" y="517" width="0.0810%" height="15" fill="rgb(252,70,39)" fg:x="970" fg:w="1"/><text x="78.8562%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.6062%" y="501" width="0.0810%" height="15" fill="rgb(243,99,34)" fg:x="970" fg:w="1"/><text x="78.8562%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="78.6062%" y="485" width="0.0810%" height="15" fill="rgb(252,109,12)" fg:x="970" fg:w="1"/><text x="78.8562%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.6062%" y="469" width="0.0810%" height="15" fill="rgb(211,186,10)" fg:x="970" fg:w="1"/><text x="78.8562%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="78.6872%" y="453" width="0.0810%" height="15" fill="rgb(246,90,8)" fg:x="971" fg:w="1"/><text x="78.9372%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="78.6872%" y="437" width="0.0810%" height="15" fill="rgb(226,91,24)" fg:x="971" fg:w="1"/><text x="78.9372%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.6872%" y="421" width="0.0810%" height="15" fill="rgb(216,28,44)" fg:x="971" fg:w="1"/><text x="78.9372%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="78.6872%" y="405" width="0.0810%" height="15" fill="rgb(229,36,0)" fg:x="971" fg:w="1"/><text x="78.9372%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="78.6872%" y="389" width="0.0810%" height="15" fill="rgb(245,97,18)" fg:x="971" fg:w="1"/><text x="78.9372%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.49%)</title><rect x="78.3630%" y="645" width="0.4862%" height="15" fill="rgb(241,97,54)" fg:x="967" fg:w="6"/><text x="78.6130%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.49%)</title><rect x="78.3630%" y="629" width="0.4862%" height="15" fill="rgb(234,125,17)" fg:x="967" fg:w="6"/><text x="78.6130%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.49%)</title><rect x="78.3630%" y="613" width="0.4862%" height="15" fill="rgb(228,172,39)" fg:x="967" fg:w="6"/><text x="78.6130%" y="623.50"></text></g><g><title>kernel::model::entity::Entity::from_str (3 samples, 0.24%)</title><rect x="78.6062%" y="597" width="0.2431%" height="15" fill="rgb(227,169,1)" fg:x="970" fg:w="3"/><text x="78.8562%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="78.6872%" y="581" width="0.1621%" height="15" fill="rgb(206,13,35)" fg:x="971" fg:w="2"/><text x="78.9372%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="78.6872%" y="565" width="0.1621%" height="15" fill="rgb(211,117,30)" fg:x="971" fg:w="2"/><text x="78.9372%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="78.6872%" y="549" width="0.1621%" height="15" fill="rgb(230,198,4)" fg:x="971" fg:w="2"/><text x="78.9372%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="78.6872%" y="533" width="0.1621%" height="15" fill="rgb(213,87,54)" fg:x="971" fg:w="2"/><text x="78.9372%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="78.6872%" y="517" width="0.1621%" height="15" fill="rgb(248,43,22)" fg:x="971" fg:w="2"/><text x="78.9372%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="78.6872%" y="501" width="0.1621%" height="15" fill="rgb(213,175,48)" fg:x="971" fg:w="2"/><text x="78.9372%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="78.6872%" y="485" width="0.1621%" height="15" fill="rgb(252,55,9)" fg:x="971" fg:w="2"/><text x="78.9372%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="78.6872%" y="469" width="0.1621%" height="15" fill="rgb(231,72,33)" fg:x="971" fg:w="2"/><text x="78.9372%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.7682%" y="453" width="0.0810%" height="15" fill="rgb(213,2,54)" fg:x="972" fg:w="1"/><text x="79.0182%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="78.7682%" y="437" width="0.0810%" height="15" fill="rgb(208,88,25)" fg:x="972" fg:w="1"/><text x="79.0182%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="78.7682%" y="421" width="0.0810%" height="15" fill="rgb(215,117,13)" fg:x="972" fg:w="1"/><text x="79.0182%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.7682%" y="405" width="0.0810%" height="15" fill="rgb(243,147,21)" fg:x="972" fg:w="1"/><text x="79.0182%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="78.7682%" y="389" width="0.0810%" height="15" fill="rgb(208,215,36)" fg:x="972" fg:w="1"/><text x="79.0182%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="78.7682%" y="373" width="0.0810%" height="15" fill="rgb(238,187,24)" fg:x="972" fg:w="1"/><text x="79.0182%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.7682%" y="357" width="0.0810%" height="15" fill="rgb(214,173,11)" fg:x="972" fg:w="1"/><text x="79.0182%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="78.7682%" y="341" width="0.0810%" height="15" fill="rgb(222,71,20)" fg:x="972" fg:w="1"/><text x="79.0182%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="78.7682%" y="325" width="0.0810%" height="15" fill="rgb(242,125,4)" fg:x="972" fg:w="1"/><text x="79.0182%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.8493%" y="645" width="0.0810%" height="15" fill="rgb(217,101,52)" fg:x="973" fg:w="1"/><text x="79.0993%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8493%" y="629" width="0.0810%" height="15" fill="rgb(223,2,50)" fg:x="973" fg:w="1"/><text x="79.0993%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8493%" y="613" width="0.0810%" height="15" fill="rgb(225,197,9)" fg:x="973" fg:w="1"/><text x="79.0993%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.8493%" y="597" width="0.0810%" height="15" fill="rgb(234,76,27)" fg:x="973" fg:w="1"/><text x="79.0993%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.8493%" y="581" width="0.0810%" height="15" fill="rgb(213,161,26)" fg:x="973" fg:w="1"/><text x="79.0993%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.8493%" y="565" width="0.0810%" height="15" fill="rgb(210,228,2)" fg:x="973" fg:w="1"/><text x="79.0993%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.8493%" y="549" width="0.0810%" height="15" fill="rgb(235,4,16)" fg:x="973" fg:w="1"/><text x="79.0993%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.8493%" y="533" width="0.0810%" height="15" fill="rgb(235,83,42)" fg:x="973" fg:w="1"/><text x="79.0993%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.8493%" y="517" width="0.0810%" height="15" fill="rgb(207,116,39)" fg:x="973" fg:w="1"/><text x="79.0993%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.8493%" y="501" width="0.0810%" height="15" fill="rgb(253,206,9)" fg:x="973" fg:w="1"/><text x="79.0993%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.8493%" y="485" width="0.0810%" height="15" fill="rgb(234,32,47)" fg:x="973" fg:w="1"/><text x="79.0993%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.8493%" y="469" width="0.0810%" height="15" fill="rgb(247,40,39)" fg:x="973" fg:w="1"/><text x="79.0993%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.8493%" y="453" width="0.0810%" height="15" fill="rgb(236,199,13)" fg:x="973" fg:w="1"/><text x="79.0993%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.8493%" y="437" width="0.0810%" height="15" fill="rgb(240,127,44)" fg:x="973" fg:w="1"/><text x="79.0993%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.8493%" y="421" width="0.0810%" height="15" fill="rgb(248,220,47)" fg:x="973" fg:w="1"/><text x="79.0993%" y="431.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (8 samples, 0.65%)</title><rect x="78.3630%" y="709" width="0.6483%" height="15" fill="rgb(240,78,9)" fg:x="967" fg:w="8"/><text x="78.6130%" y="719.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (8 samples, 0.65%)</title><rect x="78.3630%" y="693" width="0.6483%" height="15" fill="rgb(245,119,5)" fg:x="967" fg:w="8"/><text x="78.6130%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.65%)</title><rect x="78.3630%" y="677" width="0.6483%" height="15" fill="rgb(238,175,31)" fg:x="967" fg:w="8"/><text x="78.6130%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.65%)</title><rect x="78.3630%" y="661" width="0.6483%" height="15" fill="rgb(232,140,42)" fg:x="967" fg:w="8"/><text x="78.6130%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.9303%" y="645" width="0.0810%" height="15" fill="rgb(218,179,7)" fg:x="974" fg:w="1"/><text x="79.1803%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.9303%" y="629" width="0.0810%" height="15" fill="rgb(232,79,27)" fg:x="974" fg:w="1"/><text x="79.1803%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.0113%" y="677" width="0.0810%" height="15" fill="rgb(247,11,19)" fg:x="975" fg:w="1"/><text x="79.2613%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="79.6596%" y="581" width="0.0810%" height="15" fill="rgb(216,171,54)" fg:x="983" fg:w="1"/><text x="79.9096%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.6596%" y="565" width="0.0810%" height="15" fill="rgb(233,158,36)" fg:x="983" fg:w="1"/><text x="79.9096%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="79.6596%" y="597" width="0.2431%" height="15" fill="rgb(215,48,47)" fg:x="983" fg:w="3"/><text x="79.9096%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="79.7407%" y="581" width="0.1621%" height="15" fill="rgb(230,223,15)" fg:x="984" fg:w="2"/><text x="79.9907%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.49%)</title><rect x="79.5786%" y="613" width="0.4862%" height="15" fill="rgb(234,49,19)" fg:x="982" fg:w="6"/><text x="79.8286%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="79.9028%" y="597" width="0.1621%" height="15" fill="rgb(232,89,25)" fg:x="986" fg:w="2"/><text x="80.1528%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.89%)</title><rect x="79.4165%" y="629" width="0.8914%" height="15" fill="rgb(237,206,28)" fg:x="980" fg:w="11"/><text x="79.6665%" y="639.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="80.0648%" y="613" width="0.2431%" height="15" fill="rgb(249,68,37)" fg:x="988" fg:w="3"/><text x="80.3148%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.38%)</title><rect x="79.1734%" y="645" width="1.3776%" height="15" fill="rgb(226,99,43)" fg:x="977" fg:w="17"/><text x="79.4234%" y="655.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="80.3079%" y="629" width="0.2431%" height="15" fill="rgb(216,46,28)" fg:x="991" fg:w="3"/><text x="80.5579%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (26 samples, 2.11%)</title><rect x="79.0924%" y="677" width="2.1070%" height="15" fill="rgb(216,33,9)" fg:x="976" fg:w="26"/><text x="79.3424%" y="687.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 2.03%)</title><rect x="79.1734%" y="661" width="2.0259%" height="15" fill="rgb(216,129,4)" fg:x="977" fg:w="25"/><text x="79.4234%" y="671.50">&lt;..</text></g><g><title>__libc_free (8 samples, 0.65%)</title><rect x="80.5511%" y="645" width="0.6483%" height="15" fill="rgb(216,106,3)" fg:x="994" fg:w="8"/><text x="80.8011%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="81.3614%" y="629" width="0.1621%" height="15" fill="rgb(217,79,45)" fg:x="1004" fg:w="2"/><text x="81.6114%" y="639.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="81.5235%" y="629" width="0.2431%" height="15" fill="rgb(239,98,13)" fg:x="1006" fg:w="3"/><text x="81.7735%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.08%)</title><rect x="81.7666%" y="629" width="0.0810%" height="15" fill="rgb(221,115,4)" fg:x="1009" fg:w="1"/><text x="82.0166%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.57%)</title><rect x="81.3614%" y="645" width="0.5673%" height="15" fill="rgb(215,85,0)" fg:x="1004" fg:w="7"/><text x="81.6114%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="81.8476%" y="629" width="0.0810%" height="15" fill="rgb(230,62,15)" fg:x="1010" fg:w="1"/><text x="82.0976%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="81.8476%" y="613" width="0.0810%" height="15" fill="rgb(247,162,2)" fg:x="1010" fg:w="1"/><text x="82.0976%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="81.8476%" y="597" width="0.0810%" height="15" fill="rgb(212,112,32)" fg:x="1010" fg:w="1"/><text x="82.0976%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="81.8476%" y="581" width="0.0810%" height="15" fill="rgb(216,137,9)" fg:x="1010" fg:w="1"/><text x="82.0976%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="81.9287%" y="645" width="0.1621%" height="15" fill="rgb(250,149,33)" fg:x="1011" fg:w="2"/><text x="82.1787%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="81.9287%" y="629" width="0.1621%" height="15" fill="rgb(246,124,31)" fg:x="1011" fg:w="2"/><text x="82.1787%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.9287%" y="613" width="0.1621%" height="15" fill="rgb(216,210,22)" fg:x="1011" fg:w="2"/><text x="82.1787%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="81.9287%" y="597" width="0.1621%" height="15" fill="rgb(228,128,36)" fg:x="1011" fg:w="2"/><text x="82.1787%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.0908%" y="645" width="0.0810%" height="15" fill="rgb(231,41,0)" fg:x="1013" fg:w="1"/><text x="82.3408%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.1718%" y="581" width="0.0810%" height="15" fill="rgb(232,61,26)" fg:x="1014" fg:w="1"/><text x="82.4218%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1718%" y="565" width="0.0810%" height="15" fill="rgb(217,60,9)" fg:x="1014" fg:w="1"/><text x="82.4218%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.4149%" y="437" width="0.0810%" height="15" fill="rgb(233,41,35)" fg:x="1017" fg:w="1"/><text x="82.6649%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.4149%" y="421" width="0.0810%" height="15" fill="rgb(253,139,43)" fg:x="1017" fg:w="1"/><text x="82.6649%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.4149%" y="405" width="0.0810%" height="15" fill="rgb(245,100,51)" fg:x="1017" fg:w="1"/><text x="82.6649%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4149%" y="389" width="0.0810%" height="15" fill="rgb(250,208,18)" fg:x="1017" fg:w="1"/><text x="82.6649%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4149%" y="373" width="0.0810%" height="15" fill="rgb(245,33,2)" fg:x="1017" fg:w="1"/><text x="82.6649%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4149%" y="357" width="0.0810%" height="15" fill="rgb(244,171,31)" fg:x="1017" fg:w="1"/><text x="82.6649%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4149%" y="341" width="0.0810%" height="15" fill="rgb(229,1,43)" fg:x="1017" fg:w="1"/><text x="82.6649%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.4149%" y="325" width="0.0810%" height="15" fill="rgb(223,153,28)" fg:x="1017" fg:w="1"/><text x="82.6649%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4149%" y="309" width="0.0810%" height="15" fill="rgb(241,4,46)" fg:x="1017" fg:w="1"/><text x="82.6649%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4149%" y="293" width="0.0810%" height="15" fill="rgb(230,81,11)" fg:x="1017" fg:w="1"/><text x="82.6649%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4149%" y="277" width="0.0810%" height="15" fill="rgb(253,204,39)" fg:x="1017" fg:w="1"/><text x="82.6649%" y="287.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="82.4149%" y="469" width="0.1621%" height="15" fill="rgb(250,96,8)" fg:x="1017" fg:w="2"/><text x="82.6649%" y="479.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="82.4149%" y="453" width="0.1621%" height="15" fill="rgb(219,89,54)" fg:x="1017" fg:w="2"/><text x="82.6649%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.4959%" y="437" width="0.0810%" height="15" fill="rgb(235,136,39)" fg:x="1018" fg:w="1"/><text x="82.7459%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.4959%" y="421" width="0.0810%" height="15" fill="rgb(230,155,37)" fg:x="1018" fg:w="1"/><text x="82.7459%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.4959%" y="405" width="0.0810%" height="15" fill="rgb(235,199,50)" fg:x="1018" fg:w="1"/><text x="82.7459%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4959%" y="389" width="0.0810%" height="15" fill="rgb(227,81,32)" fg:x="1018" fg:w="1"/><text x="82.7459%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4959%" y="373" width="0.0810%" height="15" fill="rgb(225,6,28)" fg:x="1018" fg:w="1"/><text x="82.7459%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4959%" y="357" width="0.0810%" height="15" fill="rgb(207,211,17)" fg:x="1018" fg:w="1"/><text x="82.7459%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4959%" y="341" width="0.0810%" height="15" fill="rgb(228,31,49)" fg:x="1018" fg:w="1"/><text x="82.7459%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.4959%" y="325" width="0.0810%" height="15" fill="rgb(230,185,3)" fg:x="1018" fg:w="1"/><text x="82.7459%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4959%" y="309" width="0.0810%" height="15" fill="rgb(206,167,15)" fg:x="1018" fg:w="1"/><text x="82.7459%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4959%" y="293" width="0.0810%" height="15" fill="rgb(234,2,36)" fg:x="1018" fg:w="1"/><text x="82.7459%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4959%" y="277" width="0.0810%" height="15" fill="rgb(239,160,29)" fg:x="1018" fg:w="1"/><text x="82.7459%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.4959%" y="261" width="0.0810%" height="15" fill="rgb(236,117,2)" fg:x="1018" fg:w="1"/><text x="82.7459%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.4959%" y="245" width="0.0810%" height="15" fill="rgb(215,117,37)" fg:x="1018" fg:w="1"/><text x="82.7459%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="82.4959%" y="229" width="0.0810%" height="15" fill="rgb(244,48,36)" fg:x="1018" fg:w="1"/><text x="82.7459%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="82.5770%" y="325" width="0.0810%" height="15" fill="rgb(223,101,37)" fg:x="1019" fg:w="1"/><text x="82.8270%" y="335.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="82.5770%" y="309" width="0.0810%" height="15" fill="rgb(205,200,1)" fg:x="1019" fg:w="1"/><text x="82.8270%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="82.4149%" y="517" width="0.3241%" height="15" fill="rgb(209,193,20)" fg:x="1017" fg:w="4"/><text x="82.6649%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (4 samples, 0.32%)</title><rect x="82.4149%" y="501" width="0.3241%" height="15" fill="rgb(214,63,13)" fg:x="1017" fg:w="4"/><text x="82.6649%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (4 samples, 0.32%)</title><rect x="82.4149%" y="485" width="0.3241%" height="15" fill="rgb(253,113,46)" fg:x="1017" fg:w="4"/><text x="82.6649%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.5770%" y="469" width="0.1621%" height="15" fill="rgb(237,103,34)" fg:x="1019" fg:w="2"/><text x="82.8270%" y="479.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="82.5770%" y="453" width="0.1621%" height="15" fill="rgb(223,38,25)" fg:x="1019" fg:w="2"/><text x="82.8270%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.5770%" y="437" width="0.1621%" height="15" fill="rgb(251,32,32)" fg:x="1019" fg:w="2"/><text x="82.8270%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.5770%" y="421" width="0.1621%" height="15" fill="rgb(228,65,22)" fg:x="1019" fg:w="2"/><text x="82.8270%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.5770%" y="405" width="0.1621%" height="15" fill="rgb(205,11,46)" fg:x="1019" fg:w="2"/><text x="82.8270%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.5770%" y="389" width="0.1621%" height="15" fill="rgb(220,35,2)" fg:x="1019" fg:w="2"/><text x="82.8270%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.5770%" y="373" width="0.1621%" height="15" fill="rgb(217,151,17)" fg:x="1019" fg:w="2"/><text x="82.8270%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="82.5770%" y="357" width="0.1621%" height="15" fill="rgb(243,227,35)" fg:x="1019" fg:w="2"/><text x="82.8270%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.5770%" y="341" width="0.1621%" height="15" fill="rgb(214,0,34)" fg:x="1019" fg:w="2"/><text x="82.8270%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.6580%" y="325" width="0.0810%" height="15" fill="rgb(209,42,37)" fg:x="1020" fg:w="1"/><text x="82.9080%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.6580%" y="309" width="0.0810%" height="15" fill="rgb(251,176,30)" fg:x="1020" fg:w="1"/><text x="82.9080%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.6580%" y="293" width="0.0810%" height="15" fill="rgb(223,64,40)" fg:x="1020" fg:w="1"/><text x="82.9080%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.6580%" y="277" width="0.0810%" height="15" fill="rgb(227,180,23)" fg:x="1020" fg:w="1"/><text x="82.9080%" y="287.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (7 samples, 0.57%)</title><rect x="82.2528%" y="581" width="0.5673%" height="15" fill="rgb(220,137,31)" fg:x="1015" fg:w="7"/><text x="82.5028%" y="591.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (6 samples, 0.49%)</title><rect x="82.3339%" y="565" width="0.4862%" height="15" fill="rgb(245,124,25)" fg:x="1016" fg:w="6"/><text x="82.5839%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (5 samples, 0.41%)</title><rect x="82.4149%" y="549" width="0.4052%" height="15" fill="rgb(217,157,5)" fg:x="1017" fg:w="5"/><text x="82.6649%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="82.4149%" y="533" width="0.4052%" height="15" fill="rgb(225,59,2)" fg:x="1017" fg:w="5"/><text x="82.6649%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="82.7391%" y="517" width="0.0810%" height="15" fill="rgb(220,182,9)" fg:x="1021" fg:w="1"/><text x="82.9891%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.7391%" y="501" width="0.0810%" height="15" fill="rgb(249,54,24)" fg:x="1021" fg:w="1"/><text x="82.9891%" y="511.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="82.8201%" y="549" width="0.1621%" height="15" fill="rgb(216,89,17)" fg:x="1022" fg:w="2"/><text x="83.0701%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9011%" y="533" width="0.0810%" height="15" fill="rgb(245,20,45)" fg:x="1023" fg:w="1"/><text x="83.1511%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.9011%" y="517" width="0.0810%" height="15" fill="rgb(230,83,14)" fg:x="1023" fg:w="1"/><text x="83.1511%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9011%" y="501" width="0.0810%" height="15" fill="rgb(246,109,11)" fg:x="1023" fg:w="1"/><text x="83.1511%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.9011%" y="485" width="0.0810%" height="15" fill="rgb(235,85,23)" fg:x="1023" fg:w="1"/><text x="83.1511%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.9011%" y="469" width="0.0810%" height="15" fill="rgb(215,101,36)" fg:x="1023" fg:w="1"/><text x="83.1511%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.9011%" y="453" width="0.0810%" height="15" fill="rgb(228,140,31)" fg:x="1023" fg:w="1"/><text x="83.1511%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.9011%" y="437" width="0.0810%" height="15" fill="rgb(234,162,37)" fg:x="1023" fg:w="1"/><text x="83.1511%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.9011%" y="421" width="0.0810%" height="15" fill="rgb(221,0,24)" fg:x="1023" fg:w="1"/><text x="83.1511%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.9011%" y="405" width="0.0810%" height="15" fill="rgb(230,161,41)" fg:x="1023" fg:w="1"/><text x="83.1511%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.9011%" y="389" width="0.0810%" height="15" fill="rgb(224,46,24)" fg:x="1023" fg:w="1"/><text x="83.1511%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.9011%" y="373" width="0.0810%" height="15" fill="rgb(205,59,32)" fg:x="1023" fg:w="1"/><text x="83.1511%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.9011%" y="357" width="0.0810%" height="15" fill="rgb(239,31,20)" fg:x="1023" fg:w="1"/><text x="83.1511%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.9011%" y="341" width="0.0810%" height="15" fill="rgb(233,149,44)" fg:x="1023" fg:w="1"/><text x="83.1511%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.9011%" y="325" width="0.0810%" height="15" fill="rgb(243,47,26)" fg:x="1023" fg:w="1"/><text x="83.1511%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.9011%" y="309" width="0.0810%" height="15" fill="rgb(233,107,5)" fg:x="1023" fg:w="1"/><text x="83.1511%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="82.9822%" y="549" width="0.1621%" height="15" fill="rgb(248,140,33)" fg:x="1024" fg:w="2"/><text x="83.2322%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="82.9822%" y="533" width="0.1621%" height="15" fill="rgb(228,178,19)" fg:x="1024" fg:w="2"/><text x="83.2322%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="82.9822%" y="517" width="0.1621%" height="15" fill="rgb(224,39,49)" fg:x="1024" fg:w="2"/><text x="83.2322%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="82.9822%" y="501" width="0.1621%" height="15" fill="rgb(246,56,47)" fg:x="1024" fg:w="2"/><text x="83.2322%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="83.0632%" y="485" width="0.0810%" height="15" fill="rgb(220,73,27)" fg:x="1025" fg:w="1"/><text x="83.3132%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="83.0632%" y="469" width="0.0810%" height="15" fill="rgb(239,112,21)" fg:x="1025" fg:w="1"/><text x="83.3132%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="83.0632%" y="453" width="0.0810%" height="15" fill="rgb(253,14,51)" fg:x="1025" fg:w="1"/><text x="83.3132%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.0632%" y="437" width="0.0810%" height="15" fill="rgb(215,58,12)" fg:x="1025" fg:w="1"/><text x="83.3132%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="83.0632%" y="421" width="0.0810%" height="15" fill="rgb(207,181,19)" fg:x="1025" fg:w="1"/><text x="83.3132%" y="431.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (14 samples, 1.13%)</title><rect x="82.1718%" y="597" width="1.1345%" height="15" fill="rgb(211,214,34)" fg:x="1014" fg:w="14"/><text x="82.4218%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.49%)</title><rect x="82.8201%" y="581" width="0.4862%" height="15" fill="rgb(243,124,39)" fg:x="1022" fg:w="6"/><text x="83.0701%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.49%)</title><rect x="82.8201%" y="565" width="0.4862%" height="15" fill="rgb(248,135,21)" fg:x="1022" fg:w="6"/><text x="83.0701%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="83.1442%" y="549" width="0.1621%" height="15" fill="rgb(245,218,3)" fg:x="1026" fg:w="2"/><text x="83.3942%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="83.1442%" y="533" width="0.1621%" height="15" fill="rgb(225,144,22)" fg:x="1026" fg:w="2"/><text x="83.3942%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="83.2253%" y="517" width="0.0810%" height="15" fill="rgb(250,90,15)" fg:x="1027" fg:w="1"/><text x="83.4753%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="83.2253%" y="501" width="0.0810%" height="15" fill="rgb(224,64,29)" fg:x="1027" fg:w="1"/><text x="83.4753%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="83.2253%" y="485" width="0.0810%" height="15" fill="rgb(217,50,47)" fg:x="1027" fg:w="1"/><text x="83.4753%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.2253%" y="469" width="0.0810%" height="15" fill="rgb(231,159,47)" fg:x="1027" fg:w="1"/><text x="83.4753%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.2253%" y="453" width="0.0810%" height="15" fill="rgb(213,89,29)" fg:x="1027" fg:w="1"/><text x="83.4753%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="83.2253%" y="437" width="0.0810%" height="15" fill="rgb(243,90,23)" fg:x="1027" fg:w="1"/><text x="83.4753%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.3063%" y="581" width="0.0810%" height="15" fill="rgb(213,21,6)" fg:x="1028" fg:w="1"/><text x="83.5563%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.4684%" y="437" width="0.0810%" height="15" fill="rgb(237,139,17)" fg:x="1030" fg:w="1"/><text x="83.7184%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.4684%" y="421" width="0.0810%" height="15" fill="rgb(250,147,17)" fg:x="1030" fg:w="1"/><text x="83.7184%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.4684%" y="405" width="0.0810%" height="15" fill="rgb(212,208,42)" fg:x="1030" fg:w="1"/><text x="83.7184%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.4684%" y="389" width="0.0810%" height="15" fill="rgb(215,229,40)" fg:x="1030" fg:w="1"/><text x="83.7184%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.4684%" y="373" width="0.0810%" height="15" fill="rgb(206,204,1)" fg:x="1030" fg:w="1"/><text x="83.7184%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.4684%" y="357" width="0.0810%" height="15" fill="rgb(230,62,32)" fg:x="1030" fg:w="1"/><text x="83.7184%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.4684%" y="341" width="0.0810%" height="15" fill="rgb(223,22,42)" fg:x="1030" fg:w="1"/><text x="83.7184%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.4684%" y="517" width="0.1621%" height="15" fill="rgb(244,6,23)" fg:x="1030" fg:w="2"/><text x="83.7184%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.4684%" y="501" width="0.1621%" height="15" fill="rgb(240,221,42)" fg:x="1030" fg:w="2"/><text x="83.7184%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="83.4684%" y="485" width="0.1621%" height="15" fill="rgb(222,74,7)" fg:x="1030" fg:w="2"/><text x="83.7184%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="83.4684%" y="469" width="0.1621%" height="15" fill="rgb(227,191,38)" fg:x="1030" fg:w="2"/><text x="83.7184%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="83.4684%" y="453" width="0.1621%" height="15" fill="rgb(227,89,34)" fg:x="1030" fg:w="2"/><text x="83.7184%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="83.5494%" y="437" width="0.0810%" height="15" fill="rgb(215,153,25)" fg:x="1031" fg:w="1"/><text x="83.7994%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="83.5494%" y="421" width="0.0810%" height="15" fill="rgb(215,153,46)" fg:x="1031" fg:w="1"/><text x="83.7994%" y="431.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="83.3874%" y="549" width="0.3241%" height="15" fill="rgb(242,38,52)" fg:x="1029" fg:w="4"/><text x="83.6374%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="83.4684%" y="533" width="0.2431%" height="15" fill="rgb(218,112,4)" fg:x="1030" fg:w="3"/><text x="83.7184%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.6305%" y="517" width="0.0810%" height="15" fill="rgb(231,210,31)" fg:x="1032" fg:w="1"/><text x="83.8805%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.8736%" y="405" width="0.0810%" height="15" fill="rgb(245,223,36)" fg:x="1035" fg:w="1"/><text x="84.1236%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.8736%" y="389" width="0.0810%" height="15" fill="rgb(246,41,2)" fg:x="1035" fg:w="1"/><text x="84.1236%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.8736%" y="373" width="0.0810%" height="15" fill="rgb(227,51,31)" fg:x="1035" fg:w="1"/><text x="84.1236%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8736%" y="357" width="0.0810%" height="15" fill="rgb(222,95,26)" fg:x="1035" fg:w="1"/><text x="84.1236%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8736%" y="341" width="0.0810%" height="15" fill="rgb(224,190,1)" fg:x="1035" fg:w="1"/><text x="84.1236%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8736%" y="325" width="0.0810%" height="15" fill="rgb(209,90,42)" fg:x="1035" fg:w="1"/><text x="84.1236%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8736%" y="309" width="0.0810%" height="15" fill="rgb(232,225,50)" fg:x="1035" fg:w="1"/><text x="84.1236%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.8736%" y="293" width="0.0810%" height="15" fill="rgb(239,89,47)" fg:x="1035" fg:w="1"/><text x="84.1236%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8736%" y="277" width="0.0810%" height="15" fill="rgb(230,212,50)" fg:x="1035" fg:w="1"/><text x="84.1236%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9546%" y="357" width="0.0810%" height="15" fill="rgb(252,1,27)" fg:x="1036" fg:w="1"/><text x="84.2046%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9546%" y="341" width="0.0810%" height="15" fill="rgb(237,179,41)" fg:x="1036" fg:w="1"/><text x="84.2046%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9546%" y="325" width="0.0810%" height="15" fill="rgb(214,151,37)" fg:x="1036" fg:w="1"/><text x="84.2046%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9546%" y="309" width="0.0810%" height="15" fill="rgb(211,74,11)" fg:x="1036" fg:w="1"/><text x="84.2046%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9546%" y="293" width="0.0810%" height="15" fill="rgb(242,21,21)" fg:x="1036" fg:w="1"/><text x="84.2046%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="83.8736%" y="437" width="0.2431%" height="15" fill="rgb(226,106,43)" fg:x="1035" fg:w="3"/><text x="84.1236%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="83.8736%" y="421" width="0.2431%" height="15" fill="rgb(229,162,39)" fg:x="1035" fg:w="3"/><text x="84.1236%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="83.9546%" y="405" width="0.1621%" height="15" fill="rgb(228,159,25)" fg:x="1036" fg:w="2"/><text x="84.2046%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="83.9546%" y="389" width="0.1621%" height="15" fill="rgb(237,32,23)" fg:x="1036" fg:w="2"/><text x="84.2046%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="83.9546%" y="373" width="0.1621%" height="15" fill="rgb(212,35,32)" fg:x="1036" fg:w="2"/><text x="84.2046%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0357%" y="357" width="0.0810%" height="15" fill="rgb(215,199,1)" fg:x="1037" fg:w="1"/><text x="84.2857%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0357%" y="341" width="0.0810%" height="15" fill="rgb(215,67,13)" fg:x="1037" fg:w="1"/><text x="84.2857%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0357%" y="325" width="0.0810%" height="15" fill="rgb(216,20,47)" fg:x="1037" fg:w="1"/><text x="84.2857%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0357%" y="309" width="0.0810%" height="15" fill="rgb(249,183,48)" fg:x="1037" fg:w="1"/><text x="84.2857%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.0357%" y="293" width="0.0810%" height="15" fill="rgb(208,86,37)" fg:x="1037" fg:w="1"/><text x="84.2857%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.0357%" y="277" width="0.0810%" height="15" fill="rgb(251,192,7)" fg:x="1037" fg:w="1"/><text x="84.2857%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.0357%" y="261" width="0.0810%" height="15" fill="rgb(234,196,3)" fg:x="1037" fg:w="1"/><text x="84.2857%" y="271.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="84.1167%" y="421" width="0.0810%" height="15" fill="rgb(229,150,39)" fg:x="1038" fg:w="1"/><text x="84.3667%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.1167%" y="437" width="0.1621%" height="15" fill="rgb(226,19,29)" fg:x="1038" fg:w="2"/><text x="84.3667%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.1977%" y="421" width="0.0810%" height="15" fill="rgb(226,222,2)" fg:x="1039" fg:w="1"/><text x="84.4477%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.1977%" y="405" width="0.0810%" height="15" fill="rgb(235,85,29)" fg:x="1039" fg:w="1"/><text x="84.4477%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.1977%" y="389" width="0.0810%" height="15" fill="rgb(237,194,43)" fg:x="1039" fg:w="1"/><text x="84.4477%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1977%" y="373" width="0.0810%" height="15" fill="rgb(211,4,42)" fg:x="1039" fg:w="1"/><text x="84.4477%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="84.2788%" y="437" width="0.1621%" height="15" fill="rgb(221,80,37)" fg:x="1040" fg:w="2"/><text x="84.5288%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.2788%" y="421" width="0.1621%" height="15" fill="rgb(222,47,31)" fg:x="1040" fg:w="2"/><text x="84.5288%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.2788%" y="405" width="0.1621%" height="15" fill="rgb(249,82,52)" fg:x="1040" fg:w="2"/><text x="84.5288%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="84.2788%" y="389" width="0.1621%" height="15" fill="rgb(218,203,2)" fg:x="1040" fg:w="2"/><text x="84.5288%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.3598%" y="373" width="0.0810%" height="15" fill="rgb(210,175,14)" fg:x="1041" fg:w="1"/><text x="84.6098%" y="383.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="84.4408%" y="437" width="0.0810%" height="15" fill="rgb(216,210,12)" fg:x="1042" fg:w="1"/><text x="84.6908%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.5219%" y="373" width="0.0810%" height="15" fill="rgb(229,120,18)" fg:x="1043" fg:w="1"/><text x="84.7719%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="84.6029%" y="261" width="0.0810%" height="15" fill="rgb(231,174,12)" fg:x="1044" fg:w="1"/><text x="84.8529%" y="271.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="84.5219%" y="421" width="0.3241%" height="15" fill="rgb(214,101,53)" fg:x="1043" fg:w="4"/><text x="84.7719%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="84.5219%" y="405" width="0.3241%" height="15" fill="rgb(246,89,43)" fg:x="1043" fg:w="4"/><text x="84.7719%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="84.5219%" y="389" width="0.3241%" height="15" fill="rgb(222,9,51)" fg:x="1043" fg:w="4"/><text x="84.7719%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="84.6029%" y="373" width="0.2431%" height="15" fill="rgb(252,221,9)" fg:x="1044" fg:w="3"/><text x="84.8529%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="84.6029%" y="357" width="0.2431%" height="15" fill="rgb(248,28,15)" fg:x="1044" fg:w="3"/><text x="84.8529%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="84.6029%" y="341" width="0.2431%" height="15" fill="rgb(213,54,52)" fg:x="1044" fg:w="3"/><text x="84.8529%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="84.6029%" y="325" width="0.2431%" height="15" fill="rgb(240,3,45)" fg:x="1044" fg:w="3"/><text x="84.8529%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="84.6029%" y="309" width="0.2431%" height="15" fill="rgb(239,138,24)" fg:x="1044" fg:w="3"/><text x="84.8529%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="84.6029%" y="293" width="0.2431%" height="15" fill="rgb(233,45,54)" fg:x="1044" fg:w="3"/><text x="84.8529%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="84.6029%" y="277" width="0.2431%" height="15" fill="rgb(220,131,2)" fg:x="1044" fg:w="3"/><text x="84.8529%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="84.6840%" y="261" width="0.1621%" height="15" fill="rgb(240,154,36)" fg:x="1045" fg:w="2"/><text x="84.9340%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="84.8460%" y="277" width="0.1621%" height="15" fill="rgb(251,221,1)" fg:x="1047" fg:w="2"/><text x="85.0960%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="84.9271%" y="261" width="0.0810%" height="15" fill="rgb(225,217,1)" fg:x="1048" fg:w="1"/><text x="85.1771%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="84.9271%" y="245" width="0.0810%" height="15" fill="rgb(241,105,49)" fg:x="1048" fg:w="1"/><text x="85.1771%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9271%" y="229" width="0.0810%" height="15" fill="rgb(215,44,32)" fg:x="1048" fg:w="1"/><text x="85.1771%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="85.0081%" y="277" width="0.0810%" height="15" fill="rgb(213,222,14)" fg:x="1049" fg:w="1"/><text x="85.2581%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0081%" y="261" width="0.0810%" height="15" fill="rgb(207,99,52)" fg:x="1049" fg:w="1"/><text x="85.2581%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="84.8460%" y="341" width="0.3241%" height="15" fill="rgb(214,208,52)" fg:x="1047" fg:w="4"/><text x="85.0960%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="84.8460%" y="325" width="0.3241%" height="15" fill="rgb(244,169,0)" fg:x="1047" fg:w="4"/><text x="85.0960%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="84.8460%" y="309" width="0.3241%" height="15" fill="rgb(216,193,37)" fg:x="1047" fg:w="4"/><text x="85.0960%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="84.8460%" y="293" width="0.3241%" height="15" fill="rgb(212,158,10)" fg:x="1047" fg:w="4"/><text x="85.0960%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0891%" y="277" width="0.0810%" height="15" fill="rgb(213,110,20)" fg:x="1050" fg:w="1"/><text x="85.3391%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0891%" y="261" width="0.0810%" height="15" fill="rgb(226,5,42)" fg:x="1050" fg:w="1"/><text x="85.3391%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.1702%" y="293" width="0.0810%" height="15" fill="rgb(211,93,8)" fg:x="1051" fg:w="1"/><text x="85.4202%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.49%)</title><rect x="84.8460%" y="389" width="0.4862%" height="15" fill="rgb(240,208,12)" fg:x="1047" fg:w="6"/><text x="85.0960%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="84.8460%" y="373" width="0.4862%" height="15" fill="rgb(233,127,50)" fg:x="1047" fg:w="6"/><text x="85.0960%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.49%)</title><rect x="84.8460%" y="357" width="0.4862%" height="15" fill="rgb(227,199,53)" fg:x="1047" fg:w="6"/><text x="85.0960%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="85.1702%" y="341" width="0.1621%" height="15" fill="rgb(235,199,10)" fg:x="1051" fg:w="2"/><text x="85.4202%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="85.1702%" y="325" width="0.1621%" height="15" fill="rgb(228,148,35)" fg:x="1051" fg:w="2"/><text x="85.4202%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="85.1702%" y="309" width="0.1621%" height="15" fill="rgb(217,87,19)" fg:x="1051" fg:w="2"/><text x="85.4202%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="85.2512%" y="293" width="0.0810%" height="15" fill="rgb(239,9,32)" fg:x="1052" fg:w="1"/><text x="85.5012%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="85.2512%" y="277" width="0.0810%" height="15" fill="rgb(229,101,29)" fg:x="1052" fg:w="1"/><text x="85.5012%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.2512%" y="261" width="0.0810%" height="15" fill="rgb(208,143,26)" fg:x="1052" fg:w="1"/><text x="85.5012%" y="271.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (19 samples, 1.54%)</title><rect x="83.8736%" y="453" width="1.5397%" height="15" fill="rgb(214,10,2)" fg:x="1035" fg:w="19"/><text x="84.1236%" y="463.50"></text></g><g><title>kernel::model::entity::Entity::from_str (11 samples, 0.89%)</title><rect x="84.5219%" y="437" width="0.8914%" height="15" fill="rgb(254,203,30)" fg:x="1043" fg:w="11"/><text x="84.7719%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.57%)</title><rect x="84.8460%" y="421" width="0.5673%" height="15" fill="rgb(242,45,3)" fg:x="1047" fg:w="7"/><text x="85.0960%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="84.8460%" y="405" width="0.5673%" height="15" fill="rgb(209,146,51)" fg:x="1047" fg:w="7"/><text x="85.0960%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3323%" y="389" width="0.0810%" height="15" fill="rgb(222,80,5)" fg:x="1053" fg:w="1"/><text x="85.5823%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3323%" y="373" width="0.0810%" height="15" fill="rgb(252,80,35)" fg:x="1053" fg:w="1"/><text x="85.5823%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="85.3323%" y="357" width="0.0810%" height="15" fill="rgb(246,125,28)" fg:x="1053" fg:w="1"/><text x="85.5823%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (23 samples, 1.86%)</title><rect x="83.7115%" y="533" width="1.8639%" height="15" fill="rgb(224,143,51)" fg:x="1033" fg:w="23"/><text x="83.9615%" y="543.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 1.86%)</title><rect x="83.7115%" y="517" width="1.8639%" height="15" fill="rgb(205,24,17)" fg:x="1033" fg:w="23"/><text x="83.9615%" y="527.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 1.78%)</title><rect x="83.7925%" y="501" width="1.7828%" height="15" fill="rgb(253,128,30)" fg:x="1034" fg:w="22"/><text x="84.0425%" y="511.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (21 samples, 1.70%)</title><rect x="83.8736%" y="485" width="1.7018%" height="15" fill="rgb(214,153,25)" fg:x="1035" fg:w="21"/><text x="84.1236%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (21 samples, 1.70%)</title><rect x="83.8736%" y="469" width="1.7018%" height="15" fill="rgb(214,4,28)" fg:x="1035" fg:w="21"/><text x="84.1236%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="85.4133%" y="453" width="0.1621%" height="15" fill="rgb(235,179,52)" fg:x="1054" fg:w="2"/><text x="85.6633%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4943%" y="437" width="0.0810%" height="15" fill="rgb(233,27,42)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4943%" y="421" width="0.0810%" height="15" fill="rgb(238,35,25)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4943%" y="405" width="0.0810%" height="15" fill="rgb(227,44,31)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.4943%" y="389" width="0.0810%" height="15" fill="rgb(232,201,13)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.4943%" y="373" width="0.0810%" height="15" fill="rgb(224,172,52)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.4943%" y="357" width="0.0810%" height="15" fill="rgb(214,27,26)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.4943%" y="341" width="0.0810%" height="15" fill="rgb(210,185,52)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.4943%" y="325" width="0.0810%" height="15" fill="rgb(249,59,32)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.4943%" y="309" width="0.0810%" height="15" fill="rgb(242,209,18)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.4943%" y="293" width="0.0810%" height="15" fill="rgb(229,0,18)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.4943%" y="277" width="0.0810%" height="15" fill="rgb(217,138,29)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.4943%" y="261" width="0.0810%" height="15" fill="rgb(215,72,42)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4943%" y="245" width="0.0810%" height="15" fill="rgb(254,115,11)" fg:x="1055" fg:w="1"/><text x="85.7443%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (24 samples, 1.94%)</title><rect x="83.7115%" y="549" width="1.9449%" height="15" fill="rgb(205,133,39)" fg:x="1033" fg:w="24"/><text x="83.9615%" y="559.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="85.5754%" y="533" width="0.0810%" height="15" fill="rgb(211,36,27)" fg:x="1056" fg:w="1"/><text x="85.8254%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.5754%" y="517" width="0.0810%" height="15" fill="rgb(221,48,10)" fg:x="1056" fg:w="1"/><text x="85.8254%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="85.6564%" y="549" width="0.1621%" height="15" fill="rgb(230,172,50)" fg:x="1057" fg:w="2"/><text x="85.9064%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="85.7374%" y="533" width="0.0810%" height="15" fill="rgb(249,72,18)" fg:x="1058" fg:w="1"/><text x="85.9874%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.8185%" y="517" width="0.0810%" height="15" fill="rgb(237,58,48)" fg:x="1059" fg:w="1"/><text x="86.0685%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8185%" y="501" width="0.0810%" height="15" fill="rgb(242,123,3)" fg:x="1059" fg:w="1"/><text x="86.0685%" y="511.50"></text></g><g><title>plugins_core::tools::get_contained_keys (35 samples, 2.84%)</title><rect x="83.3063%" y="597" width="2.8363%" height="15" fill="rgb(232,111,32)" fg:x="1028" fg:w="35"/><text x="83.5563%" y="607.50">pl..</text></g><g><title>kernel::model::entry::Entry::scope (34 samples, 2.76%)</title><rect x="83.3874%" y="581" width="2.7553%" height="15" fill="rgb(229,108,3)" fg:x="1029" fg:w="34"/><text x="83.6374%" y="591.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (34 samples, 2.76%)</title><rect x="83.3874%" y="565" width="2.7553%" height="15" fill="rgb(222,158,10)" fg:x="1029" fg:w="34"/><text x="83.6374%" y="575.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="85.8185%" y="549" width="0.3241%" height="15" fill="rgb(205,34,49)" fg:x="1059" fg:w="4"/><text x="86.0685%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="85.8185%" y="533" width="0.3241%" height="15" fill="rgb(232,21,14)" fg:x="1059" fg:w="4"/><text x="86.0685%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="85.8995%" y="517" width="0.2431%" height="15" fill="rgb(229,127,44)" fg:x="1060" fg:w="3"/><text x="86.1495%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="85.8995%" y="501" width="0.2431%" height="15" fill="rgb(232,171,4)" fg:x="1060" fg:w="3"/><text x="86.1495%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="85.9806%" y="485" width="0.1621%" height="15" fill="rgb(250,92,16)" fg:x="1061" fg:w="2"/><text x="86.2306%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.9806%" y="469" width="0.1621%" height="15" fill="rgb(230,103,38)" fg:x="1061" fg:w="2"/><text x="86.2306%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.9806%" y="453" width="0.1621%" height="15" fill="rgb(253,167,9)" fg:x="1061" fg:w="2"/><text x="86.2306%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.0616%" y="437" width="0.0810%" height="15" fill="rgb(222,118,11)" fg:x="1062" fg:w="1"/><text x="86.3116%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.1426%" y="549" width="0.0810%" height="15" fill="rgb(240,202,0)" fg:x="1063" fg:w="1"/><text x="86.3926%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.1426%" y="533" width="0.0810%" height="15" fill="rgb(236,124,4)" fg:x="1063" fg:w="1"/><text x="86.3926%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.1426%" y="517" width="0.0810%" height="15" fill="rgb(244,128,18)" fg:x="1063" fg:w="1"/><text x="86.3926%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.1426%" y="501" width="0.0810%" height="15" fill="rgb(231,206,5)" fg:x="1063" fg:w="1"/><text x="86.3926%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 4.13%)</title><rect x="82.1718%" y="629" width="4.1329%" height="15" fill="rgb(237,111,8)" fg:x="1014" fg:w="51"/><text x="82.4218%" y="639.50">&lt;allo..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (51 samples, 4.13%)</title><rect x="82.1718%" y="613" width="4.1329%" height="15" fill="rgb(225,127,3)" fg:x="1014" fg:w="51"/><text x="82.4218%" y="623.50">&lt;core..</text></g><g><title>plugins_core::tools::get_occupant_keys (2 samples, 0.16%)</title><rect x="86.1426%" y="597" width="0.1621%" height="15" fill="rgb(222,85,48)" fg:x="1063" fg:w="2"/><text x="86.3926%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="86.1426%" y="581" width="0.1621%" height="15" fill="rgb(221,108,37)" fg:x="1063" fg:w="2"/><text x="86.3926%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.1426%" y="565" width="0.1621%" height="15" fill="rgb(226,169,36)" fg:x="1063" fg:w="2"/><text x="86.3926%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.2237%" y="549" width="0.0810%" height="15" fill="rgb(237,76,12)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2237%" y="533" width="0.0810%" height="15" fill="rgb(210,227,32)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.2237%" y="517" width="0.0810%" height="15" fill="rgb(214,117,20)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2237%" y="501" width="0.0810%" height="15" fill="rgb(234,119,41)" fg:x="1064" fg:w="1"/><text x="86.4737%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="86.4668%" y="581" width="0.0810%" height="15" fill="rgb(230,130,47)" fg:x="1067" fg:w="1"/><text x="86.7168%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="86.4668%" y="565" width="0.0810%" height="15" fill="rgb(215,21,41)" fg:x="1067" fg:w="1"/><text x="86.7168%" y="575.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="86.4668%" y="549" width="0.0810%" height="15" fill="rgb(226,26,53)" fg:x="1067" fg:w="1"/><text x="86.7168%" y="559.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="87.6013%" y="229" width="0.0810%" height="15" fill="rgb(221,92,23)" fg:x="1081" fg:w="1"/><text x="87.8513%" y="239.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.6013%" y="213" width="0.0810%" height="15" fill="rgb(213,156,21)" fg:x="1081" fg:w="1"/><text x="87.8513%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="87.5203%" y="245" width="0.2431%" height="15" fill="rgb(254,166,29)" fg:x="1080" fg:w="3"/><text x="87.7703%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.6823%" y="229" width="0.0810%" height="15" fill="rgb(213,71,1)" fg:x="1082" fg:w="1"/><text x="87.9323%" y="239.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (6 samples, 0.49%)</title><rect x="87.4392%" y="325" width="0.4862%" height="15" fill="rgb(245,8,13)" fg:x="1079" fg:w="6"/><text x="87.6892%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (6 samples, 0.49%)</title><rect x="87.4392%" y="309" width="0.4862%" height="15" fill="rgb(213,32,32)" fg:x="1079" fg:w="6"/><text x="87.6892%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.49%)</title><rect x="87.4392%" y="293" width="0.4862%" height="15" fill="rgb(251,86,50)" fg:x="1079" fg:w="6"/><text x="87.6892%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.41%)</title><rect x="87.5203%" y="277" width="0.4052%" height="15" fill="rgb(252,92,41)" fg:x="1080" fg:w="5"/><text x="87.7703%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.41%)</title><rect x="87.5203%" y="261" width="0.4052%" height="15" fill="rgb(234,70,35)" fg:x="1080" fg:w="5"/><text x="87.7703%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="87.7634%" y="245" width="0.1621%" height="15" fill="rgb(210,157,19)" fg:x="1083" fg:w="2"/><text x="88.0134%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.8444%" y="229" width="0.0810%" height="15" fill="rgb(206,20,45)" fg:x="1084" fg:w="1"/><text x="88.0944%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.9254%" y="325" width="0.0810%" height="15" fill="rgb(207,34,7)" fg:x="1085" fg:w="1"/><text x="88.1754%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.9254%" y="309" width="0.0810%" height="15" fill="rgb(253,151,14)" fg:x="1085" fg:w="1"/><text x="88.1754%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.65%)</title><rect x="87.4392%" y="341" width="0.6483%" height="15" fill="rgb(252,1,18)" fg:x="1079" fg:w="8"/><text x="87.6892%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.0065%" y="325" width="0.0810%" height="15" fill="rgb(214,77,52)" fg:x="1086" fg:w="1"/><text x="88.2565%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.0065%" y="309" width="0.0810%" height="15" fill="rgb(254,106,35)" fg:x="1086" fg:w="1"/><text x="88.2565%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (10 samples, 0.81%)</title><rect x="87.4392%" y="373" width="0.8104%" height="15" fill="rgb(212,67,40)" fg:x="1079" fg:w="10"/><text x="87.6892%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10 samples, 0.81%)</title><rect x="87.4392%" y="357" width="0.8104%" height="15" fill="rgb(228,76,23)" fg:x="1079" fg:w="10"/><text x="87.6892%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="88.0875%" y="341" width="0.1621%" height="15" fill="rgb(250,198,5)" fg:x="1087" fg:w="2"/><text x="88.3375%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.0875%" y="325" width="0.1621%" height="15" fill="rgb(209,20,25)" fg:x="1087" fg:w="2"/><text x="88.3375%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.2496%" y="373" width="0.0810%" height="15" fill="rgb(236,32,4)" fg:x="1089" fg:w="1"/><text x="88.4996%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.2496%" y="357" width="0.0810%" height="15" fill="rgb(215,31,6)" fg:x="1089" fg:w="1"/><text x="88.4996%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 1.05%)</title><rect x="87.4392%" y="389" width="1.0535%" height="15" fill="rgb(207,186,49)" fg:x="1079" fg:w="13"/><text x="87.6892%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.3306%" y="373" width="0.1621%" height="15" fill="rgb(211,212,49)" fg:x="1090" fg:w="2"/><text x="88.5806%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="88.3306%" y="357" width="0.1621%" height="15" fill="rgb(229,51,41)" fg:x="1090" fg:w="2"/><text x="88.5806%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (16 samples, 1.30%)</title><rect x="87.4392%" y="405" width="1.2966%" height="15" fill="rgb(205,225,36)" fg:x="1079" fg:w="16"/><text x="87.6892%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="88.4927%" y="389" width="0.2431%" height="15" fill="rgb(209,213,45)" fg:x="1092" fg:w="3"/><text x="88.7427%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.5737%" y="373" width="0.1621%" height="15" fill="rgb(219,35,49)" fg:x="1093" fg:w="2"/><text x="88.8237%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (22 samples, 1.78%)</title><rect x="87.0340%" y="469" width="1.7828%" height="15" fill="rgb(215,205,22)" fg:x="1074" fg:w="22"/><text x="87.2840%" y="479.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (20 samples, 1.62%)</title><rect x="87.1961%" y="453" width="1.6207%" height="15" fill="rgb(248,204,34)" fg:x="1076" fg:w="20"/><text x="87.4461%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 1.62%)</title><rect x="87.1961%" y="437" width="1.6207%" height="15" fill="rgb(219,223,31)" fg:x="1076" fg:w="20"/><text x="87.4461%" y="447.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (18 samples, 1.46%)</title><rect x="87.3582%" y="421" width="1.4587%" height="15" fill="rgb(236,14,8)" fg:x="1078" fg:w="18"/><text x="87.6082%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="88.7358%" y="405" width="0.0810%" height="15" fill="rgb(243,129,23)" fg:x="1095" fg:w="1"/><text x="88.9858%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="88.7358%" y="389" width="0.0810%" height="15" fill="rgb(205,204,5)" fg:x="1095" fg:w="1"/><text x="88.9858%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="88.7358%" y="373" width="0.0810%" height="15" fill="rgb(244,115,32)" fg:x="1095" fg:w="1"/><text x="88.9858%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="88.7358%" y="357" width="0.0810%" height="15" fill="rgb(229,123,14)" fg:x="1095" fg:w="1"/><text x="88.9858%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="88.7358%" y="341" width="0.0810%" height="15" fill="rgb(250,85,1)" fg:x="1095" fg:w="1"/><text x="88.9858%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7358%" y="325" width="0.0810%" height="15" fill="rgb(209,141,54)" fg:x="1095" fg:w="1"/><text x="88.9858%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 2.19%)</title><rect x="86.7909%" y="485" width="2.1880%" height="15" fill="rgb(244,107,39)" fg:x="1071" fg:w="27"/><text x="87.0409%" y="495.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="88.8169%" y="469" width="0.1621%" height="15" fill="rgb(230,68,26)" fg:x="1096" fg:w="2"/><text x="89.0669%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.8979%" y="453" width="0.0810%" height="15" fill="rgb(220,178,33)" fg:x="1097" fg:w="1"/><text x="89.1479%" y="463.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (30 samples, 2.43%)</title><rect x="86.7099%" y="517" width="2.4311%" height="15" fill="rgb(220,77,53)" fg:x="1070" fg:w="30"/><text x="86.9599%" y="527.50">&lt;r..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (29 samples, 2.35%)</title><rect x="86.7909%" y="501" width="2.3501%" height="15" fill="rgb(224,108,19)" fg:x="1071" fg:w="29"/><text x="87.0409%" y="511.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="88.9789%" y="485" width="0.1621%" height="15" fill="rgb(223,203,27)" fg:x="1098" fg:w="2"/><text x="89.2289%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.9789%" y="469" width="0.1621%" height="15" fill="rgb(211,32,46)" fg:x="1098" fg:w="2"/><text x="89.2289%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.1410%" y="517" width="0.0810%" height="15" fill="rgb(240,101,27)" fg:x="1100" fg:w="1"/><text x="89.3910%" y="527.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (36 samples, 2.92%)</title><rect x="86.5478%" y="565" width="2.9173%" height="15" fill="rgb(217,210,11)" fg:x="1068" fg:w="36"/><text x="86.7978%" y="575.50">&lt;r..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (35 samples, 2.84%)</title><rect x="86.6288%" y="549" width="2.8363%" height="15" fill="rgb(236,130,21)" fg:x="1069" fg:w="35"/><text x="86.8788%" y="559.50">&lt;s..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (35 samples, 2.84%)</title><rect x="86.6288%" y="533" width="2.8363%" height="15" fill="rgb(250,136,8)" fg:x="1069" fg:w="35"/><text x="86.8788%" y="543.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="89.2220%" y="517" width="0.2431%" height="15" fill="rgb(243,223,36)" fg:x="1101" fg:w="3"/><text x="89.4720%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="89.3031%" y="501" width="0.1621%" height="15" fill="rgb(246,184,8)" fg:x="1102" fg:w="2"/><text x="89.5531%" y="511.50"></text></g><g><title>__libc_malloc (5 samples, 0.41%)</title><rect x="89.4652%" y="517" width="0.4052%" height="15" fill="rgb(222,158,36)" fg:x="1104" fg:w="5"/><text x="89.7152%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.41%)</title><rect x="89.8703%" y="517" width="0.4052%" height="15" fill="rgb(210,220,19)" fg:x="1109" fg:w="5"/><text x="90.1203%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.1135%" y="501" width="0.1621%" height="15" fill="rgb(246,44,38)" fg:x="1112" fg:w="2"/><text x="90.3635%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.1945%" y="485" width="0.0810%" height="15" fill="rgb(246,186,14)" fg:x="1113" fg:w="1"/><text x="90.4445%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="90.3566%" y="485" width="0.1621%" height="15" fill="rgb(233,193,20)" fg:x="1115" fg:w="2"/><text x="90.6066%" y="495.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="90.2755%" y="517" width="0.3241%" height="15" fill="rgb(215,60,5)" fg:x="1114" fg:w="4"/><text x="90.5255%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="90.3566%" y="501" width="0.2431%" height="15" fill="rgb(207,128,10)" fg:x="1115" fg:w="3"/><text x="90.6066%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.5186%" y="485" width="0.0810%" height="15" fill="rgb(238,84,54)" fg:x="1117" fg:w="1"/><text x="90.7686%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.8428%" y="469" width="0.0810%" height="15" fill="rgb(213,130,11)" fg:x="1121" fg:w="1"/><text x="91.0928%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.8428%" y="453" width="0.0810%" height="15" fill="rgb(235,62,9)" fg:x="1121" fg:w="1"/><text x="91.0928%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="90.9238%" y="453" width="0.0810%" height="15" fill="rgb(222,64,24)" fg:x="1122" fg:w="1"/><text x="91.1738%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.9238%" y="437" width="0.0810%" height="15" fill="rgb(238,193,42)" fg:x="1122" fg:w="1"/><text x="91.1738%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="90.9238%" y="469" width="0.2431%" height="15" fill="rgb(243,204,46)" fg:x="1122" fg:w="3"/><text x="91.1738%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="91.0049%" y="453" width="0.1621%" height="15" fill="rgb(243,196,11)" fg:x="1123" fg:w="2"/><text x="91.2549%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="91.0859%" y="437" width="0.0810%" height="15" fill="rgb(232,77,22)" fg:x="1124" fg:w="1"/><text x="91.3359%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="91.4100%" y="437" width="0.2431%" height="15" fill="rgb(215,80,25)" fg:x="1128" fg:w="3"/><text x="91.6600%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="91.4100%" y="421" width="0.2431%" height="15" fill="rgb(210,173,7)" fg:x="1128" fg:w="3"/><text x="91.6600%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.4911%" y="405" width="0.1621%" height="15" fill="rgb(207,101,10)" fg:x="1129" fg:w="2"/><text x="91.7411%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.8152%" y="389" width="0.0810%" height="15" fill="rgb(246,57,48)" fg:x="1133" fg:w="1"/><text x="92.0652%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="91.9773%" y="357" width="0.0810%" height="15" fill="rgb(236,184,40)" fg:x="1135" fg:w="1"/><text x="92.2273%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="91.6532%" y="421" width="0.4862%" height="15" fill="rgb(210,205,13)" fg:x="1131" fg:w="6"/><text x="91.9032%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.41%)</title><rect x="91.7342%" y="405" width="0.4052%" height="15" fill="rgb(231,129,42)" fg:x="1132" fg:w="5"/><text x="91.9842%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="91.8963%" y="389" width="0.2431%" height="15" fill="rgb(220,229,54)" fg:x="1134" fg:w="3"/><text x="92.1463%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="91.9773%" y="373" width="0.1621%" height="15" fill="rgb(230,192,26)" fg:x="1135" fg:w="2"/><text x="92.2273%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.0583%" y="357" width="0.0810%" height="15" fill="rgb(253,18,30)" fg:x="1136" fg:w="1"/><text x="92.3083%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="92.1394%" y="421" width="0.0810%" height="15" fill="rgb(216,62,53)" fg:x="1137" fg:w="1"/><text x="92.3894%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.54%)</title><rect x="90.7618%" y="485" width="1.5397%" height="15" fill="rgb(230,79,29)" fg:x="1120" fg:w="19"/><text x="91.0118%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.13%)</title><rect x="91.1669%" y="469" width="1.1345%" height="15" fill="rgb(242,26,26)" fg:x="1125" fg:w="14"/><text x="91.4169%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.89%)</title><rect x="91.4100%" y="453" width="0.8914%" height="15" fill="rgb(227,125,21)" fg:x="1128" fg:w="11"/><text x="91.6600%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.65%)</title><rect x="91.6532%" y="437" width="0.6483%" height="15" fill="rgb(229,93,26)" fg:x="1131" fg:w="8"/><text x="91.9032%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.2204%" y="421" width="0.0810%" height="15" fill="rgb(227,228,8)" fg:x="1138" fg:w="1"/><text x="92.4704%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (23 samples, 1.86%)</title><rect x="90.6807%" y="501" width="1.8639%" height="15" fill="rgb(233,56,0)" fg:x="1119" fg:w="23"/><text x="90.9307%" y="511.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="92.3015%" y="485" width="0.2431%" height="15" fill="rgb(225,185,17)" fg:x="1139" fg:w="3"/><text x="92.5515%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="92.3825%" y="469" width="0.1621%" height="15" fill="rgb(238,202,30)" fg:x="1140" fg:w="2"/><text x="92.6325%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5446%" y="501" width="0.0810%" height="15" fill="rgb(236,60,13)" fg:x="1142" fg:w="1"/><text x="92.7946%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (132 samples, 10.70%)</title><rect x="82.1718%" y="645" width="10.6969%" height="15" fill="rgb(244,92,0)" fg:x="1014" fg:w="132"/><text x="82.4218%" y="655.50">core::iter::adap..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (81 samples, 6.56%)</title><rect x="86.3047%" y="629" width="6.5640%" height="15" fill="rgb(225,57,15)" fg:x="1065" fg:w="81"/><text x="86.5547%" y="639.50">alloc::ve..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (81 samples, 6.56%)</title><rect x="86.3047%" y="613" width="6.5640%" height="15" fill="rgb(228,5,28)" fg:x="1065" fg:w="81"/><text x="86.5547%" y="623.50">&lt;core::it..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (80 samples, 6.48%)</title><rect x="86.3857%" y="597" width="6.4830%" height="15" fill="rgb(252,34,51)" fg:x="1066" fg:w="80"/><text x="86.6357%" y="607.50">plugins_..</text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (78 samples, 6.32%)</title><rect x="86.5478%" y="581" width="6.3209%" height="15" fill="rgb(235,58,7)" fg:x="1068" fg:w="78"/><text x="86.7978%" y="591.50">&lt;rpc_pro..</text></g><g><title>kernel::model::EntityPtr::to_json_value (42 samples, 3.40%)</title><rect x="89.4652%" y="565" width="3.4036%" height="15" fill="rgb(250,132,20)" fg:x="1104" fg:w="42"/><text x="89.7152%" y="575.50">ker..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (42 samples, 3.40%)</title><rect x="89.4652%" y="549" width="3.4036%" height="15" fill="rgb(217,164,0)" fg:x="1104" fg:w="42"/><text x="89.7152%" y="559.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (42 samples, 3.40%)</title><rect x="89.4652%" y="533" width="3.4036%" height="15" fill="rgb(208,220,35)" fg:x="1104" fg:w="42"/><text x="89.7152%" y="543.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (28 samples, 2.27%)</title><rect x="90.5997%" y="517" width="2.2690%" height="15" fill="rgb(227,42,51)" fg:x="1118" fg:w="28"/><text x="90.8497%" y="527.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="92.6256%" y="501" width="0.2431%" height="15" fill="rgb(225,146,38)" fg:x="1143" fg:w="3"/><text x="92.8756%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.7877%" y="485" width="0.0810%" height="15" fill="rgb(252,108,37)" fg:x="1145" fg:w="1"/><text x="93.0377%" y="495.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (144 samples, 11.67%)</title><rect x="81.2804%" y="661" width="11.6694%" height="15" fill="rgb(244,101,24)" fg:x="1003" fg:w="144"/><text x="81.5304%" y="671.50">&lt;plugins_rpc::ses..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.8687%" y="645" width="0.0810%" height="15" fill="rgb(213,161,50)" fg:x="1146" fg:w="1"/><text x="93.1187%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.8687%" y="629" width="0.0810%" height="15" fill="rgb(248,159,19)" fg:x="1146" fg:w="1"/><text x="93.1187%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="92.9498%" y="645" width="0.0810%" height="15" fill="rgb(233,179,15)" fg:x="1147" fg:w="1"/><text x="93.1998%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="92.9498%" y="629" width="0.0810%" height="15" fill="rgb(248,178,3)" fg:x="1147" fg:w="1"/><text x="93.1998%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="92.9498%" y="613" width="0.0810%" height="15" fill="rgb(245,190,41)" fg:x="1147" fg:w="1"/><text x="93.1998%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="92.9498%" y="597" width="0.0810%" height="15" fill="rgb(218,151,19)" fg:x="1147" fg:w="1"/><text x="93.1998%" y="607.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="92.9498%" y="581" width="0.0810%" height="15" fill="rgb(245,25,44)" fg:x="1147" fg:w="1"/><text x="93.1998%" y="591.50"></text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (174 samples, 14.10%)</title><rect x="79.0113%" y="709" width="14.1005%" height="15" fill="rgb(235,172,47)" fg:x="975" fg:w="174"/><text x="79.2613%" y="719.50">kernel::plugins::Sess..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (174 samples, 14.10%)</title><rect x="79.0113%" y="693" width="14.1005%" height="15" fill="rgb(246,33,12)" fg:x="975" fg:w="174"/><text x="79.2613%" y="703.50">&lt;plugins_dynlib::Dyna..</text></g><g><title>plugins_rpc::querying::have_surroundings (147 samples, 11.91%)</title><rect x="81.1994%" y="677" width="11.9125%" height="15" fill="rgb(214,124,7)" fg:x="1002" fg:w="147"/><text x="81.4494%" y="687.50">plugins_rpc::query..</text></g><g><title>&lt;rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (2 samples, 0.16%)</title><rect x="92.9498%" y="661" width="0.1621%" height="15" fill="rgb(246,186,18)" fg:x="1147" fg:w="2"/><text x="93.1998%" y="671.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="93.0308%" y="645" width="0.0810%" height="15" fill="rgb(231,94,1)" fg:x="1148" fg:w="1"/><text x="93.2808%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2739%" y="517" width="0.0810%" height="15" fill="rgb(208,33,48)" fg:x="1151" fg:w="1"/><text x="93.5239%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2739%" y="501" width="0.0810%" height="15" fill="rgb(208,195,44)" fg:x="1151" fg:w="1"/><text x="93.5239%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="93.3549%" y="517" width="0.1621%" height="15" fill="rgb(226,13,52)" fg:x="1152" fg:w="2"/><text x="93.6049%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="93.3549%" y="501" width="0.1621%" height="15" fill="rgb(217,219,45)" fg:x="1152" fg:w="2"/><text x="93.6049%" y="511.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="93.3549%" y="485" width="0.1621%" height="15" fill="rgb(223,45,25)" fg:x="1152" fg:w="2"/><text x="93.6049%" y="495.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (4 samples, 0.32%)</title><rect x="93.2739%" y="533" width="0.3241%" height="15" fill="rgb(241,163,0)" fg:x="1151" fg:w="4"/><text x="93.5239%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (1 samples, 0.08%)</title><rect x="93.5170%" y="517" width="0.0810%" height="15" fill="rgb(216,68,47)" fg:x="1154" fg:w="1"/><text x="93.7670%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="93.5170%" y="501" width="0.0810%" height="15" fill="rgb(236,119,45)" fg:x="1154" fg:w="1"/><text x="93.7670%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.5170%" y="485" width="0.0810%" height="15" fill="rgb(209,188,24)" fg:x="1154" fg:w="1"/><text x="93.7670%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.5981%" y="421" width="0.1621%" height="15" fill="rgb(221,118,7)" fg:x="1155" fg:w="2"/><text x="93.8481%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.6791%" y="405" width="0.0810%" height="15" fill="rgb(213,148,43)" fg:x="1156" fg:w="1"/><text x="93.9291%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.6791%" y="389" width="0.0810%" height="15" fill="rgb(231,21,43)" fg:x="1156" fg:w="1"/><text x="93.9291%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.6791%" y="373" width="0.0810%" height="15" fill="rgb(232,213,43)" fg:x="1156" fg:w="1"/><text x="93.9291%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6791%" y="357" width="0.0810%" height="15" fill="rgb(239,145,50)" fg:x="1156" fg:w="1"/><text x="93.9291%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6791%" y="341" width="0.0810%" height="15" fill="rgb(222,131,18)" fg:x="1156" fg:w="1"/><text x="93.9291%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.6791%" y="325" width="0.0810%" height="15" fill="rgb(243,181,13)" fg:x="1156" fg:w="1"/><text x="93.9291%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.6791%" y="309" width="0.0810%" height="15" fill="rgb(212,74,41)" fg:x="1156" fg:w="1"/><text x="93.9291%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.6791%" y="293" width="0.0810%" height="15" fill="rgb(237,143,34)" fg:x="1156" fg:w="1"/><text x="93.9291%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="93.6791%" y="277" width="0.0810%" height="15" fill="rgb(228,139,0)" fg:x="1156" fg:w="1"/><text x="93.9291%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.6791%" y="261" width="0.0810%" height="15" fill="rgb(227,214,11)" fg:x="1156" fg:w="1"/><text x="93.9291%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (7 samples, 0.57%)</title><rect x="93.2739%" y="565" width="0.5673%" height="15" fill="rgb(228,118,39)" fg:x="1151" fg:w="7"/><text x="93.5239%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (7 samples, 0.57%)</title><rect x="93.2739%" y="549" width="0.5673%" height="15" fill="rgb(207,117,22)" fg:x="1151" fg:w="7"/><text x="93.5239%" y="559.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="93.5981%" y="533" width="0.2431%" height="15" fill="rgb(225,91,8)" fg:x="1155" fg:w="3"/><text x="93.8481%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="93.5981%" y="517" width="0.2431%" height="15" fill="rgb(230,219,48)" fg:x="1155" fg:w="3"/><text x="93.8481%" y="527.50"></text></g><g><title>plugins_core::finding::matches_description (3 samples, 0.24%)</title><rect x="93.5981%" y="501" width="0.2431%" height="15" fill="rgb(244,0,23)" fg:x="1155" fg:w="3"/><text x="93.8481%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::name (3 samples, 0.24%)</title><rect x="93.5981%" y="485" width="0.2431%" height="15" fill="rgb(206,212,23)" fg:x="1155" fg:w="3"/><text x="93.8481%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="93.5981%" y="469" width="0.2431%" height="15" fill="rgb(254,62,10)" fg:x="1155" fg:w="3"/><text x="93.8481%" y="479.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="93.5981%" y="453" width="0.2431%" height="15" fill="rgb(236,58,8)" fg:x="1155" fg:w="3"/><text x="93.8481%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="93.5981%" y="437" width="0.2431%" height="15" fill="rgb(232,212,17)" fg:x="1155" fg:w="3"/><text x="93.8481%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.7601%" y="421" width="0.0810%" height="15" fill="rgb(206,132,9)" fg:x="1157" fg:w="1"/><text x="94.0101%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7601%" y="405" width="0.0810%" height="15" fill="rgb(234,97,28)" fg:x="1157" fg:w="1"/><text x="94.0101%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.7601%" y="389" width="0.0810%" height="15" fill="rgb(254,144,9)" fg:x="1157" fg:w="1"/><text x="94.0101%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7601%" y="373" width="0.0810%" height="15" fill="rgb(244,204,43)" fg:x="1157" fg:w="1"/><text x="94.0101%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.7601%" y="357" width="0.0810%" height="15" fill="rgb(248,177,16)" fg:x="1157" fg:w="1"/><text x="94.0101%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7601%" y="341" width="0.0810%" height="15" fill="rgb(219,110,15)" fg:x="1157" fg:w="1"/><text x="94.0101%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.7601%" y="325" width="0.0810%" height="15" fill="rgb(212,203,25)" fg:x="1157" fg:w="1"/><text x="94.0101%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7601%" y="309" width="0.0810%" height="15" fill="rgb(205,50,1)" fg:x="1157" fg:w="1"/><text x="94.0101%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.7601%" y="293" width="0.0810%" height="15" fill="rgb(222,152,41)" fg:x="1157" fg:w="1"/><text x="94.0101%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7601%" y="277" width="0.0810%" height="15" fill="rgb(236,83,3)" fg:x="1157" fg:w="1"/><text x="94.0101%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="93.8412%" y="501" width="0.0810%" height="15" fill="rgb(214,30,54)" fg:x="1158" fg:w="1"/><text x="94.0912%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="93.8412%" y="485" width="0.0810%" height="15" fill="rgb(250,117,31)" fg:x="1158" fg:w="1"/><text x="94.0912%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.8412%" y="469" width="0.0810%" height="15" fill="rgb(228,77,14)" fg:x="1158" fg:w="1"/><text x="94.0912%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.8412%" y="453" width="0.0810%" height="15" fill="rgb(241,3,28)" fg:x="1158" fg:w="1"/><text x="94.0912%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.8412%" y="437" width="0.0810%" height="15" fill="rgb(221,175,52)" fg:x="1158" fg:w="1"/><text x="94.0912%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.8412%" y="421" width="0.0810%" height="15" fill="rgb(237,91,6)" fg:x="1158" fg:w="1"/><text x="94.0912%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="93.8412%" y="549" width="0.2431%" height="15" fill="rgb(246,46,42)" fg:x="1158" fg:w="3"/><text x="94.0912%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="93.8412%" y="533" width="0.2431%" height="15" fill="rgb(235,199,0)" fg:x="1158" fg:w="3"/><text x="94.0912%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="93.8412%" y="517" width="0.2431%" height="15" fill="rgb(224,44,40)" fg:x="1158" fg:w="3"/><text x="94.0912%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.9222%" y="501" width="0.1621%" height="15" fill="rgb(209,24,35)" fg:x="1159" fg:w="2"/><text x="94.1722%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.9222%" y="485" width="0.1621%" height="15" fill="rgb(244,46,22)" fg:x="1159" fg:w="2"/><text x="94.1722%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.0032%" y="469" width="0.0810%" height="15" fill="rgb(235,99,8)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0032%" y="453" width="0.0810%" height="15" fill="rgb(218,127,36)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.0032%" y="437" width="0.0810%" height="15" fill="rgb(238,47,46)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0032%" y="421" width="0.0810%" height="15" fill="rgb(233,65,17)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.0032%" y="405" width="0.0810%" height="15" fill="rgb(239,22,33)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0032%" y="389" width="0.0810%" height="15" fill="rgb(243,66,43)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.0032%" y="373" width="0.0810%" height="15" fill="rgb(235,210,28)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0032%" y="357" width="0.0810%" height="15" fill="rgb(205,191,50)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="94.0032%" y="341" width="0.0810%" height="15" fill="rgb(251,217,19)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="94.0032%" y="325" width="0.0810%" height="15" fill="rgb(205,174,37)" fg:x="1160" fg:w="1"/><text x="94.2532%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.0843%" y="501" width="0.0810%" height="15" fill="rgb(212,158,42)" fg:x="1161" fg:w="1"/><text x="94.3343%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.0843%" y="485" width="0.0810%" height="15" fill="rgb(212,208,51)" fg:x="1161" fg:w="1"/><text x="94.3343%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.0843%" y="469" width="0.0810%" height="15" fill="rgb(225,198,20)" fg:x="1161" fg:w="1"/><text x="94.3343%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.0843%" y="453" width="0.0810%" height="15" fill="rgb(247,41,44)" fg:x="1161" fg:w="1"/><text x="94.3343%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.0843%" y="437" width="0.0810%" height="15" fill="rgb(228,33,41)" fg:x="1161" fg:w="1"/><text x="94.3343%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.0843%" y="421" width="0.0810%" height="15" fill="rgb(215,47,52)" fg:x="1161" fg:w="1"/><text x="94.3343%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.0843%" y="405" width="0.0810%" height="15" fill="rgb(248,106,37)" fg:x="1161" fg:w="1"/><text x="94.3343%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.0843%" y="389" width="0.0810%" height="15" fill="rgb(238,91,29)" fg:x="1161" fg:w="1"/><text x="94.3343%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0843%" y="373" width="0.0810%" height="15" fill="rgb(226,111,40)" fg:x="1161" fg:w="1"/><text x="94.3343%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0843%" y="357" width="0.0810%" height="15" fill="rgb(229,159,36)" fg:x="1161" fg:w="1"/><text x="94.3343%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.0843%" y="341" width="0.0810%" height="15" fill="rgb(221,109,4)" fg:x="1161" fg:w="1"/><text x="94.3343%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.0843%" y="325" width="0.0810%" height="15" fill="rgb(236,56,25)" fg:x="1161" fg:w="1"/><text x="94.3343%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.0843%" y="309" width="0.0810%" height="15" fill="rgb(244,113,23)" fg:x="1161" fg:w="1"/><text x="94.3343%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.0843%" y="293" width="0.0810%" height="15" fill="rgb(249,132,2)" fg:x="1161" fg:w="1"/><text x="94.3343%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (8 samples, 0.65%)</title><rect x="93.8412%" y="565" width="0.6483%" height="15" fill="rgb(205,185,21)" fg:x="1158" fg:w="8"/><text x="94.0912%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.41%)</title><rect x="94.0843%" y="549" width="0.4052%" height="15" fill="rgb(245,130,2)" fg:x="1161" fg:w="5"/><text x="94.3343%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.41%)</title><rect x="94.0843%" y="533" width="0.4052%" height="15" fill="rgb(246,71,26)" fg:x="1161" fg:w="5"/><text x="94.3343%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.41%)</title><rect x="94.0843%" y="517" width="0.4052%" height="15" fill="rgb(234,194,6)" fg:x="1161" fg:w="5"/><text x="94.3343%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="94.1653%" y="501" width="0.3241%" height="15" fill="rgb(206,24,32)" fg:x="1162" fg:w="4"/><text x="94.4153%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="94.1653%" y="485" width="0.3241%" height="15" fill="rgb(233,7,54)" fg:x="1162" fg:w="4"/><text x="94.4153%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="94.2464%" y="469" width="0.2431%" height="15" fill="rgb(252,46,1)" fg:x="1163" fg:w="3"/><text x="94.4964%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.2464%" y="453" width="0.2431%" height="15" fill="rgb(216,113,53)" fg:x="1163" fg:w="3"/><text x="94.4964%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="94.2464%" y="437" width="0.2431%" height="15" fill="rgb(215,40,24)" fg:x="1163" fg:w="3"/><text x="94.4964%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.2464%" y="421" width="0.2431%" height="15" fill="rgb(233,222,8)" fg:x="1163" fg:w="3"/><text x="94.4964%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="94.2464%" y="405" width="0.2431%" height="15" fill="rgb(248,73,28)" fg:x="1163" fg:w="3"/><text x="94.4964%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4084%" y="389" width="0.0810%" height="15" fill="rgb(247,126,28)" fg:x="1165" fg:w="1"/><text x="94.6584%" y="399.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="94.4895%" y="565" width="0.1621%" height="15" fill="rgb(242,173,54)" fg:x="1166" fg:w="2"/><text x="94.7395%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.4895%" y="549" width="0.1621%" height="15" fill="rgb(244,186,22)" fg:x="1166" fg:w="2"/><text x="94.7395%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5705%" y="533" width="0.0810%" height="15" fill="rgb(231,187,4)" fg:x="1167" fg:w="1"/><text x="94.8205%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5705%" y="517" width="0.0810%" height="15" fill="rgb(252,66,47)" fg:x="1167" fg:w="1"/><text x="94.8205%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.5705%" y="501" width="0.0810%" height="15" fill="rgb(240,228,28)" fg:x="1167" fg:w="1"/><text x="94.8205%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.5705%" y="485" width="0.0810%" height="15" fill="rgb(237,63,43)" fg:x="1167" fg:w="1"/><text x="94.8205%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.5705%" y="469" width="0.0810%" height="15" fill="rgb(214,1,44)" fg:x="1167" fg:w="1"/><text x="94.8205%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.5705%" y="453" width="0.0810%" height="15" fill="rgb(212,2,46)" fg:x="1167" fg:w="1"/><text x="94.8205%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.5705%" y="437" width="0.0810%" height="15" fill="rgb(213,142,5)" fg:x="1167" fg:w="1"/><text x="94.8205%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.5705%" y="421" width="0.0810%" height="15" fill="rgb(229,135,1)" fg:x="1167" fg:w="1"/><text x="94.8205%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.5705%" y="405" width="0.0810%" height="15" fill="rgb(252,98,38)" fg:x="1167" fg:w="1"/><text x="94.8205%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.5705%" y="389" width="0.0810%" height="15" fill="rgb(206,89,40)" fg:x="1167" fg:w="1"/><text x="94.8205%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.5705%" y="373" width="0.0810%" height="15" fill="rgb(219,73,36)" fg:x="1167" fg:w="1"/><text x="94.8205%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5705%" y="357" width="0.0810%" height="15" fill="rgb(207,168,32)" fg:x="1167" fg:w="1"/><text x="94.8205%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="94.7326%" y="517" width="0.0810%" height="15" fill="rgb(215,113,21)" fg:x="1169" fg:w="1"/><text x="94.9826%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="94.7326%" y="501" width="0.0810%" height="15" fill="rgb(217,144,43)" fg:x="1169" fg:w="1"/><text x="94.9826%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.7326%" y="485" width="0.0810%" height="15" fill="rgb(249,48,50)" fg:x="1169" fg:w="1"/><text x="94.9826%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7326%" y="469" width="0.0810%" height="15" fill="rgb(242,1,26)" fg:x="1169" fg:w="1"/><text x="94.9826%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7326%" y="453" width="0.0810%" height="15" fill="rgb(231,167,42)" fg:x="1169" fg:w="1"/><text x="94.9826%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7326%" y="437" width="0.0810%" height="15" fill="rgb(242,177,45)" fg:x="1169" fg:w="1"/><text x="94.9826%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7326%" y="421" width="0.0810%" height="15" fill="rgb(232,121,42)" fg:x="1169" fg:w="1"/><text x="94.9826%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.7326%" y="405" width="0.0810%" height="15" fill="rgb(205,8,42)" fg:x="1169" fg:w="1"/><text x="94.9826%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7326%" y="389" width="0.0810%" height="15" fill="rgb(238,199,24)" fg:x="1169" fg:w="1"/><text x="94.9826%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.7326%" y="373" width="0.0810%" height="15" fill="rgb(228,112,2)" fg:x="1169" fg:w="1"/><text x="94.9826%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="94.7326%" y="549" width="0.1621%" height="15" fill="rgb(215,115,33)" fg:x="1169" fg:w="2"/><text x="94.9826%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="94.7326%" y="533" width="0.1621%" height="15" fill="rgb(230,209,34)" fg:x="1169" fg:w="2"/><text x="94.9826%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="94.8136%" y="517" width="0.0810%" height="15" fill="rgb(246,76,12)" fg:x="1170" fg:w="1"/><text x="95.0636%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="94.8136%" y="501" width="0.0810%" height="15" fill="rgb(240,110,9)" fg:x="1170" fg:w="1"/><text x="95.0636%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.8136%" y="485" width="0.0810%" height="15" fill="rgb(224,94,46)" fg:x="1170" fg:w="1"/><text x="95.0636%" y="495.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.8947%" y="517" width="0.0810%" height="15" fill="rgb(247,150,22)" fg:x="1171" fg:w="1"/><text x="95.1447%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.8947%" y="501" width="0.0810%" height="15" fill="rgb(249,85,13)" fg:x="1171" fg:w="1"/><text x="95.1447%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.8947%" y="485" width="0.0810%" height="15" fill="rgb(208,77,41)" fg:x="1171" fg:w="1"/><text x="95.1447%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="94.8947%" y="549" width="0.2431%" height="15" fill="rgb(240,42,44)" fg:x="1171" fg:w="3"/><text x="95.1447%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="94.8947%" y="533" width="0.2431%" height="15" fill="rgb(222,10,51)" fg:x="1171" fg:w="3"/><text x="95.1447%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.9757%" y="517" width="0.1621%" height="15" fill="rgb(208,146,53)" fg:x="1172" fg:w="2"/><text x="95.2257%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.9757%" y="501" width="0.1621%" height="15" fill="rgb(236,162,23)" fg:x="1172" fg:w="2"/><text x="95.2257%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="94.9757%" y="485" width="0.1621%" height="15" fill="rgb(218,66,21)" fg:x="1172" fg:w="2"/><text x="95.2257%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="94.9757%" y="469" width="0.1621%" height="15" fill="rgb(233,6,47)" fg:x="1172" fg:w="2"/><text x="95.2257%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="95.0567%" y="453" width="0.0810%" height="15" fill="rgb(236,59,51)" fg:x="1173" fg:w="1"/><text x="95.3067%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0567%" y="437" width="0.0810%" height="15" fill="rgb(242,12,46)" fg:x="1173" fg:w="1"/><text x="95.3067%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0567%" y="421" width="0.0810%" height="15" fill="rgb(243,142,19)" fg:x="1173" fg:w="1"/><text x="95.3067%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1378%" y="501" width="0.0810%" height="15" fill="rgb(217,28,17)" fg:x="1174" fg:w="1"/><text x="95.3878%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1378%" y="485" width="0.0810%" height="15" fill="rgb(228,2,27)" fg:x="1174" fg:w="1"/><text x="95.3878%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="95.1378%" y="549" width="0.2431%" height="15" fill="rgb(214,221,4)" fg:x="1174" fg:w="3"/><text x="95.3878%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="95.1378%" y="533" width="0.2431%" height="15" fill="rgb(224,69,26)" fg:x="1174" fg:w="3"/><text x="95.3878%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="95.1378%" y="517" width="0.2431%" height="15" fill="rgb(219,70,4)" fg:x="1174" fg:w="3"/><text x="95.3878%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.2188%" y="501" width="0.1621%" height="15" fill="rgb(218,157,39)" fg:x="1175" fg:w="2"/><text x="95.4688%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.2188%" y="485" width="0.1621%" height="15" fill="rgb(238,36,28)" fg:x="1175" fg:w="2"/><text x="95.4688%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="95.2188%" y="469" width="0.1621%" height="15" fill="rgb(232,29,0)" fg:x="1175" fg:w="2"/><text x="95.4688%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="95.2188%" y="453" width="0.1621%" height="15" fill="rgb(243,138,46)" fg:x="1175" fg:w="2"/><text x="95.4688%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="95.2188%" y="437" width="0.1621%" height="15" fill="rgb(232,186,41)" fg:x="1175" fg:w="2"/><text x="95.4688%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.2998%" y="421" width="0.0810%" height="15" fill="rgb(252,166,17)" fg:x="1176" fg:w="1"/><text x="95.5498%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.2998%" y="405" width="0.0810%" height="15" fill="rgb(228,179,12)" fg:x="1176" fg:w="1"/><text x="95.5498%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.2998%" y="389" width="0.0810%" height="15" fill="rgb(254,205,53)" fg:x="1176" fg:w="1"/><text x="95.5498%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.2998%" y="373" width="0.0810%" height="15" fill="rgb(224,163,47)" fg:x="1176" fg:w="1"/><text x="95.5498%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.2998%" y="357" width="0.0810%" height="15" fill="rgb(208,43,47)" fg:x="1176" fg:w="1"/><text x="95.5498%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.2998%" y="341" width="0.0810%" height="15" fill="rgb(224,198,38)" fg:x="1176" fg:w="1"/><text x="95.5498%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2998%" y="325" width="0.0810%" height="15" fill="rgb(234,12,40)" fg:x="1176" fg:w="1"/><text x="95.5498%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="95.4619%" y="501" width="0.0810%" height="15" fill="rgb(237,212,39)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.4619%" y="485" width="0.0810%" height="15" fill="rgb(253,2,33)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.4619%" y="469" width="0.0810%" height="15" fill="rgb(251,29,16)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4619%" y="453" width="0.0810%" height="15" fill="rgb(214,38,29)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4619%" y="437" width="0.0810%" height="15" fill="rgb(226,226,29)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4619%" y="421" width="0.0810%" height="15" fill="rgb(236,79,42)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4619%" y="405" width="0.0810%" height="15" fill="rgb(222,12,36)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4619%" y="389" width="0.0810%" height="15" fill="rgb(232,123,44)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4619%" y="373" width="0.0810%" height="15" fill="rgb(234,93,50)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.4619%" y="357" width="0.0810%" height="15" fill="rgb(210,86,49)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.4619%" y="341" width="0.0810%" height="15" fill="rgb(224,91,54)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.4619%" y="325" width="0.0810%" height="15" fill="rgb(239,169,9)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.4619%" y="309" width="0.0810%" height="15" fill="rgb(238,29,17)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.4619%" y="293" width="0.0810%" height="15" fill="rgb(227,160,22)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.4619%" y="277" width="0.0810%" height="15" fill="rgb(231,129,52)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.4619%" y="261" width="0.0810%" height="15" fill="rgb(241,184,9)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.4619%" y="245" width="0.0810%" height="15" fill="rgb(217,43,48)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.4619%" y="229" width="0.0810%" height="15" fill="rgb(213,49,1)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4619%" y="213" width="0.0810%" height="15" fill="rgb(223,79,39)" fg:x="1178" fg:w="1"/><text x="95.7119%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5429%" y="453" width="0.0810%" height="15" fill="rgb(228,227,46)" fg:x="1179" fg:w="1"/><text x="95.7929%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5429%" y="437" width="0.0810%" height="15" fill="rgb(245,89,41)" fg:x="1179" fg:w="1"/><text x="95.7929%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5429%" y="421" width="0.0810%" height="15" fill="rgb(253,83,21)" fg:x="1179" fg:w="1"/><text x="95.7929%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5429%" y="405" width="0.0810%" height="15" fill="rgb(229,116,51)" fg:x="1179" fg:w="1"/><text x="95.7929%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5429%" y="389" width="0.0810%" height="15" fill="rgb(246,67,26)" fg:x="1179" fg:w="1"/><text x="95.7929%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5429%" y="373" width="0.0810%" height="15" fill="rgb(250,117,20)" fg:x="1179" fg:w="1"/><text x="95.7929%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.5429%" y="357" width="0.0810%" height="15" fill="rgb(207,88,17)" fg:x="1179" fg:w="1"/><text x="95.7929%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.5429%" y="341" width="0.0810%" height="15" fill="rgb(212,98,36)" fg:x="1179" fg:w="1"/><text x="95.7929%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.5429%" y="325" width="0.0810%" height="15" fill="rgb(221,72,6)" fg:x="1179" fg:w="1"/><text x="95.7929%" y="335.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="95.3809%" y="549" width="0.3241%" height="15" fill="rgb(235,129,19)" fg:x="1177" fg:w="4"/><text x="95.6309%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="95.4619%" y="533" width="0.2431%" height="15" fill="rgb(237,200,6)" fg:x="1178" fg:w="3"/><text x="95.7119%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="95.4619%" y="517" width="0.2431%" height="15" fill="rgb(239,69,54)" fg:x="1178" fg:w="3"/><text x="95.7119%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="95.5429%" y="501" width="0.1621%" height="15" fill="rgb(214,68,45)" fg:x="1179" fg:w="2"/><text x="95.7929%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="95.5429%" y="485" width="0.1621%" height="15" fill="rgb(254,160,8)" fg:x="1179" fg:w="2"/><text x="95.7929%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.5429%" y="469" width="0.1621%" height="15" fill="rgb(215,226,31)" fg:x="1179" fg:w="2"/><text x="95.7929%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6240%" y="453" width="0.0810%" height="15" fill="rgb(253,6,35)" fg:x="1180" fg:w="1"/><text x="95.8740%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6240%" y="437" width="0.0810%" height="15" fill="rgb(219,96,42)" fg:x="1180" fg:w="1"/><text x="95.8740%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6240%" y="421" width="0.0810%" height="15" fill="rgb(207,170,13)" fg:x="1180" fg:w="1"/><text x="95.8740%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6240%" y="405" width="0.0810%" height="15" fill="rgb(239,101,5)" fg:x="1180" fg:w="1"/><text x="95.8740%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.6240%" y="389" width="0.0810%" height="15" fill="rgb(228,183,34)" fg:x="1180" fg:w="1"/><text x="95.8740%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6240%" y="373" width="0.0810%" height="15" fill="rgb(205,28,31)" fg:x="1180" fg:w="1"/><text x="95.8740%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6240%" y="357" width="0.0810%" height="15" fill="rgb(214,118,50)" fg:x="1180" fg:w="1"/><text x="95.8740%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6240%" y="341" width="0.0810%" height="15" fill="rgb(213,108,51)" fg:x="1180" fg:w="1"/><text x="95.8740%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6240%" y="325" width="0.0810%" height="15" fill="rgb(238,56,37)" fg:x="1180" fg:w="1"/><text x="95.8740%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6240%" y="309" width="0.0810%" height="15" fill="rgb(214,136,28)" fg:x="1180" fg:w="1"/><text x="95.8740%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.6240%" y="293" width="0.0810%" height="15" fill="rgb(221,201,54)" fg:x="1180" fg:w="1"/><text x="95.8740%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (31 samples, 2.51%)</title><rect x="93.2739%" y="581" width="2.5122%" height="15" fill="rgb(228,216,39)" fg:x="1151" fg:w="31"/><text x="93.5239%" y="591.50">&lt;p..</text></g><g><title>plugins_core::tools::move_between (14 samples, 1.13%)</title><rect x="94.6515%" y="565" width="1.1345%" height="15" fill="rgb(207,229,49)" fg:x="1168" fg:w="14"/><text x="94.9015%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="95.7050%" y="549" width="0.0810%" height="15" fill="rgb(224,23,43)" fg:x="1181" fg:w="1"/><text x="95.9550%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="95.7050%" y="533" width="0.0810%" height="15" fill="rgb(247,97,18)" fg:x="1181" fg:w="1"/><text x="95.9550%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.7050%" y="517" width="0.0810%" height="15" fill="rgb(232,53,32)" fg:x="1181" fg:w="1"/><text x="95.9550%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="95.7050%" y="501" width="0.0810%" height="15" fill="rgb(247,38,23)" fg:x="1181" fg:w="1"/><text x="95.9550%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="95.7050%" y="485" width="0.0810%" height="15" fill="rgb(228,101,52)" fg:x="1181" fg:w="1"/><text x="95.9550%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="95.7050%" y="469" width="0.0810%" height="15" fill="rgb(231,45,36)" fg:x="1181" fg:w="1"/><text x="95.9550%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="95.7050%" y="453" width="0.0810%" height="15" fill="rgb(221,183,50)" fg:x="1181" fg:w="1"/><text x="95.9550%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.7050%" y="437" width="0.0810%" height="15" fill="rgb(251,132,12)" fg:x="1181" fg:w="1"/><text x="95.9550%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.7050%" y="421" width="0.0810%" height="15" fill="rgb(252,50,16)" fg:x="1181" fg:w="1"/><text x="95.9550%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="95.7050%" y="405" width="0.0810%" height="15" fill="rgb(224,60,15)" fg:x="1181" fg:w="1"/><text x="95.9550%" y="415.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="95.7050%" y="389" width="0.0810%" height="15" fill="rgb(254,2,34)" fg:x="1181" fg:w="1"/><text x="95.9550%" y="399.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="95.7050%" y="373" width="0.0810%" height="15" fill="rgb(232,154,8)" fg:x="1181" fg:w="1"/><text x="95.9550%" y="383.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.08%)</title><rect x="95.7050%" y="357" width="0.0810%" height="15" fill="rgb(235,190,52)" fg:x="1181" fg:w="1"/><text x="95.9550%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="95.7861%" y="517" width="0.3241%" height="15" fill="rgb(213,218,38)" fg:x="1182" fg:w="4"/><text x="96.0361%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="95.7861%" y="501" width="0.3241%" height="15" fill="rgb(237,50,37)" fg:x="1182" fg:w="4"/><text x="96.0361%" y="511.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="95.7861%" y="485" width="0.3241%" height="15" fill="rgb(235,51,35)" fg:x="1182" fg:w="4"/><text x="96.0361%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="96.1912%" y="501" width="0.0810%" height="15" fill="rgb(244,40,52)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="96.1912%" y="485" width="0.0810%" height="15" fill="rgb(217,225,45)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="96.1912%" y="469" width="0.0810%" height="15" fill="rgb(247,191,36)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="96.1912%" y="453" width="0.0810%" height="15" fill="rgb(251,144,31)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="96.1912%" y="437" width="0.0810%" height="15" fill="rgb(227,155,41)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.1912%" y="421" width="0.0810%" height="15" fill="rgb(236,121,36)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.1912%" y="405" width="0.0810%" height="15" fill="rgb(221,128,28)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="96.1912%" y="389" width="0.0810%" height="15" fill="rgb(249,67,50)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="96.1912%" y="373" width="0.0810%" height="15" fill="rgb(241,126,38)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.1912%" y="357" width="0.0810%" height="15" fill="rgb(239,33,14)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.1912%" y="341" width="0.0810%" height="15" fill="rgb(207,221,54)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="96.1912%" y="325" width="0.0810%" height="15" fill="rgb(242,138,43)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="96.1912%" y="309" width="0.0810%" height="15" fill="rgb(231,118,19)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="96.1912%" y="293" width="0.0810%" height="15" fill="rgb(214,128,54)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="96.1912%" y="277" width="0.0810%" height="15" fill="rgb(236,136,6)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="96.1912%" y="261" width="0.0810%" height="15" fill="rgb(247,30,38)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="96.1912%" y="245" width="0.0810%" height="15" fill="rgb(249,189,40)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="96.1912%" y="229" width="0.0810%" height="15" fill="rgb(247,179,7)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="96.1912%" y="213" width="0.0810%" height="15" fill="rgb(239,46,52)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="96.1912%" y="197" width="0.0810%" height="15" fill="rgb(225,28,52)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="96.1912%" y="181" width="0.0810%" height="15" fill="rgb(217,208,44)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="96.1912%" y="165" width="0.0810%" height="15" fill="rgb(224,11,34)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="96.1912%" y="149" width="0.0810%" height="15" fill="rgb(205,134,17)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="96.1912%" y="133" width="0.0810%" height="15" fill="rgb(237,125,9)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="96.1912%" y="117" width="0.0810%" height="15" fill="rgb(208,139,47)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="96.1912%" y="101" width="0.0810%" height="15" fill="rgb(242,5,5)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="96.1912%" y="85" width="0.0810%" height="15" fill="rgb(218,78,2)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="96.1912%" y="69" width="0.0810%" height="15" fill="rgb(217,75,16)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="96.1912%" y="53" width="0.0810%" height="15" fill="rgb(212,56,17)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="96.1912%" y="37" width="0.0810%" height="15" fill="rgb(228,61,29)" fg:x="1187" fg:w="1"/><text x="96.4412%" y="47.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.2723%" y="469" width="0.0810%" height="15" fill="rgb(247,202,38)" fg:x="1188" fg:w="1"/><text x="96.5223%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="96.3533%" y="469" width="0.0810%" height="15" fill="rgb(211,216,43)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="96.3533%" y="453" width="0.0810%" height="15" fill="rgb(220,7,49)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.3533%" y="437" width="0.0810%" height="15" fill="rgb(219,158,7)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="96.3533%" y="421" width="0.0810%" height="15" fill="rgb(206,127,9)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="96.3533%" y="405" width="0.0810%" height="15" fill="rgb(206,103,43)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="96.3533%" y="389" width="0.0810%" height="15" fill="rgb(240,108,41)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="399.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="96.3533%" y="373" width="0.0810%" height="15" fill="rgb(252,212,6)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.3533%" y="357" width="0.0810%" height="15" fill="rgb(248,105,31)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.3533%" y="341" width="0.0810%" height="15" fill="rgb(241,123,4)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.3533%" y="325" width="0.0810%" height="15" fill="rgb(223,74,37)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.3533%" y="309" width="0.0810%" height="15" fill="rgb(251,219,28)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.3533%" y="293" width="0.0810%" height="15" fill="rgb(218,36,31)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.3533%" y="277" width="0.0810%" height="15" fill="rgb(229,40,15)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.3533%" y="261" width="0.0810%" height="15" fill="rgb(208,138,37)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.3533%" y="245" width="0.0810%" height="15" fill="rgb(208,40,52)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.3533%" y="229" width="0.0810%" height="15" fill="rgb(246,181,48)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.3533%" y="213" width="0.0810%" height="15" fill="rgb(253,178,36)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.3533%" y="197" width="0.0810%" height="15" fill="rgb(210,170,6)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.3533%" y="181" width="0.0810%" height="15" fill="rgb(243,62,22)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3533%" y="165" width="0.0810%" height="15" fill="rgb(213,145,26)" fg:x="1189" fg:w="1"/><text x="96.6033%" y="175.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (10 samples, 0.81%)</title><rect x="95.7861%" y="565" width="0.8104%" height="15" fill="rgb(237,177,23)" fg:x="1182" fg:w="10"/><text x="96.0361%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (10 samples, 0.81%)</title><rect x="95.7861%" y="549" width="0.8104%" height="15" fill="rgb(252,5,24)" fg:x="1182" fg:w="10"/><text x="96.0361%" y="559.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (10 samples, 0.81%)</title><rect x="95.7861%" y="533" width="0.8104%" height="15" fill="rgb(230,108,54)" fg:x="1182" fg:w="10"/><text x="96.0361%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (6 samples, 0.49%)</title><rect x="96.1102%" y="517" width="0.4862%" height="15" fill="rgb(252,192,41)" fg:x="1186" fg:w="6"/><text x="96.3602%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="96.2723%" y="501" width="0.3241%" height="15" fill="rgb(218,125,20)" fg:x="1188" fg:w="4"/><text x="96.5223%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="96.2723%" y="485" width="0.3241%" height="15" fill="rgb(230,223,15)" fg:x="1188" fg:w="4"/><text x="96.5223%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.4344%" y="469" width="0.1621%" height="15" fill="rgb(239,99,47)" fg:x="1190" fg:w="2"/><text x="96.6844%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.4344%" y="453" width="0.1621%" height="15" fill="rgb(222,214,23)" fg:x="1190" fg:w="2"/><text x="96.6844%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="96.4344%" y="437" width="0.1621%" height="15" fill="rgb(250,98,43)" fg:x="1190" fg:w="2"/><text x="96.6844%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="96.4344%" y="421" width="0.1621%" height="15" fill="rgb(226,140,11)" fg:x="1190" fg:w="2"/><text x="96.6844%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="96.4344%" y="405" width="0.1621%" height="15" fill="rgb(239,2,22)" fg:x="1190" fg:w="2"/><text x="96.6844%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.5154%" y="389" width="0.0810%" height="15" fill="rgb(209,106,26)" fg:x="1191" fg:w="1"/><text x="96.7654%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.5154%" y="373" width="0.0810%" height="15" fill="rgb(209,135,11)" fg:x="1191" fg:w="1"/><text x="96.7654%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="96.5964%" y="565" width="0.0810%" height="15" fill="rgb(241,58,6)" fg:x="1192" fg:w="1"/><text x="96.8464%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.5964%" y="549" width="0.0810%" height="15" fill="rgb(214,78,1)" fg:x="1192" fg:w="1"/><text x="96.8464%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="96.6775%" y="533" width="0.0810%" height="15" fill="rgb(229,135,33)" fg:x="1193" fg:w="1"/><text x="96.9275%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.6775%" y="517" width="0.0810%" height="15" fill="rgb(245,87,50)" fg:x="1193" fg:w="1"/><text x="96.9275%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="96.6775%" y="549" width="0.1621%" height="15" fill="rgb(222,222,8)" fg:x="1193" fg:w="2"/><text x="96.9275%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.7585%" y="533" width="0.0810%" height="15" fill="rgb(214,97,50)" fg:x="1194" fg:w="1"/><text x="97.0085%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.7585%" y="517" width="0.0810%" height="15" fill="rgb(244,161,51)" fg:x="1194" fg:w="1"/><text x="97.0085%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.7585%" y="501" width="0.0810%" height="15" fill="rgb(225,17,4)" fg:x="1194" fg:w="1"/><text x="97.0085%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.7585%" y="485" width="0.0810%" height="15" fill="rgb(238,10,13)" fg:x="1194" fg:w="1"/><text x="97.0085%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (4 samples, 0.32%)</title><rect x="96.6775%" y="565" width="0.3241%" height="15" fill="rgb(239,169,14)" fg:x="1193" fg:w="4"/><text x="96.9275%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="96.8395%" y="549" width="0.1621%" height="15" fill="rgb(213,105,25)" fg:x="1195" fg:w="2"/><text x="97.0895%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="96.8395%" y="533" width="0.1621%" height="15" fill="rgb(233,4,17)" fg:x="1195" fg:w="2"/><text x="97.0895%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.8395%" y="517" width="0.1621%" height="15" fill="rgb(212,5,35)" fg:x="1195" fg:w="2"/><text x="97.0895%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9206%" y="501" width="0.0810%" height="15" fill="rgb(216,3,14)" fg:x="1196" fg:w="1"/><text x="97.1706%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9206%" y="485" width="0.0810%" height="15" fill="rgb(240,105,33)" fg:x="1196" fg:w="1"/><text x="97.1706%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9206%" y="469" width="0.0810%" height="15" fill="rgb(216,73,0)" fg:x="1196" fg:w="1"/><text x="97.1706%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9206%" y="453" width="0.0810%" height="15" fill="rgb(217,153,48)" fg:x="1196" fg:w="1"/><text x="97.1706%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9206%" y="437" width="0.0810%" height="15" fill="rgb(218,180,8)" fg:x="1196" fg:w="1"/><text x="97.1706%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.0016%" y="549" width="0.0810%" height="15" fill="rgb(252,168,2)" fg:x="1197" fg:w="1"/><text x="97.2516%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="97.1637%" y="501" width="0.0810%" height="15" fill="rgb(224,116,33)" fg:x="1199" fg:w="1"/><text x="97.4137%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2447%" y="469" width="0.0810%" height="15" fill="rgb(229,205,17)" fg:x="1200" fg:w="1"/><text x="97.4947%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2447%" y="453" width="0.0810%" height="15" fill="rgb(234,1,41)" fg:x="1200" fg:w="1"/><text x="97.4947%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2447%" y="437" width="0.0810%" height="15" fill="rgb(244,185,8)" fg:x="1200" fg:w="1"/><text x="97.4947%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2447%" y="421" width="0.0810%" height="15" fill="rgb(248,51,21)" fg:x="1200" fg:w="1"/><text x="97.4947%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2447%" y="405" width="0.0810%" height="15" fill="rgb(248,157,31)" fg:x="1200" fg:w="1"/><text x="97.4947%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2447%" y="389" width="0.0810%" height="15" fill="rgb(210,34,47)" fg:x="1200" fg:w="1"/><text x="97.4947%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.3258%" y="469" width="0.0810%" height="15" fill="rgb(227,139,53)" fg:x="1201" fg:w="1"/><text x="97.5758%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.41%)</title><rect x="97.0827%" y="549" width="0.4052%" height="15" fill="rgb(232,211,37)" fg:x="1198" fg:w="5"/><text x="97.3327%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.41%)</title><rect x="97.0827%" y="533" width="0.4052%" height="15" fill="rgb(236,133,10)" fg:x="1198" fg:w="5"/><text x="97.3327%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="97.1637%" y="517" width="0.3241%" height="15" fill="rgb(243,202,25)" fg:x="1199" fg:w="4"/><text x="97.4137%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="97.2447%" y="501" width="0.2431%" height="15" fill="rgb(224,59,9)" fg:x="1200" fg:w="3"/><text x="97.4947%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="97.2447%" y="485" width="0.2431%" height="15" fill="rgb(206,146,16)" fg:x="1200" fg:w="3"/><text x="97.4947%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4068%" y="469" width="0.0810%" height="15" fill="rgb(220,47,2)" fg:x="1202" fg:w="1"/><text x="97.6568%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4068%" y="453" width="0.0810%" height="15" fill="rgb(225,124,51)" fg:x="1202" fg:w="1"/><text x="97.6568%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.4878%" y="517" width="0.0810%" height="15" fill="rgb(241,220,50)" fg:x="1203" fg:w="1"/><text x="97.7378%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4878%" y="501" width="0.0810%" height="15" fill="rgb(232,168,5)" fg:x="1203" fg:w="1"/><text x="97.7378%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.4878%" y="485" width="0.0810%" height="15" fill="rgb(243,90,22)" fg:x="1203" fg:w="1"/><text x="97.7378%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.4878%" y="469" width="0.0810%" height="15" fill="rgb(223,153,32)" fg:x="1203" fg:w="1"/><text x="97.7378%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.4878%" y="453" width="0.0810%" height="15" fill="rgb(243,124,20)" fg:x="1203" fg:w="1"/><text x="97.7378%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.4878%" y="437" width="0.0810%" height="15" fill="rgb(246,168,39)" fg:x="1203" fg:w="1"/><text x="97.7378%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.4878%" y="421" width="0.0810%" height="15" fill="rgb(222,165,54)" fg:x="1203" fg:w="1"/><text x="97.7378%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.4878%" y="405" width="0.0810%" height="15" fill="rgb(251,142,27)" fg:x="1203" fg:w="1"/><text x="97.7378%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.4878%" y="389" width="0.0810%" height="15" fill="rgb(207,168,50)" fg:x="1203" fg:w="1"/><text x="97.7378%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.4878%" y="373" width="0.0810%" height="15" fill="rgb(250,139,25)" fg:x="1203" fg:w="1"/><text x="97.7378%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.4878%" y="357" width="0.0810%" height="15" fill="rgb(214,194,48)" fg:x="1203" fg:w="1"/><text x="97.7378%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.4878%" y="341" width="0.0810%" height="15" fill="rgb(227,138,47)" fg:x="1203" fg:w="1"/><text x="97.7378%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.4878%" y="325" width="0.0810%" height="15" fill="rgb(250,162,5)" fg:x="1203" fg:w="1"/><text x="97.7378%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.4878%" y="309" width="0.0810%" height="15" fill="rgb(229,74,25)" fg:x="1203" fg:w="1"/><text x="97.7378%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.5689%" y="517" width="0.0810%" height="15" fill="rgb(221,124,34)" fg:x="1204" fg:w="1"/><text x="97.8189%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.5689%" y="501" width="0.0810%" height="15" fill="rgb(225,94,25)" fg:x="1204" fg:w="1"/><text x="97.8189%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="97.4878%" y="549" width="0.2431%" height="15" fill="rgb(210,100,12)" fg:x="1203" fg:w="3"/><text x="97.7378%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="97.4878%" y="533" width="0.2431%" height="15" fill="rgb(206,62,48)" fg:x="1203" fg:w="3"/><text x="97.7378%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.6499%" y="517" width="0.0810%" height="15" fill="rgb(222,181,9)" fg:x="1205" fg:w="1"/><text x="97.8999%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6499%" y="501" width="0.0810%" height="15" fill="rgb(248,42,38)" fg:x="1205" fg:w="1"/><text x="97.8999%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="97.6499%" y="485" width="0.0810%" height="15" fill="rgb(213,40,6)" fg:x="1205" fg:w="1"/><text x="97.8999%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="97.6499%" y="469" width="0.0810%" height="15" fill="rgb(211,108,15)" fg:x="1205" fg:w="1"/><text x="97.8999%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="97.6499%" y="453" width="0.0810%" height="15" fill="rgb(249,62,9)" fg:x="1205" fg:w="1"/><text x="97.8999%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.6499%" y="437" width="0.0810%" height="15" fill="rgb(233,26,54)" fg:x="1205" fg:w="1"/><text x="97.8999%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6499%" y="421" width="0.0810%" height="15" fill="rgb(210,175,26)" fg:x="1205" fg:w="1"/><text x="97.8999%" y="431.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="97.7310%" y="549" width="0.1621%" height="15" fill="rgb(210,43,33)" fg:x="1206" fg:w="2"/><text x="97.9810%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="97.7310%" y="533" width="0.1621%" height="15" fill="rgb(224,46,17)" fg:x="1206" fg:w="2"/><text x="97.9810%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="97.8120%" y="517" width="0.0810%" height="15" fill="rgb(254,24,38)" fg:x="1207" fg:w="1"/><text x="98.0620%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.8120%" y="501" width="0.0810%" height="15" fill="rgb(248,32,0)" fg:x="1207" fg:w="1"/><text x="98.0620%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.8120%" y="485" width="0.0810%" height="15" fill="rgb(224,37,41)" fg:x="1207" fg:w="1"/><text x="98.0620%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (242 samples, 19.61%)</title><rect x="78.3630%" y="725" width="19.6110%" height="15" fill="rgb(252,70,22)" fg:x="967" fg:w="242"/><text x="78.6130%" y="735.50">&lt;engine::session::Session as ke..</text></g><g><title>kernel::plugins::mw::apply_middleware (60 samples, 4.86%)</title><rect x="93.1118%" y="709" width="4.8622%" height="15" fill="rgb(241,123,50)" fg:x="1149" fg:w="60"/><text x="93.3618%" y="719.50">kernel..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (59 samples, 4.78%)</title><rect x="93.1929%" y="693" width="4.7812%" height="15" fill="rgb(246,138,33)" fg:x="1150" fg:w="59"/><text x="93.4429%" y="703.50">kernel..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (59 samples, 4.78%)</title><rect x="93.1929%" y="677" width="4.7812%" height="15" fill="rgb(218,39,32)" fg:x="1150" fg:w="59"/><text x="93.4429%" y="687.50">&lt;plugi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (59 samples, 4.78%)</title><rect x="93.1929%" y="661" width="4.7812%" height="15" fill="rgb(241,229,10)" fg:x="1150" fg:w="59"/><text x="93.4429%" y="671.50">kernel..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (59 samples, 4.78%)</title><rect x="93.1929%" y="645" width="4.7812%" height="15" fill="rgb(212,160,10)" fg:x="1150" fg:w="59"/><text x="93.4429%" y="655.50">core::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (59 samples, 4.78%)</title><rect x="93.1929%" y="629" width="4.7812%" height="15" fill="rgb(227,48,51)" fg:x="1150" fg:w="59"/><text x="93.4429%" y="639.50">kernel..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (59 samples, 4.78%)</title><rect x="93.1929%" y="613" width="4.7812%" height="15" fill="rgb(238,159,21)" fg:x="1150" fg:w="59"/><text x="93.4429%" y="623.50">core::..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (58 samples, 4.70%)</title><rect x="93.2739%" y="597" width="4.7002%" height="15" fill="rgb(216,1,10)" fg:x="1151" fg:w="58"/><text x="93.5239%" y="607.50">&lt;engi..</text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (27 samples, 2.19%)</title><rect x="95.7861%" y="581" width="2.1880%" height="15" fill="rgb(209,228,25)" fg:x="1182" fg:w="27"/><text x="96.0361%" y="591.50">&lt;..</text></g><g><title>plugins_core::tools::move_between (12 samples, 0.97%)</title><rect x="97.0016%" y="565" width="0.9724%" height="15" fill="rgb(234,160,10)" fg:x="1197" fg:w="12"/><text x="97.2516%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="97.8930%" y="549" width="0.0810%" height="15" fill="rgb(212,66,25)" fg:x="1208" fg:w="1"/><text x="98.1430%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="97.8930%" y="533" width="0.0810%" height="15" fill="rgb(254,121,18)" fg:x="1208" fg:w="1"/><text x="98.1430%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="97.8930%" y="517" width="0.0810%" height="15" fill="rgb(219,127,1)" fg:x="1208" fg:w="1"/><text x="98.1430%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.8930%" y="501" width="0.0810%" height="15" fill="rgb(219,224,42)" fg:x="1208" fg:w="1"/><text x="98.1430%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.8930%" y="485" width="0.0810%" height="15" fill="rgb(253,130,22)" fg:x="1208" fg:w="1"/><text x="98.1430%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.8930%" y="469" width="0.0810%" height="15" fill="rgb(253,39,28)" fg:x="1208" fg:w="1"/><text x="98.1430%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="97.8930%" y="453" width="0.0810%" height="15" fill="rgb(231,126,37)" fg:x="1208" fg:w="1"/><text x="98.1430%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.8930%" y="437" width="0.0810%" height="15" fill="rgb(251,145,14)" fg:x="1208" fg:w="1"/><text x="98.1430%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.8930%" y="421" width="0.0810%" height="15" fill="rgb(229,164,30)" fg:x="1208" fg:w="1"/><text x="98.1430%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.8930%" y="405" width="0.0810%" height="15" fill="rgb(233,227,54)" fg:x="1208" fg:w="1"/><text x="98.1430%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.8930%" y="389" width="0.0810%" height="15" fill="rgb(240,94,22)" fg:x="1208" fg:w="1"/><text x="98.1430%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.1361%" y="581" width="0.0810%" height="15" fill="rgb(217,56,16)" fg:x="1211" fg:w="1"/><text x="98.3861%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1361%" y="565" width="0.0810%" height="15" fill="rgb(229,133,38)" fg:x="1211" fg:w="1"/><text x="98.3861%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.1361%" y="549" width="0.0810%" height="15" fill="rgb(225,139,35)" fg:x="1211" fg:w="1"/><text x="98.3861%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1361%" y="533" width="0.0810%" height="15" fill="rgb(223,100,16)" fg:x="1211" fg:w="1"/><text x="98.3861%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.1361%" y="517" width="0.0810%" height="15" fill="rgb(207,43,50)" fg:x="1211" fg:w="1"/><text x="98.3861%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.1361%" y="501" width="0.0810%" height="15" fill="rgb(237,221,9)" fg:x="1211" fg:w="1"/><text x="98.3861%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="98.0551%" y="693" width="0.2431%" height="15" fill="rgb(236,134,24)" fg:x="1210" fg:w="3"/><text x="98.3051%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="98.0551%" y="677" width="0.2431%" height="15" fill="rgb(222,173,4)" fg:x="1210" fg:w="3"/><text x="98.3051%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="98.0551%" y="661" width="0.2431%" height="15" fill="rgb(234,144,52)" fg:x="1210" fg:w="3"/><text x="98.3051%" y="671.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="98.0551%" y="645" width="0.2431%" height="15" fill="rgb(223,41,7)" fg:x="1210" fg:w="3"/><text x="98.3051%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="98.0551%" y="629" width="0.2431%" height="15" fill="rgb(226,143,9)" fg:x="1210" fg:w="3"/><text x="98.3051%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.1361%" y="613" width="0.1621%" height="15" fill="rgb(234,43,37)" fg:x="1211" fg:w="2"/><text x="98.3861%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.1361%" y="597" width="0.1621%" height="15" fill="rgb(224,188,11)" fg:x="1211" fg:w="2"/><text x="98.3861%" y="607.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="98.2172%" y="581" width="0.0810%" height="15" fill="rgb(233,113,28)" fg:x="1212" fg:w="1"/><text x="98.4672%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.3793%" y="565" width="0.0810%" height="15" fill="rgb(215,16,1)" fg:x="1214" fg:w="1"/><text x="98.6293%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.3793%" y="549" width="0.0810%" height="15" fill="rgb(238,74,38)" fg:x="1214" fg:w="1"/><text x="98.6293%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="98.4603%" y="533" width="0.1621%" height="15" fill="rgb(221,66,35)" fg:x="1215" fg:w="2"/><text x="98.7103%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.4603%" y="517" width="0.1621%" height="15" fill="rgb(251,225,2)" fg:x="1215" fg:w="2"/><text x="98.7103%" y="527.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.41%)</title><rect x="98.2982%" y="677" width="0.4052%" height="15" fill="rgb(240,169,18)" fg:x="1213" fg:w="5"/><text x="98.5482%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="98.2982%" y="661" width="0.4052%" height="15" fill="rgb(243,130,50)" fg:x="1213" fg:w="5"/><text x="98.5482%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="98.2982%" y="645" width="0.4052%" height="15" fill="rgb(228,75,13)" fg:x="1213" fg:w="5"/><text x="98.5482%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="98.2982%" y="629" width="0.4052%" height="15" fill="rgb(252,95,35)" fg:x="1213" fg:w="5"/><text x="98.5482%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.3793%" y="613" width="0.3241%" height="15" fill="rgb(222,180,54)" fg:x="1214" fg:w="4"/><text x="98.6293%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.3793%" y="597" width="0.3241%" height="15" fill="rgb(250,110,34)" fg:x="1214" fg:w="4"/><text x="98.6293%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.3793%" y="581" width="0.3241%" height="15" fill="rgb(208,100,21)" fg:x="1214" fg:w="4"/><text x="98.6293%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.4603%" y="565" width="0.2431%" height="15" fill="rgb(209,123,47)" fg:x="1215" fg:w="3"/><text x="98.7103%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.4603%" y="549" width="0.2431%" height="15" fill="rgb(237,147,9)" fg:x="1215" fg:w="3"/><text x="98.7103%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6224%" y="533" width="0.0810%" height="15" fill="rgb(228,206,23)" fg:x="1217" fg:w="1"/><text x="98.8724%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6224%" y="517" width="0.0810%" height="15" fill="rgb(217,174,46)" fg:x="1217" fg:w="1"/><text x="98.8724%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.6224%" y="501" width="0.0810%" height="15" fill="rgb(231,126,21)" fg:x="1217" fg:w="1"/><text x="98.8724%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.6224%" y="485" width="0.0810%" height="15" fill="rgb(245,26,1)" fg:x="1217" fg:w="1"/><text x="98.8724%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.7034%" y="645" width="0.0810%" height="15" fill="rgb(224,138,39)" fg:x="1218" fg:w="1"/><text x="98.9534%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7844%" y="613" width="0.0810%" height="15" fill="rgb(208,97,3)" fg:x="1219" fg:w="1"/><text x="99.0344%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.7844%" y="597" width="0.0810%" height="15" fill="rgb(222,77,29)" fg:x="1219" fg:w="1"/><text x="99.0344%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="98.7844%" y="581" width="0.0810%" height="15" fill="rgb(243,188,36)" fg:x="1219" fg:w="1"/><text x="99.0344%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (12 samples, 0.97%)</title><rect x="97.9741%" y="725" width="0.9724%" height="15" fill="rgb(218,214,3)" fg:x="1209" fg:w="12"/><text x="98.2241%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (11 samples, 0.89%)</title><rect x="98.0551%" y="709" width="0.8914%" height="15" fill="rgb(211,183,45)" fg:x="1210" fg:w="11"/><text x="98.3051%" y="719.50"></text></g><g><title>kernel::model::entity::Entity::from_str (8 samples, 0.65%)</title><rect x="98.2982%" y="693" width="0.6483%" height="15" fill="rgb(230,218,25)" fg:x="1213" fg:w="8"/><text x="98.5482%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="98.7034%" y="677" width="0.2431%" height="15" fill="rgb(233,86,6)" fg:x="1218" fg:w="3"/><text x="98.9534%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.7034%" y="661" width="0.2431%" height="15" fill="rgb(220,59,24)" fg:x="1218" fg:w="3"/><text x="98.9534%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="98.7844%" y="645" width="0.1621%" height="15" fill="rgb(227,60,1)" fg:x="1219" fg:w="2"/><text x="99.0344%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.7844%" y="629" width="0.1621%" height="15" fill="rgb(216,212,54)" fg:x="1219" fg:w="2"/><text x="99.0344%" y="639.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.8655%" y="613" width="0.0810%" height="15" fill="rgb(227,81,54)" fg:x="1220" fg:w="1"/><text x="99.1155%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8655%" y="597" width="0.0810%" height="15" fill="rgb(206,204,43)" fg:x="1220" fg:w="1"/><text x="99.1155%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8655%" y="581" width="0.0810%" height="15" fill="rgb(219,29,26)" fg:x="1220" fg:w="1"/><text x="99.1155%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.8655%" y="565" width="0.0810%" height="15" fill="rgb(252,40,36)" fg:x="1220" fg:w="1"/><text x="99.1155%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8655%" y="549" width="0.0810%" height="15" fill="rgb(224,205,39)" fg:x="1220" fg:w="1"/><text x="99.1155%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8655%" y="533" width="0.0810%" height="15" fill="rgb(222,13,21)" fg:x="1220" fg:w="1"/><text x="99.1155%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.8655%" y="517" width="0.0810%" height="15" fill="rgb(243,139,6)" fg:x="1220" fg:w="1"/><text x="99.1155%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8655%" y="501" width="0.0810%" height="15" fill="rgb(237,101,11)" fg:x="1220" fg:w="1"/><text x="99.1155%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8655%" y="485" width="0.0810%" height="15" fill="rgb(254,49,28)" fg:x="1220" fg:w="1"/><text x="99.1155%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.8655%" y="469" width="0.0810%" height="15" fill="rgb(223,41,21)" fg:x="1220" fg:w="1"/><text x="99.1155%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8655%" y="453" width="0.0810%" height="15" fill="rgb(225,103,29)" fg:x="1220" fg:w="1"/><text x="99.1155%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.8655%" y="437" width="0.0810%" height="15" fill="rgb(244,82,43)" fg:x="1220" fg:w="1"/><text x="99.1155%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8655%" y="421" width="0.0810%" height="15" fill="rgb(217,39,3)" fg:x="1220" fg:w="1"/><text x="99.1155%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="98.9465%" y="677" width="0.0810%" height="15" fill="rgb(239,128,25)" fg:x="1221" fg:w="1"/><text x="99.1965%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="98.9465%" y="661" width="0.0810%" height="15" fill="rgb(210,192,37)" fg:x="1221" fg:w="1"/><text x="99.1965%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.9465%" y="645" width="0.0810%" height="15" fill="rgb(219,98,18)" fg:x="1221" fg:w="1"/><text x="99.1965%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.9465%" y="629" width="0.0810%" height="15" fill="rgb(224,228,38)" fg:x="1221" fg:w="1"/><text x="99.1965%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.9465%" y="613" width="0.0810%" height="15" fill="rgb(241,129,43)" fg:x="1221" fg:w="1"/><text x="99.1965%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.9465%" y="597" width="0.0810%" height="15" fill="rgb(223,8,51)" fg:x="1221" fg:w="1"/><text x="99.1965%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.9465%" y="581" width="0.0810%" height="15" fill="rgb(233,76,24)" fg:x="1221" fg:w="1"/><text x="99.1965%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.9465%" y="565" width="0.0810%" height="15" fill="rgb(219,115,10)" fg:x="1221" fg:w="1"/><text x="99.1965%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0276%" y="613" width="0.0810%" height="15" fill="rgb(222,137,12)" fg:x="1222" fg:w="1"/><text x="99.2776%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1086%" y="581" width="0.0810%" height="15" fill="rgb(216,192,16)" fg:x="1223" fg:w="1"/><text x="99.3586%" y="591.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.41%)</title><rect x="99.0276%" y="661" width="0.4052%" height="15" fill="rgb(247,6,27)" fg:x="1222" fg:w="5"/><text x="99.2776%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.41%)</title><rect x="99.0276%" y="645" width="0.4052%" height="15" fill="rgb(254,39,44)" fg:x="1222" fg:w="5"/><text x="99.2776%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.41%)</title><rect x="99.0276%" y="629" width="0.4052%" height="15" fill="rgb(251,116,35)" fg:x="1222" fg:w="5"/><text x="99.2776%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="99.1086%" y="613" width="0.3241%" height="15" fill="rgb(208,61,44)" fg:x="1223" fg:w="4"/><text x="99.3586%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="99.1086%" y="597" width="0.3241%" height="15" fill="rgb(250,34,5)" fg:x="1223" fg:w="4"/><text x="99.3586%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.1896%" y="581" width="0.2431%" height="15" fill="rgb(241,40,15)" fg:x="1224" fg:w="3"/><text x="99.4396%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.2707%" y="565" width="0.1621%" height="15" fill="rgb(229,182,2)" fg:x="1225" fg:w="2"/><text x="99.5207%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.2707%" y="549" width="0.1621%" height="15" fill="rgb(244,148,52)" fg:x="1225" fg:w="2"/><text x="99.5207%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.2707%" y="533" width="0.1621%" height="15" fill="rgb(225,211,4)" fg:x="1225" fg:w="2"/><text x="99.5207%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3517%" y="517" width="0.0810%" height="15" fill="rgb(208,222,47)" fg:x="1226" fg:w="1"/><text x="99.6017%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3517%" y="501" width="0.0810%" height="15" fill="rgb(233,162,0)" fg:x="1226" fg:w="1"/><text x="99.6017%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3517%" y="485" width="0.0810%" height="15" fill="rgb(241,54,13)" fg:x="1226" fg:w="1"/><text x="99.6017%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3517%" y="469" width="0.0810%" height="15" fill="rgb(213,89,18)" fg:x="1226" fg:w="1"/><text x="99.6017%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.4327%" y="597" width="0.0810%" height="15" fill="rgb(215,170,37)" fg:x="1227" fg:w="1"/><text x="99.6827%" y="607.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="99.4327%" y="581" width="0.0810%" height="15" fill="rgb(216,133,15)" fg:x="1227" fg:w="1"/><text x="99.6827%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.65%)</title><rect x="98.9465%" y="709" width="0.6483%" height="15" fill="rgb(230,42,19)" fg:x="1221" fg:w="8"/><text x="99.1965%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.65%)</title><rect x="98.9465%" y="693" width="0.6483%" height="15" fill="rgb(221,103,41)" fg:x="1221" fg:w="8"/><text x="99.1965%" y="703.50"></text></g><g><title>kernel::model::entity::Entity::from_str (7 samples, 0.57%)</title><rect x="99.0276%" y="677" width="0.5673%" height="15" fill="rgb(220,142,31)" fg:x="1222" fg:w="7"/><text x="99.2776%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.4327%" y="661" width="0.1621%" height="15" fill="rgb(239,218,4)" fg:x="1227" fg:w="2"/><text x="99.6827%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.4327%" y="645" width="0.1621%" height="15" fill="rgb(232,16,4)" fg:x="1227" fg:w="2"/><text x="99.6827%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.4327%" y="629" width="0.1621%" height="15" fill="rgb(226,213,25)" fg:x="1227" fg:w="2"/><text x="99.6827%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.4327%" y="613" width="0.1621%" height="15" fill="rgb(235,135,19)" fg:x="1227" fg:w="2"/><text x="99.6827%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5138%" y="597" width="0.0810%" height="15" fill="rgb(240,107,29)" fg:x="1228" fg:w="1"/><text x="99.7638%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5138%" y="581" width="0.0810%" height="15" fill="rgb(206,164,44)" fg:x="1228" fg:w="1"/><text x="99.7638%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5138%" y="565" width="0.0810%" height="15" fill="rgb(210,23,48)" fg:x="1228" fg:w="1"/><text x="99.7638%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5138%" y="549" width="0.0810%" height="15" fill="rgb(212,138,25)" fg:x="1228" fg:w="1"/><text x="99.7638%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5138%" y="533" width="0.0810%" height="15" fill="rgb(224,152,3)" fg:x="1228" fg:w="1"/><text x="99.7638%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5138%" y="517" width="0.0810%" height="15" fill="rgb(214,38,23)" fg:x="1228" fg:w="1"/><text x="99.7638%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5138%" y="501" width="0.0810%" height="15" fill="rgb(215,161,10)" fg:x="1228" fg:w="1"/><text x="99.7638%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.5138%" y="485" width="0.0810%" height="15" fill="rgb(240,185,7)" fg:x="1228" fg:w="1"/><text x="99.7638%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.5138%" y="469" width="0.0810%" height="15" fill="rgb(244,104,25)" fg:x="1228" fg:w="1"/><text x="99.7638%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5138%" y="453" width="0.0810%" height="15" fill="rgb(242,140,44)" fg:x="1228" fg:w="1"/><text x="99.7638%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5138%" y="437" width="0.0810%" height="15" fill="rgb(245,30,19)" fg:x="1228" fg:w="1"/><text x="99.7638%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (10 samples, 0.81%)</title><rect x="98.9465%" y="725" width="0.8104%" height="15" fill="rgb(219,208,35)" fg:x="1221" fg:w="10"/><text x="99.1965%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="99.5948%" y="709" width="0.1621%" height="15" fill="rgb(235,200,7)" fg:x="1229" fg:w="2"/><text x="99.8448%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="99.5948%" y="693" width="0.1621%" height="15" fill="rgb(220,193,10)" fg:x="1229" fg:w="2"/><text x="99.8448%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="99.5948%" y="677" width="0.1621%" height="15" fill="rgb(212,216,39)" fg:x="1229" fg:w="2"/><text x="99.8448%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="99.5948%" y="661" width="0.1621%" height="15" fill="rgb(212,134,19)" fg:x="1229" fg:w="2"/><text x="99.8448%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="99.5948%" y="645" width="0.1621%" height="15" fill="rgb(230,57,24)" fg:x="1229" fg:w="2"/><text x="99.8448%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="99.5948%" y="629" width="0.1621%" height="15" fill="rgb(238,209,37)" fg:x="1229" fg:w="2"/><text x="99.8448%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="99.5948%" y="613" width="0.1621%" height="15" fill="rgb(247,11,45)" fg:x="1229" fg:w="2"/><text x="99.8448%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="99.5948%" y="597" width="0.1621%" height="15" fill="rgb(222,126,6)" fg:x="1229" fg:w="2"/><text x="99.8448%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.6759%" y="581" width="0.0810%" height="15" fill="rgb(245,77,24)" fg:x="1230" fg:w="1"/><text x="99.9259%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="99.6759%" y="565" width="0.0810%" height="15" fill="rgb(227,14,24)" fg:x="1230" fg:w="1"/><text x="99.9259%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.6759%" y="549" width="0.0810%" height="15" fill="rgb(211,112,42)" fg:x="1230" fg:w="1"/><text x="99.9259%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.6759%" y="533" width="0.0810%" height="15" fill="rgb(230,103,42)" fg:x="1230" fg:w="1"/><text x="99.9259%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.6759%" y="517" width="0.0810%" height="15" fill="rgb(228,125,42)" fg:x="1230" fg:w="1"/><text x="99.9259%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="99.6759%" y="501" width="0.0810%" height="15" fill="rgb(243,33,6)" fg:x="1230" fg:w="1"/><text x="99.9259%" y="511.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="99.6759%" y="485" width="0.0810%" height="15" fill="rgb(231,2,40)" fg:x="1230" fg:w="1"/><text x="99.9259%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.6759%" y="469" width="0.0810%" height="15" fill="rgb(224,200,53)" fg:x="1230" fg:w="1"/><text x="99.9259%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.6759%" y="453" width="0.0810%" height="15" fill="rgb(215,116,36)" fg:x="1230" fg:w="1"/><text x="99.9259%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.6759%" y="437" width="0.0810%" height="15" fill="rgb(240,23,51)" fg:x="1230" fg:w="1"/><text x="99.9259%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.6759%" y="421" width="0.0810%" height="15" fill="rgb(221,72,5)" fg:x="1230" fg:w="1"/><text x="99.9259%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.6759%" y="405" width="0.0810%" height="15" fill="rgb(245,142,9)" fg:x="1230" fg:w="1"/><text x="99.9259%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.6759%" y="389" width="0.0810%" height="15" fill="rgb(207,34,16)" fg:x="1230" fg:w="1"/><text x="99.9259%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.6759%" y="373" width="0.0810%" height="15" fill="rgb(252,101,12)" fg:x="1230" fg:w="1"/><text x="99.9259%" y="383.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="99.7569%" y="725" width="0.0810%" height="15" fill="rgb(239,89,37)" fg:x="1231" fg:w="1"/><text x="100.0069%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="99.7569%" y="709" width="0.0810%" height="15" fill="rgb(252,227,37)" fg:x="1231" fg:w="1"/><text x="100.0069%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.7569%" y="693" width="0.0810%" height="15" fill="rgb(212,164,17)" fg:x="1231" fg:w="1"/><text x="100.0069%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.7569%" y="677" width="0.0810%" height="15" fill="rgb(240,86,13)" fg:x="1231" fg:w="1"/><text x="100.0069%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.7569%" y="661" width="0.0810%" height="15" fill="rgb(233,183,32)" fg:x="1231" fg:w="1"/><text x="100.0069%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.7569%" y="645" width="0.0810%" height="15" fill="rgb(205,201,38)" fg:x="1231" fg:w="1"/><text x="100.0069%" y="655.50"></text></g><g><title>all (1,234 samples, 100%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(210,122,38)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="1103.50"></text></g><g><title>simple-484c7248 (1,234 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(241,174,26)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="1087.50">simple-484c7248</text></g><g><title>_start (1,234 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(219,89,7)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="1071.50">_start</text></g><g><title>__libc_start_main (1,234 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(246,9,24)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="1055.50">__libc_start_main</text></g><g><title>main (1,234 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(205,132,21)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="1039.50">main</text></g><g><title>std::rt::lang_start_internal (1,234 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(210,11,17)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="1023.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,234 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(226,138,14)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,234 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(224,108,44)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,234 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(247,114,36)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="975.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,234 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(231,183,14)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="959.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,234 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(218,168,4)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,234 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(210,8,3)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,234 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(216,165,0)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="911.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,234 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(245,120,5)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="895.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,234 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(249,121,32)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="879.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,234 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(211,55,33)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="863.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,234 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(254,46,35)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="847.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,234 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(213,213,19)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="831.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,234 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(207,152,44)" fg:x="0" fg:w="1234"/><text x="0.2500%" y="815.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (444 samples, 35.98%)</title><rect x="64.0194%" y="789" width="35.9806%" height="15" fill="rgb(227,195,36)" fg:x="790" fg:w="444"/><text x="64.2694%" y="799.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (444 samples, 35.98%)</title><rect x="64.0194%" y="773" width="35.9806%" height="15" fill="rgb(210,137,36)" fg:x="790" fg:w="444"/><text x="64.2694%" y="783.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (444 samples, 35.98%)</title><rect x="64.0194%" y="757" width="35.9806%" height="15" fill="rgb(253,47,47)" fg:x="790" fg:w="444"/><text x="64.2694%" y="767.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (267 samples, 21.64%)</title><rect x="78.3630%" y="741" width="21.6370%" height="15" fill="rgb(230,147,18)" fg:x="967" fg:w="267"/><text x="78.6130%" y="751.50">engine::session::Session::evaluate..</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="99.8379%" y="725" width="0.1621%" height="15" fill="rgb(247,33,49)" fg:x="1232" fg:w="2"/><text x="100.0879%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="99.8379%" y="709" width="0.1621%" height="15" fill="rgb(239,26,29)" fg:x="1232" fg:w="2"/><text x="100.0879%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="99.8379%" y="693" width="0.1621%" height="15" fill="rgb(245,145,52)" fg:x="1232" fg:w="2"/><text x="100.0879%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="99.8379%" y="677" width="0.1621%" height="15" fill="rgb(224,139,32)" fg:x="1232" fg:w="2"/><text x="100.0879%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="99.8379%" y="661" width="0.1621%" height="15" fill="rgb(238,202,19)" fg:x="1232" fg:w="2"/><text x="100.0879%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="99.8379%" y="645" width="0.1621%" height="15" fill="rgb(249,211,53)" fg:x="1232" fg:w="2"/><text x="100.0879%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.9190%" y="629" width="0.0810%" height="15" fill="rgb(237,229,33)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.9190%" y="613" width="0.0810%" height="15" fill="rgb(208,97,40)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.9190%" y="597" width="0.0810%" height="15" fill="rgb(254,36,16)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="99.9190%" y="581" width="0.0810%" height="15" fill="rgb(221,7,12)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.9190%" y="565" width="0.0810%" height="15" fill="rgb(205,11,12)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.9190%" y="549" width="0.0810%" height="15" fill="rgb(227,72,28)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.9190%" y="533" width="0.0810%" height="15" fill="rgb(228,7,34)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="543.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="99.9190%" y="517" width="0.0810%" height="15" fill="rgb(230,52,42)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="527.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="99.9190%" y="501" width="0.0810%" height="15" fill="rgb(219,177,53)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.9190%" y="485" width="0.0810%" height="15" fill="rgb(243,196,34)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.9190%" y="469" width="0.0810%" height="15" fill="rgb(213,66,49)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.9190%" y="453" width="0.0810%" height="15" fill="rgb(233,11,50)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.9190%" y="437" width="0.0810%" height="15" fill="rgb(235,190,6)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.9190%" y="421" width="0.0810%" height="15" fill="rgb(212,64,44)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.9190%" y="405" width="0.0810%" height="15" fill="rgb(206,95,44)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.9190%" y="389" width="0.0810%" height="15" fill="rgb(227,136,25)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.9190%" y="373" width="0.0810%" height="15" fill="rgb(206,178,17)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.9190%" y="357" width="0.0810%" height="15" fill="rgb(208,168,35)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.9190%" y="341" width="0.0810%" height="15" fill="rgb(213,210,40)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.9190%" y="325" width="0.0810%" height="15" fill="rgb(236,60,6)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="99.9190%" y="309" width="0.0810%" height="15" fill="rgb(220,186,36)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="99.9190%" y="293" width="0.0810%" height="15" fill="rgb(225,120,49)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="303.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="99.9190%" y="277" width="0.0810%" height="15" fill="rgb(250,115,20)" fg:x="1233" fg:w="1"/><text x="100.1690%" y="287.50"></text></g></svg></svg>