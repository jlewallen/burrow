<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1046" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1029.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1029.00"> </text><svg id="frames" x="10" width="1180" total_samples="1236"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0000%" y="629" width="0.0809%" height="15" fill="rgb(206,15,5)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.0809%" y="629" width="0.0809%" height="15" fill="rgb(239,16,52)" fg:x="1" fg:w="1"/><text x="0.3309%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0809%" y="613" width="0.0809%" height="15" fill="rgb(245,213,29)" fg:x="1" fg:w="1"/><text x="0.3309%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.1618%" y="597" width="0.0809%" height="15" fill="rgb(213,203,36)" fg:x="2" fg:w="1"/><text x="0.4118%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.2427%" y="549" width="0.0809%" height="15" fill="rgb(209,55,18)" fg:x="3" fg:w="1"/><text x="0.4927%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4045%" y="517" width="0.0809%" height="15" fill="rgb(207,133,49)" fg:x="5" fg:w="1"/><text x="0.6545%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.4854%" y="517" width="0.0809%" height="15" fill="rgb(240,33,46)" fg:x="6" fg:w="1"/><text x="0.7354%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.6472%" y="501" width="0.0809%" height="15" fill="rgb(212,35,2)" fg:x="8" fg:w="1"/><text x="0.8972%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="0.6472%" y="485" width="0.0809%" height="15" fill="rgb(231,119,28)" fg:x="8" fg:w="1"/><text x="0.8972%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6472%" y="469" width="0.0809%" height="15" fill="rgb(252,178,7)" fg:x="8" fg:w="1"/><text x="0.8972%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7282%" y="501" width="0.0809%" height="15" fill="rgb(251,91,4)" fg:x="9" fg:w="1"/><text x="0.9782%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.65%)</title><rect x="0.2427%" y="581" width="0.6472%" height="15" fill="rgb(233,122,19)" fg:x="3" fg:w="8"/><text x="0.4927%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.65%)</title><rect x="0.2427%" y="565" width="0.6472%" height="15" fill="rgb(231,208,46)" fg:x="3" fg:w="8"/><text x="0.4927%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="0.3236%" y="549" width="0.5663%" height="15" fill="rgb(243,15,41)" fg:x="4" fg:w="7"/><text x="0.5736%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.57%)</title><rect x="0.3236%" y="533" width="0.5663%" height="15" fill="rgb(210,32,43)" fg:x="4" fg:w="7"/><text x="0.5736%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="0.5663%" y="517" width="0.3236%" height="15" fill="rgb(222,177,15)" fg:x="7" fg:w="4"/><text x="0.8163%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="0.8091%" y="501" width="0.0809%" height="15" fill="rgb(244,121,34)" fg:x="10" fg:w="1"/><text x="1.0591%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.81%)</title><rect x="0.1618%" y="613" width="0.8091%" height="15" fill="rgb(234,138,4)" fg:x="2" fg:w="10"/><text x="0.4118%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (9 samples, 0.73%)</title><rect x="0.2427%" y="597" width="0.7282%" height="15" fill="rgb(240,97,48)" fg:x="3" fg:w="9"/><text x="0.4927%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="0.8900%" y="581" width="0.0809%" height="15" fill="rgb(237,65,54)" fg:x="11" fg:w="1"/><text x="1.1400%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8900%" y="565" width="0.0809%" height="15" fill="rgb(214,25,24)" fg:x="11" fg:w="1"/><text x="1.1400%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.05%)</title><rect x="0.0000%" y="645" width="1.0518%" height="15" fill="rgb(213,5,3)" fg:x="0" fg:w="13"/><text x="0.2500%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (11 samples, 0.89%)</title><rect x="0.1618%" y="629" width="0.8900%" height="15" fill="rgb(219,81,29)" fg:x="2" fg:w="11"/><text x="0.4118%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9709%" y="613" width="0.0809%" height="15" fill="rgb(220,43,48)" fg:x="12" fg:w="1"/><text x="1.2209%" y="623.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="1.0518%" y="581" width="0.1618%" height="15" fill="rgb(239,157,2)" fg:x="13" fg:w="2"/><text x="1.3018%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="1.0518%" y="565" width="0.1618%" height="15" fill="rgb(213,104,43)" fg:x="13" fg:w="2"/><text x="1.3018%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="1.0518%" y="549" width="0.1618%" height="15" fill="rgb(237,84,9)" fg:x="13" fg:w="2"/><text x="1.3018%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="1.1327%" y="533" width="0.0809%" height="15" fill="rgb(252,6,33)" fg:x="14" fg:w="1"/><text x="1.3827%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2136%" y="453" width="0.0809%" height="15" fill="rgb(251,172,22)" fg:x="15" fg:w="1"/><text x="1.4636%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="1.2945%" y="453" width="0.0809%" height="15" fill="rgb(244,91,53)" fg:x="16" fg:w="1"/><text x="1.5445%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.2945%" y="437" width="0.0809%" height="15" fill="rgb(219,29,30)" fg:x="16" fg:w="1"/><text x="1.5445%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="1.2945%" y="421" width="0.0809%" height="15" fill="rgb(213,3,15)" fg:x="16" fg:w="1"/><text x="1.5445%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="1.2136%" y="501" width="0.2427%" height="15" fill="rgb(208,25,28)" fg:x="15" fg:w="3"/><text x="1.4636%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="1.2136%" y="485" width="0.2427%" height="15" fill="rgb(252,144,25)" fg:x="15" fg:w="3"/><text x="1.4636%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="1.2136%" y="469" width="0.2427%" height="15" fill="rgb(226,220,25)" fg:x="15" fg:w="3"/><text x="1.4636%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.3754%" y="453" width="0.0809%" height="15" fill="rgb(212,131,28)" fg:x="17" fg:w="1"/><text x="1.6254%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.3754%" y="437" width="0.0809%" height="15" fill="rgb(219,143,52)" fg:x="17" fg:w="1"/><text x="1.6254%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.3754%" y="421" width="0.0809%" height="15" fill="rgb(215,56,7)" fg:x="17" fg:w="1"/><text x="1.6254%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.3754%" y="405" width="0.0809%" height="15" fill="rgb(239,59,51)" fg:x="17" fg:w="1"/><text x="1.6254%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.4563%" y="469" width="0.0809%" height="15" fill="rgb(209,215,4)" fg:x="18" fg:w="1"/><text x="1.7063%" y="479.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.40%)</title><rect x="1.2136%" y="565" width="0.4045%" height="15" fill="rgb(221,118,39)" fg:x="15" fg:w="5"/><text x="1.4636%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.40%)</title><rect x="1.2136%" y="549" width="0.4045%" height="15" fill="rgb(236,6,44)" fg:x="15" fg:w="5"/><text x="1.4636%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="1.2136%" y="533" width="0.4045%" height="15" fill="rgb(216,122,9)" fg:x="15" fg:w="5"/><text x="1.4636%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="1.2136%" y="517" width="0.4045%" height="15" fill="rgb(244,134,42)" fg:x="15" fg:w="5"/><text x="1.4636%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="1.4563%" y="501" width="0.1618%" height="15" fill="rgb(209,189,35)" fg:x="18" fg:w="2"/><text x="1.7063%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="1.4563%" y="485" width="0.1618%" height="15" fill="rgb(250,47,36)" fg:x="18" fg:w="2"/><text x="1.7063%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="1.5372%" y="469" width="0.0809%" height="15" fill="rgb(252,112,4)" fg:x="19" fg:w="1"/><text x="1.7872%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.5372%" y="453" width="0.0809%" height="15" fill="rgb(221,79,51)" fg:x="19" fg:w="1"/><text x="1.7872%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.5372%" y="437" width="0.0809%" height="15" fill="rgb(232,65,53)" fg:x="19" fg:w="1"/><text x="1.7872%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.5372%" y="421" width="0.0809%" height="15" fill="rgb(211,37,7)" fg:x="19" fg:w="1"/><text x="1.7872%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.5372%" y="405" width="0.0809%" height="15" fill="rgb(234,221,18)" fg:x="19" fg:w="1"/><text x="1.7872%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.5372%" y="389" width="0.0809%" height="15" fill="rgb(220,158,26)" fg:x="19" fg:w="1"/><text x="1.7872%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.6181%" y="517" width="0.0809%" height="15" fill="rgb(220,70,6)" fg:x="20" fg:w="1"/><text x="1.8681%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="1.6990%" y="485" width="0.0809%" height="15" fill="rgb(250,39,48)" fg:x="21" fg:w="1"/><text x="1.9490%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="1.6990%" y="469" width="0.0809%" height="15" fill="rgb(206,40,27)" fg:x="21" fg:w="1"/><text x="1.9490%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (10 samples, 0.81%)</title><rect x="1.0518%" y="613" width="0.8091%" height="15" fill="rgb(247,80,36)" fg:x="13" fg:w="10"/><text x="1.3018%" y="623.50"></text></g><g><title>engine::internal::Entities::prepare_entity (10 samples, 0.81%)</title><rect x="1.0518%" y="597" width="0.8091%" height="15" fill="rgb(222,9,20)" fg:x="13" fg:w="10"/><text x="1.3018%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity (8 samples, 0.65%)</title><rect x="1.2136%" y="581" width="0.6472%" height="15" fill="rgb(217,26,45)" fg:x="15" fg:w="8"/><text x="1.4636%" y="591.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="1.6181%" y="565" width="0.2427%" height="15" fill="rgb(221,67,14)" fg:x="20" fg:w="3"/><text x="1.8681%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="1.6181%" y="549" width="0.2427%" height="15" fill="rgb(248,100,24)" fg:x="20" fg:w="3"/><text x="1.8681%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="1.6181%" y="533" width="0.2427%" height="15" fill="rgb(230,187,16)" fg:x="20" fg:w="3"/><text x="1.8681%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="1.6990%" y="517" width="0.1618%" height="15" fill="rgb(205,108,13)" fg:x="21" fg:w="2"/><text x="1.9490%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="1.6990%" y="501" width="0.1618%" height="15" fill="rgb(235,71,51)" fg:x="21" fg:w="2"/><text x="1.9490%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.7799%" y="485" width="0.0809%" height="15" fill="rgb(251,172,48)" fg:x="22" fg:w="1"/><text x="2.0299%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.7799%" y="469" width="0.0809%" height="15" fill="rgb(240,96,49)" fg:x="22" fg:w="1"/><text x="2.0299%" y="479.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="1.7799%" y="453" width="0.0809%" height="15" fill="rgb(235,46,36)" fg:x="22" fg:w="1"/><text x="2.0299%" y="463.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="1.7799%" y="437" width="0.0809%" height="15" fill="rgb(244,3,49)" fg:x="22" fg:w="1"/><text x="2.0299%" y="447.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="1.8608%" y="613" width="0.0809%" height="15" fill="rgb(206,78,54)" fg:x="23" fg:w="1"/><text x="2.1108%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="1.8608%" y="597" width="0.0809%" height="15" fill="rgb(208,85,42)" fg:x="23" fg:w="1"/><text x="2.1108%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="1.8608%" y="581" width="0.0809%" height="15" fill="rgb(219,196,21)" fg:x="23" fg:w="1"/><text x="2.1108%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.8608%" y="565" width="0.0809%" height="15" fill="rgb(238,19,9)" fg:x="23" fg:w="1"/><text x="2.1108%" y="575.50"></text></g><g><title>engine::internal::EntityMap::new (1 samples, 0.08%)</title><rect x="1.9417%" y="613" width="0.0809%" height="15" fill="rgb(206,86,13)" fg:x="24" fg:w="1"/><text x="2.1917%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.9417%" y="597" width="0.0809%" height="15" fill="rgb(214,123,40)" fg:x="24" fg:w="1"/><text x="2.1917%" y="607.50"></text></g><g><title>_IO_default_uflow (1 samples, 0.08%)</title><rect x="2.5890%" y="533" width="0.0809%" height="15" fill="rgb(243,53,5)" fg:x="32" fg:w="1"/><text x="2.8390%" y="543.50"></text></g><g><title>dlerror (9 samples, 0.73%)</title><rect x="2.0227%" y="565" width="0.7282%" height="15" fill="rgb(254,186,31)" fg:x="25" fg:w="9"/><text x="2.2727%" y="575.50"></text></g><g><title>__asprintf (6 samples, 0.49%)</title><rect x="2.2654%" y="549" width="0.4854%" height="15" fill="rgb(221,216,25)" fg:x="28" fg:w="6"/><text x="2.5154%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.6699%" y="533" width="0.0809%" height="15" fill="rgb(248,107,42)" fg:x="33" fg:w="1"/><text x="2.9199%" y="543.50"></text></g><g><title>libloading::os::unix::Library::open (19 samples, 1.54%)</title><rect x="2.0227%" y="581" width="1.5372%" height="15" fill="rgb(221,85,43)" fg:x="25" fg:w="19"/><text x="2.2727%" y="591.50"></text></g><g><title>dlopen (10 samples, 0.81%)</title><rect x="2.7508%" y="565" width="0.8091%" height="15" fill="rgb(225,34,24)" fg:x="34" fg:w="10"/><text x="3.0008%" y="575.50"></text></g><g><title>_dl_catch_error (10 samples, 0.81%)</title><rect x="2.7508%" y="549" width="0.8091%" height="15" fill="rgb(211,119,1)" fg:x="34" fg:w="10"/><text x="3.0008%" y="559.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.81%)</title><rect x="2.7508%" y="533" width="0.8091%" height="15" fill="rgb(254,216,46)" fg:x="34" fg:w="10"/><text x="3.0008%" y="543.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.81%)</title><rect x="2.7508%" y="517" width="0.8091%" height="15" fill="rgb(238,11,38)" fg:x="34" fg:w="10"/><text x="3.0008%" y="527.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.81%)</title><rect x="2.7508%" y="501" width="0.8091%" height="15" fill="rgb(233,50,15)" fg:x="34" fg:w="10"/><text x="3.0008%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.4790%" y="485" width="0.0809%" height="15" fill="rgb(217,181,29)" fg:x="43" fg:w="1"/><text x="3.7290%" y="495.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (20 samples, 1.62%)</title><rect x="2.0227%" y="597" width="1.6181%" height="15" fill="rgb(214,56,3)" fg:x="25" fg:w="20"/><text x="2.2727%" y="607.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="3.5599%" y="581" width="0.0809%" height="15" fill="rgb(230,69,45)" fg:x="44" fg:w="1"/><text x="3.8099%" y="591.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="3.5599%" y="565" width="0.0809%" height="15" fill="rgb(224,201,50)" fg:x="44" fg:w="1"/><text x="3.8099%" y="575.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (33 samples, 2.67%)</title><rect x="1.0518%" y="645" width="2.6699%" height="15" fill="rgb(217,228,18)" fg:x="13" fg:w="33"/><text x="1.3018%" y="655.50">&lt;e..</text></g><g><title>engine::session::Session::new (33 samples, 2.67%)</title><rect x="1.0518%" y="629" width="2.6699%" height="15" fill="rgb(239,33,44)" fg:x="13" fg:w="33"/><text x="1.3018%" y="639.50">en..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (21 samples, 1.70%)</title><rect x="2.0227%" y="613" width="1.6990%" height="15" fill="rgb(248,210,23)" fg:x="25" fg:w="21"/><text x="2.2727%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="3.6408%" y="597" width="0.0809%" height="15" fill="rgb(253,135,8)" fg:x="45" fg:w="1"/><text x="3.8908%" y="607.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="3.6408%" y="581" width="0.0809%" height="15" fill="rgb(217,98,21)" fg:x="45" fg:w="1"/><text x="3.8908%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.8026%" y="629" width="0.0809%" height="15" fill="rgb(253,130,21)" fg:x="47" fg:w="1"/><text x="4.0526%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="3.8835%" y="629" width="0.0809%" height="15" fill="rgb(207,81,54)" fg:x="48" fg:w="1"/><text x="4.1335%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.8835%" y="613" width="0.0809%" height="15" fill="rgb(232,48,33)" fg:x="48" fg:w="1"/><text x="4.1335%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.8835%" y="597" width="0.0809%" height="15" fill="rgb(211,9,35)" fg:x="48" fg:w="1"/><text x="4.1335%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="3.9644%" y="629" width="0.0809%" height="15" fill="rgb(205,152,21)" fg:x="49" fg:w="1"/><text x="4.2144%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.0453%" y="597" width="0.0809%" height="15" fill="rgb(249,21,27)" fg:x="50" fg:w="1"/><text x="4.2953%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.0453%" y="581" width="0.0809%" height="15" fill="rgb(252,29,24)" fg:x="50" fg:w="1"/><text x="4.2953%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.0453%" y="565" width="0.0809%" height="15" fill="rgb(230,130,50)" fg:x="50" fg:w="1"/><text x="4.2953%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.0453%" y="549" width="0.0809%" height="15" fill="rgb(239,144,14)" fg:x="50" fg:w="1"/><text x="4.2953%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="4.1262%" y="597" width="0.0809%" height="15" fill="rgb(227,111,50)" fg:x="51" fg:w="1"/><text x="4.3762%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.1262%" y="581" width="0.0809%" height="15" fill="rgb(254,84,20)" fg:x="51" fg:w="1"/><text x="4.3762%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.2071%" y="597" width="0.0809%" height="15" fill="rgb(232,90,48)" fg:x="52" fg:w="1"/><text x="4.4571%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="4.2071%" y="581" width="0.0809%" height="15" fill="rgb(253,63,47)" fg:x="52" fg:w="1"/><text x="4.4571%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="4.2071%" y="565" width="0.0809%" height="15" fill="rgb(251,146,35)" fg:x="52" fg:w="1"/><text x="4.4571%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="4.4498%" y="533" width="0.2427%" height="15" fill="rgb(229,192,35)" fg:x="55" fg:w="3"/><text x="4.6998%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="4.4498%" y="517" width="0.2427%" height="15" fill="rgb(225,68,9)" fg:x="55" fg:w="3"/><text x="4.6998%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="4.4498%" y="501" width="0.2427%" height="15" fill="rgb(214,97,34)" fg:x="55" fg:w="3"/><text x="4.6998%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.5307%" y="485" width="0.1618%" height="15" fill="rgb(253,31,26)" fg:x="56" fg:w="2"/><text x="4.7807%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="4.5307%" y="469" width="0.1618%" height="15" fill="rgb(225,151,47)" fg:x="56" fg:w="2"/><text x="4.7807%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.6117%" y="453" width="0.0809%" height="15" fill="rgb(206,185,9)" fg:x="57" fg:w="1"/><text x="4.8617%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.6117%" y="437" width="0.0809%" height="15" fill="rgb(249,65,17)" fg:x="57" fg:w="1"/><text x="4.8617%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="4.3689%" y="549" width="0.4045%" height="15" fill="rgb(220,110,10)" fg:x="54" fg:w="5"/><text x="4.6189%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.6926%" y="533" width="0.0809%" height="15" fill="rgb(222,198,49)" fg:x="58" fg:w="1"/><text x="4.9426%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.6926%" y="517" width="0.0809%" height="15" fill="rgb(239,81,13)" fg:x="58" fg:w="1"/><text x="4.9426%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.6926%" y="501" width="0.0809%" height="15" fill="rgb(216,128,11)" fg:x="58" fg:w="1"/><text x="4.9426%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="4.7735%" y="533" width="0.2427%" height="15" fill="rgb(247,156,8)" fg:x="59" fg:w="3"/><text x="5.0235%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.8544%" y="517" width="0.1618%" height="15" fill="rgb(219,173,1)" fg:x="60" fg:w="2"/><text x="5.1044%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.8544%" y="501" width="0.1618%" height="15" fill="rgb(227,42,24)" fg:x="60" fg:w="2"/><text x="5.1044%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.9353%" y="485" width="0.0809%" height="15" fill="rgb(253,219,50)" fg:x="61" fg:w="1"/><text x="5.1853%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.0971%" y="517" width="0.0809%" height="15" fill="rgb(215,191,54)" fg:x="63" fg:w="1"/><text x="5.3471%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.1780%" y="517" width="0.0809%" height="15" fill="rgb(238,83,12)" fg:x="64" fg:w="1"/><text x="5.4280%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.3398%" y="485" width="0.0809%" height="15" fill="rgb(205,124,9)" fg:x="66" fg:w="1"/><text x="5.5898%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="5.2589%" y="501" width="0.2427%" height="15" fill="rgb(253,174,7)" fg:x="65" fg:w="3"/><text x="5.5089%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.4207%" y="485" width="0.0809%" height="15" fill="rgb(206,134,49)" fg:x="67" fg:w="1"/><text x="5.6707%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="5.0162%" y="533" width="0.5663%" height="15" fill="rgb(221,89,20)" fg:x="62" fg:w="7"/><text x="5.2662%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="5.2589%" y="517" width="0.3236%" height="15" fill="rgb(240,205,13)" fg:x="65" fg:w="4"/><text x="5.5089%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.5016%" y="501" width="0.0809%" height="15" fill="rgb(237,174,32)" fg:x="68" fg:w="1"/><text x="5.7516%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.5016%" y="485" width="0.0809%" height="15" fill="rgb(226,12,15)" fg:x="68" fg:w="1"/><text x="5.7516%" y="495.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="5.6634%" y="453" width="0.0809%" height="15" fill="rgb(245,160,52)" fg:x="70" fg:w="1"/><text x="5.9134%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.46%)</title><rect x="4.3689%" y="565" width="1.4563%" height="15" fill="rgb(253,80,21)" fg:x="54" fg:w="18"/><text x="4.6189%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="4.7735%" y="549" width="1.0518%" height="15" fill="rgb(231,225,22)" fg:x="59" fg:w="13"/><text x="5.0235%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.5825%" y="533" width="0.2427%" height="15" fill="rgb(253,185,12)" fg:x="69" fg:w="3"/><text x="5.8325%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.6634%" y="517" width="0.1618%" height="15" fill="rgb(234,197,21)" fg:x="70" fg:w="2"/><text x="5.9134%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.6634%" y="501" width="0.1618%" height="15" fill="rgb(210,47,30)" fg:x="70" fg:w="2"/><text x="5.9134%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="5.6634%" y="485" width="0.1618%" height="15" fill="rgb(246,139,27)" fg:x="70" fg:w="2"/><text x="5.9134%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.6634%" y="469" width="0.1618%" height="15" fill="rgb(226,130,16)" fg:x="70" fg:w="2"/><text x="5.9134%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.7443%" y="453" width="0.0809%" height="15" fill="rgb(237,208,20)" fg:x="71" fg:w="1"/><text x="5.9943%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="5.8252%" y="533" width="0.0809%" height="15" fill="rgb(245,186,28)" fg:x="72" fg:w="1"/><text x="6.0752%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.9061%" y="533" width="0.0809%" height="15" fill="rgb(238,105,39)" fg:x="73" fg:w="1"/><text x="6.1561%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="5.9871%" y="517" width="0.2427%" height="15" fill="rgb(253,228,11)" fg:x="74" fg:w="3"/><text x="6.2371%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="6.2298%" y="517" width="0.0809%" height="15" fill="rgb(224,136,38)" fg:x="77" fg:w="1"/><text x="6.4798%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.2298%" y="501" width="0.0809%" height="15" fill="rgb(211,3,25)" fg:x="77" fg:w="1"/><text x="6.4798%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="5.8252%" y="565" width="0.7282%" height="15" fill="rgb(238,66,34)" fg:x="72" fg:w="9"/><text x="6.0752%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.73%)</title><rect x="5.8252%" y="549" width="0.7282%" height="15" fill="rgb(223,188,11)" fg:x="72" fg:w="9"/><text x="6.0752%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.57%)</title><rect x="5.9871%" y="533" width="0.5663%" height="15" fill="rgb(221,10,35)" fg:x="74" fg:w="7"/><text x="6.2371%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="6.3107%" y="517" width="0.2427%" height="15" fill="rgb(223,18,44)" fg:x="78" fg:w="3"/><text x="6.5607%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="6.3107%" y="501" width="0.2427%" height="15" fill="rgb(220,97,41)" fg:x="78" fg:w="3"/><text x="6.5607%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="6.7152%" y="533" width="0.0809%" height="15" fill="rgb(206,95,45)" fg:x="83" fg:w="1"/><text x="6.9652%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.7961%" y="517" width="0.0809%" height="15" fill="rgb(209,96,13)" fg:x="84" fg:w="1"/><text x="7.0461%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="6.8770%" y="517" width="0.1618%" height="15" fill="rgb(237,39,34)" fg:x="85" fg:w="2"/><text x="7.1270%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.9579%" y="501" width="0.0809%" height="15" fill="rgb(213,49,47)" fg:x="86" fg:w="1"/><text x="7.2079%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.1197%" y="469" width="0.0809%" height="15" fill="rgb(205,107,27)" fg:x="88" fg:w="1"/><text x="7.3697%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.1197%" y="453" width="0.0809%" height="15" fill="rgb(212,142,9)" fg:x="88" fg:w="1"/><text x="7.3697%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.1197%" y="437" width="0.0809%" height="15" fill="rgb(226,182,0)" fg:x="88" fg:w="1"/><text x="7.3697%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.2816%" y="437" width="0.0809%" height="15" fill="rgb(231,3,53)" fg:x="90" fg:w="1"/><text x="7.5316%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="7.2816%" y="453" width="0.1618%" height="15" fill="rgb(246,111,28)" fg:x="90" fg:w="2"/><text x="7.5316%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="7.3625%" y="437" width="0.0809%" height="15" fill="rgb(254,183,7)" fg:x="91" fg:w="1"/><text x="7.6125%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.3625%" y="421" width="0.0809%" height="15" fill="rgb(247,177,28)" fg:x="91" fg:w="1"/><text x="7.6125%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (6 samples, 0.49%)</title><rect x="7.0388%" y="517" width="0.4854%" height="15" fill="rgb(244,43,1)" fg:x="87" fg:w="6"/><text x="7.2888%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="7.1197%" y="501" width="0.4045%" height="15" fill="rgb(207,2,35)" fg:x="88" fg:w="5"/><text x="7.3697%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="7.1197%" y="485" width="0.4045%" height="15" fill="rgb(213,83,22)" fg:x="88" fg:w="5"/><text x="7.3697%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (4 samples, 0.32%)</title><rect x="7.2006%" y="469" width="0.3236%" height="15" fill="rgb(246,212,13)" fg:x="89" fg:w="4"/><text x="7.4506%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.4434%" y="453" width="0.0809%" height="15" fill="rgb(213,127,46)" fg:x="92" fg:w="1"/><text x="7.6934%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="7.4434%" y="437" width="0.0809%" height="15" fill="rgb(219,215,39)" fg:x="92" fg:w="1"/><text x="7.6934%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.4434%" y="421" width="0.0809%" height="15" fill="rgb(227,99,17)" fg:x="92" fg:w="1"/><text x="7.6934%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.4434%" y="405" width="0.0809%" height="15" fill="rgb(208,155,18)" fg:x="92" fg:w="1"/><text x="7.6934%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="7.5243%" y="517" width="0.0809%" height="15" fill="rgb(223,204,38)" fg:x="93" fg:w="1"/><text x="7.7743%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.5243%" y="501" width="0.0809%" height="15" fill="rgb(212,114,21)" fg:x="93" fg:w="1"/><text x="7.7743%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.5243%" y="485" width="0.0809%" height="15" fill="rgb(250,74,13)" fg:x="93" fg:w="1"/><text x="7.7743%" y="495.50"></text></g><g><title>kernel::compare::any_entity_changes (15 samples, 1.21%)</title><rect x="6.5534%" y="565" width="1.2136%" height="15" fill="rgb(234,7,1)" fg:x="81" fg:w="15"/><text x="6.8034%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (13 samples, 1.05%)</title><rect x="6.7152%" y="549" width="1.0518%" height="15" fill="rgb(207,138,31)" fg:x="83" fg:w="13"/><text x="6.9652%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.97%)</title><rect x="6.7961%" y="533" width="0.9709%" height="15" fill="rgb(215,186,42)" fg:x="84" fg:w="12"/><text x="7.0461%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="7.6052%" y="517" width="0.1618%" height="15" fill="rgb(229,205,49)" fg:x="94" fg:w="2"/><text x="7.8552%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (2 samples, 0.16%)</title><rect x="7.6052%" y="501" width="0.1618%" height="15" fill="rgb(216,156,32)" fg:x="94" fg:w="2"/><text x="7.8552%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.6861%" y="485" width="0.0809%" height="15" fill="rgb(238,7,21)" fg:x="95" fg:w="1"/><text x="7.9361%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="7.6861%" y="469" width="0.0809%" height="15" fill="rgb(249,190,22)" fg:x="95" fg:w="1"/><text x="7.9361%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="7.6861%" y="453" width="0.0809%" height="15" fill="rgb(253,51,31)" fg:x="95" fg:w="1"/><text x="7.9361%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.6861%" y="437" width="0.0809%" height="15" fill="rgb(237,90,54)" fg:x="95" fg:w="1"/><text x="7.9361%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="7.6861%" y="421" width="0.0809%" height="15" fill="rgb(250,214,33)" fg:x="95" fg:w="1"/><text x="7.9361%" y="431.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (44 samples, 3.56%)</title><rect x="4.2880%" y="597" width="3.5599%" height="15" fill="rgb(237,10,49)" fg:x="53" fg:w="44"/><text x="4.5380%" y="607.50">engi..</text></g><g><title>engine::session::Session::check_for_changes (44 samples, 3.56%)</title><rect x="4.2880%" y="581" width="3.5599%" height="15" fill="rgb(241,56,36)" fg:x="53" fg:w="44"/><text x="4.5380%" y="591.50">engi..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="7.7670%" y="565" width="0.0809%" height="15" fill="rgb(227,164,12)" fg:x="96" fg:w="1"/><text x="8.0170%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.7670%" y="549" width="0.0809%" height="15" fill="rgb(249,149,35)" fg:x="96" fg:w="1"/><text x="8.0170%" y="559.50"></text></g><g><title>engine::session::Session::flush (48 samples, 3.88%)</title><rect x="4.0453%" y="629" width="3.8835%" height="15" fill="rgb(238,227,50)" fg:x="50" fg:w="48"/><text x="4.2953%" y="639.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (48 samples, 3.88%)</title><rect x="4.0453%" y="613" width="3.8835%" height="15" fill="rgb(235,102,45)" fg:x="50" fg:w="48"/><text x="4.2953%" y="623.50">engi..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="7.8479%" y="597" width="0.0809%" height="15" fill="rgb(211,10,38)" fg:x="97" fg:w="1"/><text x="8.0979%" y="607.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="7.8479%" y="581" width="0.0809%" height="15" fill="rgb(219,77,48)" fg:x="97" fg:w="1"/><text x="8.0979%" y="591.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="7.8479%" y="565" width="0.0809%" height="15" fill="rgb(246,6,15)" fg:x="97" fg:w="1"/><text x="8.0979%" y="575.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="7.8479%" y="549" width="0.0809%" height="15" fill="rgb(207,220,2)" fg:x="97" fg:w="1"/><text x="8.0979%" y="559.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="7.8479%" y="533" width="0.0809%" height="15" fill="rgb(242,48,14)" fg:x="97" fg:w="1"/><text x="8.0979%" y="543.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="7.8479%" y="517" width="0.0809%" height="15" fill="rgb(218,19,27)" fg:x="97" fg:w="1"/><text x="8.0979%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="7.9288%" y="613" width="0.0809%" height="15" fill="rgb(228,0,35)" fg:x="98" fg:w="1"/><text x="8.1788%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="7.9288%" y="597" width="0.0809%" height="15" fill="rgb(244,142,54)" fg:x="98" fg:w="1"/><text x="8.1788%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="7.9288%" y="581" width="0.0809%" height="15" fill="rgb(243,217,40)" fg:x="98" fg:w="1"/><text x="8.1788%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="7.9288%" y="565" width="0.0809%" height="15" fill="rgb(207,114,16)" fg:x="98" fg:w="1"/><text x="8.1788%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="7.9288%" y="549" width="0.0809%" height="15" fill="rgb(224,33,25)" fg:x="98" fg:w="1"/><text x="8.1788%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="7.9288%" y="533" width="0.0809%" height="15" fill="rgb(230,93,54)" fg:x="98" fg:w="1"/><text x="8.1788%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="7.9288%" y="517" width="0.0809%" height="15" fill="rgb(224,56,24)" fg:x="98" fg:w="1"/><text x="8.1788%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="7.9288%" y="501" width="0.0809%" height="15" fill="rgb(235,189,50)" fg:x="98" fg:w="1"/><text x="8.1788%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="7.9288%" y="485" width="0.0809%" height="15" fill="rgb(242,173,8)" fg:x="98" fg:w="1"/><text x="8.1788%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="7.9288%" y="469" width="0.0809%" height="15" fill="rgb(209,206,10)" fg:x="98" fg:w="1"/><text x="8.1788%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="7.9288%" y="453" width="0.0809%" height="15" fill="rgb(213,182,44)" fg:x="98" fg:w="1"/><text x="8.1788%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="7.9288%" y="437" width="0.0809%" height="15" fill="rgb(243,51,15)" fg:x="98" fg:w="1"/><text x="8.1788%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="8.0906%" y="597" width="0.0809%" height="15" fill="rgb(241,13,14)" fg:x="100" fg:w="1"/><text x="8.3406%" y="607.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="8.0906%" y="581" width="0.0809%" height="15" fill="rgb(239,147,24)" fg:x="100" fg:w="1"/><text x="8.3406%" y="591.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="8.0906%" y="565" width="0.0809%" height="15" fill="rgb(223,129,16)" fg:x="100" fg:w="1"/><text x="8.3406%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.1715%" y="565" width="0.0809%" height="15" fill="rgb(209,169,13)" fg:x="101" fg:w="1"/><text x="8.4215%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.1715%" y="549" width="0.0809%" height="15" fill="rgb(235,159,41)" fg:x="101" fg:w="1"/><text x="8.4215%" y="559.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.65%)</title><rect x="7.9288%" y="629" width="0.6472%" height="15" fill="rgb(223,219,48)" fg:x="98" fg:w="8"/><text x="8.1788%" y="639.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.57%)</title><rect x="8.0097%" y="613" width="0.5663%" height="15" fill="rgb(236,80,13)" fg:x="99" fg:w="7"/><text x="8.2597%" y="623.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (5 samples, 0.40%)</title><rect x="8.1715%" y="597" width="0.4045%" height="15" fill="rgb(213,5,6)" fg:x="101" fg:w="5"/><text x="8.4215%" y="607.50"></text></g><g><title>kernel::model::Entity::replace_scope (5 samples, 0.40%)</title><rect x="8.1715%" y="581" width="0.4045%" height="15" fill="rgb(205,59,21)" fg:x="101" fg:w="5"/><text x="8.4215%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (4 samples, 0.32%)</title><rect x="8.2524%" y="565" width="0.3236%" height="15" fill="rgb(247,137,35)" fg:x="102" fg:w="4"/><text x="8.5024%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="8.3333%" y="549" width="0.2427%" height="15" fill="rgb(242,208,28)" fg:x="103" fg:w="3"/><text x="8.5833%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="8.3333%" y="533" width="0.2427%" height="15" fill="rgb(245,62,25)" fg:x="103" fg:w="3"/><text x="8.5833%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="8.3333%" y="517" width="0.2427%" height="15" fill="rgb(233,99,54)" fg:x="103" fg:w="3"/><text x="8.5833%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="8.3333%" y="501" width="0.2427%" height="15" fill="rgb(213,10,37)" fg:x="103" fg:w="3"/><text x="8.5833%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.4951%" y="485" width="0.0809%" height="15" fill="rgb(235,143,30)" fg:x="105" fg:w="1"/><text x="8.7451%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="8.5761%" y="629" width="0.0809%" height="15" fill="rgb(250,146,33)" fg:x="106" fg:w="1"/><text x="8.8261%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="8.5761%" y="613" width="0.0809%" height="15" fill="rgb(226,198,42)" fg:x="106" fg:w="1"/><text x="8.8261%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="8.5761%" y="597" width="0.0809%" height="15" fill="rgb(222,55,6)" fg:x="106" fg:w="1"/><text x="8.8261%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="8.5761%" y="581" width="0.0809%" height="15" fill="rgb(213,224,31)" fg:x="106" fg:w="1"/><text x="8.8261%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="8.5761%" y="565" width="0.0809%" height="15" fill="rgb(226,103,35)" fg:x="106" fg:w="1"/><text x="8.8261%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="8.5761%" y="549" width="0.0809%" height="15" fill="rgb(205,66,45)" fg:x="106" fg:w="1"/><text x="8.8261%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.5761%" y="533" width="0.0809%" height="15" fill="rgb(226,51,42)" fg:x="106" fg:w="1"/><text x="8.8261%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="8.5761%" y="517" width="0.0809%" height="15" fill="rgb(206,69,1)" fg:x="106" fg:w="1"/><text x="8.8261%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="8.5761%" y="501" width="0.0809%" height="15" fill="rgb(213,228,47)" fg:x="106" fg:w="1"/><text x="8.8261%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="8.5761%" y="485" width="0.0809%" height="15" fill="rgb(224,204,18)" fg:x="106" fg:w="1"/><text x="8.8261%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.5761%" y="469" width="0.0809%" height="15" fill="rgb(253,187,47)" fg:x="106" fg:w="1"/><text x="8.8261%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.5761%" y="453" width="0.0809%" height="15" fill="rgb(232,61,2)" fg:x="106" fg:w="1"/><text x="8.8261%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.5761%" y="437" width="0.0809%" height="15" fill="rgb(213,132,35)" fg:x="106" fg:w="1"/><text x="8.8261%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="8.5761%" y="421" width="0.0809%" height="15" fill="rgb(247,33,21)" fg:x="106" fg:w="1"/><text x="8.8261%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="8.5761%" y="405" width="0.0809%" height="15" fill="rgb(233,71,46)" fg:x="106" fg:w="1"/><text x="8.8261%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="8.5761%" y="389" width="0.0809%" height="15" fill="rgb(222,173,43)" fg:x="106" fg:w="1"/><text x="8.8261%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="8.5761%" y="373" width="0.0809%" height="15" fill="rgb(249,218,47)" fg:x="106" fg:w="1"/><text x="8.8261%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="8.5761%" y="357" width="0.0809%" height="15" fill="rgb(254,185,48)" fg:x="106" fg:w="1"/><text x="8.8261%" y="367.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="8.6570%" y="629" width="0.0809%" height="15" fill="rgb(252,165,50)" fg:x="107" fg:w="1"/><text x="8.9070%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="8.6570%" y="613" width="0.0809%" height="15" fill="rgb(206,219,6)" fg:x="107" fg:w="1"/><text x="8.9070%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="8.8997%" y="613" width="0.0809%" height="15" fill="rgb(212,212,45)" fg:x="110" fg:w="1"/><text x="9.1497%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="8.8997%" y="597" width="0.0809%" height="15" fill="rgb(221,31,9)" fg:x="110" fg:w="1"/><text x="9.1497%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="8.8997%" y="581" width="0.0809%" height="15" fill="rgb(234,198,39)" fg:x="110" fg:w="1"/><text x="9.1497%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="8.8997%" y="565" width="0.0809%" height="15" fill="rgb(252,145,46)" fg:x="110" fg:w="1"/><text x="9.1497%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="8.8997%" y="549" width="0.0809%" height="15" fill="rgb(237,149,0)" fg:x="110" fg:w="1"/><text x="9.1497%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.8997%" y="533" width="0.0809%" height="15" fill="rgb(229,65,5)" fg:x="110" fg:w="1"/><text x="9.1497%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="8.8997%" y="517" width="0.0809%" height="15" fill="rgb(235,60,36)" fg:x="110" fg:w="1"/><text x="9.1497%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="8.8997%" y="501" width="0.0809%" height="15" fill="rgb(222,47,18)" fg:x="110" fg:w="1"/><text x="9.1497%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="8.8997%" y="485" width="0.0809%" height="15" fill="rgb(235,114,22)" fg:x="110" fg:w="1"/><text x="9.1497%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.8997%" y="469" width="0.0809%" height="15" fill="rgb(209,167,11)" fg:x="110" fg:w="1"/><text x="9.1497%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.8997%" y="453" width="0.0809%" height="15" fill="rgb(251,73,18)" fg:x="110" fg:w="1"/><text x="9.1497%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.8997%" y="437" width="0.0809%" height="15" fill="rgb(217,60,17)" fg:x="110" fg:w="1"/><text x="9.1497%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="8.8997%" y="421" width="0.0809%" height="15" fill="rgb(224,36,37)" fg:x="110" fg:w="1"/><text x="9.1497%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="8.8997%" y="405" width="0.0809%" height="15" fill="rgb(211,21,32)" fg:x="110" fg:w="1"/><text x="9.1497%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="8.8997%" y="389" width="0.0809%" height="15" fill="rgb(231,55,48)" fg:x="110" fg:w="1"/><text x="9.1497%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="8.8997%" y="373" width="0.0809%" height="15" fill="rgb(227,42,18)" fg:x="110" fg:w="1"/><text x="9.1497%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="8.8997%" y="357" width="0.0809%" height="15" fill="rgb(217,2,27)" fg:x="110" fg:w="1"/><text x="9.1497%" y="367.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="8.9806%" y="565" width="0.0809%" height="15" fill="rgb(251,138,23)" fg:x="111" fg:w="1"/><text x="9.2306%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="8.9806%" y="549" width="0.0809%" height="15" fill="rgb(226,184,11)" fg:x="111" fg:w="1"/><text x="9.2306%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="8.9806%" y="533" width="0.0809%" height="15" fill="rgb(242,142,12)" fg:x="111" fg:w="1"/><text x="9.2306%" y="543.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="8.9806%" y="517" width="0.0809%" height="15" fill="rgb(234,187,18)" fg:x="111" fg:w="1"/><text x="9.2306%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (1 samples, 0.08%)</title><rect x="8.9806%" y="501" width="0.0809%" height="15" fill="rgb(237,44,42)" fg:x="111" fg:w="1"/><text x="9.2306%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="8.9806%" y="485" width="0.0809%" height="15" fill="rgb(211,90,23)" fg:x="111" fg:w="1"/><text x="9.2306%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.9806%" y="469" width="0.0809%" height="15" fill="rgb(207,81,18)" fg:x="111" fg:w="1"/><text x="9.2306%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="9.0615%" y="533" width="0.0809%" height="15" fill="rgb(222,107,28)" fg:x="112" fg:w="1"/><text x="9.3115%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="9.0615%" y="517" width="0.0809%" height="15" fill="rgb(237,83,52)" fg:x="112" fg:w="1"/><text x="9.3115%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="9.0615%" y="501" width="0.0809%" height="15" fill="rgb(208,67,11)" fg:x="112" fg:w="1"/><text x="9.3115%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="9.0615%" y="485" width="0.0809%" height="15" fill="rgb(249,157,49)" fg:x="112" fg:w="1"/><text x="9.3115%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="9.0615%" y="469" width="0.0809%" height="15" fill="rgb(243,200,1)" fg:x="112" fg:w="1"/><text x="9.3115%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="9.0615%" y="453" width="0.0809%" height="15" fill="rgb(225,162,37)" fg:x="112" fg:w="1"/><text x="9.3115%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="9.0615%" y="437" width="0.0809%" height="15" fill="rgb(242,92,13)" fg:x="112" fg:w="1"/><text x="9.3115%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="9.0615%" y="421" width="0.0809%" height="15" fill="rgb(220,43,36)" fg:x="112" fg:w="1"/><text x="9.3115%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="9.0615%" y="405" width="0.0809%" height="15" fill="rgb(213,165,48)" fg:x="112" fg:w="1"/><text x="9.3115%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="9.0615%" y="389" width="0.0809%" height="15" fill="rgb(227,200,9)" fg:x="112" fg:w="1"/><text x="9.3115%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="9.0615%" y="373" width="0.0809%" height="15" fill="rgb(221,222,28)" fg:x="112" fg:w="1"/><text x="9.3115%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="9.0615%" y="357" width="0.0809%" height="15" fill="rgb(223,142,26)" fg:x="112" fg:w="1"/><text x="9.3115%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="9.0615%" y="341" width="0.0809%" height="15" fill="rgb(243,46,9)" fg:x="112" fg:w="1"/><text x="9.3115%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="9.0615%" y="325" width="0.0809%" height="15" fill="rgb(250,56,11)" fg:x="112" fg:w="1"/><text x="9.3115%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.0615%" y="309" width="0.0809%" height="15" fill="rgb(229,113,5)" fg:x="112" fg:w="1"/><text x="9.3115%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.0615%" y="293" width="0.0809%" height="15" fill="rgb(244,108,28)" fg:x="112" fg:w="1"/><text x="9.3115%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="9.0615%" y="277" width="0.0809%" height="15" fill="rgb(242,119,50)" fg:x="112" fg:w="1"/><text x="9.3115%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="9.0615%" y="261" width="0.0809%" height="15" fill="rgb(224,164,23)" fg:x="112" fg:w="1"/><text x="9.3115%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="9.0615%" y="245" width="0.0809%" height="15" fill="rgb(214,227,44)" fg:x="112" fg:w="1"/><text x="9.3115%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="9.0615%" y="229" width="0.0809%" height="15" fill="rgb(238,202,4)" fg:x="112" fg:w="1"/><text x="9.3115%" y="239.50"></text></g><g><title>plugins_core::build::Build::leads_to (2 samples, 0.16%)</title><rect x="9.0615%" y="565" width="0.1618%" height="15" fill="rgb(213,190,30)" fg:x="112" fg:w="2"/><text x="9.3115%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="9.0615%" y="549" width="0.1618%" height="15" fill="rgb(239,15,2)" fg:x="112" fg:w="2"/><text x="9.3115%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="9.1424%" y="533" width="0.0809%" height="15" fill="rgb(249,229,4)" fg:x="113" fg:w="1"/><text x="9.3924%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.1424%" y="517" width="0.0809%" height="15" fill="rgb(239,75,44)" fg:x="113" fg:w="1"/><text x="9.3924%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.1424%" y="501" width="0.0809%" height="15" fill="rgb(251,206,23)" fg:x="113" fg:w="1"/><text x="9.3924%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="9.1424%" y="485" width="0.0809%" height="15" fill="rgb(215,208,0)" fg:x="113" fg:w="1"/><text x="9.3924%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="9.1424%" y="469" width="0.0809%" height="15" fill="rgb(230,75,50)" fg:x="113" fg:w="1"/><text x="9.3924%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="9.1424%" y="453" width="0.0809%" height="15" fill="rgb(246,180,39)" fg:x="113" fg:w="1"/><text x="9.3924%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.1424%" y="437" width="0.0809%" height="15" fill="rgb(249,175,24)" fg:x="113" fg:w="1"/><text x="9.3924%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.1424%" y="421" width="0.0809%" height="15" fill="rgb(247,176,22)" fg:x="113" fg:w="1"/><text x="9.3924%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="9.1424%" y="405" width="0.0809%" height="15" fill="rgb(241,100,24)" fg:x="113" fg:w="1"/><text x="9.3924%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="9.1424%" y="389" width="0.0809%" height="15" fill="rgb(233,4,35)" fg:x="113" fg:w="1"/><text x="9.3924%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="9.1424%" y="373" width="0.0809%" height="15" fill="rgb(211,164,46)" fg:x="113" fg:w="1"/><text x="9.3924%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="9.1424%" y="357" width="0.0809%" height="15" fill="rgb(242,99,53)" fg:x="113" fg:w="1"/><text x="9.3924%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="9.1424%" y="341" width="0.0809%" height="15" fill="rgb(243,45,33)" fg:x="113" fg:w="1"/><text x="9.3924%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="9.1424%" y="325" width="0.0809%" height="15" fill="rgb(217,55,21)" fg:x="113" fg:w="1"/><text x="9.3924%" y="335.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="8.9806%" y="613" width="0.3236%" height="15" fill="rgb(245,145,46)" fg:x="111" fg:w="4"/><text x="9.2306%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="8.9806%" y="597" width="0.3236%" height="15" fill="rgb(215,112,45)" fg:x="111" fg:w="4"/><text x="9.2306%" y="607.50"></text></g><g><title>plugins_core::build::QuickThing::make (4 samples, 0.32%)</title><rect x="8.9806%" y="581" width="0.3236%" height="15" fill="rgb(228,104,16)" fg:x="111" fg:w="4"/><text x="9.2306%" y="591.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="9.2233%" y="565" width="0.0809%" height="15" fill="rgb(239,186,38)" fg:x="114" fg:w="1"/><text x="9.4733%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.2233%" y="549" width="0.0809%" height="15" fill="rgb(228,38,35)" fg:x="114" fg:w="1"/><text x="9.4733%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.2233%" y="533" width="0.0809%" height="15" fill="rgb(251,42,40)" fg:x="114" fg:w="1"/><text x="9.4733%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.2233%" y="517" width="0.0809%" height="15" fill="rgb(210,51,19)" fg:x="114" fg:w="1"/><text x="9.4733%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="9.2233%" y="501" width="0.0809%" height="15" fill="rgb(236,94,42)" fg:x="114" fg:w="1"/><text x="9.4733%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="9.2233%" y="485" width="0.0809%" height="15" fill="rgb(239,167,16)" fg:x="114" fg:w="1"/><text x="9.4733%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="9.2233%" y="469" width="0.0809%" height="15" fill="rgb(252,175,31)" fg:x="114" fg:w="1"/><text x="9.4733%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="9.2233%" y="453" width="0.0809%" height="15" fill="rgb(206,166,30)" fg:x="114" fg:w="1"/><text x="9.4733%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="9.2233%" y="437" width="0.0809%" height="15" fill="rgb(206,209,37)" fg:x="114" fg:w="1"/><text x="9.4733%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="9.3042%" y="613" width="0.0809%" height="15" fill="rgb(226,91,4)" fg:x="115" fg:w="1"/><text x="9.5542%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.3042%" y="597" width="0.0809%" height="15" fill="rgb(222,167,0)" fg:x="115" fg:w="1"/><text x="9.5542%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="9.3851%" y="581" width="0.0809%" height="15" fill="rgb(211,70,14)" fg:x="116" fg:w="1"/><text x="9.6351%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.3851%" y="565" width="0.0809%" height="15" fill="rgb(214,84,42)" fg:x="116" fg:w="1"/><text x="9.6351%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.3851%" y="549" width="0.0809%" height="15" fill="rgb(235,157,37)" fg:x="116" fg:w="1"/><text x="9.6351%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.3851%" y="533" width="0.0809%" height="15" fill="rgb(225,13,6)" fg:x="116" fg:w="1"/><text x="9.6351%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.4660%" y="565" width="0.0809%" height="15" fill="rgb(205,202,1)" fg:x="117" fg:w="1"/><text x="9.7160%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="9.4660%" y="581" width="0.1618%" height="15" fill="rgb(232,195,26)" fg:x="117" fg:w="2"/><text x="9.7160%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.5469%" y="565" width="0.0809%" height="15" fill="rgb(208,102,26)" fg:x="118" fg:w="1"/><text x="9.7969%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.5469%" y="549" width="0.0809%" height="15" fill="rgb(215,41,39)" fg:x="118" fg:w="1"/><text x="9.7969%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="9.6278%" y="581" width="0.0809%" height="15" fill="rgb(247,139,11)" fg:x="119" fg:w="1"/><text x="9.8778%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="9.6278%" y="565" width="0.0809%" height="15" fill="rgb(243,99,6)" fg:x="119" fg:w="1"/><text x="9.8778%" y="575.50"></text></g><g><title>engine::session::Session::save_entity (1 samples, 0.08%)</title><rect x="9.6278%" y="549" width="0.0809%" height="15" fill="rgb(230,168,48)" fg:x="119" fg:w="1"/><text x="9.8778%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.6278%" y="533" width="0.0809%" height="15" fill="rgb(238,227,13)" fg:x="119" fg:w="1"/><text x="9.8778%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="9.7087%" y="565" width="0.0809%" height="15" fill="rgb(209,109,13)" fg:x="120" fg:w="1"/><text x="9.9587%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="9.7087%" y="549" width="0.0809%" height="15" fill="rgb(228,195,1)" fg:x="120" fg:w="1"/><text x="9.9587%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.08%)</title><rect x="9.7087%" y="533" width="0.0809%" height="15" fill="rgb(230,218,0)" fg:x="120" fg:w="1"/><text x="9.9587%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.7896%" y="501" width="0.0809%" height="15" fill="rgb(206,1,45)" fg:x="121" fg:w="1"/><text x="10.0396%" y="511.50"></text></g><g><title>engine::identifiers::model::set_gid (3 samples, 0.24%)</title><rect x="9.7087%" y="581" width="0.2427%" height="15" fill="rgb(209,124,26)" fg:x="120" fg:w="3"/><text x="9.9587%" y="591.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="9.7896%" y="565" width="0.1618%" height="15" fill="rgb(220,59,8)" fg:x="121" fg:w="2"/><text x="10.0396%" y="575.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="9.7896%" y="549" width="0.1618%" height="15" fill="rgb(251,41,37)" fg:x="121" fg:w="2"/><text x="10.0396%" y="559.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (2 samples, 0.16%)</title><rect x="9.7896%" y="533" width="0.1618%" height="15" fill="rgb(239,152,21)" fg:x="121" fg:w="2"/><text x="10.0396%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="9.7896%" y="517" width="0.1618%" height="15" fill="rgb(226,32,1)" fg:x="121" fg:w="2"/><text x="10.0396%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.8706%" y="501" width="0.0809%" height="15" fill="rgb(230,154,36)" fg:x="122" fg:w="1"/><text x="10.1206%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.8706%" y="485" width="0.0809%" height="15" fill="rgb(208,228,43)" fg:x="122" fg:w="1"/><text x="10.1206%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="10.0324%" y="517" width="0.3236%" height="15" fill="rgb(214,203,3)" fg:x="124" fg:w="4"/><text x="10.2824%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.1133%" y="501" width="0.2427%" height="15" fill="rgb(207,149,29)" fg:x="125" fg:w="3"/><text x="10.3633%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.1942%" y="485" width="0.1618%" height="15" fill="rgb(250,105,7)" fg:x="126" fg:w="2"/><text x="10.4442%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="10.1942%" y="469" width="0.1618%" height="15" fill="rgb(232,222,16)" fg:x="126" fg:w="2"/><text x="10.4442%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="10.1942%" y="453" width="0.1618%" height="15" fill="rgb(209,32,24)" fg:x="126" fg:w="2"/><text x="10.4442%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="10.2751%" y="437" width="0.0809%" height="15" fill="rgb(225,13,6)" fg:x="127" fg:w="1"/><text x="10.5251%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="10.2751%" y="421" width="0.0809%" height="15" fill="rgb(245,226,26)" fg:x="127" fg:w="1"/><text x="10.5251%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="10.0324%" y="533" width="0.4045%" height="15" fill="rgb(229,178,27)" fg:x="124" fg:w="5"/><text x="10.2824%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.3560%" y="517" width="0.0809%" height="15" fill="rgb(205,227,28)" fg:x="128" fg:w="1"/><text x="10.6060%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.3560%" y="501" width="0.0809%" height="15" fill="rgb(210,191,45)" fg:x="128" fg:w="1"/><text x="10.6060%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.4369%" y="517" width="0.0809%" height="15" fill="rgb(206,124,16)" fg:x="129" fg:w="1"/><text x="10.6869%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="10.5178%" y="517" width="0.2427%" height="15" fill="rgb(210,162,0)" fg:x="130" fg:w="3"/><text x="10.7678%" y="527.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.5178%" y="501" width="0.2427%" height="15" fill="rgb(211,54,38)" fg:x="130" fg:w="3"/><text x="10.7678%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.5987%" y="485" width="0.1618%" height="15" fill="rgb(248,192,3)" fg:x="131" fg:w="2"/><text x="10.8487%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="10.5987%" y="469" width="0.1618%" height="15" fill="rgb(233,187,18)" fg:x="131" fg:w="2"/><text x="10.8487%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.8414%" y="485" width="0.0809%" height="15" fill="rgb(237,208,14)" fg:x="134" fg:w="1"/><text x="11.0914%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="11.0032%" y="469" width="0.4045%" height="15" fill="rgb(212,77,1)" fg:x="136" fg:w="5"/><text x="11.2532%" y="479.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="11.1650%" y="453" width="0.2427%" height="15" fill="rgb(210,163,22)" fg:x="138" fg:w="3"/><text x="11.4150%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="11.1650%" y="437" width="0.2427%" height="15" fill="rgb(250,58,28)" fg:x="138" fg:w="3"/><text x="11.4150%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="11.2460%" y="421" width="0.1618%" height="15" fill="rgb(254,28,41)" fg:x="139" fg:w="2"/><text x="11.4960%" y="431.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="10.7605%" y="501" width="0.7282%" height="15" fill="rgb(237,162,36)" fg:x="133" fg:w="9"/><text x="11.0105%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="10.9223%" y="485" width="0.5663%" height="15" fill="rgb(232,56,6)" fg:x="135" fg:w="7"/><text x="11.1723%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="11.4078%" y="469" width="0.0809%" height="15" fill="rgb(216,127,42)" fg:x="141" fg:w="1"/><text x="11.6578%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="10.7605%" y="517" width="0.8900%" height="15" fill="rgb(241,69,15)" fg:x="133" fg:w="11"/><text x="11.0105%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="11.4887%" y="501" width="0.1618%" height="15" fill="rgb(227,180,19)" fg:x="142" fg:w="2"/><text x="11.7387%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="11.4887%" y="485" width="0.1618%" height="15" fill="rgb(231,188,29)" fg:x="142" fg:w="2"/><text x="11.7387%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="11.4887%" y="469" width="0.1618%" height="15" fill="rgb(224,176,27)" fg:x="142" fg:w="2"/><text x="11.7387%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (23 samples, 1.86%)</title><rect x="10.0324%" y="549" width="1.8608%" height="15" fill="rgb(249,214,19)" fg:x="124" fg:w="23"/><text x="10.2824%" y="559.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.46%)</title><rect x="10.4369%" y="533" width="1.4563%" height="15" fill="rgb(240,0,4)" fg:x="129" fg:w="18"/><text x="10.6869%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="11.6505%" y="517" width="0.2427%" height="15" fill="rgb(233,28,41)" fg:x="144" fg:w="3"/><text x="11.9005%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="11.6505%" y="501" width="0.2427%" height="15" fill="rgb(220,90,51)" fg:x="144" fg:w="3"/><text x="11.9005%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="11.6505%" y="485" width="0.2427%" height="15" fill="rgb(250,52,22)" fg:x="144" fg:w="3"/><text x="11.9005%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.8123%" y="469" width="0.0809%" height="15" fill="rgb(231,152,36)" fg:x="146" fg:w="1"/><text x="12.0623%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="11.8123%" y="453" width="0.0809%" height="15" fill="rgb(250,218,4)" fg:x="146" fg:w="1"/><text x="12.0623%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="11.8123%" y="437" width="0.0809%" height="15" fill="rgb(210,38,21)" fg:x="146" fg:w="1"/><text x="12.0623%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.8932%" y="501" width="0.0809%" height="15" fill="rgb(230,75,13)" fg:x="147" fg:w="1"/><text x="12.1432%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.8932%" y="485" width="0.0809%" height="15" fill="rgb(250,68,53)" fg:x="147" fg:w="1"/><text x="12.1432%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.0550%" y="485" width="0.0809%" height="15" fill="rgb(250,210,16)" fg:x="149" fg:w="1"/><text x="12.3050%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="11.8932%" y="549" width="0.4045%" height="15" fill="rgb(240,132,5)" fg:x="147" fg:w="5"/><text x="12.1432%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="11.8932%" y="533" width="0.4045%" height="15" fill="rgb(222,148,48)" fg:x="147" fg:w="5"/><text x="12.1432%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="11.8932%" y="517" width="0.4045%" height="15" fill="rgb(247,181,24)" fg:x="147" fg:w="5"/><text x="12.1432%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="11.9741%" y="501" width="0.3236%" height="15" fill="rgb(239,5,31)" fg:x="148" fg:w="4"/><text x="12.2241%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="12.1359%" y="485" width="0.1618%" height="15" fill="rgb(241,152,38)" fg:x="150" fg:w="2"/><text x="12.3859%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="12.1359%" y="469" width="0.1618%" height="15" fill="rgb(246,200,37)" fg:x="150" fg:w="2"/><text x="12.3859%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="12.2977%" y="501" width="0.3236%" height="15" fill="rgb(243,210,26)" fg:x="152" fg:w="4"/><text x="12.5477%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="12.3786%" y="485" width="0.2427%" height="15" fill="rgb(222,22,22)" fg:x="153" fg:w="3"/><text x="12.6286%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="12.5405%" y="469" width="0.0809%" height="15" fill="rgb(208,129,28)" fg:x="155" fg:w="1"/><text x="12.7905%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="12.6214%" y="501" width="0.0809%" height="15" fill="rgb(254,169,28)" fg:x="156" fg:w="1"/><text x="12.8714%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7023%" y="469" width="0.0809%" height="15" fill="rgb(225,45,17)" fg:x="157" fg:w="1"/><text x="12.9523%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="12.7023%" y="501" width="0.1618%" height="15" fill="rgb(232,199,2)" fg:x="157" fg:w="2"/><text x="12.9523%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.7023%" y="485" width="0.1618%" height="15" fill="rgb(235,33,40)" fg:x="157" fg:w="2"/><text x="12.9523%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7832%" y="469" width="0.0809%" height="15" fill="rgb(237,89,50)" fg:x="158" fg:w="1"/><text x="13.0332%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7832%" y="453" width="0.0809%" height="15" fill="rgb(238,126,5)" fg:x="158" fg:w="1"/><text x="13.0332%" y="463.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="12.7832%" y="437" width="0.0809%" height="15" fill="rgb(247,214,42)" fg:x="158" fg:w="1"/><text x="13.0332%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="13.0259%" y="485" width="0.0809%" height="15" fill="rgb(238,60,45)" fg:x="161" fg:w="1"/><text x="13.2759%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (5 samples, 0.40%)</title><rect x="12.8641%" y="501" width="0.4045%" height="15" fill="rgb(225,69,44)" fg:x="159" fg:w="5"/><text x="13.1141%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.1068%" y="485" width="0.1618%" height="15" fill="rgb(241,13,44)" fg:x="162" fg:w="2"/><text x="13.3568%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1877%" y="469" width="0.0809%" height="15" fill="rgb(227,121,22)" fg:x="163" fg:w="1"/><text x="13.4377%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="13.2686%" y="453" width="0.1618%" height="15" fill="rgb(231,160,23)" fg:x="164" fg:w="2"/><text x="13.5186%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="13.2686%" y="437" width="0.1618%" height="15" fill="rgb(250,179,43)" fg:x="164" fg:w="2"/><text x="13.5186%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="13.2686%" y="421" width="0.1618%" height="15" fill="rgb(233,54,46)" fg:x="164" fg:w="2"/><text x="13.5186%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="13.4304%" y="437" width="0.2427%" height="15" fill="rgb(247,120,42)" fg:x="166" fg:w="3"/><text x="13.6804%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (7 samples, 0.57%)</title><rect x="13.2686%" y="501" width="0.5663%" height="15" fill="rgb(221,219,12)" fg:x="164" fg:w="7"/><text x="13.5186%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.57%)</title><rect x="13.2686%" y="485" width="0.5663%" height="15" fill="rgb(211,126,8)" fg:x="164" fg:w="7"/><text x="13.5186%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.57%)</title><rect x="13.2686%" y="469" width="0.5663%" height="15" fill="rgb(218,154,33)" fg:x="164" fg:w="7"/><text x="13.5186%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (5 samples, 0.40%)</title><rect x="13.4304%" y="453" width="0.4045%" height="15" fill="rgb(212,199,16)" fg:x="166" fg:w="5"/><text x="13.6804%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (2 samples, 0.16%)</title><rect x="13.6731%" y="437" width="0.1618%" height="15" fill="rgb(236,215,46)" fg:x="169" fg:w="2"/><text x="13.9231%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="13.8350%" y="421" width="0.0809%" height="15" fill="rgb(232,32,22)" fg:x="171" fg:w="1"/><text x="14.0850%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.8350%" y="405" width="0.0809%" height="15" fill="rgb(234,79,15)" fg:x="171" fg:w="1"/><text x="14.0850%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="13.8350%" y="453" width="0.1618%" height="15" fill="rgb(235,187,47)" fg:x="171" fg:w="2"/><text x="14.0850%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="13.8350%" y="437" width="0.1618%" height="15" fill="rgb(244,69,37)" fg:x="171" fg:w="2"/><text x="14.0850%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9159%" y="421" width="0.0809%" height="15" fill="rgb(249,140,25)" fg:x="172" fg:w="1"/><text x="14.1659%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="13.8350%" y="469" width="0.2427%" height="15" fill="rgb(213,69,8)" fg:x="171" fg:w="3"/><text x="14.0850%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="13.9968%" y="453" width="0.0809%" height="15" fill="rgb(220,136,2)" fg:x="173" fg:w="1"/><text x="14.2468%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="13.9968%" y="437" width="0.0809%" height="15" fill="rgb(237,50,36)" fg:x="173" fg:w="1"/><text x="14.2468%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.9968%" y="421" width="0.0809%" height="15" fill="rgb(226,18,11)" fg:x="173" fg:w="1"/><text x="14.2468%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (23 samples, 1.86%)</title><rect x="12.2977%" y="533" width="1.8608%" height="15" fill="rgb(243,156,2)" fg:x="152" fg:w="23"/><text x="12.5477%" y="543.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (23 samples, 1.86%)</title><rect x="12.2977%" y="517" width="1.8608%" height="15" fill="rgb(218,8,34)" fg:x="152" fg:w="23"/><text x="12.5477%" y="527.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="13.8350%" y="501" width="0.3236%" height="15" fill="rgb(250,94,35)" fg:x="171" fg:w="4"/><text x="14.0850%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (4 samples, 0.32%)</title><rect x="13.8350%" y="485" width="0.3236%" height="15" fill="rgb(229,127,21)" fg:x="171" fg:w="4"/><text x="14.0850%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="14.0777%" y="469" width="0.0809%" height="15" fill="rgb(234,49,5)" fg:x="174" fg:w="1"/><text x="14.3277%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0777%" y="453" width="0.0809%" height="15" fill="rgb(248,12,16)" fg:x="174" fg:w="1"/><text x="14.3277%" y="463.50"></text></g><g><title>kernel::compare::any_entity_changes (24 samples, 1.94%)</title><rect x="12.2977%" y="549" width="1.9417%" height="15" fill="rgb(208,220,31)" fg:x="152" fg:w="24"/><text x="12.5477%" y="559.50">k..</text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="14.1586%" y="533" width="0.0809%" height="15" fill="rgb(243,184,0)" fg:x="175" fg:w="1"/><text x="14.4086%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="14.1586%" y="517" width="0.0809%" height="15" fill="rgb(217,38,21)" fg:x="175" fg:w="1"/><text x="14.4086%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.1586%" y="501" width="0.0809%" height="15" fill="rgb(239,120,45)" fg:x="175" fg:w="1"/><text x="14.4086%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.1586%" y="485" width="0.0809%" height="15" fill="rgb(235,33,2)" fg:x="175" fg:w="1"/><text x="14.4086%" y="495.50"></text></g><g><title>engine::session::Session::flush (61 samples, 4.94%)</title><rect x="9.3851%" y="613" width="4.9353%" height="15" fill="rgb(249,161,5)" fg:x="116" fg:w="61"/><text x="9.6351%" y="623.50">engine..</text></g><g><title>engine::session::Session::save_entity_changes (61 samples, 4.94%)</title><rect x="9.3851%" y="597" width="4.9353%" height="15" fill="rgb(250,165,48)" fg:x="116" fg:w="61"/><text x="9.6351%" y="607.50">engine..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (54 samples, 4.37%)</title><rect x="9.9515%" y="581" width="4.3689%" height="15" fill="rgb(221,23,45)" fg:x="123" fg:w="54"/><text x="10.2015%" y="591.50">engin..</text></g><g><title>engine::session::Session::check_for_changes (53 samples, 4.29%)</title><rect x="10.0324%" y="565" width="4.2880%" height="15" fill="rgb(217,108,46)" fg:x="124" fg:w="53"/><text x="10.2824%" y="575.50">engin..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="14.2395%" y="549" width="0.0809%" height="15" fill="rgb(254,26,35)" fg:x="176" fg:w="1"/><text x="14.4895%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.2395%" y="533" width="0.0809%" height="15" fill="rgb(218,223,28)" fg:x="176" fg:w="1"/><text x="14.4895%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.2395%" y="517" width="0.0809%" height="15" fill="rgb(242,27,47)" fg:x="176" fg:w="1"/><text x="14.4895%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="14.2395%" y="501" width="0.0809%" height="15" fill="rgb(218,39,35)" fg:x="176" fg:w="1"/><text x="14.4895%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3204%" y="565" width="0.0809%" height="15" fill="rgb(232,127,16)" fg:x="177" fg:w="1"/><text x="14.5704%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.4822%" y="533" width="0.0809%" height="15" fill="rgb(231,219,51)" fg:x="179" fg:w="1"/><text x="14.7322%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="14.4822%" y="517" width="0.0809%" height="15" fill="rgb(217,220,46)" fg:x="179" fg:w="1"/><text x="14.7322%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.81%)</title><rect x="14.3204%" y="597" width="0.8091%" height="15" fill="rgb(230,75,1)" fg:x="177" fg:w="10"/><text x="14.5704%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (10 samples, 0.81%)</title><rect x="14.3204%" y="581" width="0.8091%" height="15" fill="rgb(218,2,8)" fg:x="177" fg:w="10"/><text x="14.5704%" y="591.50"></text></g><g><title>engine::internal::EntityMap::add_entity (9 samples, 0.73%)</title><rect x="14.4013%" y="565" width="0.7282%" height="15" fill="rgb(206,111,30)" fg:x="178" fg:w="9"/><text x="14.6513%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.73%)</title><rect x="14.4013%" y="549" width="0.7282%" height="15" fill="rgb(209,135,6)" fg:x="178" fg:w="9"/><text x="14.6513%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.57%)</title><rect x="14.5631%" y="533" width="0.5663%" height="15" fill="rgb(205,169,10)" fg:x="180" fg:w="7"/><text x="14.8131%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.57%)</title><rect x="14.5631%" y="517" width="0.5663%" height="15" fill="rgb(212,204,38)" fg:x="180" fg:w="7"/><text x="14.8131%" y="527.50"></text></g><g><title>__libc_malloc (7 samples, 0.57%)</title><rect x="14.5631%" y="501" width="0.5663%" height="15" fill="rgb(205,199,14)" fg:x="180" fg:w="7"/><text x="14.8131%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (11 samples, 0.89%)</title><rect x="14.3204%" y="613" width="0.8900%" height="15" fill="rgb(212,4,6)" fg:x="177" fg:w="11"/><text x="14.5704%" y="623.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="15.1294%" y="597" width="0.0809%" height="15" fill="rgb(250,15,10)" fg:x="187" fg:w="1"/><text x="15.3794%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="15.1294%" y="581" width="0.0809%" height="15" fill="rgb(212,49,51)" fg:x="187" fg:w="1"/><text x="15.3794%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="15.1294%" y="565" width="0.0809%" height="15" fill="rgb(235,21,9)" fg:x="187" fg:w="1"/><text x="15.3794%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.1294%" y="549" width="0.0809%" height="15" fill="rgb(251,31,32)" fg:x="187" fg:w="1"/><text x="15.3794%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="15.1294%" y="533" width="0.0809%" height="15" fill="rgb(246,23,9)" fg:x="187" fg:w="1"/><text x="15.3794%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="15.2104%" y="581" width="0.0809%" height="15" fill="rgb(225,216,14)" fg:x="188" fg:w="1"/><text x="15.4604%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="15.2104%" y="565" width="0.0809%" height="15" fill="rgb(215,200,26)" fg:x="188" fg:w="1"/><text x="15.4604%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2104%" y="549" width="0.0809%" height="15" fill="rgb(237,130,47)" fg:x="188" fg:w="1"/><text x="15.4604%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.2104%" y="533" width="0.0809%" height="15" fill="rgb(247,74,14)" fg:x="188" fg:w="1"/><text x="15.4604%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.2104%" y="517" width="0.0809%" height="15" fill="rgb(254,97,46)" fg:x="188" fg:w="1"/><text x="15.4604%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.2104%" y="501" width="0.0809%" height="15" fill="rgb(234,191,1)" fg:x="188" fg:w="1"/><text x="15.4604%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.2104%" y="485" width="0.0809%" height="15" fill="rgb(215,165,14)" fg:x="188" fg:w="1"/><text x="15.4604%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="15.2104%" y="469" width="0.0809%" height="15" fill="rgb(230,182,6)" fg:x="188" fg:w="1"/><text x="15.4604%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="15.2104%" y="453" width="0.0809%" height="15" fill="rgb(210,127,39)" fg:x="188" fg:w="1"/><text x="15.4604%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="15.2104%" y="613" width="0.2427%" height="15" fill="rgb(223,212,51)" fg:x="188" fg:w="3"/><text x="15.4604%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="15.2104%" y="597" width="0.2427%" height="15" fill="rgb(226,176,43)" fg:x="188" fg:w="3"/><text x="15.4604%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="15.2913%" y="581" width="0.1618%" height="15" fill="rgb(222,155,4)" fg:x="189" fg:w="2"/><text x="15.5413%" y="591.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="15.2913%" y="565" width="0.1618%" height="15" fill="rgb(215,149,7)" fg:x="189" fg:w="2"/><text x="15.5413%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (1 samples, 0.08%)</title><rect x="15.3722%" y="549" width="0.0809%" height="15" fill="rgb(252,199,23)" fg:x="190" fg:w="1"/><text x="15.6222%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.3722%" y="533" width="0.0809%" height="15" fill="rgb(245,52,29)" fg:x="190" fg:w="1"/><text x="15.6222%" y="543.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="15.4531%" y="613" width="0.0809%" height="15" fill="rgb(221,228,19)" fg:x="191" fg:w="1"/><text x="15.7031%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="15.4531%" y="597" width="0.0809%" height="15" fill="rgb(253,101,6)" fg:x="191" fg:w="1"/><text x="15.7031%" y="607.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="15.4531%" y="581" width="0.0809%" height="15" fill="rgb(211,130,8)" fg:x="191" fg:w="1"/><text x="15.7031%" y="591.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="15.5340%" y="613" width="0.0809%" height="15" fill="rgb(238,37,53)" fg:x="192" fg:w="1"/><text x="15.7840%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="15.5340%" y="597" width="0.0809%" height="15" fill="rgb(235,145,5)" fg:x="192" fg:w="1"/><text x="15.7840%" y="607.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="15.5340%" y="581" width="0.0809%" height="15" fill="rgb(244,12,43)" fg:x="192" fg:w="1"/><text x="15.7840%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="15.5340%" y="565" width="0.0809%" height="15" fill="rgb(246,195,24)" fg:x="192" fg:w="1"/><text x="15.7840%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="15.5340%" y="549" width="0.0809%" height="15" fill="rgb(235,163,6)" fg:x="192" fg:w="1"/><text x="15.7840%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="15.6958%" y="549" width="0.0809%" height="15" fill="rgb(236,218,17)" fg:x="194" fg:w="1"/><text x="15.9458%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.6958%" y="533" width="0.0809%" height="15" fill="rgb(235,12,38)" fg:x="194" fg:w="1"/><text x="15.9458%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="15.6958%" y="517" width="0.0809%" height="15" fill="rgb(225,195,33)" fg:x="194" fg:w="1"/><text x="15.9458%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="15.6958%" y="501" width="0.0809%" height="15" fill="rgb(238,54,35)" fg:x="194" fg:w="1"/><text x="15.9458%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="15.6958%" y="485" width="0.0809%" height="15" fill="rgb(238,33,7)" fg:x="194" fg:w="1"/><text x="15.9458%" y="495.50"></text></g><g><title>plugins_core::build::Build::occupying (3 samples, 0.24%)</title><rect x="15.6149%" y="613" width="0.2427%" height="15" fill="rgb(245,5,14)" fg:x="193" fg:w="3"/><text x="15.8649%" y="623.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.24%)</title><rect x="15.6149%" y="597" width="0.2427%" height="15" fill="rgb(251,95,31)" fg:x="193" fg:w="3"/><text x="15.8649%" y="607.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="15.6149%" y="581" width="0.2427%" height="15" fill="rgb(222,15,46)" fg:x="193" fg:w="3"/><text x="15.8649%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.24%)</title><rect x="15.6149%" y="565" width="0.2427%" height="15" fill="rgb(226,182,24)" fg:x="193" fg:w="3"/><text x="15.8649%" y="575.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7767%" y="549" width="0.0809%" height="15" fill="rgb(229,105,41)" fg:x="195" fg:w="1"/><text x="16.0267%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.7767%" y="533" width="0.0809%" height="15" fill="rgb(216,99,53)" fg:x="195" fg:w="1"/><text x="16.0267%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7767%" y="517" width="0.0809%" height="15" fill="rgb(253,26,20)" fg:x="195" fg:w="1"/><text x="16.0267%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.7767%" y="501" width="0.0809%" height="15" fill="rgb(249,155,28)" fg:x="195" fg:w="1"/><text x="16.0267%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.7767%" y="485" width="0.0809%" height="15" fill="rgb(241,221,2)" fg:x="195" fg:w="1"/><text x="16.0267%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="15.8576%" y="597" width="0.1618%" height="15" fill="rgb(219,124,6)" fg:x="196" fg:w="2"/><text x="16.1076%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="15.8576%" y="581" width="0.1618%" height="15" fill="rgb(233,37,6)" fg:x="196" fg:w="2"/><text x="16.1076%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="15.9385%" y="565" width="0.0809%" height="15" fill="rgb(238,20,14)" fg:x="197" fg:w="1"/><text x="16.1885%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="15.9385%" y="549" width="0.0809%" height="15" fill="rgb(232,106,27)" fg:x="197" fg:w="1"/><text x="16.1885%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="15.9385%" y="533" width="0.0809%" height="15" fill="rgb(246,157,24)" fg:x="197" fg:w="1"/><text x="16.1885%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.9385%" y="517" width="0.0809%" height="15" fill="rgb(214,153,10)" fg:x="197" fg:w="1"/><text x="16.1885%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.9385%" y="501" width="0.0809%" height="15" fill="rgb(212,94,6)" fg:x="197" fg:w="1"/><text x="16.1885%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="15.9385%" y="485" width="0.0809%" height="15" fill="rgb(254,25,27)" fg:x="197" fg:w="1"/><text x="16.1885%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.9385%" y="469" width="0.0809%" height="15" fill="rgb(250,43,52)" fg:x="197" fg:w="1"/><text x="16.1885%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.9385%" y="453" width="0.0809%" height="15" fill="rgb(221,226,40)" fg:x="197" fg:w="1"/><text x="16.1885%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.9385%" y="437" width="0.0809%" height="15" fill="rgb(235,162,34)" fg:x="197" fg:w="1"/><text x="16.1885%" y="447.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="15.9385%" y="421" width="0.0809%" height="15" fill="rgb(239,24,26)" fg:x="197" fg:w="1"/><text x="16.1885%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.9385%" y="405" width="0.0809%" height="15" fill="rgb(244,226,11)" fg:x="197" fg:w="1"/><text x="16.1885%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.9385%" y="389" width="0.0809%" height="15" fill="rgb(225,23,10)" fg:x="197" fg:w="1"/><text x="16.1885%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.9385%" y="373" width="0.0809%" height="15" fill="rgb(249,125,6)" fg:x="197" fg:w="1"/><text x="16.1885%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="15.9385%" y="357" width="0.0809%" height="15" fill="rgb(246,212,12)" fg:x="197" fg:w="1"/><text x="16.1885%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="16.0194%" y="581" width="0.0809%" height="15" fill="rgb(230,43,32)" fg:x="198" fg:w="1"/><text x="16.2694%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="16.0194%" y="565" width="0.0809%" height="15" fill="rgb(210,95,23)" fg:x="198" fg:w="1"/><text x="16.2694%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="16.0194%" y="549" width="0.0809%" height="15" fill="rgb(229,103,33)" fg:x="198" fg:w="1"/><text x="16.2694%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="16.1003%" y="581" width="0.0809%" height="15" fill="rgb(222,104,27)" fg:x="199" fg:w="1"/><text x="16.3503%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="16.1003%" y="565" width="0.0809%" height="15" fill="rgb(239,221,23)" fg:x="199" fg:w="1"/><text x="16.3503%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="16.1812%" y="533" width="0.0809%" height="15" fill="rgb(222,98,21)" fg:x="200" fg:w="1"/><text x="16.4312%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (94 samples, 7.61%)</title><rect x="8.7379%" y="629" width="7.6052%" height="15" fill="rgb(231,101,20)" fg:x="108" fg:w="94"/><text x="8.9879%" y="639.50">plugins_co..</text></g><g><title>plugins_core::build::Build::with_username (6 samples, 0.49%)</title><rect x="15.8576%" y="613" width="0.4854%" height="15" fill="rgb(215,150,22)" fg:x="196" fg:w="6"/><text x="16.1076%" y="623.50"></text></g><g><title>engine::users::model::add_username_to_key (4 samples, 0.32%)</title><rect x="16.0194%" y="597" width="0.3236%" height="15" fill="rgb(248,3,34)" fg:x="198" fg:w="4"/><text x="16.2694%" y="607.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="16.1812%" y="581" width="0.1618%" height="15" fill="rgb(220,141,21)" fg:x="200" fg:w="2"/><text x="16.4312%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="16.1812%" y="565" width="0.1618%" height="15" fill="rgb(223,41,48)" fg:x="200" fg:w="2"/><text x="16.4312%" y="575.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (2 samples, 0.16%)</title><rect x="16.1812%" y="549" width="0.1618%" height="15" fill="rgb(247,12,5)" fg:x="200" fg:w="2"/><text x="16.4312%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.2621%" y="533" width="0.0809%" height="15" fill="rgb(206,173,10)" fg:x="201" fg:w="1"/><text x="16.5121%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.2621%" y="517" width="0.0809%" height="15" fill="rgb(233,214,37)" fg:x="201" fg:w="1"/><text x="16.5121%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="16.3430%" y="597" width="0.0809%" height="15" fill="rgb(238,86,43)" fg:x="202" fg:w="1"/><text x="16.5930%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="16.3430%" y="581" width="0.0809%" height="15" fill="rgb(212,182,8)" fg:x="202" fg:w="1"/><text x="16.5930%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="16.3430%" y="565" width="0.0809%" height="15" fill="rgb(240,91,47)" fg:x="202" fg:w="1"/><text x="16.5930%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="16.3430%" y="549" width="0.0809%" height="15" fill="rgb(209,138,26)" fg:x="202" fg:w="1"/><text x="16.5930%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="16.3430%" y="533" width="0.0809%" height="15" fill="rgb(231,163,20)" fg:x="202" fg:w="1"/><text x="16.5930%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.3430%" y="517" width="0.0809%" height="15" fill="rgb(214,91,54)" fg:x="202" fg:w="1"/><text x="16.5930%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.3430%" y="501" width="0.0809%" height="15" fill="rgb(230,32,17)" fg:x="202" fg:w="1"/><text x="16.5930%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="16.3430%" y="485" width="0.0809%" height="15" fill="rgb(231,34,34)" fg:x="202" fg:w="1"/><text x="16.5930%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="16.3430%" y="469" width="0.0809%" height="15" fill="rgb(224,228,27)" fg:x="202" fg:w="1"/><text x="16.5930%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="16.3430%" y="453" width="0.0809%" height="15" fill="rgb(219,35,40)" fg:x="202" fg:w="1"/><text x="16.5930%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.3430%" y="437" width="0.0809%" height="15" fill="rgb(234,42,8)" fg:x="202" fg:w="1"/><text x="16.5930%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.3430%" y="421" width="0.0809%" height="15" fill="rgb(226,75,22)" fg:x="202" fg:w="1"/><text x="16.5930%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="16.3430%" y="405" width="0.0809%" height="15" fill="rgb(242,203,28)" fg:x="202" fg:w="1"/><text x="16.5930%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="16.3430%" y="389" width="0.0809%" height="15" fill="rgb(221,3,9)" fg:x="202" fg:w="1"/><text x="16.5930%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="16.3430%" y="373" width="0.0809%" height="15" fill="rgb(214,34,31)" fg:x="202" fg:w="1"/><text x="16.5930%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="16.3430%" y="357" width="0.0809%" height="15" fill="rgb(252,119,15)" fg:x="202" fg:w="1"/><text x="16.5930%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="16.3430%" y="341" width="0.0809%" height="15" fill="rgb(244,224,31)" fg:x="202" fg:w="1"/><text x="16.5930%" y="351.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="16.4239%" y="581" width="0.0809%" height="15" fill="rgb(215,8,51)" fg:x="203" fg:w="1"/><text x="16.6739%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.4239%" y="565" width="0.0809%" height="15" fill="rgb(207,24,1)" fg:x="203" fg:w="1"/><text x="16.6739%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.4239%" y="549" width="0.0809%" height="15" fill="rgb(245,90,0)" fg:x="203" fg:w="1"/><text x="16.6739%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.4239%" y="533" width="0.0809%" height="15" fill="rgb(246,43,48)" fg:x="203" fg:w="1"/><text x="16.6739%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.4239%" y="517" width="0.0809%" height="15" fill="rgb(252,218,10)" fg:x="203" fg:w="1"/><text x="16.6739%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.4239%" y="501" width="0.0809%" height="15" fill="rgb(231,24,35)" fg:x="203" fg:w="1"/><text x="16.6739%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.4239%" y="485" width="0.0809%" height="15" fill="rgb(225,66,19)" fg:x="203" fg:w="1"/><text x="16.6739%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.4239%" y="469" width="0.0809%" height="15" fill="rgb(214,96,51)" fg:x="203" fg:w="1"/><text x="16.6739%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.4239%" y="453" width="0.0809%" height="15" fill="rgb(251,151,47)" fg:x="203" fg:w="1"/><text x="16.6739%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.4239%" y="437" width="0.0809%" height="15" fill="rgb(236,79,14)" fg:x="203" fg:w="1"/><text x="16.6739%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.4239%" y="421" width="0.0809%" height="15" fill="rgb(210,205,11)" fg:x="203" fg:w="1"/><text x="16.6739%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.4239%" y="405" width="0.0809%" height="15" fill="rgb(233,142,53)" fg:x="203" fg:w="1"/><text x="16.6739%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="16.4239%" y="389" width="0.0809%" height="15" fill="rgb(212,116,48)" fg:x="203" fg:w="1"/><text x="16.6739%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="16.4239%" y="373" width="0.0809%" height="15" fill="rgb(234,55,33)" fg:x="203" fg:w="1"/><text x="16.6739%" y="383.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (159 samples, 12.86%)</title><rect x="3.7217%" y="645" width="12.8641%" height="15" fill="rgb(253,92,27)" fg:x="46" fg:w="159"/><text x="3.9717%" y="655.50">&lt;tests::HoldingKeyI..</text></g><g><title>plugins_core::build::BuildSurroundings::make (3 samples, 0.24%)</title><rect x="16.3430%" y="629" width="0.2427%" height="15" fill="rgb(220,7,35)" fg:x="202" fg:w="3"/><text x="16.5930%" y="639.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.24%)</title><rect x="16.3430%" y="613" width="0.2427%" height="15" fill="rgb(246,124,6)" fg:x="202" fg:w="3"/><text x="16.5930%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::set_name (2 samples, 0.16%)</title><rect x="16.4239%" y="597" width="0.1618%" height="15" fill="rgb(212,111,51)" fg:x="203" fg:w="2"/><text x="16.6739%" y="607.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="16.5049%" y="581" width="0.0809%" height="15" fill="rgb(253,116,7)" fg:x="204" fg:w="1"/><text x="16.7549%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5049%" y="565" width="0.0809%" height="15" fill="rgb(213,145,18)" fg:x="204" fg:w="1"/><text x="16.7549%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5049%" y="549" width="0.0809%" height="15" fill="rgb(219,149,7)" fg:x="204" fg:w="1"/><text x="16.7549%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="16.5049%" y="533" width="0.0809%" height="15" fill="rgb(225,156,20)" fg:x="204" fg:w="1"/><text x="16.7549%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5049%" y="517" width="0.0809%" height="15" fill="rgb(211,98,19)" fg:x="204" fg:w="1"/><text x="16.7549%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="16.5858%" y="613" width="0.0809%" height="15" fill="rgb(231,192,31)" fg:x="205" fg:w="1"/><text x="16.8358%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="16.5858%" y="597" width="0.0809%" height="15" fill="rgb(249,95,19)" fg:x="205" fg:w="1"/><text x="16.8358%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.5858%" y="581" width="0.0809%" height="15" fill="rgb(247,101,36)" fg:x="205" fg:w="1"/><text x="16.8358%" y="591.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="16.7476%" y="565" width="0.0809%" height="15" fill="rgb(221,45,43)" fg:x="207" fg:w="1"/><text x="16.9976%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="16.7476%" y="549" width="0.0809%" height="15" fill="rgb(220,42,1)" fg:x="207" fg:w="1"/><text x="16.9976%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="16.7476%" y="533" width="0.0809%" height="15" fill="rgb(236,19,24)" fg:x="207" fg:w="1"/><text x="16.9976%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="16.7476%" y="517" width="0.0809%" height="15" fill="rgb(225,192,6)" fg:x="207" fg:w="1"/><text x="16.9976%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="16.7476%" y="501" width="0.0809%" height="15" fill="rgb(242,30,19)" fg:x="207" fg:w="1"/><text x="16.9976%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="16.8285%" y="533" width="0.1618%" height="15" fill="rgb(240,36,6)" fg:x="208" fg:w="2"/><text x="17.0785%" y="543.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (6 samples, 0.49%)</title><rect x="16.5858%" y="629" width="0.4854%" height="15" fill="rgb(246,40,28)" fg:x="205" fg:w="6"/><text x="16.8358%" y="639.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (5 samples, 0.40%)</title><rect x="16.6667%" y="613" width="0.4045%" height="15" fill="rgb(225,155,33)" fg:x="206" fg:w="5"/><text x="16.9167%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="16.6667%" y="597" width="0.4045%" height="15" fill="rgb(240,65,18)" fg:x="206" fg:w="5"/><text x="16.9167%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="16.6667%" y="581" width="0.4045%" height="15" fill="rgb(217,0,48)" fg:x="206" fg:w="5"/><text x="16.9167%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="16.8285%" y="565" width="0.2427%" height="15" fill="rgb(217,80,15)" fg:x="208" fg:w="3"/><text x="17.0785%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="16.8285%" y="549" width="0.2427%" height="15" fill="rgb(253,43,51)" fg:x="208" fg:w="3"/><text x="17.0785%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="16.9903%" y="533" width="0.0809%" height="15" fill="rgb(246,60,4)" fg:x="210" fg:w="1"/><text x="17.2403%" y="543.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="16.9903%" y="517" width="0.0809%" height="15" fill="rgb(230,40,54)" fg:x="210" fg:w="1"/><text x="17.2403%" y="527.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="16.9903%" y="501" width="0.0809%" height="15" fill="rgb(208,20,44)" fg:x="210" fg:w="1"/><text x="17.2403%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.9903%" y="485" width="0.0809%" height="15" fill="rgb(230,22,22)" fg:x="210" fg:w="1"/><text x="17.2403%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.1521%" y="597" width="0.0809%" height="15" fill="rgb(207,57,4)" fg:x="212" fg:w="1"/><text x="17.4021%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="17.0712%" y="613" width="0.2427%" height="15" fill="rgb(242,130,33)" fg:x="211" fg:w="3"/><text x="17.3212%" y="623.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="17.2330%" y="597" width="0.0809%" height="15" fill="rgb(218,66,43)" fg:x="213" fg:w="1"/><text x="17.4830%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="17.5566%" y="533" width="0.0809%" height="15" fill="rgb(236,105,16)" fg:x="217" fg:w="1"/><text x="17.8066%" y="543.50"></text></g><g><title>engine::identifiers::model::get_gid (5 samples, 0.40%)</title><rect x="17.3139%" y="613" width="0.4045%" height="15" fill="rgb(230,46,15)" fg:x="214" fg:w="5"/><text x="17.5639%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="17.3139%" y="597" width="0.4045%" height="15" fill="rgb(251,172,40)" fg:x="214" fg:w="5"/><text x="17.5639%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="17.3948%" y="581" width="0.3236%" height="15" fill="rgb(225,217,32)" fg:x="215" fg:w="4"/><text x="17.6448%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="17.3948%" y="565" width="0.3236%" height="15" fill="rgb(243,10,29)" fg:x="215" fg:w="4"/><text x="17.6448%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="17.3948%" y="549" width="0.3236%" height="15" fill="rgb(207,102,10)" fg:x="215" fg:w="4"/><text x="17.6448%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.6375%" y="533" width="0.0809%" height="15" fill="rgb(241,125,5)" fg:x="218" fg:w="1"/><text x="17.8875%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.6375%" y="517" width="0.0809%" height="15" fill="rgb(230,125,29)" fg:x="218" fg:w="1"/><text x="17.8875%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.6375%" y="501" width="0.0809%" height="15" fill="rgb(223,65,44)" fg:x="218" fg:w="1"/><text x="17.8875%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.6375%" y="485" width="0.0809%" height="15" fill="rgb(224,188,28)" fg:x="218" fg:w="1"/><text x="17.8875%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="17.7184%" y="597" width="0.0809%" height="15" fill="rgb(254,197,27)" fg:x="219" fg:w="1"/><text x="17.9684%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.7184%" y="581" width="0.0809%" height="15" fill="rgb(220,200,25)" fg:x="219" fg:w="1"/><text x="17.9684%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="17.7184%" y="565" width="0.0809%" height="15" fill="rgb(239,225,54)" fg:x="219" fg:w="1"/><text x="17.9684%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="17.7994%" y="581" width="0.0809%" height="15" fill="rgb(211,59,40)" fg:x="220" fg:w="1"/><text x="18.0494%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="17.7994%" y="565" width="0.0809%" height="15" fill="rgb(213,176,46)" fg:x="220" fg:w="1"/><text x="18.0494%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="17.7994%" y="549" width="0.0809%" height="15" fill="rgb(226,99,4)" fg:x="220" fg:w="1"/><text x="18.0494%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.08%)</title><rect x="17.7994%" y="533" width="0.0809%" height="15" fill="rgb(239,203,43)" fg:x="220" fg:w="1"/><text x="18.0494%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.08%)</title><rect x="17.7994%" y="517" width="0.0809%" height="15" fill="rgb(246,1,45)" fg:x="220" fg:w="1"/><text x="18.0494%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="17.8803%" y="549" width="0.2427%" height="15" fill="rgb(231,42,52)" fg:x="221" fg:w="3"/><text x="18.1303%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.9612%" y="533" width="0.1618%" height="15" fill="rgb(240,13,50)" fg:x="222" fg:w="2"/><text x="18.2112%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="17.9612%" y="517" width="0.1618%" height="15" fill="rgb(225,81,14)" fg:x="222" fg:w="2"/><text x="18.2112%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="17.9612%" y="501" width="0.1618%" height="15" fill="rgb(216,182,23)" fg:x="222" fg:w="2"/><text x="18.2112%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="17.9612%" y="485" width="0.1618%" height="15" fill="rgb(233,137,19)" fg:x="222" fg:w="2"/><text x="18.2112%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="17.9612%" y="469" width="0.1618%" height="15" fill="rgb(242,61,46)" fg:x="222" fg:w="2"/><text x="18.2112%" y="479.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="17.9612%" y="453" width="0.1618%" height="15" fill="rgb(221,168,51)" fg:x="222" fg:w="2"/><text x="18.2112%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.57%)</title><rect x="17.8803%" y="565" width="0.5663%" height="15" fill="rgb(238,48,15)" fg:x="221" fg:w="7"/><text x="18.1303%" y="575.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="18.1230%" y="549" width="0.3236%" height="15" fill="rgb(216,13,16)" fg:x="224" fg:w="4"/><text x="18.3730%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="18.1230%" y="533" width="0.3236%" height="15" fill="rgb(223,185,34)" fg:x="224" fg:w="4"/><text x="18.3730%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="18.2848%" y="517" width="0.1618%" height="15" fill="rgb(228,94,42)" fg:x="226" fg:w="2"/><text x="18.5348%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="18.5275%" y="549" width="0.0809%" height="15" fill="rgb(218,166,43)" fg:x="229" fg:w="1"/><text x="18.7775%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.5275%" y="533" width="0.0809%" height="15" fill="rgb(232,30,50)" fg:x="229" fg:w="1"/><text x="18.7775%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.5275%" y="517" width="0.0809%" height="15" fill="rgb(245,206,45)" fg:x="229" fg:w="1"/><text x="18.7775%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.5275%" y="501" width="0.0809%" height="15" fill="rgb(220,56,22)" fg:x="229" fg:w="1"/><text x="18.7775%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="18.6084%" y="549" width="0.1618%" height="15" fill="rgb(239,129,38)" fg:x="230" fg:w="2"/><text x="18.8584%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="18.6084%" y="533" width="0.1618%" height="15" fill="rgb(207,68,41)" fg:x="230" fg:w="2"/><text x="18.8584%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.6893%" y="517" width="0.0809%" height="15" fill="rgb(221,21,7)" fg:x="231" fg:w="1"/><text x="18.9393%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.6893%" y="501" width="0.0809%" height="15" fill="rgb(240,33,25)" fg:x="231" fg:w="1"/><text x="18.9393%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="18.7702%" y="501" width="0.0809%" height="15" fill="rgb(242,119,10)" fg:x="232" fg:w="1"/><text x="19.0202%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.7702%" y="485" width="0.0809%" height="15" fill="rgb(214,149,40)" fg:x="232" fg:w="1"/><text x="19.0202%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.7702%" y="469" width="0.0809%" height="15" fill="rgb(228,25,36)" fg:x="232" fg:w="1"/><text x="19.0202%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.7702%" y="453" width="0.0809%" height="15" fill="rgb(222,59,15)" fg:x="232" fg:w="1"/><text x="19.0202%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="18.8511%" y="485" width="0.0809%" height="15" fill="rgb(218,170,0)" fg:x="233" fg:w="1"/><text x="19.1011%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.8511%" y="469" width="0.0809%" height="15" fill="rgb(232,173,23)" fg:x="233" fg:w="1"/><text x="19.1011%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="18.8511%" y="501" width="0.1618%" height="15" fill="rgb(218,116,1)" fg:x="233" fg:w="2"/><text x="19.1011%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.9320%" y="485" width="0.0809%" height="15" fill="rgb(207,34,4)" fg:x="234" fg:w="1"/><text x="19.1820%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.9320%" y="469" width="0.0809%" height="15" fill="rgb(229,54,52)" fg:x="234" fg:w="1"/><text x="19.1820%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.9320%" y="453" width="0.0809%" height="15" fill="rgb(211,86,23)" fg:x="234" fg:w="1"/><text x="19.1820%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="18.7702%" y="533" width="0.3236%" height="15" fill="rgb(254,153,34)" fg:x="232" fg:w="4"/><text x="19.0202%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="18.7702%" y="517" width="0.3236%" height="15" fill="rgb(219,220,14)" fg:x="232" fg:w="4"/><text x="19.0202%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.0129%" y="501" width="0.0809%" height="15" fill="rgb(247,8,26)" fg:x="235" fg:w="1"/><text x="19.2629%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.0129%" y="485" width="0.0809%" height="15" fill="rgb(213,129,42)" fg:x="235" fg:w="1"/><text x="19.2629%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.0129%" y="469" width="0.0809%" height="15" fill="rgb(225,95,41)" fg:x="235" fg:w="1"/><text x="19.2629%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="19.0939%" y="533" width="0.2427%" height="15" fill="rgb(215,134,24)" fg:x="236" fg:w="3"/><text x="19.3439%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="19.3366%" y="517" width="0.1618%" height="15" fill="rgb(235,23,54)" fg:x="239" fg:w="2"/><text x="19.5866%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.3366%" y="501" width="0.1618%" height="15" fill="rgb(229,96,31)" fg:x="239" fg:w="2"/><text x="19.5866%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="19.3366%" y="485" width="0.1618%" height="15" fill="rgb(206,111,12)" fg:x="239" fg:w="2"/><text x="19.5866%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="19.4175%" y="469" width="0.0809%" height="15" fill="rgb(222,177,8)" fg:x="240" fg:w="1"/><text x="19.6675%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.7411%" y="501" width="0.0809%" height="15" fill="rgb(251,36,52)" fg:x="244" fg:w="1"/><text x="19.9911%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.8220%" y="501" width="0.0809%" height="15" fill="rgb(216,182,29)" fg:x="245" fg:w="1"/><text x="20.0720%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.8220%" y="485" width="0.0809%" height="15" fill="rgb(241,145,50)" fg:x="245" fg:w="1"/><text x="20.0720%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.8220%" y="469" width="0.0809%" height="15" fill="rgb(231,71,35)" fg:x="245" fg:w="1"/><text x="20.0720%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="19.4984%" y="517" width="0.4854%" height="15" fill="rgb(218,22,17)" fg:x="241" fg:w="6"/><text x="19.7484%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.9029%" y="501" width="0.0809%" height="15" fill="rgb(225,227,6)" fg:x="246" fg:w="1"/><text x="20.1529%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.9029%" y="485" width="0.0809%" height="15" fill="rgb(224,204,17)" fg:x="246" fg:w="1"/><text x="20.1529%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.1456%" y="485" width="0.0809%" height="15" fill="rgb(227,61,28)" fg:x="249" fg:w="1"/><text x="20.3956%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="19.3366%" y="533" width="0.9709%" height="15" fill="rgb(242,148,23)" fg:x="239" fg:w="12"/><text x="19.5866%" y="543.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="19.9838%" y="517" width="0.3236%" height="15" fill="rgb(237,105,33)" fg:x="247" fg:w="4"/><text x="20.2338%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="20.0647%" y="501" width="0.2427%" height="15" fill="rgb(238,218,40)" fg:x="248" fg:w="3"/><text x="20.3147%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="20.2265%" y="485" width="0.0809%" height="15" fill="rgb(209,126,11)" fg:x="250" fg:w="1"/><text x="20.4765%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.62%)</title><rect x="18.7702%" y="549" width="1.6181%" height="15" fill="rgb(245,90,11)" fg:x="232" fg:w="20"/><text x="19.0202%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.3074%" y="533" width="0.0809%" height="15" fill="rgb(211,195,10)" fg:x="251" fg:w="1"/><text x="20.5574%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.3074%" y="517" width="0.0809%" height="15" fill="rgb(231,45,45)" fg:x="251" fg:w="1"/><text x="20.5574%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.3074%" y="501" width="0.0809%" height="15" fill="rgb(246,100,43)" fg:x="251" fg:w="1"/><text x="20.5574%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (33 samples, 2.67%)</title><rect x="17.8803%" y="581" width="2.6699%" height="15" fill="rgb(241,193,8)" fg:x="221" fg:w="33"/><text x="18.1303%" y="591.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.10%)</title><rect x="18.4466%" y="565" width="2.1036%" height="15" fill="rgb(208,76,19)" fg:x="228" fg:w="26"/><text x="18.6966%" y="575.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.3883%" y="549" width="0.1618%" height="15" fill="rgb(223,69,40)" fg:x="252" fg:w="2"/><text x="20.6383%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.3883%" y="533" width="0.1618%" height="15" fill="rgb(207,120,39)" fg:x="252" fg:w="2"/><text x="20.6383%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.4693%" y="517" width="0.0809%" height="15" fill="rgb(212,209,28)" fg:x="253" fg:w="1"/><text x="20.7193%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.4693%" y="501" width="0.0809%" height="15" fill="rgb(246,82,29)" fg:x="253" fg:w="1"/><text x="20.7193%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="20.6311%" y="549" width="0.1618%" height="15" fill="rgb(239,6,40)" fg:x="255" fg:w="2"/><text x="20.8811%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.8738%" y="533" width="0.0809%" height="15" fill="rgb(228,181,35)" fg:x="258" fg:w="1"/><text x="21.1238%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.9547%" y="517" width="0.0809%" height="15" fill="rgb(238,151,2)" fg:x="259" fg:w="1"/><text x="21.2047%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.9547%" y="501" width="0.0809%" height="15" fill="rgb(236,94,18)" fg:x="259" fg:w="1"/><text x="21.2047%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.0356%" y="501" width="0.0809%" height="15" fill="rgb(208,38,14)" fg:x="260" fg:w="1"/><text x="21.2856%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.0356%" y="485" width="0.0809%" height="15" fill="rgb(234,215,27)" fg:x="260" fg:w="1"/><text x="21.2856%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.65%)</title><rect x="20.5502%" y="581" width="0.6472%" height="15" fill="rgb(254,211,53)" fg:x="254" fg:w="8"/><text x="20.8002%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.65%)</title><rect x="20.5502%" y="565" width="0.6472%" height="15" fill="rgb(216,175,11)" fg:x="254" fg:w="8"/><text x="20.8002%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="20.7929%" y="549" width="0.4045%" height="15" fill="rgb(246,179,26)" fg:x="257" fg:w="5"/><text x="21.0429%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="20.9547%" y="533" width="0.2427%" height="15" fill="rgb(249,19,52)" fg:x="259" fg:w="3"/><text x="21.2047%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="21.0356%" y="517" width="0.1618%" height="15" fill="rgb(230,42,52)" fg:x="260" fg:w="2"/><text x="21.2856%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.1165%" y="501" width="0.0809%" height="15" fill="rgb(221,171,0)" fg:x="261" fg:w="1"/><text x="21.3665%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="21.2783%" y="533" width="0.1618%" height="15" fill="rgb(222,177,40)" fg:x="263" fg:w="2"/><text x="21.5283%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="21.4401%" y="533" width="0.1618%" height="15" fill="rgb(247,34,16)" fg:x="265" fg:w="2"/><text x="21.6901%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="21.4401%" y="517" width="0.1618%" height="15" fill="rgb(213,217,37)" fg:x="265" fg:w="2"/><text x="21.6901%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.6828%" y="517" width="0.0809%" height="15" fill="rgb(231,189,24)" fg:x="268" fg:w="1"/><text x="21.9328%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.6828%" y="501" width="0.0809%" height="15" fill="rgb(214,22,9)" fg:x="268" fg:w="1"/><text x="21.9328%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.7638%" y="501" width="0.0809%" height="15" fill="rgb(212,70,22)" fg:x="269" fg:w="1"/><text x="22.0138%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.8447%" y="501" width="0.0809%" height="15" fill="rgb(249,64,51)" fg:x="270" fg:w="1"/><text x="22.0947%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="22.1683%" y="485" width="0.1618%" height="15" fill="rgb(249,148,20)" fg:x="274" fg:w="2"/><text x="22.4183%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="22.3301%" y="485" width="0.2427%" height="15" fill="rgb(246,46,48)" fg:x="276" fg:w="3"/><text x="22.5801%" y="495.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="22.3301%" y="469" width="0.2427%" height="15" fill="rgb(217,34,48)" fg:x="276" fg:w="3"/><text x="22.5801%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.5728%" y="469" width="0.0809%" height="15" fill="rgb(222,45,26)" fg:x="279" fg:w="1"/><text x="22.8228%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.54%)</title><rect x="21.2783%" y="565" width="1.5372%" height="15" fill="rgb(230,201,36)" fg:x="263" fg:w="19"/><text x="21.5283%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (19 samples, 1.54%)</title><rect x="21.2783%" y="549" width="1.5372%" height="15" fill="rgb(217,30,43)" fg:x="263" fg:w="19"/><text x="21.5283%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="21.6019%" y="533" width="1.2136%" height="15" fill="rgb(230,197,40)" fg:x="267" fg:w="15"/><text x="21.8519%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.05%)</title><rect x="21.7638%" y="517" width="1.0518%" height="15" fill="rgb(239,181,18)" fg:x="269" fg:w="13"/><text x="22.0138%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="21.9256%" y="501" width="0.8900%" height="15" fill="rgb(222,60,39)" fg:x="271" fg:w="11"/><text x="22.1756%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="22.5728%" y="485" width="0.2427%" height="15" fill="rgb(210,60,22)" fg:x="279" fg:w="3"/><text x="22.8228%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="22.6537%" y="469" width="0.1618%" height="15" fill="rgb(239,213,48)" fg:x="280" fg:w="2"/><text x="22.9037%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="22.6537%" y="453" width="0.1618%" height="15" fill="rgb(253,214,23)" fg:x="280" fg:w="2"/><text x="22.9037%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.57%)</title><rect x="23.0583%" y="533" width="0.5663%" height="15" fill="rgb(211,98,45)" fg:x="285" fg:w="7"/><text x="23.3083%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.49%)</title><rect x="23.1392%" y="517" width="0.4854%" height="15" fill="rgb(239,130,44)" fg:x="286" fg:w="6"/><text x="23.3892%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (4 samples, 0.32%)</title><rect x="23.3010%" y="501" width="0.3236%" height="15" fill="rgb(222,181,35)" fg:x="288" fg:w="4"/><text x="23.5510%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="23.6246%" y="533" width="0.1618%" height="15" fill="rgb(219,219,49)" fg:x="292" fg:w="2"/><text x="23.8746%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.6246%" y="517" width="0.1618%" height="15" fill="rgb(227,161,51)" fg:x="292" fg:w="2"/><text x="23.8746%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.7055%" y="501" width="0.0809%" height="15" fill="rgb(239,112,27)" fg:x="293" fg:w="1"/><text x="23.9555%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.7055%" y="485" width="0.0809%" height="15" fill="rgb(248,122,18)" fg:x="293" fg:w="1"/><text x="23.9555%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.7055%" y="469" width="0.0809%" height="15" fill="rgb(245,130,23)" fg:x="293" fg:w="1"/><text x="23.9555%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="23.7864%" y="533" width="0.0809%" height="15" fill="rgb(211,225,28)" fg:x="294" fg:w="1"/><text x="24.0364%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.7864%" y="517" width="0.0809%" height="15" fill="rgb(242,105,44)" fg:x="294" fg:w="1"/><text x="24.0364%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.7864%" y="501" width="0.0809%" height="15" fill="rgb(216,183,46)" fg:x="294" fg:w="1"/><text x="24.0364%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.7864%" y="485" width="0.0809%" height="15" fill="rgb(227,112,9)" fg:x="294" fg:w="1"/><text x="24.0364%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.7864%" y="469" width="0.0809%" height="15" fill="rgb(244,21,0)" fg:x="294" fg:w="1"/><text x="24.0364%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="23.8673%" y="533" width="0.1618%" height="15" fill="rgb(236,185,14)" fg:x="295" fg:w="2"/><text x="24.1173%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.8673%" y="517" width="0.1618%" height="15" fill="rgb(236,170,30)" fg:x="295" fg:w="2"/><text x="24.1173%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.8673%" y="501" width="0.1618%" height="15" fill="rgb(209,198,51)" fg:x="295" fg:w="2"/><text x="24.1173%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.8673%" y="485" width="0.1618%" height="15" fill="rgb(205,171,26)" fg:x="295" fg:w="2"/><text x="24.1173%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="23.9482%" y="469" width="0.0809%" height="15" fill="rgb(246,41,49)" fg:x="296" fg:w="1"/><text x="24.1982%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.0291%" y="485" width="0.2427%" height="15" fill="rgb(240,229,12)" fg:x="297" fg:w="3"/><text x="24.2791%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.0291%" y="469" width="0.2427%" height="15" fill="rgb(212,8,54)" fg:x="297" fg:w="3"/><text x="24.2791%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="24.1100%" y="453" width="0.1618%" height="15" fill="rgb(230,114,13)" fg:x="298" fg:w="2"/><text x="24.3600%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.2718%" y="453" width="0.0809%" height="15" fill="rgb(229,130,28)" fg:x="300" fg:w="1"/><text x="24.5218%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="24.2718%" y="469" width="0.1618%" height="15" fill="rgb(206,139,15)" fg:x="300" fg:w="2"/><text x="24.5218%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="24.3528%" y="453" width="0.0809%" height="15" fill="rgb(241,188,35)" fg:x="301" fg:w="1"/><text x="24.6028%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.3528%" y="437" width="0.0809%" height="15" fill="rgb(208,224,26)" fg:x="301" fg:w="1"/><text x="24.6028%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.4337%" y="469" width="0.1618%" height="15" fill="rgb(251,131,28)" fg:x="302" fg:w="2"/><text x="24.6837%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="24.5146%" y="453" width="0.0809%" height="15" fill="rgb(208,153,1)" fg:x="303" fg:w="1"/><text x="24.7646%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (9 samples, 0.73%)</title><rect x="24.0291%" y="533" width="0.7282%" height="15" fill="rgb(234,33,36)" fg:x="297" fg:w="9"/><text x="24.2791%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.73%)</title><rect x="24.0291%" y="517" width="0.7282%" height="15" fill="rgb(246,42,29)" fg:x="297" fg:w="9"/><text x="24.2791%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.73%)</title><rect x="24.0291%" y="501" width="0.7282%" height="15" fill="rgb(251,114,16)" fg:x="297" fg:w="9"/><text x="24.2791%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (6 samples, 0.49%)</title><rect x="24.2718%" y="485" width="0.4854%" height="15" fill="rgb(233,13,38)" fg:x="300" fg:w="6"/><text x="24.5218%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="24.5955%" y="469" width="0.1618%" height="15" fill="rgb(247,120,19)" fg:x="304" fg:w="2"/><text x="24.8455%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="24.7573%" y="533" width="0.0809%" height="15" fill="rgb(205,11,16)" fg:x="306" fg:w="1"/><text x="25.0073%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.7573%" y="517" width="0.0809%" height="15" fill="rgb(228,185,19)" fg:x="306" fg:w="1"/><text x="25.0073%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.7573%" y="501" width="0.0809%" height="15" fill="rgb(239,88,52)" fg:x="306" fg:w="1"/><text x="25.0073%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.7573%" y="485" width="0.0809%" height="15" fill="rgb(219,23,1)" fg:x="306" fg:w="1"/><text x="25.0073%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.7573%" y="469" width="0.0809%" height="15" fill="rgb(253,177,16)" fg:x="306" fg:w="1"/><text x="25.0073%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="25.0000%" y="501" width="0.0809%" height="15" fill="rgb(225,150,40)" fg:x="309" fg:w="1"/><text x="25.2500%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="25.1618%" y="453" width="0.1618%" height="15" fill="rgb(208,108,30)" fg:x="311" fg:w="2"/><text x="25.4118%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.2427%" y="437" width="0.0809%" height="15" fill="rgb(214,122,4)" fg:x="312" fg:w="1"/><text x="25.4927%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.2427%" y="421" width="0.0809%" height="15" fill="rgb(229,74,37)" fg:x="312" fg:w="1"/><text x="25.4927%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="25.2427%" y="405" width="0.0809%" height="15" fill="rgb(233,61,41)" fg:x="312" fg:w="1"/><text x="25.4927%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="25.0809%" y="485" width="0.3236%" height="15" fill="rgb(238,191,5)" fg:x="310" fg:w="4"/><text x="25.3309%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="25.1618%" y="469" width="0.2427%" height="15" fill="rgb(233,78,24)" fg:x="311" fg:w="3"/><text x="25.4118%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.3236%" y="453" width="0.0809%" height="15" fill="rgb(211,142,8)" fg:x="313" fg:w="1"/><text x="25.5736%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="25.5663%" y="469" width="0.0809%" height="15" fill="rgb(253,38,53)" fg:x="316" fg:w="1"/><text x="25.8163%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="25.5663%" y="453" width="0.0809%" height="15" fill="rgb(234,63,51)" fg:x="316" fg:w="1"/><text x="25.8163%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.65%)</title><rect x="25.0809%" y="501" width="0.6472%" height="15" fill="rgb(205,23,31)" fg:x="310" fg:w="8"/><text x="25.3309%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="25.4045%" y="485" width="0.3236%" height="15" fill="rgb(210,184,50)" fg:x="314" fg:w="4"/><text x="25.6545%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.6472%" y="469" width="0.0809%" height="15" fill="rgb(222,112,26)" fg:x="317" fg:w="1"/><text x="25.8972%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (38 samples, 3.07%)</title><rect x="22.8155%" y="565" width="3.0744%" height="15" fill="rgb(250,98,18)" fg:x="282" fg:w="38"/><text x="23.0655%" y="575.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (38 samples, 3.07%)</title><rect x="22.8155%" y="549" width="3.0744%" height="15" fill="rgb(250,34,12)" fg:x="282" fg:w="38"/><text x="23.0655%" y="559.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.05%)</title><rect x="24.8382%" y="533" width="1.0518%" height="15" fill="rgb(236,141,30)" fg:x="307" fg:w="13"/><text x="25.0882%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (11 samples, 0.89%)</title><rect x="25.0000%" y="517" width="0.8900%" height="15" fill="rgb(246,134,38)" fg:x="309" fg:w="11"/><text x="25.2500%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="25.7282%" y="501" width="0.1618%" height="15" fill="rgb(240,114,4)" fg:x="318" fg:w="2"/><text x="25.9782%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="25.7282%" y="485" width="0.1618%" height="15" fill="rgb(243,113,39)" fg:x="318" fg:w="2"/><text x="25.9782%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="26.0518%" y="485" width="0.0809%" height="15" fill="rgb(239,215,4)" fg:x="322" fg:w="1"/><text x="26.3018%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="26.5372%" y="373" width="0.0809%" height="15" fill="rgb(236,229,45)" fg:x="328" fg:w="1"/><text x="26.7872%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="26.5372%" y="421" width="0.1618%" height="15" fill="rgb(242,2,6)" fg:x="328" fg:w="2"/><text x="26.7872%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="26.5372%" y="405" width="0.1618%" height="15" fill="rgb(239,108,21)" fg:x="328" fg:w="2"/><text x="26.7872%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="26.5372%" y="389" width="0.1618%" height="15" fill="rgb(215,168,34)" fg:x="328" fg:w="2"/><text x="26.7872%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6181%" y="373" width="0.0809%" height="15" fill="rgb(238,31,17)" fg:x="329" fg:w="1"/><text x="26.8681%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="26.6990%" y="405" width="0.1618%" height="15" fill="rgb(220,133,11)" fg:x="330" fg:w="2"/><text x="26.9490%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="26.7799%" y="389" width="0.0809%" height="15" fill="rgb(212,158,23)" fg:x="331" fg:w="1"/><text x="27.0299%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="26.8608%" y="405" width="0.1618%" height="15" fill="rgb(223,172,7)" fg:x="332" fg:w="2"/><text x="27.1108%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="26.8608%" y="389" width="0.1618%" height="15" fill="rgb(244,3,52)" fg:x="332" fg:w="2"/><text x="27.1108%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.57%)</title><rect x="26.5372%" y="437" width="0.5663%" height="15" fill="rgb(207,69,27)" fg:x="328" fg:w="7"/><text x="26.7872%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="26.6990%" y="421" width="0.4045%" height="15" fill="rgb(213,136,45)" fg:x="330" fg:w="5"/><text x="26.9490%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.0227%" y="405" width="0.0809%" height="15" fill="rgb(218,79,17)" fg:x="334" fg:w="1"/><text x="27.2727%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.0227%" y="389" width="0.0809%" height="15" fill="rgb(216,106,36)" fg:x="334" fg:w="1"/><text x="27.2727%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="27.1036%" y="437" width="0.1618%" height="15" fill="rgb(251,27,45)" fg:x="335" fg:w="2"/><text x="27.3536%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="27.1845%" y="421" width="0.0809%" height="15" fill="rgb(232,21,34)" fg:x="336" fg:w="1"/><text x="27.4345%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15 samples, 1.21%)</title><rect x="26.1327%" y="469" width="1.2136%" height="15" fill="rgb(249,191,16)" fg:x="323" fg:w="15"/><text x="26.3827%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.89%)</title><rect x="26.4563%" y="453" width="0.8900%" height="15" fill="rgb(224,88,20)" fg:x="327" fg:w="11"/><text x="26.7063%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.2654%" y="437" width="0.0809%" height="15" fill="rgb(237,93,27)" fg:x="337" fg:w="1"/><text x="27.5154%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.2654%" y="421" width="0.0809%" height="15" fill="rgb(226,198,48)" fg:x="337" fg:w="1"/><text x="27.5154%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.2654%" y="405" width="0.0809%" height="15" fill="rgb(207,162,53)" fg:x="337" fg:w="1"/><text x="27.5154%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="27.3463%" y="453" width="0.1618%" height="15" fill="rgb(207,169,9)" fg:x="338" fg:w="2"/><text x="27.5963%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.40%)</title><rect x="27.3463%" y="469" width="0.4045%" height="15" fill="rgb(224,166,46)" fg:x="338" fg:w="5"/><text x="27.5963%" y="479.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="27.5081%" y="453" width="0.2427%" height="15" fill="rgb(233,26,6)" fg:x="340" fg:w="3"/><text x="27.7581%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22 samples, 1.78%)</title><rect x="26.1327%" y="485" width="1.7799%" height="15" fill="rgb(218,106,45)" fg:x="323" fg:w="22"/><text x="26.3827%" y="495.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="27.7508%" y="469" width="0.1618%" height="15" fill="rgb(240,217,4)" fg:x="343" fg:w="2"/><text x="28.0008%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="27.7508%" y="453" width="0.1618%" height="15" fill="rgb(246,171,10)" fg:x="343" fg:w="2"/><text x="28.0008%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="27.7508%" y="437" width="0.1618%" height="15" fill="rgb(223,197,30)" fg:x="343" fg:w="2"/><text x="28.0008%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (26 samples, 2.10%)</title><rect x="25.8900%" y="501" width="2.1036%" height="15" fill="rgb(207,92,16)" fg:x="320" fg:w="26"/><text x="26.1400%" y="511.50">&lt;..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.9126%" y="485" width="0.0809%" height="15" fill="rgb(211,6,44)" fg:x="345" fg:w="1"/><text x="28.1626%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="27.9935%" y="485" width="0.0809%" height="15" fill="rgb(219,139,2)" fg:x="346" fg:w="1"/><text x="28.2435%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="27.9935%" y="501" width="0.3236%" height="15" fill="rgb(224,103,21)" fg:x="346" fg:w="4"/><text x="28.2435%" y="511.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="28.0744%" y="485" width="0.2427%" height="15" fill="rgb(254,110,48)" fg:x="347" fg:w="3"/><text x="28.3244%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (32 samples, 2.59%)</title><rect x="25.8900%" y="565" width="2.5890%" height="15" fill="rgb(212,88,19)" fg:x="320" fg:w="32"/><text x="26.1400%" y="575.50">se..</text></g><g><title>serde_json::de::from_trait (32 samples, 2.59%)</title><rect x="25.8900%" y="549" width="2.5890%" height="15" fill="rgb(248,103,6)" fg:x="320" fg:w="32"/><text x="26.1400%" y="559.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (32 samples, 2.59%)</title><rect x="25.8900%" y="533" width="2.5890%" height="15" fill="rgb(214,53,46)" fg:x="320" fg:w="32"/><text x="26.1400%" y="543.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (32 samples, 2.59%)</title><rect x="25.8900%" y="517" width="2.5890%" height="15" fill="rgb(236,190,24)" fg:x="320" fg:w="32"/><text x="26.1400%" y="527.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="28.3172%" y="501" width="0.1618%" height="15" fill="rgb(254,58,28)" fg:x="350" fg:w="2"/><text x="28.5672%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.3981%" y="485" width="0.0809%" height="15" fill="rgb(243,63,27)" fg:x="351" fg:w="1"/><text x="28.6481%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="28.7217%" y="501" width="0.0809%" height="15" fill="rgb(206,81,20)" fg:x="355" fg:w="1"/><text x="28.9717%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="28.8026%" y="501" width="0.4045%" height="15" fill="rgb(252,69,51)" fg:x="356" fg:w="5"/><text x="29.0526%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="29.1262%" y="485" width="0.0809%" height="15" fill="rgb(222,213,4)" fg:x="360" fg:w="1"/><text x="29.3762%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.1262%" y="469" width="0.0809%" height="15" fill="rgb(226,198,12)" fg:x="360" fg:w="1"/><text x="29.3762%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.73%)</title><rect x="28.5599%" y="533" width="0.7282%" height="15" fill="rgb(248,115,11)" fg:x="353" fg:w="9"/><text x="28.8099%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.57%)</title><rect x="28.7217%" y="517" width="0.5663%" height="15" fill="rgb(221,148,54)" fg:x="355" fg:w="7"/><text x="28.9717%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.2071%" y="501" width="0.0809%" height="15" fill="rgb(214,209,51)" fg:x="361" fg:w="1"/><text x="29.4571%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (14 samples, 1.13%)</title><rect x="28.4790%" y="549" width="1.1327%" height="15" fill="rgb(249,116,53)" fg:x="352" fg:w="14"/><text x="28.7290%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="29.2880%" y="533" width="0.3236%" height="15" fill="rgb(248,170,1)" fg:x="362" fg:w="4"/><text x="29.5380%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (2 samples, 0.16%)</title><rect x="29.6117%" y="549" width="0.1618%" height="15" fill="rgb(244,105,10)" fg:x="366" fg:w="2"/><text x="29.8617%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.7735%" y="533" width="0.0809%" height="15" fill="rgb(229,100,5)" fg:x="368" fg:w="1"/><text x="30.0235%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.7735%" y="517" width="0.0809%" height="15" fill="rgb(233,221,39)" fg:x="368" fg:w="1"/><text x="30.0235%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.7735%" y="501" width="0.0809%" height="15" fill="rgb(233,88,21)" fg:x="368" fg:w="1"/><text x="30.0235%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.7735%" y="485" width="0.0809%" height="15" fill="rgb(206,13,0)" fg:x="368" fg:w="1"/><text x="30.0235%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.7735%" y="469" width="0.0809%" height="15" fill="rgb(242,15,35)" fg:x="368" fg:w="1"/><text x="30.0235%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.7735%" y="453" width="0.0809%" height="15" fill="rgb(247,142,41)" fg:x="368" fg:w="1"/><text x="30.0235%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.7735%" y="437" width="0.0809%" height="15" fill="rgb(245,51,29)" fg:x="368" fg:w="1"/><text x="30.0235%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.7735%" y="421" width="0.0809%" height="15" fill="rgb(228,209,43)" fg:x="368" fg:w="1"/><text x="30.0235%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.7735%" y="405" width="0.0809%" height="15" fill="rgb(233,185,9)" fg:x="368" fg:w="1"/><text x="30.0235%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.7735%" y="389" width="0.0809%" height="15" fill="rgb(226,93,0)" fg:x="368" fg:w="1"/><text x="30.0235%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.7735%" y="373" width="0.0809%" height="15" fill="rgb(245,194,43)" fg:x="368" fg:w="1"/><text x="30.0235%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.7735%" y="357" width="0.0809%" height="15" fill="rgb(211,145,34)" fg:x="368" fg:w="1"/><text x="30.0235%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="29.7735%" y="341" width="0.0809%" height="15" fill="rgb(231,228,28)" fg:x="368" fg:w="1"/><text x="30.0235%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="29.7735%" y="549" width="0.1618%" height="15" fill="rgb(236,149,4)" fg:x="368" fg:w="2"/><text x="30.0235%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.8544%" y="533" width="0.0809%" height="15" fill="rgb(234,114,38)" fg:x="369" fg:w="1"/><text x="30.1044%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="29.9353%" y="533" width="0.0809%" height="15" fill="rgb(246,132,51)" fg:x="370" fg:w="1"/><text x="30.1853%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="29.9353%" y="517" width="0.0809%" height="15" fill="rgb(251,137,22)" fg:x="370" fg:w="1"/><text x="30.1853%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="29.9353%" y="501" width="0.0809%" height="15" fill="rgb(243,59,52)" fg:x="370" fg:w="1"/><text x="30.1853%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="30.0162%" y="533" width="0.0809%" height="15" fill="rgb(239,56,28)" fg:x="371" fg:w="1"/><text x="30.2662%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.0162%" y="517" width="0.0809%" height="15" fill="rgb(218,168,27)" fg:x="371" fg:w="1"/><text x="30.2662%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.0971%" y="533" width="0.0809%" height="15" fill="rgb(232,165,11)" fg:x="372" fg:w="1"/><text x="30.3471%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.1780%" y="517" width="0.0809%" height="15" fill="rgb(253,55,41)" fg:x="373" fg:w="1"/><text x="30.4280%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.2589%" y="485" width="0.0809%" height="15" fill="rgb(233,206,24)" fg:x="374" fg:w="1"/><text x="30.5089%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.2589%" y="469" width="0.0809%" height="15" fill="rgb(220,199,8)" fg:x="374" fg:w="1"/><text x="30.5089%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.2589%" y="453" width="0.0809%" height="15" fill="rgb(254,65,26)" fg:x="374" fg:w="1"/><text x="30.5089%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.2589%" y="437" width="0.0809%" height="15" fill="rgb(253,102,23)" fg:x="374" fg:w="1"/><text x="30.5089%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.2589%" y="421" width="0.0809%" height="15" fill="rgb(231,103,35)" fg:x="374" fg:w="1"/><text x="30.5089%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.2589%" y="405" width="0.0809%" height="15" fill="rgb(238,26,10)" fg:x="374" fg:w="1"/><text x="30.5089%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.2589%" y="389" width="0.0809%" height="15" fill="rgb(234,191,34)" fg:x="374" fg:w="1"/><text x="30.5089%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.2589%" y="373" width="0.0809%" height="15" fill="rgb(206,210,9)" fg:x="374" fg:w="1"/><text x="30.5089%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.2589%" y="357" width="0.0809%" height="15" fill="rgb(219,155,3)" fg:x="374" fg:w="1"/><text x="30.5089%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.2589%" y="341" width="0.0809%" height="15" fill="rgb(221,62,52)" fg:x="374" fg:w="1"/><text x="30.5089%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.2589%" y="325" width="0.0809%" height="15" fill="rgb(215,197,36)" fg:x="374" fg:w="1"/><text x="30.5089%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.2589%" y="309" width="0.0809%" height="15" fill="rgb(226,222,6)" fg:x="374" fg:w="1"/><text x="30.5089%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.2589%" y="501" width="0.1618%" height="15" fill="rgb(215,58,28)" fg:x="374" fg:w="2"/><text x="30.5089%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.3398%" y="485" width="0.0809%" height="15" fill="rgb(212,148,2)" fg:x="375" fg:w="1"/><text x="30.5898%" y="495.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (2 samples, 0.16%)</title><rect x="30.4207%" y="501" width="0.1618%" height="15" fill="rgb(208,21,42)" fg:x="376" fg:w="2"/><text x="30.6707%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="30.5825%" y="485" width="0.0809%" height="15" fill="rgb(209,107,26)" fg:x="378" fg:w="1"/><text x="30.8325%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="30.5825%" y="469" width="0.0809%" height="15" fill="rgb(254,60,47)" fg:x="378" fg:w="1"/><text x="30.8325%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7443%" y="453" width="0.0809%" height="15" fill="rgb(207,226,45)" fg:x="380" fg:w="1"/><text x="30.9943%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7443%" y="437" width="0.0809%" height="15" fill="rgb(223,124,22)" fg:x="380" fg:w="1"/><text x="30.9943%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.7443%" y="421" width="0.0809%" height="15" fill="rgb(240,162,13)" fg:x="380" fg:w="1"/><text x="30.9943%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.7443%" y="405" width="0.0809%" height="15" fill="rgb(244,199,31)" fg:x="380" fg:w="1"/><text x="30.9943%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.7443%" y="389" width="0.0809%" height="15" fill="rgb(207,92,16)" fg:x="380" fg:w="1"/><text x="30.9943%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="30.7443%" y="373" width="0.0809%" height="15" fill="rgb(215,31,19)" fg:x="380" fg:w="1"/><text x="30.9943%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="30.7443%" y="357" width="0.0809%" height="15" fill="rgb(245,118,14)" fg:x="380" fg:w="1"/><text x="30.9943%" y="367.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (163 samples, 13.19%)</title><rect x="17.7184%" y="613" width="13.1877%" height="15" fill="rgb(248,12,46)" fg:x="219" fg:w="163"/><text x="17.9684%" y="623.50">engine::internal::En..</text></g><g><title>engine::session::Session::check_for_changes (162 samples, 13.11%)</title><rect x="17.7994%" y="597" width="13.1068%" height="15" fill="rgb(209,119,0)" fg:x="220" fg:w="162"/><text x="18.0494%" y="607.50">engine::session::Ses..</text></g><g><title>kernel::compare::any_entity_changes (120 samples, 9.71%)</title><rect x="21.1974%" y="581" width="9.7087%" height="15" fill="rgb(254,51,44)" fg:x="262" fg:w="120"/><text x="21.4474%" y="591.50">kernel::compar..</text></g><g><title>treediff::diff::diff (30 samples, 2.43%)</title><rect x="28.4790%" y="565" width="2.4272%" height="15" fill="rgb(253,182,35)" fg:x="352" fg:w="30"/><text x="28.7290%" y="575.50">tr..</text></g><g><title>treediff::diff::diff (12 samples, 0.97%)</title><rect x="29.9353%" y="549" width="0.9709%" height="15" fill="rgb(205,198,39)" fg:x="370" fg:w="12"/><text x="30.1853%" y="559.50"></text></g><g><title>treediff::diff::diff (9 samples, 0.73%)</title><rect x="30.1780%" y="533" width="0.7282%" height="15" fill="rgb(251,175,48)" fg:x="373" fg:w="9"/><text x="30.4280%" y="543.50"></text></g><g><title>treediff::diff::diff (8 samples, 0.65%)</title><rect x="30.2589%" y="517" width="0.6472%" height="15" fill="rgb(239,38,17)" fg:x="374" fg:w="8"/><text x="30.5089%" y="527.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="30.5825%" y="501" width="0.3236%" height="15" fill="rgb(212,101,8)" fg:x="378" fg:w="4"/><text x="30.8325%" y="511.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="30.6634%" y="485" width="0.2427%" height="15" fill="rgb(228,35,17)" fg:x="379" fg:w="3"/><text x="30.9134%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="30.6634%" y="469" width="0.2427%" height="15" fill="rgb(214,95,8)" fg:x="379" fg:w="3"/><text x="30.9134%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.8252%" y="453" width="0.0809%" height="15" fill="rgb(210,176,35)" fg:x="381" fg:w="1"/><text x="31.0752%" y="463.50"></text></g><g><title>engine::session::Session::close (178 samples, 14.40%)</title><rect x="16.5858%" y="645" width="14.4013%" height="15" fill="rgb(226,4,3)" fg:x="205" fg:w="178"/><text x="16.8358%" y="655.50">engine::session::Sessi..</text></g><g><title>engine::session::Session::save_entity_changes (172 samples, 13.92%)</title><rect x="17.0712%" y="629" width="13.9159%" height="15" fill="rgb(232,133,14)" fg:x="211" fg:w="172"/><text x="17.3212%" y="639.50">engine::session::Sess..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="30.9061%" y="613" width="0.0809%" height="15" fill="rgb(250,191,8)" fg:x="382" fg:w="1"/><text x="31.1561%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="31.0680%" y="549" width="0.0809%" height="15" fill="rgb(213,12,45)" fg:x="384" fg:w="1"/><text x="31.3180%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="31.0680%" y="565" width="0.1618%" height="15" fill="rgb(233,78,26)" fg:x="384" fg:w="2"/><text x="31.3180%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="31.1489%" y="549" width="0.0809%" height="15" fill="rgb(245,222,11)" fg:x="385" fg:w="1"/><text x="31.3989%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.89%)</title><rect x="31.2298%" y="549" width="0.8900%" height="15" fill="rgb(216,174,12)" fg:x="386" fg:w="11"/><text x="31.4798%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.89%)</title><rect x="31.2298%" y="533" width="0.8900%" height="15" fill="rgb(213,15,9)" fg:x="386" fg:w="11"/><text x="31.4798%" y="543.50"></text></g><g><title>realloc (11 samples, 0.89%)</title><rect x="31.2298%" y="517" width="0.8900%" height="15" fill="rgb(238,103,32)" fg:x="386" fg:w="11"/><text x="31.4798%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="32.2006%" y="501" width="0.2427%" height="15" fill="rgb(245,85,15)" fg:x="398" fg:w="3"/><text x="32.4506%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="32.2006%" y="485" width="0.2427%" height="15" fill="rgb(254,204,5)" fg:x="398" fg:w="3"/><text x="32.4506%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="32.2006%" y="469" width="0.2427%" height="15" fill="rgb(231,178,15)" fg:x="398" fg:w="3"/><text x="32.4506%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="32.2006%" y="453" width="0.2427%" height="15" fill="rgb(248,151,3)" fg:x="398" fg:w="3"/><text x="32.4506%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="32.2816%" y="437" width="0.1618%" height="15" fill="rgb(250,139,13)" fg:x="399" fg:w="2"/><text x="32.5316%" y="447.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="32.3625%" y="421" width="0.0809%" height="15" fill="rgb(243,107,53)" fg:x="400" fg:w="1"/><text x="32.6125%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.4434%" y="501" width="0.0809%" height="15" fill="rgb(232,81,15)" fg:x="401" fg:w="1"/><text x="32.6934%" y="511.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (18 samples, 1.46%)</title><rect x="31.2298%" y="565" width="1.4563%" height="15" fill="rgb(225,187,48)" fg:x="386" fg:w="18"/><text x="31.4798%" y="575.50"></text></g><g><title>plugins_core::tools::contained_by (7 samples, 0.57%)</title><rect x="32.1197%" y="549" width="0.5663%" height="15" fill="rgb(205,116,12)" fg:x="397" fg:w="7"/><text x="32.3697%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.57%)</title><rect x="32.1197%" y="533" width="0.5663%" height="15" fill="rgb(220,222,31)" fg:x="397" fg:w="7"/><text x="32.3697%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (7 samples, 0.57%)</title><rect x="32.1197%" y="517" width="0.5663%" height="15" fill="rgb(233,187,49)" fg:x="397" fg:w="7"/><text x="32.3697%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.5243%" y="501" width="0.1618%" height="15" fill="rgb(211,168,53)" fg:x="402" fg:w="2"/><text x="32.7743%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.5243%" y="485" width="0.1618%" height="15" fill="rgb(206,160,16)" fg:x="402" fg:w="2"/><text x="32.7743%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="32.6052%" y="469" width="0.0809%" height="15" fill="rgb(254,164,13)" fg:x="403" fg:w="1"/><text x="32.8552%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.6052%" y="453" width="0.0809%" height="15" fill="rgb(229,45,30)" fg:x="403" fg:w="1"/><text x="32.8552%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="32.6861%" y="549" width="0.2427%" height="15" fill="rgb(237,32,10)" fg:x="404" fg:w="3"/><text x="32.9361%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="32.6861%" y="533" width="0.2427%" height="15" fill="rgb(251,20,47)" fg:x="404" fg:w="3"/><text x="32.9361%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="32.6861%" y="517" width="0.2427%" height="15" fill="rgb(251,116,12)" fg:x="404" fg:w="3"/><text x="32.9361%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="32.6861%" y="501" width="0.2427%" height="15" fill="rgb(214,227,27)" fg:x="404" fg:w="3"/><text x="32.9361%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="32.6861%" y="485" width="0.2427%" height="15" fill="rgb(248,10,53)" fg:x="404" fg:w="3"/><text x="32.9361%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="32.6861%" y="469" width="0.2427%" height="15" fill="rgb(221,176,25)" fg:x="404" fg:w="3"/><text x="32.9361%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="32.6861%" y="453" width="0.2427%" height="15" fill="rgb(205,70,46)" fg:x="404" fg:w="3"/><text x="32.9361%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="32.6861%" y="437" width="0.2427%" height="15" fill="rgb(217,45,38)" fg:x="404" fg:w="3"/><text x="32.9361%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="32.6861%" y="421" width="0.2427%" height="15" fill="rgb(243,6,54)" fg:x="404" fg:w="3"/><text x="32.9361%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="32.6861%" y="405" width="0.2427%" height="15" fill="rgb(242,76,23)" fg:x="404" fg:w="3"/><text x="32.9361%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="32.6861%" y="389" width="0.2427%" height="15" fill="rgb(239,166,0)" fg:x="404" fg:w="3"/><text x="32.9361%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="32.6861%" y="373" width="0.2427%" height="15" fill="rgb(238,174,32)" fg:x="404" fg:w="3"/><text x="32.9361%" y="383.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="32.6861%" y="357" width="0.2427%" height="15" fill="rgb(238,124,44)" fg:x="404" fg:w="3"/><text x="32.9361%" y="367.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="32.6861%" y="341" width="0.2427%" height="15" fill="rgb(206,185,9)" fg:x="404" fg:w="3"/><text x="32.9361%" y="351.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (5 samples, 0.40%)</title><rect x="32.6861%" y="565" width="0.4045%" height="15" fill="rgb(215,157,17)" fg:x="404" fg:w="5"/><text x="32.9361%" y="575.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="32.9288%" y="549" width="0.1618%" height="15" fill="rgb(251,17,29)" fg:x="407" fg:w="2"/><text x="33.1788%" y="559.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="32.9288%" y="533" width="0.1618%" height="15" fill="rgb(227,113,27)" fg:x="407" fg:w="2"/><text x="33.1788%" y="543.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="33.0097%" y="517" width="0.0809%" height="15" fill="rgb(217,226,24)" fg:x="408" fg:w="1"/><text x="33.2597%" y="527.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="33.0097%" y="501" width="0.0809%" height="15" fill="rgb(251,99,38)" fg:x="408" fg:w="1"/><text x="33.2597%" y="511.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.0097%" y="485" width="0.0809%" height="15" fill="rgb(231,147,19)" fg:x="408" fg:w="1"/><text x="33.2597%" y="495.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.0097%" y="469" width="0.0809%" height="15" fill="rgb(230,86,8)" fg:x="408" fg:w="1"/><text x="33.2597%" y="479.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.08%)</title><rect x="33.0097%" y="453" width="0.0809%" height="15" fill="rgb(237,159,39)" fg:x="408" fg:w="1"/><text x="33.2597%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (27 samples, 2.18%)</title><rect x="31.0680%" y="597" width="2.1845%" height="15" fill="rgb(247,179,47)" fg:x="384" fg:w="27"/><text x="31.3180%" y="607.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (27 samples, 2.18%)</title><rect x="31.0680%" y="581" width="2.1845%" height="15" fill="rgb(253,152,26)" fg:x="384" fg:w="27"/><text x="31.3180%" y="591.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (2 samples, 0.16%)</title><rect x="33.0906%" y="565" width="0.1618%" height="15" fill="rgb(222,211,15)" fg:x="409" fg:w="2"/><text x="33.3406%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.0906%" y="549" width="0.1618%" height="15" fill="rgb(236,193,6)" fg:x="409" fg:w="2"/><text x="33.3406%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.0906%" y="533" width="0.1618%" height="15" fill="rgb(226,206,10)" fg:x="409" fg:w="2"/><text x="33.3406%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.0906%" y="517" width="0.1618%" height="15" fill="rgb(213,125,22)" fg:x="409" fg:w="2"/><text x="33.3406%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="33.0906%" y="501" width="0.1618%" height="15" fill="rgb(221,66,28)" fg:x="409" fg:w="2"/><text x="33.3406%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="33.0906%" y="485" width="0.1618%" height="15" fill="rgb(222,84,53)" fg:x="409" fg:w="2"/><text x="33.3406%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="33.0906%" y="469" width="0.1618%" height="15" fill="rgb(243,50,15)" fg:x="409" fg:w="2"/><text x="33.3406%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="33.0906%" y="453" width="0.1618%" height="15" fill="rgb(208,184,23)" fg:x="409" fg:w="2"/><text x="33.3406%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="33.0906%" y="437" width="0.1618%" height="15" fill="rgb(221,83,2)" fg:x="409" fg:w="2"/><text x="33.3406%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="33.0906%" y="421" width="0.1618%" height="15" fill="rgb(236,53,24)" fg:x="409" fg:w="2"/><text x="33.3406%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="33.0906%" y="405" width="0.1618%" height="15" fill="rgb(244,171,29)" fg:x="409" fg:w="2"/><text x="33.3406%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="33.0906%" y="389" width="0.1618%" height="15" fill="rgb(205,19,11)" fg:x="409" fg:w="2"/><text x="33.3406%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="33.0906%" y="373" width="0.1618%" height="15" fill="rgb(207,108,29)" fg:x="409" fg:w="2"/><text x="33.3406%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.0906%" y="357" width="0.1618%" height="15" fill="rgb(236,215,43)" fg:x="409" fg:w="2"/><text x="33.3406%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="33.2524%" y="581" width="0.0809%" height="15" fill="rgb(213,58,35)" fg:x="411" fg:w="1"/><text x="33.5024%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="33.2524%" y="565" width="0.0809%" height="15" fill="rgb(220,211,46)" fg:x="411" fg:w="1"/><text x="33.5024%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.2524%" y="549" width="0.0809%" height="15" fill="rgb(212,134,16)" fg:x="411" fg:w="1"/><text x="33.5024%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="33.3333%" y="581" width="0.0809%" height="15" fill="rgb(232,90,44)" fg:x="412" fg:w="1"/><text x="33.5833%" y="591.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="33.3333%" y="565" width="0.0809%" height="15" fill="rgb(212,18,36)" fg:x="412" fg:w="1"/><text x="33.5833%" y="575.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="33.3333%" y="549" width="0.0809%" height="15" fill="rgb(206,112,24)" fg:x="412" fg:w="1"/><text x="33.5833%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.3333%" y="533" width="0.0809%" height="15" fill="rgb(238,223,40)" fg:x="412" fg:w="1"/><text x="33.5833%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4951%" y="549" width="0.0809%" height="15" fill="rgb(226,169,20)" fg:x="414" fg:w="1"/><text x="33.7451%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4951%" y="533" width="0.0809%" height="15" fill="rgb(241,64,52)" fg:x="414" fg:w="1"/><text x="33.7451%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.4951%" y="517" width="0.0809%" height="15" fill="rgb(228,120,25)" fg:x="414" fg:w="1"/><text x="33.7451%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4951%" y="501" width="0.0809%" height="15" fill="rgb(234,108,19)" fg:x="414" fg:w="1"/><text x="33.7451%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4951%" y="485" width="0.0809%" height="15" fill="rgb(236,133,29)" fg:x="414" fg:w="1"/><text x="33.7451%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.4951%" y="469" width="0.0809%" height="15" fill="rgb(246,174,53)" fg:x="414" fg:w="1"/><text x="33.7451%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.4951%" y="453" width="0.0809%" height="15" fill="rgb(210,105,35)" fg:x="414" fg:w="1"/><text x="33.7451%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.4951%" y="437" width="0.0809%" height="15" fill="rgb(225,27,26)" fg:x="414" fg:w="1"/><text x="33.7451%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.4951%" y="421" width="0.0809%" height="15" fill="rgb(233,2,39)" fg:x="414" fg:w="1"/><text x="33.7451%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.4951%" y="405" width="0.0809%" height="15" fill="rgb(219,164,26)" fg:x="414" fg:w="1"/><text x="33.7451%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.4951%" y="389" width="0.0809%" height="15" fill="rgb(236,211,5)" fg:x="414" fg:w="1"/><text x="33.7451%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.4951%" y="373" width="0.0809%" height="15" fill="rgb(244,227,23)" fg:x="414" fg:w="1"/><text x="33.7451%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.4951%" y="357" width="0.0809%" height="15" fill="rgb(230,184,8)" fg:x="414" fg:w="1"/><text x="33.7451%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.4951%" y="341" width="0.0809%" height="15" fill="rgb(217,125,48)" fg:x="414" fg:w="1"/><text x="33.7451%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.4951%" y="325" width="0.0809%" height="15" fill="rgb(223,192,47)" fg:x="414" fg:w="1"/><text x="33.7451%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.5761%" y="549" width="0.0809%" height="15" fill="rgb(226,119,10)" fg:x="415" fg:w="1"/><text x="33.8261%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="33.6570%" y="517" width="0.0809%" height="15" fill="rgb(221,49,29)" fg:x="416" fg:w="1"/><text x="33.9070%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="33.6570%" y="501" width="0.0809%" height="15" fill="rgb(217,205,19)" fg:x="416" fg:w="1"/><text x="33.9070%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="33.6570%" y="485" width="0.0809%" height="15" fill="rgb(242,104,7)" fg:x="416" fg:w="1"/><text x="33.9070%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.6570%" y="469" width="0.0809%" height="15" fill="rgb(209,154,48)" fg:x="416" fg:w="1"/><text x="33.9070%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.6570%" y="453" width="0.0809%" height="15" fill="rgb(219,213,46)" fg:x="416" fg:w="1"/><text x="33.9070%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="33.6570%" y="437" width="0.0809%" height="15" fill="rgb(229,105,38)" fg:x="416" fg:w="1"/><text x="33.9070%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.40%)</title><rect x="33.4142%" y="581" width="0.4045%" height="15" fill="rgb(205,151,5)" fg:x="413" fg:w="5"/><text x="33.6642%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="33.4142%" y="565" width="0.4045%" height="15" fill="rgb(248,115,40)" fg:x="413" fg:w="5"/><text x="33.6642%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.6570%" y="549" width="0.1618%" height="15" fill="rgb(206,179,2)" fg:x="416" fg:w="2"/><text x="33.9070%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.6570%" y="533" width="0.1618%" height="15" fill="rgb(230,103,24)" fg:x="416" fg:w="2"/><text x="33.9070%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.7379%" y="517" width="0.0809%" height="15" fill="rgb(218,152,4)" fg:x="417" fg:w="1"/><text x="33.9879%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7379%" y="501" width="0.0809%" height="15" fill="rgb(236,161,54)" fg:x="417" fg:w="1"/><text x="33.9879%" y="511.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="33.7379%" y="485" width="0.0809%" height="15" fill="rgb(226,65,17)" fg:x="417" fg:w="1"/><text x="33.9879%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="33.8188%" y="581" width="0.2427%" height="15" fill="rgb(221,134,44)" fg:x="418" fg:w="3"/><text x="34.0688%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.24%)</title><rect x="33.8188%" y="565" width="0.2427%" height="15" fill="rgb(251,129,4)" fg:x="418" fg:w="3"/><text x="34.0688%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="33.8997%" y="549" width="0.1618%" height="15" fill="rgb(244,32,34)" fg:x="419" fg:w="2"/><text x="34.1497%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="33.8997%" y="533" width="0.1618%" height="15" fill="rgb(251,224,37)" fg:x="419" fg:w="2"/><text x="34.1497%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="33.8997%" y="517" width="0.1618%" height="15" fill="rgb(248,117,31)" fg:x="419" fg:w="2"/><text x="34.1497%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="33.8997%" y="501" width="0.1618%" height="15" fill="rgb(222,208,37)" fg:x="419" fg:w="2"/><text x="34.1497%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="33.8997%" y="485" width="0.1618%" height="15" fill="rgb(234,211,25)" fg:x="419" fg:w="2"/><text x="34.1497%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.9806%" y="469" width="0.0809%" height="15" fill="rgb(211,72,6)" fg:x="420" fg:w="1"/><text x="34.2306%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="34.2233%" y="565" width="0.1618%" height="15" fill="rgb(249,198,38)" fg:x="423" fg:w="2"/><text x="34.4733%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="34.2233%" y="549" width="0.1618%" height="15" fill="rgb(221,86,51)" fg:x="423" fg:w="2"/><text x="34.4733%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="34.2233%" y="533" width="0.1618%" height="15" fill="rgb(226,178,43)" fg:x="423" fg:w="2"/><text x="34.4733%" y="543.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="34.3042%" y="517" width="0.0809%" height="15" fill="rgb(215,145,7)" fg:x="424" fg:w="1"/><text x="34.5542%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="34.3042%" y="501" width="0.0809%" height="15" fill="rgb(250,202,36)" fg:x="424" fg:w="1"/><text x="34.5542%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="34.3042%" y="485" width="0.0809%" height="15" fill="rgb(215,86,13)" fg:x="424" fg:w="1"/><text x="34.5542%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.3042%" y="469" width="0.0809%" height="15" fill="rgb(221,134,12)" fg:x="424" fg:w="1"/><text x="34.5542%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.3042%" y="453" width="0.0809%" height="15" fill="rgb(213,82,10)" fg:x="424" fg:w="1"/><text x="34.5542%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.3042%" y="437" width="0.0809%" height="15" fill="rgb(214,142,0)" fg:x="424" fg:w="1"/><text x="34.5542%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.3042%" y="421" width="0.0809%" height="15" fill="rgb(205,145,9)" fg:x="424" fg:w="1"/><text x="34.5542%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="34.3042%" y="405" width="0.0809%" height="15" fill="rgb(244,214,8)" fg:x="424" fg:w="1"/><text x="34.5542%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="34.3042%" y="389" width="0.0809%" height="15" fill="rgb(224,72,51)" fg:x="424" fg:w="1"/><text x="34.5542%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.3042%" y="373" width="0.0809%" height="15" fill="rgb(233,137,37)" fg:x="424" fg:w="1"/><text x="34.5542%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.3042%" y="357" width="0.0809%" height="15" fill="rgb(208,71,28)" fg:x="424" fg:w="1"/><text x="34.5542%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.3042%" y="341" width="0.0809%" height="15" fill="rgb(226,31,7)" fg:x="424" fg:w="1"/><text x="34.5542%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="34.3042%" y="325" width="0.0809%" height="15" fill="rgb(229,62,18)" fg:x="424" fg:w="1"/><text x="34.5542%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="34.3042%" y="309" width="0.0809%" height="15" fill="rgb(226,74,28)" fg:x="424" fg:w="1"/><text x="34.5542%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="34.3042%" y="293" width="0.0809%" height="15" fill="rgb(214,170,18)" fg:x="424" fg:w="1"/><text x="34.5542%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="34.3042%" y="277" width="0.0809%" height="15" fill="rgb(227,229,35)" fg:x="424" fg:w="1"/><text x="34.5542%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="34.3042%" y="261" width="0.0809%" height="15" fill="rgb(225,181,39)" fg:x="424" fg:w="1"/><text x="34.5542%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="34.3042%" y="245" width="0.0809%" height="15" fill="rgb(253,124,44)" fg:x="424" fg:w="1"/><text x="34.5542%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="34.3042%" y="229" width="0.0809%" height="15" fill="rgb(220,75,18)" fg:x="424" fg:w="1"/><text x="34.5542%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="34.3042%" y="213" width="0.0809%" height="15" fill="rgb(239,175,43)" fg:x="424" fg:w="1"/><text x="34.5542%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.3042%" y="197" width="0.0809%" height="15" fill="rgb(228,112,50)" fg:x="424" fg:w="1"/><text x="34.5542%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="34.3042%" y="181" width="0.0809%" height="15" fill="rgb(232,105,36)" fg:x="424" fg:w="1"/><text x="34.5542%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="34.3042%" y="165" width="0.0809%" height="15" fill="rgb(227,137,47)" fg:x="424" fg:w="1"/><text x="34.5542%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="34.3042%" y="149" width="0.0809%" height="15" fill="rgb(217,51,9)" fg:x="424" fg:w="1"/><text x="34.5542%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="34.3042%" y="133" width="0.0809%" height="15" fill="rgb(245,117,0)" fg:x="424" fg:w="1"/><text x="34.5542%" y="143.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="34.3851%" y="565" width="0.1618%" height="15" fill="rgb(252,52,30)" fg:x="425" fg:w="2"/><text x="34.6351%" y="575.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="34.4660%" y="549" width="0.0809%" height="15" fill="rgb(227,85,33)" fg:x="426" fg:w="1"/><text x="34.7160%" y="559.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="34.4660%" y="533" width="0.0809%" height="15" fill="rgb(220,157,20)" fg:x="426" fg:w="1"/><text x="34.7160%" y="543.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="34.5469%" y="469" width="0.0809%" height="15" fill="rgb(254,14,34)" fg:x="427" fg:w="1"/><text x="34.7969%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="34.5469%" y="453" width="0.0809%" height="15" fill="rgb(216,103,41)" fg:x="427" fg:w="1"/><text x="34.7969%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.5469%" y="437" width="0.0809%" height="15" fill="rgb(245,221,9)" fg:x="427" fg:w="1"/><text x="34.7969%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.5469%" y="421" width="0.0809%" height="15" fill="rgb(254,136,47)" fg:x="427" fg:w="1"/><text x="34.7969%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.5469%" y="405" width="0.0809%" height="15" fill="rgb(235,71,46)" fg:x="427" fg:w="1"/><text x="34.7969%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.5469%" y="389" width="0.0809%" height="15" fill="rgb(242,154,29)" fg:x="427" fg:w="1"/><text x="34.7969%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.5469%" y="373" width="0.0809%" height="15" fill="rgb(210,65,31)" fg:x="427" fg:w="1"/><text x="34.7969%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.5469%" y="357" width="0.0809%" height="15" fill="rgb(244,9,50)" fg:x="427" fg:w="1"/><text x="34.7969%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.5469%" y="341" width="0.0809%" height="15" fill="rgb(215,141,38)" fg:x="427" fg:w="1"/><text x="34.7969%" y="351.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.65%)</title><rect x="34.0615%" y="581" width="0.6472%" height="15" fill="rgb(241,129,6)" fg:x="421" fg:w="8"/><text x="34.3115%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="34.5469%" y="565" width="0.1618%" height="15" fill="rgb(253,169,4)" fg:x="427" fg:w="2"/><text x="34.7969%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="34.5469%" y="549" width="0.1618%" height="15" fill="rgb(237,82,36)" fg:x="427" fg:w="2"/><text x="34.7969%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (2 samples, 0.16%)</title><rect x="34.5469%" y="533" width="0.1618%" height="15" fill="rgb(209,171,11)" fg:x="427" fg:w="2"/><text x="34.7969%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="34.5469%" y="517" width="0.1618%" height="15" fill="rgb(242,19,22)" fg:x="427" fg:w="2"/><text x="34.7969%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="34.5469%" y="501" width="0.1618%" height="15" fill="rgb(251,122,24)" fg:x="427" fg:w="2"/><text x="34.7969%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="34.5469%" y="485" width="0.1618%" height="15" fill="rgb(226,166,42)" fg:x="427" fg:w="2"/><text x="34.7969%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="34.6278%" y="469" width="0.0809%" height="15" fill="rgb(244,101,48)" fg:x="428" fg:w="1"/><text x="34.8778%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.6278%" y="453" width="0.0809%" height="15" fill="rgb(227,125,1)" fg:x="428" fg:w="1"/><text x="34.8778%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.6278%" y="437" width="0.0809%" height="15" fill="rgb(206,79,43)" fg:x="428" fg:w="1"/><text x="34.8778%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="34.6278%" y="421" width="0.0809%" height="15" fill="rgb(241,109,41)" fg:x="428" fg:w="1"/><text x="34.8778%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="34.6278%" y="405" width="0.0809%" height="15" fill="rgb(219,73,4)" fg:x="428" fg:w="1"/><text x="34.8778%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (46 samples, 3.72%)</title><rect x="31.0680%" y="613" width="3.7217%" height="15" fill="rgb(239,25,41)" fg:x="384" fg:w="46"/><text x="31.3180%" y="623.50">&lt;plu..</text></g><g><title>plugins_core::tools::move_between (19 samples, 1.54%)</title><rect x="33.2524%" y="597" width="1.5372%" height="15" fill="rgb(208,88,46)" fg:x="411" fg:w="19"/><text x="33.5024%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="34.7087%" y="581" width="0.0809%" height="15" fill="rgb(239,184,9)" fg:x="429" fg:w="1"/><text x="34.9587%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="34.7087%" y="565" width="0.0809%" height="15" fill="rgb(223,114,13)" fg:x="429" fg:w="1"/><text x="34.9587%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="34.7087%" y="549" width="0.0809%" height="15" fill="rgb(214,28,42)" fg:x="429" fg:w="1"/><text x="34.9587%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="34.7087%" y="533" width="0.0809%" height="15" fill="rgb(252,32,44)" fg:x="429" fg:w="1"/><text x="34.9587%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="34.7087%" y="517" width="0.0809%" height="15" fill="rgb(231,159,4)" fg:x="429" fg:w="1"/><text x="34.9587%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="34.7087%" y="501" width="0.0809%" height="15" fill="rgb(210,35,26)" fg:x="429" fg:w="1"/><text x="34.9587%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="34.7087%" y="485" width="0.0809%" height="15" fill="rgb(208,190,37)" fg:x="429" fg:w="1"/><text x="34.9587%" y="495.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="34.7087%" y="469" width="0.0809%" height="15" fill="rgb(226,148,22)" fg:x="429" fg:w="1"/><text x="34.9587%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="34.7087%" y="453" width="0.0809%" height="15" fill="rgb(242,153,24)" fg:x="429" fg:w="1"/><text x="34.9587%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.7087%" y="437" width="0.0809%" height="15" fill="rgb(213,133,7)" fg:x="429" fg:w="1"/><text x="34.9587%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.7087%" y="421" width="0.0809%" height="15" fill="rgb(248,206,18)" fg:x="429" fg:w="1"/><text x="34.9587%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.7087%" y="405" width="0.0809%" height="15" fill="rgb(233,157,4)" fg:x="429" fg:w="1"/><text x="34.9587%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.7087%" y="389" width="0.0809%" height="15" fill="rgb(249,179,32)" fg:x="429" fg:w="1"/><text x="34.9587%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.7087%" y="373" width="0.0809%" height="15" fill="rgb(248,69,35)" fg:x="429" fg:w="1"/><text x="34.9587%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.7087%" y="357" width="0.0809%" height="15" fill="rgb(249,158,38)" fg:x="429" fg:w="1"/><text x="34.9587%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.7087%" y="341" width="0.0809%" height="15" fill="rgb(223,18,43)" fg:x="429" fg:w="1"/><text x="34.9587%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="34.7896%" y="565" width="0.0809%" height="15" fill="rgb(238,42,45)" fg:x="430" fg:w="1"/><text x="35.0396%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="34.7896%" y="549" width="0.0809%" height="15" fill="rgb(219,65,47)" fg:x="430" fg:w="1"/><text x="35.0396%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.8706%" y="549" width="0.1618%" height="15" fill="rgb(248,153,12)" fg:x="431" fg:w="2"/><text x="35.1206%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.8706%" y="533" width="0.1618%" height="15" fill="rgb(240,118,4)" fg:x="431" fg:w="2"/><text x="35.1206%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="34.8706%" y="517" width="0.1618%" height="15" fill="rgb(250,96,34)" fg:x="431" fg:w="2"/><text x="35.1206%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9515%" y="501" width="0.0809%" height="15" fill="rgb(221,15,4)" fg:x="432" fg:w="1"/><text x="35.2015%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.9515%" y="485" width="0.0809%" height="15" fill="rgb(217,149,33)" fg:x="432" fg:w="1"/><text x="35.2015%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.9515%" y="469" width="0.0809%" height="15" fill="rgb(213,58,29)" fg:x="432" fg:w="1"/><text x="35.2015%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.9515%" y="453" width="0.0809%" height="15" fill="rgb(236,218,9)" fg:x="432" fg:w="1"/><text x="35.2015%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.9515%" y="437" width="0.0809%" height="15" fill="rgb(248,40,19)" fg:x="432" fg:w="1"/><text x="35.2015%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.9515%" y="421" width="0.0809%" height="15" fill="rgb(212,17,6)" fg:x="432" fg:w="1"/><text x="35.2015%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.9515%" y="405" width="0.0809%" height="15" fill="rgb(206,212,20)" fg:x="432" fg:w="1"/><text x="35.2015%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.9515%" y="389" width="0.0809%" height="15" fill="rgb(229,80,37)" fg:x="432" fg:w="1"/><text x="35.2015%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.9515%" y="373" width="0.0809%" height="15" fill="rgb(253,8,37)" fg:x="432" fg:w="1"/><text x="35.2015%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.9515%" y="357" width="0.0809%" height="15" fill="rgb(215,16,43)" fg:x="432" fg:w="1"/><text x="35.2015%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.9515%" y="341" width="0.0809%" height="15" fill="rgb(236,219,16)" fg:x="432" fg:w="1"/><text x="35.2015%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.0324%" y="549" width="0.0809%" height="15" fill="rgb(251,0,3)" fg:x="433" fg:w="1"/><text x="35.2824%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 1.05%)</title><rect x="35.1133%" y="549" width="1.0518%" height="15" fill="rgb(207,133,37)" fg:x="434" fg:w="13"/><text x="35.3633%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 1.05%)</title><rect x="35.1133%" y="533" width="1.0518%" height="15" fill="rgb(250,143,20)" fg:x="434" fg:w="13"/><text x="35.3633%" y="543.50"></text></g><g><title>realloc (13 samples, 1.05%)</title><rect x="35.1133%" y="517" width="1.0518%" height="15" fill="rgb(242,19,50)" fg:x="434" fg:w="13"/><text x="35.3633%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="36.1650%" y="549" width="0.0809%" height="15" fill="rgb(206,124,43)" fg:x="447" fg:w="1"/><text x="36.4150%" y="559.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (19 samples, 1.54%)</title><rect x="34.8706%" y="565" width="1.5372%" height="15" fill="rgb(229,4,38)" fg:x="431" fg:w="19"/><text x="35.1206%" y="575.50"></text></g><g><title>plugins_core::tools::contained_by (2 samples, 0.16%)</title><rect x="36.2460%" y="549" width="0.1618%" height="15" fill="rgb(247,220,45)" fg:x="448" fg:w="2"/><text x="36.4960%" y="559.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.16%)</title><rect x="36.2460%" y="533" width="0.1618%" height="15" fill="rgb(247,195,0)" fg:x="448" fg:w="2"/><text x="36.4960%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="36.2460%" y="517" width="0.1618%" height="15" fill="rgb(252,12,19)" fg:x="448" fg:w="2"/><text x="36.4960%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="36.2460%" y="501" width="0.1618%" height="15" fill="rgb(222,49,50)" fg:x="448" fg:w="2"/><text x="36.4960%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="36.3269%" y="485" width="0.0809%" height="15" fill="rgb(209,157,28)" fg:x="449" fg:w="1"/><text x="36.5769%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="36.3269%" y="469" width="0.0809%" height="15" fill="rgb(238,174,24)" fg:x="449" fg:w="1"/><text x="36.5769%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="36.3269%" y="453" width="0.0809%" height="15" fill="rgb(224,17,28)" fg:x="449" fg:w="1"/><text x="36.5769%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="36.3269%" y="437" width="0.0809%" height="15" fill="rgb(249,7,29)" fg:x="449" fg:w="1"/><text x="36.5769%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="36.3269%" y="421" width="0.0809%" height="15" fill="rgb(243,178,4)" fg:x="449" fg:w="1"/><text x="36.5769%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="36.3269%" y="405" width="0.0809%" height="15" fill="rgb(246,138,35)" fg:x="449" fg:w="1"/><text x="36.5769%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="36.3269%" y="389" width="0.0809%" height="15" fill="rgb(251,85,18)" fg:x="449" fg:w="1"/><text x="36.5769%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.3269%" y="373" width="0.0809%" height="15" fill="rgb(254,55,9)" fg:x="449" fg:w="1"/><text x="36.5769%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.3269%" y="357" width="0.0809%" height="15" fill="rgb(248,4,50)" fg:x="449" fg:w="1"/><text x="36.5769%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="36.3269%" y="341" width="0.0809%" height="15" fill="rgb(215,208,14)" fg:x="449" fg:w="1"/><text x="36.5769%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="36.3269%" y="325" width="0.0809%" height="15" fill="rgb(218,37,18)" fg:x="449" fg:w="1"/><text x="36.5769%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="36.3269%" y="309" width="0.0809%" height="15" fill="rgb(206,104,13)" fg:x="449" fg:w="1"/><text x="36.5769%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="36.3269%" y="293" width="0.0809%" height="15" fill="rgb(248,94,22)" fg:x="449" fg:w="1"/><text x="36.5769%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="36.3269%" y="277" width="0.0809%" height="15" fill="rgb(235,42,46)" fg:x="449" fg:w="1"/><text x="36.5769%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="36.3269%" y="261" width="0.0809%" height="15" fill="rgb(220,228,48)" fg:x="449" fg:w="1"/><text x="36.5769%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="36.3269%" y="245" width="0.0809%" height="15" fill="rgb(216,58,12)" fg:x="449" fg:w="1"/><text x="36.5769%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="36.3269%" y="229" width="0.0809%" height="15" fill="rgb(223,97,52)" fg:x="449" fg:w="1"/><text x="36.5769%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="36.3269%" y="213" width="0.0809%" height="15" fill="rgb(208,159,17)" fg:x="449" fg:w="1"/><text x="36.5769%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="36.3269%" y="197" width="0.0809%" height="15" fill="rgb(215,172,9)" fg:x="449" fg:w="1"/><text x="36.5769%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="36.3269%" y="181" width="0.0809%" height="15" fill="rgb(252,175,30)" fg:x="449" fg:w="1"/><text x="36.5769%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="36.3269%" y="165" width="0.0809%" height="15" fill="rgb(209,159,10)" fg:x="449" fg:w="1"/><text x="36.5769%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="36.3269%" y="149" width="0.0809%" height="15" fill="rgb(229,73,51)" fg:x="449" fg:w="1"/><text x="36.5769%" y="159.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (21 samples, 1.70%)</title><rect x="34.7896%" y="597" width="1.6990%" height="15" fill="rgb(208,212,43)" fg:x="430" fg:w="21"/><text x="35.0396%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (21 samples, 1.70%)</title><rect x="34.7896%" y="581" width="1.6990%" height="15" fill="rgb(254,123,53)" fg:x="430" fg:w="21"/><text x="35.0396%" y="591.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (1 samples, 0.08%)</title><rect x="36.4078%" y="565" width="0.0809%" height="15" fill="rgb(254,128,49)" fg:x="450" fg:w="1"/><text x="36.6578%" y="575.50"></text></g><g><title>plugins_core::finding::matches_description (1 samples, 0.08%)</title><rect x="36.4078%" y="549" width="0.0809%" height="15" fill="rgb(246,16,16)" fg:x="450" fg:w="1"/><text x="36.6578%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="36.4078%" y="533" width="0.0809%" height="15" fill="rgb(209,200,1)" fg:x="450" fg:w="1"/><text x="36.6578%" y="543.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="36.4078%" y="517" width="0.0809%" height="15" fill="rgb(235,9,3)" fg:x="450" fg:w="1"/><text x="36.6578%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.4078%" y="501" width="0.0809%" height="15" fill="rgb(233,121,54)" fg:x="450" fg:w="1"/><text x="36.6578%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="36.4078%" y="485" width="0.0809%" height="15" fill="rgb(236,80,25)" fg:x="450" fg:w="1"/><text x="36.6578%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.4887%" y="485" width="0.0809%" height="15" fill="rgb(220,44,24)" fg:x="451" fg:w="1"/><text x="36.7387%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.4887%" y="469" width="0.0809%" height="15" fill="rgb(236,225,16)" fg:x="451" fg:w="1"/><text x="36.7387%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.4887%" y="453" width="0.0809%" height="15" fill="rgb(237,140,0)" fg:x="451" fg:w="1"/><text x="36.7387%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.4887%" y="437" width="0.0809%" height="15" fill="rgb(243,225,53)" fg:x="451" fg:w="1"/><text x="36.7387%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.4887%" y="421" width="0.0809%" height="15" fill="rgb(240,140,30)" fg:x="451" fg:w="1"/><text x="36.7387%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.4887%" y="405" width="0.0809%" height="15" fill="rgb(217,51,16)" fg:x="451" fg:w="1"/><text x="36.7387%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.4887%" y="389" width="0.0809%" height="15" fill="rgb(245,75,50)" fg:x="451" fg:w="1"/><text x="36.7387%" y="399.50"></text></g><g><title>kernel::surround::Surroundings::unpack (3 samples, 0.24%)</title><rect x="36.4887%" y="597" width="0.2427%" height="15" fill="rgb(208,174,22)" fg:x="451" fg:w="3"/><text x="36.7387%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="36.4887%" y="581" width="0.2427%" height="15" fill="rgb(219,98,50)" fg:x="451" fg:w="3"/><text x="36.7387%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="36.4887%" y="565" width="0.2427%" height="15" fill="rgb(243,138,3)" fg:x="451" fg:w="3"/><text x="36.7387%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="36.4887%" y="549" width="0.2427%" height="15" fill="rgb(243,132,26)" fg:x="451" fg:w="3"/><text x="36.7387%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="36.4887%" y="533" width="0.2427%" height="15" fill="rgb(250,201,8)" fg:x="451" fg:w="3"/><text x="36.7387%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="36.4887%" y="517" width="0.2427%" height="15" fill="rgb(213,91,26)" fg:x="451" fg:w="3"/><text x="36.7387%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="36.4887%" y="501" width="0.2427%" height="15" fill="rgb(229,117,1)" fg:x="451" fg:w="3"/><text x="36.7387%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="36.5696%" y="485" width="0.1618%" height="15" fill="rgb(229,24,6)" fg:x="452" fg:w="2"/><text x="36.8196%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="36.5696%" y="469" width="0.1618%" height="15" fill="rgb(206,69,11)" fg:x="452" fg:w="2"/><text x="36.8196%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.7314%" y="549" width="0.1618%" height="15" fill="rgb(234,111,34)" fg:x="454" fg:w="2"/><text x="36.9814%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.8123%" y="533" width="0.0809%" height="15" fill="rgb(213,187,51)" fg:x="455" fg:w="1"/><text x="37.0623%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="36.8123%" y="517" width="0.0809%" height="15" fill="rgb(207,45,11)" fg:x="455" fg:w="1"/><text x="37.0623%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="36.8932%" y="549" width="0.0809%" height="15" fill="rgb(225,151,47)" fg:x="456" fg:w="1"/><text x="37.1432%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="36.8932%" y="533" width="0.0809%" height="15" fill="rgb(211,226,5)" fg:x="456" fg:w="1"/><text x="37.1432%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="36.8932%" y="517" width="0.0809%" height="15" fill="rgb(214,83,52)" fg:x="456" fg:w="1"/><text x="37.1432%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="36.8932%" y="501" width="0.0809%" height="15" fill="rgb(229,49,53)" fg:x="456" fg:w="1"/><text x="37.1432%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="36.8932%" y="485" width="0.0809%" height="15" fill="rgb(246,8,28)" fg:x="456" fg:w="1"/><text x="37.1432%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="36.8932%" y="469" width="0.0809%" height="15" fill="rgb(207,28,41)" fg:x="456" fg:w="1"/><text x="37.1432%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.8932%" y="453" width="0.0809%" height="15" fill="rgb(254,22,25)" fg:x="456" fg:w="1"/><text x="37.1432%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.8932%" y="437" width="0.0809%" height="15" fill="rgb(209,120,42)" fg:x="456" fg:w="1"/><text x="37.1432%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.8932%" y="421" width="0.0809%" height="15" fill="rgb(216,194,18)" fg:x="456" fg:w="1"/><text x="37.1432%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.8932%" y="405" width="0.0809%" height="15" fill="rgb(213,70,17)" fg:x="456" fg:w="1"/><text x="37.1432%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.8932%" y="389" width="0.0809%" height="15" fill="rgb(228,66,19)" fg:x="456" fg:w="1"/><text x="37.1432%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.8932%" y="373" width="0.0809%" height="15" fill="rgb(236,221,54)" fg:x="456" fg:w="1"/><text x="37.1432%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.8932%" y="357" width="0.0809%" height="15" fill="rgb(207,175,15)" fg:x="456" fg:w="1"/><text x="37.1432%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.8932%" y="341" width="0.0809%" height="15" fill="rgb(234,76,8)" fg:x="456" fg:w="1"/><text x="37.1432%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.8932%" y="325" width="0.0809%" height="15" fill="rgb(243,106,0)" fg:x="456" fg:w="1"/><text x="37.1432%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.8932%" y="309" width="0.0809%" height="15" fill="rgb(208,48,19)" fg:x="456" fg:w="1"/><text x="37.1432%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.8932%" y="293" width="0.0809%" height="15" fill="rgb(251,50,29)" fg:x="456" fg:w="1"/><text x="37.1432%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.8932%" y="277" width="0.0809%" height="15" fill="rgb(222,31,49)" fg:x="456" fg:w="1"/><text x="37.1432%" y="287.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="36.7314%" y="581" width="0.3236%" height="15" fill="rgb(232,33,18)" fg:x="454" fg:w="4"/><text x="36.9814%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="36.7314%" y="565" width="0.3236%" height="15" fill="rgb(209,1,44)" fg:x="454" fg:w="4"/><text x="36.9814%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.9741%" y="549" width="0.0809%" height="15" fill="rgb(211,7,1)" fg:x="457" fg:w="1"/><text x="37.2241%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9741%" y="533" width="0.0809%" height="15" fill="rgb(224,111,27)" fg:x="457" fg:w="1"/><text x="37.2241%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.9741%" y="517" width="0.0809%" height="15" fill="rgb(252,195,39)" fg:x="457" fg:w="1"/><text x="37.2241%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.0550%" y="517" width="0.0809%" height="15" fill="rgb(237,198,5)" fg:x="458" fg:w="1"/><text x="37.3050%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.1359%" y="517" width="0.0809%" height="15" fill="rgb(232,148,1)" fg:x="459" fg:w="1"/><text x="37.3859%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.1359%" y="501" width="0.0809%" height="15" fill="rgb(249,41,3)" fg:x="459" fg:w="1"/><text x="37.3859%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="37.0550%" y="549" width="0.2427%" height="15" fill="rgb(215,14,33)" fg:x="458" fg:w="3"/><text x="37.3050%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="37.0550%" y="533" width="0.2427%" height="15" fill="rgb(209,146,24)" fg:x="458" fg:w="3"/><text x="37.3050%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.2168%" y="517" width="0.0809%" height="15" fill="rgb(219,51,47)" fg:x="460" fg:w="1"/><text x="37.4668%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="37.2168%" y="501" width="0.0809%" height="15" fill="rgb(234,217,40)" fg:x="460" fg:w="1"/><text x="37.4668%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="37.2168%" y="485" width="0.0809%" height="15" fill="rgb(228,34,26)" fg:x="460" fg:w="1"/><text x="37.4668%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.2168%" y="469" width="0.0809%" height="15" fill="rgb(224,50,29)" fg:x="460" fg:w="1"/><text x="37.4668%" y="479.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (4 samples, 0.32%)</title><rect x="37.0550%" y="581" width="0.3236%" height="15" fill="rgb(205,79,51)" fg:x="458" fg:w="4"/><text x="37.3050%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (4 samples, 0.32%)</title><rect x="37.0550%" y="565" width="0.3236%" height="15" fill="rgb(218,136,28)" fg:x="458" fg:w="4"/><text x="37.3050%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="37.2977%" y="549" width="0.0809%" height="15" fill="rgb(220,150,10)" fg:x="461" fg:w="1"/><text x="37.5477%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.2977%" y="533" width="0.0809%" height="15" fill="rgb(242,158,47)" fg:x="461" fg:w="1"/><text x="37.5477%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="37.2977%" y="517" width="0.0809%" height="15" fill="rgb(209,68,0)" fg:x="461" fg:w="1"/><text x="37.5477%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="37.2977%" y="501" width="0.0809%" height="15" fill="rgb(208,13,41)" fg:x="461" fg:w="1"/><text x="37.5477%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="37.2977%" y="485" width="0.0809%" height="15" fill="rgb(226,201,7)" fg:x="461" fg:w="1"/><text x="37.5477%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.2977%" y="469" width="0.0809%" height="15" fill="rgb(236,103,26)" fg:x="461" fg:w="1"/><text x="37.5477%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.2977%" y="453" width="0.0809%" height="15" fill="rgb(243,162,8)" fg:x="461" fg:w="1"/><text x="37.5477%" y="463.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="37.3786%" y="581" width="0.0809%" height="15" fill="rgb(237,225,11)" fg:x="462" fg:w="1"/><text x="37.6286%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="37.3786%" y="565" width="0.0809%" height="15" fill="rgb(247,186,32)" fg:x="462" fg:w="1"/><text x="37.6286%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="37.3786%" y="549" width="0.0809%" height="15" fill="rgb(215,26,28)" fg:x="462" fg:w="1"/><text x="37.6286%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="37.3786%" y="533" width="0.0809%" height="15" fill="rgb(208,121,6)" fg:x="462" fg:w="1"/><text x="37.6286%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="37.3786%" y="517" width="0.0809%" height="15" fill="rgb(225,91,3)" fg:x="462" fg:w="1"/><text x="37.6286%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="37.3786%" y="501" width="0.0809%" height="15" fill="rgb(246,119,36)" fg:x="462" fg:w="1"/><text x="37.6286%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="37.3786%" y="485" width="0.0809%" height="15" fill="rgb(254,173,2)" fg:x="462" fg:w="1"/><text x="37.6286%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.3786%" y="469" width="0.0809%" height="15" fill="rgb(209,87,54)" fg:x="462" fg:w="1"/><text x="37.6286%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.3786%" y="453" width="0.0809%" height="15" fill="rgb(223,216,20)" fg:x="462" fg:w="1"/><text x="37.6286%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.3786%" y="437" width="0.0809%" height="15" fill="rgb(220,31,8)" fg:x="462" fg:w="1"/><text x="37.6286%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="37.3786%" y="421" width="0.0809%" height="15" fill="rgb(220,185,15)" fg:x="462" fg:w="1"/><text x="37.6286%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="37.3786%" y="405" width="0.0809%" height="15" fill="rgb(247,190,50)" fg:x="462" fg:w="1"/><text x="37.6286%" y="415.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="37.3786%" y="389" width="0.0809%" height="15" fill="rgb(239,173,47)" fg:x="462" fg:w="1"/><text x="37.6286%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (35 samples, 2.83%)</title><rect x="34.7896%" y="613" width="2.8317%" height="15" fill="rgb(218,190,42)" fg:x="430" fg:w="35"/><text x="35.0396%" y="623.50">&lt;p..</text></g><g><title>plugins_core::tools::move_between (11 samples, 0.89%)</title><rect x="36.7314%" y="597" width="0.8900%" height="15" fill="rgb(251,207,16)" fg:x="454" fg:w="11"/><text x="36.9814%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="37.4595%" y="581" width="0.1618%" height="15" fill="rgb(222,199,47)" fg:x="463" fg:w="2"/><text x="37.7095%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="37.5405%" y="565" width="0.0809%" height="15" fill="rgb(245,190,7)" fg:x="464" fg:w="1"/><text x="37.7905%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="37.5405%" y="549" width="0.0809%" height="15" fill="rgb(239,85,38)" fg:x="464" fg:w="1"/><text x="37.7905%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="37.5405%" y="533" width="0.0809%" height="15" fill="rgb(229,69,51)" fg:x="464" fg:w="1"/><text x="37.7905%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="37.5405%" y="517" width="0.0809%" height="15" fill="rgb(231,104,51)" fg:x="464" fg:w="1"/><text x="37.7905%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="37.5405%" y="501" width="0.0809%" height="15" fill="rgb(235,49,4)" fg:x="464" fg:w="1"/><text x="37.7905%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="37.5405%" y="485" width="0.0809%" height="15" fill="rgb(246,166,20)" fg:x="464" fg:w="1"/><text x="37.7905%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.5405%" y="469" width="0.0809%" height="15" fill="rgb(230,119,37)" fg:x="464" fg:w="1"/><text x="37.7905%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.5405%" y="453" width="0.0809%" height="15" fill="rgb(234,77,34)" fg:x="464" fg:w="1"/><text x="37.7905%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.5405%" y="437" width="0.0809%" height="15" fill="rgb(211,222,33)" fg:x="464" fg:w="1"/><text x="37.7905%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="37.5405%" y="421" width="0.0809%" height="15" fill="rgb(226,45,42)" fg:x="464" fg:w="1"/><text x="37.7905%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="37.5405%" y="405" width="0.0809%" height="15" fill="rgb(215,174,28)" fg:x="464" fg:w="1"/><text x="37.7905%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="37.6214%" y="613" width="0.0809%" height="15" fill="rgb(254,173,49)" fg:x="465" fg:w="1"/><text x="37.8714%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.6214%" y="597" width="0.0809%" height="15" fill="rgb(229,191,6)" fg:x="465" fg:w="1"/><text x="37.8714%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.6214%" y="581" width="0.0809%" height="15" fill="rgb(212,145,22)" fg:x="465" fg:w="1"/><text x="37.8714%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.6214%" y="565" width="0.0809%" height="15" fill="rgb(226,6,51)" fg:x="465" fg:w="1"/><text x="37.8714%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="37.6214%" y="549" width="0.0809%" height="15" fill="rgb(227,128,8)" fg:x="465" fg:w="1"/><text x="37.8714%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="37.6214%" y="533" width="0.0809%" height="15" fill="rgb(205,24,10)" fg:x="465" fg:w="1"/><text x="37.8714%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="37.6214%" y="517" width="0.0809%" height="15" fill="rgb(217,147,27)" fg:x="465" fg:w="1"/><text x="37.8714%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.6214%" y="501" width="0.0809%" height="15" fill="rgb(250,82,42)" fg:x="465" fg:w="1"/><text x="37.8714%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.6214%" y="485" width="0.0809%" height="15" fill="rgb(248,93,17)" fg:x="465" fg:w="1"/><text x="37.8714%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.6214%" y="469" width="0.0809%" height="15" fill="rgb(254,212,40)" fg:x="465" fg:w="1"/><text x="37.8714%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.6214%" y="453" width="0.0809%" height="15" fill="rgb(229,209,2)" fg:x="465" fg:w="1"/><text x="37.8714%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="37.6214%" y="437" width="0.0809%" height="15" fill="rgb(211,50,43)" fg:x="465" fg:w="1"/><text x="37.8714%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="37.6214%" y="421" width="0.0809%" height="15" fill="rgb(245,196,29)" fg:x="465" fg:w="1"/><text x="37.8714%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="37.6214%" y="405" width="0.0809%" height="15" fill="rgb(216,132,13)" fg:x="465" fg:w="1"/><text x="37.8714%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="37.6214%" y="389" width="0.0809%" height="15" fill="rgb(251,108,21)" fg:x="465" fg:w="1"/><text x="37.8714%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="37.6214%" y="373" width="0.0809%" height="15" fill="rgb(229,174,54)" fg:x="465" fg:w="1"/><text x="37.8714%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="37.7023%" y="613" width="0.0809%" height="15" fill="rgb(211,175,47)" fg:x="466" fg:w="1"/><text x="37.9523%" y="623.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="38.0259%" y="565" width="0.0809%" height="15" fill="rgb(234,5,37)" fg:x="470" fg:w="1"/><text x="38.2759%" y="575.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="38.0259%" y="549" width="0.0809%" height="15" fill="rgb(244,150,43)" fg:x="470" fg:w="1"/><text x="38.2759%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.0259%" y="533" width="0.0809%" height="15" fill="rgb(242,172,38)" fg:x="470" fg:w="1"/><text x="38.2759%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.1068%" y="485" width="0.0809%" height="15" fill="rgb(205,27,8)" fg:x="471" fg:w="1"/><text x="38.3568%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.1877%" y="485" width="0.0809%" height="15" fill="rgb(217,57,3)" fg:x="472" fg:w="1"/><text x="38.4377%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.1877%" y="469" width="0.0809%" height="15" fill="rgb(242,21,38)" fg:x="472" fg:w="1"/><text x="38.4377%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.2686%" y="485" width="0.0809%" height="15" fill="rgb(209,64,43)" fg:x="473" fg:w="1"/><text x="38.5186%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.2686%" y="469" width="0.0809%" height="15" fill="rgb(222,2,46)" fg:x="473" fg:w="1"/><text x="38.5186%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.2686%" y="453" width="0.0809%" height="15" fill="rgb(218,19,44)" fg:x="473" fg:w="1"/><text x="38.5186%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.2686%" y="437" width="0.0809%" height="15" fill="rgb(240,203,42)" fg:x="473" fg:w="1"/><text x="38.5186%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="38.2686%" y="421" width="0.0809%" height="15" fill="rgb(229,23,45)" fg:x="473" fg:w="1"/><text x="38.5186%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.32%)</title><rect x="38.1068%" y="549" width="0.3236%" height="15" fill="rgb(205,228,51)" fg:x="471" fg:w="4"/><text x="38.3568%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="38.1068%" y="533" width="0.3236%" height="15" fill="rgb(239,36,20)" fg:x="471" fg:w="4"/><text x="38.3568%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="38.1068%" y="517" width="0.3236%" height="15" fill="rgb(248,172,27)" fg:x="471" fg:w="4"/><text x="38.3568%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="38.1068%" y="501" width="0.3236%" height="15" fill="rgb(244,55,32)" fg:x="471" fg:w="4"/><text x="38.3568%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.3495%" y="485" width="0.0809%" height="15" fill="rgb(215,97,16)" fg:x="474" fg:w="1"/><text x="38.5995%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.3495%" y="469" width="0.0809%" height="15" fill="rgb(224,80,29)" fg:x="474" fg:w="1"/><text x="38.5995%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="38.3495%" y="453" width="0.0809%" height="15" fill="rgb(216,93,47)" fg:x="474" fg:w="1"/><text x="38.5995%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.3495%" y="437" width="0.0809%" height="15" fill="rgb(238,159,10)" fg:x="474" fg:w="1"/><text x="38.5995%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.3495%" y="421" width="0.0809%" height="15" fill="rgb(223,98,29)" fg:x="474" fg:w="1"/><text x="38.5995%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.3495%" y="405" width="0.0809%" height="15" fill="rgb(210,176,23)" fg:x="474" fg:w="1"/><text x="38.5995%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="38.3495%" y="389" width="0.0809%" height="15" fill="rgb(242,162,27)" fg:x="474" fg:w="1"/><text x="38.5995%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.4304%" y="501" width="0.0809%" height="15" fill="rgb(245,109,32)" fg:x="475" fg:w="1"/><text x="38.6804%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.6731%" y="437" width="0.0809%" height="15" fill="rgb(248,87,8)" fg:x="478" fg:w="1"/><text x="38.9231%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="38.6731%" y="421" width="0.0809%" height="15" fill="rgb(250,160,50)" fg:x="478" fg:w="1"/><text x="38.9231%" y="431.50"></text></g><g><title>engine::internal::Entities::prepare_entity (11 samples, 0.89%)</title><rect x="37.9450%" y="581" width="0.8900%" height="15" fill="rgb(246,165,25)" fg:x="469" fg:w="11"/><text x="38.1950%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity (9 samples, 0.73%)</title><rect x="38.1068%" y="565" width="0.7282%" height="15" fill="rgb(249,219,3)" fg:x="471" fg:w="9"/><text x="38.3568%" y="575.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="38.4304%" y="549" width="0.4045%" height="15" fill="rgb(226,66,5)" fg:x="475" fg:w="5"/><text x="38.6804%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="38.4304%" y="533" width="0.4045%" height="15" fill="rgb(250,220,43)" fg:x="475" fg:w="5"/><text x="38.6804%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="38.4304%" y="517" width="0.4045%" height="15" fill="rgb(225,111,31)" fg:x="475" fg:w="5"/><text x="38.6804%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="38.5113%" y="501" width="0.3236%" height="15" fill="rgb(248,106,18)" fg:x="476" fg:w="4"/><text x="38.7613%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="38.5113%" y="485" width="0.3236%" height="15" fill="rgb(220,226,45)" fg:x="476" fg:w="4"/><text x="38.7613%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="38.5113%" y="469" width="0.3236%" height="15" fill="rgb(208,58,53)" fg:x="476" fg:w="4"/><text x="38.7613%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="38.6731%" y="453" width="0.1618%" height="15" fill="rgb(209,133,1)" fg:x="478" fg:w="2"/><text x="38.9231%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="38.7540%" y="437" width="0.0809%" height="15" fill="rgb(228,216,27)" fg:x="479" fg:w="1"/><text x="39.0040%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (12 samples, 0.97%)</title><rect x="37.9450%" y="597" width="0.9709%" height="15" fill="rgb(238,155,2)" fg:x="469" fg:w="12"/><text x="38.1950%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="38.8350%" y="581" width="0.0809%" height="15" fill="rgb(244,99,37)" fg:x="480" fg:w="1"/><text x="39.0850%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="38.8350%" y="565" width="0.0809%" height="15" fill="rgb(254,32,3)" fg:x="480" fg:w="1"/><text x="39.0850%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="38.8350%" y="549" width="0.0809%" height="15" fill="rgb(234,46,50)" fg:x="480" fg:w="1"/><text x="39.0850%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.8350%" y="533" width="0.0809%" height="15" fill="rgb(232,118,51)" fg:x="480" fg:w="1"/><text x="39.0850%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.8350%" y="517" width="0.0809%" height="15" fill="rgb(207,24,32)" fg:x="480" fg:w="1"/><text x="39.0850%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="38.8350%" y="501" width="0.0809%" height="15" fill="rgb(208,107,43)" fg:x="480" fg:w="1"/><text x="39.0850%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.8350%" y="485" width="0.0809%" height="15" fill="rgb(231,28,9)" fg:x="480" fg:w="1"/><text x="39.0850%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.8350%" y="469" width="0.0809%" height="15" fill="rgb(241,204,15)" fg:x="480" fg:w="1"/><text x="39.0850%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.8350%" y="453" width="0.0809%" height="15" fill="rgb(214,54,15)" fg:x="480" fg:w="1"/><text x="39.0850%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="38.8350%" y="437" width="0.0809%" height="15" fill="rgb(230,12,28)" fg:x="480" fg:w="1"/><text x="39.0850%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="38.8350%" y="421" width="0.0809%" height="15" fill="rgb(221,171,5)" fg:x="480" fg:w="1"/><text x="39.0850%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.8350%" y="405" width="0.0809%" height="15" fill="rgb(207,72,25)" fg:x="480" fg:w="1"/><text x="39.0850%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="38.8350%" y="389" width="0.0809%" height="15" fill="rgb(249,79,37)" fg:x="480" fg:w="1"/><text x="39.0850%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.8350%" y="373" width="0.0809%" height="15" fill="rgb(209,98,49)" fg:x="480" fg:w="1"/><text x="39.0850%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.8350%" y="357" width="0.0809%" height="15" fill="rgb(221,62,13)" fg:x="480" fg:w="1"/><text x="39.0850%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="38.8350%" y="341" width="0.0809%" height="15" fill="rgb(223,39,6)" fg:x="480" fg:w="1"/><text x="39.0850%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="38.8350%" y="325" width="0.0809%" height="15" fill="rgb(246,163,20)" fg:x="480" fg:w="1"/><text x="39.0850%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="38.8350%" y="309" width="0.0809%" height="15" fill="rgb(211,111,29)" fg:x="480" fg:w="1"/><text x="39.0850%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="38.8350%" y="293" width="0.0809%" height="15" fill="rgb(243,118,5)" fg:x="480" fg:w="1"/><text x="39.0850%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="38.8350%" y="277" width="0.0809%" height="15" fill="rgb(240,144,52)" fg:x="480" fg:w="1"/><text x="39.0850%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.9159%" y="597" width="0.0809%" height="15" fill="rgb(244,158,36)" fg:x="481" fg:w="1"/><text x="39.1659%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="38.9968%" y="597" width="0.1618%" height="15" fill="rgb(241,109,37)" fg:x="482" fg:w="2"/><text x="39.2468%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="38.9968%" y="581" width="0.1618%" height="15" fill="rgb(213,95,32)" fg:x="482" fg:w="2"/><text x="39.2468%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.9968%" y="565" width="0.1618%" height="15" fill="rgb(252,193,9)" fg:x="482" fg:w="2"/><text x="39.2468%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.3204%" y="581" width="0.0809%" height="15" fill="rgb(225,213,21)" fg:x="486" fg:w="1"/><text x="39.5704%" y="591.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.16%)</title><rect x="39.4013%" y="565" width="0.1618%" height="15" fill="rgb(220,172,46)" fg:x="487" fg:w="2"/><text x="39.6513%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="39.4822%" y="549" width="0.0809%" height="15" fill="rgb(235,75,41)" fg:x="488" fg:w="1"/><text x="39.7322%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="39.4822%" y="533" width="0.0809%" height="15" fill="rgb(213,86,9)" fg:x="488" fg:w="1"/><text x="39.7322%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="39.4822%" y="517" width="0.0809%" height="15" fill="rgb(238,127,51)" fg:x="488" fg:w="1"/><text x="39.7322%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="39.4822%" y="501" width="0.0809%" height="15" fill="rgb(215,2,54)" fg:x="488" fg:w="1"/><text x="39.7322%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.4822%" y="485" width="0.0809%" height="15" fill="rgb(245,80,6)" fg:x="488" fg:w="1"/><text x="39.7322%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.4822%" y="469" width="0.0809%" height="15" fill="rgb(233,106,42)" fg:x="488" fg:w="1"/><text x="39.7322%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="39.4822%" y="453" width="0.0809%" height="15" fill="rgb(244,86,38)" fg:x="488" fg:w="1"/><text x="39.7322%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.4822%" y="437" width="0.0809%" height="15" fill="rgb(242,167,7)" fg:x="488" fg:w="1"/><text x="39.7322%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.4822%" y="421" width="0.0809%" height="15" fill="rgb(218,216,3)" fg:x="488" fg:w="1"/><text x="39.7322%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.4822%" y="405" width="0.0809%" height="15" fill="rgb(206,136,36)" fg:x="488" fg:w="1"/><text x="39.7322%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.4822%" y="389" width="0.0809%" height="15" fill="rgb(206,206,15)" fg:x="488" fg:w="1"/><text x="39.7322%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="39.4822%" y="373" width="0.0809%" height="15" fill="rgb(207,163,34)" fg:x="488" fg:w="1"/><text x="39.7322%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="39.4822%" y="357" width="0.0809%" height="15" fill="rgb(240,127,22)" fg:x="488" fg:w="1"/><text x="39.7322%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="39.4822%" y="341" width="0.0809%" height="15" fill="rgb(227,49,5)" fg:x="488" fg:w="1"/><text x="39.7322%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="39.4822%" y="325" width="0.0809%" height="15" fill="rgb(231,8,6)" fg:x="488" fg:w="1"/><text x="39.7322%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.4822%" y="309" width="0.0809%" height="15" fill="rgb(223,21,24)" fg:x="488" fg:w="1"/><text x="39.7322%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.4822%" y="293" width="0.0809%" height="15" fill="rgb(244,44,52)" fg:x="488" fg:w="1"/><text x="39.7322%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="39.4822%" y="277" width="0.0809%" height="15" fill="rgb(207,73,28)" fg:x="488" fg:w="1"/><text x="39.7322%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="39.4822%" y="261" width="0.0809%" height="15" fill="rgb(234,215,10)" fg:x="488" fg:w="1"/><text x="39.7322%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.4822%" y="245" width="0.0809%" height="15" fill="rgb(236,85,3)" fg:x="488" fg:w="1"/><text x="39.7322%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="39.4822%" y="229" width="0.0809%" height="15" fill="rgb(236,102,39)" fg:x="488" fg:w="1"/><text x="39.7322%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="39.4822%" y="213" width="0.0809%" height="15" fill="rgb(243,50,8)" fg:x="488" fg:w="1"/><text x="39.7322%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="39.4822%" y="197" width="0.0809%" height="15" fill="rgb(207,111,4)" fg:x="488" fg:w="1"/><text x="39.7322%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="39.4822%" y="181" width="0.0809%" height="15" fill="rgb(230,52,42)" fg:x="488" fg:w="1"/><text x="39.7322%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.6440%" y="533" width="0.0809%" height="15" fill="rgb(252,178,50)" fg:x="490" fg:w="1"/><text x="39.8940%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6440%" y="517" width="0.0809%" height="15" fill="rgb(234,46,35)" fg:x="490" fg:w="1"/><text x="39.8940%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.6440%" y="501" width="0.0809%" height="15" fill="rgb(228,69,37)" fg:x="490" fg:w="1"/><text x="39.8940%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.6440%" y="485" width="0.0809%" height="15" fill="rgb(221,21,11)" fg:x="490" fg:w="1"/><text x="39.8940%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.6440%" y="469" width="0.0809%" height="15" fill="rgb(223,56,9)" fg:x="490" fg:w="1"/><text x="39.8940%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.6440%" y="453" width="0.0809%" height="15" fill="rgb(234,30,19)" fg:x="490" fg:w="1"/><text x="39.8940%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="39.6440%" y="437" width="0.0809%" height="15" fill="rgb(211,64,54)" fg:x="490" fg:w="1"/><text x="39.8940%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="39.6440%" y="421" width="0.0809%" height="15" fill="rgb(250,189,5)" fg:x="490" fg:w="1"/><text x="39.8940%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="39.7249%" y="517" width="0.0809%" height="15" fill="rgb(214,180,13)" fg:x="491" fg:w="1"/><text x="39.9749%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="39.8058%" y="373" width="0.1618%" height="15" fill="rgb(238,40,40)" fg:x="492" fg:w="2"/><text x="40.0558%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="39.8058%" y="357" width="0.1618%" height="15" fill="rgb(214,101,38)" fg:x="492" fg:w="2"/><text x="40.0558%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="39.8867%" y="341" width="0.0809%" height="15" fill="rgb(242,65,53)" fg:x="493" fg:w="1"/><text x="40.1367%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="39.8867%" y="325" width="0.0809%" height="15" fill="rgb(230,22,45)" fg:x="493" fg:w="1"/><text x="40.1367%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="39.8867%" y="309" width="0.0809%" height="15" fill="rgb(223,77,1)" fg:x="493" fg:w="1"/><text x="40.1367%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="39.8867%" y="293" width="0.0809%" height="15" fill="rgb(227,33,37)" fg:x="493" fg:w="1"/><text x="40.1367%" y="303.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="39.8867%" y="277" width="0.0809%" height="15" fill="rgb(224,148,39)" fg:x="493" fg:w="1"/><text x="40.1367%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="39.8867%" y="261" width="0.0809%" height="15" fill="rgb(232,212,39)" fg:x="493" fg:w="1"/><text x="40.1367%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.8867%" y="245" width="0.0809%" height="15" fill="rgb(251,172,7)" fg:x="493" fg:w="1"/><text x="40.1367%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="39.8058%" y="421" width="0.2427%" height="15" fill="rgb(219,39,9)" fg:x="492" fg:w="3"/><text x="40.0558%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.8058%" y="405" width="0.2427%" height="15" fill="rgb(228,118,14)" fg:x="492" fg:w="3"/><text x="40.0558%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="39.8058%" y="389" width="0.2427%" height="15" fill="rgb(207,140,10)" fg:x="492" fg:w="3"/><text x="40.0558%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="39.9676%" y="373" width="0.0809%" height="15" fill="rgb(227,111,53)" fg:x="494" fg:w="1"/><text x="40.2176%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.9676%" y="357" width="0.0809%" height="15" fill="rgb(216,165,16)" fg:x="494" fg:w="1"/><text x="40.2176%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="39.9676%" y="341" width="0.0809%" height="15" fill="rgb(226,111,18)" fg:x="494" fg:w="1"/><text x="40.2176%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="40.0485%" y="389" width="0.0809%" height="15" fill="rgb(251,27,17)" fg:x="495" fg:w="1"/><text x="40.2985%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.0485%" y="373" width="0.0809%" height="15" fill="rgb(254,69,9)" fg:x="495" fg:w="1"/><text x="40.2985%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.0485%" y="357" width="0.0809%" height="15" fill="rgb(234,140,37)" fg:x="495" fg:w="1"/><text x="40.2985%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.0485%" y="341" width="0.0809%" height="15" fill="rgb(220,93,8)" fg:x="495" fg:w="1"/><text x="40.2985%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.0485%" y="325" width="0.0809%" height="15" fill="rgb(236,113,3)" fg:x="495" fg:w="1"/><text x="40.2985%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.40%)</title><rect x="39.8058%" y="485" width="0.4045%" height="15" fill="rgb(234,108,23)" fg:x="492" fg:w="5"/><text x="40.0558%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.40%)</title><rect x="39.8058%" y="469" width="0.4045%" height="15" fill="rgb(205,114,34)" fg:x="492" fg:w="5"/><text x="40.0558%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="39.8058%" y="453" width="0.4045%" height="15" fill="rgb(236,200,45)" fg:x="492" fg:w="5"/><text x="40.0558%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="39.8058%" y="437" width="0.4045%" height="15" fill="rgb(227,194,29)" fg:x="492" fg:w="5"/><text x="40.0558%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.0485%" y="421" width="0.1618%" height="15" fill="rgb(250,76,42)" fg:x="495" fg:w="2"/><text x="40.2985%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.0485%" y="405" width="0.1618%" height="15" fill="rgb(208,128,8)" fg:x="495" fg:w="2"/><text x="40.2985%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="40.1294%" y="389" width="0.0809%" height="15" fill="rgb(229,209,35)" fg:x="496" fg:w="1"/><text x="40.3794%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.2104%" y="437" width="0.0809%" height="15" fill="rgb(215,39,53)" fg:x="497" fg:w="1"/><text x="40.4604%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.2913%" y="405" width="0.0809%" height="15" fill="rgb(219,123,41)" fg:x="498" fg:w="1"/><text x="40.5413%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (9 samples, 0.73%)</title><rect x="39.7249%" y="533" width="0.7282%" height="15" fill="rgb(212,158,18)" fg:x="491" fg:w="9"/><text x="39.9749%" y="543.50"></text></g><g><title>engine::internal::Entities::prepare_entity (8 samples, 0.65%)</title><rect x="39.8058%" y="517" width="0.6472%" height="15" fill="rgb(234,196,53)" fg:x="492" fg:w="8"/><text x="40.0558%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity (8 samples, 0.65%)</title><rect x="39.8058%" y="501" width="0.6472%" height="15" fill="rgb(210,139,12)" fg:x="492" fg:w="8"/><text x="40.0558%" y="511.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="40.2104%" y="485" width="0.2427%" height="15" fill="rgb(220,116,54)" fg:x="497" fg:w="3"/><text x="40.4604%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="40.2104%" y="469" width="0.2427%" height="15" fill="rgb(247,103,28)" fg:x="497" fg:w="3"/><text x="40.4604%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="40.2104%" y="453" width="0.2427%" height="15" fill="rgb(253,156,45)" fg:x="497" fg:w="3"/><text x="40.4604%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="40.2913%" y="437" width="0.1618%" height="15" fill="rgb(237,157,52)" fg:x="498" fg:w="2"/><text x="40.5413%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="40.2913%" y="421" width="0.1618%" height="15" fill="rgb(253,112,16)" fg:x="498" fg:w="2"/><text x="40.5413%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.3722%" y="405" width="0.0809%" height="15" fill="rgb(234,70,18)" fg:x="499" fg:w="1"/><text x="40.6222%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.3722%" y="389" width="0.0809%" height="15" fill="rgb(247,138,19)" fg:x="499" fg:w="1"/><text x="40.6222%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.3722%" y="373" width="0.0809%" height="15" fill="rgb(207,171,1)" fg:x="499" fg:w="1"/><text x="40.6222%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.3722%" y="357" width="0.0809%" height="15" fill="rgb(239,213,3)" fg:x="499" fg:w="1"/><text x="40.6222%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.3722%" y="341" width="0.0809%" height="15" fill="rgb(226,112,4)" fg:x="499" fg:w="1"/><text x="40.6222%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="40.3722%" y="325" width="0.0809%" height="15" fill="rgb(252,170,12)" fg:x="499" fg:w="1"/><text x="40.6222%" y="335.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (15 samples, 1.21%)</title><rect x="39.4013%" y="581" width="1.2136%" height="15" fill="rgb(241,106,13)" fg:x="487" fg:w="15"/><text x="39.6513%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (13 samples, 1.05%)</title><rect x="39.5631%" y="565" width="1.0518%" height="15" fill="rgb(225,73,23)" fg:x="489" fg:w="13"/><text x="39.8131%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (13 samples, 1.05%)</title><rect x="39.5631%" y="549" width="1.0518%" height="15" fill="rgb(251,227,29)" fg:x="489" fg:w="13"/><text x="39.8131%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.4531%" y="533" width="0.1618%" height="15" fill="rgb(237,144,13)" fg:x="500" fg:w="2"/><text x="40.7031%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.4531%" y="517" width="0.1618%" height="15" fill="rgb(232,106,46)" fg:x="500" fg:w="2"/><text x="40.7031%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.5340%" y="501" width="0.0809%" height="15" fill="rgb(245,154,53)" fg:x="501" fg:w="1"/><text x="40.7840%" y="511.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (19 samples, 1.54%)</title><rect x="39.1586%" y="597" width="1.5372%" height="15" fill="rgb(212,119,47)" fg:x="484" fg:w="19"/><text x="39.4086%" y="607.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="40.6149%" y="581" width="0.0809%" height="15" fill="rgb(253,135,25)" fg:x="502" fg:w="1"/><text x="40.8649%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="40.6149%" y="565" width="0.0809%" height="15" fill="rgb(253,208,39)" fg:x="502" fg:w="1"/><text x="40.8649%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="40.6149%" y="549" width="0.0809%" height="15" fill="rgb(226,64,12)" fg:x="502" fg:w="1"/><text x="40.8649%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="40.6149%" y="533" width="0.0809%" height="15" fill="rgb(214,162,37)" fg:x="502" fg:w="1"/><text x="40.8649%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="40.6149%" y="517" width="0.0809%" height="15" fill="rgb(250,104,5)" fg:x="502" fg:w="1"/><text x="40.8649%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="40.6149%" y="501" width="0.0809%" height="15" fill="rgb(220,202,50)" fg:x="502" fg:w="1"/><text x="40.8649%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="40.6149%" y="485" width="0.0809%" height="15" fill="rgb(248,67,38)" fg:x="502" fg:w="1"/><text x="40.8649%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="40.6149%" y="469" width="0.0809%" height="15" fill="rgb(242,94,35)" fg:x="502" fg:w="1"/><text x="40.8649%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="40.6149%" y="453" width="0.0809%" height="15" fill="rgb(209,78,37)" fg:x="502" fg:w="1"/><text x="40.8649%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="40.6149%" y="437" width="0.0809%" height="15" fill="rgb(230,126,47)" fg:x="502" fg:w="1"/><text x="40.8649%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="40.6149%" y="421" width="0.0809%" height="15" fill="rgb(222,110,35)" fg:x="502" fg:w="1"/><text x="40.8649%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.6149%" y="405" width="0.0809%" height="15" fill="rgb(233,154,20)" fg:x="502" fg:w="1"/><text x="40.8649%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.6149%" y="389" width="0.0809%" height="15" fill="rgb(223,53,50)" fg:x="502" fg:w="1"/><text x="40.8649%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="40.6149%" y="373" width="0.0809%" height="15" fill="rgb(251,27,26)" fg:x="502" fg:w="1"/><text x="40.8649%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="40.6149%" y="357" width="0.0809%" height="15" fill="rgb(223,189,16)" fg:x="502" fg:w="1"/><text x="40.8649%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="40.6149%" y="341" width="0.0809%" height="15" fill="rgb(207,5,54)" fg:x="502" fg:w="1"/><text x="40.8649%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="40.6149%" y="325" width="0.0809%" height="15" fill="rgb(254,124,50)" fg:x="502" fg:w="1"/><text x="40.8649%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="40.6149%" y="309" width="0.0809%" height="15" fill="rgb(253,193,24)" fg:x="502" fg:w="1"/><text x="40.8649%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="40.6149%" y="293" width="0.0809%" height="15" fill="rgb(235,170,24)" fg:x="502" fg:w="1"/><text x="40.8649%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="40.6149%" y="277" width="0.0809%" height="15" fill="rgb(222,212,52)" fg:x="502" fg:w="1"/><text x="40.8649%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="40.6149%" y="261" width="0.0809%" height="15" fill="rgb(223,17,45)" fg:x="502" fg:w="1"/><text x="40.8649%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="40.6149%" y="245" width="0.0809%" height="15" fill="rgb(227,103,26)" fg:x="502" fg:w="1"/><text x="40.8649%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="40.6149%" y="229" width="0.0809%" height="15" fill="rgb(251,151,25)" fg:x="502" fg:w="1"/><text x="40.8649%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="40.6149%" y="213" width="0.0809%" height="15" fill="rgb(248,144,29)" fg:x="502" fg:w="1"/><text x="40.8649%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="40.6149%" y="197" width="0.0809%" height="15" fill="rgb(245,97,16)" fg:x="502" fg:w="1"/><text x="40.8649%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="40.6149%" y="181" width="0.0809%" height="15" fill="rgb(220,200,29)" fg:x="502" fg:w="1"/><text x="40.8649%" y="191.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="40.7767%" y="581" width="0.1618%" height="15" fill="rgb(206,38,29)" fg:x="504" fg:w="2"/><text x="41.0267%" y="591.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="40.7767%" y="565" width="0.1618%" height="15" fill="rgb(245,19,52)" fg:x="504" fg:w="2"/><text x="41.0267%" y="575.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="40.7767%" y="549" width="0.1618%" height="15" fill="rgb(205,67,43)" fg:x="504" fg:w="2"/><text x="41.0267%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8576%" y="533" width="0.0809%" height="15" fill="rgb(217,128,23)" fg:x="505" fg:w="1"/><text x="41.1076%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8576%" y="517" width="0.0809%" height="15" fill="rgb(210,109,28)" fg:x="505" fg:w="1"/><text x="41.1076%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8576%" y="501" width="0.0809%" height="15" fill="rgb(233,181,7)" fg:x="505" fg:w="1"/><text x="41.1076%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.8576%" y="485" width="0.0809%" height="15" fill="rgb(244,11,22)" fg:x="505" fg:w="1"/><text x="41.1076%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.8576%" y="469" width="0.0809%" height="15" fill="rgb(205,124,54)" fg:x="505" fg:w="1"/><text x="41.1076%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.8576%" y="453" width="0.0809%" height="15" fill="rgb(218,21,27)" fg:x="505" fg:w="1"/><text x="41.1076%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="40.8576%" y="437" width="0.0809%" height="15" fill="rgb(224,153,33)" fg:x="505" fg:w="1"/><text x="41.1076%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="40.8576%" y="421" width="0.0809%" height="15" fill="rgb(240,219,28)" fg:x="505" fg:w="1"/><text x="41.1076%" y="431.50"></text></g><g><title>engine::session::Session::world (4 samples, 0.32%)</title><rect x="40.6958%" y="597" width="0.3236%" height="15" fill="rgb(214,80,29)" fg:x="503" fg:w="4"/><text x="40.9458%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="40.9385%" y="581" width="0.0809%" height="15" fill="rgb(247,148,44)" fg:x="506" fg:w="1"/><text x="41.1885%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.0194%" y="581" width="0.0809%" height="15" fill="rgb(243,110,30)" fg:x="507" fg:w="1"/><text x="41.2694%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="41.0194%" y="565" width="0.0809%" height="15" fill="rgb(243,173,41)" fg:x="507" fg:w="1"/><text x="41.2694%" y="575.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_name (43 samples, 3.48%)</title><rect x="37.7832%" y="613" width="3.4790%" height="15" fill="rgb(225,160,47)" fg:x="467" fg:w="43"/><text x="38.0332%" y="623.50">eng..</text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="41.0194%" y="597" width="0.2427%" height="15" fill="rgb(215,44,21)" fg:x="507" fg:w="3"/><text x="41.2694%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="41.1003%" y="581" width="0.1618%" height="15" fill="rgb(248,90,3)" fg:x="508" fg:w="2"/><text x="41.3503%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="41.1003%" y="565" width="0.1618%" height="15" fill="rgb(220,196,49)" fg:x="508" fg:w="2"/><text x="41.3503%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.1812%" y="549" width="0.0809%" height="15" fill="rgb(217,138,14)" fg:x="509" fg:w="1"/><text x="41.4312%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.1812%" y="533" width="0.0809%" height="15" fill="rgb(219,111,20)" fg:x="509" fg:w="1"/><text x="41.4312%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.1812%" y="517" width="0.0809%" height="15" fill="rgb(218,114,4)" fg:x="509" fg:w="1"/><text x="41.4312%" y="527.50"></text></g><g><title>kernel::plugins::SessionPlugins::evaluate (1 samples, 0.08%)</title><rect x="41.2621%" y="613" width="0.0809%" height="15" fill="rgb(238,133,3)" fg:x="510" fg:w="1"/><text x="41.5121%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="41.2621%" y="597" width="0.0809%" height="15" fill="rgb(224,95,0)" fg:x="510" fg:w="1"/><text x="41.5121%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.3430%" y="581" width="0.0809%" height="15" fill="rgb(220,169,35)" fg:x="511" fg:w="1"/><text x="41.5930%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="41.4239%" y="581" width="0.0809%" height="15" fill="rgb(242,116,47)" fg:x="512" fg:w="1"/><text x="41.6739%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.0712%" y="501" width="0.0809%" height="15" fill="rgb(251,42,20)" fg:x="520" fg:w="1"/><text x="42.3212%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="42.0712%" y="485" width="0.0809%" height="15" fill="rgb(234,7,34)" fg:x="520" fg:w="1"/><text x="42.3212%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.1521%" y="501" width="0.0809%" height="15" fill="rgb(243,208,13)" fg:x="521" fg:w="1"/><text x="42.4021%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="41.9094%" y="517" width="0.4045%" height="15" fill="rgb(227,33,28)" fg:x="518" fg:w="5"/><text x="42.1594%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="42.2330%" y="501" width="0.0809%" height="15" fill="rgb(250,47,37)" fg:x="522" fg:w="1"/><text x="42.4830%" y="511.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="42.3139%" y="517" width="0.3236%" height="15" fill="rgb(235,111,52)" fg:x="523" fg:w="4"/><text x="42.5639%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="42.7184%" y="501" width="0.2427%" height="15" fill="rgb(223,64,28)" fg:x="528" fg:w="3"/><text x="42.9684%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="42.7994%" y="485" width="0.1618%" height="15" fill="rgb(236,67,22)" fg:x="529" fg:w="2"/><text x="43.0494%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.21%)</title><rect x="41.8285%" y="533" width="1.2136%" height="15" fill="rgb(243,79,24)" fg:x="517" fg:w="15"/><text x="42.0785%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (5 samples, 0.40%)</title><rect x="42.6375%" y="517" width="0.4045%" height="15" fill="rgb(241,225,22)" fg:x="527" fg:w="5"/><text x="42.8875%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="42.9612%" y="501" width="0.0809%" height="15" fill="rgb(228,214,26)" fg:x="531" fg:w="1"/><text x="43.2112%" y="511.50"></text></g><g><title>__libc_free (6 samples, 0.49%)</title><rect x="43.0421%" y="533" width="0.4854%" height="15" fill="rgb(219,84,52)" fg:x="532" fg:w="6"/><text x="43.2921%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.10%)</title><rect x="41.5858%" y="549" width="2.1036%" height="15" fill="rgb(220,12,22)" fg:x="514" fg:w="26"/><text x="41.8358%" y="559.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (2 samples, 0.16%)</title><rect x="43.5275%" y="533" width="0.1618%" height="15" fill="rgb(219,9,49)" fg:x="538" fg:w="2"/><text x="43.7775%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 2.99%)</title><rect x="41.5049%" y="565" width="2.9935%" height="15" fill="rgb(237,40,43)" fg:x="513" fg:w="37"/><text x="41.7549%" y="575.50">&lt;ha..</text></g><g><title>__libc_free (10 samples, 0.81%)</title><rect x="43.6893%" y="549" width="0.8091%" height="15" fill="rgb(212,189,32)" fg:x="540" fg:w="10"/><text x="43.9393%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (39 samples, 3.16%)</title><rect x="41.5049%" y="581" width="3.1553%" height="15" fill="rgb(247,48,9)" fg:x="513" fg:w="39"/><text x="41.7549%" y="591.50">cor..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.4984%" y="565" width="0.1618%" height="15" fill="rgb(247,112,3)" fg:x="550" fg:w="2"/><text x="44.7484%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="44.6602%" y="549" width="0.0809%" height="15" fill="rgb(243,110,18)" fg:x="552" fg:w="1"/><text x="44.9102%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="44.6602%" y="533" width="0.0809%" height="15" fill="rgb(233,223,44)" fg:x="552" fg:w="1"/><text x="44.9102%" y="543.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="44.6602%" y="517" width="0.0809%" height="15" fill="rgb(245,160,20)" fg:x="552" fg:w="1"/><text x="44.9102%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.7411%" y="517" width="0.0809%" height="15" fill="rgb(225,37,1)" fg:x="553" fg:w="1"/><text x="44.9911%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="44.7411%" y="549" width="0.1618%" height="15" fill="rgb(253,227,39)" fg:x="553" fg:w="2"/><text x="44.9911%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="44.7411%" y="533" width="0.1618%" height="15" fill="rgb(240,179,26)" fg:x="553" fg:w="2"/><text x="44.9911%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.8220%" y="517" width="0.0809%" height="15" fill="rgb(237,212,23)" fg:x="554" fg:w="1"/><text x="45.0720%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="44.8220%" y="501" width="0.0809%" height="15" fill="rgb(221,38,11)" fg:x="554" fg:w="1"/><text x="45.0720%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="44.8220%" y="485" width="0.0809%" height="15" fill="rgb(215,85,6)" fg:x="554" fg:w="1"/><text x="45.0720%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.9029%" y="517" width="0.0809%" height="15" fill="rgb(239,64,14)" fg:x="555" fg:w="1"/><text x="45.1529%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="44.9029%" y="549" width="0.1618%" height="15" fill="rgb(215,150,32)" fg:x="555" fg:w="2"/><text x="45.1529%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="44.9029%" y="533" width="0.1618%" height="15" fill="rgb(238,15,13)" fg:x="555" fg:w="2"/><text x="45.1529%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="44.9838%" y="517" width="0.0809%" height="15" fill="rgb(251,87,8)" fg:x="556" fg:w="1"/><text x="45.2338%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="44.9838%" y="501" width="0.0809%" height="15" fill="rgb(206,86,1)" fg:x="556" fg:w="1"/><text x="45.2338%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.9838%" y="485" width="0.0809%" height="15" fill="rgb(208,151,45)" fg:x="556" fg:w="1"/><text x="45.2338%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="45.1456%" y="485" width="0.1618%" height="15" fill="rgb(231,181,24)" fg:x="558" fg:w="2"/><text x="45.3956%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.1456%" y="469" width="0.1618%" height="15" fill="rgb(240,106,29)" fg:x="558" fg:w="2"/><text x="45.3956%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.3074%" y="485" width="0.0809%" height="15" fill="rgb(227,166,11)" fg:x="560" fg:w="1"/><text x="45.5574%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="45.6311%" y="101" width="0.0809%" height="15" fill="rgb(254,14,34)" fg:x="564" fg:w="1"/><text x="45.8811%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="45.6311%" y="85" width="0.0809%" height="15" fill="rgb(223,222,6)" fg:x="564" fg:w="1"/><text x="45.8811%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="45.6311%" y="69" width="0.0809%" height="15" fill="rgb(245,69,24)" fg:x="564" fg:w="1"/><text x="45.8811%" y="79.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="45.6311%" y="53" width="0.0809%" height="15" fill="rgb(213,193,7)" fg:x="564" fg:w="1"/><text x="45.8811%" y="63.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="45.6311%" y="181" width="0.1618%" height="15" fill="rgb(237,92,51)" fg:x="564" fg:w="2"/><text x="45.8811%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="45.6311%" y="165" width="0.1618%" height="15" fill="rgb(225,194,6)" fg:x="564" fg:w="2"/><text x="45.8811%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="45.6311%" y="149" width="0.1618%" height="15" fill="rgb(205,159,49)" fg:x="564" fg:w="2"/><text x="45.8811%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="45.6311%" y="133" width="0.1618%" height="15" fill="rgb(219,69,2)" fg:x="564" fg:w="2"/><text x="45.8811%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="45.6311%" y="117" width="0.1618%" height="15" fill="rgb(215,107,24)" fg:x="564" fg:w="2"/><text x="45.8811%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.7120%" y="101" width="0.0809%" height="15" fill="rgb(249,208,29)" fg:x="565" fg:w="1"/><text x="45.9620%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="45.6311%" y="277" width="0.2427%" height="15" fill="rgb(213,147,10)" fg:x="564" fg:w="3"/><text x="45.8811%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="45.6311%" y="261" width="0.2427%" height="15" fill="rgb(254,140,42)" fg:x="564" fg:w="3"/><text x="45.8811%" y="271.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.24%)</title><rect x="45.6311%" y="245" width="0.2427%" height="15" fill="rgb(249,9,15)" fg:x="564" fg:w="3"/><text x="45.8811%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.24%)</title><rect x="45.6311%" y="229" width="0.2427%" height="15" fill="rgb(210,19,33)" fg:x="564" fg:w="3"/><text x="45.8811%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.24%)</title><rect x="45.6311%" y="213" width="0.2427%" height="15" fill="rgb(241,121,22)" fg:x="564" fg:w="3"/><text x="45.8811%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.24%)</title><rect x="45.6311%" y="197" width="0.2427%" height="15" fill="rgb(244,69,52)" fg:x="564" fg:w="3"/><text x="45.8811%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="45.7929%" y="181" width="0.0809%" height="15" fill="rgb(244,191,54)" fg:x="566" fg:w="1"/><text x="46.0429%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.8738%" y="277" width="0.0809%" height="15" fill="rgb(250,3,53)" fg:x="567" fg:w="1"/><text x="46.1238%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.8738%" y="261" width="0.0809%" height="15" fill="rgb(205,77,3)" fg:x="567" fg:w="1"/><text x="46.1238%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="45.9547%" y="197" width="0.1618%" height="15" fill="rgb(207,155,3)" fg:x="568" fg:w="2"/><text x="46.2047%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.0356%" y="181" width="0.0809%" height="15" fill="rgb(224,79,2)" fg:x="569" fg:w="1"/><text x="46.2856%" y="191.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="46.0356%" y="165" width="0.0809%" height="15" fill="rgb(243,172,5)" fg:x="569" fg:w="1"/><text x="46.2856%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="46.0356%" y="149" width="0.0809%" height="15" fill="rgb(217,23,43)" fg:x="569" fg:w="1"/><text x="46.2856%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="46.0356%" y="133" width="0.0809%" height="15" fill="rgb(223,109,20)" fg:x="569" fg:w="1"/><text x="46.2856%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="46.0356%" y="117" width="0.0809%" height="15" fill="rgb(232,159,21)" fg:x="569" fg:w="1"/><text x="46.2856%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="46.0356%" y="101" width="0.0809%" height="15" fill="rgb(219,58,2)" fg:x="569" fg:w="1"/><text x="46.2856%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.73%)</title><rect x="45.4693%" y="453" width="0.7282%" height="15" fill="rgb(241,56,8)" fg:x="562" fg:w="9"/><text x="45.7193%" y="463.50"></text></g><g><title>kernel::model::EntityRef::into_entry (8 samples, 0.65%)</title><rect x="45.5502%" y="437" width="0.6472%" height="15" fill="rgb(249,10,27)" fg:x="563" fg:w="8"/><text x="45.8002%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (7 samples, 0.57%)</title><rect x="45.6311%" y="421" width="0.5663%" height="15" fill="rgb(248,177,5)" fg:x="564" fg:w="7"/><text x="45.8811%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.57%)</title><rect x="45.6311%" y="405" width="0.5663%" height="15" fill="rgb(239,12,30)" fg:x="564" fg:w="7"/><text x="45.8811%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (7 samples, 0.57%)</title><rect x="45.6311%" y="389" width="0.5663%" height="15" fill="rgb(229,164,25)" fg:x="564" fg:w="7"/><text x="45.8811%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.57%)</title><rect x="45.6311%" y="373" width="0.5663%" height="15" fill="rgb(231,217,50)" fg:x="564" fg:w="7"/><text x="45.8811%" y="383.50"></text></g><g><title>core::fmt::write (7 samples, 0.57%)</title><rect x="45.6311%" y="357" width="0.5663%" height="15" fill="rgb(247,99,32)" fg:x="564" fg:w="7"/><text x="45.8811%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (7 samples, 0.57%)</title><rect x="45.6311%" y="341" width="0.5663%" height="15" fill="rgb(240,74,50)" fg:x="564" fg:w="7"/><text x="45.8811%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (7 samples, 0.57%)</title><rect x="45.6311%" y="325" width="0.5663%" height="15" fill="rgb(218,54,8)" fg:x="564" fg:w="7"/><text x="45.8811%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (7 samples, 0.57%)</title><rect x="45.6311%" y="309" width="0.5663%" height="15" fill="rgb(227,132,20)" fg:x="564" fg:w="7"/><text x="45.8811%" y="319.50"></text></g><g><title>core::fmt::write (7 samples, 0.57%)</title><rect x="45.6311%" y="293" width="0.5663%" height="15" fill="rgb(232,134,12)" fg:x="564" fg:w="7"/><text x="45.8811%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="45.9547%" y="277" width="0.2427%" height="15" fill="rgb(250,129,18)" fg:x="568" fg:w="3"/><text x="46.2047%" y="287.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="45.9547%" y="261" width="0.2427%" height="15" fill="rgb(232,129,47)" fg:x="568" fg:w="3"/><text x="46.2047%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="45.9547%" y="245" width="0.2427%" height="15" fill="rgb(230,31,40)" fg:x="568" fg:w="3"/><text x="46.2047%" y="255.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="45.9547%" y="229" width="0.2427%" height="15" fill="rgb(232,126,10)" fg:x="568" fg:w="3"/><text x="46.2047%" y="239.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="45.9547%" y="213" width="0.2427%" height="15" fill="rgb(205,46,31)" fg:x="568" fg:w="3"/><text x="46.2047%" y="223.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="46.1165%" y="197" width="0.0809%" height="15" fill="rgb(232,37,37)" fg:x="570" fg:w="1"/><text x="46.3665%" y="207.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="46.1165%" y="181" width="0.0809%" height="15" fill="rgb(240,91,16)" fg:x="570" fg:w="1"/><text x="46.3665%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.89%)</title><rect x="45.3883%" y="469" width="0.8900%" height="15" fill="rgb(224,160,9)" fg:x="561" fg:w="11"/><text x="45.6383%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.1974%" y="453" width="0.0809%" height="15" fill="rgb(215,116,14)" fg:x="571" fg:w="1"/><text x="46.4474%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.2783%" y="453" width="0.0809%" height="15" fill="rgb(235,46,36)" fg:x="572" fg:w="1"/><text x="46.5283%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="46.3592%" y="453" width="0.0809%" height="15" fill="rgb(238,39,28)" fg:x="573" fg:w="1"/><text x="46.6092%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="46.3592%" y="437" width="0.0809%" height="15" fill="rgb(242,125,29)" fg:x="573" fg:w="1"/><text x="46.6092%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.3592%" y="421" width="0.0809%" height="15" fill="rgb(238,211,30)" fg:x="573" fg:w="1"/><text x="46.6092%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.6019%" y="389" width="0.0809%" height="15" fill="rgb(227,201,28)" fg:x="576" fg:w="1"/><text x="46.8519%" y="399.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="46.6828%" y="373" width="0.1618%" height="15" fill="rgb(238,77,29)" fg:x="577" fg:w="2"/><text x="46.9328%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.7638%" y="357" width="0.0809%" height="15" fill="rgb(213,221,40)" fg:x="578" fg:w="1"/><text x="47.0138%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.7638%" y="341" width="0.0809%" height="15" fill="rgb(226,220,44)" fg:x="578" fg:w="1"/><text x="47.0138%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.7638%" y="325" width="0.0809%" height="15" fill="rgb(228,90,23)" fg:x="578" fg:w="1"/><text x="47.0138%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.7638%" y="309" width="0.0809%" height="15" fill="rgb(235,72,29)" fg:x="578" fg:w="1"/><text x="47.0138%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.7638%" y="293" width="0.0809%" height="15" fill="rgb(248,117,39)" fg:x="578" fg:w="1"/><text x="47.0138%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.7638%" y="277" width="0.0809%" height="15" fill="rgb(225,43,28)" fg:x="578" fg:w="1"/><text x="47.0138%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.7638%" y="261" width="0.0809%" height="15" fill="rgb(240,93,4)" fg:x="578" fg:w="1"/><text x="47.0138%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.7638%" y="245" width="0.0809%" height="15" fill="rgb(234,178,27)" fg:x="578" fg:w="1"/><text x="47.0138%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.7638%" y="229" width="0.0809%" height="15" fill="rgb(254,88,22)" fg:x="578" fg:w="1"/><text x="47.0138%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.7638%" y="213" width="0.0809%" height="15" fill="rgb(240,206,50)" fg:x="578" fg:w="1"/><text x="47.0138%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.7638%" y="197" width="0.0809%" height="15" fill="rgb(249,103,8)" fg:x="578" fg:w="1"/><text x="47.0138%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.7638%" y="181" width="0.0809%" height="15" fill="rgb(241,178,36)" fg:x="578" fg:w="1"/><text x="47.0138%" y="191.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="46.8447%" y="373" width="0.0809%" height="15" fill="rgb(246,110,15)" fg:x="579" fg:w="1"/><text x="47.0947%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="46.9256%" y="357" width="0.0809%" height="15" fill="rgb(207,14,43)" fg:x="580" fg:w="1"/><text x="47.1756%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="46.9256%" y="341" width="0.0809%" height="15" fill="rgb(253,219,19)" fg:x="580" fg:w="1"/><text x="47.1756%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.9256%" y="325" width="0.0809%" height="15" fill="rgb(216,126,5)" fg:x="580" fg:w="1"/><text x="47.1756%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.9256%" y="309" width="0.0809%" height="15" fill="rgb(218,78,42)" fg:x="580" fg:w="1"/><text x="47.1756%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.9256%" y="293" width="0.0809%" height="15" fill="rgb(215,154,40)" fg:x="580" fg:w="1"/><text x="47.1756%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.9256%" y="277" width="0.0809%" height="15" fill="rgb(235,129,32)" fg:x="580" fg:w="1"/><text x="47.1756%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="46.9256%" y="261" width="0.0809%" height="15" fill="rgb(218,51,8)" fg:x="580" fg:w="1"/><text x="47.1756%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.9256%" y="245" width="0.0809%" height="15" fill="rgb(245,48,4)" fg:x="580" fg:w="1"/><text x="47.1756%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.9256%" y="229" width="0.0809%" height="15" fill="rgb(250,175,12)" fg:x="580" fg:w="1"/><text x="47.1756%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.9256%" y="213" width="0.0809%" height="15" fill="rgb(237,95,40)" fg:x="580" fg:w="1"/><text x="47.1756%" y="223.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="46.9256%" y="197" width="0.0809%" height="15" fill="rgb(244,120,0)" fg:x="580" fg:w="1"/><text x="47.1756%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.49%)</title><rect x="46.6019%" y="405" width="0.4854%" height="15" fill="rgb(241,19,42)" fg:x="576" fg:w="6"/><text x="46.8519%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (5 samples, 0.40%)</title><rect x="46.6828%" y="389" width="0.4045%" height="15" fill="rgb(217,174,48)" fg:x="577" fg:w="5"/><text x="46.9328%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity (2 samples, 0.16%)</title><rect x="46.9256%" y="373" width="0.1618%" height="15" fill="rgb(239,36,38)" fg:x="580" fg:w="2"/><text x="47.1756%" y="383.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="47.0065%" y="357" width="0.0809%" height="15" fill="rgb(220,63,49)" fg:x="581" fg:w="1"/><text x="47.2565%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="47.0065%" y="341" width="0.0809%" height="15" fill="rgb(240,101,13)" fg:x="581" fg:w="1"/><text x="47.2565%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.0065%" y="325" width="0.0809%" height="15" fill="rgb(209,184,51)" fg:x="581" fg:w="1"/><text x="47.2565%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="47.0065%" y="309" width="0.0809%" height="15" fill="rgb(206,136,39)" fg:x="581" fg:w="1"/><text x="47.2565%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.0065%" y="293" width="0.0809%" height="15" fill="rgb(254,47,45)" fg:x="581" fg:w="1"/><text x="47.2565%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.0065%" y="277" width="0.0809%" height="15" fill="rgb(252,103,20)" fg:x="581" fg:w="1"/><text x="47.2565%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="47.0874%" y="405" width="0.0809%" height="15" fill="rgb(230,69,12)" fg:x="582" fg:w="1"/><text x="47.3374%" y="415.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="47.1683%" y="405" width="0.0809%" height="15" fill="rgb(219,2,28)" fg:x="583" fg:w="1"/><text x="47.4183%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (10 samples, 0.81%)</title><rect x="46.5210%" y="437" width="0.8091%" height="15" fill="rgb(210,9,12)" fg:x="575" fg:w="10"/><text x="46.7710%" y="447.50"></text></g><g><title>kernel::model::Entity::load_scope (9 samples, 0.73%)</title><rect x="46.6019%" y="421" width="0.7282%" height="15" fill="rgb(235,99,33)" fg:x="576" fg:w="9"/><text x="46.8519%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.2492%" y="405" width="0.0809%" height="15" fill="rgb(230,11,38)" fg:x="584" fg:w="1"/><text x="47.4992%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.2492%" y="389" width="0.0809%" height="15" fill="rgb(217,129,0)" fg:x="584" fg:w="1"/><text x="47.4992%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.2492%" y="373" width="0.0809%" height="15" fill="rgb(222,198,4)" fg:x="584" fg:w="1"/><text x="47.4992%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.2492%" y="357" width="0.0809%" height="15" fill="rgb(246,170,27)" fg:x="584" fg:w="1"/><text x="47.4992%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.2492%" y="341" width="0.0809%" height="15" fill="rgb(229,17,28)" fg:x="584" fg:w="1"/><text x="47.4992%" y="351.50"></text></g><g><title>core::iter::adapters::try_process (25 samples, 2.02%)</title><rect x="45.3883%" y="485" width="2.0227%" height="15" fill="rgb(233,198,48)" fg:x="561" fg:w="25"/><text x="45.6383%" y="495.50">c..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (14 samples, 1.13%)</title><rect x="46.2783%" y="469" width="1.1327%" height="15" fill="rgb(238,103,23)" fg:x="572" fg:w="14"/><text x="46.5283%" y="479.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (12 samples, 0.97%)</title><rect x="46.4401%" y="453" width="0.9709%" height="15" fill="rgb(206,91,41)" fg:x="574" fg:w="12"/><text x="46.6901%" y="463.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="47.3301%" y="437" width="0.0809%" height="15" fill="rgb(227,34,25)" fg:x="585" fg:w="1"/><text x="47.5801%" y="447.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="47.3301%" y="421" width="0.0809%" height="15" fill="rgb(210,110,44)" fg:x="585" fg:w="1"/><text x="47.5801%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="47.5728%" y="421" width="0.1618%" height="15" fill="rgb(216,189,8)" fg:x="588" fg:w="2"/><text x="47.8228%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.5728%" y="405" width="0.1618%" height="15" fill="rgb(234,9,46)" fg:x="588" fg:w="2"/><text x="47.8228%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="47.4919%" y="453" width="0.4045%" height="15" fill="rgb(251,200,5)" fg:x="587" fg:w="5"/><text x="47.7419%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="47.5728%" y="437" width="0.3236%" height="15" fill="rgb(238,165,37)" fg:x="588" fg:w="4"/><text x="47.8228%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.7346%" y="421" width="0.1618%" height="15" fill="rgb(232,77,38)" fg:x="590" fg:w="2"/><text x="47.9846%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (3 samples, 0.24%)</title><rect x="47.8964%" y="373" width="0.2427%" height="15" fill="rgb(253,179,33)" fg:x="592" fg:w="3"/><text x="48.1464%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="47.9773%" y="357" width="0.1618%" height="15" fill="rgb(240,13,35)" fg:x="593" fg:w="2"/><text x="48.2273%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.0583%" y="341" width="0.0809%" height="15" fill="rgb(242,150,49)" fg:x="594" fg:w="1"/><text x="48.3083%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.0583%" y="325" width="0.0809%" height="15" fill="rgb(237,176,28)" fg:x="594" fg:w="1"/><text x="48.3083%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.0583%" y="309" width="0.0809%" height="15" fill="rgb(214,176,33)" fg:x="594" fg:w="1"/><text x="48.3083%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.0583%" y="293" width="0.0809%" height="15" fill="rgb(214,25,12)" fg:x="594" fg:w="1"/><text x="48.3083%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.0583%" y="277" width="0.0809%" height="15" fill="rgb(238,190,20)" fg:x="594" fg:w="1"/><text x="48.3083%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.0583%" y="261" width="0.0809%" height="15" fill="rgb(208,11,19)" fg:x="594" fg:w="1"/><text x="48.3083%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.0583%" y="245" width="0.0809%" height="15" fill="rgb(239,90,4)" fg:x="594" fg:w="1"/><text x="48.3083%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.0583%" y="229" width="0.0809%" height="15" fill="rgb(248,110,3)" fg:x="594" fg:w="1"/><text x="48.3083%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.0583%" y="213" width="0.0809%" height="15" fill="rgb(210,41,30)" fg:x="594" fg:w="1"/><text x="48.3083%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.0583%" y="197" width="0.0809%" height="15" fill="rgb(239,36,8)" fg:x="594" fg:w="1"/><text x="48.3083%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.0583%" y="181" width="0.0809%" height="15" fill="rgb(237,201,47)" fg:x="594" fg:w="1"/><text x="48.3083%" y="191.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.3819%" y="341" width="0.0809%" height="15" fill="rgb(224,140,29)" fg:x="598" fg:w="1"/><text x="48.6319%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.3819%" y="325" width="0.0809%" height="15" fill="rgb(231,209,17)" fg:x="598" fg:w="1"/><text x="48.6319%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.3819%" y="309" width="0.0809%" height="15" fill="rgb(249,196,1)" fg:x="598" fg:w="1"/><text x="48.6319%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.3819%" y="293" width="0.0809%" height="15" fill="rgb(223,207,51)" fg:x="598" fg:w="1"/><text x="48.6319%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.3819%" y="277" width="0.0809%" height="15" fill="rgb(210,14,40)" fg:x="598" fg:w="1"/><text x="48.6319%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.3819%" y="261" width="0.0809%" height="15" fill="rgb(250,20,52)" fg:x="598" fg:w="1"/><text x="48.6319%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.3819%" y="245" width="0.0809%" height="15" fill="rgb(241,46,11)" fg:x="598" fg:w="1"/><text x="48.6319%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.3819%" y="229" width="0.0809%" height="15" fill="rgb(219,105,5)" fg:x="598" fg:w="1"/><text x="48.6319%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.3819%" y="213" width="0.0809%" height="15" fill="rgb(252,77,35)" fg:x="598" fg:w="1"/><text x="48.6319%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.3819%" y="197" width="0.0809%" height="15" fill="rgb(243,119,2)" fg:x="598" fg:w="1"/><text x="48.6319%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.3819%" y="181" width="0.0809%" height="15" fill="rgb(206,82,28)" fg:x="598" fg:w="1"/><text x="48.6319%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.3819%" y="165" width="0.0809%" height="15" fill="rgb(227,120,12)" fg:x="598" fg:w="1"/><text x="48.6319%" y="175.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.3819%" y="149" width="0.0809%" height="15" fill="rgb(229,134,41)" fg:x="598" fg:w="1"/><text x="48.6319%" y="159.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (8 samples, 0.65%)</title><rect x="47.8964%" y="453" width="0.6472%" height="15" fill="rgb(239,96,32)" fg:x="592" fg:w="8"/><text x="48.1464%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.65%)</title><rect x="47.8964%" y="437" width="0.6472%" height="15" fill="rgb(225,46,27)" fg:x="592" fg:w="8"/><text x="48.1464%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.65%)</title><rect x="47.8964%" y="421" width="0.6472%" height="15" fill="rgb(215,168,2)" fg:x="592" fg:w="8"/><text x="48.1464%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.65%)</title><rect x="47.8964%" y="405" width="0.6472%" height="15" fill="rgb(207,170,52)" fg:x="592" fg:w="8"/><text x="48.1464%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.65%)</title><rect x="47.8964%" y="389" width="0.6472%" height="15" fill="rgb(237,198,36)" fg:x="592" fg:w="8"/><text x="48.1464%" y="399.50"></text></g><g><title>engine::internal::Entities::prepare_entity (5 samples, 0.40%)</title><rect x="48.1392%" y="373" width="0.4045%" height="15" fill="rgb(213,27,14)" fg:x="595" fg:w="5"/><text x="48.3892%" y="383.50"></text></g><g><title>engine::internal::Maps::lookup_entity (4 samples, 0.32%)</title><rect x="48.2201%" y="357" width="0.3236%" height="15" fill="rgb(218,77,5)" fg:x="596" fg:w="4"/><text x="48.4701%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="48.4628%" y="341" width="0.0809%" height="15" fill="rgb(230,219,39)" fg:x="599" fg:w="1"/><text x="48.7128%" y="351.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="48.7055%" y="421" width="0.1618%" height="15" fill="rgb(245,177,7)" fg:x="602" fg:w="2"/><text x="48.9555%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.7864%" y="405" width="0.0809%" height="15" fill="rgb(246,44,46)" fg:x="603" fg:w="1"/><text x="49.0364%" y="415.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (47 samples, 3.80%)</title><rect x="45.1456%" y="501" width="3.8026%" height="15" fill="rgb(207,173,15)" fg:x="558" fg:w="47"/><text x="45.3956%" y="511.50">plug..</text></g><g><title>kernel::model::entry::Entry::scope (19 samples, 1.54%)</title><rect x="47.4110%" y="485" width="1.5372%" height="15" fill="rgb(245,170,50)" fg:x="586" fg:w="19"/><text x="47.6610%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (19 samples, 1.54%)</title><rect x="47.4110%" y="469" width="1.5372%" height="15" fill="rgb(233,156,21)" fg:x="586" fg:w="19"/><text x="47.6610%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="48.5437%" y="453" width="0.4045%" height="15" fill="rgb(253,146,27)" fg:x="600" fg:w="5"/><text x="48.7937%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="48.5437%" y="437" width="0.4045%" height="15" fill="rgb(247,66,29)" fg:x="600" fg:w="5"/><text x="48.7937%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="48.8673%" y="421" width="0.0809%" height="15" fill="rgb(218,207,26)" fg:x="604" fg:w="1"/><text x="49.1173%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="48.8673%" y="405" width="0.0809%" height="15" fill="rgb(234,93,26)" fg:x="604" fg:w="1"/><text x="49.1173%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="48.8673%" y="389" width="0.0809%" height="15" fill="rgb(214,75,48)" fg:x="604" fg:w="1"/><text x="49.1173%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.8673%" y="373" width="0.0809%" height="15" fill="rgb(229,119,22)" fg:x="604" fg:w="1"/><text x="49.1173%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.8673%" y="357" width="0.0809%" height="15" fill="rgb(226,153,19)" fg:x="604" fg:w="1"/><text x="49.1173%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="48.8673%" y="341" width="0.0809%" height="15" fill="rgb(220,204,36)" fg:x="604" fg:w="1"/><text x="49.1173%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="48.9482%" y="485" width="0.0809%" height="15" fill="rgb(253,181,43)" fg:x="605" fg:w="1"/><text x="49.1982%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.0291%" y="485" width="0.0809%" height="15" fill="rgb(211,41,51)" fg:x="606" fg:w="1"/><text x="49.2791%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.5955%" y="357" width="0.0809%" height="15" fill="rgb(207,215,0)" fg:x="613" fg:w="1"/><text x="49.8455%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.5955%" y="341" width="0.0809%" height="15" fill="rgb(212,153,10)" fg:x="613" fg:w="1"/><text x="49.8455%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.5955%" y="325" width="0.0809%" height="15" fill="rgb(251,171,36)" fg:x="613" fg:w="1"/><text x="49.8455%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.5955%" y="309" width="0.0809%" height="15" fill="rgb(225,219,41)" fg:x="613" fg:w="1"/><text x="49.8455%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.5955%" y="293" width="0.0809%" height="15" fill="rgb(208,200,1)" fg:x="613" fg:w="1"/><text x="49.8455%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.5955%" y="277" width="0.0809%" height="15" fill="rgb(206,75,47)" fg:x="613" fg:w="1"/><text x="49.8455%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="49.5955%" y="437" width="0.1618%" height="15" fill="rgb(248,3,16)" fg:x="613" fg:w="2"/><text x="49.8455%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="49.5955%" y="421" width="0.1618%" height="15" fill="rgb(242,157,36)" fg:x="613" fg:w="2"/><text x="49.8455%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="49.5955%" y="405" width="0.1618%" height="15" fill="rgb(215,175,11)" fg:x="613" fg:w="2"/><text x="49.8455%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="49.5955%" y="389" width="0.1618%" height="15" fill="rgb(252,222,22)" fg:x="613" fg:w="2"/><text x="49.8455%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="49.5955%" y="373" width="0.1618%" height="15" fill="rgb(250,121,35)" fg:x="613" fg:w="2"/><text x="49.8455%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="49.6764%" y="357" width="0.0809%" height="15" fill="rgb(233,120,49)" fg:x="614" fg:w="1"/><text x="49.9264%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.6764%" y="341" width="0.0809%" height="15" fill="rgb(205,201,14)" fg:x="614" fg:w="1"/><text x="49.9264%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="49.7573%" y="421" width="0.1618%" height="15" fill="rgb(219,58,45)" fg:x="615" fg:w="2"/><text x="50.0073%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="49.7573%" y="405" width="0.1618%" height="15" fill="rgb(251,65,12)" fg:x="615" fg:w="2"/><text x="50.0073%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.8382%" y="389" width="0.0809%" height="15" fill="rgb(224,47,31)" fg:x="616" fg:w="1"/><text x="50.0882%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.8382%" y="373" width="0.0809%" height="15" fill="rgb(233,74,26)" fg:x="616" fg:w="1"/><text x="50.0882%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.8382%" y="357" width="0.0809%" height="15" fill="rgb(231,211,31)" fg:x="616" fg:w="1"/><text x="50.0882%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.8382%" y="341" width="0.0809%" height="15" fill="rgb(239,167,5)" fg:x="616" fg:w="1"/><text x="50.0882%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.8382%" y="325" width="0.0809%" height="15" fill="rgb(241,85,0)" fg:x="616" fg:w="1"/><text x="50.0882%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.8382%" y="309" width="0.0809%" height="15" fill="rgb(229,130,21)" fg:x="616" fg:w="1"/><text x="50.0882%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.8382%" y="293" width="0.0809%" height="15" fill="rgb(254,84,49)" fg:x="616" fg:w="1"/><text x="50.0882%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.8382%" y="277" width="0.0809%" height="15" fill="rgb(235,85,21)" fg:x="616" fg:w="1"/><text x="50.0882%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.8382%" y="261" width="0.0809%" height="15" fill="rgb(246,128,52)" fg:x="616" fg:w="1"/><text x="50.0882%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.8382%" y="245" width="0.0809%" height="15" fill="rgb(243,114,49)" fg:x="616" fg:w="1"/><text x="50.0882%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.8382%" y="229" width="0.0809%" height="15" fill="rgb(240,224,22)" fg:x="616" fg:w="1"/><text x="50.0882%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.65%)</title><rect x="49.3528%" y="453" width="0.6472%" height="15" fill="rgb(247,201,52)" fg:x="610" fg:w="8"/><text x="49.6028%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="49.7573%" y="437" width="0.2427%" height="15" fill="rgb(231,70,45)" fg:x="615" fg:w="3"/><text x="50.0073%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="49.9191%" y="421" width="0.0809%" height="15" fill="rgb(217,215,20)" fg:x="617" fg:w="1"/><text x="50.1691%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="49.9191%" y="405" width="0.0809%" height="15" fill="rgb(226,170,30)" fg:x="617" fg:w="1"/><text x="50.1691%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="50.2427%" y="357" width="0.1618%" height="15" fill="rgb(220,190,43)" fg:x="621" fg:w="2"/><text x="50.4927%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.3236%" y="341" width="0.0809%" height="15" fill="rgb(218,20,18)" fg:x="622" fg:w="1"/><text x="50.5736%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.3236%" y="325" width="0.0809%" height="15" fill="rgb(245,37,26)" fg:x="622" fg:w="1"/><text x="50.5736%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.3236%" y="309" width="0.0809%" height="15" fill="rgb(241,127,29)" fg:x="622" fg:w="1"/><text x="50.5736%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.3236%" y="293" width="0.0809%" height="15" fill="rgb(241,33,26)" fg:x="622" fg:w="1"/><text x="50.5736%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.3236%" y="277" width="0.0809%" height="15" fill="rgb(220,106,21)" fg:x="622" fg:w="1"/><text x="50.5736%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.3236%" y="261" width="0.0809%" height="15" fill="rgb(225,125,35)" fg:x="622" fg:w="1"/><text x="50.5736%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.3236%" y="245" width="0.0809%" height="15" fill="rgb(248,80,22)" fg:x="622" fg:w="1"/><text x="50.5736%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.3236%" y="229" width="0.0809%" height="15" fill="rgb(231,117,39)" fg:x="622" fg:w="1"/><text x="50.5736%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.3236%" y="213" width="0.0809%" height="15" fill="rgb(239,183,16)" fg:x="622" fg:w="1"/><text x="50.5736%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.3236%" y="197" width="0.0809%" height="15" fill="rgb(221,61,19)" fg:x="622" fg:w="1"/><text x="50.5736%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.3236%" y="181" width="0.0809%" height="15" fill="rgb(239,196,44)" fg:x="622" fg:w="1"/><text x="50.5736%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.3236%" y="165" width="0.0809%" height="15" fill="rgb(206,113,19)" fg:x="622" fg:w="1"/><text x="50.5736%" y="175.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.4045%" y="357" width="0.0809%" height="15" fill="rgb(245,114,12)" fg:x="623" fg:w="1"/><text x="50.6545%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.4045%" y="341" width="0.0809%" height="15" fill="rgb(247,89,39)" fg:x="623" fg:w="1"/><text x="50.6545%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.4045%" y="325" width="0.0809%" height="15" fill="rgb(213,85,14)" fg:x="623" fg:w="1"/><text x="50.6545%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.4045%" y="309" width="0.0809%" height="15" fill="rgb(249,206,33)" fg:x="623" fg:w="1"/><text x="50.6545%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.4045%" y="293" width="0.0809%" height="15" fill="rgb(235,167,47)" fg:x="623" fg:w="1"/><text x="50.6545%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.4045%" y="277" width="0.0809%" height="15" fill="rgb(217,177,16)" fg:x="623" fg:w="1"/><text x="50.6545%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.4045%" y="261" width="0.0809%" height="15" fill="rgb(250,228,29)" fg:x="623" fg:w="1"/><text x="50.6545%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.4045%" y="245" width="0.0809%" height="15" fill="rgb(216,195,42)" fg:x="623" fg:w="1"/><text x="50.6545%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.4045%" y="229" width="0.0809%" height="15" fill="rgb(232,192,32)" fg:x="623" fg:w="1"/><text x="50.6545%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.4045%" y="213" width="0.0809%" height="15" fill="rgb(211,8,47)" fg:x="623" fg:w="1"/><text x="50.6545%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.4045%" y="197" width="0.0809%" height="15" fill="rgb(251,201,9)" fg:x="623" fg:w="1"/><text x="50.6545%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.4045%" y="181" width="0.0809%" height="15" fill="rgb(206,185,47)" fg:x="623" fg:w="1"/><text x="50.6545%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.4045%" y="165" width="0.0809%" height="15" fill="rgb(245,54,32)" fg:x="623" fg:w="1"/><text x="50.6545%" y="175.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="50.4854%" y="357" width="0.0809%" height="15" fill="rgb(208,1,8)" fg:x="624" fg:w="1"/><text x="50.7354%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.4854%" y="341" width="0.0809%" height="15" fill="rgb(228,57,24)" fg:x="624" fg:w="1"/><text x="50.7354%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.4854%" y="325" width="0.0809%" height="15" fill="rgb(251,24,8)" fg:x="624" fg:w="1"/><text x="50.7354%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.4854%" y="309" width="0.0809%" height="15" fill="rgb(236,196,50)" fg:x="624" fg:w="1"/><text x="50.7354%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.4854%" y="293" width="0.0809%" height="15" fill="rgb(246,222,29)" fg:x="624" fg:w="1"/><text x="50.7354%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.4854%" y="277" width="0.0809%" height="15" fill="rgb(211,34,40)" fg:x="624" fg:w="1"/><text x="50.7354%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.4854%" y="261" width="0.0809%" height="15" fill="rgb(210,66,51)" fg:x="624" fg:w="1"/><text x="50.7354%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.4854%" y="245" width="0.0809%" height="15" fill="rgb(250,56,43)" fg:x="624" fg:w="1"/><text x="50.7354%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.4854%" y="229" width="0.0809%" height="15" fill="rgb(240,111,50)" fg:x="624" fg:w="1"/><text x="50.7354%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.4854%" y="213" width="0.0809%" height="15" fill="rgb(209,117,13)" fg:x="624" fg:w="1"/><text x="50.7354%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.4854%" y="197" width="0.0809%" height="15" fill="rgb(232,164,45)" fg:x="624" fg:w="1"/><text x="50.7354%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.4854%" y="181" width="0.0809%" height="15" fill="rgb(205,69,32)" fg:x="624" fg:w="1"/><text x="50.7354%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.4854%" y="165" width="0.0809%" height="15" fill="rgb(240,147,45)" fg:x="624" fg:w="1"/><text x="50.7354%" y="175.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="50.5663%" y="357" width="0.1618%" height="15" fill="rgb(221,94,48)" fg:x="625" fg:w="2"/><text x="50.8163%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="50.6472%" y="341" width="0.0809%" height="15" fill="rgb(249,209,17)" fg:x="626" fg:w="1"/><text x="50.8972%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.8091%" y="245" width="0.0809%" height="15" fill="rgb(228,57,28)" fg:x="628" fg:w="1"/><text x="51.0591%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="50.8900%" y="197" width="0.0809%" height="15" fill="rgb(250,133,26)" fg:x="629" fg:w="1"/><text x="51.1400%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="50.8900%" y="229" width="0.1618%" height="15" fill="rgb(254,15,16)" fg:x="629" fg:w="2"/><text x="51.1400%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="50.8900%" y="213" width="0.1618%" height="15" fill="rgb(209,147,42)" fg:x="629" fg:w="2"/><text x="51.1400%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.9709%" y="197" width="0.0809%" height="15" fill="rgb(208,5,29)" fg:x="630" fg:w="1"/><text x="51.2209%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.9709%" y="181" width="0.0809%" height="15" fill="rgb(250,73,31)" fg:x="630" fg:w="1"/><text x="51.2209%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.9709%" y="165" width="0.0809%" height="15" fill="rgb(238,45,10)" fg:x="630" fg:w="1"/><text x="51.2209%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.0518%" y="229" width="0.0809%" height="15" fill="rgb(214,104,5)" fg:x="631" fg:w="1"/><text x="51.3018%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="51.1327%" y="229" width="0.0809%" height="15" fill="rgb(242,217,19)" fg:x="632" fg:w="1"/><text x="51.3827%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.1327%" y="213" width="0.0809%" height="15" fill="rgb(246,113,27)" fg:x="632" fg:w="1"/><text x="51.3827%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="51.1327%" y="197" width="0.0809%" height="15" fill="rgb(221,34,27)" fg:x="632" fg:w="1"/><text x="51.3827%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.1327%" y="181" width="0.0809%" height="15" fill="rgb(246,109,6)" fg:x="632" fg:w="1"/><text x="51.3827%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.49%)</title><rect x="50.8091%" y="277" width="0.4854%" height="15" fill="rgb(217,12,25)" fg:x="628" fg:w="6"/><text x="51.0591%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.49%)</title><rect x="50.8091%" y="261" width="0.4854%" height="15" fill="rgb(250,195,5)" fg:x="628" fg:w="6"/><text x="51.0591%" y="271.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="50.8900%" y="245" width="0.4045%" height="15" fill="rgb(244,140,45)" fg:x="629" fg:w="5"/><text x="51.1400%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.2136%" y="229" width="0.0809%" height="15" fill="rgb(230,64,14)" fg:x="633" fg:w="1"/><text x="51.4636%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.2136%" y="213" width="0.0809%" height="15" fill="rgb(206,27,27)" fg:x="633" fg:w="1"/><text x="51.4636%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.3754%" y="245" width="0.0809%" height="15" fill="rgb(230,14,50)" fg:x="635" fg:w="1"/><text x="51.6254%" y="255.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (10 samples, 0.81%)</title><rect x="50.7282%" y="341" width="0.8091%" height="15" fill="rgb(237,172,14)" fg:x="627" fg:w="10"/><text x="50.9782%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (10 samples, 0.81%)</title><rect x="50.7282%" y="325" width="0.8091%" height="15" fill="rgb(209,25,21)" fg:x="627" fg:w="10"/><text x="50.9782%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.81%)</title><rect x="50.7282%" y="309" width="0.8091%" height="15" fill="rgb(248,148,22)" fg:x="627" fg:w="10"/><text x="50.9782%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.81%)</title><rect x="50.7282%" y="293" width="0.8091%" height="15" fill="rgb(234,100,22)" fg:x="627" fg:w="10"/><text x="50.9782%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="51.2945%" y="277" width="0.2427%" height="15" fill="rgb(210,20,30)" fg:x="634" fg:w="3"/><text x="51.5445%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.2945%" y="261" width="0.2427%" height="15" fill="rgb(232,58,0)" fg:x="634" fg:w="3"/><text x="51.5445%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="51.4563%" y="245" width="0.0809%" height="15" fill="rgb(221,68,13)" fg:x="636" fg:w="1"/><text x="51.7063%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.4563%" y="229" width="0.0809%" height="15" fill="rgb(231,194,11)" fg:x="636" fg:w="1"/><text x="51.7063%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.4563%" y="213" width="0.0809%" height="15" fill="rgb(235,51,41)" fg:x="636" fg:w="1"/><text x="51.7063%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.4563%" y="197" width="0.0809%" height="15" fill="rgb(240,50,32)" fg:x="636" fg:w="1"/><text x="51.7063%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="51.4563%" y="181" width="0.0809%" height="15" fill="rgb(240,185,36)" fg:x="636" fg:w="1"/><text x="51.7063%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.5372%" y="293" width="0.0809%" height="15" fill="rgb(211,168,15)" fg:x="637" fg:w="1"/><text x="51.7872%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="51.5372%" y="277" width="0.0809%" height="15" fill="rgb(221,70,0)" fg:x="637" fg:w="1"/><text x="51.7872%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.6181%" y="293" width="0.0809%" height="15" fill="rgb(205,21,33)" fg:x="638" fg:w="1"/><text x="51.8681%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="51.6990%" y="261" width="0.2427%" height="15" fill="rgb(225,106,10)" fg:x="639" fg:w="3"/><text x="51.9490%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="51.7799%" y="245" width="0.1618%" height="15" fill="rgb(236,200,50)" fg:x="640" fg:w="2"/><text x="52.0299%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="51.9417%" y="261" width="0.1618%" height="15" fill="rgb(249,93,23)" fg:x="642" fg:w="2"/><text x="52.1917%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.0227%" y="245" width="0.0809%" height="15" fill="rgb(244,115,35)" fg:x="643" fg:w="1"/><text x="52.2727%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.0227%" y="229" width="0.0809%" height="15" fill="rgb(231,129,47)" fg:x="643" fg:w="1"/><text x="52.2727%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.1036%" y="197" width="0.0809%" height="15" fill="rgb(225,160,50)" fg:x="644" fg:w="1"/><text x="52.3536%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="52.1845%" y="181" width="0.1618%" height="15" fill="rgb(218,135,23)" fg:x="645" fg:w="2"/><text x="52.4345%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="52.1845%" y="165" width="0.1618%" height="15" fill="rgb(227,119,14)" fg:x="645" fg:w="2"/><text x="52.4345%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="52.1845%" y="149" width="0.1618%" height="15" fill="rgb(242,138,13)" fg:x="645" fg:w="2"/><text x="52.4345%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (28 samples, 2.27%)</title><rect x="50.1618%" y="405" width="2.2654%" height="15" fill="rgb(215,11,16)" fg:x="620" fg:w="28"/><text x="50.4118%" y="415.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (27 samples, 2.18%)</title><rect x="50.2427%" y="389" width="2.1845%" height="15" fill="rgb(234,170,50)" fg:x="621" fg:w="27"/><text x="50.4927%" y="399.50">&lt;..</text></g><g><title>engine::internal::Entities::prepare_entity (27 samples, 2.18%)</title><rect x="50.2427%" y="373" width="2.1845%" height="15" fill="rgb(233,34,20)" fg:x="621" fg:w="27"/><text x="50.4927%" y="383.50">e..</text></g><g><title>kernel::model::deserialize_entity (21 samples, 1.70%)</title><rect x="50.7282%" y="357" width="1.6990%" height="15" fill="rgb(237,100,45)" fg:x="627" fg:w="21"/><text x="50.9782%" y="367.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.89%)</title><rect x="51.5372%" y="341" width="0.8900%" height="15" fill="rgb(231,184,36)" fg:x="637" fg:w="11"/><text x="51.7872%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.89%)</title><rect x="51.5372%" y="325" width="0.8900%" height="15" fill="rgb(252,93,2)" fg:x="637" fg:w="11"/><text x="51.7872%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.89%)</title><rect x="51.5372%" y="309" width="0.8900%" height="15" fill="rgb(248,176,47)" fg:x="637" fg:w="11"/><text x="51.7872%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.73%)</title><rect x="51.6990%" y="293" width="0.7282%" height="15" fill="rgb(249,125,23)" fg:x="639" fg:w="9"/><text x="51.9490%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="51.6990%" y="277" width="0.7282%" height="15" fill="rgb(239,67,42)" fg:x="639" fg:w="9"/><text x="51.9490%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="52.1036%" y="261" width="0.3236%" height="15" fill="rgb(244,162,4)" fg:x="644" fg:w="4"/><text x="52.3536%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="52.1036%" y="245" width="0.3236%" height="15" fill="rgb(214,150,38)" fg:x="644" fg:w="4"/><text x="52.3536%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="52.1036%" y="229" width="0.3236%" height="15" fill="rgb(228,211,28)" fg:x="644" fg:w="4"/><text x="52.3536%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="52.1036%" y="213" width="0.3236%" height="15" fill="rgb(212,98,48)" fg:x="644" fg:w="4"/><text x="52.3536%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="52.1845%" y="197" width="0.2427%" height="15" fill="rgb(213,45,13)" fg:x="645" fg:w="3"/><text x="52.4345%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.3463%" y="181" width="0.0809%" height="15" fill="rgb(218,35,29)" fg:x="647" fg:w="1"/><text x="52.5963%" y="191.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (31 samples, 2.51%)</title><rect x="50.0000%" y="453" width="2.5081%" height="15" fill="rgb(244,13,3)" fg:x="618" fg:w="31"/><text x="50.2500%" y="463.50">&lt;p..</text></g><g><title>core::iter::adapters::try_process (30 samples, 2.43%)</title><rect x="50.0809%" y="437" width="2.4272%" height="15" fill="rgb(235,170,19)" fg:x="619" fg:w="30"/><text x="50.3309%" y="447.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 2.35%)</title><rect x="50.1618%" y="421" width="2.3463%" height="15" fill="rgb(233,193,43)" fg:x="620" fg:w="29"/><text x="50.4118%" y="431.50">&lt;..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.4272%" y="405" width="0.0809%" height="15" fill="rgb(228,223,20)" fg:x="648" fg:w="1"/><text x="52.6772%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.5081%" y="453" width="0.0809%" height="15" fill="rgb(208,85,54)" fg:x="649" fg:w="1"/><text x="52.7581%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="52.8317%" y="421" width="0.0809%" height="15" fill="rgb(254,14,45)" fg:x="653" fg:w="1"/><text x="53.0817%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.8317%" y="405" width="0.0809%" height="15" fill="rgb(247,99,29)" fg:x="653" fg:w="1"/><text x="53.0817%" y="415.50"></text></g><g><title>plugins_core::tools::get_contained_keys (52 samples, 4.21%)</title><rect x="48.9482%" y="501" width="4.2071%" height="15" fill="rgb(225,180,54)" fg:x="605" fg:w="52"/><text x="49.1982%" y="511.50">plugi..</text></g><g><title>kernel::model::entry::Entry::scope (50 samples, 4.05%)</title><rect x="49.1100%" y="485" width="4.0453%" height="15" fill="rgb(239,88,43)" fg:x="607" fg:w="50"/><text x="49.3600%" y="495.50">kern..</text></g><g><title>kernel::model::Entity::load_scope (50 samples, 4.05%)</title><rect x="49.1100%" y="469" width="4.0453%" height="15" fill="rgb(209,47,11)" fg:x="607" fg:w="50"/><text x="49.3600%" y="479.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.57%)</title><rect x="52.5890%" y="453" width="0.5663%" height="15" fill="rgb(219,179,23)" fg:x="650" fg:w="7"/><text x="52.8390%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.57%)</title><rect x="52.5890%" y="437" width="0.5663%" height="15" fill="rgb(213,183,19)" fg:x="650" fg:w="7"/><text x="52.8390%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="52.9126%" y="421" width="0.2427%" height="15" fill="rgb(210,11,9)" fg:x="654" fg:w="3"/><text x="53.1626%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="52.9126%" y="405" width="0.2427%" height="15" fill="rgb(239,194,16)" fg:x="654" fg:w="3"/><text x="53.1626%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="52.9126%" y="389" width="0.2427%" height="15" fill="rgb(246,23,50)" fg:x="654" fg:w="3"/><text x="53.1626%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="52.9126%" y="373" width="0.2427%" height="15" fill="rgb(245,10,41)" fg:x="654" fg:w="3"/><text x="53.1626%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="52.9126%" y="357" width="0.2427%" height="15" fill="rgb(228,43,24)" fg:x="654" fg:w="3"/><text x="53.1626%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.0744%" y="341" width="0.0809%" height="15" fill="rgb(220,151,0)" fg:x="656" fg:w="1"/><text x="53.3244%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.0744%" y="325" width="0.0809%" height="15" fill="rgb(232,219,10)" fg:x="656" fg:w="1"/><text x="53.3244%" y="335.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="53.2362%" y="453" width="0.0809%" height="15" fill="rgb(227,217,48)" fg:x="658" fg:w="1"/><text x="53.4862%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="53.2362%" y="437" width="0.0809%" height="15" fill="rgb(210,66,35)" fg:x="658" fg:w="1"/><text x="53.4862%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.2362%" y="421" width="0.0809%" height="15" fill="rgb(254,6,7)" fg:x="658" fg:w="1"/><text x="53.4862%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.3172%" y="453" width="0.0809%" height="15" fill="rgb(235,222,42)" fg:x="659" fg:w="1"/><text x="53.5672%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="53.3172%" y="437" width="0.0809%" height="15" fill="rgb(245,126,5)" fg:x="659" fg:w="1"/><text x="53.5672%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.5599%" y="421" width="0.0809%" height="15" fill="rgb(215,73,17)" fg:x="662" fg:w="1"/><text x="53.8099%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.5599%" y="405" width="0.0809%" height="15" fill="rgb(219,198,52)" fg:x="662" fg:w="1"/><text x="53.8099%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="53.5599%" y="389" width="0.0809%" height="15" fill="rgb(217,159,18)" fg:x="662" fg:w="1"/><text x="53.8099%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (107 samples, 8.66%)</title><rect x="45.0647%" y="517" width="8.6570%" height="15" fill="rgb(212,177,18)" fg:x="557" fg:w="107"/><text x="45.3147%" y="527.50">&lt;core::iter:..</text></g><g><title>plugins_core::tools::get_occupant_keys (7 samples, 0.57%)</title><rect x="53.1553%" y="501" width="0.5663%" height="15" fill="rgb(241,10,11)" fg:x="657" fg:w="7"/><text x="53.4053%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.57%)</title><rect x="53.1553%" y="485" width="0.5663%" height="15" fill="rgb(232,114,35)" fg:x="657" fg:w="7"/><text x="53.4053%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (7 samples, 0.57%)</title><rect x="53.1553%" y="469" width="0.5663%" height="15" fill="rgb(238,222,8)" fg:x="657" fg:w="7"/><text x="53.4053%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="53.3981%" y="453" width="0.3236%" height="15" fill="rgb(251,153,44)" fg:x="660" fg:w="4"/><text x="53.6481%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="53.3981%" y="437" width="0.3236%" height="15" fill="rgb(210,140,51)" fg:x="660" fg:w="4"/><text x="53.6481%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u32 (1 samples, 0.08%)</title><rect x="53.6408%" y="421" width="0.0809%" height="15" fill="rgb(222,63,0)" fg:x="663" fg:w="1"/><text x="53.8908%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (108 samples, 8.74%)</title><rect x="45.0647%" y="533" width="8.7379%" height="15" fill="rgb(240,18,40)" fg:x="557" fg:w="108"/><text x="45.3147%" y="543.50">&lt;alloc::vec:..</text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="53.7217%" y="517" width="0.0809%" height="15" fill="rgb(237,88,16)" fg:x="664" fg:w="1"/><text x="53.9717%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="54.2071%" y="405" width="0.3236%" height="15" fill="rgb(251,117,13)" fg:x="670" fg:w="4"/><text x="54.4571%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="54.2071%" y="389" width="0.3236%" height="15" fill="rgb(251,228,8)" fg:x="670" fg:w="4"/><text x="54.4571%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.32%)</title><rect x="54.2071%" y="373" width="0.3236%" height="15" fill="rgb(205,107,49)" fg:x="670" fg:w="4"/><text x="54.4571%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.32%)</title><rect x="54.2071%" y="357" width="0.3236%" height="15" fill="rgb(238,72,41)" fg:x="670" fg:w="4"/><text x="54.4571%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.32%)</title><rect x="54.2071%" y="341" width="0.3236%" height="15" fill="rgb(248,183,52)" fg:x="670" fg:w="4"/><text x="54.4571%" y="351.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.32%)</title><rect x="54.2071%" y="325" width="0.3236%" height="15" fill="rgb(215,58,20)" fg:x="670" fg:w="4"/><text x="54.4571%" y="335.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="54.2071%" y="309" width="0.3236%" height="15" fill="rgb(209,49,13)" fg:x="670" fg:w="4"/><text x="54.4571%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="54.2071%" y="485" width="0.4045%" height="15" fill="rgb(208,113,17)" fg:x="670" fg:w="5"/><text x="54.4571%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="54.2071%" y="469" width="0.4045%" height="15" fill="rgb(208,14,22)" fg:x="670" fg:w="5"/><text x="54.4571%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.40%)</title><rect x="54.2071%" y="453" width="0.4045%" height="15" fill="rgb(222,95,2)" fg:x="670" fg:w="5"/><text x="54.4571%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.40%)</title><rect x="54.2071%" y="437" width="0.4045%" height="15" fill="rgb(253,180,37)" fg:x="670" fg:w="5"/><text x="54.4571%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.40%)</title><rect x="54.2071%" y="421" width="0.4045%" height="15" fill="rgb(250,81,33)" fg:x="670" fg:w="5"/><text x="54.4571%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="54.5307%" y="405" width="0.0809%" height="15" fill="rgb(251,151,41)" fg:x="674" fg:w="1"/><text x="54.7807%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="54.5307%" y="389" width="0.0809%" height="15" fill="rgb(210,135,17)" fg:x="674" fg:w="1"/><text x="54.7807%" y="399.50"></text></g><g><title>engine::internal::Entities::prepare_entity (3 samples, 0.24%)</title><rect x="54.6117%" y="469" width="0.2427%" height="15" fill="rgb(239,21,29)" fg:x="675" fg:w="3"/><text x="54.8617%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="54.6926%" y="453" width="0.1618%" height="15" fill="rgb(231,215,16)" fg:x="676" fg:w="2"/><text x="54.9426%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.7735%" y="437" width="0.0809%" height="15" fill="rgb(239,151,54)" fg:x="677" fg:w="1"/><text x="55.0235%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.7735%" y="421" width="0.0809%" height="15" fill="rgb(222,122,38)" fg:x="677" fg:w="1"/><text x="55.0235%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.7735%" y="405" width="0.0809%" height="15" fill="rgb(243,128,1)" fg:x="677" fg:w="1"/><text x="55.0235%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.7735%" y="389" width="0.0809%" height="15" fill="rgb(225,74,21)" fg:x="677" fg:w="1"/><text x="55.0235%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.7735%" y="373" width="0.0809%" height="15" fill="rgb(216,210,10)" fg:x="677" fg:w="1"/><text x="55.0235%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.7735%" y="357" width="0.0809%" height="15" fill="rgb(228,76,19)" fg:x="677" fg:w="1"/><text x="55.0235%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.7735%" y="341" width="0.0809%" height="15" fill="rgb(236,80,34)" fg:x="677" fg:w="1"/><text x="55.0235%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.7735%" y="325" width="0.0809%" height="15" fill="rgb(225,173,23)" fg:x="677" fg:w="1"/><text x="55.0235%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.7735%" y="309" width="0.0809%" height="15" fill="rgb(253,38,1)" fg:x="677" fg:w="1"/><text x="55.0235%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.7735%" y="293" width="0.0809%" height="15" fill="rgb(206,155,35)" fg:x="677" fg:w="1"/><text x="55.0235%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.7735%" y="277" width="0.0809%" height="15" fill="rgb(254,27,53)" fg:x="677" fg:w="1"/><text x="55.0235%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.7735%" y="261" width="0.0809%" height="15" fill="rgb(225,52,41)" fg:x="677" fg:w="1"/><text x="55.0235%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.7735%" y="245" width="0.0809%" height="15" fill="rgb(244,53,18)" fg:x="677" fg:w="1"/><text x="55.0235%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.8544%" y="453" width="0.0809%" height="15" fill="rgb(254,206,48)" fg:x="678" fg:w="1"/><text x="55.1044%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.8544%" y="437" width="0.0809%" height="15" fill="rgb(236,182,23)" fg:x="678" fg:w="1"/><text x="55.1044%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.8544%" y="421" width="0.0809%" height="15" fill="rgb(236,191,37)" fg:x="678" fg:w="1"/><text x="55.1044%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.8544%" y="405" width="0.0809%" height="15" fill="rgb(245,53,8)" fg:x="678" fg:w="1"/><text x="55.1044%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.8544%" y="389" width="0.0809%" height="15" fill="rgb(245,147,9)" fg:x="678" fg:w="1"/><text x="55.1044%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.8544%" y="373" width="0.0809%" height="15" fill="rgb(218,24,48)" fg:x="678" fg:w="1"/><text x="55.1044%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.8544%" y="357" width="0.0809%" height="15" fill="rgb(254,23,9)" fg:x="678" fg:w="1"/><text x="55.1044%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.8544%" y="341" width="0.0809%" height="15" fill="rgb(244,105,9)" fg:x="678" fg:w="1"/><text x="55.1044%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.8544%" y="325" width="0.0809%" height="15" fill="rgb(212,142,22)" fg:x="678" fg:w="1"/><text x="55.1044%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.8544%" y="309" width="0.0809%" height="15" fill="rgb(221,114,49)" fg:x="678" fg:w="1"/><text x="55.1044%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.8544%" y="293" width="0.0809%" height="15" fill="rgb(223,210,25)" fg:x="678" fg:w="1"/><text x="55.1044%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.8544%" y="277" width="0.0809%" height="15" fill="rgb(235,162,44)" fg:x="678" fg:w="1"/><text x="55.1044%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="54.9353%" y="341" width="0.3236%" height="15" fill="rgb(237,65,45)" fg:x="679" fg:w="4"/><text x="55.1853%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="55.0162%" y="325" width="0.2427%" height="15" fill="rgb(208,79,9)" fg:x="680" fg:w="3"/><text x="55.2662%" y="335.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.24%)</title><rect x="55.0162%" y="309" width="0.2427%" height="15" fill="rgb(215,228,8)" fg:x="680" fg:w="3"/><text x="55.2662%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.24%)</title><rect x="55.0162%" y="293" width="0.2427%" height="15" fill="rgb(205,185,17)" fg:x="680" fg:w="3"/><text x="55.2662%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.24%)</title><rect x="55.0162%" y="277" width="0.2427%" height="15" fill="rgb(213,62,36)" fg:x="680" fg:w="3"/><text x="55.2662%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.24%)</title><rect x="55.0162%" y="261" width="0.2427%" height="15" fill="rgb(209,34,9)" fg:x="680" fg:w="3"/><text x="55.2662%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.24%)</title><rect x="55.0162%" y="245" width="0.2427%" height="15" fill="rgb(246,151,27)" fg:x="680" fg:w="3"/><text x="55.2662%" y="255.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="55.2589%" y="325" width="0.0809%" height="15" fill="rgb(218,206,3)" fg:x="683" fg:w="1"/><text x="55.5089%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="55.2589%" y="309" width="0.0809%" height="15" fill="rgb(242,202,1)" fg:x="683" fg:w="1"/><text x="55.5089%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="55.2589%" y="293" width="0.0809%" height="15" fill="rgb(227,185,16)" fg:x="683" fg:w="1"/><text x="55.5089%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="55.2589%" y="277" width="0.0809%" height="15" fill="rgb(241,1,14)" fg:x="683" fg:w="1"/><text x="55.5089%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="55.2589%" y="261" width="0.0809%" height="15" fill="rgb(212,113,25)" fg:x="683" fg:w="1"/><text x="55.5089%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="55.2589%" y="245" width="0.0809%" height="15" fill="rgb(247,37,43)" fg:x="683" fg:w="1"/><text x="55.5089%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="55.2589%" y="229" width="0.0809%" height="15" fill="rgb(226,54,8)" fg:x="683" fg:w="1"/><text x="55.5089%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="55.2589%" y="213" width="0.0809%" height="15" fill="rgb(251,205,25)" fg:x="683" fg:w="1"/><text x="55.5089%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="55.2589%" y="197" width="0.0809%" height="15" fill="rgb(246,87,35)" fg:x="683" fg:w="1"/><text x="55.5089%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="55.2589%" y="181" width="0.0809%" height="15" fill="rgb(251,145,46)" fg:x="683" fg:w="1"/><text x="55.5089%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="55.2589%" y="165" width="0.0809%" height="15" fill="rgb(210,210,33)" fg:x="683" fg:w="1"/><text x="55.5089%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="55.2589%" y="149" width="0.0809%" height="15" fill="rgb(221,151,11)" fg:x="683" fg:w="1"/><text x="55.5089%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="55.2589%" y="133" width="0.0809%" height="15" fill="rgb(208,160,28)" fg:x="683" fg:w="1"/><text x="55.5089%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="55.2589%" y="117" width="0.0809%" height="15" fill="rgb(243,69,29)" fg:x="683" fg:w="1"/><text x="55.5089%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="55.2589%" y="101" width="0.0809%" height="15" fill="rgb(224,144,4)" fg:x="683" fg:w="1"/><text x="55.5089%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="55.2589%" y="85" width="0.0809%" height="15" fill="rgb(211,140,38)" fg:x="683" fg:w="1"/><text x="55.5089%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="55.2589%" y="69" width="0.0809%" height="15" fill="rgb(252,189,15)" fg:x="683" fg:w="1"/><text x="55.5089%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="55.2589%" y="53" width="0.0809%" height="15" fill="rgb(251,175,23)" fg:x="683" fg:w="1"/><text x="55.5089%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="55.2589%" y="37" width="0.0809%" height="15" fill="rgb(212,184,11)" fg:x="683" fg:w="1"/><text x="55.5089%" y="47.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (11 samples, 0.89%)</title><rect x="54.6117%" y="485" width="0.8900%" height="15" fill="rgb(217,205,6)" fg:x="675" fg:w="11"/><text x="54.8617%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.65%)</title><rect x="54.8544%" y="469" width="0.6472%" height="15" fill="rgb(235,45,45)" fg:x="678" fg:w="8"/><text x="55.1044%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (7 samples, 0.57%)</title><rect x="54.9353%" y="453" width="0.5663%" height="15" fill="rgb(211,157,53)" fg:x="679" fg:w="7"/><text x="55.1853%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.57%)</title><rect x="54.9353%" y="437" width="0.5663%" height="15" fill="rgb(212,13,8)" fg:x="679" fg:w="7"/><text x="55.1853%" y="447.50"></text></g><g><title>core::fmt::write (7 samples, 0.57%)</title><rect x="54.9353%" y="421" width="0.5663%" height="15" fill="rgb(218,80,36)" fg:x="679" fg:w="7"/><text x="55.1853%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (7 samples, 0.57%)</title><rect x="54.9353%" y="405" width="0.5663%" height="15" fill="rgb(211,123,43)" fg:x="679" fg:w="7"/><text x="55.1853%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (7 samples, 0.57%)</title><rect x="54.9353%" y="389" width="0.5663%" height="15" fill="rgb(206,165,2)" fg:x="679" fg:w="7"/><text x="55.1853%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (7 samples, 0.57%)</title><rect x="54.9353%" y="373" width="0.5663%" height="15" fill="rgb(248,63,35)" fg:x="679" fg:w="7"/><text x="55.1853%" y="383.50"></text></g><g><title>core::fmt::write (7 samples, 0.57%)</title><rect x="54.9353%" y="357" width="0.5663%" height="15" fill="rgb(219,133,41)" fg:x="679" fg:w="7"/><text x="55.1853%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="55.2589%" y="341" width="0.2427%" height="15" fill="rgb(206,175,46)" fg:x="683" fg:w="3"/><text x="55.5089%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="55.3398%" y="325" width="0.1618%" height="15" fill="rgb(224,41,35)" fg:x="684" fg:w="2"/><text x="55.5898%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="55.3398%" y="309" width="0.1618%" height="15" fill="rgb(226,113,24)" fg:x="684" fg:w="2"/><text x="55.5898%" y="319.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="55.3398%" y="293" width="0.1618%" height="15" fill="rgb(219,51,41)" fg:x="684" fg:w="2"/><text x="55.5898%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="55.3398%" y="277" width="0.1618%" height="15" fill="rgb(220,145,47)" fg:x="684" fg:w="2"/><text x="55.5898%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="55.3398%" y="261" width="0.1618%" height="15" fill="rgb(239,121,47)" fg:x="684" fg:w="2"/><text x="55.5898%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="55.3398%" y="245" width="0.1618%" height="15" fill="rgb(207,60,40)" fg:x="684" fg:w="2"/><text x="55.5898%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="55.3398%" y="229" width="0.1618%" height="15" fill="rgb(224,229,11)" fg:x="684" fg:w="2"/><text x="55.5898%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="55.3398%" y="213" width="0.1618%" height="15" fill="rgb(252,28,32)" fg:x="684" fg:w="2"/><text x="55.5898%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="55.3398%" y="197" width="0.1618%" height="15" fill="rgb(207,52,49)" fg:x="684" fg:w="2"/><text x="55.5898%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="55.3398%" y="181" width="0.1618%" height="15" fill="rgb(243,51,50)" fg:x="684" fg:w="2"/><text x="55.5898%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="55.3398%" y="165" width="0.1618%" height="15" fill="rgb(212,92,21)" fg:x="684" fg:w="2"/><text x="55.5898%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="55.3398%" y="149" width="0.1618%" height="15" fill="rgb(230,183,50)" fg:x="684" fg:w="2"/><text x="55.5898%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="55.3398%" y="133" width="0.1618%" height="15" fill="rgb(225,48,9)" fg:x="684" fg:w="2"/><text x="55.5898%" y="143.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="55.3398%" y="117" width="0.1618%" height="15" fill="rgb(254,44,4)" fg:x="684" fg:w="2"/><text x="55.5898%" y="127.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="55.3398%" y="101" width="0.1618%" height="15" fill="rgb(252,128,37)" fg:x="684" fg:w="2"/><text x="55.5898%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="58.0906%" y="229" width="0.0809%" height="15" fill="rgb(227,178,8)" fg:x="718" fg:w="1"/><text x="58.3406%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="58.0906%" y="213" width="0.0809%" height="15" fill="rgb(205,206,32)" fg:x="718" fg:w="1"/><text x="58.3406%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="58.1715%" y="229" width="0.0809%" height="15" fill="rgb(220,218,22)" fg:x="719" fg:w="1"/><text x="58.4215%" y="239.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="58.1715%" y="213" width="0.0809%" height="15" fill="rgb(236,41,28)" fg:x="719" fg:w="1"/><text x="58.4215%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="58.2524%" y="229" width="0.2427%" height="15" fill="rgb(219,37,7)" fg:x="720" fg:w="3"/><text x="58.5024%" y="239.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="58.3333%" y="213" width="0.1618%" height="15" fill="rgb(206,160,15)" fg:x="721" fg:w="2"/><text x="58.5833%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.81%)</title><rect x="57.7670%" y="245" width="0.8091%" height="15" fill="rgb(208,82,21)" fg:x="714" fg:w="10"/><text x="58.0170%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.4951%" y="229" width="0.0809%" height="15" fill="rgb(226,130,25)" fg:x="723" fg:w="1"/><text x="58.7451%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.4951%" y="213" width="0.0809%" height="15" fill="rgb(212,72,24)" fg:x="723" fg:w="1"/><text x="58.7451%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="58.4951%" y="197" width="0.0809%" height="15" fill="rgb(206,28,16)" fg:x="723" fg:w="1"/><text x="58.7451%" y="207.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (18 samples, 1.46%)</title><rect x="57.6861%" y="277" width="1.4563%" height="15" fill="rgb(249,41,5)" fg:x="713" fg:w="18"/><text x="57.9361%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (18 samples, 1.46%)</title><rect x="57.6861%" y="261" width="1.4563%" height="15" fill="rgb(233,96,48)" fg:x="713" fg:w="18"/><text x="57.9361%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.57%)</title><rect x="58.5761%" y="245" width="0.5663%" height="15" fill="rgb(240,198,11)" fg:x="724" fg:w="7"/><text x="58.8261%" y="255.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="58.7379%" y="229" width="0.4045%" height="15" fill="rgb(209,175,35)" fg:x="726" fg:w="5"/><text x="58.9879%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="59.1424%" y="277" width="0.1618%" height="15" fill="rgb(214,40,51)" fg:x="731" fg:w="2"/><text x="59.3924%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="59.4660%" y="261" width="0.2427%" height="15" fill="rgb(252,56,4)" fg:x="735" fg:w="3"/><text x="59.7160%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="59.6278%" y="245" width="0.0809%" height="15" fill="rgb(219,131,5)" fg:x="737" fg:w="1"/><text x="59.8778%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 2.27%)</title><rect x="57.5243%" y="293" width="2.2654%" height="15" fill="rgb(223,67,53)" fg:x="711" fg:w="28"/><text x="57.7743%" y="303.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.49%)</title><rect x="59.3042%" y="277" width="0.4854%" height="15" fill="rgb(227,154,8)" fg:x="733" fg:w="6"/><text x="59.5542%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.7087%" y="261" width="0.0809%" height="15" fill="rgb(216,174,51)" fg:x="738" fg:w="1"/><text x="59.9587%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (33 samples, 2.67%)</title><rect x="57.5243%" y="309" width="2.6699%" height="15" fill="rgb(239,60,34)" fg:x="711" fg:w="33"/><text x="57.7743%" y="319.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="59.7896%" y="293" width="0.4045%" height="15" fill="rgb(236,165,48)" fg:x="739" fg:w="5"/><text x="60.0396%" y="303.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="59.8706%" y="277" width="0.3236%" height="15" fill="rgb(210,37,26)" fg:x="740" fg:w="4"/><text x="60.1206%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="60.6796%" y="229" width="0.1618%" height="15" fill="rgb(211,3,17)" fg:x="750" fg:w="2"/><text x="60.9296%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="60.8414%" y="213" width="0.2427%" height="15" fill="rgb(234,88,49)" fg:x="752" fg:w="3"/><text x="61.0914%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="60.9223%" y="197" width="0.1618%" height="15" fill="rgb(233,40,17)" fg:x="753" fg:w="2"/><text x="61.1723%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.89%)</title><rect x="60.2751%" y="245" width="0.8900%" height="15" fill="rgb(235,127,31)" fg:x="745" fg:w="11"/><text x="60.5251%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="60.8414%" y="229" width="0.3236%" height="15" fill="rgb(248,167,17)" fg:x="752" fg:w="4"/><text x="61.0914%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.0841%" y="213" width="0.0809%" height="15" fill="rgb(218,179,8)" fg:x="755" fg:w="1"/><text x="61.3341%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (47 samples, 3.80%)</title><rect x="57.4434%" y="325" width="3.8026%" height="15" fill="rgb(216,92,14)" fg:x="710" fg:w="47"/><text x="57.6934%" y="335.50">&lt;rpc..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (13 samples, 1.05%)</title><rect x="60.1942%" y="309" width="1.0518%" height="15" fill="rgb(221,198,46)" fg:x="744" fg:w="13"/><text x="60.4442%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 1.05%)</title><rect x="60.1942%" y="293" width="1.0518%" height="15" fill="rgb(244,7,25)" fg:x="744" fg:w="13"/><text x="60.4442%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.97%)</title><rect x="60.2751%" y="277" width="0.9709%" height="15" fill="rgb(233,75,6)" fg:x="745" fg:w="12"/><text x="60.5251%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (12 samples, 0.97%)</title><rect x="60.2751%" y="261" width="0.9709%" height="15" fill="rgb(240,189,41)" fg:x="745" fg:w="12"/><text x="60.5251%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="61.1650%" y="245" width="0.0809%" height="15" fill="rgb(237,157,21)" fg:x="756" fg:w="1"/><text x="61.4150%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.1650%" y="229" width="0.0809%" height="15" fill="rgb(210,136,49)" fg:x="756" fg:w="1"/><text x="61.4150%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="61.2460%" y="325" width="0.1618%" height="15" fill="rgb(210,68,29)" fg:x="757" fg:w="2"/><text x="61.4960%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="61.2460%" y="309" width="0.1618%" height="15" fill="rgb(247,207,20)" fg:x="757" fg:w="2"/><text x="61.4960%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (59 samples, 4.77%)</title><rect x="56.7152%" y="341" width="4.7735%" height="15" fill="rgb(224,73,48)" fg:x="701" fg:w="59"/><text x="56.9652%" y="351.50">&lt;core:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.4078%" y="325" width="0.0809%" height="15" fill="rgb(215,136,47)" fg:x="759" fg:w="1"/><text x="61.6578%" y="335.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="61.5696%" y="325" width="0.3236%" height="15" fill="rgb(232,222,16)" fg:x="761" fg:w="4"/><text x="61.8196%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (66 samples, 5.34%)</title><rect x="56.6343%" y="357" width="5.3398%" height="15" fill="rgb(249,202,47)" fg:x="700" fg:w="66"/><text x="56.8843%" y="367.50">&lt;std::c..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.49%)</title><rect x="61.4887%" y="341" width="0.4854%" height="15" fill="rgb(236,56,8)" fg:x="760" fg:w="6"/><text x="61.7387%" y="351.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="61.8932%" y="325" width="0.0809%" height="15" fill="rgb(222,6,3)" fg:x="765" fg:w="1"/><text x="62.1432%" y="335.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="61.8932%" y="309" width="0.0809%" height="15" fill="rgb(254,222,28)" fg:x="765" fg:w="1"/><text x="62.1432%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (68 samples, 5.50%)</title><rect x="56.5534%" y="373" width="5.5016%" height="15" fill="rgb(219,57,23)" fg:x="699" fg:w="68"/><text x="56.8034%" y="383.50">&lt;rpc_pr..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="61.9741%" y="357" width="0.0809%" height="15" fill="rgb(251,106,48)" fg:x="766" fg:w="1"/><text x="62.2241%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="61.9741%" y="341" width="0.0809%" height="15" fill="rgb(242,2,23)" fg:x="766" fg:w="1"/><text x="62.2241%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.9741%" y="325" width="0.0809%" height="15" fill="rgb(212,109,31)" fg:x="766" fg:w="1"/><text x="62.2241%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="62.0550%" y="373" width="0.1618%" height="15" fill="rgb(241,9,22)" fg:x="767" fg:w="2"/><text x="62.3050%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.1359%" y="357" width="0.0809%" height="15" fill="rgb(209,64,27)" fg:x="768" fg:w="1"/><text x="62.3859%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.3786%" y="357" width="0.0809%" height="15" fill="rgb(248,13,44)" fg:x="771" fg:w="1"/><text x="62.6286%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="62.3786%" y="341" width="0.0809%" height="15" fill="rgb(213,86,6)" fg:x="771" fg:w="1"/><text x="62.6286%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 6.23%)</title><rect x="56.3107%" y="389" width="6.2298%" height="15" fill="rgb(247,11,18)" fg:x="696" fg:w="77"/><text x="56.5607%" y="399.50">&lt;core::i..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="62.2168%" y="373" width="0.3236%" height="15" fill="rgb(252,31,11)" fg:x="769" fg:w="4"/><text x="62.4668%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.4595%" y="357" width="0.0809%" height="15" fill="rgb(215,63,51)" fg:x="772" fg:w="1"/><text x="62.7095%" y="367.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (93 samples, 7.52%)</title><rect x="55.9871%" y="421" width="7.5243%" height="15" fill="rgb(222,180,4)" fg:x="692" fg:w="93"/><text x="56.2371%" y="431.50">&lt;rpc_proto..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (90 samples, 7.28%)</title><rect x="56.2298%" y="405" width="7.2816%" height="15" fill="rgb(233,4,23)" fg:x="695" fg:w="90"/><text x="56.4798%" y="415.50">&lt;std::coll..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.97%)</title><rect x="62.5405%" y="389" width="0.9709%" height="15" fill="rgb(230,116,22)" fg:x="773" fg:w="12"/><text x="62.7905%" y="399.50"></text></g><g><title>__libc_malloc (12 samples, 0.97%)</title><rect x="62.5405%" y="373" width="0.9709%" height="15" fill="rgb(222,20,14)" fg:x="773" fg:w="12"/><text x="62.7905%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="63.5113%" y="421" width="0.4045%" height="15" fill="rgb(210,176,43)" fg:x="785" fg:w="5"/><text x="63.7613%" y="431.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="63.6731%" y="405" width="0.2427%" height="15" fill="rgb(219,67,32)" fg:x="787" fg:w="3"/><text x="63.9231%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="63.9968%" y="405" width="0.2427%" height="15" fill="rgb(228,91,39)" fg:x="791" fg:w="3"/><text x="64.2468%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.1586%" y="389" width="0.0809%" height="15" fill="rgb(254,63,14)" fg:x="793" fg:w="1"/><text x="64.4086%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (106 samples, 8.58%)</title><rect x="55.8252%" y="437" width="8.5761%" height="15" fill="rgb(216,171,39)" fg:x="690" fg:w="106"/><text x="56.0752%" y="447.50">&lt;core::iter:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.49%)</title><rect x="63.9159%" y="421" width="0.4854%" height="15" fill="rgb(248,68,25)" fg:x="790" fg:w="6"/><text x="64.1659%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.2395%" y="405" width="0.1618%" height="15" fill="rgb(239,63,16)" fg:x="794" fg:w="2"/><text x="64.4895%" y="415.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (116 samples, 9.39%)</title><rect x="55.6634%" y="469" width="9.3851%" height="15" fill="rgb(225,111,43)" fg:x="688" fg:w="116"/><text x="55.9134%" y="479.50">&lt;rpc_proto::J..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (116 samples, 9.39%)</title><rect x="55.6634%" y="453" width="9.3851%" height="15" fill="rgb(246,165,17)" fg:x="688" fg:w="116"/><text x="55.9134%" y="463.50">&lt;std::collect..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.65%)</title><rect x="64.4013%" y="437" width="0.6472%" height="15" fill="rgb(208,124,1)" fg:x="796" fg:w="8"/><text x="64.6513%" y="447.50"></text></g><g><title>__libc_malloc (8 samples, 0.65%)</title><rect x="64.4013%" y="421" width="0.6472%" height="15" fill="rgb(234,147,33)" fg:x="796" fg:w="8"/><text x="64.6513%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (2 samples, 0.16%)</title><rect x="65.2104%" y="437" width="0.1618%" height="15" fill="rgb(240,86,30)" fg:x="806" fg:w="2"/><text x="65.4604%" y="447.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="65.5340%" y="421" width="0.2427%" height="15" fill="rgb(237,34,51)" fg:x="810" fg:w="3"/><text x="65.7840%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (15 samples, 1.21%)</title><rect x="65.7767%" y="421" width="1.2136%" height="15" fill="rgb(232,131,41)" fg:x="813" fg:w="15"/><text x="66.0267%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (8 samples, 0.65%)</title><rect x="66.3430%" y="405" width="0.6472%" height="15" fill="rgb(227,129,53)" fg:x="820" fg:w="8"/><text x="66.5930%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (5 samples, 0.40%)</title><rect x="66.5858%" y="389" width="0.4045%" height="15" fill="rgb(230,90,35)" fg:x="823" fg:w="5"/><text x="66.8358%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (3 samples, 0.24%)</title><rect x="67.1521%" y="405" width="0.2427%" height="15" fill="rgb(248,88,27)" fg:x="830" fg:w="3"/><text x="67.4021%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (6 samples, 0.49%)</title><rect x="66.9903%" y="421" width="0.4854%" height="15" fill="rgb(223,18,17)" fg:x="828" fg:w="6"/><text x="67.2403%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.3948%" y="405" width="0.0809%" height="15" fill="rgb(241,11,10)" fg:x="833" fg:w="1"/><text x="67.6448%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="67.3948%" y="389" width="0.0809%" height="15" fill="rgb(232,111,52)" fg:x="833" fg:w="1"/><text x="67.6448%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="67.4757%" y="421" width="0.0809%" height="15" fill="rgb(228,67,8)" fg:x="834" fg:w="1"/><text x="67.7257%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.4757%" y="405" width="0.0809%" height="15" fill="rgb(251,168,31)" fg:x="834" fg:w="1"/><text x="67.7257%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.4757%" y="389" width="0.0809%" height="15" fill="rgb(249,164,11)" fg:x="834" fg:w="1"/><text x="67.7257%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="67.5566%" y="405" width="0.0809%" height="15" fill="rgb(239,81,9)" fg:x="835" fg:w="1"/><text x="67.8066%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="67.5566%" y="421" width="0.3236%" height="15" fill="rgb(222,145,38)" fg:x="835" fg:w="4"/><text x="67.8066%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="67.6375%" y="405" width="0.2427%" height="15" fill="rgb(238,80,54)" fg:x="836" fg:w="3"/><text x="67.8875%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="67.9612%" y="373" width="0.1618%" height="15" fill="rgb(237,116,16)" fg:x="840" fg:w="2"/><text x="68.2112%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.1230%" y="373" width="0.1618%" height="15" fill="rgb(218,135,19)" fg:x="842" fg:w="2"/><text x="68.3730%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="68.2848%" y="357" width="0.1618%" height="15" fill="rgb(216,207,44)" fg:x="844" fg:w="2"/><text x="68.5348%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.3657%" y="341" width="0.0809%" height="15" fill="rgb(226,152,40)" fg:x="845" fg:w="1"/><text x="68.6157%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="68.4466%" y="357" width="0.0809%" height="15" fill="rgb(219,98,35)" fg:x="846" fg:w="1"/><text x="68.6966%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.6084%" y="341" width="0.0809%" height="15" fill="rgb(222,136,46)" fg:x="848" fg:w="1"/><text x="68.8584%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="68.6893%" y="325" width="0.0809%" height="15" fill="rgb(222,71,8)" fg:x="849" fg:w="1"/><text x="68.9393%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.8511%" y="309" width="0.1618%" height="15" fill="rgb(209,89,53)" fg:x="851" fg:w="2"/><text x="69.1011%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.8511%" y="293" width="0.1618%" height="15" fill="rgb(210,97,51)" fg:x="851" fg:w="2"/><text x="69.1011%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="68.8511%" y="277" width="0.1618%" height="15" fill="rgb(248,65,21)" fg:x="851" fg:w="2"/><text x="69.1011%" y="287.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (15 samples, 1.21%)</title><rect x="67.8803%" y="421" width="1.2136%" height="15" fill="rgb(222,5,31)" fg:x="839" fg:w="15"/><text x="68.1303%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.21%)</title><rect x="67.8803%" y="405" width="1.2136%" height="15" fill="rgb(241,16,30)" fg:x="839" fg:w="15"/><text x="68.1303%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.13%)</title><rect x="67.9612%" y="389" width="1.1327%" height="15" fill="rgb(215,86,30)" fg:x="840" fg:w="14"/><text x="68.2112%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (10 samples, 0.81%)</title><rect x="68.2848%" y="373" width="0.8091%" height="15" fill="rgb(235,26,44)" fg:x="844" fg:w="10"/><text x="68.5348%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.57%)</title><rect x="68.5275%" y="357" width="0.5663%" height="15" fill="rgb(228,147,14)" fg:x="847" fg:w="7"/><text x="68.7775%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (5 samples, 0.40%)</title><rect x="68.6893%" y="341" width="0.4045%" height="15" fill="rgb(253,38,50)" fg:x="849" fg:w="5"/><text x="68.9393%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="68.7702%" y="325" width="0.3236%" height="15" fill="rgb(251,151,16)" fg:x="850" fg:w="4"/><text x="69.0202%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="69.0129%" y="309" width="0.0809%" height="15" fill="rgb(224,64,19)" fg:x="853" fg:w="1"/><text x="69.2629%" y="319.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (2 samples, 0.16%)</title><rect x="69.0939%" y="421" width="0.1618%" height="15" fill="rgb(235,214,47)" fg:x="854" fg:w="2"/><text x="69.3439%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="69.0939%" y="405" width="0.1618%" height="15" fill="rgb(218,15,19)" fg:x="854" fg:w="2"/><text x="69.3439%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.1748%" y="389" width="0.0809%" height="15" fill="rgb(247,209,3)" fg:x="855" fg:w="1"/><text x="69.4248%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.1748%" y="373" width="0.0809%" height="15" fill="rgb(217,29,2)" fg:x="855" fg:w="1"/><text x="69.4248%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="69.1748%" y="357" width="0.0809%" height="15" fill="rgb(234,9,9)" fg:x="855" fg:w="1"/><text x="69.4248%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="69.1748%" y="341" width="0.0809%" height="15" fill="rgb(207,43,14)" fg:x="855" fg:w="1"/><text x="69.4248%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="69.4175%" y="405" width="0.2427%" height="15" fill="rgb(216,219,36)" fg:x="858" fg:w="3"/><text x="69.6675%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.6602%" y="373" width="0.1618%" height="15" fill="rgb(238,12,26)" fg:x="861" fg:w="2"/><text x="69.9102%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="69.6602%" y="405" width="0.2427%" height="15" fill="rgb(226,67,30)" fg:x="861" fg:w="3"/><text x="69.9102%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="69.6602%" y="389" width="0.2427%" height="15" fill="rgb(229,154,7)" fg:x="861" fg:w="3"/><text x="69.9102%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="69.8220%" y="373" width="0.0809%" height="15" fill="rgb(249,90,18)" fg:x="863" fg:w="1"/><text x="70.0720%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="70.1456%" y="389" width="0.0809%" height="15" fill="rgb(223,53,15)" fg:x="867" fg:w="1"/><text x="70.3956%" y="399.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="70.4693%" y="341" width="0.4045%" height="15" fill="rgb(253,86,38)" fg:x="871" fg:w="5"/><text x="70.7193%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.73%)</title><rect x="70.2265%" y="373" width="0.7282%" height="15" fill="rgb(222,198,9)" fg:x="868" fg:w="9"/><text x="70.4765%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.49%)</title><rect x="70.4693%" y="357" width="0.4854%" height="15" fill="rgb(240,146,25)" fg:x="871" fg:w="6"/><text x="70.7193%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="70.8738%" y="341" width="0.0809%" height="15" fill="rgb(225,38,10)" fg:x="876" fg:w="1"/><text x="71.1238%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="71.1165%" y="357" width="0.0809%" height="15" fill="rgb(246,93,4)" fg:x="879" fg:w="1"/><text x="71.3665%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="71.2783%" y="341" width="0.0809%" height="15" fill="rgb(222,55,18)" fg:x="881" fg:w="1"/><text x="71.5283%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="71.5210%" y="325" width="0.3236%" height="15" fill="rgb(233,137,48)" fg:x="884" fg:w="4"/><text x="71.7710%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.6828%" y="309" width="0.1618%" height="15" fill="rgb(214,8,54)" fg:x="886" fg:w="2"/><text x="71.9328%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.7638%" y="293" width="0.0809%" height="15" fill="rgb(206,75,4)" fg:x="887" fg:w="1"/><text x="72.0138%" y="303.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.73%)</title><rect x="71.3592%" y="341" width="0.7282%" height="15" fill="rgb(238,171,14)" fg:x="882" fg:w="9"/><text x="71.6092%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="71.8447%" y="325" width="0.2427%" height="15" fill="rgb(233,70,41)" fg:x="888" fg:w="3"/><text x="72.0947%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (16 samples, 1.29%)</title><rect x="70.9547%" y="373" width="1.2945%" height="15" fill="rgb(214,68,36)" fg:x="877" fg:w="16"/><text x="71.2047%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.05%)</title><rect x="71.1974%" y="357" width="1.0518%" height="15" fill="rgb(223,29,5)" fg:x="880" fg:w="13"/><text x="71.4474%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="72.0874%" y="341" width="0.1618%" height="15" fill="rgb(251,22,40)" fg:x="891" fg:w="2"/><text x="72.3374%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="72.3301%" y="357" width="0.0809%" height="15" fill="rgb(210,67,41)" fg:x="894" fg:w="1"/><text x="72.5801%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="72.4110%" y="341" width="0.3236%" height="15" fill="rgb(225,177,31)" fg:x="895" fg:w="4"/><text x="72.6610%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="72.5728%" y="325" width="0.1618%" height="15" fill="rgb(221,229,11)" fg:x="897" fg:w="2"/><text x="72.8228%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="72.5728%" y="309" width="0.1618%" height="15" fill="rgb(247,172,52)" fg:x="897" fg:w="2"/><text x="72.8228%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.49%)</title><rect x="72.4110%" y="357" width="0.4854%" height="15" fill="rgb(212,73,19)" fg:x="895" fg:w="6"/><text x="72.6610%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="72.7346%" y="341" width="0.1618%" height="15" fill="rgb(244,7,46)" fg:x="899" fg:w="2"/><text x="72.9846%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (34 samples, 2.75%)</title><rect x="70.2265%" y="389" width="2.7508%" height="15" fill="rgb(230,113,20)" fg:x="868" fg:w="34"/><text x="70.4765%" y="399.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.73%)</title><rect x="72.2492%" y="373" width="0.7282%" height="15" fill="rgb(209,97,30)" fg:x="893" fg:w="9"/><text x="72.4992%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.8964%" y="357" width="0.0809%" height="15" fill="rgb(243,89,12)" fg:x="901" fg:w="1"/><text x="73.1464%" y="367.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (222 samples, 17.96%)</title><rect x="55.5016%" y="485" width="17.9612%" height="15" fill="rgb(228,32,19)" fg:x="686" fg:w="222"/><text x="55.7516%" y="495.50">&lt;rpc_proto::Json as core::co..</text></g><g><title>kernel::model::EntityPtr::to_json_value (104 samples, 8.41%)</title><rect x="65.0485%" y="469" width="8.4142%" height="15" fill="rgb(248,25,17)" fg:x="804" fg:w="104"/><text x="65.2985%" y="479.50">kernel::mode..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (103 samples, 8.33%)</title><rect x="65.1294%" y="453" width="8.3333%" height="15" fill="rgb(232,161,29)" fg:x="805" fg:w="103"/><text x="65.3794%" y="463.50">kernel::mode..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (100 samples, 8.09%)</title><rect x="65.3722%" y="437" width="8.0906%" height="15" fill="rgb(251,192,11)" fg:x="808" fg:w="100"/><text x="65.6222%" y="447.50">&lt;serde_json..</text></g><g><title>serde::ser::Serializer::collect_map (52 samples, 4.21%)</title><rect x="69.2557%" y="421" width="4.2071%" height="15" fill="rgb(240,47,32)" fg:x="856" fg:w="52"/><text x="69.5057%" y="431.50">serde..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (44 samples, 3.56%)</title><rect x="69.9029%" y="405" width="3.5599%" height="15" fill="rgb(250,16,45)" fg:x="864" fg:w="44"/><text x="70.1529%" y="415.50">kern..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.49%)</title><rect x="72.9773%" y="389" width="0.4854%" height="15" fill="rgb(227,217,42)" fg:x="902" fg:w="6"/><text x="73.2273%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="73.2201%" y="373" width="0.2427%" height="15" fill="rgb(206,82,54)" fg:x="905" fg:w="3"/><text x="73.4701%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.4628%" y="469" width="0.0809%" height="15" fill="rgb(243,145,25)" fg:x="908" fg:w="1"/><text x="73.7128%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (353 samples, 28.56%)</title><rect x="45.0647%" y="549" width="28.5599%" height="15" fill="rgb(207,166,24)" fg:x="557" fg:w="353"/><text x="45.3147%" y="559.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (245 samples, 19.82%)</title><rect x="53.8026%" y="533" width="19.8220%" height="15" fill="rgb(215,191,44)" fg:x="665" fg:w="245"/><text x="54.0526%" y="543.50">alloc::vec::in_place_collect::&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (242 samples, 19.58%)</title><rect x="54.0453%" y="517" width="19.5793%" height="15" fill="rgb(234,218,51)" fg:x="668" fg:w="242"/><text x="54.2953%" y="527.50">&lt;core::iter::adapters::map::Map..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (241 samples, 19.50%)</title><rect x="54.1262%" y="501" width="19.4984%" height="15" fill="rgb(245,133,21)" fg:x="669" fg:w="241"/><text x="54.3762%" y="511.50">plugins_rpc::sessions::SessionS..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="73.4628%" y="485" width="0.1618%" height="15" fill="rgb(230,136,45)" fg:x="908" fg:w="2"/><text x="73.7128%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="73.5437%" y="469" width="0.0809%" height="15" fill="rgb(247,63,43)" fg:x="909" fg:w="1"/><text x="73.7937%" y="479.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (359 samples, 29.05%)</title><rect x="44.6602%" y="565" width="29.0453%" height="15" fill="rgb(254,223,31)" fg:x="552" fg:w="359"/><text x="44.9102%" y="575.50">&lt;plugins_rpc::sessions::SessionServices as plug..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.6246%" y="549" width="0.0809%" height="15" fill="rgb(236,185,0)" fg:x="910" fg:w="1"/><text x="73.8746%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.6246%" y="533" width="0.0809%" height="15" fill="rgb(231,139,46)" fg:x="910" fg:w="1"/><text x="73.8746%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="73.6246%" y="517" width="0.0809%" height="15" fill="rgb(236,147,31)" fg:x="910" fg:w="1"/><text x="73.8746%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="73.7055%" y="565" width="0.1618%" height="15" fill="rgb(225,222,22)" fg:x="911" fg:w="2"/><text x="73.9555%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.8673%" y="565" width="0.0809%" height="15" fill="rgb(225,193,14)" fg:x="913" fg:w="1"/><text x="74.1173%" y="575.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (532 samples, 43.04%)</title><rect x="30.9871%" y="645" width="43.0421%" height="15" fill="rgb(253,193,46)" fg:x="383" fg:w="532"/><text x="31.2371%" y="655.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (532 samples, 43.04%)</title><rect x="30.9871%" y="629" width="43.0421%" height="15" fill="rgb(218,187,39)" fg:x="383" fg:w="532"/><text x="31.2371%" y="639.50">engine::perform::StandardPerformer::evaluate_and_perform</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (404 samples, 32.69%)</title><rect x="41.3430%" y="613" width="32.6861%" height="15" fill="rgb(227,162,48)" fg:x="511" fg:w="404"/><text x="41.5930%" y="623.50">kernel::plugins::SessionPlugins::have_surroundings</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (404 samples, 32.69%)</title><rect x="41.3430%" y="597" width="32.6861%" height="15" fill="rgb(222,25,5)" fg:x="511" fg:w="404"/><text x="41.5930%" y="607.50">&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Pl..</text></g><g><title>plugins_rpc::querying::have_surroundings (363 samples, 29.37%)</title><rect x="44.6602%" y="581" width="29.3689%" height="15" fill="rgb(211,205,16)" fg:x="552" fg:w="363"/><text x="44.9102%" y="591.50">plugins_rpc::querying::have_surroundings</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="73.9482%" y="565" width="0.0809%" height="15" fill="rgb(244,191,2)" fg:x="914" fg:w="1"/><text x="74.1982%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.9482%" y="549" width="0.0809%" height="15" fill="rgb(248,159,12)" fg:x="914" fg:w="1"/><text x="74.1982%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.9482%" y="533" width="0.0809%" height="15" fill="rgb(235,204,17)" fg:x="914" fg:w="1"/><text x="74.1982%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (916 samples, 74.11%)</title><rect x="0.0000%" y="693" width="74.1100%" height="15" fill="rgb(240,21,27)" fg:x="0" fg:w="916"/><text x="0.2500%" y="703.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (916 samples, 74.11%)</title><rect x="0.0000%" y="677" width="74.1100%" height="15" fill="rgb(224,170,31)" fg:x="0" fg:w="916"/><text x="0.2500%" y="687.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (916 samples, 74.11%)</title><rect x="0.0000%" y="661" width="74.1100%" height="15" fill="rgb(223,145,32)" fg:x="0" fg:w="916"/><text x="0.2500%" y="671.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="74.0291%" y="645" width="0.0809%" height="15" fill="rgb(243,100,5)" fg:x="915" fg:w="1"/><text x="74.2791%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="74.0291%" y="629" width="0.0809%" height="15" fill="rgb(242,131,51)" fg:x="915" fg:w="1"/><text x="74.2791%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="74.1100%" y="645" width="0.1618%" height="15" fill="rgb(223,156,46)" fg:x="916" fg:w="2"/><text x="74.3600%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (2 samples, 0.16%)</title><rect x="74.1100%" y="629" width="0.1618%" height="15" fill="rgb(215,10,40)" fg:x="916" fg:w="2"/><text x="74.3600%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="74.1100%" y="613" width="0.1618%" height="15" fill="rgb(233,155,0)" fg:x="916" fg:w="2"/><text x="74.3600%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (2 samples, 0.16%)</title><rect x="74.1100%" y="597" width="0.1618%" height="15" fill="rgb(247,78,6)" fg:x="916" fg:w="2"/><text x="74.3600%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="74.1100%" y="581" width="0.1618%" height="15" fill="rgb(237,217,21)" fg:x="916" fg:w="2"/><text x="74.3600%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="74.1100%" y="565" width="0.1618%" height="15" fill="rgb(212,1,21)" fg:x="916" fg:w="2"/><text x="74.3600%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.1909%" y="549" width="0.0809%" height="15" fill="rgb(213,7,14)" fg:x="917" fg:w="1"/><text x="74.4409%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="74.1909%" y="533" width="0.0809%" height="15" fill="rgb(225,84,14)" fg:x="917" fg:w="1"/><text x="74.4409%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="74.1909%" y="517" width="0.0809%" height="15" fill="rgb(239,216,39)" fg:x="917" fg:w="1"/><text x="74.4409%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="74.2718%" y="565" width="0.0809%" height="15" fill="rgb(253,29,23)" fg:x="918" fg:w="1"/><text x="74.5218%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="74.2718%" y="549" width="0.0809%" height="15" fill="rgb(220,167,50)" fg:x="918" fg:w="1"/><text x="74.5218%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.2718%" y="533" width="0.0809%" height="15" fill="rgb(232,141,1)" fg:x="918" fg:w="1"/><text x="74.5218%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.2718%" y="517" width="0.0809%" height="15" fill="rgb(222,210,1)" fg:x="918" fg:w="1"/><text x="74.5218%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.2718%" y="501" width="0.0809%" height="15" fill="rgb(219,84,10)" fg:x="918" fg:w="1"/><text x="74.5218%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.2718%" y="485" width="0.0809%" height="15" fill="rgb(245,188,6)" fg:x="918" fg:w="1"/><text x="74.5218%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.2718%" y="469" width="0.0809%" height="15" fill="rgb(252,139,39)" fg:x="918" fg:w="1"/><text x="74.5218%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.2718%" y="453" width="0.0809%" height="15" fill="rgb(218,42,26)" fg:x="918" fg:w="1"/><text x="74.5218%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.2718%" y="437" width="0.0809%" height="15" fill="rgb(237,226,51)" fg:x="918" fg:w="1"/><text x="74.5218%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.2718%" y="421" width="0.0809%" height="15" fill="rgb(246,15,17)" fg:x="918" fg:w="1"/><text x="74.5218%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.2718%" y="405" width="0.0809%" height="15" fill="rgb(228,170,42)" fg:x="918" fg:w="1"/><text x="74.5218%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3528%" y="517" width="0.0809%" height="15" fill="rgb(248,118,53)" fg:x="919" fg:w="1"/><text x="74.6028%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.32%)</title><rect x="74.2718%" y="613" width="0.3236%" height="15" fill="rgb(207,30,10)" fg:x="918" fg:w="4"/><text x="74.5218%" y="623.50"></text></g><g><title>engine::internal::Entities::prepare_entity (4 samples, 0.32%)</title><rect x="74.2718%" y="597" width="0.3236%" height="15" fill="rgb(217,104,38)" fg:x="918" fg:w="4"/><text x="74.5218%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.32%)</title><rect x="74.2718%" y="581" width="0.3236%" height="15" fill="rgb(211,165,26)" fg:x="918" fg:w="4"/><text x="74.5218%" y="591.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="74.3528%" y="565" width="0.2427%" height="15" fill="rgb(247,38,9)" fg:x="919" fg:w="3"/><text x="74.6028%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="74.3528%" y="549" width="0.2427%" height="15" fill="rgb(218,187,8)" fg:x="919" fg:w="3"/><text x="74.6028%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="74.3528%" y="533" width="0.2427%" height="15" fill="rgb(247,94,28)" fg:x="919" fg:w="3"/><text x="74.6028%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.4337%" y="517" width="0.1618%" height="15" fill="rgb(218,173,30)" fg:x="920" fg:w="2"/><text x="74.6837%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.4337%" y="501" width="0.1618%" height="15" fill="rgb(245,45,36)" fg:x="920" fg:w="2"/><text x="74.6837%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="74.5146%" y="485" width="0.0809%" height="15" fill="rgb(221,172,44)" fg:x="921" fg:w="1"/><text x="74.7646%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="74.5146%" y="469" width="0.0809%" height="15" fill="rgb(222,45,12)" fg:x="921" fg:w="1"/><text x="74.7646%" y="479.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="74.5955%" y="613" width="0.1618%" height="15" fill="rgb(250,10,22)" fg:x="922" fg:w="2"/><text x="74.8455%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="74.5955%" y="597" width="0.1618%" height="15" fill="rgb(239,27,0)" fg:x="922" fg:w="2"/><text x="74.8455%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="74.5955%" y="581" width="0.1618%" height="15" fill="rgb(223,118,22)" fg:x="922" fg:w="2"/><text x="74.8455%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.5955%" y="565" width="0.1618%" height="15" fill="rgb(251,81,25)" fg:x="922" fg:w="2"/><text x="74.8455%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.5955%" y="549" width="0.1618%" height="15" fill="rgb(237,225,53)" fg:x="922" fg:w="2"/><text x="74.8455%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.6764%" y="533" width="0.0809%" height="15" fill="rgb(237,186,51)" fg:x="923" fg:w="1"/><text x="74.9264%" y="543.50"></text></g><g><title>__pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="74.8382%" y="501" width="0.0809%" height="15" fill="rgb(247,209,11)" fg:x="925" fg:w="1"/><text x="75.0882%" y="511.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (9 samples, 0.73%)</title><rect x="74.2718%" y="645" width="0.7282%" height="15" fill="rgb(223,109,27)" fg:x="918" fg:w="9"/><text x="74.5218%" y="655.50"></text></g><g><title>engine::session::Session::new (9 samples, 0.73%)</title><rect x="74.2718%" y="629" width="0.7282%" height="15" fill="rgb(246,181,13)" fg:x="918" fg:w="9"/><text x="74.5218%" y="639.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (3 samples, 0.24%)</title><rect x="74.7573%" y="613" width="0.2427%" height="15" fill="rgb(234,57,44)" fg:x="924" fg:w="3"/><text x="75.0073%" y="623.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (3 samples, 0.24%)</title><rect x="74.7573%" y="597" width="0.2427%" height="15" fill="rgb(211,227,50)" fg:x="924" fg:w="3"/><text x="75.0073%" y="607.50"></text></g><g><title>libloading::os::unix::Library::open (3 samples, 0.24%)</title><rect x="74.7573%" y="581" width="0.2427%" height="15" fill="rgb(254,57,34)" fg:x="924" fg:w="3"/><text x="75.0073%" y="591.50"></text></g><g><title>dlopen (3 samples, 0.24%)</title><rect x="74.7573%" y="565" width="0.2427%" height="15" fill="rgb(227,212,26)" fg:x="924" fg:w="3"/><text x="75.0073%" y="575.50"></text></g><g><title>_dl_catch_error (3 samples, 0.24%)</title><rect x="74.7573%" y="549" width="0.2427%" height="15" fill="rgb(244,169,44)" fg:x="924" fg:w="3"/><text x="75.0073%" y="559.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="74.7573%" y="533" width="0.2427%" height="15" fill="rgb(236,135,50)" fg:x="924" fg:w="3"/><text x="75.0073%" y="543.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="74.8382%" y="517" width="0.1618%" height="15" fill="rgb(241,89,30)" fg:x="925" fg:w="2"/><text x="75.0882%" y="527.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="74.9191%" y="501" width="0.0809%" height="15" fill="rgb(206,113,34)" fg:x="926" fg:w="1"/><text x="75.1691%" y="511.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="75.0000%" y="597" width="0.0809%" height="15" fill="rgb(218,104,52)" fg:x="927" fg:w="1"/><text x="75.2500%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.0809%" y="533" width="0.0809%" height="15" fill="rgb(223,82,32)" fg:x="928" fg:w="1"/><text x="75.3309%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.0809%" y="517" width="0.0809%" height="15" fill="rgb(249,219,30)" fg:x="928" fg:w="1"/><text x="75.3309%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.0809%" y="501" width="0.0809%" height="15" fill="rgb(233,141,21)" fg:x="928" fg:w="1"/><text x="75.3309%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.0809%" y="485" width="0.0809%" height="15" fill="rgb(252,87,44)" fg:x="928" fg:w="1"/><text x="75.3309%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.0809%" y="469" width="0.0809%" height="15" fill="rgb(229,48,33)" fg:x="928" fg:w="1"/><text x="75.3309%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.0809%" y="453" width="0.0809%" height="15" fill="rgb(229,23,22)" fg:x="928" fg:w="1"/><text x="75.3309%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.0809%" y="437" width="0.0809%" height="15" fill="rgb(244,116,16)" fg:x="928" fg:w="1"/><text x="75.3309%" y="447.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="75.0809%" y="549" width="0.1618%" height="15" fill="rgb(247,45,10)" fg:x="928" fg:w="2"/><text x="75.3309%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.1618%" y="533" width="0.0809%" height="15" fill="rgb(228,60,29)" fg:x="929" fg:w="1"/><text x="75.4118%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.1618%" y="517" width="0.0809%" height="15" fill="rgb(205,129,15)" fg:x="929" fg:w="1"/><text x="75.4118%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="75.3236%" y="533" width="0.0809%" height="15" fill="rgb(206,229,4)" fg:x="931" fg:w="1"/><text x="75.5736%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.4045%" y="533" width="0.0809%" height="15" fill="rgb(249,191,30)" fg:x="932" fg:w="1"/><text x="75.6545%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.4045%" y="517" width="0.0809%" height="15" fill="rgb(250,84,54)" fg:x="932" fg:w="1"/><text x="75.6545%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="75.4854%" y="517" width="0.0809%" height="15" fill="rgb(207,25,53)" fg:x="933" fg:w="1"/><text x="75.7354%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="75.4854%" y="501" width="0.0809%" height="15" fill="rgb(235,40,8)" fg:x="933" fg:w="1"/><text x="75.7354%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="75.4854%" y="485" width="0.0809%" height="15" fill="rgb(226,169,33)" fg:x="933" fg:w="1"/><text x="75.7354%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.4854%" y="469" width="0.0809%" height="15" fill="rgb(238,110,8)" fg:x="933" fg:w="1"/><text x="75.7354%" y="479.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.4854%" y="453" width="0.0809%" height="15" fill="rgb(251,206,12)" fg:x="933" fg:w="1"/><text x="75.7354%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.4854%" y="437" width="0.0809%" height="15" fill="rgb(248,171,18)" fg:x="933" fg:w="1"/><text x="75.7354%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.4854%" y="421" width="0.0809%" height="15" fill="rgb(213,65,46)" fg:x="933" fg:w="1"/><text x="75.7354%" y="431.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="75.5663%" y="517" width="0.1618%" height="15" fill="rgb(211,154,15)" fg:x="934" fg:w="2"/><text x="75.8163%" y="527.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="75.5663%" y="501" width="0.1618%" height="15" fill="rgb(217,75,43)" fg:x="934" fg:w="2"/><text x="75.8163%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="75.5663%" y="485" width="0.1618%" height="15" fill="rgb(230,32,33)" fg:x="934" fg:w="2"/><text x="75.8163%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="75.5663%" y="469" width="0.1618%" height="15" fill="rgb(221,100,16)" fg:x="934" fg:w="2"/><text x="75.8163%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="75.7282%" y="501" width="0.0809%" height="15" fill="rgb(212,129,47)" fg:x="936" fg:w="1"/><text x="75.9782%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="75.8091%" y="501" width="0.1618%" height="15" fill="rgb(239,217,47)" fg:x="937" fg:w="2"/><text x="76.0591%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="75.8091%" y="485" width="0.1618%" height="15" fill="rgb(230,84,24)" fg:x="937" fg:w="2"/><text x="76.0591%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.97%)</title><rect x="75.0809%" y="565" width="0.9709%" height="15" fill="rgb(214,153,51)" fg:x="928" fg:w="12"/><text x="75.3309%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="75.2427%" y="549" width="0.8091%" height="15" fill="rgb(231,6,35)" fg:x="930" fg:w="10"/><text x="75.4927%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="75.4854%" y="533" width="0.5663%" height="15" fill="rgb(229,122,30)" fg:x="933" fg:w="7"/><text x="75.7354%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="75.7282%" y="517" width="0.3236%" height="15" fill="rgb(234,71,10)" fg:x="936" fg:w="4"/><text x="75.9782%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.9709%" y="501" width="0.0809%" height="15" fill="rgb(215,173,26)" fg:x="939" fg:w="1"/><text x="76.2209%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.9709%" y="485" width="0.0809%" height="15" fill="rgb(248,118,52)" fg:x="939" fg:w="1"/><text x="76.2209%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.9709%" y="469" width="0.0809%" height="15" fill="rgb(237,55,46)" fg:x="939" fg:w="1"/><text x="76.2209%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.0518%" y="533" width="0.0809%" height="15" fill="rgb(243,214,43)" fg:x="940" fg:w="1"/><text x="76.3018%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.1327%" y="517" width="0.0809%" height="15" fill="rgb(252,123,30)" fg:x="941" fg:w="1"/><text x="76.3827%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.1327%" y="501" width="0.0809%" height="15" fill="rgb(215,73,39)" fg:x="941" fg:w="1"/><text x="76.3827%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="76.0518%" y="565" width="0.2427%" height="15" fill="rgb(251,194,29)" fg:x="940" fg:w="3"/><text x="76.3018%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="76.0518%" y="549" width="0.2427%" height="15" fill="rgb(224,58,52)" fg:x="940" fg:w="3"/><text x="76.3018%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.1327%" y="533" width="0.1618%" height="15" fill="rgb(248,106,46)" fg:x="941" fg:w="2"/><text x="76.3827%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.2136%" y="517" width="0.0809%" height="15" fill="rgb(223,80,29)" fg:x="942" fg:w="1"/><text x="76.4636%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.2136%" y="501" width="0.0809%" height="15" fill="rgb(243,137,9)" fg:x="942" fg:w="1"/><text x="76.4636%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.2136%" y="485" width="0.0809%" height="15" fill="rgb(235,121,28)" fg:x="942" fg:w="1"/><text x="76.4636%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.2136%" y="469" width="0.0809%" height="15" fill="rgb(219,121,41)" fg:x="942" fg:w="1"/><text x="76.4636%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2945%" y="517" width="0.0809%" height="15" fill="rgb(251,60,6)" fg:x="943" fg:w="1"/><text x="76.5445%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2945%" y="501" width="0.0809%" height="15" fill="rgb(208,12,30)" fg:x="943" fg:w="1"/><text x="76.5445%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.2945%" y="485" width="0.0809%" height="15" fill="rgb(207,176,36)" fg:x="943" fg:w="1"/><text x="76.5445%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3754%" y="517" width="0.0809%" height="15" fill="rgb(211,188,29)" fg:x="944" fg:w="1"/><text x="76.6254%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.3754%" y="501" width="0.0809%" height="15" fill="rgb(220,184,37)" fg:x="944" fg:w="1"/><text x="76.6254%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="76.3754%" y="485" width="0.0809%" height="15" fill="rgb(239,87,37)" fg:x="944" fg:w="1"/><text x="76.6254%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.3754%" y="469" width="0.0809%" height="15" fill="rgb(232,113,44)" fg:x="944" fg:w="1"/><text x="76.6254%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.3754%" y="453" width="0.0809%" height="15" fill="rgb(246,25,39)" fg:x="944" fg:w="1"/><text x="76.6254%" y="463.50"></text></g><g><title>engine::session::Session::flush (20 samples, 1.62%)</title><rect x="75.0000%" y="629" width="1.6181%" height="15" fill="rgb(247,30,13)" fg:x="927" fg:w="20"/><text x="75.2500%" y="639.50"></text></g><g><title>engine::session::Session::save_entity_changes (20 samples, 1.62%)</title><rect x="75.0000%" y="613" width="1.6181%" height="15" fill="rgb(230,176,35)" fg:x="927" fg:w="20"/><text x="75.2500%" y="623.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (19 samples, 1.54%)</title><rect x="75.0809%" y="597" width="1.5372%" height="15" fill="rgb(222,23,18)" fg:x="928" fg:w="19"/><text x="75.3309%" y="607.50"></text></g><g><title>engine::session::Session::check_for_changes (19 samples, 1.54%)</title><rect x="75.0809%" y="581" width="1.5372%" height="15" fill="rgb(234,86,8)" fg:x="928" fg:w="19"/><text x="75.3309%" y="591.50"></text></g><g><title>kernel::compare::any_entity_changes (4 samples, 0.32%)</title><rect x="76.2945%" y="565" width="0.3236%" height="15" fill="rgb(206,218,47)" fg:x="943" fg:w="4"/><text x="76.5445%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="76.2945%" y="549" width="0.3236%" height="15" fill="rgb(229,35,31)" fg:x="943" fg:w="4"/><text x="76.5445%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="76.2945%" y="533" width="0.3236%" height="15" fill="rgb(242,81,7)" fg:x="943" fg:w="4"/><text x="76.5445%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="76.4563%" y="517" width="0.1618%" height="15" fill="rgb(231,11,35)" fg:x="945" fg:w="2"/><text x="76.7063%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (1 samples, 0.08%)</title><rect x="76.5372%" y="501" width="0.0809%" height="15" fill="rgb(219,218,17)" fg:x="946" fg:w="1"/><text x="76.7872%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.5372%" y="485" width="0.0809%" height="15" fill="rgb(221,83,32)" fg:x="946" fg:w="1"/><text x="76.7872%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.5372%" y="469" width="0.0809%" height="15" fill="rgb(233,49,54)" fg:x="946" fg:w="1"/><text x="76.7872%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.5372%" y="453" width="0.0809%" height="15" fill="rgb(206,18,51)" fg:x="946" fg:w="1"/><text x="76.7872%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="76.6181%" y="597" width="0.0809%" height="15" fill="rgb(249,193,15)" fg:x="947" fg:w="1"/><text x="76.8681%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.6181%" y="581" width="0.0809%" height="15" fill="rgb(245,186,19)" fg:x="947" fg:w="1"/><text x="76.8681%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.6181%" y="565" width="0.0809%" height="15" fill="rgb(230,4,24)" fg:x="947" fg:w="1"/><text x="76.8681%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.6181%" y="549" width="0.0809%" height="15" fill="rgb(234,75,27)" fg:x="947" fg:w="1"/><text x="76.8681%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.6181%" y="533" width="0.0809%" height="15" fill="rgb(244,187,35)" fg:x="947" fg:w="1"/><text x="76.8681%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.6181%" y="517" width="0.0809%" height="15" fill="rgb(241,97,43)" fg:x="947" fg:w="1"/><text x="76.8681%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.6181%" y="501" width="0.0809%" height="15" fill="rgb(236,94,2)" fg:x="947" fg:w="1"/><text x="76.8681%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.6181%" y="485" width="0.0809%" height="15" fill="rgb(231,175,7)" fg:x="947" fg:w="1"/><text x="76.8681%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.6181%" y="469" width="0.0809%" height="15" fill="rgb(236,89,47)" fg:x="947" fg:w="1"/><text x="76.8681%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.6181%" y="453" width="0.0809%" height="15" fill="rgb(213,191,37)" fg:x="947" fg:w="1"/><text x="76.8681%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.6181%" y="437" width="0.0809%" height="15" fill="rgb(252,0,34)" fg:x="947" fg:w="1"/><text x="76.8681%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.6181%" y="421" width="0.0809%" height="15" fill="rgb(208,145,44)" fg:x="947" fg:w="1"/><text x="76.8681%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.6181%" y="405" width="0.0809%" height="15" fill="rgb(227,95,50)" fg:x="947" fg:w="1"/><text x="76.8681%" y="415.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="76.6181%" y="389" width="0.0809%" height="15" fill="rgb(222,136,24)" fg:x="947" fg:w="1"/><text x="76.8681%" y="399.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="76.6181%" y="373" width="0.0809%" height="15" fill="rgb(218,105,10)" fg:x="947" fg:w="1"/><text x="76.8681%" y="383.50"></text></g><g><title>plugins_core::build::Build::holding (3 samples, 0.24%)</title><rect x="76.6181%" y="629" width="0.2427%" height="15" fill="rgb(216,65,28)" fg:x="947" fg:w="3"/><text x="76.8681%" y="639.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="76.6181%" y="613" width="0.2427%" height="15" fill="rgb(229,6,28)" fg:x="947" fg:w="3"/><text x="76.8681%" y="623.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="76.6990%" y="597" width="0.1618%" height="15" fill="rgb(222,160,42)" fg:x="948" fg:w="2"/><text x="76.9490%" y="607.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="76.6990%" y="581" width="0.1618%" height="15" fill="rgb(235,83,49)" fg:x="948" fg:w="2"/><text x="76.9490%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="76.6990%" y="565" width="0.1618%" height="15" fill="rgb(236,86,36)" fg:x="948" fg:w="2"/><text x="76.9490%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="76.6990%" y="549" width="0.1618%" height="15" fill="rgb(236,19,41)" fg:x="948" fg:w="2"/><text x="76.9490%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="76.7799%" y="533" width="0.0809%" height="15" fill="rgb(217,71,31)" fg:x="949" fg:w="1"/><text x="77.0299%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.7799%" y="517" width="0.0809%" height="15" fill="rgb(236,209,25)" fg:x="949" fg:w="1"/><text x="77.0299%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7799%" y="501" width="0.0809%" height="15" fill="rgb(247,104,21)" fg:x="949" fg:w="1"/><text x="77.0299%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7799%" y="485" width="0.0809%" height="15" fill="rgb(243,80,38)" fg:x="949" fg:w="1"/><text x="77.0299%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="76.7799%" y="469" width="0.0809%" height="15" fill="rgb(232,109,38)" fg:x="949" fg:w="1"/><text x="77.0299%" y="479.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="76.8608%" y="629" width="0.0809%" height="15" fill="rgb(212,177,53)" fg:x="950" fg:w="1"/><text x="77.1108%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="76.8608%" y="613" width="0.0809%" height="15" fill="rgb(227,30,34)" fg:x="950" fg:w="1"/><text x="77.1108%" y="623.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="76.8608%" y="597" width="0.0809%" height="15" fill="rgb(205,175,25)" fg:x="950" fg:w="1"/><text x="77.1108%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8608%" y="581" width="0.0809%" height="15" fill="rgb(249,39,54)" fg:x="950" fg:w="1"/><text x="77.1108%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9417%" y="613" width="0.0809%" height="15" fill="rgb(215,54,37)" fg:x="951" fg:w="1"/><text x="77.1917%" y="623.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="77.0227%" y="613" width="0.1618%" height="15" fill="rgb(205,60,46)" fg:x="952" fg:w="2"/><text x="77.2727%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="77.1036%" y="597" width="0.0809%" height="15" fill="rgb(238,89,29)" fg:x="953" fg:w="1"/><text x="77.3536%" y="607.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="77.1036%" y="581" width="0.0809%" height="15" fill="rgb(212,48,10)" fg:x="953" fg:w="1"/><text x="77.3536%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="77.1036%" y="565" width="0.0809%" height="15" fill="rgb(237,186,28)" fg:x="953" fg:w="1"/><text x="77.3536%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="77.1036%" y="549" width="0.0809%" height="15" fill="rgb(237,204,4)" fg:x="953" fg:w="1"/><text x="77.3536%" y="559.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="77.1036%" y="533" width="0.0809%" height="15" fill="rgb(237,15,47)" fg:x="953" fg:w="1"/><text x="77.3536%" y="543.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="77.1036%" y="517" width="0.0809%" height="15" fill="rgb(244,110,25)" fg:x="953" fg:w="1"/><text x="77.3536%" y="527.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="77.1036%" y="501" width="0.0809%" height="15" fill="rgb(241,12,16)" fg:x="953" fg:w="1"/><text x="77.3536%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="77.1845%" y="533" width="0.0809%" height="15" fill="rgb(235,25,9)" fg:x="954" fg:w="1"/><text x="77.4345%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.1845%" y="517" width="0.0809%" height="15" fill="rgb(245,159,19)" fg:x="954" fg:w="1"/><text x="77.4345%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.1845%" y="501" width="0.0809%" height="15" fill="rgb(236,63,32)" fg:x="954" fg:w="1"/><text x="77.4345%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.1845%" y="485" width="0.0809%" height="15" fill="rgb(235,32,52)" fg:x="954" fg:w="1"/><text x="77.4345%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.2654%" y="517" width="0.0809%" height="15" fill="rgb(209,176,21)" fg:x="955" fg:w="1"/><text x="77.5154%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.2654%" y="501" width="0.0809%" height="15" fill="rgb(205,90,42)" fg:x="955" fg:w="1"/><text x="77.5154%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="77.3463%" y="485" width="0.0809%" height="15" fill="rgb(213,132,16)" fg:x="956" fg:w="1"/><text x="77.5963%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.4272%" y="485" width="0.0809%" height="15" fill="rgb(232,11,22)" fg:x="957" fg:w="1"/><text x="77.6772%" y="495.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.4272%" y="469" width="0.0809%" height="15" fill="rgb(248,167,41)" fg:x="957" fg:w="1"/><text x="77.6772%" y="479.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.4272%" y="453" width="0.0809%" height="15" fill="rgb(209,127,6)" fg:x="957" fg:w="1"/><text x="77.6772%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.4272%" y="437" width="0.0809%" height="15" fill="rgb(246,210,34)" fg:x="957" fg:w="1"/><text x="77.6772%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="77.3463%" y="517" width="0.3236%" height="15" fill="rgb(238,165,13)" fg:x="956" fg:w="4"/><text x="77.5963%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="77.3463%" y="501" width="0.3236%" height="15" fill="rgb(233,98,15)" fg:x="956" fg:w="4"/><text x="77.5963%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="77.5081%" y="485" width="0.1618%" height="15" fill="rgb(215,215,51)" fg:x="958" fg:w="2"/><text x="77.7581%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="77.5081%" y="469" width="0.1618%" height="15" fill="rgb(217,161,25)" fg:x="958" fg:w="2"/><text x="77.7581%" y="479.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.5081%" y="453" width="0.1618%" height="15" fill="rgb(217,167,48)" fg:x="958" fg:w="2"/><text x="77.7581%" y="463.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.5890%" y="437" width="0.0809%" height="15" fill="rgb(205,163,34)" fg:x="959" fg:w="1"/><text x="77.8390%" y="447.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (8 samples, 0.65%)</title><rect x="77.1845%" y="549" width="0.6472%" height="15" fill="rgb(241,197,31)" fg:x="954" fg:w="8"/><text x="77.4345%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.57%)</title><rect x="77.2654%" y="533" width="0.5663%" height="15" fill="rgb(225,123,11)" fg:x="955" fg:w="7"/><text x="77.5154%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="77.6699%" y="517" width="0.1618%" height="15" fill="rgb(217,4,20)" fg:x="960" fg:w="2"/><text x="77.9199%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="77.6699%" y="501" width="0.1618%" height="15" fill="rgb(215,55,9)" fg:x="960" fg:w="2"/><text x="77.9199%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="77.6699%" y="485" width="0.1618%" height="15" fill="rgb(218,165,5)" fg:x="960" fg:w="2"/><text x="77.9199%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.7508%" y="469" width="0.0809%" height="15" fill="rgb(222,175,15)" fg:x="961" fg:w="1"/><text x="78.0008%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.7508%" y="453" width="0.0809%" height="15" fill="rgb(223,85,34)" fg:x="961" fg:w="1"/><text x="78.0008%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.7508%" y="437" width="0.0809%" height="15" fill="rgb(234,228,29)" fg:x="961" fg:w="1"/><text x="78.0008%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.9126%" y="485" width="0.0809%" height="15" fill="rgb(239,7,28)" fg:x="963" fg:w="1"/><text x="78.1626%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="77.8317%" y="549" width="0.3236%" height="15" fill="rgb(252,222,53)" fg:x="962" fg:w="4"/><text x="78.0817%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="77.8317%" y="533" width="0.3236%" height="15" fill="rgb(232,146,44)" fg:x="962" fg:w="4"/><text x="78.0817%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="77.8317%" y="517" width="0.3236%" height="15" fill="rgb(243,223,53)" fg:x="962" fg:w="4"/><text x="78.0817%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="77.8317%" y="501" width="0.3236%" height="15" fill="rgb(219,128,25)" fg:x="962" fg:w="4"/><text x="78.0817%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="77.9935%" y="485" width="0.1618%" height="15" fill="rgb(223,56,32)" fg:x="964" fg:w="2"/><text x="78.2435%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="77.9935%" y="469" width="0.1618%" height="15" fill="rgb(237,41,3)" fg:x="964" fg:w="2"/><text x="78.2435%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.0744%" y="453" width="0.0809%" height="15" fill="rgb(235,138,9)" fg:x="965" fg:w="1"/><text x="78.3244%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.0744%" y="437" width="0.0809%" height="15" fill="rgb(214,131,10)" fg:x="965" fg:w="1"/><text x="78.3244%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="78.2362%" y="501" width="0.1618%" height="15" fill="rgb(229,89,7)" fg:x="967" fg:w="2"/><text x="78.4862%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="78.3981%" y="501" width="0.0809%" height="15" fill="rgb(240,24,42)" fg:x="969" fg:w="1"/><text x="78.6481%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.4790%" y="437" width="0.0809%" height="15" fill="rgb(243,188,54)" fg:x="970" fg:w="1"/><text x="78.7290%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="78.4790%" y="421" width="0.0809%" height="15" fill="rgb(246,92,22)" fg:x="970" fg:w="1"/><text x="78.7290%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.4790%" y="405" width="0.0809%" height="15" fill="rgb(211,176,51)" fg:x="970" fg:w="1"/><text x="78.7290%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="78.4790%" y="501" width="0.2427%" height="15" fill="rgb(246,207,34)" fg:x="970" fg:w="3"/><text x="78.7290%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="78.4790%" y="485" width="0.2427%" height="15" fill="rgb(239,95,2)" fg:x="970" fg:w="3"/><text x="78.7290%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="78.4790%" y="469" width="0.2427%" height="15" fill="rgb(211,124,25)" fg:x="970" fg:w="3"/><text x="78.7290%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="78.4790%" y="453" width="0.2427%" height="15" fill="rgb(231,221,19)" fg:x="970" fg:w="3"/><text x="78.7290%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="78.5599%" y="437" width="0.1618%" height="15" fill="rgb(239,183,19)" fg:x="971" fg:w="2"/><text x="78.8099%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.7217%" y="485" width="0.0809%" height="15" fill="rgb(221,130,29)" fg:x="973" fg:w="1"/><text x="78.9717%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.7217%" y="469" width="0.0809%" height="15" fill="rgb(206,130,36)" fg:x="973" fg:w="1"/><text x="78.9717%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.7217%" y="453" width="0.0809%" height="15" fill="rgb(215,70,19)" fg:x="973" fg:w="1"/><text x="78.9717%" y="463.50"></text></g><g><title>engine::session::Session::flush (21 samples, 1.70%)</title><rect x="77.1845%" y="613" width="1.6990%" height="15" fill="rgb(244,16,43)" fg:x="954" fg:w="21"/><text x="77.4345%" y="623.50"></text></g><g><title>engine::session::Session::save_entity_changes (21 samples, 1.70%)</title><rect x="77.1845%" y="597" width="1.6990%" height="15" fill="rgb(222,115,32)" fg:x="954" fg:w="21"/><text x="77.4345%" y="607.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (21 samples, 1.70%)</title><rect x="77.1845%" y="581" width="1.6990%" height="15" fill="rgb(247,48,25)" fg:x="954" fg:w="21"/><text x="77.4345%" y="591.50"></text></g><g><title>engine::session::Session::check_for_changes (21 samples, 1.70%)</title><rect x="77.1845%" y="565" width="1.6990%" height="15" fill="rgb(226,180,51)" fg:x="954" fg:w="21"/><text x="77.4345%" y="575.50"></text></g><g><title>kernel::compare::any_entity_changes (9 samples, 0.73%)</title><rect x="78.1553%" y="549" width="0.7282%" height="15" fill="rgb(217,142,42)" fg:x="966" fg:w="9"/><text x="78.4053%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (8 samples, 0.65%)</title><rect x="78.2362%" y="533" width="0.6472%" height="15" fill="rgb(220,178,3)" fg:x="967" fg:w="8"/><text x="78.4862%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.65%)</title><rect x="78.2362%" y="517" width="0.6472%" height="15" fill="rgb(217,221,4)" fg:x="967" fg:w="8"/><text x="78.4862%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="78.7217%" y="501" width="0.1618%" height="15" fill="rgb(237,63,43)" fg:x="973" fg:w="2"/><text x="78.9717%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (1 samples, 0.08%)</title><rect x="78.8026%" y="485" width="0.0809%" height="15" fill="rgb(220,57,8)" fg:x="974" fg:w="1"/><text x="79.0526%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.8026%" y="469" width="0.0809%" height="15" fill="rgb(254,186,27)" fg:x="974" fg:w="1"/><text x="79.0526%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="78.8026%" y="453" width="0.0809%" height="15" fill="rgb(251,57,28)" fg:x="974" fg:w="1"/><text x="79.0526%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.8026%" y="437" width="0.0809%" height="15" fill="rgb(215,228,0)" fg:x="974" fg:w="1"/><text x="79.0526%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.8835%" y="565" width="0.0809%" height="15" fill="rgb(237,218,39)" fg:x="975" fg:w="1"/><text x="79.1335%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.8835%" y="549" width="0.0809%" height="15" fill="rgb(207,2,54)" fg:x="975" fg:w="1"/><text x="79.1335%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.8835%" y="533" width="0.0809%" height="15" fill="rgb(232,76,50)" fg:x="975" fg:w="1"/><text x="79.1335%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.8835%" y="517" width="0.0809%" height="15" fill="rgb(211,85,31)" fg:x="975" fg:w="1"/><text x="79.1335%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.8835%" y="501" width="0.0809%" height="15" fill="rgb(223,210,27)" fg:x="975" fg:w="1"/><text x="79.1335%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.8835%" y="485" width="0.0809%" height="15" fill="rgb(254,36,8)" fg:x="975" fg:w="1"/><text x="79.1335%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.8835%" y="469" width="0.0809%" height="15" fill="rgb(213,4,25)" fg:x="975" fg:w="1"/><text x="79.1335%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.8835%" y="453" width="0.0809%" height="15" fill="rgb(224,2,39)" fg:x="975" fg:w="1"/><text x="79.1335%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.8835%" y="437" width="0.0809%" height="15" fill="rgb(208,8,39)" fg:x="975" fg:w="1"/><text x="79.1335%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.8835%" y="421" width="0.0809%" height="15" fill="rgb(216,226,3)" fg:x="975" fg:w="1"/><text x="79.1335%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.8835%" y="405" width="0.0809%" height="15" fill="rgb(249,139,31)" fg:x="975" fg:w="1"/><text x="79.1335%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.8835%" y="389" width="0.0809%" height="15" fill="rgb(242,170,35)" fg:x="975" fg:w="1"/><text x="79.1335%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="78.8835%" y="597" width="0.2427%" height="15" fill="rgb(238,14,9)" fg:x="975" fg:w="3"/><text x="79.1335%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="78.8835%" y="581" width="0.2427%" height="15" fill="rgb(251,81,46)" fg:x="975" fg:w="3"/><text x="79.1335%" y="591.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="78.9644%" y="565" width="0.1618%" height="15" fill="rgb(230,23,4)" fg:x="976" fg:w="2"/><text x="79.2144%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="78.9644%" y="549" width="0.1618%" height="15" fill="rgb(211,85,25)" fg:x="976" fg:w="2"/><text x="79.2144%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="78.9644%" y="533" width="0.1618%" height="15" fill="rgb(252,23,31)" fg:x="976" fg:w="2"/><text x="79.2144%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="78.9644%" y="517" width="0.1618%" height="15" fill="rgb(234,163,38)" fg:x="976" fg:w="2"/><text x="79.2144%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="78.9644%" y="501" width="0.1618%" height="15" fill="rgb(210,190,50)" fg:x="976" fg:w="2"/><text x="79.2144%" y="511.50"></text></g><g><title>plugins_core::build::Build::holding (4 samples, 0.32%)</title><rect x="78.8835%" y="613" width="0.3236%" height="15" fill="rgb(228,158,3)" fg:x="975" fg:w="4"/><text x="79.1335%" y="623.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="79.1262%" y="597" width="0.0809%" height="15" fill="rgb(216,130,0)" fg:x="978" fg:w="1"/><text x="79.3762%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="79.1262%" y="581" width="0.0809%" height="15" fill="rgb(224,184,10)" fg:x="978" fg:w="1"/><text x="79.3762%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="79.1262%" y="565" width="0.0809%" height="15" fill="rgb(214,202,18)" fg:x="978" fg:w="1"/><text x="79.3762%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="79.2071%" y="597" width="0.1618%" height="15" fill="rgb(213,229,54)" fg:x="979" fg:w="2"/><text x="79.4571%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="79.2880%" y="581" width="0.0809%" height="15" fill="rgb(246,120,0)" fg:x="980" fg:w="1"/><text x="79.5380%" y="591.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="79.2880%" y="565" width="0.0809%" height="15" fill="rgb(237,6,15)" fg:x="980" fg:w="1"/><text x="79.5380%" y="575.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="79.2880%" y="549" width="0.0809%" height="15" fill="rgb(252,156,15)" fg:x="980" fg:w="1"/><text x="79.5380%" y="559.50"></text></g><g><title>plugins_core::build::Build::occupying (3 samples, 0.24%)</title><rect x="79.2071%" y="613" width="0.2427%" height="15" fill="rgb(249,78,18)" fg:x="979" fg:w="3"/><text x="79.4571%" y="623.50"></text></g><g><title>plugins_core::tools::set_occupying (1 samples, 0.08%)</title><rect x="79.3689%" y="597" width="0.0809%" height="15" fill="rgb(230,223,44)" fg:x="981" fg:w="1"/><text x="79.6189%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="79.3689%" y="581" width="0.0809%" height="15" fill="rgb(230,222,32)" fg:x="981" fg:w="1"/><text x="79.6189%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="79.3689%" y="565" width="0.0809%" height="15" fill="rgb(247,54,6)" fg:x="981" fg:w="1"/><text x="79.6189%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="79.3689%" y="549" width="0.0809%" height="15" fill="rgb(247,115,45)" fg:x="981" fg:w="1"/><text x="79.6189%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="79.4498%" y="597" width="0.0809%" height="15" fill="rgb(213,203,37)" fg:x="982" fg:w="1"/><text x="79.6998%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="79.4498%" y="581" width="0.0809%" height="15" fill="rgb(248,188,18)" fg:x="982" fg:w="1"/><text x="79.6998%" y="591.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="79.4498%" y="565" width="0.0809%" height="15" fill="rgb(206,80,8)" fg:x="982" fg:w="1"/><text x="79.6998%" y="575.50"></text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="79.4498%" y="549" width="0.0809%" height="15" fill="rgb(245,217,31)" fg:x="982" fg:w="1"/><text x="79.6998%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.4498%" y="533" width="0.0809%" height="15" fill="rgb(220,193,15)" fg:x="982" fg:w="1"/><text x="79.6998%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="79.4498%" y="517" width="0.0809%" height="15" fill="rgb(226,7,19)" fg:x="982" fg:w="1"/><text x="79.6998%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="79.4498%" y="501" width="0.0809%" height="15" fill="rgb(222,145,31)" fg:x="982" fg:w="1"/><text x="79.6998%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (33 samples, 2.67%)</title><rect x="76.9417%" y="629" width="2.6699%" height="15" fill="rgb(241,193,36)" fg:x="951" fg:w="33"/><text x="77.1917%" y="639.50">pl..</text></g><g><title>plugins_core::build::Build::with_username (2 samples, 0.16%)</title><rect x="79.4498%" y="613" width="0.1618%" height="15" fill="rgb(225,123,33)" fg:x="982" fg:w="2"/><text x="79.6998%" y="623.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="79.5307%" y="597" width="0.0809%" height="15" fill="rgb(246,136,38)" fg:x="983" fg:w="1"/><text x="79.7807%" y="607.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="79.5307%" y="581" width="0.0809%" height="15" fill="rgb(243,56,24)" fg:x="983" fg:w="1"/><text x="79.7807%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="79.5307%" y="565" width="0.0809%" height="15" fill="rgb(215,147,2)" fg:x="983" fg:w="1"/><text x="79.7807%" y="575.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="79.5307%" y="549" width="0.0809%" height="15" fill="rgb(209,155,27)" fg:x="983" fg:w="1"/><text x="79.7807%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.5307%" y="533" width="0.0809%" height="15" fill="rgb(222,177,11)" fg:x="983" fg:w="1"/><text x="79.7807%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.5307%" y="517" width="0.0809%" height="15" fill="rgb(212,227,15)" fg:x="983" fg:w="1"/><text x="79.7807%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.5307%" y="501" width="0.0809%" height="15" fill="rgb(214,138,20)" fg:x="983" fg:w="1"/><text x="79.7807%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.5307%" y="485" width="0.0809%" height="15" fill="rgb(221,170,31)" fg:x="983" fg:w="1"/><text x="79.7807%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.5307%" y="469" width="0.0809%" height="15" fill="rgb(253,207,5)" fg:x="983" fg:w="1"/><text x="79.7807%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="79.6117%" y="597" width="0.0809%" height="15" fill="rgb(212,64,37)" fg:x="984" fg:w="1"/><text x="79.8617%" y="607.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="79.6117%" y="581" width="0.0809%" height="15" fill="rgb(208,113,51)" fg:x="984" fg:w="1"/><text x="79.8617%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="79.6117%" y="565" width="0.0809%" height="15" fill="rgb(237,15,5)" fg:x="984" fg:w="1"/><text x="79.8617%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="79.6117%" y="549" width="0.0809%" height="15" fill="rgb(238,33,18)" fg:x="984" fg:w="1"/><text x="79.8617%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.6117%" y="533" width="0.0809%" height="15" fill="rgb(253,206,50)" fg:x="984" fg:w="1"/><text x="79.8617%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.6117%" y="517" width="0.0809%" height="15" fill="rgb(242,158,43)" fg:x="984" fg:w="1"/><text x="79.8617%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.6117%" y="501" width="0.0809%" height="15" fill="rgb(213,125,27)" fg:x="984" fg:w="1"/><text x="79.8617%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.6117%" y="485" width="0.0809%" height="15" fill="rgb(233,161,31)" fg:x="984" fg:w="1"/><text x="79.8617%" y="495.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="79.6117%" y="469" width="0.0809%" height="15" fill="rgb(218,135,6)" fg:x="984" fg:w="1"/><text x="79.8617%" y="479.50"></text></g><g><title>&lt;u64 as core::fmt::num::DisplayInt&gt;::to_u64 (1 samples, 0.08%)</title><rect x="79.6117%" y="453" width="0.0809%" height="15" fill="rgb(222,73,53)" fg:x="984" fg:w="1"/><text x="79.8617%" y="463.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (59 samples, 4.77%)</title><rect x="75.0000%" y="645" width="4.7735%" height="15" fill="rgb(229,66,53)" fg:x="927" fg:w="59"/><text x="75.2500%" y="655.50">&lt;tests..</text></g><g><title>plugins_core::build::BuildSurroundings::make (2 samples, 0.16%)</title><rect x="79.6117%" y="629" width="0.1618%" height="15" fill="rgb(208,128,19)" fg:x="984" fg:w="2"/><text x="79.8617%" y="639.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="79.6117%" y="613" width="0.1618%" height="15" fill="rgb(235,70,27)" fg:x="984" fg:w="2"/><text x="79.8617%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="79.6926%" y="597" width="0.0809%" height="15" fill="rgb(241,130,30)" fg:x="985" fg:w="1"/><text x="79.9426%" y="607.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="79.6926%" y="581" width="0.0809%" height="15" fill="rgb(222,57,48)" fg:x="985" fg:w="1"/><text x="79.9426%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="79.7735%" y="613" width="0.0809%" height="15" fill="rgb(225,204,29)" fg:x="986" fg:w="1"/><text x="80.0235%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="79.7735%" y="597" width="0.0809%" height="15" fill="rgb(240,196,35)" fg:x="986" fg:w="1"/><text x="80.0235%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.7735%" y="581" width="0.0809%" height="15" fill="rgb(215,150,16)" fg:x="986" fg:w="1"/><text x="80.0235%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.7735%" y="565" width="0.0809%" height="15" fill="rgb(209,170,13)" fg:x="986" fg:w="1"/><text x="80.0235%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.7735%" y="549" width="0.0809%" height="15" fill="rgb(235,75,31)" fg:x="986" fg:w="1"/><text x="80.0235%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.7735%" y="533" width="0.0809%" height="15" fill="rgb(252,1,47)" fg:x="986" fg:w="1"/><text x="80.0235%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="79.7735%" y="517" width="0.0809%" height="15" fill="rgb(241,2,36)" fg:x="986" fg:w="1"/><text x="80.0235%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="79.7735%" y="501" width="0.0809%" height="15" fill="rgb(236,191,4)" fg:x="986" fg:w="1"/><text x="80.0235%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.7735%" y="485" width="0.0809%" height="15" fill="rgb(212,65,35)" fg:x="986" fg:w="1"/><text x="80.0235%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.8544%" y="597" width="0.0809%" height="15" fill="rgb(209,49,33)" fg:x="987" fg:w="1"/><text x="80.1044%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (3 samples, 0.24%)</title><rect x="79.7735%" y="629" width="0.2427%" height="15" fill="rgb(208,36,46)" fg:x="986" fg:w="3"/><text x="80.0235%" y="639.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (2 samples, 0.16%)</title><rect x="79.8544%" y="613" width="0.1618%" height="15" fill="rgb(210,125,2)" fg:x="987" fg:w="2"/><text x="80.1044%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="79.9353%" y="597" width="0.0809%" height="15" fill="rgb(225,62,6)" fg:x="988" fg:w="1"/><text x="80.1853%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="79.9353%" y="581" width="0.0809%" height="15" fill="rgb(210,54,27)" fg:x="988" fg:w="1"/><text x="80.1853%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.9353%" y="565" width="0.0809%" height="15" fill="rgb(249,189,52)" fg:x="988" fg:w="1"/><text x="80.1853%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.9353%" y="549" width="0.0809%" height="15" fill="rgb(225,134,40)" fg:x="988" fg:w="1"/><text x="80.1853%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.9353%" y="533" width="0.0809%" height="15" fill="rgb(206,13,37)" fg:x="988" fg:w="1"/><text x="80.1853%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::RaisedEvent&gt; (1 samples, 0.08%)</title><rect x="80.0162%" y="629" width="0.0809%" height="15" fill="rgb(232,114,28)" fg:x="989" fg:w="1"/><text x="80.2662%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::carrying::model::CarryingEvent&gt; (1 samples, 0.08%)</title><rect x="80.0162%" y="613" width="0.0809%" height="15" fill="rgb(253,215,8)" fg:x="989" fg:w="1"/><text x="80.2662%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="80.0162%" y="597" width="0.0809%" height="15" fill="rgb(254,64,19)" fg:x="989" fg:w="1"/><text x="80.2662%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.0162%" y="581" width="0.0809%" height="15" fill="rgb(242,18,46)" fg:x="989" fg:w="1"/><text x="80.2662%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0971%" y="565" width="0.0809%" height="15" fill="rgb(239,192,30)" fg:x="990" fg:w="1"/><text x="80.3471%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.0971%" y="549" width="0.0809%" height="15" fill="rgb(232,73,14)" fg:x="990" fg:w="1"/><text x="80.3471%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0971%" y="533" width="0.0809%" height="15" fill="rgb(225,51,9)" fg:x="990" fg:w="1"/><text x="80.3471%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0971%" y="517" width="0.0809%" height="15" fill="rgb(242,217,54)" fg:x="990" fg:w="1"/><text x="80.3471%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.0971%" y="501" width="0.0809%" height="15" fill="rgb(216,93,3)" fg:x="990" fg:w="1"/><text x="80.3471%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.0971%" y="485" width="0.0809%" height="15" fill="rgb(230,119,33)" fg:x="990" fg:w="1"/><text x="80.3471%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.0971%" y="469" width="0.0809%" height="15" fill="rgb(238,170,27)" fg:x="990" fg:w="1"/><text x="80.3471%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="80.0971%" y="453" width="0.0809%" height="15" fill="rgb(229,8,2)" fg:x="990" fg:w="1"/><text x="80.3471%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="80.0971%" y="437" width="0.0809%" height="15" fill="rgb(205,214,42)" fg:x="990" fg:w="1"/><text x="80.3471%" y="447.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="80.0971%" y="613" width="0.1618%" height="15" fill="rgb(245,113,1)" fg:x="990" fg:w="2"/><text x="80.3471%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="80.0971%" y="597" width="0.1618%" height="15" fill="rgb(252,50,2)" fg:x="990" fg:w="2"/><text x="80.3471%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="80.0971%" y="581" width="0.1618%" height="15" fill="rgb(225,122,24)" fg:x="990" fg:w="2"/><text x="80.3471%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.1780%" y="565" width="0.0809%" height="15" fill="rgb(234,129,31)" fg:x="991" fg:w="1"/><text x="80.4280%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.1780%" y="549" width="0.0809%" height="15" fill="rgb(219,177,4)" fg:x="991" fg:w="1"/><text x="80.4280%" y="559.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="80.1780%" y="533" width="0.0809%" height="15" fill="rgb(225,142,27)" fg:x="991" fg:w="1"/><text x="80.4280%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.2589%" y="549" width="0.0809%" height="15" fill="rgb(205,107,51)" fg:x="992" fg:w="1"/><text x="80.5089%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.2589%" y="533" width="0.0809%" height="15" fill="rgb(236,223,15)" fg:x="992" fg:w="1"/><text x="80.5089%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.2589%" y="517" width="0.0809%" height="15" fill="rgb(235,133,11)" fg:x="992" fg:w="1"/><text x="80.5089%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.2589%" y="501" width="0.0809%" height="15" fill="rgb(247,172,13)" fg:x="992" fg:w="1"/><text x="80.5089%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.3398%" y="533" width="0.0809%" height="15" fill="rgb(233,191,41)" fg:x="993" fg:w="1"/><text x="80.5898%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.3398%" y="517" width="0.0809%" height="15" fill="rgb(250,65,16)" fg:x="993" fg:w="1"/><text x="80.5898%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.3398%" y="501" width="0.0809%" height="15" fill="rgb(206,10,27)" fg:x="993" fg:w="1"/><text x="80.5898%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.3398%" y="485" width="0.0809%" height="15" fill="rgb(212,96,22)" fg:x="993" fg:w="1"/><text x="80.5898%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="80.3398%" y="469" width="0.0809%" height="15" fill="rgb(206,50,0)" fg:x="993" fg:w="1"/><text x="80.5898%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.4207%" y="517" width="0.0809%" height="15" fill="rgb(249,105,52)" fg:x="994" fg:w="1"/><text x="80.6707%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.5016%" y="517" width="0.0809%" height="15" fill="rgb(216,93,51)" fg:x="995" fg:w="1"/><text x="80.7516%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.5016%" y="501" width="0.0809%" height="15" fill="rgb(217,172,13)" fg:x="995" fg:w="1"/><text x="80.7516%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.5016%" y="485" width="0.0809%" height="15" fill="rgb(235,199,38)" fg:x="995" fg:w="1"/><text x="80.7516%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.5825%" y="501" width="0.0809%" height="15" fill="rgb(221,97,33)" fg:x="996" fg:w="1"/><text x="80.8325%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.5825%" y="485" width="0.0809%" height="15" fill="rgb(205,156,50)" fg:x="996" fg:w="1"/><text x="80.8325%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.5825%" y="469" width="0.0809%" height="15" fill="rgb(215,142,19)" fg:x="996" fg:w="1"/><text x="80.8325%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.5825%" y="517" width="0.1618%" height="15" fill="rgb(232,170,7)" fg:x="996" fg:w="2"/><text x="80.8325%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.6634%" y="501" width="0.0809%" height="15" fill="rgb(223,50,17)" fg:x="997" fg:w="1"/><text x="80.9134%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.49%)</title><rect x="80.4207%" y="533" width="0.4854%" height="15" fill="rgb(230,103,46)" fg:x="994" fg:w="6"/><text x="80.6707%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.7443%" y="517" width="0.1618%" height="15" fill="rgb(254,30,34)" fg:x="998" fg:w="2"/><text x="80.9943%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.8252%" y="501" width="0.0809%" height="15" fill="rgb(235,198,1)" fg:x="999" fg:w="1"/><text x="81.0752%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.65%)</title><rect x="80.3398%" y="549" width="0.6472%" height="15" fill="rgb(217,105,47)" fg:x="993" fg:w="8"/><text x="80.5898%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.9061%" y="533" width="0.0809%" height="15" fill="rgb(231,18,12)" fg:x="1000" fg:w="1"/><text x="81.1561%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="81.0680%" y="517" width="0.1618%" height="15" fill="rgb(218,196,1)" fg:x="1002" fg:w="2"/><text x="81.3180%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.1489%" y="501" width="0.0809%" height="15" fill="rgb(210,32,3)" fg:x="1003" fg:w="1"/><text x="81.3989%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.1489%" y="485" width="0.0809%" height="15" fill="rgb(227,178,30)" fg:x="1003" fg:w="1"/><text x="81.3989%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.1489%" y="469" width="0.0809%" height="15" fill="rgb(231,140,27)" fg:x="1003" fg:w="1"/><text x="81.3989%" y="479.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.05%)</title><rect x="80.2589%" y="581" width="1.0518%" height="15" fill="rgb(206,66,35)" fg:x="992" fg:w="13"/><text x="80.5089%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.05%)</title><rect x="80.2589%" y="565" width="1.0518%" height="15" fill="rgb(212,34,2)" fg:x="992" fg:w="13"/><text x="80.5089%" y="575.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="80.9871%" y="549" width="0.3236%" height="15" fill="rgb(207,201,33)" fg:x="1001" fg:w="4"/><text x="81.2371%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="80.9871%" y="533" width="0.3236%" height="15" fill="rgb(221,135,32)" fg:x="1001" fg:w="4"/><text x="81.2371%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="81.2298%" y="517" width="0.0809%" height="15" fill="rgb(206,77,31)" fg:x="1004" fg:w="1"/><text x="81.4798%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.3107%" y="533" width="0.0809%" height="15" fill="rgb(252,198,50)" fg:x="1005" fg:w="1"/><text x="81.5607%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.3107%" y="517" width="0.0809%" height="15" fill="rgb(206,79,27)" fg:x="1005" fg:w="1"/><text x="81.5607%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.3916%" y="517" width="0.0809%" height="15" fill="rgb(228,108,9)" fg:x="1006" fg:w="1"/><text x="81.6416%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.3916%" y="501" width="0.0809%" height="15" fill="rgb(213,9,39)" fg:x="1006" fg:w="1"/><text x="81.6416%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="81.4725%" y="501" width="0.1618%" height="15" fill="rgb(252,51,13)" fg:x="1007" fg:w="2"/><text x="81.7225%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="81.4725%" y="485" width="0.1618%" height="15" fill="rgb(218,202,39)" fg:x="1007" fg:w="2"/><text x="81.7225%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.5534%" y="469" width="0.0809%" height="15" fill="rgb(214,122,21)" fg:x="1008" fg:w="1"/><text x="81.8034%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="81.3107%" y="581" width="0.4045%" height="15" fill="rgb(217,205,48)" fg:x="1005" fg:w="5"/><text x="81.5607%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="81.3107%" y="565" width="0.4045%" height="15" fill="rgb(230,216,13)" fg:x="1005" fg:w="5"/><text x="81.5607%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="81.3107%" y="549" width="0.4045%" height="15" fill="rgb(249,118,4)" fg:x="1005" fg:w="5"/><text x="81.5607%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="81.3916%" y="533" width="0.3236%" height="15" fill="rgb(212,207,40)" fg:x="1006" fg:w="4"/><text x="81.6416%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.4725%" y="517" width="0.2427%" height="15" fill="rgb(217,156,26)" fg:x="1007" fg:w="3"/><text x="81.7225%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.6343%" y="501" width="0.0809%" height="15" fill="rgb(226,86,34)" fg:x="1009" fg:w="1"/><text x="81.8843%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.7961%" y="533" width="0.0809%" height="15" fill="rgb(217,111,30)" fg:x="1011" fg:w="1"/><text x="82.0461%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.9579%" y="501" width="0.0809%" height="15" fill="rgb(228,64,18)" fg:x="1013" fg:w="1"/><text x="82.2079%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="81.7152%" y="565" width="0.4045%" height="15" fill="rgb(254,217,48)" fg:x="1010" fg:w="5"/><text x="81.9652%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="81.7152%" y="549" width="0.4045%" height="15" fill="rgb(226,156,48)" fg:x="1010" fg:w="5"/><text x="81.9652%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.8770%" y="533" width="0.2427%" height="15" fill="rgb(236,168,20)" fg:x="1012" fg:w="3"/><text x="82.1270%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.8770%" y="517" width="0.2427%" height="15" fill="rgb(239,210,33)" fg:x="1012" fg:w="3"/><text x="82.1270%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.0388%" y="501" width="0.0809%" height="15" fill="rgb(242,85,17)" fg:x="1014" fg:w="1"/><text x="82.2888%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.0388%" y="485" width="0.0809%" height="15" fill="rgb(221,196,15)" fg:x="1014" fg:w="1"/><text x="82.2888%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.2006%" y="533" width="0.0809%" height="15" fill="rgb(249,76,21)" fg:x="1016" fg:w="1"/><text x="82.4506%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.2816%" y="533" width="0.1618%" height="15" fill="rgb(243,67,29)" fg:x="1017" fg:w="2"/><text x="82.5316%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="82.4434%" y="533" width="0.0809%" height="15" fill="rgb(240,159,2)" fg:x="1019" fg:w="1"/><text x="82.6934%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5243%" y="501" width="0.0809%" height="15" fill="rgb(244,64,3)" fg:x="1020" fg:w="1"/><text x="82.7743%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.6052%" y="485" width="0.0809%" height="15" fill="rgb(220,86,40)" fg:x="1021" fg:w="1"/><text x="82.8552%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="82.5243%" y="533" width="0.2427%" height="15" fill="rgb(222,194,51)" fg:x="1020" fg:w="3"/><text x="82.7743%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="82.5243%" y="517" width="0.2427%" height="15" fill="rgb(207,154,19)" fg:x="1020" fg:w="3"/><text x="82.7743%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="82.6052%" y="501" width="0.1618%" height="15" fill="rgb(206,178,36)" fg:x="1021" fg:w="2"/><text x="82.8552%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="82.6861%" y="485" width="0.0809%" height="15" fill="rgb(218,8,24)" fg:x="1022" fg:w="1"/><text x="82.9361%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.6861%" y="469" width="0.0809%" height="15" fill="rgb(226,83,41)" fg:x="1022" fg:w="1"/><text x="82.9361%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="82.7670%" y="533" width="0.0809%" height="15" fill="rgb(224,23,22)" fg:x="1023" fg:w="1"/><text x="83.0170%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.7670%" y="517" width="0.0809%" height="15" fill="rgb(218,198,45)" fg:x="1023" fg:w="1"/><text x="83.0170%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7670%" y="501" width="0.0809%" height="15" fill="rgb(249,147,41)" fg:x="1023" fg:w="1"/><text x="83.0170%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="83.0906%" y="501" width="0.0809%" height="15" fill="rgb(244,224,13)" fg:x="1027" fg:w="1"/><text x="83.3406%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="83.0906%" y="485" width="0.0809%" height="15" fill="rgb(225,97,27)" fg:x="1027" fg:w="1"/><text x="83.3406%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.0906%" y="469" width="0.0809%" height="15" fill="rgb(254,64,0)" fg:x="1027" fg:w="1"/><text x="83.3406%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (14 samples, 1.13%)</title><rect x="82.1197%" y="565" width="1.1327%" height="15" fill="rgb(208,130,43)" fg:x="1015" fg:w="14"/><text x="82.3697%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 1.13%)</title><rect x="82.1197%" y="549" width="1.1327%" height="15" fill="rgb(247,91,25)" fg:x="1015" fg:w="14"/><text x="82.3697%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="82.8479%" y="533" width="0.4045%" height="15" fill="rgb(215,218,42)" fg:x="1024" fg:w="5"/><text x="83.0979%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (3 samples, 0.24%)</title><rect x="83.0097%" y="517" width="0.2427%" height="15" fill="rgb(233,9,24)" fg:x="1026" fg:w="3"/><text x="83.2597%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="83.1715%" y="501" width="0.0809%" height="15" fill="rgb(252,105,38)" fg:x="1028" fg:w="1"/><text x="83.4215%" y="511.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="83.1715%" y="485" width="0.0809%" height="15" fill="rgb(225,40,49)" fg:x="1028" fg:w="1"/><text x="83.4215%" y="495.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="83.1715%" y="469" width="0.0809%" height="15" fill="rgb(232,196,19)" fg:x="1028" fg:w="1"/><text x="83.4215%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="83.4951%" y="421" width="0.0809%" height="15" fill="rgb(207,35,15)" fg:x="1032" fg:w="1"/><text x="83.7451%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="83.4951%" y="405" width="0.0809%" height="15" fill="rgb(238,68,36)" fg:x="1032" fg:w="1"/><text x="83.7451%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.4951%" y="389" width="0.0809%" height="15" fill="rgb(205,158,20)" fg:x="1032" fg:w="1"/><text x="83.7451%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="83.4142%" y="453" width="0.2427%" height="15" fill="rgb(232,32,22)" fg:x="1031" fg:w="3"/><text x="83.6642%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="83.4142%" y="437" width="0.2427%" height="15" fill="rgb(210,169,6)" fg:x="1031" fg:w="3"/><text x="83.6642%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="83.5761%" y="421" width="0.0809%" height="15" fill="rgb(229,28,12)" fg:x="1033" fg:w="1"/><text x="83.8261%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.5761%" y="405" width="0.0809%" height="15" fill="rgb(229,78,10)" fg:x="1033" fg:w="1"/><text x="83.8261%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.5761%" y="389" width="0.0809%" height="15" fill="rgb(223,139,54)" fg:x="1033" fg:w="1"/><text x="83.8261%" y="399.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.5761%" y="373" width="0.0809%" height="15" fill="rgb(207,110,4)" fg:x="1033" fg:w="1"/><text x="83.8261%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="83.4142%" y="469" width="0.3236%" height="15" fill="rgb(248,30,41)" fg:x="1031" fg:w="4"/><text x="83.6642%" y="479.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="83.6570%" y="453" width="0.0809%" height="15" fill="rgb(235,54,25)" fg:x="1034" fg:w="1"/><text x="83.9070%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="83.8188%" y="453" width="0.0809%" height="15" fill="rgb(213,107,41)" fg:x="1036" fg:w="1"/><text x="84.0688%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.65%)</title><rect x="83.3333%" y="501" width="0.6472%" height="15" fill="rgb(237,102,9)" fg:x="1030" fg:w="8"/><text x="83.5833%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="83.4142%" y="485" width="0.5663%" height="15" fill="rgb(252,137,49)" fg:x="1031" fg:w="7"/><text x="83.6642%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="83.7379%" y="469" width="0.2427%" height="15" fill="rgb(233,202,33)" fg:x="1035" fg:w="3"/><text x="83.9879%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.8997%" y="453" width="0.0809%" height="15" fill="rgb(223,14,51)" fg:x="1037" fg:w="1"/><text x="84.1497%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (10 samples, 0.81%)</title><rect x="83.2524%" y="565" width="0.8091%" height="15" fill="rgb(248,70,23)" fg:x="1029" fg:w="10"/><text x="83.5024%" y="575.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.81%)</title><rect x="83.2524%" y="549" width="0.8091%" height="15" fill="rgb(209,207,47)" fg:x="1029" fg:w="10"/><text x="83.5024%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.81%)</title><rect x="83.2524%" y="533" width="0.8091%" height="15" fill="rgb(245,124,2)" fg:x="1029" fg:w="10"/><text x="83.5024%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.81%)</title><rect x="83.2524%" y="517" width="0.8091%" height="15" fill="rgb(249,208,11)" fg:x="1029" fg:w="10"/><text x="83.5024%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.9806%" y="501" width="0.0809%" height="15" fill="rgb(247,112,7)" fg:x="1038" fg:w="1"/><text x="84.2306%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.9806%" y="485" width="0.0809%" height="15" fill="rgb(209,192,31)" fg:x="1038" fg:w="1"/><text x="84.2306%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="84.0615%" y="517" width="0.0809%" height="15" fill="rgb(236,55,19)" fg:x="1039" fg:w="1"/><text x="84.3115%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="84.0615%" y="501" width="0.0809%" height="15" fill="rgb(252,89,41)" fg:x="1039" fg:w="1"/><text x="84.3115%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.1424%" y="517" width="0.0809%" height="15" fill="rgb(220,172,14)" fg:x="1040" fg:w="1"/><text x="84.3924%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.2233%" y="517" width="0.0809%" height="15" fill="rgb(252,65,2)" fg:x="1041" fg:w="1"/><text x="84.4733%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.2233%" y="501" width="0.0809%" height="15" fill="rgb(250,20,8)" fg:x="1041" fg:w="1"/><text x="84.4733%" y="511.50"></text></g><g><title>engine::session::Session::close (57 samples, 4.61%)</title><rect x="79.7735%" y="645" width="4.6117%" height="15" fill="rgb(234,149,13)" fg:x="986" fg:w="57"/><text x="80.0235%" y="655.50">engin..</text></g><g><title>engine::session::Session::save_entity_changes (53 samples, 4.29%)</title><rect x="80.0971%" y="629" width="4.2880%" height="15" fill="rgb(223,219,12)" fg:x="990" fg:w="53"/><text x="80.3471%" y="639.50">engin..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (51 samples, 4.13%)</title><rect x="80.2589%" y="613" width="4.1262%" height="15" fill="rgb(234,13,49)" fg:x="992" fg:w="51"/><text x="80.5089%" y="623.50">engi..</text></g><g><title>engine::session::Session::check_for_changes (51 samples, 4.13%)</title><rect x="80.2589%" y="597" width="4.1262%" height="15" fill="rgb(214,41,25)" fg:x="992" fg:w="51"/><text x="80.5089%" y="607.50">engi..</text></g><g><title>kernel::compare::any_entity_changes (33 samples, 2.67%)</title><rect x="81.7152%" y="581" width="2.6699%" height="15" fill="rgb(232,198,52)" fg:x="1010" fg:w="33"/><text x="81.9652%" y="591.50">ke..</text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="84.0615%" y="565" width="0.3236%" height="15" fill="rgb(236,111,46)" fg:x="1039" fg:w="4"/><text x="84.3115%" y="575.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="84.0615%" y="549" width="0.3236%" height="15" fill="rgb(253,30,20)" fg:x="1039" fg:w="4"/><text x="84.3115%" y="559.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="84.0615%" y="533" width="0.3236%" height="15" fill="rgb(247,141,17)" fg:x="1039" fg:w="4"/><text x="84.3115%" y="543.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="84.3042%" y="517" width="0.0809%" height="15" fill="rgb(214,195,21)" fg:x="1042" fg:w="1"/><text x="84.5542%" y="527.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="84.3042%" y="501" width="0.0809%" height="15" fill="rgb(214,98,12)" fg:x="1042" fg:w="1"/><text x="84.5542%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="84.3851%" y="549" width="0.4045%" height="15" fill="rgb(239,4,26)" fg:x="1043" fg:w="5"/><text x="84.6351%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="84.3851%" y="533" width="0.4045%" height="15" fill="rgb(234,210,35)" fg:x="1043" fg:w="5"/><text x="84.6351%" y="543.50"></text></g><g><title>realloc (5 samples, 0.40%)</title><rect x="84.3851%" y="517" width="0.4045%" height="15" fill="rgb(252,178,27)" fg:x="1043" fg:w="5"/><text x="84.6351%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.7896%" y="549" width="0.0809%" height="15" fill="rgb(217,50,1)" fg:x="1048" fg:w="1"/><text x="85.0396%" y="559.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (7 samples, 0.57%)</title><rect x="84.3851%" y="565" width="0.5663%" height="15" fill="rgb(233,137,5)" fg:x="1043" fg:w="7"/><text x="84.6351%" y="575.50"></text></g><g><title>plugins_core::tools::contained_by (1 samples, 0.08%)</title><rect x="84.8706%" y="549" width="0.0809%" height="15" fill="rgb(217,227,25)" fg:x="1049" fg:w="1"/><text x="85.1206%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="84.8706%" y="533" width="0.0809%" height="15" fill="rgb(242,89,38)" fg:x="1049" fg:w="1"/><text x="85.1206%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="84.8706%" y="517" width="0.0809%" height="15" fill="rgb(212,190,30)" fg:x="1049" fg:w="1"/><text x="85.1206%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8706%" y="501" width="0.0809%" height="15" fill="rgb(222,120,8)" fg:x="1049" fg:w="1"/><text x="85.1206%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9515%" y="549" width="0.0809%" height="15" fill="rgb(227,181,9)" fg:x="1050" fg:w="1"/><text x="85.2015%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9515%" y="533" width="0.0809%" height="15" fill="rgb(222,125,29)" fg:x="1050" fg:w="1"/><text x="85.2015%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9515%" y="517" width="0.0809%" height="15" fill="rgb(215,153,31)" fg:x="1050" fg:w="1"/><text x="85.2015%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.9515%" y="501" width="0.0809%" height="15" fill="rgb(228,77,30)" fg:x="1050" fg:w="1"/><text x="85.2015%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.9515%" y="485" width="0.0809%" height="15" fill="rgb(226,110,9)" fg:x="1050" fg:w="1"/><text x="85.2015%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.9515%" y="469" width="0.0809%" height="15" fill="rgb(219,111,7)" fg:x="1050" fg:w="1"/><text x="85.2015%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.9515%" y="453" width="0.0809%" height="15" fill="rgb(229,167,25)" fg:x="1050" fg:w="1"/><text x="85.2015%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9515%" y="437" width="0.0809%" height="15" fill="rgb(209,77,43)" fg:x="1050" fg:w="1"/><text x="85.2015%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.9515%" y="421" width="0.0809%" height="15" fill="rgb(233,70,39)" fg:x="1050" fg:w="1"/><text x="85.2015%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.9515%" y="405" width="0.0809%" height="15" fill="rgb(207,171,44)" fg:x="1050" fg:w="1"/><text x="85.2015%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.9515%" y="389" width="0.0809%" height="15" fill="rgb(244,91,6)" fg:x="1050" fg:w="1"/><text x="85.2015%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.9515%" y="373" width="0.0809%" height="15" fill="rgb(234,136,12)" fg:x="1050" fg:w="1"/><text x="85.2015%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.9515%" y="357" width="0.0809%" height="15" fill="rgb(216,210,38)" fg:x="1050" fg:w="1"/><text x="85.2015%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9515%" y="341" width="0.0809%" height="15" fill="rgb(241,227,7)" fg:x="1050" fg:w="1"/><text x="85.2015%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (9 samples, 0.73%)</title><rect x="84.3851%" y="597" width="0.7282%" height="15" fill="rgb(241,222,11)" fg:x="1043" fg:w="9"/><text x="84.6351%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (9 samples, 0.73%)</title><rect x="84.3851%" y="581" width="0.7282%" height="15" fill="rgb(246,86,18)" fg:x="1043" fg:w="9"/><text x="84.6351%" y="591.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="84.9515%" y="565" width="0.1618%" height="15" fill="rgb(224,151,49)" fg:x="1050" fg:w="2"/><text x="85.2015%" y="575.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (1 samples, 0.08%)</title><rect x="85.0324%" y="549" width="0.0809%" height="15" fill="rgb(235,4,41)" fg:x="1051" fg:w="1"/><text x="85.2824%" y="559.50"></text></g><g><title>plugins_core::finding::matches_description (1 samples, 0.08%)</title><rect x="85.0324%" y="533" width="0.0809%" height="15" fill="rgb(218,30,52)" fg:x="1051" fg:w="1"/><text x="85.2824%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="85.0324%" y="517" width="0.0809%" height="15" fill="rgb(205,124,51)" fg:x="1051" fg:w="1"/><text x="85.2824%" y="527.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="85.0324%" y="501" width="0.0809%" height="15" fill="rgb(237,126,51)" fg:x="1051" fg:w="1"/><text x="85.2824%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.0324%" y="485" width="0.0809%" height="15" fill="rgb(225,32,46)" fg:x="1051" fg:w="1"/><text x="85.2824%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="85.0324%" y="469" width="0.0809%" height="15" fill="rgb(251,60,49)" fg:x="1051" fg:w="1"/><text x="85.2824%" y="479.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="85.1133%" y="597" width="0.1618%" height="15" fill="rgb(234,18,23)" fg:x="1052" fg:w="2"/><text x="85.3633%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="85.1133%" y="581" width="0.1618%" height="15" fill="rgb(234,25,23)" fg:x="1052" fg:w="2"/><text x="85.3633%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.1942%" y="565" width="0.0809%" height="15" fill="rgb(210,43,52)" fg:x="1053" fg:w="1"/><text x="85.4442%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.1942%" y="549" width="0.0809%" height="15" fill="rgb(237,198,21)" fg:x="1053" fg:w="1"/><text x="85.4442%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.1942%" y="533" width="0.0809%" height="15" fill="rgb(211,20,34)" fg:x="1053" fg:w="1"/><text x="85.4442%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.1942%" y="517" width="0.0809%" height="15" fill="rgb(221,155,50)" fg:x="1053" fg:w="1"/><text x="85.4442%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.1942%" y="501" width="0.0809%" height="15" fill="rgb(213,214,53)" fg:x="1053" fg:w="1"/><text x="85.4442%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="85.1942%" y="485" width="0.0809%" height="15" fill="rgb(215,229,48)" fg:x="1053" fg:w="1"/><text x="85.4442%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="85.1942%" y="469" width="0.0809%" height="15" fill="rgb(243,88,5)" fg:x="1053" fg:w="1"/><text x="85.4442%" y="479.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="85.2751%" y="597" width="0.0809%" height="15" fill="rgb(216,199,8)" fg:x="1054" fg:w="1"/><text x="85.5251%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.2751%" y="581" width="0.0809%" height="15" fill="rgb(241,22,4)" fg:x="1054" fg:w="1"/><text x="85.5251%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="85.3560%" y="581" width="0.0809%" height="15" fill="rgb(209,190,22)" fg:x="1055" fg:w="1"/><text x="85.6060%" y="591.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="85.3560%" y="565" width="0.0809%" height="15" fill="rgb(251,138,45)" fg:x="1055" fg:w="1"/><text x="85.6060%" y="575.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="85.3560%" y="549" width="0.0809%" height="15" fill="rgb(219,111,22)" fg:x="1055" fg:w="1"/><text x="85.6060%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4369%" y="565" width="0.0809%" height="15" fill="rgb(253,29,49)" fg:x="1056" fg:w="1"/><text x="85.6869%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4369%" y="549" width="0.0809%" height="15" fill="rgb(238,129,49)" fg:x="1056" fg:w="1"/><text x="85.6869%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4369%" y="533" width="0.0809%" height="15" fill="rgb(240,26,41)" fg:x="1056" fg:w="1"/><text x="85.6869%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.4369%" y="517" width="0.0809%" height="15" fill="rgb(221,47,33)" fg:x="1056" fg:w="1"/><text x="85.6869%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.4369%" y="501" width="0.0809%" height="15" fill="rgb(216,200,17)" fg:x="1056" fg:w="1"/><text x="85.6869%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.4369%" y="485" width="0.0809%" height="15" fill="rgb(230,151,26)" fg:x="1056" fg:w="1"/><text x="85.6869%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.4369%" y="469" width="0.0809%" height="15" fill="rgb(242,182,16)" fg:x="1056" fg:w="1"/><text x="85.6869%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.4369%" y="453" width="0.0809%" height="15" fill="rgb(236,35,53)" fg:x="1056" fg:w="1"/><text x="85.6869%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.4369%" y="437" width="0.0809%" height="15" fill="rgb(214,180,28)" fg:x="1056" fg:w="1"/><text x="85.6869%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.4369%" y="421" width="0.0809%" height="15" fill="rgb(208,173,36)" fg:x="1056" fg:w="1"/><text x="85.6869%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.4369%" y="405" width="0.0809%" height="15" fill="rgb(218,39,15)" fg:x="1056" fg:w="1"/><text x="85.6869%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.4369%" y="389" width="0.0809%" height="15" fill="rgb(213,145,15)" fg:x="1056" fg:w="1"/><text x="85.6869%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4369%" y="373" width="0.0809%" height="15" fill="rgb(242,110,37)" fg:x="1056" fg:w="1"/><text x="85.6869%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="85.4369%" y="581" width="0.1618%" height="15" fill="rgb(247,146,22)" fg:x="1056" fg:w="2"/><text x="85.6869%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="85.5178%" y="565" width="0.0809%" height="15" fill="rgb(215,191,7)" fg:x="1057" fg:w="1"/><text x="85.7678%" y="575.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="85.5178%" y="549" width="0.0809%" height="15" fill="rgb(240,158,1)" fg:x="1057" fg:w="1"/><text x="85.7678%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="85.5178%" y="533" width="0.0809%" height="15" fill="rgb(241,78,32)" fg:x="1057" fg:w="1"/><text x="85.7678%" y="543.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="85.5178%" y="517" width="0.0809%" height="15" fill="rgb(248,83,10)" fg:x="1057" fg:w="1"/><text x="85.7678%" y="527.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="85.5178%" y="501" width="0.0809%" height="15" fill="rgb(241,52,0)" fg:x="1057" fg:w="1"/><text x="85.7678%" y="511.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="85.5987%" y="581" width="0.0809%" height="15" fill="rgb(238,37,13)" fg:x="1058" fg:w="1"/><text x="85.8487%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="85.5987%" y="565" width="0.0809%" height="15" fill="rgb(242,194,17)" fg:x="1058" fg:w="1"/><text x="85.8487%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="85.5987%" y="549" width="0.0809%" height="15" fill="rgb(236,96,3)" fg:x="1058" fg:w="1"/><text x="85.8487%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.5987%" y="533" width="0.0809%" height="15" fill="rgb(235,148,34)" fg:x="1058" fg:w="1"/><text x="85.8487%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.5987%" y="517" width="0.0809%" height="15" fill="rgb(254,12,11)" fg:x="1058" fg:w="1"/><text x="85.8487%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="85.5987%" y="501" width="0.0809%" height="15" fill="rgb(207,31,54)" fg:x="1058" fg:w="1"/><text x="85.8487%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.5987%" y="485" width="0.0809%" height="15" fill="rgb(252,14,28)" fg:x="1058" fg:w="1"/><text x="85.8487%" y="495.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="85.5987%" y="469" width="0.0809%" height="15" fill="rgb(252,108,36)" fg:x="1058" fg:w="1"/><text x="85.8487%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="85.6796%" y="581" width="0.0809%" height="15" fill="rgb(214,149,7)" fg:x="1059" fg:w="1"/><text x="85.9296%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.6796%" y="565" width="0.0809%" height="15" fill="rgb(243,94,12)" fg:x="1059" fg:w="1"/><text x="85.9296%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (18 samples, 1.46%)</title><rect x="84.3851%" y="613" width="1.4563%" height="15" fill="rgb(208,36,10)" fg:x="1043" fg:w="18"/><text x="84.6351%" y="623.50"></text></g><g><title>plugins_core::tools::move_between (6 samples, 0.49%)</title><rect x="85.3560%" y="597" width="0.4854%" height="15" fill="rgb(233,185,52)" fg:x="1055" fg:w="6"/><text x="85.6060%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="85.7605%" y="581" width="0.0809%" height="15" fill="rgb(234,50,45)" fg:x="1060" fg:w="1"/><text x="86.0105%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="85.7605%" y="565" width="0.0809%" height="15" fill="rgb(228,92,54)" fg:x="1060" fg:w="1"/><text x="86.0105%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="85.8414%" y="549" width="0.1618%" height="15" fill="rgb(224,85,25)" fg:x="1061" fg:w="2"/><text x="86.0914%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="85.8414%" y="533" width="0.1618%" height="15" fill="rgb(246,1,45)" fg:x="1061" fg:w="2"/><text x="86.0914%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.9223%" y="517" width="0.0809%" height="15" fill="rgb(240,66,23)" fg:x="1062" fg:w="1"/><text x="86.1723%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.9223%" y="501" width="0.0809%" height="15" fill="rgb(222,96,27)" fg:x="1062" fg:w="1"/><text x="86.1723%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.9223%" y="485" width="0.0809%" height="15" fill="rgb(212,136,10)" fg:x="1062" fg:w="1"/><text x="86.1723%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.9223%" y="469" width="0.0809%" height="15" fill="rgb(226,192,50)" fg:x="1062" fg:w="1"/><text x="86.1723%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.9223%" y="453" width="0.0809%" height="15" fill="rgb(241,182,31)" fg:x="1062" fg:w="1"/><text x="86.1723%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.9223%" y="437" width="0.0809%" height="15" fill="rgb(219,205,47)" fg:x="1062" fg:w="1"/><text x="86.1723%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.9223%" y="421" width="0.0809%" height="15" fill="rgb(207,96,14)" fg:x="1062" fg:w="1"/><text x="86.1723%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.9223%" y="405" width="0.0809%" height="15" fill="rgb(216,119,9)" fg:x="1062" fg:w="1"/><text x="86.1723%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.9223%" y="389" width="0.0809%" height="15" fill="rgb(235,62,36)" fg:x="1062" fg:w="1"/><text x="86.1723%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.9223%" y="373" width="0.0809%" height="15" fill="rgb(214,41,27)" fg:x="1062" fg:w="1"/><text x="86.1723%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.9223%" y="357" width="0.0809%" height="15" fill="rgb(214,174,37)" fg:x="1062" fg:w="1"/><text x="86.1723%" y="367.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="85.9223%" y="341" width="0.0809%" height="15" fill="rgb(212,11,25)" fg:x="1062" fg:w="1"/><text x="86.1723%" y="351.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.9223%" y="325" width="0.0809%" height="15" fill="rgb(217,71,35)" fg:x="1062" fg:w="1"/><text x="86.1723%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="86.0032%" y="549" width="0.2427%" height="15" fill="rgb(234,152,9)" fg:x="1063" fg:w="3"/><text x="86.2532%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="86.0032%" y="533" width="0.2427%" height="15" fill="rgb(228,32,51)" fg:x="1063" fg:w="3"/><text x="86.2532%" y="543.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="86.0032%" y="517" width="0.2427%" height="15" fill="rgb(209,14,47)" fg:x="1063" fg:w="3"/><text x="86.2532%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.2460%" y="501" width="0.0809%" height="15" fill="rgb(218,201,17)" fg:x="1066" fg:w="1"/><text x="86.4960%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.2460%" y="485" width="0.0809%" height="15" fill="rgb(218,98,15)" fg:x="1066" fg:w="1"/><text x="86.4960%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.2460%" y="469" width="0.0809%" height="15" fill="rgb(233,202,29)" fg:x="1066" fg:w="1"/><text x="86.4960%" y="479.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (7 samples, 0.57%)</title><rect x="85.8414%" y="565" width="0.5663%" height="15" fill="rgb(207,196,44)" fg:x="1061" fg:w="7"/><text x="86.0914%" y="575.50"></text></g><g><title>plugins_core::tools::contained_by (2 samples, 0.16%)</title><rect x="86.2460%" y="549" width="0.1618%" height="15" fill="rgb(218,63,34)" fg:x="1066" fg:w="2"/><text x="86.4960%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="86.2460%" y="533" width="0.1618%" height="15" fill="rgb(209,10,5)" fg:x="1066" fg:w="2"/><text x="86.4960%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="86.2460%" y="517" width="0.1618%" height="15" fill="rgb(224,36,28)" fg:x="1066" fg:w="2"/><text x="86.4960%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.3269%" y="501" width="0.0809%" height="15" fill="rgb(249,178,7)" fg:x="1067" fg:w="1"/><text x="86.5769%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.3269%" y="485" width="0.0809%" height="15" fill="rgb(253,163,10)" fg:x="1067" fg:w="1"/><text x="86.5769%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.3269%" y="469" width="0.0809%" height="15" fill="rgb(245,67,46)" fg:x="1067" fg:w="1"/><text x="86.5769%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.3269%" y="453" width="0.0809%" height="15" fill="rgb(225,14,18)" fg:x="1067" fg:w="1"/><text x="86.5769%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.3269%" y="437" width="0.0809%" height="15" fill="rgb(217,41,54)" fg:x="1067" fg:w="1"/><text x="86.5769%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (9 samples, 0.73%)</title><rect x="85.8414%" y="597" width="0.7282%" height="15" fill="rgb(222,111,11)" fg:x="1061" fg:w="9"/><text x="86.0914%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (9 samples, 0.73%)</title><rect x="85.8414%" y="581" width="0.7282%" height="15" fill="rgb(211,85,31)" fg:x="1061" fg:w="9"/><text x="86.0914%" y="591.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (2 samples, 0.16%)</title><rect x="86.4078%" y="565" width="0.1618%" height="15" fill="rgb(223,29,26)" fg:x="1068" fg:w="2"/><text x="86.6578%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.4887%" y="549" width="0.0809%" height="15" fill="rgb(236,124,50)" fg:x="1069" fg:w="1"/><text x="86.7387%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.4887%" y="533" width="0.0809%" height="15" fill="rgb(219,148,15)" fg:x="1069" fg:w="1"/><text x="86.7387%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.4887%" y="517" width="0.0809%" height="15" fill="rgb(248,159,33)" fg:x="1069" fg:w="1"/><text x="86.7387%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.4887%" y="501" width="0.0809%" height="15" fill="rgb(252,65,8)" fg:x="1069" fg:w="1"/><text x="86.7387%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.4887%" y="485" width="0.0809%" height="15" fill="rgb(236,45,7)" fg:x="1069" fg:w="1"/><text x="86.7387%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.4887%" y="469" width="0.0809%" height="15" fill="rgb(244,3,48)" fg:x="1069" fg:w="1"/><text x="86.7387%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.4887%" y="453" width="0.0809%" height="15" fill="rgb(224,123,53)" fg:x="1069" fg:w="1"/><text x="86.7387%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.4887%" y="437" width="0.0809%" height="15" fill="rgb(223,173,15)" fg:x="1069" fg:w="1"/><text x="86.7387%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.4887%" y="421" width="0.0809%" height="15" fill="rgb(254,181,5)" fg:x="1069" fg:w="1"/><text x="86.7387%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.4887%" y="405" width="0.0809%" height="15" fill="rgb(243,124,33)" fg:x="1069" fg:w="1"/><text x="86.7387%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.4887%" y="389" width="0.0809%" height="15" fill="rgb(253,220,11)" fg:x="1069" fg:w="1"/><text x="86.7387%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.4887%" y="373" width="0.0809%" height="15" fill="rgb(217,14,4)" fg:x="1069" fg:w="1"/><text x="86.7387%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.4887%" y="357" width="0.0809%" height="15" fill="rgb(209,196,12)" fg:x="1069" fg:w="1"/><text x="86.7387%" y="367.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="86.5696%" y="597" width="0.0809%" height="15" fill="rgb(237,108,29)" fg:x="1070" fg:w="1"/><text x="86.8196%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.5696%" y="581" width="0.0809%" height="15" fill="rgb(216,173,20)" fg:x="1070" fg:w="1"/><text x="86.8196%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.5696%" y="565" width="0.0809%" height="15" fill="rgb(245,27,6)" fg:x="1070" fg:w="1"/><text x="86.8196%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.5696%" y="549" width="0.0809%" height="15" fill="rgb(210,181,20)" fg:x="1070" fg:w="1"/><text x="86.8196%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.5696%" y="533" width="0.0809%" height="15" fill="rgb(235,213,1)" fg:x="1070" fg:w="1"/><text x="86.8196%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.5696%" y="517" width="0.0809%" height="15" fill="rgb(239,68,43)" fg:x="1070" fg:w="1"/><text x="86.8196%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.5696%" y="501" width="0.0809%" height="15" fill="rgb(254,137,43)" fg:x="1070" fg:w="1"/><text x="86.8196%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.5696%" y="485" width="0.0809%" height="15" fill="rgb(252,170,38)" fg:x="1070" fg:w="1"/><text x="86.8196%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.5696%" y="469" width="0.0809%" height="15" fill="rgb(234,21,42)" fg:x="1070" fg:w="1"/><text x="86.8196%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.5696%" y="453" width="0.0809%" height="15" fill="rgb(216,145,40)" fg:x="1070" fg:w="1"/><text x="86.8196%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.5696%" y="437" width="0.0809%" height="15" fill="rgb(251,73,9)" fg:x="1070" fg:w="1"/><text x="86.8196%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.5696%" y="421" width="0.0809%" height="15" fill="rgb(242,54,6)" fg:x="1070" fg:w="1"/><text x="86.8196%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.5696%" y="405" width="0.0809%" height="15" fill="rgb(239,70,7)" fg:x="1070" fg:w="1"/><text x="86.8196%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="86.5696%" y="389" width="0.0809%" height="15" fill="rgb(216,159,35)" fg:x="1070" fg:w="1"/><text x="86.8196%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="86.5696%" y="373" width="0.0809%" height="15" fill="rgb(224,50,39)" fg:x="1070" fg:w="1"/><text x="86.8196%" y="383.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6505%" y="565" width="0.0809%" height="15" fill="rgb(235,9,35)" fg:x="1071" fg:w="1"/><text x="86.9005%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6505%" y="549" width="0.0809%" height="15" fill="rgb(239,34,21)" fg:x="1071" fg:w="1"/><text x="86.9005%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6505%" y="533" width="0.0809%" height="15" fill="rgb(218,162,43)" fg:x="1071" fg:w="1"/><text x="86.9005%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.6505%" y="517" width="0.0809%" height="15" fill="rgb(219,89,33)" fg:x="1071" fg:w="1"/><text x="86.9005%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.6505%" y="501" width="0.0809%" height="15" fill="rgb(226,125,37)" fg:x="1071" fg:w="1"/><text x="86.9005%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.6505%" y="485" width="0.0809%" height="15" fill="rgb(233,149,30)" fg:x="1071" fg:w="1"/><text x="86.9005%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.6505%" y="469" width="0.0809%" height="15" fill="rgb(236,8,18)" fg:x="1071" fg:w="1"/><text x="86.9005%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.6505%" y="453" width="0.0809%" height="15" fill="rgb(205,176,9)" fg:x="1071" fg:w="1"/><text x="86.9005%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.6505%" y="437" width="0.0809%" height="15" fill="rgb(252,103,44)" fg:x="1071" fg:w="1"/><text x="86.9005%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.6505%" y="421" width="0.0809%" height="15" fill="rgb(207,68,53)" fg:x="1071" fg:w="1"/><text x="86.9005%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.6505%" y="405" width="0.0809%" height="15" fill="rgb(218,193,48)" fg:x="1071" fg:w="1"/><text x="86.9005%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.6505%" y="389" width="0.0809%" height="15" fill="rgb(234,121,52)" fg:x="1071" fg:w="1"/><text x="86.9005%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6505%" y="373" width="0.0809%" height="15" fill="rgb(227,218,49)" fg:x="1071" fg:w="1"/><text x="86.9005%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="86.6505%" y="581" width="0.2427%" height="15" fill="rgb(221,8,7)" fg:x="1071" fg:w="3"/><text x="86.9005%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="86.7314%" y="565" width="0.1618%" height="15" fill="rgb(217,151,36)" fg:x="1072" fg:w="2"/><text x="86.9814%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.8123%" y="549" width="0.0809%" height="15" fill="rgb(213,71,5)" fg:x="1073" fg:w="1"/><text x="87.0623%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.8123%" y="533" width="0.0809%" height="15" fill="rgb(225,145,43)" fg:x="1073" fg:w="1"/><text x="87.0623%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.8123%" y="517" width="0.0809%" height="15" fill="rgb(235,118,19)" fg:x="1073" fg:w="1"/><text x="87.0623%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.8123%" y="501" width="0.0809%" height="15" fill="rgb(214,102,36)" fg:x="1073" fg:w="1"/><text x="87.0623%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.8932%" y="549" width="0.0809%" height="15" fill="rgb(220,56,43)" fg:x="1074" fg:w="1"/><text x="87.1432%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.8932%" y="533" width="0.0809%" height="15" fill="rgb(246,136,46)" fg:x="1074" fg:w="1"/><text x="87.1432%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.8932%" y="517" width="0.0809%" height="15" fill="rgb(249,99,12)" fg:x="1074" fg:w="1"/><text x="87.1432%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="86.8932%" y="501" width="0.0809%" height="15" fill="rgb(224,31,42)" fg:x="1074" fg:w="1"/><text x="87.1432%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.8932%" y="485" width="0.0809%" height="15" fill="rgb(208,96,21)" fg:x="1074" fg:w="1"/><text x="87.1432%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.8932%" y="469" width="0.0809%" height="15" fill="rgb(237,229,7)" fg:x="1074" fg:w="1"/><text x="87.1432%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.9741%" y="549" width="0.0809%" height="15" fill="rgb(210,12,6)" fg:x="1075" fg:w="1"/><text x="87.2241%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.9741%" y="533" width="0.0809%" height="15" fill="rgb(240,9,34)" fg:x="1075" fg:w="1"/><text x="87.2241%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="86.9741%" y="517" width="0.0809%" height="15" fill="rgb(211,68,37)" fg:x="1075" fg:w="1"/><text x="87.2241%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.0550%" y="517" width="0.0809%" height="15" fill="rgb(249,138,50)" fg:x="1076" fg:w="1"/><text x="87.3050%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.0550%" y="501" width="0.0809%" height="15" fill="rgb(243,185,40)" fg:x="1076" fg:w="1"/><text x="87.3050%" y="511.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (4 samples, 0.32%)</title><rect x="86.8932%" y="581" width="0.3236%" height="15" fill="rgb(242,92,35)" fg:x="1074" fg:w="4"/><text x="87.1432%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (4 samples, 0.32%)</title><rect x="86.8932%" y="565" width="0.3236%" height="15" fill="rgb(244,98,5)" fg:x="1074" fg:w="4"/><text x="87.1432%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="87.0550%" y="549" width="0.1618%" height="15" fill="rgb(228,186,29)" fg:x="1076" fg:w="2"/><text x="87.3050%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="87.0550%" y="533" width="0.1618%" height="15" fill="rgb(253,7,44)" fg:x="1076" fg:w="2"/><text x="87.3050%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="87.1359%" y="517" width="0.0809%" height="15" fill="rgb(216,11,45)" fg:x="1077" fg:w="1"/><text x="87.3859%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="87.1359%" y="501" width="0.0809%" height="15" fill="rgb(205,67,3)" fg:x="1077" fg:w="1"/><text x="87.3859%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.1359%" y="485" width="0.0809%" height="15" fill="rgb(250,18,3)" fg:x="1077" fg:w="1"/><text x="87.3859%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2168%" y="565" width="0.0809%" height="15" fill="rgb(241,222,43)" fg:x="1078" fg:w="1"/><text x="87.4668%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2168%" y="549" width="0.0809%" height="15" fill="rgb(233,115,3)" fg:x="1078" fg:w="1"/><text x="87.4668%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.2168%" y="533" width="0.0809%" height="15" fill="rgb(215,165,25)" fg:x="1078" fg:w="1"/><text x="87.4668%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.2168%" y="517" width="0.0809%" height="15" fill="rgb(234,179,6)" fg:x="1078" fg:w="1"/><text x="87.4668%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.2168%" y="501" width="0.0809%" height="15" fill="rgb(215,82,23)" fg:x="1078" fg:w="1"/><text x="87.4668%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.2168%" y="485" width="0.0809%" height="15" fill="rgb(211,47,18)" fg:x="1078" fg:w="1"/><text x="87.4668%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.2168%" y="469" width="0.0809%" height="15" fill="rgb(248,17,9)" fg:x="1078" fg:w="1"/><text x="87.4668%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.2168%" y="453" width="0.0809%" height="15" fill="rgb(210,212,12)" fg:x="1078" fg:w="1"/><text x="87.4668%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.2168%" y="437" width="0.0809%" height="15" fill="rgb(230,135,45)" fg:x="1078" fg:w="1"/><text x="87.4668%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.2168%" y="421" width="0.0809%" height="15" fill="rgb(214,121,41)" fg:x="1078" fg:w="1"/><text x="87.4668%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.2168%" y="405" width="0.0809%" height="15" fill="rgb(239,165,45)" fg:x="1078" fg:w="1"/><text x="87.4668%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.2168%" y="389" width="0.0809%" height="15" fill="rgb(214,85,51)" fg:x="1078" fg:w="1"/><text x="87.4668%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="87.2977%" y="533" width="0.0809%" height="15" fill="rgb(223,90,27)" fg:x="1079" fg:w="1"/><text x="87.5477%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="87.2977%" y="517" width="0.0809%" height="15" fill="rgb(244,84,11)" fg:x="1079" fg:w="1"/><text x="87.5477%" y="527.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="87.2977%" y="501" width="0.0809%" height="15" fill="rgb(253,41,47)" fg:x="1079" fg:w="1"/><text x="87.5477%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.2977%" y="485" width="0.0809%" height="15" fill="rgb(232,39,5)" fg:x="1079" fg:w="1"/><text x="87.5477%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (20 samples, 1.62%)</title><rect x="85.8414%" y="613" width="1.6181%" height="15" fill="rgb(211,93,4)" fg:x="1061" fg:w="20"/><text x="86.0914%" y="623.50"></text></g><g><title>plugins_core::tools::move_between (10 samples, 0.81%)</title><rect x="86.6505%" y="597" width="0.8091%" height="15" fill="rgb(219,50,49)" fg:x="1071" fg:w="10"/><text x="86.9005%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (3 samples, 0.24%)</title><rect x="87.2168%" y="581" width="0.2427%" height="15" fill="rgb(232,80,19)" fg:x="1078" fg:w="3"/><text x="87.4668%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="87.2977%" y="565" width="0.1618%" height="15" fill="rgb(215,227,39)" fg:x="1079" fg:w="2"/><text x="87.5477%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="87.2977%" y="549" width="0.1618%" height="15" fill="rgb(211,99,12)" fg:x="1079" fg:w="2"/><text x="87.5477%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.3786%" y="533" width="0.0809%" height="15" fill="rgb(214,158,5)" fg:x="1080" fg:w="1"/><text x="87.6286%" y="543.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="87.5405%" y="565" width="0.0809%" height="15" fill="rgb(242,19,53)" fg:x="1082" fg:w="1"/><text x="87.7905%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.6214%" y="469" width="0.0809%" height="15" fill="rgb(208,18,20)" fg:x="1083" fg:w="1"/><text x="87.8714%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="87.6214%" y="453" width="0.0809%" height="15" fill="rgb(250,44,11)" fg:x="1083" fg:w="1"/><text x="87.8714%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.7023%" y="469" width="0.0809%" height="15" fill="rgb(238,159,13)" fg:x="1084" fg:w="1"/><text x="87.9523%" y="479.50"></text></g><g><title>engine::internal::Entities::prepare_entity (4 samples, 0.32%)</title><rect x="87.5405%" y="581" width="0.3236%" height="15" fill="rgb(231,74,18)" fg:x="1082" fg:w="4"/><text x="87.7905%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity (3 samples, 0.24%)</title><rect x="87.6214%" y="565" width="0.2427%" height="15" fill="rgb(229,219,45)" fg:x="1083" fg:w="3"/><text x="87.8714%" y="575.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="87.6214%" y="549" width="0.2427%" height="15" fill="rgb(210,221,1)" fg:x="1083" fg:w="3"/><text x="87.8714%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="87.6214%" y="533" width="0.2427%" height="15" fill="rgb(209,60,51)" fg:x="1083" fg:w="3"/><text x="87.8714%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="87.6214%" y="517" width="0.2427%" height="15" fill="rgb(252,97,34)" fg:x="1083" fg:w="3"/><text x="87.8714%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="87.6214%" y="501" width="0.2427%" height="15" fill="rgb(243,211,37)" fg:x="1083" fg:w="3"/><text x="87.8714%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="87.6214%" y="485" width="0.2427%" height="15" fill="rgb(210,229,37)" fg:x="1083" fg:w="3"/><text x="87.8714%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.7832%" y="469" width="0.0809%" height="15" fill="rgb(220,208,43)" fg:x="1085" fg:w="1"/><text x="88.0332%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.7832%" y="453" width="0.0809%" height="15" fill="rgb(218,118,50)" fg:x="1085" fg:w="1"/><text x="88.0332%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.7832%" y="437" width="0.0809%" height="15" fill="rgb(254,169,52)" fg:x="1085" fg:w="1"/><text x="88.0332%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.7832%" y="421" width="0.0809%" height="15" fill="rgb(221,214,37)" fg:x="1085" fg:w="1"/><text x="88.0332%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.7832%" y="405" width="0.0809%" height="15" fill="rgb(254,186,32)" fg:x="1085" fg:w="1"/><text x="88.0332%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.7832%" y="389" width="0.0809%" height="15" fill="rgb(215,144,43)" fg:x="1085" fg:w="1"/><text x="88.0332%" y="399.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="87.8641%" y="549" width="0.0809%" height="15" fill="rgb(252,21,46)" fg:x="1086" fg:w="1"/><text x="88.1141%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (6 samples, 0.49%)</title><rect x="87.5405%" y="597" width="0.4854%" height="15" fill="rgb(207,166,46)" fg:x="1082" fg:w="6"/><text x="87.7905%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="87.8641%" y="581" width="0.1618%" height="15" fill="rgb(253,37,49)" fg:x="1086" fg:w="2"/><text x="88.1141%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="87.8641%" y="565" width="0.1618%" height="15" fill="rgb(222,97,20)" fg:x="1086" fg:w="2"/><text x="88.1141%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.9450%" y="549" width="0.0809%" height="15" fill="rgb(244,181,26)" fg:x="1087" fg:w="1"/><text x="88.1950%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.9450%" y="533" width="0.0809%" height="15" fill="rgb(241,22,29)" fg:x="1087" fg:w="1"/><text x="88.1950%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.9450%" y="517" width="0.0809%" height="15" fill="rgb(206,200,43)" fg:x="1087" fg:w="1"/><text x="88.1950%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.1068%" y="533" width="0.0809%" height="15" fill="rgb(226,224,43)" fg:x="1089" fg:w="1"/><text x="88.3568%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.1068%" y="517" width="0.0809%" height="15" fill="rgb(253,129,28)" fg:x="1089" fg:w="1"/><text x="88.3568%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="88.1877%" y="501" width="0.0809%" height="15" fill="rgb(252,99,33)" fg:x="1090" fg:w="1"/><text x="88.4377%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="88.2686%" y="485" width="0.0809%" height="15" fill="rgb(208,123,45)" fg:x="1091" fg:w="1"/><text x="88.5186%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="88.2686%" y="469" width="0.0809%" height="15" fill="rgb(251,106,12)" fg:x="1091" fg:w="1"/><text x="88.5186%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.2686%" y="453" width="0.0809%" height="15" fill="rgb(240,209,35)" fg:x="1091" fg:w="1"/><text x="88.5186%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2686%" y="437" width="0.0809%" height="15" fill="rgb(214,52,50)" fg:x="1091" fg:w="1"/><text x="88.5186%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.2686%" y="421" width="0.0809%" height="15" fill="rgb(234,119,4)" fg:x="1091" fg:w="1"/><text x="88.5186%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2686%" y="405" width="0.0809%" height="15" fill="rgb(228,181,36)" fg:x="1091" fg:w="1"/><text x="88.5186%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.2686%" y="389" width="0.0809%" height="15" fill="rgb(213,171,42)" fg:x="1091" fg:w="1"/><text x="88.5186%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2686%" y="373" width="0.0809%" height="15" fill="rgb(239,14,41)" fg:x="1091" fg:w="1"/><text x="88.5186%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.2686%" y="357" width="0.0809%" height="15" fill="rgb(239,111,46)" fg:x="1091" fg:w="1"/><text x="88.5186%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="88.2686%" y="341" width="0.0809%" height="15" fill="rgb(214,72,7)" fg:x="1091" fg:w="1"/><text x="88.5186%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="88.2686%" y="325" width="0.0809%" height="15" fill="rgb(221,114,1)" fg:x="1091" fg:w="1"/><text x="88.5186%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.3495%" y="437" width="0.0809%" height="15" fill="rgb(213,143,14)" fg:x="1092" fg:w="1"/><text x="88.5995%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.3495%" y="421" width="0.0809%" height="15" fill="rgb(220,221,53)" fg:x="1092" fg:w="1"/><text x="88.5995%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.40%)</title><rect x="88.1877%" y="533" width="0.4045%" height="15" fill="rgb(236,189,27)" fg:x="1090" fg:w="5"/><text x="88.4377%" y="543.50"></text></g><g><title>engine::internal::Entities::prepare_entity (5 samples, 0.40%)</title><rect x="88.1877%" y="517" width="0.4045%" height="15" fill="rgb(252,139,49)" fg:x="1090" fg:w="5"/><text x="88.4377%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.32%)</title><rect x="88.2686%" y="501" width="0.3236%" height="15" fill="rgb(231,158,33)" fg:x="1091" fg:w="4"/><text x="88.5186%" y="511.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="88.3495%" y="485" width="0.2427%" height="15" fill="rgb(207,201,15)" fg:x="1092" fg:w="3"/><text x="88.5995%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="88.3495%" y="469" width="0.2427%" height="15" fill="rgb(218,43,48)" fg:x="1092" fg:w="3"/><text x="88.5995%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="88.3495%" y="453" width="0.2427%" height="15" fill="rgb(244,63,52)" fg:x="1092" fg:w="3"/><text x="88.5995%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="88.4304%" y="437" width="0.1618%" height="15" fill="rgb(236,60,17)" fg:x="1093" fg:w="2"/><text x="88.6804%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.4304%" y="421" width="0.1618%" height="15" fill="rgb(205,206,29)" fg:x="1093" fg:w="2"/><text x="88.6804%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="88.4304%" y="405" width="0.1618%" height="15" fill="rgb(205,209,35)" fg:x="1093" fg:w="2"/><text x="88.6804%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="88.4304%" y="389" width="0.1618%" height="15" fill="rgb(227,112,14)" fg:x="1093" fg:w="2"/><text x="88.6804%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.5113%" y="373" width="0.0809%" height="15" fill="rgb(248,151,9)" fg:x="1094" fg:w="1"/><text x="88.7613%" y="383.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (7 samples, 0.57%)</title><rect x="88.1068%" y="581" width="0.5663%" height="15" fill="rgb(247,45,40)" fg:x="1089" fg:w="7"/><text x="88.3568%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.57%)</title><rect x="88.1068%" y="565" width="0.5663%" height="15" fill="rgb(232,185,16)" fg:x="1089" fg:w="7"/><text x="88.3568%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (7 samples, 0.57%)</title><rect x="88.1068%" y="549" width="0.5663%" height="15" fill="rgb(215,45,44)" fg:x="1089" fg:w="7"/><text x="88.3568%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.5922%" y="533" width="0.0809%" height="15" fill="rgb(206,69,32)" fg:x="1095" fg:w="1"/><text x="88.8422%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5922%" y="517" width="0.0809%" height="15" fill="rgb(233,98,50)" fg:x="1095" fg:w="1"/><text x="88.8422%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.5922%" y="501" width="0.0809%" height="15" fill="rgb(232,217,52)" fg:x="1095" fg:w="1"/><text x="88.8422%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5922%" y="485" width="0.0809%" height="15" fill="rgb(250,42,51)" fg:x="1095" fg:w="1"/><text x="88.8422%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5922%" y="469" width="0.0809%" height="15" fill="rgb(241,200,26)" fg:x="1095" fg:w="1"/><text x="88.8422%" y="479.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (9 samples, 0.73%)</title><rect x="88.0259%" y="597" width="0.7282%" height="15" fill="rgb(207,10,32)" fg:x="1088" fg:w="9"/><text x="88.2759%" y="607.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="88.6731%" y="581" width="0.0809%" height="15" fill="rgb(214,63,15)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="88.6731%" y="565" width="0.0809%" height="15" fill="rgb(234,176,14)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.6731%" y="549" width="0.0809%" height="15" fill="rgb(226,104,52)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.6731%" y="533" width="0.0809%" height="15" fill="rgb(211,222,1)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.6731%" y="517" width="0.0809%" height="15" fill="rgb(237,7,3)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.6731%" y="501" width="0.0809%" height="15" fill="rgb(218,143,7)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.6731%" y="485" width="0.0809%" height="15" fill="rgb(208,25,22)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.6731%" y="469" width="0.0809%" height="15" fill="rgb(228,127,16)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.6731%" y="453" width="0.0809%" height="15" fill="rgb(237,86,27)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.6731%" y="437" width="0.0809%" height="15" fill="rgb(207,125,19)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.6731%" y="421" width="0.0809%" height="15" fill="rgb(243,195,0)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.6731%" y="405" width="0.0809%" height="15" fill="rgb(230,95,18)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="88.6731%" y="389" width="0.0809%" height="15" fill="rgb(232,157,21)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="88.6731%" y="373" width="0.0809%" height="15" fill="rgb(212,120,50)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="88.6731%" y="357" width="0.0809%" height="15" fill="rgb(222,204,44)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="88.6731%" y="341" width="0.0809%" height="15" fill="rgb(236,6,33)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.08%)</title><rect x="88.6731%" y="325" width="0.0809%" height="15" fill="rgb(247,11,38)" fg:x="1096" fg:w="1"/><text x="88.9231%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.7540%" y="437" width="0.0809%" height="15" fill="rgb(215,111,0)" fg:x="1097" fg:w="1"/><text x="89.0040%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.7540%" y="421" width="0.0809%" height="15" fill="rgb(211,65,46)" fg:x="1097" fg:w="1"/><text x="89.0040%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="88.7540%" y="405" width="0.0809%" height="15" fill="rgb(216,5,12)" fg:x="1097" fg:w="1"/><text x="89.0040%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="88.7540%" y="389" width="0.0809%" height="15" fill="rgb(226,7,2)" fg:x="1097" fg:w="1"/><text x="89.0040%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="88.7540%" y="373" width="0.0809%" height="15" fill="rgb(242,116,12)" fg:x="1097" fg:w="1"/><text x="89.0040%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="88.7540%" y="357" width="0.0809%" height="15" fill="rgb(249,209,7)" fg:x="1097" fg:w="1"/><text x="89.0040%" y="367.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_name (18 samples, 1.46%)</title><rect x="87.4595%" y="613" width="1.4563%" height="15" fill="rgb(232,73,17)" fg:x="1081" fg:w="18"/><text x="87.7095%" y="623.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="88.7540%" y="597" width="0.1618%" height="15" fill="rgb(214,13,32)" fg:x="1097" fg:w="2"/><text x="89.0040%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="88.7540%" y="581" width="0.1618%" height="15" fill="rgb(221,125,10)" fg:x="1097" fg:w="2"/><text x="89.0040%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="88.7540%" y="565" width="0.1618%" height="15" fill="rgb(246,7,44)" fg:x="1097" fg:w="2"/><text x="89.0040%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="88.7540%" y="549" width="0.1618%" height="15" fill="rgb(239,18,35)" fg:x="1097" fg:w="2"/><text x="89.0040%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="88.7540%" y="533" width="0.1618%" height="15" fill="rgb(250,222,16)" fg:x="1097" fg:w="2"/><text x="89.0040%" y="543.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="88.7540%" y="517" width="0.1618%" height="15" fill="rgb(219,100,8)" fg:x="1097" fg:w="2"/><text x="89.0040%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="88.7540%" y="501" width="0.1618%" height="15" fill="rgb(240,62,13)" fg:x="1097" fg:w="2"/><text x="89.0040%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="88.7540%" y="485" width="0.1618%" height="15" fill="rgb(253,194,2)" fg:x="1097" fg:w="2"/><text x="89.0040%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="88.7540%" y="469" width="0.1618%" height="15" fill="rgb(235,58,31)" fg:x="1097" fg:w="2"/><text x="89.0040%" y="479.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="88.7540%" y="453" width="0.1618%" height="15" fill="rgb(231,37,11)" fg:x="1097" fg:w="2"/><text x="89.0040%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.8350%" y="437" width="0.0809%" height="15" fill="rgb(235,133,0)" fg:x="1098" fg:w="1"/><text x="89.0850%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="88.9159%" y="565" width="0.0809%" height="15" fill="rgb(212,185,40)" fg:x="1099" fg:w="1"/><text x="89.1659%" y="575.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="88.9159%" y="549" width="0.0809%" height="15" fill="rgb(216,68,42)" fg:x="1099" fg:w="1"/><text x="89.1659%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="88.9159%" y="533" width="0.0809%" height="15" fill="rgb(239,81,4)" fg:x="1099" fg:w="1"/><text x="89.1659%" y="543.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="88.9159%" y="517" width="0.0809%" height="15" fill="rgb(206,86,6)" fg:x="1099" fg:w="1"/><text x="89.1659%" y="527.50"></text></g><g><title>kernel::plugins::SessionPlugins::evaluate (2 samples, 0.16%)</title><rect x="88.9159%" y="613" width="0.1618%" height="15" fill="rgb(249,95,27)" fg:x="1099" fg:w="2"/><text x="89.1659%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="88.9159%" y="597" width="0.1618%" height="15" fill="rgb(205,155,45)" fg:x="1099" fg:w="2"/><text x="89.1659%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="88.9159%" y="581" width="0.1618%" height="15" fill="rgb(213,55,42)" fg:x="1099" fg:w="2"/><text x="89.1659%" y="591.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="88.9968%" y="565" width="0.0809%" height="15" fill="rgb(249,197,4)" fg:x="1100" fg:w="1"/><text x="89.2468%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="88.9968%" y="549" width="0.0809%" height="15" fill="rgb(212,128,32)" fg:x="1100" fg:w="1"/><text x="89.2468%" y="559.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="88.9968%" y="533" width="0.0809%" height="15" fill="rgb(252,47,30)" fg:x="1100" fg:w="1"/><text x="89.2468%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="89.3204%" y="517" width="0.1618%" height="15" fill="rgb(209,79,18)" fg:x="1104" fg:w="2"/><text x="89.5704%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="89.3204%" y="501" width="0.1618%" height="15" fill="rgb(225,81,38)" fg:x="1104" fg:w="2"/><text x="89.5704%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="89.4822%" y="517" width="0.2427%" height="15" fill="rgb(205,95,16)" fg:x="1106" fg:w="3"/><text x="89.7322%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.57%)</title><rect x="89.2395%" y="533" width="0.5663%" height="15" fill="rgb(214,30,4)" fg:x="1103" fg:w="7"/><text x="89.4895%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="89.7249%" y="517" width="0.0809%" height="15" fill="rgb(232,137,22)" fg:x="1109" fg:w="1"/><text x="89.9749%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.7249%" y="501" width="0.0809%" height="15" fill="rgb(232,156,19)" fg:x="1109" fg:w="1"/><text x="89.9749%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.7249%" y="485" width="0.0809%" height="15" fill="rgb(248,157,26)" fg:x="1109" fg:w="1"/><text x="89.9749%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (10 samples, 0.81%)</title><rect x="89.0777%" y="581" width="0.8091%" height="15" fill="rgb(242,24,3)" fg:x="1101" fg:w="10"/><text x="89.3277%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.81%)</title><rect x="89.0777%" y="565" width="0.8091%" height="15" fill="rgb(218,195,48)" fg:x="1101" fg:w="10"/><text x="89.3277%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="89.1586%" y="549" width="0.7282%" height="15" fill="rgb(214,193,36)" fg:x="1102" fg:w="9"/><text x="89.4086%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8058%" y="533" width="0.0809%" height="15" fill="rgb(242,110,40)" fg:x="1110" fg:w="1"/><text x="90.0558%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="89.8867%" y="533" width="0.0809%" height="15" fill="rgb(233,150,26)" fg:x="1111" fg:w="1"/><text x="90.1367%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="89.8867%" y="549" width="0.1618%" height="15" fill="rgb(239,200,30)" fg:x="1111" fg:w="2"/><text x="90.1367%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="89.9676%" y="533" width="0.0809%" height="15" fill="rgb(226,28,11)" fg:x="1112" fg:w="1"/><text x="90.2176%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="90.0485%" y="549" width="0.0809%" height="15" fill="rgb(220,26,48)" fg:x="1113" fg:w="1"/><text x="90.2985%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="90.0485%" y="533" width="0.0809%" height="15" fill="rgb(232,10,11)" fg:x="1113" fg:w="1"/><text x="90.2985%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.0485%" y="517" width="0.0809%" height="15" fill="rgb(252,143,50)" fg:x="1113" fg:w="1"/><text x="90.2985%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="90.3722%" y="469" width="0.0809%" height="15" fill="rgb(206,58,22)" fg:x="1117" fg:w="1"/><text x="90.6222%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="90.3722%" y="453" width="0.0809%" height="15" fill="rgb(250,9,45)" fg:x="1117" fg:w="1"/><text x="90.6222%" y="463.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="90.3722%" y="437" width="0.0809%" height="15" fill="rgb(225,148,14)" fg:x="1117" fg:w="1"/><text x="90.6222%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="90.3722%" y="421" width="0.0809%" height="15" fill="rgb(205,178,40)" fg:x="1117" fg:w="1"/><text x="90.6222%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="90.3722%" y="405" width="0.0809%" height="15" fill="rgb(215,201,4)" fg:x="1117" fg:w="1"/><text x="90.6222%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="90.3722%" y="389" width="0.0809%" height="15" fill="rgb(219,223,24)" fg:x="1117" fg:w="1"/><text x="90.6222%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="90.3722%" y="373" width="0.0809%" height="15" fill="rgb(217,19,31)" fg:x="1117" fg:w="1"/><text x="90.6222%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="90.3722%" y="357" width="0.0809%" height="15" fill="rgb(235,33,3)" fg:x="1117" fg:w="1"/><text x="90.6222%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="90.3722%" y="341" width="0.0809%" height="15" fill="rgb(221,39,18)" fg:x="1117" fg:w="1"/><text x="90.6222%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="90.3722%" y="325" width="0.0809%" height="15" fill="rgb(242,162,33)" fg:x="1117" fg:w="1"/><text x="90.6222%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="90.3722%" y="309" width="0.0809%" height="15" fill="rgb(233,215,28)" fg:x="1117" fg:w="1"/><text x="90.6222%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="90.3722%" y="293" width="0.0809%" height="15" fill="rgb(212,117,9)" fg:x="1117" fg:w="1"/><text x="90.6222%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.08%)</title><rect x="90.3722%" y="277" width="0.0809%" height="15" fill="rgb(237,70,47)" fg:x="1117" fg:w="1"/><text x="90.6222%" y="287.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.08%)</title><rect x="90.3722%" y="261" width="0.0809%" height="15" fill="rgb(206,177,13)" fg:x="1117" fg:w="1"/><text x="90.6222%" y="271.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="90.4531%" y="357" width="0.0809%" height="15" fill="rgb(209,174,33)" fg:x="1118" fg:w="1"/><text x="90.7031%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="90.4531%" y="341" width="0.0809%" height="15" fill="rgb(226,6,11)" fg:x="1118" fg:w="1"/><text x="90.7031%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.4531%" y="325" width="0.0809%" height="15" fill="rgb(240,214,6)" fg:x="1118" fg:w="1"/><text x="90.7031%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4531%" y="309" width="0.0809%" height="15" fill="rgb(254,214,40)" fg:x="1118" fg:w="1"/><text x="90.7031%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.4531%" y="293" width="0.0809%" height="15" fill="rgb(230,187,15)" fg:x="1118" fg:w="1"/><text x="90.7031%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4531%" y="277" width="0.0809%" height="15" fill="rgb(250,11,27)" fg:x="1118" fg:w="1"/><text x="90.7031%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="90.4531%" y="405" width="0.1618%" height="15" fill="rgb(243,107,19)" fg:x="1118" fg:w="2"/><text x="90.7031%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="90.4531%" y="389" width="0.1618%" height="15" fill="rgb(253,66,26)" fg:x="1118" fg:w="2"/><text x="90.7031%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity (2 samples, 0.16%)</title><rect x="90.4531%" y="373" width="0.1618%" height="15" fill="rgb(228,43,8)" fg:x="1118" fg:w="2"/><text x="90.7031%" y="383.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="90.5340%" y="357" width="0.0809%" height="15" fill="rgb(232,197,36)" fg:x="1119" fg:w="1"/><text x="90.7840%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.5340%" y="341" width="0.0809%" height="15" fill="rgb(221,182,31)" fg:x="1119" fg:w="1"/><text x="90.7840%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.5340%" y="325" width="0.0809%" height="15" fill="rgb(244,25,36)" fg:x="1119" fg:w="1"/><text x="90.7840%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.5340%" y="309" width="0.0809%" height="15" fill="rgb(247,101,19)" fg:x="1119" fg:w="1"/><text x="90.7840%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.5340%" y="293" width="0.0809%" height="15" fill="rgb(223,117,19)" fg:x="1119" fg:w="1"/><text x="90.7840%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.5340%" y="277" width="0.0809%" height="15" fill="rgb(249,63,38)" fg:x="1119" fg:w="1"/><text x="90.7840%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.5340%" y="261" width="0.0809%" height="15" fill="rgb(220,143,23)" fg:x="1119" fg:w="1"/><text x="90.7840%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.5340%" y="245" width="0.0809%" height="15" fill="rgb(252,183,22)" fg:x="1119" fg:w="1"/><text x="90.7840%" y="255.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.40%)</title><rect x="90.2913%" y="485" width="0.4045%" height="15" fill="rgb(243,176,15)" fg:x="1116" fg:w="5"/><text x="90.5413%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="90.4531%" y="469" width="0.2427%" height="15" fill="rgb(244,204,46)" fg:x="1118" fg:w="3"/><text x="90.7031%" y="479.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (3 samples, 0.24%)</title><rect x="90.4531%" y="453" width="0.2427%" height="15" fill="rgb(227,28,54)" fg:x="1118" fg:w="3"/><text x="90.7031%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (3 samples, 0.24%)</title><rect x="90.4531%" y="437" width="0.2427%" height="15" fill="rgb(231,10,15)" fg:x="1118" fg:w="3"/><text x="90.7031%" y="447.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="90.4531%" y="421" width="0.2427%" height="15" fill="rgb(210,200,17)" fg:x="1118" fg:w="3"/><text x="90.7031%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.6149%" y="405" width="0.0809%" height="15" fill="rgb(251,106,46)" fg:x="1120" fg:w="1"/><text x="90.8649%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6149%" y="389" width="0.0809%" height="15" fill="rgb(218,211,15)" fg:x="1120" fg:w="1"/><text x="90.8649%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.6149%" y="373" width="0.0809%" height="15" fill="rgb(239,62,10)" fg:x="1120" fg:w="1"/><text x="90.8649%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6149%" y="357" width="0.0809%" height="15" fill="rgb(225,53,53)" fg:x="1120" fg:w="1"/><text x="90.8649%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (3 samples, 0.24%)</title><rect x="90.6958%" y="485" width="0.2427%" height="15" fill="rgb(207,16,24)" fg:x="1121" fg:w="3"/><text x="90.9458%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (3 samples, 0.24%)</title><rect x="90.6958%" y="469" width="0.2427%" height="15" fill="rgb(217,52,28)" fg:x="1121" fg:w="3"/><text x="90.9458%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="90.7767%" y="453" width="0.1618%" height="15" fill="rgb(246,1,5)" fg:x="1122" fg:w="2"/><text x="91.0267%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.9385%" y="229" width="0.0809%" height="15" fill="rgb(221,29,26)" fg:x="1124" fg:w="1"/><text x="91.1885%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.9385%" y="453" width="0.1618%" height="15" fill="rgb(250,133,32)" fg:x="1124" fg:w="2"/><text x="91.1885%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="90.9385%" y="437" width="0.1618%" height="15" fill="rgb(236,63,16)" fg:x="1124" fg:w="2"/><text x="91.1885%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.9385%" y="421" width="0.1618%" height="15" fill="rgb(231,159,14)" fg:x="1124" fg:w="2"/><text x="91.1885%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="90.9385%" y="405" width="0.1618%" height="15" fill="rgb(207,102,36)" fg:x="1124" fg:w="2"/><text x="91.1885%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="90.9385%" y="389" width="0.1618%" height="15" fill="rgb(230,224,31)" fg:x="1124" fg:w="2"/><text x="91.1885%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="90.9385%" y="373" width="0.1618%" height="15" fill="rgb(215,182,16)" fg:x="1124" fg:w="2"/><text x="91.1885%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="90.9385%" y="357" width="0.1618%" height="15" fill="rgb(226,113,2)" fg:x="1124" fg:w="2"/><text x="91.1885%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="90.9385%" y="341" width="0.1618%" height="15" fill="rgb(241,18,35)" fg:x="1124" fg:w="2"/><text x="91.1885%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="90.9385%" y="325" width="0.1618%" height="15" fill="rgb(240,165,44)" fg:x="1124" fg:w="2"/><text x="91.1885%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="90.9385%" y="309" width="0.1618%" height="15" fill="rgb(229,130,47)" fg:x="1124" fg:w="2"/><text x="91.1885%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="90.9385%" y="293" width="0.1618%" height="15" fill="rgb(223,93,7)" fg:x="1124" fg:w="2"/><text x="91.1885%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="90.9385%" y="277" width="0.1618%" height="15" fill="rgb(205,180,36)" fg:x="1124" fg:w="2"/><text x="91.1885%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="90.9385%" y="261" width="0.1618%" height="15" fill="rgb(221,103,28)" fg:x="1124" fg:w="2"/><text x="91.1885%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="90.9385%" y="245" width="0.1618%" height="15" fill="rgb(212,4,3)" fg:x="1124" fg:w="2"/><text x="91.1885%" y="255.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="91.0194%" y="229" width="0.0809%" height="15" fill="rgb(209,221,53)" fg:x="1125" fg:w="1"/><text x="91.2694%" y="239.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="91.0194%" y="213" width="0.0809%" height="15" fill="rgb(233,229,52)" fg:x="1125" fg:w="1"/><text x="91.2694%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.1812%" y="373" width="0.0809%" height="15" fill="rgb(254,127,37)" fg:x="1127" fg:w="1"/><text x="91.4312%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="91.2621%" y="373" width="0.0809%" height="15" fill="rgb(207,161,26)" fg:x="1128" fg:w="1"/><text x="91.5121%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.2621%" y="357" width="0.0809%" height="15" fill="rgb(223,75,5)" fg:x="1128" fg:w="1"/><text x="91.5121%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.2621%" y="341" width="0.0809%" height="15" fill="rgb(235,115,52)" fg:x="1128" fg:w="1"/><text x="91.5121%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.2621%" y="325" width="0.0809%" height="15" fill="rgb(240,91,46)" fg:x="1128" fg:w="1"/><text x="91.5121%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.2621%" y="309" width="0.0809%" height="15" fill="rgb(251,144,21)" fg:x="1128" fg:w="1"/><text x="91.5121%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.2621%" y="293" width="0.0809%" height="15" fill="rgb(247,220,47)" fg:x="1128" fg:w="1"/><text x="91.5121%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="91.2621%" y="277" width="0.0809%" height="15" fill="rgb(253,122,1)" fg:x="1128" fg:w="1"/><text x="91.5121%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="91.2621%" y="261" width="0.0809%" height="15" fill="rgb(221,0,24)" fg:x="1128" fg:w="1"/><text x="91.5121%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.32%)</title><rect x="91.1003%" y="453" width="0.3236%" height="15" fill="rgb(220,204,54)" fg:x="1126" fg:w="4"/><text x="91.3503%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="91.1003%" y="437" width="0.3236%" height="15" fill="rgb(205,96,25)" fg:x="1126" fg:w="4"/><text x="91.3503%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="91.1003%" y="421" width="0.3236%" height="15" fill="rgb(247,77,20)" fg:x="1126" fg:w="4"/><text x="91.3503%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="91.1812%" y="405" width="0.2427%" height="15" fill="rgb(245,151,8)" fg:x="1127" fg:w="3"/><text x="91.4312%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="91.1812%" y="389" width="0.2427%" height="15" fill="rgb(242,158,39)" fg:x="1127" fg:w="3"/><text x="91.4312%" y="399.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="91.3430%" y="373" width="0.0809%" height="15" fill="rgb(222,214,50)" fg:x="1129" fg:w="1"/><text x="91.5930%" y="383.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="91.3430%" y="357" width="0.0809%" height="15" fill="rgb(229,60,39)" fg:x="1129" fg:w="1"/><text x="91.5930%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.3430%" y="341" width="0.0809%" height="15" fill="rgb(240,148,18)" fg:x="1129" fg:w="1"/><text x="91.5930%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.4239%" y="453" width="0.0809%" height="15" fill="rgb(215,96,11)" fg:x="1130" fg:w="1"/><text x="91.6739%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="91.4239%" y="437" width="0.0809%" height="15" fill="rgb(238,162,53)" fg:x="1130" fg:w="1"/><text x="91.6739%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5049%" y="421" width="0.0809%" height="15" fill="rgb(214,83,18)" fg:x="1131" fg:w="1"/><text x="91.7549%" y="431.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (18 samples, 1.46%)</title><rect x="90.2104%" y="501" width="1.4563%" height="15" fill="rgb(248,117,24)" fg:x="1115" fg:w="18"/><text x="90.4604%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.73%)</title><rect x="90.9385%" y="485" width="0.7282%" height="15" fill="rgb(238,190,6)" fg:x="1124" fg:w="9"/><text x="91.1885%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (9 samples, 0.73%)</title><rect x="90.9385%" y="469" width="0.7282%" height="15" fill="rgb(213,51,6)" fg:x="1124" fg:w="9"/><text x="91.1885%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.5049%" y="453" width="0.1618%" height="15" fill="rgb(212,136,1)" fg:x="1131" fg:w="2"/><text x="91.7549%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.5049%" y="437" width="0.1618%" height="15" fill="rgb(221,192,14)" fg:x="1131" fg:w="2"/><text x="91.7549%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="91.5858%" y="421" width="0.0809%" height="15" fill="rgb(244,38,54)" fg:x="1132" fg:w="1"/><text x="91.8358%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="91.5858%" y="405" width="0.0809%" height="15" fill="rgb(240,45,28)" fg:x="1132" fg:w="1"/><text x="91.8358%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="91.5858%" y="389" width="0.0809%" height="15" fill="rgb(240,123,12)" fg:x="1132" fg:w="1"/><text x="91.8358%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.5858%" y="373" width="0.0809%" height="15" fill="rgb(216,14,30)" fg:x="1132" fg:w="1"/><text x="91.8358%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.5858%" y="357" width="0.0809%" height="15" fill="rgb(212,50,24)" fg:x="1132" fg:w="1"/><text x="91.8358%" y="367.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="91.5858%" y="341" width="0.0809%" height="15" fill="rgb(253,229,47)" fg:x="1132" fg:w="1"/><text x="91.8358%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="91.6667%" y="485" width="0.0809%" height="15" fill="rgb(214,26,17)" fg:x="1133" fg:w="1"/><text x="91.9167%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.8285%" y="437" width="0.0809%" height="15" fill="rgb(252,60,11)" fg:x="1135" fg:w="1"/><text x="92.0785%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.8285%" y="421" width="0.0809%" height="15" fill="rgb(209,59,37)" fg:x="1135" fg:w="1"/><text x="92.0785%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.8285%" y="405" width="0.0809%" height="15" fill="rgb(228,126,53)" fg:x="1135" fg:w="1"/><text x="92.0785%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.8285%" y="389" width="0.0809%" height="15" fill="rgb(233,99,2)" fg:x="1135" fg:w="1"/><text x="92.0785%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.8285%" y="373" width="0.0809%" height="15" fill="rgb(217,106,34)" fg:x="1135" fg:w="1"/><text x="92.0785%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.8285%" y="357" width="0.0809%" height="15" fill="rgb(222,46,19)" fg:x="1135" fg:w="1"/><text x="92.0785%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.8285%" y="341" width="0.0809%" height="15" fill="rgb(251,87,31)" fg:x="1135" fg:w="1"/><text x="92.0785%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.8285%" y="325" width="0.0809%" height="15" fill="rgb(213,70,51)" fg:x="1135" fg:w="1"/><text x="92.0785%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.8285%" y="309" width="0.0809%" height="15" fill="rgb(229,144,18)" fg:x="1135" fg:w="1"/><text x="92.0785%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.8285%" y="293" width="0.0809%" height="15" fill="rgb(254,60,26)" fg:x="1135" fg:w="1"/><text x="92.0785%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.8285%" y="277" width="0.0809%" height="15" fill="rgb(243,127,51)" fg:x="1135" fg:w="1"/><text x="92.0785%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.8285%" y="261" width="0.0809%" height="15" fill="rgb(221,51,25)" fg:x="1135" fg:w="1"/><text x="92.0785%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.9903%" y="325" width="0.0809%" height="15" fill="rgb(205,42,7)" fg:x="1137" fg:w="1"/><text x="92.2403%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.9903%" y="309" width="0.0809%" height="15" fill="rgb(236,177,48)" fg:x="1137" fg:w="1"/><text x="92.2403%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.9903%" y="293" width="0.0809%" height="15" fill="rgb(226,79,31)" fg:x="1137" fg:w="1"/><text x="92.2403%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.9903%" y="277" width="0.0809%" height="15" fill="rgb(216,170,12)" fg:x="1137" fg:w="1"/><text x="92.2403%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.9903%" y="261" width="0.0809%" height="15" fill="rgb(208,62,51)" fg:x="1137" fg:w="1"/><text x="92.2403%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.9903%" y="245" width="0.0809%" height="15" fill="rgb(254,129,9)" fg:x="1137" fg:w="1"/><text x="92.2403%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9903%" y="229" width="0.0809%" height="15" fill="rgb(243,209,31)" fg:x="1137" fg:w="1"/><text x="92.2403%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="91.8285%" y="453" width="0.3236%" height="15" fill="rgb(213,159,23)" fg:x="1135" fg:w="4"/><text x="92.0785%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="91.9094%" y="437" width="0.2427%" height="15" fill="rgb(249,77,39)" fg:x="1136" fg:w="3"/><text x="92.1594%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="91.9094%" y="421" width="0.2427%" height="15" fill="rgb(230,13,33)" fg:x="1136" fg:w="3"/><text x="92.1594%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.9903%" y="405" width="0.1618%" height="15" fill="rgb(215,215,7)" fg:x="1137" fg:w="2"/><text x="92.2403%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.9903%" y="389" width="0.1618%" height="15" fill="rgb(222,92,25)" fg:x="1137" fg:w="2"/><text x="92.2403%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="91.9903%" y="373" width="0.1618%" height="15" fill="rgb(215,173,22)" fg:x="1137" fg:w="2"/><text x="92.2403%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="91.9903%" y="357" width="0.1618%" height="15" fill="rgb(247,205,52)" fg:x="1137" fg:w="2"/><text x="92.2403%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="91.9903%" y="341" width="0.1618%" height="15" fill="rgb(240,210,37)" fg:x="1137" fg:w="2"/><text x="92.2403%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="92.0712%" y="325" width="0.0809%" height="15" fill="rgb(224,13,10)" fg:x="1138" fg:w="1"/><text x="92.3212%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.0712%" y="309" width="0.0809%" height="15" fill="rgb(209,48,33)" fg:x="1138" fg:w="1"/><text x="92.3212%" y="319.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="92.1521%" y="357" width="0.0809%" height="15" fill="rgb(228,219,23)" fg:x="1139" fg:w="1"/><text x="92.4021%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1521%" y="341" width="0.0809%" height="15" fill="rgb(239,46,49)" fg:x="1139" fg:w="1"/><text x="92.4021%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1521%" y="325" width="0.0809%" height="15" fill="rgb(206,172,51)" fg:x="1139" fg:w="1"/><text x="92.4021%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="92.1521%" y="309" width="0.0809%" height="15" fill="rgb(213,212,35)" fg:x="1139" fg:w="1"/><text x="92.4021%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="92.2330%" y="293" width="0.2427%" height="15" fill="rgb(252,40,27)" fg:x="1140" fg:w="3"/><text x="92.4830%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3948%" y="277" width="0.0809%" height="15" fill="rgb(212,33,41)" fg:x="1142" fg:w="1"/><text x="92.6448%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="92.3948%" y="261" width="0.0809%" height="15" fill="rgb(232,160,27)" fg:x="1142" fg:w="1"/><text x="92.6448%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.4757%" y="261" width="0.0809%" height="15" fill="rgb(244,160,20)" fg:x="1143" fg:w="1"/><text x="92.7257%" y="271.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.4757%" y="245" width="0.0809%" height="15" fill="rgb(205,66,20)" fg:x="1143" fg:w="1"/><text x="92.7257%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.6375%" y="229" width="0.0809%" height="15" fill="rgb(236,158,6)" fg:x="1145" fg:w="1"/><text x="92.8875%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.6375%" y="213" width="0.0809%" height="15" fill="rgb(232,25,36)" fg:x="1145" fg:w="1"/><text x="92.8875%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="92.7994%" y="197" width="0.1618%" height="15" fill="rgb(220,153,35)" fg:x="1147" fg:w="2"/><text x="93.0494%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="92.7994%" y="181" width="0.1618%" height="15" fill="rgb(216,5,8)" fg:x="1147" fg:w="2"/><text x="93.0494%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="92.7184%" y="213" width="0.3236%" height="15" fill="rgb(240,97,3)" fg:x="1146" fg:w="4"/><text x="92.9684%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.9612%" y="197" width="0.0809%" height="15" fill="rgb(220,99,26)" fg:x="1149" fg:w="1"/><text x="93.2112%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.9612%" y="181" width="0.0809%" height="15" fill="rgb(237,96,2)" fg:x="1149" fg:w="1"/><text x="93.2112%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.9612%" y="165" width="0.0809%" height="15" fill="rgb(217,197,47)" fg:x="1149" fg:w="1"/><text x="93.2112%" y="175.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (12 samples, 0.97%)</title><rect x="92.1521%" y="453" width="0.9709%" height="15" fill="rgb(252,133,54)" fg:x="1139" fg:w="12"/><text x="92.4021%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.97%)</title><rect x="92.1521%" y="437" width="0.9709%" height="15" fill="rgb(233,37,30)" fg:x="1139" fg:w="12"/><text x="92.4021%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.97%)</title><rect x="92.1521%" y="421" width="0.9709%" height="15" fill="rgb(239,182,12)" fg:x="1139" fg:w="12"/><text x="92.4021%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.97%)</title><rect x="92.1521%" y="405" width="0.9709%" height="15" fill="rgb(245,83,39)" fg:x="1139" fg:w="12"/><text x="92.4021%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (12 samples, 0.97%)</title><rect x="92.1521%" y="389" width="0.9709%" height="15" fill="rgb(222,109,36)" fg:x="1139" fg:w="12"/><text x="92.4021%" y="399.50"></text></g><g><title>engine::internal::Entities::prepare_entity (12 samples, 0.97%)</title><rect x="92.1521%" y="373" width="0.9709%" height="15" fill="rgb(237,95,44)" fg:x="1139" fg:w="12"/><text x="92.4021%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity (11 samples, 0.89%)</title><rect x="92.2330%" y="357" width="0.8900%" height="15" fill="rgb(216,36,54)" fg:x="1140" fg:w="11"/><text x="92.4830%" y="367.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.89%)</title><rect x="92.2330%" y="341" width="0.8900%" height="15" fill="rgb(236,164,3)" fg:x="1140" fg:w="11"/><text x="92.4830%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.89%)</title><rect x="92.2330%" y="325" width="0.8900%" height="15" fill="rgb(223,15,21)" fg:x="1140" fg:w="11"/><text x="92.4830%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.89%)</title><rect x="92.2330%" y="309" width="0.8900%" height="15" fill="rgb(239,191,12)" fg:x="1140" fg:w="11"/><text x="92.4830%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.65%)</title><rect x="92.4757%" y="293" width="0.6472%" height="15" fill="rgb(231,191,37)" fg:x="1143" fg:w="8"/><text x="92.7257%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.65%)</title><rect x="92.4757%" y="277" width="0.6472%" height="15" fill="rgb(209,155,36)" fg:x="1143" fg:w="8"/><text x="92.7257%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.57%)</title><rect x="92.5566%" y="261" width="0.5663%" height="15" fill="rgb(216,222,49)" fg:x="1144" fg:w="7"/><text x="92.8066%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.57%)</title><rect x="92.5566%" y="245" width="0.5663%" height="15" fill="rgb(218,181,2)" fg:x="1144" fg:w="7"/><text x="92.8066%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="92.7184%" y="229" width="0.4045%" height="15" fill="rgb(239,125,9)" fg:x="1146" fg:w="5"/><text x="92.9684%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.0421%" y="213" width="0.0809%" height="15" fill="rgb(233,103,7)" fg:x="1150" fg:w="1"/><text x="93.2921%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.0421%" y="197" width="0.0809%" height="15" fill="rgb(209,223,5)" fg:x="1150" fg:w="1"/><text x="93.2921%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.1230%" y="421" width="0.0809%" height="15" fill="rgb(234,71,27)" fg:x="1151" fg:w="1"/><text x="93.3730%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1230%" y="405" width="0.0809%" height="15" fill="rgb(251,202,16)" fg:x="1151" fg:w="1"/><text x="93.3730%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.2039%" y="341" width="0.0809%" height="15" fill="rgb(231,180,0)" fg:x="1152" fg:w="1"/><text x="93.4539%" y="351.50"></text></g><g><title>plugins_core::tools::get_contained_keys (21 samples, 1.70%)</title><rect x="91.6667%" y="501" width="1.6990%" height="15" fill="rgb(223,58,28)" fg:x="1133" fg:w="21"/><text x="91.9167%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (20 samples, 1.62%)</title><rect x="91.7476%" y="485" width="1.6181%" height="15" fill="rgb(250,34,24)" fg:x="1134" fg:w="20"/><text x="91.9976%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (19 samples, 1.54%)</title><rect x="91.8285%" y="469" width="1.5372%" height="15" fill="rgb(235,24,16)" fg:x="1135" fg:w="19"/><text x="92.0785%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.1230%" y="453" width="0.2427%" height="15" fill="rgb(219,28,33)" fg:x="1151" fg:w="3"/><text x="93.3730%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.1230%" y="437" width="0.2427%" height="15" fill="rgb(228,150,43)" fg:x="1151" fg:w="3"/><text x="93.3730%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="93.2039%" y="421" width="0.1618%" height="15" fill="rgb(221,228,36)" fg:x="1152" fg:w="2"/><text x="93.4539%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="93.2039%" y="405" width="0.1618%" height="15" fill="rgb(232,116,17)" fg:x="1152" fg:w="2"/><text x="93.4539%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="93.2039%" y="389" width="0.1618%" height="15" fill="rgb(220,110,51)" fg:x="1152" fg:w="2"/><text x="93.4539%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.2039%" y="373" width="0.1618%" height="15" fill="rgb(207,26,25)" fg:x="1152" fg:w="2"/><text x="93.4539%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.2039%" y="357" width="0.1618%" height="15" fill="rgb(223,58,19)" fg:x="1152" fg:w="2"/><text x="93.4539%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.2848%" y="341" width="0.0809%" height="15" fill="rgb(234,125,39)" fg:x="1153" fg:w="1"/><text x="93.5348%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 3.24%)</title><rect x="90.2104%" y="517" width="3.2362%" height="15" fill="rgb(241,48,36)" fg:x="1115" fg:w="40"/><text x="90.4604%" y="527.50">&lt;co..</text></g><g><title>plugins_core::tools::get_occupant_keys (1 samples, 0.08%)</title><rect x="93.3657%" y="501" width="0.0809%" height="15" fill="rgb(217,148,51)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="93.3657%" y="485" width="0.0809%" height="15" fill="rgb(247,17,25)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="93.3657%" y="469" width="0.0809%" height="15" fill="rgb(219,89,38)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.3657%" y="453" width="0.0809%" height="15" fill="rgb(220,145,2)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3657%" y="437" width="0.0809%" height="15" fill="rgb(244,66,47)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.3657%" y="421" width="0.0809%" height="15" fill="rgb(226,182,5)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3657%" y="405" width="0.0809%" height="15" fill="rgb(211,98,20)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3657%" y="389" width="0.0809%" height="15" fill="rgb(217,103,52)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.3657%" y="373" width="0.0809%" height="15" fill="rgb(208,125,52)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.3657%" y="357" width="0.0809%" height="15" fill="rgb(244,70,13)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.3657%" y="341" width="0.0809%" height="15" fill="rgb(253,124,3)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.3657%" y="325" width="0.0809%" height="15" fill="rgb(222,145,32)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.3657%" y="309" width="0.0809%" height="15" fill="rgb(232,183,47)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.3657%" y="293" width="0.0809%" height="15" fill="rgb(246,226,4)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.3657%" y="277" width="0.0809%" height="15" fill="rgb(228,185,46)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.3657%" y="261" width="0.0809%" height="15" fill="rgb(213,196,4)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.3657%" y="245" width="0.0809%" height="15" fill="rgb(212,2,45)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.3657%" y="229" width="0.0809%" height="15" fill="rgb(217,145,50)" fg:x="1154" fg:w="1"/><text x="93.6157%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 3.40%)</title><rect x="90.1294%" y="533" width="3.3981%" height="15" fill="rgb(242,10,46)" fg:x="1114" fg:w="42"/><text x="90.3794%" y="543.50">&lt;al..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.4466%" y="517" width="0.0809%" height="15" fill="rgb(252,91,48)" fg:x="1155" fg:w="1"/><text x="93.6966%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.6893%" y="501" width="0.0809%" height="15" fill="rgb(216,72,13)" fg:x="1158" fg:w="1"/><text x="93.9393%" y="511.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="93.9320%" y="469" width="0.0809%" height="15" fill="rgb(219,6,37)" fg:x="1161" fg:w="1"/><text x="94.1820%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="93.9320%" y="453" width="0.0809%" height="15" fill="rgb(236,185,40)" fg:x="1161" fg:w="1"/><text x="94.1820%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="94.0129%" y="325" width="0.0809%" height="15" fill="rgb(208,81,48)" fg:x="1162" fg:w="1"/><text x="94.2629%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="94.0129%" y="309" width="0.0809%" height="15" fill="rgb(211,42,33)" fg:x="1162" fg:w="1"/><text x="94.2629%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="94.0129%" y="293" width="0.0809%" height="15" fill="rgb(211,90,39)" fg:x="1162" fg:w="1"/><text x="94.2629%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="94.0129%" y="277" width="0.0809%" height="15" fill="rgb(218,136,12)" fg:x="1162" fg:w="1"/><text x="94.2629%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="94.0129%" y="261" width="0.0809%" height="15" fill="rgb(234,12,32)" fg:x="1162" fg:w="1"/><text x="94.2629%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="94.0129%" y="245" width="0.0809%" height="15" fill="rgb(221,164,18)" fg:x="1162" fg:w="1"/><text x="94.2629%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="94.0129%" y="229" width="0.0809%" height="15" fill="rgb(239,135,14)" fg:x="1162" fg:w="1"/><text x="94.2629%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="94.0129%" y="213" width="0.0809%" height="15" fill="rgb(226,198,47)" fg:x="1162" fg:w="1"/><text x="94.2629%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="94.0129%" y="197" width="0.0809%" height="15" fill="rgb(244,121,47)" fg:x="1162" fg:w="1"/><text x="94.2629%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="94.0129%" y="181" width="0.0809%" height="15" fill="rgb(226,21,48)" fg:x="1162" fg:w="1"/><text x="94.2629%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="94.0129%" y="165" width="0.0809%" height="15" fill="rgb(215,178,47)" fg:x="1162" fg:w="1"/><text x="94.2629%" y="175.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="93.9320%" y="485" width="0.2427%" height="15" fill="rgb(206,212,19)" fg:x="1161" fg:w="3"/><text x="94.1820%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="94.0129%" y="469" width="0.1618%" height="15" fill="rgb(230,104,34)" fg:x="1162" fg:w="2"/><text x="94.2629%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="94.0129%" y="453" width="0.1618%" height="15" fill="rgb(210,96,51)" fg:x="1162" fg:w="2"/><text x="94.2629%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="94.0129%" y="437" width="0.1618%" height="15" fill="rgb(229,111,47)" fg:x="1162" fg:w="2"/><text x="94.2629%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="94.0129%" y="421" width="0.1618%" height="15" fill="rgb(218,174,45)" fg:x="1162" fg:w="2"/><text x="94.2629%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="94.0129%" y="405" width="0.1618%" height="15" fill="rgb(215,21,32)" fg:x="1162" fg:w="2"/><text x="94.2629%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="94.0129%" y="389" width="0.1618%" height="15" fill="rgb(235,72,21)" fg:x="1162" fg:w="2"/><text x="94.2629%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="94.0129%" y="373" width="0.1618%" height="15" fill="rgb(250,113,30)" fg:x="1162" fg:w="2"/><text x="94.2629%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="94.0129%" y="357" width="0.1618%" height="15" fill="rgb(244,136,34)" fg:x="1162" fg:w="2"/><text x="94.2629%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="94.0129%" y="341" width="0.1618%" height="15" fill="rgb(213,226,47)" fg:x="1162" fg:w="2"/><text x="94.2629%" y="351.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="94.0939%" y="325" width="0.0809%" height="15" fill="rgb(224,136,40)" fg:x="1163" fg:w="1"/><text x="94.3439%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.3074%" y="229" width="0.0809%" height="15" fill="rgb(253,124,12)" fg:x="1178" fg:w="1"/><text x="95.5574%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="95.2265%" y="245" width="0.2427%" height="15" fill="rgb(210,67,8)" fg:x="1177" fg:w="3"/><text x="95.4765%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3883%" y="229" width="0.0809%" height="15" fill="rgb(210,204,0)" fg:x="1179" fg:w="1"/><text x="95.6383%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.3883%" y="213" width="0.0809%" height="15" fill="rgb(217,179,22)" fg:x="1179" fg:w="1"/><text x="95.6383%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.40%)</title><rect x="95.1456%" y="277" width="0.4045%" height="15" fill="rgb(237,192,33)" fg:x="1176" fg:w="5"/><text x="95.3956%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="95.2265%" y="261" width="0.3236%" height="15" fill="rgb(211,104,28)" fg:x="1177" fg:w="4"/><text x="95.4765%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="95.4693%" y="245" width="0.0809%" height="15" fill="rgb(214,75,30)" fg:x="1180" fg:w="1"/><text x="95.7193%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4693%" y="229" width="0.0809%" height="15" fill="rgb(220,227,12)" fg:x="1180" fg:w="1"/><text x="95.7193%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.5502%" y="277" width="0.0809%" height="15" fill="rgb(233,134,28)" fg:x="1181" fg:w="1"/><text x="95.8002%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.5502%" y="261" width="0.0809%" height="15" fill="rgb(215,146,24)" fg:x="1181" fg:w="1"/><text x="95.8002%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (11 samples, 0.89%)</title><rect x="94.9838%" y="309" width="0.8900%" height="15" fill="rgb(248,227,20)" fg:x="1174" fg:w="11"/><text x="95.2338%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.89%)</title><rect x="94.9838%" y="293" width="0.8900%" height="15" fill="rgb(250,44,42)" fg:x="1174" fg:w="11"/><text x="95.2338%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="95.6311%" y="277" width="0.2427%" height="15" fill="rgb(219,5,35)" fg:x="1182" fg:w="3"/><text x="95.8811%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.7929%" y="261" width="0.0809%" height="15" fill="rgb(241,132,32)" fg:x="1184" fg:w="1"/><text x="96.0429%" y="271.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.97%)</title><rect x="94.9838%" y="325" width="0.9709%" height="15" fill="rgb(234,212,51)" fg:x="1174" fg:w="12"/><text x="95.2338%" y="335.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.8738%" y="309" width="0.0809%" height="15" fill="rgb(242,173,29)" fg:x="1185" fg:w="1"/><text x="96.1238%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.8738%" y="293" width="0.0809%" height="15" fill="rgb(212,159,2)" fg:x="1185" fg:w="1"/><text x="96.1238%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.8738%" y="277" width="0.0809%" height="15" fill="rgb(238,165,31)" fg:x="1185" fg:w="1"/><text x="96.1238%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.8738%" y="261" width="0.0809%" height="15" fill="rgb(241,57,36)" fg:x="1185" fg:w="1"/><text x="96.1238%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.8738%" y="245" width="0.0809%" height="15" fill="rgb(249,7,4)" fg:x="1185" fg:w="1"/><text x="96.1238%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8738%" y="229" width="0.0809%" height="15" fill="rgb(250,137,44)" fg:x="1185" fg:w="1"/><text x="96.1238%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="95.9547%" y="325" width="0.1618%" height="15" fill="rgb(244,185,1)" fg:x="1186" fg:w="2"/><text x="96.2047%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="95.9547%" y="309" width="0.1618%" height="15" fill="rgb(216,5,53)" fg:x="1186" fg:w="2"/><text x="96.2047%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 1.29%)</title><rect x="94.9838%" y="341" width="1.2945%" height="15" fill="rgb(234,89,21)" fg:x="1174" fg:w="16"/><text x="95.2338%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.1165%" y="325" width="0.1618%" height="15" fill="rgb(250,81,43)" fg:x="1188" fg:w="2"/><text x="96.3665%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.1974%" y="309" width="0.0809%" height="15" fill="rgb(243,132,11)" fg:x="1189" fg:w="1"/><text x="96.4474%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.1974%" y="293" width="0.0809%" height="15" fill="rgb(253,159,28)" fg:x="1189" fg:w="1"/><text x="96.4474%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (18 samples, 1.46%)</title><rect x="94.9838%" y="373" width="1.4563%" height="15" fill="rgb(237,167,34)" fg:x="1174" fg:w="18"/><text x="95.2338%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (18 samples, 1.46%)</title><rect x="94.9838%" y="357" width="1.4563%" height="15" fill="rgb(237,16,50)" fg:x="1174" fg:w="18"/><text x="95.2338%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="96.2783%" y="341" width="0.1618%" height="15" fill="rgb(247,125,2)" fg:x="1190" fg:w="2"/><text x="96.5283%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="96.2783%" y="325" width="0.1618%" height="15" fill="rgb(254,35,3)" fg:x="1190" fg:w="2"/><text x="96.5283%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.4401%" y="373" width="0.0809%" height="15" fill="rgb(237,209,21)" fg:x="1192" fg:w="1"/><text x="96.6901%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 1.94%)</title><rect x="94.6602%" y="389" width="1.9417%" height="15" fill="rgb(224,122,20)" fg:x="1170" fg:w="24"/><text x="94.9102%" y="399.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5210%" y="373" width="0.0809%" height="15" fill="rgb(224,11,46)" fg:x="1193" fg:w="1"/><text x="96.7710%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.5210%" y="357" width="0.0809%" height="15" fill="rgb(248,21,33)" fg:x="1193" fg:w="1"/><text x="96.7710%" y="367.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (28 samples, 2.27%)</title><rect x="94.4984%" y="421" width="2.2654%" height="15" fill="rgb(222,144,7)" fg:x="1168" fg:w="28"/><text x="94.7484%" y="431.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (26 samples, 2.10%)</title><rect x="94.6602%" y="405" width="2.1036%" height="15" fill="rgb(205,141,37)" fg:x="1170" fg:w="26"/><text x="94.9102%" y="415.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="96.6019%" y="389" width="0.1618%" height="15" fill="rgb(237,130,8)" fg:x="1194" fg:w="2"/><text x="96.8519%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6828%" y="373" width="0.0809%" height="15" fill="rgb(209,179,39)" fg:x="1195" fg:w="1"/><text x="96.9328%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.7638%" y="421" width="0.0809%" height="15" fill="rgb(207,52,17)" fg:x="1196" fg:w="1"/><text x="97.0138%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.32%)</title><rect x="96.8447%" y="405" width="0.3236%" height="15" fill="rgb(253,158,17)" fg:x="1197" fg:w="4"/><text x="97.0947%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.0874%" y="389" width="0.0809%" height="15" fill="rgb(208,19,53)" fg:x="1200" fg:w="1"/><text x="97.3374%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36 samples, 2.91%)</title><rect x="94.3366%" y="437" width="2.9126%" height="15" fill="rgb(233,152,13)" fg:x="1166" fg:w="36"/><text x="94.5866%" y="447.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="96.8447%" y="421" width="0.4045%" height="15" fill="rgb(231,84,1)" fg:x="1197" fg:w="5"/><text x="97.0947%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.1683%" y="405" width="0.0809%" height="15" fill="rgb(229,142,48)" fg:x="1201" fg:w="1"/><text x="97.4183%" y="415.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (42 samples, 3.40%)</title><rect x="94.1748%" y="469" width="3.3981%" height="15" fill="rgb(248,70,29)" fg:x="1164" fg:w="42"/><text x="94.4248%" y="479.50">&lt;rp..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (42 samples, 3.40%)</title><rect x="94.1748%" y="453" width="3.3981%" height="15" fill="rgb(250,85,7)" fg:x="1164" fg:w="42"/><text x="94.4248%" y="463.50">&lt;st..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="97.2492%" y="437" width="0.3236%" height="15" fill="rgb(235,140,43)" fg:x="1202" fg:w="4"/><text x="97.4992%" y="447.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="97.2492%" y="421" width="0.3236%" height="15" fill="rgb(216,0,5)" fg:x="1202" fg:w="4"/><text x="97.4992%" y="431.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="97.6537%" y="421" width="0.3236%" height="15" fill="rgb(223,167,29)" fg:x="1207" fg:w="4"/><text x="97.9037%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="97.9773%" y="421" width="0.2427%" height="15" fill="rgb(229,150,33)" fg:x="1211" fg:w="3"/><text x="98.2273%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="98.2201%" y="421" width="0.0809%" height="15" fill="rgb(227,26,52)" fg:x="1214" fg:w="1"/><text x="98.4701%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.2201%" y="405" width="0.0809%" height="15" fill="rgb(250,60,52)" fg:x="1214" fg:w="1"/><text x="98.4701%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.2201%" y="389" width="0.0809%" height="15" fill="rgb(228,81,46)" fg:x="1214" fg:w="1"/><text x="98.4701%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3010%" y="373" width="0.0809%" height="15" fill="rgb(225,218,31)" fg:x="1215" fg:w="1"/><text x="98.5510%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.3819%" y="373" width="0.0809%" height="15" fill="rgb(230,35,16)" fg:x="1216" fg:w="1"/><text x="98.6319%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4628%" y="341" width="0.0809%" height="15" fill="rgb(247,100,0)" fg:x="1217" fg:w="1"/><text x="98.7128%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="98.4628%" y="357" width="0.2427%" height="15" fill="rgb(223,135,11)" fg:x="1217" fg:w="3"/><text x="98.7128%" y="367.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="98.5437%" y="341" width="0.1618%" height="15" fill="rgb(207,136,0)" fg:x="1218" fg:w="2"/><text x="98.7937%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7864%" y="341" width="0.0809%" height="15" fill="rgb(246,131,25)" fg:x="1221" fg:w="1"/><text x="99.0364%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7864%" y="325" width="0.0809%" height="15" fill="rgb(209,47,12)" fg:x="1221" fg:w="1"/><text x="99.0364%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.65%)</title><rect x="98.3010%" y="405" width="0.6472%" height="15" fill="rgb(221,25,16)" fg:x="1215" fg:w="8"/><text x="98.5510%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.65%)</title><rect x="98.3010%" y="389" width="0.6472%" height="15" fill="rgb(223,164,33)" fg:x="1215" fg:w="8"/><text x="98.5510%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (6 samples, 0.49%)</title><rect x="98.4628%" y="373" width="0.4854%" height="15" fill="rgb(220,26,23)" fg:x="1217" fg:w="6"/><text x="98.7128%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="98.7055%" y="357" width="0.2427%" height="15" fill="rgb(231,224,1)" fg:x="1220" fg:w="3"/><text x="98.9555%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="98.8673%" y="341" width="0.0809%" height="15" fill="rgb(229,221,24)" fg:x="1222" fg:w="1"/><text x="99.1173%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.8673%" y="325" width="0.0809%" height="15" fill="rgb(213,34,10)" fg:x="1222" fg:w="1"/><text x="99.1173%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (9 samples, 0.73%)</title><rect x="98.3010%" y="421" width="0.7282%" height="15" fill="rgb(215,33,11)" fg:x="1215" fg:w="9"/><text x="98.5510%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="98.9482%" y="405" width="0.0809%" height="15" fill="rgb(216,20,41)" fg:x="1223" fg:w="1"/><text x="99.1982%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (2 samples, 0.16%)</title><rect x="99.0291%" y="421" width="0.1618%" height="15" fill="rgb(228,43,31)" fg:x="1224" fg:w="2"/><text x="99.2791%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="99.0291%" y="405" width="0.1618%" height="15" fill="rgb(227,83,26)" fg:x="1224" fg:w="2"/><text x="99.2791%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1100%" y="389" width="0.0809%" height="15" fill="rgb(217,168,19)" fg:x="1225" fg:w="1"/><text x="99.3600%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1100%" y="373" width="0.0809%" height="15" fill="rgb(231,34,33)" fg:x="1225" fg:w="1"/><text x="99.3600%" y="383.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="99.1100%" y="357" width="0.0809%" height="15" fill="rgb(230,120,51)" fg:x="1225" fg:w="1"/><text x="99.3600%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1909%" y="405" width="0.0809%" height="15" fill="rgb(215,138,27)" fg:x="1226" fg:w="1"/><text x="99.4409%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="99.4337%" y="341" width="0.0809%" height="15" fill="rgb(246,80,47)" fg:x="1229" fg:w="1"/><text x="99.6837%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="99.3528%" y="373" width="0.3236%" height="15" fill="rgb(215,57,53)" fg:x="1228" fg:w="4"/><text x="99.6028%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="99.3528%" y="357" width="0.3236%" height="15" fill="rgb(229,137,5)" fg:x="1228" fg:w="4"/><text x="99.6028%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="99.5146%" y="341" width="0.1618%" height="15" fill="rgb(210,86,2)" fg:x="1230" fg:w="2"/><text x="99.7646%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="99.5146%" y="325" width="0.1618%" height="15" fill="rgb(231,226,51)" fg:x="1230" fg:w="2"/><text x="99.7646%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="99.5146%" y="309" width="0.1618%" height="15" fill="rgb(216,62,29)" fg:x="1230" fg:w="2"/><text x="99.7646%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="99.6764%" y="357" width="0.1618%" height="15" fill="rgb(248,202,3)" fg:x="1232" fg:w="2"/><text x="99.9264%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.7573%" y="341" width="0.0809%" height="15" fill="rgb(225,181,7)" fg:x="1233" fg:w="1"/><text x="100.0073%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.7573%" y="325" width="0.0809%" height="15" fill="rgb(247,170,54)" fg:x="1233" fg:w="1"/><text x="100.0073%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.7573%" y="309" width="0.0809%" height="15" fill="rgb(236,204,33)" fg:x="1233" fg:w="1"/><text x="100.0073%" y="319.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (124 samples, 10.03%)</title><rect x="89.8867%" y="565" width="10.0324%" height="15" fill="rgb(216,45,30)" fg:x="1111" fg:w="124"/><text x="90.1367%" y="575.50">&lt;plugins_rpc::s..</text></g><g><title>core::iter::adapters::try_process (121 samples, 9.79%)</title><rect x="90.1294%" y="549" width="9.7896%" height="15" fill="rgb(213,203,16)" fg:x="1114" fg:w="121"/><text x="90.3794%" y="559.50">core::iter::ad..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (79 samples, 6.39%)</title><rect x="93.5275%" y="533" width="6.3916%" height="15" fill="rgb(215,46,16)" fg:x="1156" fg:w="79"/><text x="93.7775%" y="543.50">alloc::v..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (78 samples, 6.31%)</title><rect x="93.6084%" y="517" width="6.3107%" height="15" fill="rgb(217,162,46)" fg:x="1157" fg:w="78"/><text x="93.8584%" y="527.50">&lt;core::i..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (76 samples, 6.15%)</title><rect x="93.7702%" y="501" width="6.1489%" height="15" fill="rgb(224,189,20)" fg:x="1159" fg:w="76"/><text x="94.0202%" y="511.50">plugins_..</text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (71 samples, 5.74%)</title><rect x="94.1748%" y="485" width="5.7443%" height="15" fill="rgb(232,35,51)" fg:x="1164" fg:w="71"/><text x="94.4248%" y="495.50">&lt;rpc_pr..</text></g><g><title>kernel::model::EntityPtr::to_json_value (29 samples, 2.35%)</title><rect x="97.5728%" y="469" width="2.3463%" height="15" fill="rgb(243,221,46)" fg:x="1206" fg:w="29"/><text x="97.8228%" y="479.50">k..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (29 samples, 2.35%)</title><rect x="97.5728%" y="453" width="2.3463%" height="15" fill="rgb(248,16,16)" fg:x="1206" fg:w="29"/><text x="97.8228%" y="463.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 2.35%)</title><rect x="97.5728%" y="437" width="2.3463%" height="15" fill="rgb(220,168,13)" fg:x="1206" fg:w="29"/><text x="97.8228%" y="447.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.73%)</title><rect x="99.1909%" y="421" width="0.7282%" height="15" fill="rgb(243,102,39)" fg:x="1226" fg:w="9"/><text x="99.4409%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (8 samples, 0.65%)</title><rect x="99.2718%" y="405" width="0.6472%" height="15" fill="rgb(245,82,32)" fg:x="1227" fg:w="8"/><text x="99.5218%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.65%)</title><rect x="99.2718%" y="389" width="0.6472%" height="15" fill="rgb(230,164,19)" fg:x="1227" fg:w="8"/><text x="99.5218%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="99.6764%" y="373" width="0.2427%" height="15" fill="rgb(221,9,41)" fg:x="1232" fg:w="3"/><text x="99.9264%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.8382%" y="357" width="0.0809%" height="15" fill="rgb(216,93,0)" fg:x="1234" fg:w="1"/><text x="100.0882%" y="367.50"></text></g><g><title>all (1,236 samples, 100%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(235,113,9)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="1007.50"></text></g><g><title>simple-a8fb0ec0 (1,236 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(209,224,10)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="991.50">simple-a8fb0ec0</text></g><g><title>_start (1,236 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(226,54,34)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="975.50">_start</text></g><g><title>__libc_start_main (1,236 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(222,60,8)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="959.50">__libc_start_main</text></g><g><title>main (1,236 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(248,228,41)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="943.50">main</text></g><g><title>std::rt::lang_start_internal (1,236 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(226,31,32)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="927.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,236 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(242,132,49)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,236 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(224,194,19)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,236 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(232,200,51)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="879.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,236 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(235,60,46)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="863.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,236 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(240,109,52)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,236 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(215,78,37)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,236 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(225,141,7)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="815.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,236 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(216,102,54)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="799.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,236 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(238,143,13)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="783.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,236 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(219,45,51)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="767.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,236 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(242,105,46)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="751.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,236 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(206,154,49)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="735.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,236 samples, 100.00%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(239,215,4)" fg:x="0" fg:w="1236"/><text x="0.2500%" y="719.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (320 samples, 25.89%)</title><rect x="74.1100%" y="693" width="25.8900%" height="15" fill="rgb(238,82,17)" fg:x="916" fg:w="320"/><text x="74.3600%" y="703.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as c..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (320 samples, 25.89%)</title><rect x="74.1100%" y="677" width="25.8900%" height="15" fill="rgb(242,49,30)" fg:x="916" fg:w="320"/><text x="74.3600%" y="687.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (320 samples, 25.89%)</title><rect x="74.1100%" y="661" width="25.8900%" height="15" fill="rgb(248,5,16)" fg:x="916" fg:w="320"/><text x="74.3600%" y="671.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (193 samples, 15.61%)</title><rect x="84.3851%" y="645" width="15.6149%" height="15" fill="rgb(237,138,32)" fg:x="1043" fg:w="193"/><text x="84.6351%" y="655.50">engine::session::Session..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (193 samples, 15.61%)</title><rect x="84.3851%" y="629" width="15.6149%" height="15" fill="rgb(235,79,45)" fg:x="1043" fg:w="193"/><text x="84.6351%" y="639.50">engine::perform::Standar..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (135 samples, 10.92%)</title><rect x="89.0777%" y="613" width="10.9223%" height="15" fill="rgb(213,105,25)" fg:x="1101" fg:w="135"/><text x="89.3277%" y="623.50">kernel::plugins:..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (135 samples, 10.92%)</title><rect x="89.0777%" y="597" width="10.9223%" height="15" fill="rgb(251,131,7)" fg:x="1101" fg:w="135"/><text x="89.3277%" y="607.50">&lt;plugins_dynlib:..</text></g><g><title>plugins_rpc::querying::have_surroundings (125 samples, 10.11%)</title><rect x="89.8867%" y="581" width="10.1133%" height="15" fill="rgb(211,155,7)" fg:x="1111" fg:w="125"/><text x="90.1367%" y="591.50">plugins_rpc::qu..</text></g><g><title>&lt;rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="99.9191%" y="565" width="0.0809%" height="15" fill="rgb(243,70,15)" fg:x="1235" fg:w="1"/><text x="100.1691%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="99.9191%" y="549" width="0.0809%" height="15" fill="rgb(215,171,2)" fg:x="1235" fg:w="1"/><text x="100.1691%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.9191%" y="533" width="0.0809%" height="15" fill="rgb(244,121,35)" fg:x="1235" fg:w="1"/><text x="100.1691%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.9191%" y="517" width="0.0809%" height="15" fill="rgb(249,147,17)" fg:x="1235" fg:w="1"/><text x="100.1691%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.9191%" y="501" width="0.0809%" height="15" fill="rgb(241,193,52)" fg:x="1235" fg:w="1"/><text x="100.1691%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.9191%" y="485" width="0.0809%" height="15" fill="rgb(217,159,39)" fg:x="1235" fg:w="1"/><text x="100.1691%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.9191%" y="469" width="0.0809%" height="15" fill="rgb(248,110,0)" fg:x="1235" fg:w="1"/><text x="100.1691%" y="479.50"></text></g></svg></svg>