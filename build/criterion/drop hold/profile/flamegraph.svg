<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1270" onload="init(evt)" viewBox="0 0 1200 1270" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1270" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1253.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1253.00"> </text><svg id="frames" x="10" width="1180" total_samples="1249"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.0000%" y="853" width="0.0801%" height="15" fill="rgb(244,92,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0000%" y="837" width="0.0801%" height="15" fill="rgb(225,57,15)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.1601%" y="821" width="0.1601%" height="15" fill="rgb(228,5,28)" fg:x="2" fg:w="2"/><text x="0.4101%" y="831.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5604%" y="757" width="0.0801%" height="15" fill="rgb(252,34,51)" fg:x="7" fg:w="1"/><text x="0.8104%" y="767.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.6405%" y="757" width="0.1601%" height="15" fill="rgb(235,58,7)" fg:x="8" fg:w="2"/><text x="0.8905%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8807%" y="725" width="0.0801%" height="15" fill="rgb(250,132,20)" fg:x="11" fg:w="1"/><text x="1.1307%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.8807%" y="741" width="0.1601%" height="15" fill="rgb(217,164,0)" fg:x="11" fg:w="2"/><text x="1.1307%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.9608%" y="725" width="0.0801%" height="15" fill="rgb(208,220,35)" fg:x="12" fg:w="1"/><text x="1.2108%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9608%" y="709" width="0.0801%" height="15" fill="rgb(227,42,51)" fg:x="12" fg:w="1"/><text x="1.2108%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="1.0408%" y="741" width="0.2402%" height="15" fill="rgb(225,146,38)" fg:x="13" fg:w="3"/><text x="1.2908%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.1209%" y="725" width="0.1601%" height="15" fill="rgb(252,108,37)" fg:x="14" fg:w="2"/><text x="1.3709%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.2810%" y="709" width="0.0801%" height="15" fill="rgb(244,101,24)" fg:x="16" fg:w="1"/><text x="1.5310%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="0.5604%" y="789" width="1.0408%" height="15" fill="rgb(213,161,50)" fg:x="7" fg:w="13"/><text x="0.8104%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.04%)</title><rect x="0.5604%" y="773" width="1.0408%" height="15" fill="rgb(248,159,19)" fg:x="7" fg:w="13"/><text x="0.8104%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="0.8006%" y="757" width="0.8006%" height="15" fill="rgb(233,179,15)" fg:x="10" fg:w="10"/><text x="1.0506%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="1.2810%" y="741" width="0.3203%" height="15" fill="rgb(248,178,3)" fg:x="16" fg:w="4"/><text x="1.5310%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="1.2810%" y="725" width="0.3203%" height="15" fill="rgb(245,190,41)" fg:x="16" fg:w="4"/><text x="1.5310%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="1.3611%" y="709" width="0.2402%" height="15" fill="rgb(218,151,19)" fg:x="17" fg:w="3"/><text x="1.6111%" y="719.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.4412%" y="693" width="0.1601%" height="15" fill="rgb(245,25,44)" fg:x="18" fg:w="2"/><text x="1.6912%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.68%)</title><rect x="0.0000%" y="869" width="1.6813%" height="15" fill="rgb(235,172,47)" fg:x="0" fg:w="21"/><text x="0.2500%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (20 samples, 1.60%)</title><rect x="0.0801%" y="853" width="1.6013%" height="15" fill="rgb(246,33,12)" fg:x="1" fg:w="20"/><text x="0.3301%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.60%)</title><rect x="0.0801%" y="837" width="1.6013%" height="15" fill="rgb(214,124,7)" fg:x="1" fg:w="20"/><text x="0.3301%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (17 samples, 1.36%)</title><rect x="0.3203%" y="821" width="1.3611%" height="15" fill="rgb(246,186,18)" fg:x="4" fg:w="17"/><text x="0.5703%" y="831.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.36%)</title><rect x="0.3203%" y="805" width="1.3611%" height="15" fill="rgb(231,94,1)" fg:x="4" fg:w="17"/><text x="0.5703%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6013%" y="789" width="0.0801%" height="15" fill="rgb(208,33,48)" fg:x="20" fg:w="1"/><text x="1.8513%" y="799.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="1.7614%" y="821" width="0.0801%" height="15" fill="rgb(208,195,44)" fg:x="22" fg:w="1"/><text x="2.0114%" y="831.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.7614%" y="805" width="0.0801%" height="15" fill="rgb(226,13,52)" fg:x="22" fg:w="1"/><text x="2.0114%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="1.8415%" y="805" width="0.0801%" height="15" fill="rgb(217,219,45)" fg:x="23" fg:w="1"/><text x="2.0915%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="1.8415%" y="789" width="0.0801%" height="15" fill="rgb(223,45,25)" fg:x="23" fg:w="1"/><text x="2.0915%" y="799.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="1.8415%" y="773" width="0.0801%" height="15" fill="rgb(241,163,0)" fg:x="23" fg:w="1"/><text x="2.0915%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.0016%" y="773" width="0.0801%" height="15" fill="rgb(216,68,47)" fg:x="25" fg:w="1"/><text x="2.2516%" y="783.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="2.0016%" y="757" width="0.0801%" height="15" fill="rgb(236,119,45)" fg:x="25" fg:w="1"/><text x="2.2516%" y="767.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.08%)</title><rect x="2.0016%" y="741" width="0.0801%" height="15" fill="rgb(209,188,24)" fg:x="25" fg:w="1"/><text x="2.2516%" y="751.50"></text></g><g><title>libloading::library_filename (4 samples, 0.32%)</title><rect x="2.0817%" y="773" width="0.3203%" height="15" fill="rgb(221,118,7)" fg:x="26" fg:w="4"/><text x="2.3317%" y="783.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (3 samples, 0.24%)</title><rect x="2.1617%" y="757" width="0.2402%" height="15" fill="rgb(213,148,43)" fg:x="27" fg:w="3"/><text x="2.4117%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="2.2418%" y="741" width="0.1601%" height="15" fill="rgb(231,21,43)" fg:x="28" fg:w="2"/><text x="2.4918%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="2.2418%" y="725" width="0.1601%" height="15" fill="rgb(232,213,43)" fg:x="28" fg:w="2"/><text x="2.4918%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="2.2418%" y="709" width="0.1601%" height="15" fill="rgb(239,145,50)" fg:x="28" fg:w="2"/><text x="2.4918%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="2.2418%" y="693" width="0.1601%" height="15" fill="rgb(222,131,18)" fg:x="28" fg:w="2"/><text x="2.4918%" y="703.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="2.4820%" y="709" width="0.0801%" height="15" fill="rgb(243,181,13)" fg:x="31" fg:w="1"/><text x="2.7320%" y="719.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (13 samples, 1.04%)</title><rect x="2.0016%" y="789" width="1.0408%" height="15" fill="rgb(212,74,41)" fg:x="25" fg:w="13"/><text x="2.2516%" y="799.50"></text></g><g><title>libloading::safe::Library::new (8 samples, 0.64%)</title><rect x="2.4019%" y="773" width="0.6405%" height="15" fill="rgb(237,143,34)" fg:x="30" fg:w="8"/><text x="2.6519%" y="783.50"></text></g><g><title>dlopen (7 samples, 0.56%)</title><rect x="2.4820%" y="757" width="0.5604%" height="15" fill="rgb(228,139,0)" fg:x="31" fg:w="7"/><text x="2.7320%" y="767.50"></text></g><g><title>_dl_catch_error (7 samples, 0.56%)</title><rect x="2.4820%" y="741" width="0.5604%" height="15" fill="rgb(227,214,11)" fg:x="31" fg:w="7"/><text x="2.7320%" y="751.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.56%)</title><rect x="2.4820%" y="725" width="0.5604%" height="15" fill="rgb(228,118,39)" fg:x="31" fg:w="7"/><text x="2.7320%" y="735.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="2.5620%" y="709" width="0.4804%" height="15" fill="rgb(207,117,22)" fg:x="32" fg:w="6"/><text x="2.8120%" y="719.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="2.5620%" y="693" width="0.4804%" height="15" fill="rgb(225,91,8)" fg:x="32" fg:w="6"/><text x="2.8120%" y="703.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (16 samples, 1.28%)</title><rect x="1.9215%" y="805" width="1.2810%" height="15" fill="rgb(230,219,48)" fg:x="24" fg:w="16"/><text x="2.1715%" y="815.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="3.0424%" y="789" width="0.1601%" height="15" fill="rgb(244,0,23)" fg:x="38" fg:w="2"/><text x="3.2924%" y="799.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="3.0424%" y="773" width="0.1601%" height="15" fill="rgb(206,212,23)" fg:x="38" fg:w="2"/><text x="3.2924%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="3.2026%" y="773" width="0.0801%" height="15" fill="rgb(254,62,10)" fg:x="40" fg:w="1"/><text x="3.4526%" y="783.50"></text></g><g><title>engine::session::Session::initialize (20 samples, 1.60%)</title><rect x="1.8415%" y="821" width="1.6013%" height="15" fill="rgb(236,58,8)" fg:x="23" fg:w="20"/><text x="2.0915%" y="831.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (3 samples, 0.24%)</title><rect x="3.2026%" y="805" width="0.2402%" height="15" fill="rgb(232,212,17)" fg:x="40" fg:w="3"/><text x="3.4526%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="3.2026%" y="789" width="0.2402%" height="15" fill="rgb(206,132,9)" fg:x="40" fg:w="3"/><text x="3.4526%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="3.2826%" y="773" width="0.1601%" height="15" fill="rgb(234,97,28)" fg:x="41" fg:w="2"/><text x="3.5326%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="3.2826%" y="757" width="0.1601%" height="15" fill="rgb(254,144,9)" fg:x="41" fg:w="2"/><text x="3.5326%" y="767.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="3.2826%" y="741" width="0.1601%" height="15" fill="rgb(244,204,43)" fg:x="41" fg:w="2"/><text x="3.5326%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.4428%" y="773" width="0.0801%" height="15" fill="rgb(248,177,16)" fg:x="43" fg:w="1"/><text x="3.6928%" y="783.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="3.4428%" y="821" width="0.1601%" height="15" fill="rgb(219,110,15)" fg:x="43" fg:w="2"/><text x="3.6928%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="3.4428%" y="805" width="0.1601%" height="15" fill="rgb(212,203,25)" fg:x="43" fg:w="2"/><text x="3.6928%" y="815.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (2 samples, 0.16%)</title><rect x="3.4428%" y="789" width="0.1601%" height="15" fill="rgb(205,50,1)" fg:x="43" fg:w="2"/><text x="3.6928%" y="799.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="3.5228%" y="773" width="0.0801%" height="15" fill="rgb(222,152,41)" fg:x="44" fg:w="1"/><text x="3.7728%" y="783.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (25 samples, 2.00%)</title><rect x="1.6813%" y="869" width="2.0016%" height="15" fill="rgb(236,83,3)" fg:x="21" fg:w="25"/><text x="1.9313%" y="879.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (25 samples, 2.00%)</title><rect x="1.6813%" y="853" width="2.0016%" height="15" fill="rgb(214,30,54)" fg:x="21" fg:w="25"/><text x="1.9313%" y="863.50">e..</text></g><g><title>engine::session::Session::new (25 samples, 2.00%)</title><rect x="1.6813%" y="837" width="2.0016%" height="15" fill="rgb(250,117,31)" fg:x="21" fg:w="25"/><text x="1.9313%" y="847.50">e..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="3.6029%" y="821" width="0.0801%" height="15" fill="rgb(228,77,14)" fg:x="45" fg:w="1"/><text x="3.8529%" y="831.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="3.6029%" y="805" width="0.0801%" height="15" fill="rgb(241,3,28)" fg:x="45" fg:w="1"/><text x="3.8529%" y="815.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.7630%" y="853" width="0.0801%" height="15" fill="rgb(221,175,52)" fg:x="47" fg:w="1"/><text x="4.0130%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="3.8431%" y="853" width="0.0801%" height="15" fill="rgb(237,91,6)" fg:x="48" fg:w="1"/><text x="4.0931%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.9231%" y="853" width="0.0801%" height="15" fill="rgb(246,46,42)" fg:x="49" fg:w="1"/><text x="4.1731%" y="863.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.9231%" y="837" width="0.0801%" height="15" fill="rgb(235,199,0)" fg:x="49" fg:w="1"/><text x="4.1731%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="4.0032%" y="853" width="0.0801%" height="15" fill="rgb(224,44,40)" fg:x="50" fg:w="1"/><text x="4.2532%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="4.0032%" y="837" width="0.0801%" height="15" fill="rgb(209,24,35)" fg:x="50" fg:w="1"/><text x="4.2532%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="4.0833%" y="853" width="0.0801%" height="15" fill="rgb(244,46,22)" fg:x="51" fg:w="1"/><text x="4.3333%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="4.0833%" y="837" width="0.0801%" height="15" fill="rgb(235,99,8)" fg:x="51" fg:w="1"/><text x="4.3333%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="4.0833%" y="821" width="0.0801%" height="15" fill="rgb(218,127,36)" fg:x="51" fg:w="1"/><text x="4.3333%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="4.0833%" y="805" width="0.0801%" height="15" fill="rgb(238,47,46)" fg:x="51" fg:w="1"/><text x="4.3333%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.0833%" y="789" width="0.0801%" height="15" fill="rgb(233,65,17)" fg:x="51" fg:w="1"/><text x="4.3333%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.1633%" y="821" width="0.0801%" height="15" fill="rgb(239,22,33)" fg:x="52" fg:w="1"/><text x="4.4133%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.1633%" y="805" width="0.0801%" height="15" fill="rgb(243,66,43)" fg:x="52" fg:w="1"/><text x="4.4133%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="4.1633%" y="789" width="0.0801%" height="15" fill="rgb(235,210,28)" fg:x="52" fg:w="1"/><text x="4.4133%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="4.1633%" y="773" width="0.0801%" height="15" fill="rgb(205,191,50)" fg:x="52" fg:w="1"/><text x="4.4133%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="4.1633%" y="757" width="0.0801%" height="15" fill="rgb(251,217,19)" fg:x="52" fg:w="1"/><text x="4.4133%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.1633%" y="741" width="0.0801%" height="15" fill="rgb(205,174,37)" fg:x="52" fg:w="1"/><text x="4.4133%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.1633%" y="725" width="0.0801%" height="15" fill="rgb(212,158,42)" fg:x="52" fg:w="1"/><text x="4.4133%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.1633%" y="709" width="0.0801%" height="15" fill="rgb(212,208,51)" fg:x="52" fg:w="1"/><text x="4.4133%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.1633%" y="693" width="0.0801%" height="15" fill="rgb(225,198,20)" fg:x="52" fg:w="1"/><text x="4.4133%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.1633%" y="677" width="0.0801%" height="15" fill="rgb(247,41,44)" fg:x="52" fg:w="1"/><text x="4.4133%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.1633%" y="661" width="0.0801%" height="15" fill="rgb(228,33,41)" fg:x="52" fg:w="1"/><text x="4.4133%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.1633%" y="645" width="0.0801%" height="15" fill="rgb(215,47,52)" fg:x="52" fg:w="1"/><text x="4.4133%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.2434%" y="821" width="0.0801%" height="15" fill="rgb(248,106,37)" fg:x="53" fg:w="1"/><text x="4.4934%" y="831.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="4.1633%" y="837" width="0.2402%" height="15" fill="rgb(238,91,29)" fg:x="52" fg:w="3"/><text x="4.4133%" y="847.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="4.3235%" y="821" width="0.0801%" height="15" fill="rgb(226,111,40)" fg:x="54" fg:w="1"/><text x="4.5735%" y="831.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.3235%" y="805" width="0.0801%" height="15" fill="rgb(229,159,36)" fg:x="54" fg:w="1"/><text x="4.5735%" y="815.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="4.4035%" y="837" width="0.0801%" height="15" fill="rgb(221,109,4)" fg:x="55" fg:w="1"/><text x="4.6535%" y="847.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="4.4035%" y="821" width="0.0801%" height="15" fill="rgb(236,56,25)" fg:x="55" fg:w="1"/><text x="4.6535%" y="831.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="4.4035%" y="805" width="0.0801%" height="15" fill="rgb(244,113,23)" fg:x="55" fg:w="1"/><text x="4.6535%" y="815.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="4.4035%" y="789" width="0.0801%" height="15" fill="rgb(249,132,2)" fg:x="55" fg:w="1"/><text x="4.6535%" y="799.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="4.4035%" y="773" width="0.0801%" height="15" fill="rgb(205,185,21)" fg:x="55" fg:w="1"/><text x="4.6535%" y="783.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="4.4035%" y="757" width="0.0801%" height="15" fill="rgb(245,130,2)" fg:x="55" fg:w="1"/><text x="4.6535%" y="767.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="4.4035%" y="741" width="0.0801%" height="15" fill="rgb(246,71,26)" fg:x="55" fg:w="1"/><text x="4.6535%" y="751.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="4.4035%" y="725" width="0.0801%" height="15" fill="rgb(234,194,6)" fg:x="55" fg:w="1"/><text x="4.6535%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="4.4836%" y="805" width="0.1601%" height="15" fill="rgb(206,24,32)" fg:x="56" fg:w="2"/><text x="4.7336%" y="815.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.6437%" y="805" width="0.0801%" height="15" fill="rgb(233,7,54)" fg:x="58" fg:w="1"/><text x="4.8937%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="4.6437%" y="789" width="0.0801%" height="15" fill="rgb(252,46,1)" fg:x="58" fg:w="1"/><text x="4.8937%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.6437%" y="773" width="0.0801%" height="15" fill="rgb(216,113,53)" fg:x="58" fg:w="1"/><text x="4.8937%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.8038%" y="757" width="0.0801%" height="15" fill="rgb(215,40,24)" fg:x="60" fg:w="1"/><text x="5.0538%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.8839%" y="693" width="0.0801%" height="15" fill="rgb(233,222,8)" fg:x="61" fg:w="1"/><text x="5.1339%" y="703.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="4.8839%" y="757" width="0.1601%" height="15" fill="rgb(248,73,28)" fg:x="61" fg:w="2"/><text x="5.1339%" y="767.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="4.8839%" y="741" width="0.1601%" height="15" fill="rgb(247,126,28)" fg:x="61" fg:w="2"/><text x="5.1339%" y="751.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.8839%" y="725" width="0.1601%" height="15" fill="rgb(242,173,54)" fg:x="61" fg:w="2"/><text x="5.1339%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.8839%" y="709" width="0.1601%" height="15" fill="rgb(244,186,22)" fg:x="61" fg:w="2"/><text x="5.1339%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="4.9640%" y="693" width="0.0801%" height="15" fill="rgb(231,187,4)" fg:x="62" fg:w="1"/><text x="5.2140%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="5.0440%" y="741" width="0.0801%" height="15" fill="rgb(252,66,47)" fg:x="63" fg:w="1"/><text x="5.2940%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.0440%" y="725" width="0.0801%" height="15" fill="rgb(240,228,28)" fg:x="63" fg:w="1"/><text x="5.2940%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="5.1241%" y="741" width="0.3203%" height="15" fill="rgb(237,63,43)" fg:x="64" fg:w="4"/><text x="5.3741%" y="751.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.2042%" y="725" width="0.2402%" height="15" fill="rgb(214,1,44)" fg:x="65" fg:w="3"/><text x="5.4542%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.3643%" y="709" width="0.0801%" height="15" fill="rgb(212,2,46)" fg:x="67" fg:w="1"/><text x="5.6143%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.4444%" y="725" width="0.0801%" height="15" fill="rgb(213,142,5)" fg:x="68" fg:w="1"/><text x="5.6944%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="5.5244%" y="693" width="0.0801%" height="15" fill="rgb(229,135,1)" fg:x="69" fg:w="1"/><text x="5.7744%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="5.5244%" y="725" width="0.1601%" height="15" fill="rgb(252,98,38)" fg:x="69" fg:w="2"/><text x="5.7744%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="5.5244%" y="709" width="0.1601%" height="15" fill="rgb(206,89,40)" fg:x="69" fg:w="2"/><text x="5.7744%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.6045%" y="693" width="0.0801%" height="15" fill="rgb(219,73,36)" fg:x="70" fg:w="1"/><text x="5.8545%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.6045%" y="677" width="0.0801%" height="15" fill="rgb(207,168,32)" fg:x="70" fg:w="1"/><text x="5.8545%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.6045%" y="661" width="0.0801%" height="15" fill="rgb(215,113,21)" fg:x="70" fg:w="1"/><text x="5.8545%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="5.6845%" y="725" width="0.2402%" height="15" fill="rgb(217,144,43)" fg:x="71" fg:w="3"/><text x="5.9345%" y="735.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.6845%" y="709" width="0.2402%" height="15" fill="rgb(249,48,50)" fg:x="71" fg:w="3"/><text x="5.9345%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.7646%" y="693" width="0.1601%" height="15" fill="rgb(242,1,26)" fg:x="72" fg:w="2"/><text x="6.0146%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.7646%" y="677" width="0.1601%" height="15" fill="rgb(231,167,42)" fg:x="72" fg:w="2"/><text x="6.0146%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.8447%" y="661" width="0.0801%" height="15" fill="rgb(242,177,45)" fg:x="73" fg:w="1"/><text x="6.0947%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="5.8447%" y="645" width="0.0801%" height="15" fill="rgb(232,121,42)" fg:x="73" fg:w="1"/><text x="6.0947%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="5.8447%" y="629" width="0.0801%" height="15" fill="rgb(205,8,42)" fg:x="73" fg:w="1"/><text x="6.0947%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.0048%" y="709" width="0.0801%" height="15" fill="rgb(238,199,24)" fg:x="75" fg:w="1"/><text x="6.2548%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.0849%" y="709" width="0.1601%" height="15" fill="rgb(228,112,2)" fg:x="76" fg:w="2"/><text x="6.3349%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.0849%" y="693" width="0.1601%" height="15" fill="rgb(215,115,33)" fg:x="76" fg:w="2"/><text x="6.3349%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.0849%" y="677" width="0.1601%" height="15" fill="rgb(230,209,34)" fg:x="76" fg:w="2"/><text x="6.3349%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="6.1649%" y="661" width="0.0801%" height="15" fill="rgb(246,76,12)" fg:x="77" fg:w="1"/><text x="6.4149%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.2450%" y="693" width="0.1601%" height="15" fill="rgb(240,110,9)" fg:x="78" fg:w="2"/><text x="6.4950%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.2450%" y="677" width="0.1601%" height="15" fill="rgb(224,94,46)" fg:x="78" fg:w="2"/><text x="6.4950%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="6.4051%" y="661" width="0.0801%" height="15" fill="rgb(247,150,22)" fg:x="80" fg:w="1"/><text x="6.6551%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.4051%" y="645" width="0.0801%" height="15" fill="rgb(249,85,13)" fg:x="80" fg:w="1"/><text x="6.6551%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="6.4051%" y="677" width="0.3203%" height="15" fill="rgb(208,77,41)" fg:x="80" fg:w="4"/><text x="6.6551%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="6.4852%" y="661" width="0.2402%" height="15" fill="rgb(240,42,44)" fg:x="81" fg:w="3"/><text x="6.7352%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="6.4852%" y="645" width="0.2402%" height="15" fill="rgb(222,10,51)" fg:x="81" fg:w="3"/><text x="6.7352%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="6.4852%" y="629" width="0.2402%" height="15" fill="rgb(208,146,53)" fg:x="81" fg:w="3"/><text x="6.7352%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="6.4852%" y="613" width="0.2402%" height="15" fill="rgb(236,162,23)" fg:x="81" fg:w="3"/><text x="6.7352%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="6.4852%" y="597" width="0.2402%" height="15" fill="rgb(218,66,21)" fg:x="81" fg:w="3"/><text x="6.7352%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="6.4852%" y="581" width="0.2402%" height="15" fill="rgb(233,6,47)" fg:x="81" fg:w="3"/><text x="6.7352%" y="591.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="6.4852%" y="565" width="0.2402%" height="15" fill="rgb(236,59,51)" fg:x="81" fg:w="3"/><text x="6.7352%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="6.4051%" y="693" width="0.4003%" height="15" fill="rgb(242,12,46)" fg:x="80" fg:w="5"/><text x="6.6551%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.7254%" y="677" width="0.0801%" height="15" fill="rgb(243,142,19)" fg:x="84" fg:w="1"/><text x="6.9754%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.7254%" y="661" width="0.0801%" height="15" fill="rgb(217,28,17)" fg:x="84" fg:w="1"/><text x="6.9754%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.7254%" y="645" width="0.0801%" height="15" fill="rgb(228,2,27)" fg:x="84" fg:w="1"/><text x="6.9754%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="5.9247%" y="725" width="0.9608%" height="15" fill="rgb(214,221,4)" fg:x="74" fg:w="12"/><text x="6.1747%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="6.2450%" y="709" width="0.6405%" height="15" fill="rgb(224,69,26)" fg:x="78" fg:w="8"/><text x="6.4950%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.8054%" y="693" width="0.0801%" height="15" fill="rgb(219,70,4)" fg:x="85" fg:w="1"/><text x="7.0554%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.8054%" y="677" width="0.0801%" height="15" fill="rgb(218,157,39)" fg:x="85" fg:w="1"/><text x="7.0554%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.8054%" y="661" width="0.0801%" height="15" fill="rgb(238,36,28)" fg:x="85" fg:w="1"/><text x="7.0554%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.52%)</title><rect x="5.4444%" y="741" width="1.5212%" height="15" fill="rgb(232,29,0)" fg:x="68" fg:w="19"/><text x="5.6944%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.8855%" y="725" width="0.0801%" height="15" fill="rgb(243,138,46)" fg:x="86" fg:w="1"/><text x="7.1355%" y="735.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (31 samples, 2.48%)</title><rect x="4.8038%" y="773" width="2.4820%" height="15" fill="rgb(232,186,41)" fg:x="60" fg:w="31"/><text x="5.0538%" y="783.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.24%)</title><rect x="5.0440%" y="757" width="2.2418%" height="15" fill="rgb(252,166,17)" fg:x="63" fg:w="28"/><text x="5.2940%" y="767.50">s..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="6.9656%" y="741" width="0.3203%" height="15" fill="rgb(228,179,12)" fg:x="87" fg:w="4"/><text x="7.2156%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.2058%" y="725" width="0.0801%" height="15" fill="rgb(254,205,53)" fg:x="90" fg:w="1"/><text x="7.4558%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.2058%" y="709" width="0.0801%" height="15" fill="rgb(224,163,47)" fg:x="90" fg:w="1"/><text x="7.4558%" y="719.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="7.3659%" y="725" width="0.2402%" height="15" fill="rgb(208,43,47)" fg:x="92" fg:w="3"/><text x="7.6159%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.6061%" y="693" width="0.0801%" height="15" fill="rgb(224,198,38)" fg:x="95" fg:w="1"/><text x="7.8561%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.6061%" y="677" width="0.0801%" height="15" fill="rgb(234,12,40)" fg:x="95" fg:w="1"/><text x="7.8561%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="7.6861%" y="693" width="0.0801%" height="15" fill="rgb(237,212,39)" fg:x="96" fg:w="1"/><text x="7.9361%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="7.6861%" y="677" width="0.0801%" height="15" fill="rgb(253,2,33)" fg:x="96" fg:w="1"/><text x="7.9361%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.6861%" y="661" width="0.0801%" height="15" fill="rgb(251,29,16)" fg:x="96" fg:w="1"/><text x="7.9361%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="7.2858%" y="773" width="0.7206%" height="15" fill="rgb(214,38,29)" fg:x="91" fg:w="9"/><text x="7.5358%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="7.3659%" y="757" width="0.6405%" height="15" fill="rgb(226,226,29)" fg:x="92" fg:w="8"/><text x="7.6159%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="7.3659%" y="741" width="0.6405%" height="15" fill="rgb(236,79,42)" fg:x="92" fg:w="8"/><text x="7.6159%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="7.6061%" y="725" width="0.4003%" height="15" fill="rgb(222,12,36)" fg:x="95" fg:w="5"/><text x="7.8561%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="7.6061%" y="709" width="0.4003%" height="15" fill="rgb(232,123,44)" fg:x="95" fg:w="5"/><text x="7.8561%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="7.7662%" y="693" width="0.2402%" height="15" fill="rgb(234,93,50)" fg:x="97" fg:w="3"/><text x="8.0162%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="7.8463%" y="677" width="0.1601%" height="15" fill="rgb(210,86,49)" fg:x="98" fg:w="2"/><text x="8.0963%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="7.8463%" y="661" width="0.1601%" height="15" fill="rgb(224,91,54)" fg:x="98" fg:w="2"/><text x="8.0963%" y="671.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="8.0064%" y="757" width="0.0801%" height="15" fill="rgb(239,169,9)" fg:x="100" fg:w="1"/><text x="8.2564%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.0064%" y="741" width="0.0801%" height="15" fill="rgb(238,29,17)" fg:x="100" fg:w="1"/><text x="8.2564%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="8.0865%" y="725" width="0.2402%" height="15" fill="rgb(227,160,22)" fg:x="101" fg:w="3"/><text x="8.3365%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="8.0865%" y="709" width="0.2402%" height="15" fill="rgb(231,129,52)" fg:x="101" fg:w="3"/><text x="8.3365%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="8.1665%" y="693" width="0.1601%" height="15" fill="rgb(241,184,9)" fg:x="102" fg:w="2"/><text x="8.4165%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="8.3267%" y="725" width="0.1601%" height="15" fill="rgb(217,43,48)" fg:x="104" fg:w="2"/><text x="8.5767%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.4067%" y="709" width="0.0801%" height="15" fill="rgb(213,49,1)" fg:x="105" fg:w="1"/><text x="8.6567%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.4067%" y="693" width="0.0801%" height="15" fill="rgb(223,79,39)" fg:x="105" fg:w="1"/><text x="8.6567%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="8.4868%" y="709" width="0.0801%" height="15" fill="rgb(228,227,46)" fg:x="106" fg:w="1"/><text x="8.7368%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="8.4868%" y="725" width="0.1601%" height="15" fill="rgb(245,89,41)" fg:x="106" fg:w="2"/><text x="8.7368%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.5669%" y="709" width="0.0801%" height="15" fill="rgb(253,83,21)" fg:x="107" fg:w="1"/><text x="8.8169%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.5669%" y="693" width="0.0801%" height="15" fill="rgb(229,116,51)" fg:x="107" fg:w="1"/><text x="8.8169%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="8.8070%" y="677" width="0.1601%" height="15" fill="rgb(246,67,26)" fg:x="110" fg:w="2"/><text x="9.0570%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="8.8070%" y="661" width="0.1601%" height="15" fill="rgb(250,117,20)" fg:x="110" fg:w="2"/><text x="9.0570%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.8871%" y="645" width="0.0801%" height="15" fill="rgb(207,88,17)" fg:x="111" fg:w="1"/><text x="9.1371%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.9672%" y="629" width="0.0801%" height="15" fill="rgb(212,98,36)" fg:x="112" fg:w="1"/><text x="9.2172%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.9672%" y="613" width="0.0801%" height="15" fill="rgb(221,72,6)" fg:x="112" fg:w="1"/><text x="9.2172%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.9672%" y="597" width="0.0801%" height="15" fill="rgb(235,129,19)" fg:x="112" fg:w="1"/><text x="9.2172%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="8.9672%" y="677" width="0.1601%" height="15" fill="rgb(237,200,6)" fg:x="112" fg:w="2"/><text x="9.2172%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="8.9672%" y="661" width="0.1601%" height="15" fill="rgb(239,69,54)" fg:x="112" fg:w="2"/><text x="9.2172%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="8.9672%" y="645" width="0.1601%" height="15" fill="rgb(214,68,45)" fg:x="112" fg:w="2"/><text x="9.2172%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="9.0472%" y="629" width="0.0801%" height="15" fill="rgb(254,160,8)" fg:x="113" fg:w="1"/><text x="9.2972%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="9.1273%" y="597" width="0.0801%" height="15" fill="rgb(215,226,31)" fg:x="114" fg:w="1"/><text x="9.3773%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="9.1273%" y="581" width="0.0801%" height="15" fill="rgb(253,6,35)" fg:x="114" fg:w="1"/><text x="9.3773%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.1273%" y="565" width="0.0801%" height="15" fill="rgb(219,96,42)" fg:x="114" fg:w="1"/><text x="9.3773%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="9.1273%" y="629" width="0.1601%" height="15" fill="rgb(207,170,13)" fg:x="114" fg:w="2"/><text x="9.3773%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="9.1273%" y="613" width="0.1601%" height="15" fill="rgb(239,101,5)" fg:x="114" fg:w="2"/><text x="9.3773%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.2074%" y="597" width="0.0801%" height="15" fill="rgb(228,183,34)" fg:x="115" fg:w="1"/><text x="9.4574%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="8.7270%" y="693" width="0.6405%" height="15" fill="rgb(205,28,31)" fg:x="109" fg:w="8"/><text x="8.9770%" y="703.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="9.1273%" y="677" width="0.2402%" height="15" fill="rgb(214,118,50)" fg:x="114" fg:w="3"/><text x="9.3773%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="9.1273%" y="661" width="0.2402%" height="15" fill="rgb(213,108,51)" fg:x="114" fg:w="3"/><text x="9.3773%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="9.1273%" y="645" width="0.2402%" height="15" fill="rgb(238,56,37)" fg:x="114" fg:w="3"/><text x="9.3773%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.2874%" y="629" width="0.0801%" height="15" fill="rgb(214,136,28)" fg:x="116" fg:w="1"/><text x="9.5374%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="8.7270%" y="709" width="0.8006%" height="15" fill="rgb(221,201,54)" fg:x="109" fg:w="10"/><text x="8.9770%" y="719.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="9.3675%" y="693" width="0.1601%" height="15" fill="rgb(228,216,39)" fg:x="117" fg:w="2"/><text x="9.6175%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.4476%" y="677" width="0.0801%" height="15" fill="rgb(207,229,49)" fg:x="118" fg:w="1"/><text x="9.6976%" y="687.50"></text></g><g><title>engine::session::Session::flush (68 samples, 5.44%)</title><rect x="4.1633%" y="853" width="5.4444%" height="15" fill="rgb(224,23,43)" fg:x="52" fg:w="68"/><text x="4.4133%" y="863.50">engine:..</text></g><g><title>engine::session::state::State::close (64 samples, 5.12%)</title><rect x="4.4836%" y="837" width="5.1241%" height="15" fill="rgb(247,97,18)" fg:x="56" fg:w="64"/><text x="4.7336%" y="847.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (64 samples, 5.12%)</title><rect x="4.4836%" y="821" width="5.1241%" height="15" fill="rgb(232,53,32)" fg:x="56" fg:w="64"/><text x="4.7336%" y="831.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (61 samples, 4.88%)</title><rect x="4.7238%" y="805" width="4.8839%" height="15" fill="rgb(247,38,23)" fg:x="59" fg:w="61"/><text x="4.9738%" y="815.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (60 samples, 4.80%)</title><rect x="4.8038%" y="789" width="4.8038%" height="15" fill="rgb(228,101,52)" fg:x="60" fg:w="60"/><text x="5.0538%" y="799.50">engine..</text></g><g><title>kernel::model::any_entity_changes (20 samples, 1.60%)</title><rect x="8.0064%" y="773" width="1.6013%" height="15" fill="rgb(231,45,36)" fg:x="100" fg:w="20"/><text x="8.2564%" y="783.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.52%)</title><rect x="8.0865%" y="757" width="1.5212%" height="15" fill="rgb(221,183,50)" fg:x="101" fg:w="19"/><text x="8.3365%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.52%)</title><rect x="8.0865%" y="741" width="1.5212%" height="15" fill="rgb(251,132,12)" fg:x="101" fg:w="19"/><text x="8.3365%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.96%)</title><rect x="8.6469%" y="725" width="0.9608%" height="15" fill="rgb(252,50,16)" fg:x="108" fg:w="12"/><text x="8.8969%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.5276%" y="709" width="0.0801%" height="15" fill="rgb(224,60,15)" fg:x="119" fg:w="1"/><text x="9.7776%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="9.6878%" y="821" width="0.0801%" height="15" fill="rgb(254,2,34)" fg:x="121" fg:w="1"/><text x="9.9378%" y="831.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="9.6878%" y="805" width="0.0801%" height="15" fill="rgb(232,154,8)" fg:x="121" fg:w="1"/><text x="9.9378%" y="815.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="9.6878%" y="789" width="0.0801%" height="15" fill="rgb(235,190,52)" fg:x="121" fg:w="1"/><text x="9.9378%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="9.7678%" y="821" width="0.0801%" height="15" fill="rgb(213,218,38)" fg:x="122" fg:w="1"/><text x="10.0178%" y="831.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="9.7678%" y="805" width="0.0801%" height="15" fill="rgb(237,50,37)" fg:x="122" fg:w="1"/><text x="10.0178%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="9.7678%" y="789" width="0.0801%" height="15" fill="rgb(235,51,35)" fg:x="122" fg:w="1"/><text x="10.0178%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.7678%" y="773" width="0.0801%" height="15" fill="rgb(244,40,52)" fg:x="122" fg:w="1"/><text x="10.0178%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="9.7678%" y="757" width="0.0801%" height="15" fill="rgb(217,225,45)" fg:x="122" fg:w="1"/><text x="10.0178%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.7678%" y="741" width="0.0801%" height="15" fill="rgb(247,191,36)" fg:x="122" fg:w="1"/><text x="10.0178%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="9.8479%" y="805" width="0.0801%" height="15" fill="rgb(251,144,31)" fg:x="123" fg:w="1"/><text x="10.0979%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="9.8479%" y="789" width="0.0801%" height="15" fill="rgb(227,155,41)" fg:x="123" fg:w="1"/><text x="10.0979%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="9.8479%" y="773" width="0.0801%" height="15" fill="rgb(236,121,36)" fg:x="123" fg:w="1"/><text x="10.0979%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="9.8479%" y="757" width="0.0801%" height="15" fill="rgb(221,128,28)" fg:x="123" fg:w="1"/><text x="10.0979%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.8479%" y="741" width="0.0801%" height="15" fill="rgb(249,67,50)" fg:x="123" fg:w="1"/><text x="10.0979%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.8479%" y="725" width="0.0801%" height="15" fill="rgb(241,126,38)" fg:x="123" fg:w="1"/><text x="10.0979%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.8479%" y="709" width="0.0801%" height="15" fill="rgb(239,33,14)" fg:x="123" fg:w="1"/><text x="10.0979%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.8479%" y="693" width="0.0801%" height="15" fill="rgb(207,221,54)" fg:x="123" fg:w="1"/><text x="10.0979%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.9279%" y="741" width="0.0801%" height="15" fill="rgb(242,138,43)" fg:x="124" fg:w="1"/><text x="10.1779%" y="751.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="10.0080%" y="741" width="0.4804%" height="15" fill="rgb(231,118,19)" fg:x="125" fg:w="6"/><text x="10.2580%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="9.6878%" y="837" width="0.8807%" height="15" fill="rgb(214,128,54)" fg:x="121" fg:w="11"/><text x="9.9378%" y="847.50"></text></g><g><title>engine::session::internal::Entities::add_entity (9 samples, 0.72%)</title><rect x="9.8479%" y="821" width="0.7206%" height="15" fill="rgb(236,136,6)" fg:x="123" fg:w="9"/><text x="10.0979%" y="831.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (8 samples, 0.64%)</title><rect x="9.9279%" y="805" width="0.6405%" height="15" fill="rgb(247,30,38)" fg:x="124" fg:w="8"/><text x="10.1779%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.64%)</title><rect x="9.9279%" y="789" width="0.6405%" height="15" fill="rgb(249,189,40)" fg:x="124" fg:w="8"/><text x="10.1779%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.64%)</title><rect x="9.9279%" y="773" width="0.6405%" height="15" fill="rgb(247,179,7)" fg:x="124" fg:w="8"/><text x="10.1779%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.64%)</title><rect x="9.9279%" y="757" width="0.6405%" height="15" fill="rgb(239,46,52)" fg:x="124" fg:w="8"/><text x="10.1779%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="10.4884%" y="741" width="0.0801%" height="15" fill="rgb(225,28,52)" fg:x="131" fg:w="1"/><text x="10.7384%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="10.5685%" y="821" width="0.0801%" height="15" fill="rgb(217,208,44)" fg:x="132" fg:w="1"/><text x="10.8185%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="10.5685%" y="805" width="0.0801%" height="15" fill="rgb(224,11,34)" fg:x="132" fg:w="1"/><text x="10.8185%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.6485%" y="741" width="0.1601%" height="15" fill="rgb(205,134,17)" fg:x="133" fg:w="2"/><text x="10.8985%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.7286%" y="725" width="0.0801%" height="15" fill="rgb(237,125,9)" fg:x="134" fg:w="1"/><text x="10.9786%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.7286%" y="709" width="0.0801%" height="15" fill="rgb(208,139,47)" fg:x="134" fg:w="1"/><text x="10.9786%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.7286%" y="693" width="0.0801%" height="15" fill="rgb(242,5,5)" fg:x="134" fg:w="1"/><text x="10.9786%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.7286%" y="677" width="0.0801%" height="15" fill="rgb(218,78,2)" fg:x="134" fg:w="1"/><text x="10.9786%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.7286%" y="661" width="0.0801%" height="15" fill="rgb(217,75,16)" fg:x="134" fg:w="1"/><text x="10.9786%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="10.7286%" y="645" width="0.0801%" height="15" fill="rgb(212,56,17)" fg:x="134" fg:w="1"/><text x="10.9786%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="10.7286%" y="629" width="0.0801%" height="15" fill="rgb(228,61,29)" fg:x="134" fg:w="1"/><text x="10.9786%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="10.7286%" y="613" width="0.0801%" height="15" fill="rgb(247,202,38)" fg:x="134" fg:w="1"/><text x="10.9786%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.7286%" y="597" width="0.0801%" height="15" fill="rgb(211,216,43)" fg:x="134" fg:w="1"/><text x="10.9786%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.7286%" y="581" width="0.0801%" height="15" fill="rgb(220,7,49)" fg:x="134" fg:w="1"/><text x="10.9786%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="10.7286%" y="565" width="0.0801%" height="15" fill="rgb(219,158,7)" fg:x="134" fg:w="1"/><text x="10.9786%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="10.7286%" y="549" width="0.0801%" height="15" fill="rgb(206,127,9)" fg:x="134" fg:w="1"/><text x="10.9786%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="10.7286%" y="533" width="0.0801%" height="15" fill="rgb(206,103,43)" fg:x="134" fg:w="1"/><text x="10.9786%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="10.7286%" y="517" width="0.0801%" height="15" fill="rgb(240,108,41)" fg:x="134" fg:w="1"/><text x="10.9786%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.7286%" y="501" width="0.0801%" height="15" fill="rgb(252,212,6)" fg:x="134" fg:w="1"/><text x="10.9786%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.8086%" y="741" width="0.0801%" height="15" fill="rgb(248,105,31)" fg:x="135" fg:w="1"/><text x="11.0586%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.8086%" y="725" width="0.0801%" height="15" fill="rgb(241,123,4)" fg:x="135" fg:w="1"/><text x="11.0586%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.8086%" y="709" width="0.0801%" height="15" fill="rgb(223,74,37)" fg:x="135" fg:w="1"/><text x="11.0586%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.8086%" y="693" width="0.0801%" height="15" fill="rgb(251,219,28)" fg:x="135" fg:w="1"/><text x="11.0586%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.8086%" y="677" width="0.0801%" height="15" fill="rgb(218,36,31)" fg:x="135" fg:w="1"/><text x="11.0586%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.8086%" y="661" width="0.0801%" height="15" fill="rgb(229,40,15)" fg:x="135" fg:w="1"/><text x="11.0586%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="10.6485%" y="789" width="0.3203%" height="15" fill="rgb(208,138,37)" fg:x="133" fg:w="4"/><text x="10.8985%" y="799.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="10.6485%" y="773" width="0.3203%" height="15" fill="rgb(208,40,52)" fg:x="133" fg:w="4"/><text x="10.8985%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="10.6485%" y="757" width="0.3203%" height="15" fill="rgb(246,181,48)" fg:x="133" fg:w="4"/><text x="10.8985%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.8887%" y="741" width="0.0801%" height="15" fill="rgb(253,178,36)" fg:x="136" fg:w="1"/><text x="11.1387%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.8887%" y="725" width="0.0801%" height="15" fill="rgb(210,170,6)" fg:x="136" fg:w="1"/><text x="11.1387%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.8887%" y="709" width="0.0801%" height="15" fill="rgb(243,62,22)" fg:x="136" fg:w="1"/><text x="11.1387%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.8887%" y="693" width="0.0801%" height="15" fill="rgb(213,145,26)" fg:x="136" fg:w="1"/><text x="11.1387%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.8887%" y="677" width="0.0801%" height="15" fill="rgb(237,177,23)" fg:x="136" fg:w="1"/><text x="11.1387%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.8887%" y="661" width="0.0801%" height="15" fill="rgb(252,5,24)" fg:x="136" fg:w="1"/><text x="11.1387%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.8887%" y="645" width="0.0801%" height="15" fill="rgb(230,108,54)" fg:x="136" fg:w="1"/><text x="11.1387%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.8887%" y="629" width="0.0801%" height="15" fill="rgb(252,192,41)" fg:x="136" fg:w="1"/><text x="11.1387%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.9688%" y="725" width="0.0801%" height="15" fill="rgb(218,125,20)" fg:x="137" fg:w="1"/><text x="11.2188%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.9688%" y="709" width="0.0801%" height="15" fill="rgb(230,223,15)" fg:x="137" fg:w="1"/><text x="11.2188%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.9688%" y="693" width="0.0801%" height="15" fill="rgb(239,99,47)" fg:x="137" fg:w="1"/><text x="11.2188%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="10.6485%" y="821" width="0.4804%" height="15" fill="rgb(222,214,23)" fg:x="133" fg:w="6"/><text x="10.8985%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="10.6485%" y="805" width="0.4804%" height="15" fill="rgb(250,98,43)" fg:x="133" fg:w="6"/><text x="10.8985%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="10.9688%" y="789" width="0.1601%" height="15" fill="rgb(226,140,11)" fg:x="137" fg:w="2"/><text x="11.2188%" y="799.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="10.9688%" y="773" width="0.1601%" height="15" fill="rgb(239,2,22)" fg:x="137" fg:w="2"/><text x="11.2188%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="10.9688%" y="757" width="0.1601%" height="15" fill="rgb(209,106,26)" fg:x="137" fg:w="2"/><text x="11.2188%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.9688%" y="741" width="0.1601%" height="15" fill="rgb(209,135,11)" fg:x="137" fg:w="2"/><text x="11.2188%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.0488%" y="725" width="0.0801%" height="15" fill="rgb(241,58,6)" fg:x="138" fg:w="1"/><text x="11.2988%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="11.1289%" y="821" width="0.0801%" height="15" fill="rgb(214,78,1)" fg:x="139" fg:w="1"/><text x="11.3789%" y="831.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="11.1289%" y="805" width="0.0801%" height="15" fill="rgb(229,135,33)" fg:x="139" fg:w="1"/><text x="11.3789%" y="815.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.1289%" y="789" width="0.0801%" height="15" fill="rgb(245,87,50)" fg:x="139" fg:w="1"/><text x="11.3789%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.2890%" y="757" width="0.0801%" height="15" fill="rgb(222,222,8)" fg:x="141" fg:w="1"/><text x="11.5390%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.3691%" y="645" width="0.0801%" height="15" fill="rgb(214,97,50)" fg:x="142" fg:w="1"/><text x="11.6191%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.3691%" y="629" width="0.0801%" height="15" fill="rgb(244,161,51)" fg:x="142" fg:w="1"/><text x="11.6191%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.3691%" y="613" width="0.0801%" height="15" fill="rgb(225,17,4)" fg:x="142" fg:w="1"/><text x="11.6191%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.3691%" y="597" width="0.0801%" height="15" fill="rgb(238,10,13)" fg:x="142" fg:w="1"/><text x="11.6191%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.3691%" y="581" width="0.0801%" height="15" fill="rgb(239,169,14)" fg:x="142" fg:w="1"/><text x="11.6191%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.3691%" y="565" width="0.0801%" height="15" fill="rgb(213,105,25)" fg:x="142" fg:w="1"/><text x="11.6191%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.3691%" y="549" width="0.0801%" height="15" fill="rgb(233,4,17)" fg:x="142" fg:w="1"/><text x="11.6191%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.3691%" y="533" width="0.0801%" height="15" fill="rgb(212,5,35)" fg:x="142" fg:w="1"/><text x="11.6191%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.3691%" y="517" width="0.0801%" height="15" fill="rgb(216,3,14)" fg:x="142" fg:w="1"/><text x="11.6191%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.3691%" y="501" width="0.0801%" height="15" fill="rgb(240,105,33)" fg:x="142" fg:w="1"/><text x="11.6191%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.3691%" y="485" width="0.0801%" height="15" fill="rgb(216,73,0)" fg:x="142" fg:w="1"/><text x="11.6191%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.3691%" y="469" width="0.0801%" height="15" fill="rgb(217,153,48)" fg:x="142" fg:w="1"/><text x="11.6191%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.3691%" y="725" width="0.1601%" height="15" fill="rgb(218,180,8)" fg:x="142" fg:w="2"/><text x="11.6191%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.3691%" y="709" width="0.1601%" height="15" fill="rgb(252,168,2)" fg:x="142" fg:w="2"/><text x="11.6191%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.3691%" y="693" width="0.1601%" height="15" fill="rgb(224,116,33)" fg:x="142" fg:w="2"/><text x="11.6191%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.3691%" y="677" width="0.1601%" height="15" fill="rgb(229,205,17)" fg:x="142" fg:w="2"/><text x="11.6191%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.3691%" y="661" width="0.1601%" height="15" fill="rgb(234,1,41)" fg:x="142" fg:w="2"/><text x="11.6191%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.4492%" y="645" width="0.0801%" height="15" fill="rgb(244,185,8)" fg:x="143" fg:w="1"/><text x="11.6992%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.5292%" y="725" width="0.0801%" height="15" fill="rgb(248,51,21)" fg:x="144" fg:w="1"/><text x="11.7792%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.5292%" y="709" width="0.0801%" height="15" fill="rgb(248,157,31)" fg:x="144" fg:w="1"/><text x="11.7792%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.5292%" y="693" width="0.0801%" height="15" fill="rgb(210,34,47)" fg:x="144" fg:w="1"/><text x="11.7792%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="11.2890%" y="773" width="0.4003%" height="15" fill="rgb(227,139,53)" fg:x="141" fg:w="5"/><text x="11.5390%" y="783.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="11.3691%" y="757" width="0.3203%" height="15" fill="rgb(232,211,37)" fg:x="142" fg:w="4"/><text x="11.6191%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="11.3691%" y="741" width="0.3203%" height="15" fill="rgb(236,133,10)" fg:x="142" fg:w="4"/><text x="11.6191%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.6093%" y="725" width="0.0801%" height="15" fill="rgb(243,202,25)" fg:x="145" fg:w="1"/><text x="11.8593%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6093%" y="709" width="0.0801%" height="15" fill="rgb(224,59,9)" fg:x="145" fg:w="1"/><text x="11.8593%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.6093%" y="693" width="0.0801%" height="15" fill="rgb(206,146,16)" fg:x="145" fg:w="1"/><text x="11.8593%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6093%" y="677" width="0.0801%" height="15" fill="rgb(220,47,2)" fg:x="145" fg:w="1"/><text x="11.8593%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="11.6093%" y="661" width="0.0801%" height="15" fill="rgb(225,124,51)" fg:x="145" fg:w="1"/><text x="11.8593%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6093%" y="645" width="0.0801%" height="15" fill="rgb(241,220,50)" fg:x="145" fg:w="1"/><text x="11.8593%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.6093%" y="629" width="0.0801%" height="15" fill="rgb(232,168,5)" fg:x="145" fg:w="1"/><text x="11.8593%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.6093%" y="613" width="0.0801%" height="15" fill="rgb(243,90,22)" fg:x="145" fg:w="1"/><text x="11.8593%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.6894%" y="757" width="0.0801%" height="15" fill="rgb(223,153,32)" fg:x="146" fg:w="1"/><text x="11.9394%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.6894%" y="741" width="0.0801%" height="15" fill="rgb(243,124,20)" fg:x="146" fg:w="1"/><text x="11.9394%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.6894%" y="725" width="0.0801%" height="15" fill="rgb(246,168,39)" fg:x="146" fg:w="1"/><text x="11.9394%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.6894%" y="709" width="0.0801%" height="15" fill="rgb(222,165,54)" fg:x="146" fg:w="1"/><text x="11.9394%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.6894%" y="693" width="0.0801%" height="15" fill="rgb(251,142,27)" fg:x="146" fg:w="1"/><text x="11.9394%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.6894%" y="677" width="0.0801%" height="15" fill="rgb(207,168,50)" fg:x="146" fg:w="1"/><text x="11.9394%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.6894%" y="661" width="0.0801%" height="15" fill="rgb(250,139,25)" fg:x="146" fg:w="1"/><text x="11.9394%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.6894%" y="645" width="0.0801%" height="15" fill="rgb(214,194,48)" fg:x="146" fg:w="1"/><text x="11.9394%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.6894%" y="629" width="0.0801%" height="15" fill="rgb(227,138,47)" fg:x="146" fg:w="1"/><text x="11.9394%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.6894%" y="613" width="0.0801%" height="15" fill="rgb(250,162,5)" fg:x="146" fg:w="1"/><text x="11.9394%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.6894%" y="597" width="0.0801%" height="15" fill="rgb(229,74,25)" fg:x="146" fg:w="1"/><text x="11.9394%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.6894%" y="581" width="0.0801%" height="15" fill="rgb(221,124,34)" fg:x="146" fg:w="1"/><text x="11.9394%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="11.7694%" y="757" width="0.0801%" height="15" fill="rgb(225,94,25)" fg:x="147" fg:w="1"/><text x="12.0194%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.7694%" y="741" width="0.0801%" height="15" fill="rgb(210,100,12)" fg:x="147" fg:w="1"/><text x="12.0194%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="11.8495%" y="693" width="0.2402%" height="15" fill="rgb(206,62,48)" fg:x="148" fg:w="3"/><text x="12.0995%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.0096%" y="677" width="0.0801%" height="15" fill="rgb(222,181,9)" fg:x="150" fg:w="1"/><text x="12.2596%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.0096%" y="661" width="0.0801%" height="15" fill="rgb(248,42,38)" fg:x="150" fg:w="1"/><text x="12.2596%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.0096%" y="645" width="0.0801%" height="15" fill="rgb(213,40,6)" fg:x="150" fg:w="1"/><text x="12.2596%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.0096%" y="629" width="0.0801%" height="15" fill="rgb(211,108,15)" fg:x="150" fg:w="1"/><text x="12.2596%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.0096%" y="613" width="0.0801%" height="15" fill="rgb(249,62,9)" fg:x="150" fg:w="1"/><text x="12.2596%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.0096%" y="597" width="0.0801%" height="15" fill="rgb(233,26,54)" fg:x="150" fg:w="1"/><text x="12.2596%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.0096%" y="581" width="0.0801%" height="15" fill="rgb(210,175,26)" fg:x="150" fg:w="1"/><text x="12.2596%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.0096%" y="565" width="0.0801%" height="15" fill="rgb(210,43,33)" fg:x="150" fg:w="1"/><text x="12.2596%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.0096%" y="549" width="0.0801%" height="15" fill="rgb(224,46,17)" fg:x="150" fg:w="1"/><text x="12.2596%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.0096%" y="533" width="0.0801%" height="15" fill="rgb(254,24,38)" fg:x="150" fg:w="1"/><text x="12.2596%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.0096%" y="517" width="0.0801%" height="15" fill="rgb(248,32,0)" fg:x="150" fg:w="1"/><text x="12.2596%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.0096%" y="501" width="0.0801%" height="15" fill="rgb(224,37,41)" fg:x="150" fg:w="1"/><text x="12.2596%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.0096%" y="485" width="0.0801%" height="15" fill="rgb(252,70,22)" fg:x="150" fg:w="1"/><text x="12.2596%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0096%" y="469" width="0.0801%" height="15" fill="rgb(241,123,50)" fg:x="150" fg:w="1"/><text x="12.2596%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="11.8495%" y="725" width="0.3203%" height="15" fill="rgb(246,138,33)" fg:x="148" fg:w="4"/><text x="12.0995%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="11.8495%" y="709" width="0.3203%" height="15" fill="rgb(218,39,32)" fg:x="148" fg:w="4"/><text x="12.0995%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0897%" y="693" width="0.0801%" height="15" fill="rgb(241,229,10)" fg:x="151" fg:w="1"/><text x="12.3397%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.1697%" y="725" width="0.0801%" height="15" fill="rgb(212,160,10)" fg:x="152" fg:w="1"/><text x="12.4197%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.1697%" y="709" width="0.0801%" height="15" fill="rgb(227,48,51)" fg:x="152" fg:w="1"/><text x="12.4197%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.1697%" y="693" width="0.0801%" height="15" fill="rgb(238,159,21)" fg:x="152" fg:w="1"/><text x="12.4197%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.1697%" y="677" width="0.0801%" height="15" fill="rgb(216,1,10)" fg:x="152" fg:w="1"/><text x="12.4197%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.1697%" y="661" width="0.0801%" height="15" fill="rgb(209,228,25)" fg:x="152" fg:w="1"/><text x="12.4197%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.1697%" y="645" width="0.0801%" height="15" fill="rgb(234,160,10)" fg:x="152" fg:w="1"/><text x="12.4197%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.1697%" y="629" width="0.0801%" height="15" fill="rgb(212,66,25)" fg:x="152" fg:w="1"/><text x="12.4197%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.3299%" y="629" width="0.0801%" height="15" fill="rgb(254,121,18)" fg:x="154" fg:w="1"/><text x="12.5799%" y="639.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (17 samples, 1.36%)</title><rect x="11.2090%" y="821" width="1.3611%" height="15" fill="rgb(219,127,1)" fg:x="140" fg:w="17"/><text x="11.4590%" y="831.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (17 samples, 1.36%)</title><rect x="11.2090%" y="805" width="1.3611%" height="15" fill="rgb(219,224,42)" fg:x="140" fg:w="17"/><text x="11.4590%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (16 samples, 1.28%)</title><rect x="11.2890%" y="789" width="1.2810%" height="15" fill="rgb(253,130,22)" fg:x="141" fg:w="16"/><text x="11.5390%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.88%)</title><rect x="11.6894%" y="773" width="0.8807%" height="15" fill="rgb(253,39,28)" fg:x="146" fg:w="11"/><text x="11.9394%" y="783.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="11.8495%" y="757" width="0.7206%" height="15" fill="rgb(231,126,37)" fg:x="148" fg:w="9"/><text x="12.0995%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="11.8495%" y="741" width="0.7206%" height="15" fill="rgb(251,145,14)" fg:x="148" fg:w="9"/><text x="12.0995%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="12.2498%" y="725" width="0.3203%" height="15" fill="rgb(229,164,30)" fg:x="153" fg:w="4"/><text x="12.4998%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="12.2498%" y="709" width="0.3203%" height="15" fill="rgb(233,227,54)" fg:x="153" fg:w="4"/><text x="12.4998%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="12.3299%" y="693" width="0.2402%" height="15" fill="rgb(240,94,22)" fg:x="154" fg:w="3"/><text x="12.5799%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="12.3299%" y="677" width="0.2402%" height="15" fill="rgb(217,56,16)" fg:x="154" fg:w="3"/><text x="12.5799%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="12.3299%" y="661" width="0.2402%" height="15" fill="rgb(229,133,38)" fg:x="154" fg:w="3"/><text x="12.5799%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="12.3299%" y="645" width="0.2402%" height="15" fill="rgb(225,139,35)" fg:x="154" fg:w="3"/><text x="12.5799%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="12.4099%" y="629" width="0.1601%" height="15" fill="rgb(223,100,16)" fg:x="155" fg:w="2"/><text x="12.6599%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="12.4099%" y="613" width="0.1601%" height="15" fill="rgb(207,43,50)" fg:x="155" fg:w="2"/><text x="12.6599%" y="623.50"></text></g><g><title>plugins_core::build::Build::holding (38 samples, 3.04%)</title><rect x="9.6077%" y="853" width="3.0424%" height="15" fill="rgb(237,221,9)" fg:x="120" fg:w="38"/><text x="9.8577%" y="863.50">plu..</text></g><g><title>plugins_core::tools::set_container (26 samples, 2.08%)</title><rect x="10.5685%" y="837" width="2.0817%" height="15" fill="rgb(236,134,24)" fg:x="132" fg:w="26"/><text x="10.8185%" y="847.50">p..</text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="12.5701%" y="821" width="0.0801%" height="15" fill="rgb(222,173,4)" fg:x="157" fg:w="1"/><text x="12.8201%" y="831.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="12.5701%" y="805" width="0.0801%" height="15" fill="rgb(234,144,52)" fg:x="157" fg:w="1"/><text x="12.8201%" y="815.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="12.5701%" y="789" width="0.0801%" height="15" fill="rgb(223,41,7)" fg:x="157" fg:w="1"/><text x="12.8201%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.5701%" y="773" width="0.0801%" height="15" fill="rgb(226,143,9)" fg:x="157" fg:w="1"/><text x="12.8201%" y="783.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="12.5701%" y="757" width="0.0801%" height="15" fill="rgb(234,43,37)" fg:x="157" fg:w="1"/><text x="12.8201%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.5701%" y="741" width="0.0801%" height="15" fill="rgb(224,188,11)" fg:x="157" fg:w="1"/><text x="12.8201%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="12.7302%" y="821" width="0.0801%" height="15" fill="rgb(233,113,28)" fg:x="159" fg:w="1"/><text x="12.9802%" y="831.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.8102%" y="757" width="0.1601%" height="15" fill="rgb(215,16,1)" fg:x="160" fg:w="2"/><text x="13.0602%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.8102%" y="741" width="0.1601%" height="15" fill="rgb(238,74,38)" fg:x="160" fg:w="2"/><text x="13.0602%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.8903%" y="725" width="0.0801%" height="15" fill="rgb(221,66,35)" fg:x="161" fg:w="1"/><text x="13.1403%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.8102%" y="773" width="0.2402%" height="15" fill="rgb(251,225,2)" fg:x="160" fg:w="3"/><text x="13.0602%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9704%" y="757" width="0.0801%" height="15" fill="rgb(240,169,18)" fg:x="162" fg:w="1"/><text x="13.2204%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.0504%" y="773" width="0.0801%" height="15" fill="rgb(243,130,50)" fg:x="163" fg:w="1"/><text x="13.3004%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.0504%" y="757" width="0.0801%" height="15" fill="rgb(228,75,13)" fg:x="163" fg:w="1"/><text x="13.3004%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.0504%" y="741" width="0.0801%" height="15" fill="rgb(252,95,35)" fg:x="163" fg:w="1"/><text x="13.3004%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.0504%" y="725" width="0.0801%" height="15" fill="rgb(222,180,54)" fg:x="163" fg:w="1"/><text x="13.3004%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.0504%" y="709" width="0.0801%" height="15" fill="rgb(250,110,34)" fg:x="163" fg:w="1"/><text x="13.3004%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.1305%" y="709" width="0.0801%" height="15" fill="rgb(208,100,21)" fg:x="164" fg:w="1"/><text x="13.3805%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="12.8102%" y="821" width="0.4804%" height="15" fill="rgb(209,123,47)" fg:x="160" fg:w="6"/><text x="13.0602%" y="831.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="12.8102%" y="805" width="0.4804%" height="15" fill="rgb(237,147,9)" fg:x="160" fg:w="6"/><text x="13.0602%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="12.8102%" y="789" width="0.4804%" height="15" fill="rgb(228,206,23)" fg:x="160" fg:w="6"/><text x="13.0602%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.1305%" y="773" width="0.1601%" height="15" fill="rgb(217,174,46)" fg:x="164" fg:w="2"/><text x="13.3805%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.1305%" y="757" width="0.1601%" height="15" fill="rgb(231,126,21)" fg:x="164" fg:w="2"/><text x="13.3805%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.1305%" y="741" width="0.1601%" height="15" fill="rgb(245,26,1)" fg:x="164" fg:w="2"/><text x="13.3805%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.1305%" y="725" width="0.1601%" height="15" fill="rgb(224,138,39)" fg:x="164" fg:w="2"/><text x="13.3805%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.2106%" y="709" width="0.0801%" height="15" fill="rgb(208,97,3)" fg:x="165" fg:w="1"/><text x="13.4606%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2106%" y="693" width="0.0801%" height="15" fill="rgb(222,77,29)" fg:x="165" fg:w="1"/><text x="13.4606%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2106%" y="677" width="0.0801%" height="15" fill="rgb(243,188,36)" fg:x="165" fg:w="1"/><text x="13.4606%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2106%" y="661" width="0.0801%" height="15" fill="rgb(218,214,3)" fg:x="165" fg:w="1"/><text x="13.4606%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2106%" y="645" width="0.0801%" height="15" fill="rgb(211,183,45)" fg:x="165" fg:w="1"/><text x="13.4606%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2106%" y="629" width="0.0801%" height="15" fill="rgb(230,218,25)" fg:x="165" fg:w="1"/><text x="13.4606%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="13.2906%" y="805" width="0.1601%" height="15" fill="rgb(233,86,6)" fg:x="166" fg:w="2"/><text x="13.5406%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.2906%" y="789" width="0.1601%" height="15" fill="rgb(220,59,24)" fg:x="166" fg:w="2"/><text x="13.5406%" y="799.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (2 samples, 0.16%)</title><rect x="13.2906%" y="773" width="0.1601%" height="15" fill="rgb(227,60,1)" fg:x="166" fg:w="2"/><text x="13.5406%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.2906%" y="757" width="0.1601%" height="15" fill="rgb(216,212,54)" fg:x="166" fg:w="2"/><text x="13.5406%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.3707%" y="741" width="0.0801%" height="15" fill="rgb(227,81,54)" fg:x="167" fg:w="1"/><text x="13.6207%" y="751.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="13.2906%" y="821" width="0.2402%" height="15" fill="rgb(206,204,43)" fg:x="166" fg:w="3"/><text x="13.5406%" y="831.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="13.4508%" y="805" width="0.0801%" height="15" fill="rgb(219,29,26)" fg:x="168" fg:w="1"/><text x="13.7008%" y="815.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="13.4508%" y="789" width="0.0801%" height="15" fill="rgb(252,40,36)" fg:x="168" fg:w="1"/><text x="13.7008%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.4508%" y="773" width="0.0801%" height="15" fill="rgb(224,205,39)" fg:x="168" fg:w="1"/><text x="13.7008%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.4508%" y="757" width="0.0801%" height="15" fill="rgb(222,13,21)" fg:x="168" fg:w="1"/><text x="13.7008%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.5308%" y="741" width="0.0801%" height="15" fill="rgb(243,139,6)" fg:x="169" fg:w="1"/><text x="13.7808%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5308%" y="725" width="0.0801%" height="15" fill="rgb(237,101,11)" fg:x="169" fg:w="1"/><text x="13.7808%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="13.5308%" y="805" width="0.1601%" height="15" fill="rgb(254,49,28)" fg:x="169" fg:w="2"/><text x="13.7808%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="13.5308%" y="789" width="0.1601%" height="15" fill="rgb(223,41,21)" fg:x="169" fg:w="2"/><text x="13.7808%" y="799.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="13.5308%" y="773" width="0.1601%" height="15" fill="rgb(225,103,29)" fg:x="169" fg:w="2"/><text x="13.7808%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="13.5308%" y="757" width="0.1601%" height="15" fill="rgb(244,82,43)" fg:x="169" fg:w="2"/><text x="13.7808%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="13.6109%" y="741" width="0.0801%" height="15" fill="rgb(217,39,3)" fg:x="170" fg:w="1"/><text x="13.8609%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.6109%" y="725" width="0.0801%" height="15" fill="rgb(239,128,25)" fg:x="170" fg:w="1"/><text x="13.8609%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6109%" y="709" width="0.0801%" height="15" fill="rgb(210,192,37)" fg:x="170" fg:w="1"/><text x="13.8609%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.6109%" y="693" width="0.0801%" height="15" fill="rgb(219,98,18)" fg:x="170" fg:w="1"/><text x="13.8609%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.6109%" y="677" width="0.0801%" height="15" fill="rgb(224,228,38)" fg:x="170" fg:w="1"/><text x="13.8609%" y="687.50"></text></g><g><title>plugins_core::build::Build::into_entry (14 samples, 1.12%)</title><rect x="12.6501%" y="853" width="1.1209%" height="15" fill="rgb(241,129,43)" fg:x="158" fg:w="14"/><text x="12.9001%" y="863.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.12%)</title><rect x="12.6501%" y="837" width="1.1209%" height="15" fill="rgb(223,8,51)" fg:x="158" fg:w="14"/><text x="12.9001%" y="847.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="13.5308%" y="821" width="0.2402%" height="15" fill="rgb(233,76,24)" fg:x="169" fg:w="3"/><text x="13.7808%" y="831.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="13.6910%" y="805" width="0.0801%" height="15" fill="rgb(219,115,10)" fg:x="171" fg:w="1"/><text x="13.9410%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="13.7710%" y="837" width="0.0801%" height="15" fill="rgb(222,137,12)" fg:x="172" fg:w="1"/><text x="14.0210%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="13.7710%" y="821" width="0.0801%" height="15" fill="rgb(216,192,16)" fg:x="172" fg:w="1"/><text x="14.0210%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="13.7710%" y="805" width="0.0801%" height="15" fill="rgb(247,6,27)" fg:x="172" fg:w="1"/><text x="14.0210%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.8511%" y="773" width="0.0801%" height="15" fill="rgb(254,39,44)" fg:x="173" fg:w="1"/><text x="14.1011%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="13.8511%" y="837" width="0.1601%" height="15" fill="rgb(251,116,35)" fg:x="173" fg:w="2"/><text x="14.1011%" y="847.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.8511%" y="821" width="0.1601%" height="15" fill="rgb(208,61,44)" fg:x="173" fg:w="2"/><text x="14.1011%" y="831.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="13.8511%" y="805" width="0.1601%" height="15" fill="rgb(250,34,5)" fg:x="173" fg:w="2"/><text x="14.1011%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.8511%" y="789" width="0.1601%" height="15" fill="rgb(241,40,15)" fg:x="173" fg:w="2"/><text x="14.1011%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.9311%" y="773" width="0.0801%" height="15" fill="rgb(229,182,2)" fg:x="174" fg:w="1"/><text x="14.1811%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.9311%" y="757" width="0.0801%" height="15" fill="rgb(244,148,52)" fg:x="174" fg:w="1"/><text x="14.1811%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.9311%" y="741" width="0.0801%" height="15" fill="rgb(225,211,4)" fg:x="174" fg:w="1"/><text x="14.1811%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.9311%" y="725" width="0.0801%" height="15" fill="rgb(208,222,47)" fg:x="174" fg:w="1"/><text x="14.1811%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.9311%" y="709" width="0.0801%" height="15" fill="rgb(233,162,0)" fg:x="174" fg:w="1"/><text x="14.1811%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.9311%" y="693" width="0.0801%" height="15" fill="rgb(241,54,13)" fg:x="174" fg:w="1"/><text x="14.1811%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="13.9311%" y="677" width="0.0801%" height="15" fill="rgb(213,89,18)" fg:x="174" fg:w="1"/><text x="14.1811%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.9311%" y="661" width="0.0801%" height="15" fill="rgb(215,170,37)" fg:x="174" fg:w="1"/><text x="14.1811%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.9311%" y="645" width="0.0801%" height="15" fill="rgb(216,133,15)" fg:x="174" fg:w="1"/><text x="14.1811%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="14.0112%" y="837" width="0.0801%" height="15" fill="rgb(230,42,19)" fg:x="175" fg:w="1"/><text x="14.2612%" y="847.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="14.0112%" y="821" width="0.0801%" height="15" fill="rgb(221,103,41)" fg:x="175" fg:w="1"/><text x="14.2612%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="14.2514%" y="597" width="0.1601%" height="15" fill="rgb(220,142,31)" fg:x="178" fg:w="2"/><text x="14.5014%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="14.2514%" y="581" width="0.1601%" height="15" fill="rgb(239,218,4)" fg:x="178" fg:w="2"/><text x="14.5014%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="14.2514%" y="565" width="0.1601%" height="15" fill="rgb(232,16,4)" fg:x="178" fg:w="2"/><text x="14.5014%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="14.2514%" y="549" width="0.1601%" height="15" fill="rgb(226,213,25)" fg:x="178" fg:w="2"/><text x="14.5014%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="14.2514%" y="533" width="0.1601%" height="15" fill="rgb(235,135,19)" fg:x="178" fg:w="2"/><text x="14.5014%" y="543.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="14.2514%" y="517" width="0.1601%" height="15" fill="rgb(240,107,29)" fg:x="178" fg:w="2"/><text x="14.5014%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="14.2514%" y="501" width="0.1601%" height="15" fill="rgb(206,164,44)" fg:x="178" fg:w="2"/><text x="14.5014%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.2514%" y="709" width="0.2402%" height="15" fill="rgb(210,23,48)" fg:x="178" fg:w="3"/><text x="14.5014%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="14.2514%" y="693" width="0.2402%" height="15" fill="rgb(212,138,25)" fg:x="178" fg:w="3"/><text x="14.5014%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="14.2514%" y="677" width="0.2402%" height="15" fill="rgb(224,152,3)" fg:x="178" fg:w="3"/><text x="14.5014%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="14.2514%" y="661" width="0.2402%" height="15" fill="rgb(214,38,23)" fg:x="178" fg:w="3"/><text x="14.5014%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="14.2514%" y="645" width="0.2402%" height="15" fill="rgb(215,161,10)" fg:x="178" fg:w="3"/><text x="14.5014%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="14.2514%" y="629" width="0.2402%" height="15" fill="rgb(240,185,7)" fg:x="178" fg:w="3"/><text x="14.5014%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="14.2514%" y="613" width="0.2402%" height="15" fill="rgb(244,104,25)" fg:x="178" fg:w="3"/><text x="14.5014%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="14.4115%" y="597" width="0.0801%" height="15" fill="rgb(242,140,44)" fg:x="180" fg:w="1"/><text x="14.6615%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.4115%" y="581" width="0.0801%" height="15" fill="rgb(245,30,19)" fg:x="180" fg:w="1"/><text x="14.6615%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="14.2514%" y="789" width="0.3203%" height="15" fill="rgb(219,208,35)" fg:x="178" fg:w="4"/><text x="14.5014%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="14.2514%" y="773" width="0.3203%" height="15" fill="rgb(235,200,7)" fg:x="178" fg:w="4"/><text x="14.5014%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="14.2514%" y="757" width="0.3203%" height="15" fill="rgb(220,193,10)" fg:x="178" fg:w="4"/><text x="14.5014%" y="767.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="14.2514%" y="741" width="0.3203%" height="15" fill="rgb(212,216,39)" fg:x="178" fg:w="4"/><text x="14.5014%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="14.2514%" y="725" width="0.3203%" height="15" fill="rgb(212,134,19)" fg:x="178" fg:w="4"/><text x="14.5014%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.4916%" y="709" width="0.0801%" height="15" fill="rgb(230,57,24)" fg:x="181" fg:w="1"/><text x="14.7416%" y="719.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="14.5717%" y="789" width="0.1601%" height="15" fill="rgb(238,209,37)" fg:x="182" fg:w="2"/><text x="14.8217%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="14.5717%" y="773" width="0.1601%" height="15" fill="rgb(247,11,45)" fg:x="182" fg:w="2"/><text x="14.8217%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="14.6517%" y="757" width="0.0801%" height="15" fill="rgb(222,126,6)" fg:x="183" fg:w="1"/><text x="14.9017%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="14.6517%" y="741" width="0.0801%" height="15" fill="rgb(245,77,24)" fg:x="183" fg:w="1"/><text x="14.9017%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6517%" y="725" width="0.0801%" height="15" fill="rgb(227,14,24)" fg:x="183" fg:w="1"/><text x="14.9017%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="14.7318%" y="757" width="0.0801%" height="15" fill="rgb(211,112,42)" fg:x="184" fg:w="1"/><text x="14.9818%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="14.7318%" y="741" width="0.0801%" height="15" fill="rgb(230,103,42)" fg:x="184" fg:w="1"/><text x="14.9818%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="14.7318%" y="725" width="0.0801%" height="15" fill="rgb(228,125,42)" fg:x="184" fg:w="1"/><text x="14.9818%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.8118%" y="709" width="0.0801%" height="15" fill="rgb(243,33,6)" fg:x="185" fg:w="1"/><text x="15.0618%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="14.8118%" y="757" width="0.1601%" height="15" fill="rgb(231,2,40)" fg:x="185" fg:w="2"/><text x="15.0618%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="14.8118%" y="741" width="0.1601%" height="15" fill="rgb(224,200,53)" fg:x="185" fg:w="2"/><text x="15.0618%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.8118%" y="725" width="0.1601%" height="15" fill="rgb(215,116,36)" fg:x="185" fg:w="2"/><text x="15.0618%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.8919%" y="709" width="0.0801%" height="15" fill="rgb(240,23,51)" fg:x="186" fg:w="1"/><text x="15.1419%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.8919%" y="693" width="0.0801%" height="15" fill="rgb(221,72,5)" fg:x="186" fg:w="1"/><text x="15.1419%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.8919%" y="677" width="0.0801%" height="15" fill="rgb(245,142,9)" fg:x="186" fg:w="1"/><text x="15.1419%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.8919%" y="661" width="0.0801%" height="15" fill="rgb(207,34,16)" fg:x="186" fg:w="1"/><text x="15.1419%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="14.9720%" y="757" width="0.0801%" height="15" fill="rgb(252,101,12)" fg:x="187" fg:w="1"/><text x="15.2220%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="14.9720%" y="741" width="0.0801%" height="15" fill="rgb(239,89,37)" fg:x="187" fg:w="1"/><text x="15.2220%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.9720%" y="725" width="0.0801%" height="15" fill="rgb(252,227,37)" fg:x="187" fg:w="1"/><text x="15.2220%" y="735.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.9720%" y="709" width="0.0801%" height="15" fill="rgb(212,164,17)" fg:x="187" fg:w="1"/><text x="15.2220%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.9720%" y="693" width="0.0801%" height="15" fill="rgb(240,86,13)" fg:x="187" fg:w="1"/><text x="15.2220%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.9720%" y="677" width="0.0801%" height="15" fill="rgb(233,183,32)" fg:x="187" fg:w="1"/><text x="15.2220%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.0520%" y="709" width="0.0801%" height="15" fill="rgb(205,201,38)" fg:x="188" fg:w="1"/><text x="15.3020%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.0520%" y="693" width="0.0801%" height="15" fill="rgb(210,122,38)" fg:x="188" fg:w="1"/><text x="15.3020%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0520%" y="677" width="0.0801%" height="15" fill="rgb(241,174,26)" fg:x="188" fg:w="1"/><text x="15.3020%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0520%" y="661" width="0.0801%" height="15" fill="rgb(219,89,7)" fg:x="188" fg:w="1"/><text x="15.3020%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0520%" y="645" width="0.0801%" height="15" fill="rgb(246,9,24)" fg:x="188" fg:w="1"/><text x="15.3020%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0520%" y="629" width="0.0801%" height="15" fill="rgb(205,132,21)" fg:x="188" fg:w="1"/><text x="15.3020%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0520%" y="613" width="0.0801%" height="15" fill="rgb(210,11,17)" fg:x="188" fg:w="1"/><text x="15.3020%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.0520%" y="597" width="0.0801%" height="15" fill="rgb(226,138,14)" fg:x="188" fg:w="1"/><text x="15.3020%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.0520%" y="581" width="0.0801%" height="15" fill="rgb(224,108,44)" fg:x="188" fg:w="1"/><text x="15.3020%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.0520%" y="565" width="0.0801%" height="15" fill="rgb(247,114,36)" fg:x="188" fg:w="1"/><text x="15.3020%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.0520%" y="549" width="0.0801%" height="15" fill="rgb(231,183,14)" fg:x="188" fg:w="1"/><text x="15.3020%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.0520%" y="533" width="0.0801%" height="15" fill="rgb(218,168,4)" fg:x="188" fg:w="1"/><text x="15.3020%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.0520%" y="517" width="0.0801%" height="15" fill="rgb(210,8,3)" fg:x="188" fg:w="1"/><text x="15.3020%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.0520%" y="501" width="0.0801%" height="15" fill="rgb(216,165,0)" fg:x="188" fg:w="1"/><text x="15.3020%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.0520%" y="485" width="0.0801%" height="15" fill="rgb(245,120,5)" fg:x="188" fg:w="1"/><text x="15.3020%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.0520%" y="469" width="0.0801%" height="15" fill="rgb(249,121,32)" fg:x="188" fg:w="1"/><text x="15.3020%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.0520%" y="453" width="0.0801%" height="15" fill="rgb(211,55,33)" fg:x="188" fg:w="1"/><text x="15.3020%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.0520%" y="437" width="0.0801%" height="15" fill="rgb(254,46,35)" fg:x="188" fg:w="1"/><text x="15.3020%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0520%" y="421" width="0.0801%" height="15" fill="rgb(213,213,19)" fg:x="188" fg:w="1"/><text x="15.3020%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.1321%" y="597" width="0.0801%" height="15" fill="rgb(207,152,44)" fg:x="189" fg:w="1"/><text x="15.3821%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="15.1321%" y="677" width="0.1601%" height="15" fill="rgb(227,195,36)" fg:x="189" fg:w="2"/><text x="15.3821%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="15.1321%" y="661" width="0.1601%" height="15" fill="rgb(210,137,36)" fg:x="189" fg:w="2"/><text x="15.3821%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="15.1321%" y="645" width="0.1601%" height="15" fill="rgb(253,47,47)" fg:x="189" fg:w="2"/><text x="15.3821%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="15.1321%" y="629" width="0.1601%" height="15" fill="rgb(230,147,18)" fg:x="189" fg:w="2"/><text x="15.3821%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="15.1321%" y="613" width="0.1601%" height="15" fill="rgb(247,33,49)" fg:x="189" fg:w="2"/><text x="15.3821%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.2122%" y="597" width="0.0801%" height="15" fill="rgb(239,26,29)" fg:x="190" fg:w="1"/><text x="15.4622%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.2122%" y="581" width="0.0801%" height="15" fill="rgb(245,145,52)" fg:x="190" fg:w="1"/><text x="15.4622%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="14.7318%" y="773" width="0.6405%" height="15" fill="rgb(224,139,32)" fg:x="184" fg:w="8"/><text x="14.9818%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="15.0520%" y="757" width="0.3203%" height="15" fill="rgb(238,202,19)" fg:x="188" fg:w="4"/><text x="15.3020%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="15.0520%" y="741" width="0.3203%" height="15" fill="rgb(249,211,53)" fg:x="188" fg:w="4"/><text x="15.3020%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="15.0520%" y="725" width="0.3203%" height="15" fill="rgb(237,229,33)" fg:x="188" fg:w="4"/><text x="15.3020%" y="735.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="15.1321%" y="709" width="0.2402%" height="15" fill="rgb(208,97,40)" fg:x="189" fg:w="3"/><text x="15.3821%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="15.1321%" y="693" width="0.2402%" height="15" fill="rgb(254,36,16)" fg:x="189" fg:w="3"/><text x="15.3821%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="15.2922%" y="677" width="0.0801%" height="15" fill="rgb(221,7,12)" fg:x="191" fg:w="1"/><text x="15.5422%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.2922%" y="661" width="0.0801%" height="15" fill="rgb(205,11,12)" fg:x="191" fg:w="1"/><text x="15.5422%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="15.2922%" y="645" width="0.0801%" height="15" fill="rgb(227,72,28)" fg:x="191" fg:w="1"/><text x="15.5422%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.2922%" y="629" width="0.0801%" height="15" fill="rgb(228,7,34)" fg:x="191" fg:w="1"/><text x="15.5422%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.2922%" y="613" width="0.0801%" height="15" fill="rgb(230,52,42)" fg:x="191" fg:w="1"/><text x="15.5422%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="15.2922%" y="597" width="0.0801%" height="15" fill="rgb(219,177,53)" fg:x="191" fg:w="1"/><text x="15.5422%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="15.2922%" y="581" width="0.0801%" height="15" fill="rgb(243,196,34)" fg:x="191" fg:w="1"/><text x="15.5422%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="15.3723%" y="773" width="0.0801%" height="15" fill="rgb(213,66,49)" fg:x="192" fg:w="1"/><text x="15.6223%" y="783.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="15.3723%" y="757" width="0.0801%" height="15" fill="rgb(233,11,50)" fg:x="192" fg:w="1"/><text x="15.6223%" y="767.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="15.4524%" y="709" width="0.0801%" height="15" fill="rgb(235,190,6)" fg:x="193" fg:w="1"/><text x="15.7024%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5324%" y="677" width="0.0801%" height="15" fill="rgb(212,64,44)" fg:x="194" fg:w="1"/><text x="15.7824%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5324%" y="661" width="0.0801%" height="15" fill="rgb(206,95,44)" fg:x="194" fg:w="1"/><text x="15.7824%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="15.4524%" y="725" width="0.2402%" height="15" fill="rgb(227,136,25)" fg:x="193" fg:w="3"/><text x="15.7024%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="15.5324%" y="709" width="0.1601%" height="15" fill="rgb(206,178,17)" fg:x="194" fg:w="2"/><text x="15.7824%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="15.5324%" y="693" width="0.1601%" height="15" fill="rgb(208,168,35)" fg:x="194" fg:w="2"/><text x="15.7824%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.6125%" y="677" width="0.0801%" height="15" fill="rgb(213,210,40)" fg:x="195" fg:w="1"/><text x="15.8625%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.6125%" y="661" width="0.0801%" height="15" fill="rgb(236,60,6)" fg:x="195" fg:w="1"/><text x="15.8625%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.6125%" y="645" width="0.0801%" height="15" fill="rgb(220,186,36)" fg:x="195" fg:w="1"/><text x="15.8625%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.6125%" y="629" width="0.0801%" height="15" fill="rgb(225,120,49)" fg:x="195" fg:w="1"/><text x="15.8625%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.8527%" y="581" width="0.0801%" height="15" fill="rgb(250,115,20)" fg:x="198" fg:w="1"/><text x="16.1027%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.8527%" y="565" width="0.0801%" height="15" fill="rgb(207,214,23)" fg:x="198" fg:w="1"/><text x="16.1027%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (24 samples, 1.92%)</title><rect x="14.0913%" y="837" width="1.9215%" height="15" fill="rgb(240,9,18)" fg:x="176" fg:w="24"/><text x="14.3413%" y="847.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 1.84%)</title><rect x="14.1713%" y="821" width="1.8415%" height="15" fill="rgb(232,170,48)" fg:x="177" fg:w="23"/><text x="14.4213%" y="831.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (23 samples, 1.84%)</title><rect x="14.1713%" y="805" width="1.8415%" height="15" fill="rgb(236,149,23)" fg:x="177" fg:w="23"/><text x="14.4213%" y="815.50">p..</text></g><g><title>plugins_core::build::Build::leads_to (16 samples, 1.28%)</title><rect x="14.7318%" y="789" width="1.2810%" height="15" fill="rgb(210,125,42)" fg:x="184" fg:w="16"/><text x="14.9818%" y="799.50"></text></g><g><title>plugins_core::tools::leads_to (7 samples, 0.56%)</title><rect x="15.4524%" y="773" width="0.5604%" height="15" fill="rgb(207,201,52)" fg:x="193" fg:w="7"/><text x="15.7024%" y="783.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="15.4524%" y="757" width="0.5604%" height="15" fill="rgb(250,187,37)" fg:x="193" fg:w="7"/><text x="15.7024%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="15.4524%" y="741" width="0.5604%" height="15" fill="rgb(214,186,2)" fg:x="193" fg:w="7"/><text x="15.7024%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="15.6926%" y="725" width="0.3203%" height="15" fill="rgb(207,189,15)" fg:x="196" fg:w="4"/><text x="15.9426%" y="735.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="15.6926%" y="709" width="0.3203%" height="15" fill="rgb(221,99,21)" fg:x="196" fg:w="4"/><text x="15.9426%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="15.6926%" y="693" width="0.3203%" height="15" fill="rgb(212,67,18)" fg:x="196" fg:w="4"/><text x="15.9426%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="15.7726%" y="677" width="0.2402%" height="15" fill="rgb(226,24,24)" fg:x="197" fg:w="3"/><text x="16.0226%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="15.7726%" y="661" width="0.2402%" height="15" fill="rgb(252,123,31)" fg:x="197" fg:w="3"/><text x="16.0226%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="15.7726%" y="645" width="0.2402%" height="15" fill="rgb(251,227,47)" fg:x="197" fg:w="3"/><text x="16.0226%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="15.7726%" y="629" width="0.2402%" height="15" fill="rgb(233,84,53)" fg:x="197" fg:w="3"/><text x="16.0226%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="15.7726%" y="613" width="0.2402%" height="15" fill="rgb(228,57,19)" fg:x="197" fg:w="3"/><text x="16.0226%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="15.7726%" y="597" width="0.2402%" height="15" fill="rgb(251,81,5)" fg:x="197" fg:w="3"/><text x="16.0226%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.9327%" y="581" width="0.0801%" height="15" fill="rgb(236,211,27)" fg:x="199" fg:w="1"/><text x="16.1827%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9327%" y="565" width="0.0801%" height="15" fill="rgb(218,21,6)" fg:x="199" fg:w="1"/><text x="16.1827%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.9327%" y="549" width="0.0801%" height="15" fill="rgb(239,104,19)" fg:x="199" fg:w="1"/><text x="16.1827%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.9327%" y="533" width="0.0801%" height="15" fill="rgb(234,179,27)" fg:x="199" fg:w="1"/><text x="16.1827%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="16.0128%" y="821" width="0.0801%" height="15" fill="rgb(221,154,39)" fg:x="200" fg:w="1"/><text x="16.2628%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.0128%" y="805" width="0.0801%" height="15" fill="rgb(228,190,1)" fg:x="200" fg:w="1"/><text x="16.2628%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.0128%" y="789" width="0.0801%" height="15" fill="rgb(244,122,33)" fg:x="200" fg:w="1"/><text x="16.2628%" y="799.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="16.0929%" y="805" width="0.0801%" height="15" fill="rgb(227,56,37)" fg:x="201" fg:w="1"/><text x="16.3429%" y="815.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="16.1729%" y="773" width="0.0801%" height="15" fill="rgb(207,158,16)" fg:x="202" fg:w="1"/><text x="16.4229%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="16.1729%" y="757" width="0.0801%" height="15" fill="rgb(251,222,30)" fg:x="202" fg:w="1"/><text x="16.4229%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="16.1729%" y="741" width="0.0801%" height="15" fill="rgb(240,22,49)" fg:x="202" fg:w="1"/><text x="16.4229%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.1729%" y="725" width="0.0801%" height="15" fill="rgb(224,207,37)" fg:x="202" fg:w="1"/><text x="16.4229%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="16.3331%" y="709" width="0.2402%" height="15" fill="rgb(249,188,40)" fg:x="204" fg:w="3"/><text x="16.5831%" y="719.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="16.3331%" y="693" width="0.2402%" height="15" fill="rgb(254,141,11)" fg:x="204" fg:w="3"/><text x="16.5831%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.4131%" y="677" width="0.1601%" height="15" fill="rgb(231,177,6)" fg:x="205" fg:w="2"/><text x="16.6631%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.4932%" y="661" width="0.0801%" height="15" fill="rgb(241,6,16)" fg:x="206" fg:w="1"/><text x="16.7432%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="16.3331%" y="725" width="0.3203%" height="15" fill="rgb(230,50,14)" fg:x="204" fg:w="4"/><text x="16.5831%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.5733%" y="709" width="0.0801%" height="15" fill="rgb(254,36,3)" fg:x="207" fg:w="1"/><text x="16.8233%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.6533%" y="709" width="0.1601%" height="15" fill="rgb(226,149,37)" fg:x="208" fg:w="2"/><text x="16.9033%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.7334%" y="693" width="0.0801%" height="15" fill="rgb(253,49,27)" fg:x="209" fg:w="1"/><text x="16.9834%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="16.8935%" y="693" width="0.0801%" height="15" fill="rgb(249,182,52)" fg:x="211" fg:w="1"/><text x="17.1435%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="16.9736%" y="693" width="0.0801%" height="15" fill="rgb(223,42,15)" fg:x="212" fg:w="1"/><text x="17.2236%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="16.9736%" y="677" width="0.0801%" height="15" fill="rgb(232,31,42)" fg:x="212" fg:w="1"/><text x="17.2236%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="16.9736%" y="661" width="0.0801%" height="15" fill="rgb(233,56,46)" fg:x="212" fg:w="1"/><text x="17.2236%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.9736%" y="645" width="0.0801%" height="15" fill="rgb(241,143,21)" fg:x="212" fg:w="1"/><text x="17.2236%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="17.0536%" y="693" width="0.2402%" height="15" fill="rgb(251,222,15)" fg:x="213" fg:w="3"/><text x="17.3036%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="17.0536%" y="677" width="0.2402%" height="15" fill="rgb(242,101,40)" fg:x="213" fg:w="3"/><text x="17.3036%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.2138%" y="661" width="0.0801%" height="15" fill="rgb(247,60,44)" fg:x="215" fg:w="1"/><text x="17.4638%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.2138%" y="645" width="0.0801%" height="15" fill="rgb(254,48,47)" fg:x="215" fg:w="1"/><text x="17.4638%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.4540%" y="677" width="0.0801%" height="15" fill="rgb(253,30,33)" fg:x="218" fg:w="1"/><text x="17.7040%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.4540%" y="661" width="0.0801%" height="15" fill="rgb(253,214,47)" fg:x="218" fg:w="1"/><text x="17.7040%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.4540%" y="645" width="0.0801%" height="15" fill="rgb(241,108,29)" fg:x="218" fg:w="1"/><text x="17.7040%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="17.6141%" y="661" width="0.1601%" height="15" fill="rgb(240,36,2)" fg:x="220" fg:w="2"/><text x="17.8641%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.6141%" y="645" width="0.1601%" height="15" fill="rgb(243,198,24)" fg:x="220" fg:w="2"/><text x="17.8641%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.6942%" y="629" width="0.0801%" height="15" fill="rgb(225,98,27)" fg:x="221" fg:w="1"/><text x="17.9442%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.6942%" y="613" width="0.0801%" height="15" fill="rgb(208,86,30)" fg:x="221" fg:w="1"/><text x="17.9442%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="17.7742%" y="645" width="0.1601%" height="15" fill="rgb(242,157,11)" fg:x="222" fg:w="2"/><text x="18.0242%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.7742%" y="629" width="0.1601%" height="15" fill="rgb(244,84,16)" fg:x="222" fg:w="2"/><text x="18.0242%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.8543%" y="613" width="0.0801%" height="15" fill="rgb(247,20,46)" fg:x="223" fg:w="1"/><text x="18.1043%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="17.8543%" y="597" width="0.0801%" height="15" fill="rgb(240,157,20)" fg:x="223" fg:w="1"/><text x="18.1043%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.9343%" y="629" width="0.0801%" height="15" fill="rgb(212,151,38)" fg:x="224" fg:w="1"/><text x="18.1843%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.9343%" y="613" width="0.0801%" height="15" fill="rgb(233,197,14)" fg:x="224" fg:w="1"/><text x="18.1843%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="17.9343%" y="645" width="0.1601%" height="15" fill="rgb(226,148,28)" fg:x="224" fg:w="2"/><text x="18.1843%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.0144%" y="629" width="0.0801%" height="15" fill="rgb(244,141,30)" fg:x="225" fg:w="1"/><text x="18.2644%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.36%)</title><rect x="16.8135%" y="709" width="1.3611%" height="15" fill="rgb(215,73,38)" fg:x="210" fg:w="17"/><text x="17.0635%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="17.2938%" y="693" width="0.8807%" height="15" fill="rgb(230,148,29)" fg:x="216" fg:w="11"/><text x="17.5438%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="17.5340%" y="677" width="0.6405%" height="15" fill="rgb(250,41,52)" fg:x="219" fg:w="8"/><text x="17.7840%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="17.7742%" y="661" width="0.4003%" height="15" fill="rgb(215,48,1)" fg:x="222" fg:w="5"/><text x="18.0242%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.0945%" y="645" width="0.0801%" height="15" fill="rgb(205,223,38)" fg:x="226" fg:w="1"/><text x="18.3445%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (26 samples, 2.08%)</title><rect x="16.2530%" y="741" width="2.0817%" height="15" fill="rgb(213,51,8)" fg:x="203" fg:w="26"/><text x="16.5030%" y="751.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.68%)</title><rect x="16.6533%" y="725" width="1.6813%" height="15" fill="rgb(248,53,11)" fg:x="208" fg:w="21"/><text x="16.9033%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="18.1745%" y="709" width="0.1601%" height="15" fill="rgb(218,140,4)" fg:x="227" fg:w="2"/><text x="18.4245%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="18.1745%" y="693" width="0.1601%" height="15" fill="rgb(248,161,31)" fg:x="227" fg:w="2"/><text x="18.4245%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="18.1745%" y="677" width="0.1601%" height="15" fill="rgb(239,88,32)" fg:x="227" fg:w="2"/><text x="18.4245%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="18.1745%" y="661" width="0.1601%" height="15" fill="rgb(234,14,28)" fg:x="227" fg:w="2"/><text x="18.4245%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="18.1745%" y="645" width="0.1601%" height="15" fill="rgb(235,173,11)" fg:x="227" fg:w="2"/><text x="18.4245%" y="655.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="18.1745%" y="629" width="0.1601%" height="15" fill="rgb(222,70,2)" fg:x="227" fg:w="2"/><text x="18.4245%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="18.3347%" y="709" width="0.1601%" height="15" fill="rgb(228,196,41)" fg:x="229" fg:w="2"/><text x="18.5847%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.4948%" y="693" width="0.0801%" height="15" fill="rgb(249,19,9)" fg:x="231" fg:w="1"/><text x="18.7448%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.5749%" y="693" width="0.0801%" height="15" fill="rgb(221,16,43)" fg:x="232" fg:w="1"/><text x="18.8249%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.5749%" y="677" width="0.0801%" height="15" fill="rgb(225,207,6)" fg:x="232" fg:w="1"/><text x="18.8249%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="18.3347%" y="741" width="0.4003%" height="15" fill="rgb(249,32,32)" fg:x="229" fg:w="5"/><text x="18.5847%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="18.3347%" y="725" width="0.4003%" height="15" fill="rgb(232,163,43)" fg:x="229" fg:w="5"/><text x="18.5847%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="18.4948%" y="709" width="0.2402%" height="15" fill="rgb(236,158,54)" fg:x="231" fg:w="3"/><text x="18.7448%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.6549%" y="693" width="0.0801%" height="15" fill="rgb(205,126,44)" fg:x="233" fg:w="1"/><text x="18.9049%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.6549%" y="677" width="0.0801%" height="15" fill="rgb(210,162,12)" fg:x="233" fg:w="1"/><text x="18.9049%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.6549%" y="661" width="0.0801%" height="15" fill="rgb(218,156,48)" fg:x="233" fg:w="1"/><text x="18.9049%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="18.7350%" y="693" width="0.2402%" height="15" fill="rgb(248,210,3)" fg:x="234" fg:w="3"/><text x="18.9850%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="18.7350%" y="677" width="0.2402%" height="15" fill="rgb(212,43,27)" fg:x="234" fg:w="3"/><text x="18.9850%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="18.8951%" y="661" width="0.0801%" height="15" fill="rgb(241,52,6)" fg:x="236" fg:w="1"/><text x="19.1451%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="18.9752%" y="693" width="0.0801%" height="15" fill="rgb(222,178,35)" fg:x="237" fg:w="1"/><text x="19.2252%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="19.1353%" y="661" width="0.0801%" height="15" fill="rgb(205,121,46)" fg:x="239" fg:w="1"/><text x="19.3853%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.2154%" y="645" width="0.0801%" height="15" fill="rgb(249,67,1)" fg:x="240" fg:w="1"/><text x="19.4654%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.2154%" y="629" width="0.0801%" height="15" fill="rgb(238,168,42)" fg:x="240" fg:w="1"/><text x="19.4654%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.2154%" y="613" width="0.0801%" height="15" fill="rgb(205,36,48)" fg:x="240" fg:w="1"/><text x="19.4654%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.2954%" y="613" width="0.0801%" height="15" fill="rgb(240,85,12)" fg:x="241" fg:w="1"/><text x="19.5454%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.2954%" y="597" width="0.0801%" height="15" fill="rgb(245,27,39)" fg:x="241" fg:w="1"/><text x="19.5454%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.4556%" y="549" width="0.0801%" height="15" fill="rgb(218,129,34)" fg:x="243" fg:w="1"/><text x="19.7056%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="19.3755%" y="565" width="0.3203%" height="15" fill="rgb(221,157,12)" fg:x="242" fg:w="4"/><text x="19.6255%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="19.5356%" y="549" width="0.1601%" height="15" fill="rgb(213,206,20)" fg:x="244" fg:w="2"/><text x="19.7856%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.6157%" y="533" width="0.0801%" height="15" fill="rgb(227,115,30)" fg:x="245" fg:w="1"/><text x="19.8657%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.6157%" y="517" width="0.0801%" height="15" fill="rgb(221,40,47)" fg:x="245" fg:w="1"/><text x="19.8657%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.6157%" y="501" width="0.0801%" height="15" fill="rgb(239,96,49)" fg:x="245" fg:w="1"/><text x="19.8657%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.6157%" y="485" width="0.0801%" height="15" fill="rgb(223,24,38)" fg:x="245" fg:w="1"/><text x="19.8657%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="19.3755%" y="597" width="0.4804%" height="15" fill="rgb(242,35,45)" fg:x="242" fg:w="6"/><text x="19.6255%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="19.3755%" y="581" width="0.4804%" height="15" fill="rgb(236,20,9)" fg:x="242" fg:w="6"/><text x="19.6255%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.6958%" y="565" width="0.1601%" height="15" fill="rgb(239,124,8)" fg:x="246" fg:w="2"/><text x="19.9458%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="19.2954%" y="629" width="0.6405%" height="15" fill="rgb(228,92,29)" fg:x="241" fg:w="8"/><text x="19.5454%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="19.3755%" y="613" width="0.5604%" height="15" fill="rgb(251,53,39)" fg:x="242" fg:w="7"/><text x="19.6255%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.8559%" y="597" width="0.0801%" height="15" fill="rgb(224,44,10)" fg:x="248" fg:w="1"/><text x="20.1059%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="19.2154%" y="661" width="0.8006%" height="15" fill="rgb(254,10,15)" fg:x="240" fg:w="10"/><text x="19.4654%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="19.2954%" y="645" width="0.7206%" height="15" fill="rgb(245,173,6)" fg:x="241" fg:w="9"/><text x="19.5454%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.9359%" y="629" width="0.0801%" height="15" fill="rgb(228,74,0)" fg:x="249" fg:w="1"/><text x="20.1859%" y="639.50"></text></g><g><title>engine::session::Session::flush (53 samples, 4.24%)</title><rect x="16.0128%" y="837" width="4.2434%" height="15" fill="rgb(206,138,29)" fg:x="200" fg:w="53"/><text x="16.2628%" y="847.50">engin..</text></g><g><title>engine::session::Session::save_changes (52 samples, 4.16%)</title><rect x="16.0929%" y="821" width="4.1633%" height="15" fill="rgb(253,27,43)" fg:x="201" fg:w="52"/><text x="16.3429%" y="831.50">engin..</text></g><g><title>engine::session::state::State::close (51 samples, 4.08%)</title><rect x="16.1729%" y="805" width="4.0833%" height="15" fill="rgb(231,73,0)" fg:x="202" fg:w="51"/><text x="16.4229%" y="815.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (51 samples, 4.08%)</title><rect x="16.1729%" y="789" width="4.0833%" height="15" fill="rgb(218,9,23)" fg:x="202" fg:w="51"/><text x="16.4229%" y="799.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (50 samples, 4.00%)</title><rect x="16.2530%" y="773" width="4.0032%" height="15" fill="rgb(251,55,29)" fg:x="203" fg:w="50"/><text x="16.5030%" y="783.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (50 samples, 4.00%)</title><rect x="16.2530%" y="757" width="4.0032%" height="15" fill="rgb(223,180,22)" fg:x="203" fg:w="50"/><text x="16.5030%" y="767.50">engi..</text></g><g><title>kernel::model::any_entity_changes (19 samples, 1.52%)</title><rect x="18.7350%" y="741" width="1.5212%" height="15" fill="rgb(223,29,21)" fg:x="234" fg:w="19"/><text x="18.9850%" y="751.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.52%)</title><rect x="18.7350%" y="725" width="1.5212%" height="15" fill="rgb(251,103,37)" fg:x="234" fg:w="19"/><text x="18.9850%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.52%)</title><rect x="18.7350%" y="709" width="1.5212%" height="15" fill="rgb(214,11,21)" fg:x="234" fg:w="19"/><text x="18.9850%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.20%)</title><rect x="19.0552%" y="693" width="1.2010%" height="15" fill="rgb(205,137,13)" fg:x="238" fg:w="15"/><text x="19.3052%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.12%)</title><rect x="19.1353%" y="677" width="1.1209%" height="15" fill="rgb(225,58,47)" fg:x="239" fg:w="14"/><text x="19.3853%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="20.0160%" y="661" width="0.2402%" height="15" fill="rgb(222,197,14)" fg:x="250" fg:w="3"/><text x="20.2660%" y="671.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="20.0160%" y="645" width="0.2402%" height="15" fill="rgb(215,210,33)" fg:x="250" fg:w="3"/><text x="20.2660%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="20.2562%" y="837" width="0.0801%" height="15" fill="rgb(242,13,9)" fg:x="253" fg:w="1"/><text x="20.5062%" y="847.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="20.2562%" y="821" width="0.0801%" height="15" fill="rgb(218,31,39)" fg:x="253" fg:w="1"/><text x="20.5062%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="20.2562%" y="805" width="0.0801%" height="15" fill="rgb(211,214,23)" fg:x="253" fg:w="1"/><text x="20.5062%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="20.2562%" y="789" width="0.0801%" height="15" fill="rgb(237,92,14)" fg:x="253" fg:w="1"/><text x="20.5062%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.2562%" y="773" width="0.0801%" height="15" fill="rgb(220,78,5)" fg:x="253" fg:w="1"/><text x="20.5062%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.2562%" y="757" width="0.0801%" height="15" fill="rgb(237,23,21)" fg:x="253" fg:w="1"/><text x="20.5062%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.4163%" y="597" width="0.0801%" height="15" fill="rgb(251,207,51)" fg:x="255" fg:w="1"/><text x="20.6663%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.4163%" y="581" width="0.0801%" height="15" fill="rgb(249,206,18)" fg:x="255" fg:w="1"/><text x="20.6663%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="20.4163%" y="565" width="0.0801%" height="15" fill="rgb(236,20,19)" fg:x="255" fg:w="1"/><text x="20.6663%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="20.4163%" y="549" width="0.0801%" height="15" fill="rgb(214,227,29)" fg:x="255" fg:w="1"/><text x="20.6663%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="20.4163%" y="533" width="0.0801%" height="15" fill="rgb(209,183,4)" fg:x="255" fg:w="1"/><text x="20.6663%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="20.4163%" y="517" width="0.0801%" height="15" fill="rgb(233,111,23)" fg:x="255" fg:w="1"/><text x="20.6663%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="20.4163%" y="501" width="0.0801%" height="15" fill="rgb(238,121,27)" fg:x="255" fg:w="1"/><text x="20.6663%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="20.4163%" y="485" width="0.0801%" height="15" fill="rgb(236,120,41)" fg:x="255" fg:w="1"/><text x="20.6663%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.4163%" y="469" width="0.0801%" height="15" fill="rgb(241,143,10)" fg:x="255" fg:w="1"/><text x="20.6663%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="20.4163%" y="453" width="0.0801%" height="15" fill="rgb(224,86,31)" fg:x="255" fg:w="1"/><text x="20.6663%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.4163%" y="437" width="0.0801%" height="15" fill="rgb(236,212,27)" fg:x="255" fg:w="1"/><text x="20.6663%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.4163%" y="421" width="0.0801%" height="15" fill="rgb(219,43,51)" fg:x="255" fg:w="1"/><text x="20.6663%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="20.3363%" y="805" width="0.2402%" height="15" fill="rgb(232,216,8)" fg:x="254" fg:w="3"/><text x="20.5863%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="20.3363%" y="789" width="0.2402%" height="15" fill="rgb(206,222,39)" fg:x="254" fg:w="3"/><text x="20.5863%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="20.4163%" y="773" width="0.1601%" height="15" fill="rgb(209,149,48)" fg:x="255" fg:w="2"/><text x="20.6663%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="20.4163%" y="757" width="0.1601%" height="15" fill="rgb(229,155,21)" fg:x="255" fg:w="2"/><text x="20.6663%" y="767.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="20.4163%" y="741" width="0.1601%" height="15" fill="rgb(246,152,26)" fg:x="255" fg:w="2"/><text x="20.6663%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="20.4163%" y="725" width="0.1601%" height="15" fill="rgb(206,70,42)" fg:x="255" fg:w="2"/><text x="20.6663%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="20.4163%" y="709" width="0.1601%" height="15" fill="rgb(236,9,11)" fg:x="255" fg:w="2"/><text x="20.6663%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="20.4163%" y="693" width="0.1601%" height="15" fill="rgb(238,145,47)" fg:x="255" fg:w="2"/><text x="20.6663%" y="703.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="20.4163%" y="677" width="0.1601%" height="15" fill="rgb(252,189,7)" fg:x="255" fg:w="2"/><text x="20.6663%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="20.4163%" y="661" width="0.1601%" height="15" fill="rgb(254,168,51)" fg:x="255" fg:w="2"/><text x="20.6663%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="20.4163%" y="645" width="0.1601%" height="15" fill="rgb(227,105,46)" fg:x="255" fg:w="2"/><text x="20.6663%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="20.4163%" y="629" width="0.1601%" height="15" fill="rgb(227,74,30)" fg:x="255" fg:w="2"/><text x="20.6663%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="20.4163%" y="613" width="0.1601%" height="15" fill="rgb(206,212,44)" fg:x="255" fg:w="2"/><text x="20.6663%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="20.4964%" y="597" width="0.0801%" height="15" fill="rgb(252,69,11)" fg:x="256" fg:w="1"/><text x="20.7464%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="20.4964%" y="581" width="0.0801%" height="15" fill="rgb(239,116,0)" fg:x="256" fg:w="1"/><text x="20.7464%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="20.4964%" y="565" width="0.0801%" height="15" fill="rgb(246,189,23)" fg:x="256" fg:w="1"/><text x="20.7464%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="20.4964%" y="549" width="0.0801%" height="15" fill="rgb(229,50,41)" fg:x="256" fg:w="1"/><text x="20.7464%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="20.4964%" y="533" width="0.0801%" height="15" fill="rgb(214,66,37)" fg:x="256" fg:w="1"/><text x="20.7464%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.4964%" y="517" width="0.0801%" height="15" fill="rgb(226,28,6)" fg:x="256" fg:w="1"/><text x="20.7464%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.4964%" y="501" width="0.0801%" height="15" fill="rgb(239,154,0)" fg:x="256" fg:w="1"/><text x="20.7464%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="20.4964%" y="485" width="0.0801%" height="15" fill="rgb(233,97,11)" fg:x="256" fg:w="1"/><text x="20.7464%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="20.4964%" y="469" width="0.0801%" height="15" fill="rgb(236,215,16)" fg:x="256" fg:w="1"/><text x="20.7464%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="20.4964%" y="453" width="0.0801%" height="15" fill="rgb(246,188,29)" fg:x="256" fg:w="1"/><text x="20.7464%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="20.4964%" y="437" width="0.0801%" height="15" fill="rgb(207,7,29)" fg:x="256" fg:w="1"/><text x="20.7464%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="20.4964%" y="421" width="0.0801%" height="15" fill="rgb(238,112,43)" fg:x="256" fg:w="1"/><text x="20.7464%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="20.4964%" y="405" width="0.0801%" height="15" fill="rgb(230,110,32)" fg:x="256" fg:w="1"/><text x="20.7464%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.4964%" y="389" width="0.0801%" height="15" fill="rgb(218,197,32)" fg:x="256" fg:w="1"/><text x="20.7464%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="20.4964%" y="373" width="0.0801%" height="15" fill="rgb(252,61,9)" fg:x="256" fg:w="1"/><text x="20.7464%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.4964%" y="357" width="0.0801%" height="15" fill="rgb(244,140,14)" fg:x="256" fg:w="1"/><text x="20.7464%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="20.4964%" y="341" width="0.0801%" height="15" fill="rgb(216,14,47)" fg:x="256" fg:w="1"/><text x="20.7464%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="20.4964%" y="325" width="0.0801%" height="15" fill="rgb(224,130,52)" fg:x="256" fg:w="1"/><text x="20.7464%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="20.4964%" y="309" width="0.0801%" height="15" fill="rgb(210,229,51)" fg:x="256" fg:w="1"/><text x="20.7464%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="20.4964%" y="293" width="0.0801%" height="15" fill="rgb(242,13,9)" fg:x="256" fg:w="1"/><text x="20.7464%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.6565%" y="757" width="0.1601%" height="15" fill="rgb(252,71,50)" fg:x="258" fg:w="2"/><text x="20.9065%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.6565%" y="741" width="0.1601%" height="15" fill="rgb(218,225,6)" fg:x="258" fg:w="2"/><text x="20.9065%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.6565%" y="725" width="0.1601%" height="15" fill="rgb(219,27,35)" fg:x="258" fg:w="2"/><text x="20.9065%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.6565%" y="709" width="0.1601%" height="15" fill="rgb(226,30,1)" fg:x="258" fg:w="2"/><text x="20.9065%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.6565%" y="693" width="0.1601%" height="15" fill="rgb(227,164,34)" fg:x="258" fg:w="2"/><text x="20.9065%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7366%" y="677" width="0.0801%" height="15" fill="rgb(206,103,4)" fg:x="259" fg:w="1"/><text x="20.9866%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.7366%" y="661" width="0.0801%" height="15" fill="rgb(214,166,19)" fg:x="259" fg:w="1"/><text x="20.9866%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.7366%" y="645" width="0.0801%" height="15" fill="rgb(240,56,20)" fg:x="259" fg:w="1"/><text x="20.9866%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.7366%" y="629" width="0.0801%" height="15" fill="rgb(224,25,3)" fg:x="259" fg:w="1"/><text x="20.9866%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.7366%" y="613" width="0.0801%" height="15" fill="rgb(216,206,54)" fg:x="259" fg:w="1"/><text x="20.9866%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7366%" y="597" width="0.0801%" height="15" fill="rgb(225,142,10)" fg:x="259" fg:w="1"/><text x="20.9866%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.7366%" y="581" width="0.0801%" height="15" fill="rgb(246,9,18)" fg:x="259" fg:w="1"/><text x="20.9866%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.7366%" y="565" width="0.0801%" height="15" fill="rgb(247,140,18)" fg:x="259" fg:w="1"/><text x="20.9866%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.7366%" y="549" width="0.0801%" height="15" fill="rgb(239,184,22)" fg:x="259" fg:w="1"/><text x="20.9866%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.7366%" y="533" width="0.0801%" height="15" fill="rgb(227,94,44)" fg:x="259" fg:w="1"/><text x="20.9866%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.7366%" y="517" width="0.0801%" height="15" fill="rgb(219,43,3)" fg:x="259" fg:w="1"/><text x="20.9866%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.7366%" y="501" width="0.0801%" height="15" fill="rgb(210,76,31)" fg:x="259" fg:w="1"/><text x="20.9866%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="20.5765%" y="805" width="0.3203%" height="15" fill="rgb(225,85,12)" fg:x="257" fg:w="4"/><text x="20.8265%" y="815.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="20.5765%" y="789" width="0.3203%" height="15" fill="rgb(214,191,28)" fg:x="257" fg:w="4"/><text x="20.8265%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="20.5765%" y="773" width="0.3203%" height="15" fill="rgb(214,43,14)" fg:x="257" fg:w="4"/><text x="20.8265%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.8167%" y="757" width="0.0801%" height="15" fill="rgb(253,117,5)" fg:x="260" fg:w="1"/><text x="21.0667%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.8167%" y="741" width="0.0801%" height="15" fill="rgb(208,124,26)" fg:x="260" fg:w="1"/><text x="21.0667%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.8167%" y="725" width="0.0801%" height="15" fill="rgb(228,208,39)" fg:x="260" fg:w="1"/><text x="21.0667%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.8167%" y="709" width="0.0801%" height="15" fill="rgb(206,180,39)" fg:x="260" fg:w="1"/><text x="21.0667%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.8167%" y="693" width="0.0801%" height="15" fill="rgb(205,111,37)" fg:x="260" fg:w="1"/><text x="21.0667%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.8167%" y="677" width="0.0801%" height="15" fill="rgb(208,121,24)" fg:x="260" fg:w="1"/><text x="21.0667%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.8167%" y="661" width="0.0801%" height="15" fill="rgb(218,215,32)" fg:x="260" fg:w="1"/><text x="21.0667%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.8167%" y="645" width="0.0801%" height="15" fill="rgb(244,168,53)" fg:x="260" fg:w="1"/><text x="21.0667%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="20.8967%" y="805" width="0.0801%" height="15" fill="rgb(214,9,36)" fg:x="261" fg:w="1"/><text x="21.1467%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.8967%" y="789" width="0.0801%" height="15" fill="rgb(231,4,34)" fg:x="261" fg:w="1"/><text x="21.1467%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="20.9768%" y="789" width="0.0801%" height="15" fill="rgb(210,83,51)" fg:x="262" fg:w="1"/><text x="21.2268%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.9768%" y="773" width="0.0801%" height="15" fill="rgb(224,112,1)" fg:x="262" fg:w="1"/><text x="21.2268%" y="783.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.9768%" y="757" width="0.0801%" height="15" fill="rgb(216,33,41)" fg:x="262" fg:w="1"/><text x="21.2268%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.9768%" y="741" width="0.0801%" height="15" fill="rgb(215,179,42)" fg:x="262" fg:w="1"/><text x="21.2268%" y="751.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="20.9768%" y="805" width="0.2402%" height="15" fill="rgb(205,81,48)" fg:x="262" fg:w="3"/><text x="21.2268%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="21.0568%" y="789" width="0.1601%" height="15" fill="rgb(246,17,30)" fg:x="263" fg:w="2"/><text x="21.3068%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="21.0568%" y="773" width="0.1601%" height="15" fill="rgb(226,19,16)" fg:x="263" fg:w="2"/><text x="21.3068%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="21.1369%" y="757" width="0.0801%" height="15" fill="rgb(207,3,14)" fg:x="264" fg:w="1"/><text x="21.3869%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="21.2970%" y="757" width="0.0801%" height="15" fill="rgb(226,77,12)" fg:x="266" fg:w="1"/><text x="21.5470%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.2970%" y="741" width="0.0801%" height="15" fill="rgb(226,76,25)" fg:x="266" fg:w="1"/><text x="21.5470%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.2970%" y="725" width="0.0801%" height="15" fill="rgb(217,216,25)" fg:x="266" fg:w="1"/><text x="21.5470%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.2970%" y="709" width="0.0801%" height="15" fill="rgb(247,127,42)" fg:x="266" fg:w="1"/><text x="21.5470%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.3771%" y="725" width="0.0801%" height="15" fill="rgb(226,10,34)" fg:x="267" fg:w="1"/><text x="21.6271%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.3771%" y="709" width="0.0801%" height="15" fill="rgb(249,78,0)" fg:x="267" fg:w="1"/><text x="21.6271%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.3771%" y="693" width="0.0801%" height="15" fill="rgb(226,218,38)" fg:x="267" fg:w="1"/><text x="21.6271%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.3771%" y="677" width="0.0801%" height="15" fill="rgb(240,92,1)" fg:x="267" fg:w="1"/><text x="21.6271%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="21.2170%" y="789" width="0.3203%" height="15" fill="rgb(237,224,33)" fg:x="265" fg:w="4"/><text x="21.4670%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="21.2970%" y="773" width="0.2402%" height="15" fill="rgb(211,46,1)" fg:x="266" fg:w="3"/><text x="21.5470%" y="783.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="21.3771%" y="757" width="0.1601%" height="15" fill="rgb(239,190,4)" fg:x="267" fg:w="2"/><text x="21.6271%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="21.3771%" y="741" width="0.1601%" height="15" fill="rgb(221,50,22)" fg:x="267" fg:w="2"/><text x="21.6271%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="21.4572%" y="725" width="0.0801%" height="15" fill="rgb(207,176,8)" fg:x="268" fg:w="1"/><text x="21.7072%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.4572%" y="709" width="0.0801%" height="15" fill="rgb(244,114,50)" fg:x="268" fg:w="1"/><text x="21.7072%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="21.4572%" y="693" width="0.0801%" height="15" fill="rgb(226,206,19)" fg:x="268" fg:w="1"/><text x="21.7072%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.4572%" y="677" width="0.0801%" height="15" fill="rgb(208,199,16)" fg:x="268" fg:w="1"/><text x="21.7072%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="21.4572%" y="661" width="0.0801%" height="15" fill="rgb(208,38,14)" fg:x="268" fg:w="1"/><text x="21.7072%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="21.4572%" y="645" width="0.0801%" height="15" fill="rgb(221,211,49)" fg:x="268" fg:w="1"/><text x="21.7072%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.28%)</title><rect x="20.3363%" y="821" width="1.2810%" height="15" fill="rgb(227,214,34)" fg:x="254" fg:w="16"/><text x="20.5863%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="21.2170%" y="805" width="0.4003%" height="15" fill="rgb(234,5,54)" fg:x="265" fg:w="5"/><text x="21.4670%" y="815.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="21.5372%" y="789" width="0.0801%" height="15" fill="rgb(236,215,22)" fg:x="269" fg:w="1"/><text x="21.7872%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.5372%" y="773" width="0.0801%" height="15" fill="rgb(244,0,11)" fg:x="269" fg:w="1"/><text x="21.7872%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="21.6173%" y="821" width="0.0801%" height="15" fill="rgb(212,140,16)" fg:x="270" fg:w="1"/><text x="21.8673%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="21.6173%" y="805" width="0.0801%" height="15" fill="rgb(238,101,37)" fg:x="270" fg:w="1"/><text x="21.8673%" y="815.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="21.6974%" y="757" width="0.1601%" height="15" fill="rgb(247,46,3)" fg:x="271" fg:w="2"/><text x="21.9474%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="21.6974%" y="741" width="0.1601%" height="15" fill="rgb(208,106,19)" fg:x="271" fg:w="2"/><text x="21.9474%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.8575%" y="709" width="0.0801%" height="15" fill="rgb(240,227,15)" fg:x="273" fg:w="1"/><text x="22.1075%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.8575%" y="693" width="0.0801%" height="15" fill="rgb(226,173,6)" fg:x="273" fg:w="1"/><text x="22.1075%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.8575%" y="677" width="0.0801%" height="15" fill="rgb(213,191,1)" fg:x="273" fg:w="1"/><text x="22.1075%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.8575%" y="661" width="0.0801%" height="15" fill="rgb(246,51,36)" fg:x="273" fg:w="1"/><text x="22.1075%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.8575%" y="645" width="0.0801%" height="15" fill="rgb(238,40,32)" fg:x="273" fg:w="1"/><text x="22.1075%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.8575%" y="629" width="0.0801%" height="15" fill="rgb(208,126,27)" fg:x="273" fg:w="1"/><text x="22.1075%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.8575%" y="613" width="0.0801%" height="15" fill="rgb(227,117,38)" fg:x="273" fg:w="1"/><text x="22.1075%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.8575%" y="597" width="0.0801%" height="15" fill="rgb(232,16,1)" fg:x="273" fg:w="1"/><text x="22.1075%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.8575%" y="581" width="0.0801%" height="15" fill="rgb(212,111,31)" fg:x="273" fg:w="1"/><text x="22.1075%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.8575%" y="565" width="0.0801%" height="15" fill="rgb(253,227,2)" fg:x="273" fg:w="1"/><text x="22.1075%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.8575%" y="549" width="0.0801%" height="15" fill="rgb(216,122,17)" fg:x="273" fg:w="1"/><text x="22.1075%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.8575%" y="533" width="0.0801%" height="15" fill="rgb(227,37,2)" fg:x="273" fg:w="1"/><text x="22.1075%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.8575%" y="517" width="0.0801%" height="15" fill="rgb(244,113,40)" fg:x="273" fg:w="1"/><text x="22.1075%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.8575%" y="501" width="0.0801%" height="15" fill="rgb(217,193,34)" fg:x="273" fg:w="1"/><text x="22.1075%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.8575%" y="725" width="0.1601%" height="15" fill="rgb(212,223,15)" fg:x="273" fg:w="2"/><text x="22.1075%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.9376%" y="709" width="0.0801%" height="15" fill="rgb(238,143,18)" fg:x="274" fg:w="1"/><text x="22.1876%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.0176%" y="725" width="0.0801%" height="15" fill="rgb(231,18,49)" fg:x="275" fg:w="1"/><text x="22.2676%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="21.6974%" y="773" width="0.4804%" height="15" fill="rgb(249,122,4)" fg:x="271" fg:w="6"/><text x="21.9474%" y="783.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="21.8575%" y="757" width="0.3203%" height="15" fill="rgb(245,138,54)" fg:x="273" fg:w="4"/><text x="22.1075%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="21.8575%" y="741" width="0.3203%" height="15" fill="rgb(218,130,18)" fg:x="273" fg:w="4"/><text x="22.1075%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.0977%" y="725" width="0.0801%" height="15" fill="rgb(235,94,13)" fg:x="276" fg:w="1"/><text x="22.3477%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0977%" y="709" width="0.0801%" height="15" fill="rgb(247,143,5)" fg:x="276" fg:w="1"/><text x="22.3477%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.0977%" y="693" width="0.0801%" height="15" fill="rgb(212,59,54)" fg:x="276" fg:w="1"/><text x="22.3477%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0977%" y="677" width="0.0801%" height="15" fill="rgb(206,121,24)" fg:x="276" fg:w="1"/><text x="22.3477%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.0977%" y="661" width="0.0801%" height="15" fill="rgb(235,38,8)" fg:x="276" fg:w="1"/><text x="22.3477%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0977%" y="645" width="0.0801%" height="15" fill="rgb(227,102,26)" fg:x="276" fg:w="1"/><text x="22.3477%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.0977%" y="629" width="0.0801%" height="15" fill="rgb(240,183,46)" fg:x="276" fg:w="1"/><text x="22.3477%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0977%" y="613" width="0.0801%" height="15" fill="rgb(208,177,23)" fg:x="276" fg:w="1"/><text x="22.3477%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.0977%" y="597" width="0.0801%" height="15" fill="rgb(216,152,5)" fg:x="276" fg:w="1"/><text x="22.3477%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.0977%" y="581" width="0.0801%" height="15" fill="rgb(238,199,2)" fg:x="276" fg:w="1"/><text x="22.3477%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="22.0977%" y="565" width="0.0801%" height="15" fill="rgb(235,142,28)" fg:x="276" fg:w="1"/><text x="22.3477%" y="575.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="22.0977%" y="549" width="0.0801%" height="15" fill="rgb(225,97,25)" fg:x="276" fg:w="1"/><text x="22.3477%" y="559.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="22.0977%" y="533" width="0.0801%" height="15" fill="rgb(208,75,46)" fg:x="276" fg:w="1"/><text x="22.3477%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.1777%" y="757" width="0.0801%" height="15" fill="rgb(240,136,15)" fg:x="277" fg:w="1"/><text x="22.4277%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.2578%" y="725" width="0.1601%" height="15" fill="rgb(235,36,27)" fg:x="278" fg:w="2"/><text x="22.5078%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.2578%" y="709" width="0.1601%" height="15" fill="rgb(231,132,23)" fg:x="278" fg:w="2"/><text x="22.5078%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.2578%" y="693" width="0.1601%" height="15" fill="rgb(205,208,20)" fg:x="278" fg:w="2"/><text x="22.5078%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.3379%" y="677" width="0.0801%" height="15" fill="rgb(215,26,40)" fg:x="279" fg:w="1"/><text x="22.5879%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.3379%" y="661" width="0.0801%" height="15" fill="rgb(238,183,34)" fg:x="279" fg:w="1"/><text x="22.5879%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.4179%" y="693" width="0.0801%" height="15" fill="rgb(207,96,10)" fg:x="280" fg:w="1"/><text x="22.6679%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="22.4179%" y="725" width="0.1601%" height="15" fill="rgb(218,88,6)" fg:x="280" fg:w="2"/><text x="22.6679%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="22.4179%" y="709" width="0.1601%" height="15" fill="rgb(217,22,49)" fg:x="280" fg:w="2"/><text x="22.6679%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.4980%" y="693" width="0.0801%" height="15" fill="rgb(240,195,14)" fg:x="281" fg:w="1"/><text x="22.7480%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.4980%" y="677" width="0.0801%" height="15" fill="rgb(229,48,27)" fg:x="281" fg:w="1"/><text x="22.7480%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.4980%" y="661" width="0.0801%" height="15" fill="rgb(220,194,45)" fg:x="281" fg:w="1"/><text x="22.7480%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="22.5781%" y="629" width="0.0801%" height="15" fill="rgb(252,60,20)" fg:x="282" fg:w="1"/><text x="22.8281%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.04%)</title><rect x="21.6974%" y="805" width="1.0408%" height="15" fill="rgb(244,169,33)" fg:x="271" fg:w="13"/><text x="21.9474%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (13 samples, 1.04%)</title><rect x="21.6974%" y="789" width="1.0408%" height="15" fill="rgb(234,141,34)" fg:x="271" fg:w="13"/><text x="21.9474%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="22.1777%" y="773" width="0.5604%" height="15" fill="rgb(241,141,9)" fg:x="277" fg:w="7"/><text x="22.4277%" y="783.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="22.2578%" y="757" width="0.4804%" height="15" fill="rgb(246,27,36)" fg:x="278" fg:w="6"/><text x="22.5078%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="22.2578%" y="741" width="0.4804%" height="15" fill="rgb(216,188,42)" fg:x="278" fg:w="6"/><text x="22.5078%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.5781%" y="725" width="0.1601%" height="15" fill="rgb(234,205,22)" fg:x="282" fg:w="2"/><text x="22.8281%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.5781%" y="709" width="0.1601%" height="15" fill="rgb(210,202,32)" fg:x="282" fg:w="2"/><text x="22.8281%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.5781%" y="693" width="0.1601%" height="15" fill="rgb(217,0,48)" fg:x="282" fg:w="2"/><text x="22.8281%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.5781%" y="677" width="0.1601%" height="15" fill="rgb(207,115,37)" fg:x="282" fg:w="2"/><text x="22.8281%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="22.5781%" y="661" width="0.1601%" height="15" fill="rgb(237,221,44)" fg:x="282" fg:w="2"/><text x="22.8281%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.5781%" y="645" width="0.1601%" height="15" fill="rgb(249,78,2)" fg:x="282" fg:w="2"/><text x="22.8281%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.6581%" y="629" width="0.0801%" height="15" fill="rgb(211,169,23)" fg:x="283" fg:w="1"/><text x="22.9081%" y="639.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="22.7382%" y="789" width="0.1601%" height="15" fill="rgb(207,116,29)" fg:x="284" fg:w="2"/><text x="22.9882%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="22.7382%" y="773" width="0.1601%" height="15" fill="rgb(240,84,33)" fg:x="284" fg:w="2"/><text x="22.9882%" y="783.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="22.8183%" y="757" width="0.0801%" height="15" fill="rgb(229,224,31)" fg:x="285" fg:w="1"/><text x="23.0683%" y="767.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="22.8183%" y="741" width="0.0801%" height="15" fill="rgb(227,90,31)" fg:x="285" fg:w="1"/><text x="23.0683%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.8183%" y="725" width="0.0801%" height="15" fill="rgb(249,22,41)" fg:x="285" fg:w="1"/><text x="23.0683%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.8183%" y="709" width="0.0801%" height="15" fill="rgb(239,65,11)" fg:x="285" fg:w="1"/><text x="23.0683%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="22.7382%" y="805" width="0.2402%" height="15" fill="rgb(205,5,23)" fg:x="284" fg:w="3"/><text x="22.9882%" y="815.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.8983%" y="789" width="0.0801%" height="15" fill="rgb(254,78,52)" fg:x="286" fg:w="1"/><text x="23.1483%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="23.0584%" y="757" width="0.2402%" height="15" fill="rgb(214,156,33)" fg:x="288" fg:w="3"/><text x="23.3084%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="23.0584%" y="741" width="0.2402%" height="15" fill="rgb(208,20,30)" fg:x="288" fg:w="3"/><text x="23.3084%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.1385%" y="725" width="0.1601%" height="15" fill="rgb(223,133,18)" fg:x="289" fg:w="2"/><text x="23.3885%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.1385%" y="709" width="0.1601%" height="15" fill="rgb(222,91,41)" fg:x="289" fg:w="2"/><text x="23.3885%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.1385%" y="693" width="0.1601%" height="15" fill="rgb(247,137,48)" fg:x="289" fg:w="2"/><text x="23.3885%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.1385%" y="677" width="0.1601%" height="15" fill="rgb(239,156,11)" fg:x="289" fg:w="2"/><text x="23.3885%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2186%" y="661" width="0.0801%" height="15" fill="rgb(244,56,26)" fg:x="290" fg:w="1"/><text x="23.4686%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.2186%" y="645" width="0.0801%" height="15" fill="rgb(205,131,49)" fg:x="290" fg:w="1"/><text x="23.4686%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.2186%" y="629" width="0.0801%" height="15" fill="rgb(224,0,2)" fg:x="290" fg:w="1"/><text x="23.4686%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.2186%" y="613" width="0.0801%" height="15" fill="rgb(247,59,36)" fg:x="290" fg:w="1"/><text x="23.4686%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.2186%" y="597" width="0.0801%" height="15" fill="rgb(215,4,47)" fg:x="290" fg:w="1"/><text x="23.4686%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.2186%" y="581" width="0.0801%" height="15" fill="rgb(242,72,42)" fg:x="290" fg:w="1"/><text x="23.4686%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.2186%" y="565" width="0.0801%" height="15" fill="rgb(232,145,44)" fg:x="290" fg:w="1"/><text x="23.4686%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.2186%" y="549" width="0.0801%" height="15" fill="rgb(205,108,43)" fg:x="290" fg:w="1"/><text x="23.4686%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.2186%" y="533" width="0.0801%" height="15" fill="rgb(215,190,17)" fg:x="290" fg:w="1"/><text x="23.4686%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.2186%" y="517" width="0.0801%" height="15" fill="rgb(223,90,34)" fg:x="290" fg:w="1"/><text x="23.4686%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.2186%" y="501" width="0.0801%" height="15" fill="rgb(216,25,0)" fg:x="290" fg:w="1"/><text x="23.4686%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.2186%" y="485" width="0.0801%" height="15" fill="rgb(223,51,28)" fg:x="290" fg:w="1"/><text x="23.4686%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.2186%" y="469" width="0.0801%" height="15" fill="rgb(227,131,7)" fg:x="290" fg:w="1"/><text x="23.4686%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.2186%" y="453" width="0.0801%" height="15" fill="rgb(216,72,36)" fg:x="290" fg:w="1"/><text x="23.4686%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="23.2986%" y="741" width="0.0801%" height="15" fill="rgb(243,158,40)" fg:x="291" fg:w="1"/><text x="23.5486%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.3787%" y="693" width="0.0801%" height="15" fill="rgb(218,60,54)" fg:x="292" fg:w="1"/><text x="23.6287%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.3787%" y="677" width="0.0801%" height="15" fill="rgb(230,15,46)" fg:x="292" fg:w="1"/><text x="23.6287%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.3787%" y="661" width="0.0801%" height="15" fill="rgb(250,22,26)" fg:x="292" fg:w="1"/><text x="23.6287%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.3787%" y="645" width="0.0801%" height="15" fill="rgb(239,194,40)" fg:x="292" fg:w="1"/><text x="23.6287%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.3787%" y="629" width="0.0801%" height="15" fill="rgb(219,62,9)" fg:x="292" fg:w="1"/><text x="23.6287%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.4588%" y="693" width="0.0801%" height="15" fill="rgb(228,45,21)" fg:x="293" fg:w="1"/><text x="23.7088%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.4588%" y="677" width="0.0801%" height="15" fill="rgb(242,56,44)" fg:x="293" fg:w="1"/><text x="23.7088%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.4588%" y="661" width="0.0801%" height="15" fill="rgb(239,170,14)" fg:x="293" fg:w="1"/><text x="23.7088%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.4588%" y="645" width="0.0801%" height="15" fill="rgb(236,150,13)" fg:x="293" fg:w="1"/><text x="23.7088%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.4588%" y="629" width="0.0801%" height="15" fill="rgb(228,15,30)" fg:x="293" fg:w="1"/><text x="23.7088%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.4588%" y="613" width="0.0801%" height="15" fill="rgb(217,43,28)" fg:x="293" fg:w="1"/><text x="23.7088%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.4588%" y="597" width="0.0801%" height="15" fill="rgb(246,223,1)" fg:x="293" fg:w="1"/><text x="23.7088%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.4588%" y="581" width="0.0801%" height="15" fill="rgb(247,103,7)" fg:x="293" fg:w="1"/><text x="23.7088%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.4588%" y="565" width="0.0801%" height="15" fill="rgb(205,105,39)" fg:x="293" fg:w="1"/><text x="23.7088%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.4588%" y="549" width="0.0801%" height="15" fill="rgb(216,134,18)" fg:x="293" fg:w="1"/><text x="23.7088%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.4588%" y="533" width="0.0801%" height="15" fill="rgb(226,139,50)" fg:x="293" fg:w="1"/><text x="23.7088%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.4588%" y="517" width="0.0801%" height="15" fill="rgb(251,152,38)" fg:x="293" fg:w="1"/><text x="23.7088%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="23.3787%" y="709" width="0.2402%" height="15" fill="rgb(222,63,15)" fg:x="292" fg:w="3"/><text x="23.6287%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.5388%" y="693" width="0.0801%" height="15" fill="rgb(212,198,28)" fg:x="294" fg:w="1"/><text x="23.7888%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6189%" y="709" width="0.0801%" height="15" fill="rgb(216,93,38)" fg:x="295" fg:w="1"/><text x="23.8689%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.6189%" y="693" width="0.0801%" height="15" fill="rgb(247,202,44)" fg:x="295" fg:w="1"/><text x="23.8689%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6189%" y="677" width="0.0801%" height="15" fill="rgb(237,204,46)" fg:x="295" fg:w="1"/><text x="23.8689%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6189%" y="661" width="0.0801%" height="15" fill="rgb(224,98,48)" fg:x="295" fg:w="1"/><text x="23.8689%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6189%" y="645" width="0.0801%" height="15" fill="rgb(247,105,21)" fg:x="295" fg:w="1"/><text x="23.8689%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.6189%" y="629" width="0.0801%" height="15" fill="rgb(212,137,52)" fg:x="295" fg:w="1"/><text x="23.8689%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6189%" y="613" width="0.0801%" height="15" fill="rgb(223,76,33)" fg:x="295" fg:w="1"/><text x="23.8689%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.6990%" y="613" width="0.0801%" height="15" fill="rgb(209,156,27)" fg:x="296" fg:w="1"/><text x="23.9490%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="23.6990%" y="597" width="0.0801%" height="15" fill="rgb(249,81,54)" fg:x="296" fg:w="1"/><text x="23.9490%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="23.6990%" y="581" width="0.0801%" height="15" fill="rgb(241,46,29)" fg:x="296" fg:w="1"/><text x="23.9490%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (44 samples, 3.52%)</title><rect x="20.3363%" y="837" width="3.5228%" height="15" fill="rgb(213,193,39)" fg:x="254" fg:w="44"/><text x="20.5863%" y="847.50">plu..</text></g><g><title>plugins_core::tools::set_container (27 samples, 2.16%)</title><rect x="21.6974%" y="821" width="2.1617%" height="15" fill="rgb(214,85,16)" fg:x="271" fg:w="27"/><text x="21.9474%" y="831.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.88%)</title><rect x="22.9784%" y="805" width="0.8807%" height="15" fill="rgb(216,184,17)" fg:x="287" fg:w="11"/><text x="23.2284%" y="815.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.80%)</title><rect x="23.0584%" y="789" width="0.8006%" height="15" fill="rgb(254,219,29)" fg:x="288" fg:w="10"/><text x="23.3084%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="23.0584%" y="773" width="0.8006%" height="15" fill="rgb(209,148,34)" fg:x="288" fg:w="10"/><text x="23.3084%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="23.2986%" y="757" width="0.5604%" height="15" fill="rgb(253,215,11)" fg:x="291" fg:w="7"/><text x="23.5486%" y="767.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="23.3787%" y="741" width="0.4804%" height="15" fill="rgb(232,126,20)" fg:x="292" fg:w="6"/><text x="23.6287%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="23.3787%" y="725" width="0.4804%" height="15" fill="rgb(248,118,51)" fg:x="292" fg:w="6"/><text x="23.6287%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.6990%" y="709" width="0.1601%" height="15" fill="rgb(226,121,21)" fg:x="296" fg:w="2"/><text x="23.9490%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.6990%" y="693" width="0.1601%" height="15" fill="rgb(216,128,16)" fg:x="296" fg:w="2"/><text x="23.9490%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.6990%" y="677" width="0.1601%" height="15" fill="rgb(205,17,9)" fg:x="296" fg:w="2"/><text x="23.9490%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.6990%" y="661" width="0.1601%" height="15" fill="rgb(206,197,21)" fg:x="296" fg:w="2"/><text x="23.9490%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="23.6990%" y="645" width="0.1601%" height="15" fill="rgb(212,202,9)" fg:x="296" fg:w="2"/><text x="23.9490%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.6990%" y="629" width="0.1601%" height="15" fill="rgb(241,131,50)" fg:x="296" fg:w="2"/><text x="23.9490%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.7790%" y="613" width="0.0801%" height="15" fill="rgb(228,115,51)" fg:x="297" fg:w="1"/><text x="24.0290%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.7790%" y="597" width="0.0801%" height="15" fill="rgb(237,209,8)" fg:x="297" fg:w="1"/><text x="24.0290%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="23.8591%" y="805" width="0.0801%" height="15" fill="rgb(241,121,28)" fg:x="298" fg:w="1"/><text x="24.1091%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="23.8591%" y="789" width="0.0801%" height="15" fill="rgb(238,194,51)" fg:x="298" fg:w="1"/><text x="24.1091%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="23.8591%" y="773" width="0.0801%" height="15" fill="rgb(208,41,39)" fg:x="298" fg:w="1"/><text x="24.1091%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="23.8591%" y="757" width="0.0801%" height="15" fill="rgb(223,95,44)" fg:x="298" fg:w="1"/><text x="24.1091%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.8591%" y="741" width="0.0801%" height="15" fill="rgb(253,98,40)" fg:x="298" fg:w="1"/><text x="24.1091%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.8591%" y="725" width="0.0801%" height="15" fill="rgb(210,5,12)" fg:x="298" fg:w="1"/><text x="24.1091%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.8591%" y="709" width="0.0801%" height="15" fill="rgb(233,201,23)" fg:x="298" fg:w="1"/><text x="24.1091%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.8591%" y="693" width="0.0801%" height="15" fill="rgb(251,68,15)" fg:x="298" fg:w="1"/><text x="24.1091%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.8591%" y="677" width="0.0801%" height="15" fill="rgb(243,10,46)" fg:x="298" fg:w="1"/><text x="24.1091%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.8591%" y="661" width="0.0801%" height="15" fill="rgb(253,130,44)" fg:x="298" fg:w="1"/><text x="24.1091%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="23.8591%" y="645" width="0.0801%" height="15" fill="rgb(244,5,26)" fg:x="298" fg:w="1"/><text x="24.1091%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="23.8591%" y="629" width="0.0801%" height="15" fill="rgb(220,126,20)" fg:x="298" fg:w="1"/><text x="24.1091%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="23.8591%" y="613" width="0.0801%" height="15" fill="rgb(212,188,29)" fg:x="298" fg:w="1"/><text x="24.1091%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="23.8591%" y="597" width="0.0801%" height="15" fill="rgb(227,194,48)" fg:x="298" fg:w="1"/><text x="24.1091%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.8591%" y="581" width="0.0801%" height="15" fill="rgb(245,64,28)" fg:x="298" fg:w="1"/><text x="24.1091%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="23.8591%" y="565" width="0.0801%" height="15" fill="rgb(205,44,7)" fg:x="298" fg:w="1"/><text x="24.1091%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="23.8591%" y="549" width="0.0801%" height="15" fill="rgb(213,193,11)" fg:x="298" fg:w="1"/><text x="24.1091%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="23.8591%" y="533" width="0.0801%" height="15" fill="rgb(238,157,6)" fg:x="298" fg:w="1"/><text x="24.1091%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="23.8591%" y="517" width="0.0801%" height="15" fill="rgb(222,73,7)" fg:x="298" fg:w="1"/><text x="24.1091%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="23.8591%" y="501" width="0.0801%" height="15" fill="rgb(224,78,15)" fg:x="298" fg:w="1"/><text x="24.1091%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="23.8591%" y="485" width="0.0801%" height="15" fill="rgb(218,149,46)" fg:x="298" fg:w="1"/><text x="24.1091%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="23.8591%" y="837" width="0.2402%" height="15" fill="rgb(218,175,44)" fg:x="298" fg:w="3"/><text x="24.1091%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="23.8591%" y="821" width="0.2402%" height="15" fill="rgb(215,183,45)" fg:x="298" fg:w="3"/><text x="24.1091%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="23.9392%" y="805" width="0.1601%" height="15" fill="rgb(226,116,37)" fg:x="299" fg:w="2"/><text x="24.1892%" y="815.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="23.9392%" y="789" width="0.1601%" height="15" fill="rgb(252,224,12)" fg:x="299" fg:w="2"/><text x="24.1892%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.9392%" y="773" width="0.1601%" height="15" fill="rgb(232,212,21)" fg:x="299" fg:w="2"/><text x="24.1892%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.9392%" y="757" width="0.1601%" height="15" fill="rgb(226,191,16)" fg:x="299" fg:w="2"/><text x="24.1892%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.9392%" y="741" width="0.1601%" height="15" fill="rgb(231,156,11)" fg:x="299" fg:w="2"/><text x="24.1892%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.0192%" y="725" width="0.0801%" height="15" fill="rgb(225,134,49)" fg:x="300" fg:w="1"/><text x="24.2692%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.0192%" y="709" width="0.0801%" height="15" fill="rgb(254,55,32)" fg:x="300" fg:w="1"/><text x="24.2692%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.0192%" y="693" width="0.0801%" height="15" fill="rgb(242,195,29)" fg:x="300" fg:w="1"/><text x="24.2692%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.0192%" y="677" width="0.0801%" height="15" fill="rgb(210,155,20)" fg:x="300" fg:w="1"/><text x="24.2692%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.0192%" y="661" width="0.0801%" height="15" fill="rgb(243,170,23)" fg:x="300" fg:w="1"/><text x="24.2692%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.0192%" y="645" width="0.0801%" height="15" fill="rgb(242,197,51)" fg:x="300" fg:w="1"/><text x="24.2692%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.0192%" y="629" width="0.0801%" height="15" fill="rgb(248,48,13)" fg:x="300" fg:w="1"/><text x="24.2692%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.0192%" y="613" width="0.0801%" height="15" fill="rgb(221,185,15)" fg:x="300" fg:w="1"/><text x="24.2692%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.0192%" y="597" width="0.0801%" height="15" fill="rgb(244,49,7)" fg:x="300" fg:w="1"/><text x="24.2692%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="24.0993%" y="837" width="0.0801%" height="15" fill="rgb(213,182,52)" fg:x="301" fg:w="1"/><text x="24.3493%" y="847.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="24.0993%" y="821" width="0.0801%" height="15" fill="rgb(209,15,45)" fg:x="301" fg:w="1"/><text x="24.3493%" y="831.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="24.0993%" y="805" width="0.0801%" height="15" fill="rgb(233,23,44)" fg:x="301" fg:w="1"/><text x="24.3493%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.0993%" y="789" width="0.0801%" height="15" fill="rgb(220,182,30)" fg:x="301" fg:w="1"/><text x="24.3493%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.0993%" y="773" width="0.0801%" height="15" fill="rgb(219,116,33)" fg:x="301" fg:w="1"/><text x="24.3493%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.0993%" y="757" width="0.0801%" height="15" fill="rgb(231,15,21)" fg:x="301" fg:w="1"/><text x="24.3493%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.0993%" y="741" width="0.0801%" height="15" fill="rgb(238,119,25)" fg:x="301" fg:w="1"/><text x="24.3493%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.0993%" y="725" width="0.0801%" height="15" fill="rgb(232,30,39)" fg:x="301" fg:w="1"/><text x="24.3493%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.0993%" y="709" width="0.0801%" height="15" fill="rgb(241,26,30)" fg:x="301" fg:w="1"/><text x="24.3493%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="24.1793%" y="805" width="0.0801%" height="15" fill="rgb(234,154,4)" fg:x="302" fg:w="1"/><text x="24.4293%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="24.1793%" y="789" width="0.0801%" height="15" fill="rgb(229,199,39)" fg:x="302" fg:w="1"/><text x="24.4293%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.1793%" y="773" width="0.0801%" height="15" fill="rgb(236,213,10)" fg:x="302" fg:w="1"/><text x="24.4293%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="24.1793%" y="757" width="0.0801%" height="15" fill="rgb(247,28,19)" fg:x="302" fg:w="1"/><text x="24.4293%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.2594%" y="725" width="0.0801%" height="15" fill="rgb(239,199,24)" fg:x="303" fg:w="1"/><text x="24.5094%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.2594%" y="709" width="0.0801%" height="15" fill="rgb(246,122,13)" fg:x="303" fg:w="1"/><text x="24.5094%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.2594%" y="693" width="0.0801%" height="15" fill="rgb(210,203,29)" fg:x="303" fg:w="1"/><text x="24.5094%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="24.1793%" y="821" width="0.2402%" height="15" fill="rgb(218,4,50)" fg:x="302" fg:w="3"/><text x="24.4293%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="24.2594%" y="805" width="0.1601%" height="15" fill="rgb(236,142,48)" fg:x="303" fg:w="2"/><text x="24.5094%" y="815.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="24.2594%" y="789" width="0.1601%" height="15" fill="rgb(245,173,2)" fg:x="303" fg:w="2"/><text x="24.5094%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="24.2594%" y="773" width="0.1601%" height="15" fill="rgb(244,196,18)" fg:x="303" fg:w="2"/><text x="24.5094%" y="783.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="24.2594%" y="757" width="0.1601%" height="15" fill="rgb(221,27,33)" fg:x="303" fg:w="2"/><text x="24.5094%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="24.2594%" y="741" width="0.1601%" height="15" fill="rgb(210,206,16)" fg:x="303" fg:w="2"/><text x="24.5094%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="24.3395%" y="725" width="0.0801%" height="15" fill="rgb(238,161,34)" fg:x="304" fg:w="1"/><text x="24.5895%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.3395%" y="709" width="0.0801%" height="15" fill="rgb(243,118,39)" fg:x="304" fg:w="1"/><text x="24.5895%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="24.3395%" y="693" width="0.0801%" height="15" fill="rgb(234,126,9)" fg:x="304" fg:w="1"/><text x="24.5895%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.3395%" y="677" width="0.0801%" height="15" fill="rgb(234,167,42)" fg:x="304" fg:w="1"/><text x="24.5895%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="24.3395%" y="661" width="0.0801%" height="15" fill="rgb(238,54,48)" fg:x="304" fg:w="1"/><text x="24.5895%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="24.3395%" y="645" width="0.0801%" height="15" fill="rgb(226,105,2)" fg:x="304" fg:w="1"/><text x="24.5895%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.3395%" y="629" width="0.0801%" height="15" fill="rgb(223,95,23)" fg:x="304" fg:w="1"/><text x="24.5895%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="24.4195%" y="821" width="0.0801%" height="15" fill="rgb(249,212,19)" fg:x="305" fg:w="1"/><text x="24.6695%" y="831.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.4195%" y="805" width="0.0801%" height="15" fill="rgb(234,158,54)" fg:x="305" fg:w="1"/><text x="24.6695%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="24.4996%" y="805" width="0.0801%" height="15" fill="rgb(247,114,32)" fg:x="306" fg:w="1"/><text x="24.7496%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="24.5797%" y="773" width="0.0801%" height="15" fill="rgb(250,68,44)" fg:x="307" fg:w="1"/><text x="24.8297%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="24.5797%" y="757" width="0.0801%" height="15" fill="rgb(242,3,15)" fg:x="307" fg:w="1"/><text x="24.8297%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="24.5797%" y="805" width="0.1601%" height="15" fill="rgb(223,110,32)" fg:x="307" fg:w="2"/><text x="24.8297%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="24.5797%" y="789" width="0.1601%" height="15" fill="rgb(216,26,54)" fg:x="307" fg:w="2"/><text x="24.8297%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="24.6597%" y="773" width="0.0801%" height="15" fill="rgb(209,145,42)" fg:x="308" fg:w="1"/><text x="24.9097%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="24.6597%" y="757" width="0.0801%" height="15" fill="rgb(240,111,53)" fg:x="308" fg:w="1"/><text x="24.9097%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.6597%" y="741" width="0.0801%" height="15" fill="rgb(209,101,4)" fg:x="308" fg:w="1"/><text x="24.9097%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6597%" y="725" width="0.0801%" height="15" fill="rgb(231,74,29)" fg:x="308" fg:w="1"/><text x="24.9097%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6597%" y="709" width="0.0801%" height="15" fill="rgb(223,12,12)" fg:x="308" fg:w="1"/><text x="24.9097%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6597%" y="693" width="0.0801%" height="15" fill="rgb(207,162,2)" fg:x="308" fg:w="1"/><text x="24.9097%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6597%" y="677" width="0.0801%" height="15" fill="rgb(230,152,0)" fg:x="308" fg:w="1"/><text x="24.9097%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.6597%" y="661" width="0.0801%" height="15" fill="rgb(254,156,19)" fg:x="308" fg:w="1"/><text x="24.9097%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6597%" y="645" width="0.0801%" height="15" fill="rgb(250,28,0)" fg:x="308" fg:w="1"/><text x="24.9097%" y="655.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="24.7398%" y="789" width="0.0801%" height="15" fill="rgb(253,27,5)" fg:x="309" fg:w="1"/><text x="24.9898%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.7398%" y="773" width="0.0801%" height="15" fill="rgb(244,154,7)" fg:x="309" fg:w="1"/><text x="24.9898%" y="783.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="24.7398%" y="757" width="0.0801%" height="15" fill="rgb(242,108,21)" fg:x="309" fg:w="1"/><text x="24.9898%" y="767.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="24.7398%" y="741" width="0.0801%" height="15" fill="rgb(254,200,38)" fg:x="309" fg:w="1"/><text x="24.9898%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.7398%" y="725" width="0.0801%" height="15" fill="rgb(250,145,41)" fg:x="309" fg:w="1"/><text x="24.9898%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.7398%" y="709" width="0.0801%" height="15" fill="rgb(235,136,31)" fg:x="309" fg:w="1"/><text x="24.9898%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="24.7398%" y="805" width="0.1601%" height="15" fill="rgb(215,13,18)" fg:x="309" fg:w="2"/><text x="24.9898%" y="815.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="24.8199%" y="789" width="0.0801%" height="15" fill="rgb(238,199,12)" fg:x="310" fg:w="1"/><text x="25.0699%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.8199%" y="773" width="0.0801%" height="15" fill="rgb(242,179,49)" fg:x="310" fg:w="1"/><text x="25.0699%" y="783.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="24.8199%" y="757" width="0.0801%" height="15" fill="rgb(214,10,44)" fg:x="310" fg:w="1"/><text x="25.0699%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.8199%" y="741" width="0.0801%" height="15" fill="rgb(229,181,11)" fg:x="310" fg:w="1"/><text x="25.0699%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.8199%" y="725" width="0.0801%" height="15" fill="rgb(244,155,10)" fg:x="310" fg:w="1"/><text x="25.0699%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="24.8999%" y="757" width="0.0801%" height="15" fill="rgb(254,13,48)" fg:x="311" fg:w="1"/><text x="25.1499%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="24.8999%" y="741" width="0.0801%" height="15" fill="rgb(210,164,6)" fg:x="311" fg:w="1"/><text x="25.1499%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.8999%" y="725" width="0.0801%" height="15" fill="rgb(216,187,40)" fg:x="311" fg:w="1"/><text x="25.1499%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.0600%" y="709" width="0.0801%" height="15" fill="rgb(208,143,21)" fg:x="313" fg:w="1"/><text x="25.3100%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.0600%" y="693" width="0.0801%" height="15" fill="rgb(211,73,41)" fg:x="313" fg:w="1"/><text x="25.3100%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.0600%" y="677" width="0.0801%" height="15" fill="rgb(244,69,21)" fg:x="313" fg:w="1"/><text x="25.3100%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.0600%" y="661" width="0.0801%" height="15" fill="rgb(230,152,32)" fg:x="313" fg:w="1"/><text x="25.3100%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.0600%" y="645" width="0.0801%" height="15" fill="rgb(208,110,18)" fg:x="313" fg:w="1"/><text x="25.3100%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.0600%" y="629" width="0.0801%" height="15" fill="rgb(214,201,49)" fg:x="313" fg:w="1"/><text x="25.3100%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.0600%" y="613" width="0.0801%" height="15" fill="rgb(253,153,27)" fg:x="313" fg:w="1"/><text x="25.3100%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.0600%" y="597" width="0.0801%" height="15" fill="rgb(238,61,11)" fg:x="313" fg:w="1"/><text x="25.3100%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.0600%" y="581" width="0.0801%" height="15" fill="rgb(227,84,2)" fg:x="313" fg:w="1"/><text x="25.3100%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.0600%" y="565" width="0.0801%" height="15" fill="rgb(233,52,8)" fg:x="313" fg:w="1"/><text x="25.3100%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.0600%" y="549" width="0.0801%" height="15" fill="rgb(209,136,13)" fg:x="313" fg:w="1"/><text x="25.3100%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.0600%" y="533" width="0.0801%" height="15" fill="rgb(229,86,25)" fg:x="313" fg:w="1"/><text x="25.3100%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.0600%" y="517" width="0.0801%" height="15" fill="rgb(235,47,16)" fg:x="313" fg:w="1"/><text x="25.3100%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0600%" y="501" width="0.0801%" height="15" fill="rgb(231,186,4)" fg:x="313" fg:w="1"/><text x="25.3100%" y="511.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (143 samples, 11.45%)</title><rect x="13.7710%" y="853" width="11.4492%" height="15" fill="rgb(209,213,23)" fg:x="172" fg:w="143"/><text x="14.0210%" y="863.50">plugins_core::bui..</text></g><g><title>plugins_core::build::Build::occupying (13 samples, 1.04%)</title><rect x="24.1793%" y="837" width="1.0408%" height="15" fill="rgb(212,142,47)" fg:x="302" fg:w="13"/><text x="24.4293%" y="847.50"></text></g><g><title>plugins_core::tools::set_occupying (9 samples, 0.72%)</title><rect x="24.4996%" y="821" width="0.7206%" height="15" fill="rgb(251,86,24)" fg:x="306" fg:w="9"/><text x="24.7496%" y="831.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (4 samples, 0.32%)</title><rect x="24.8999%" y="805" width="0.3203%" height="15" fill="rgb(206,217,17)" fg:x="311" fg:w="4"/><text x="25.1499%" y="815.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="24.8999%" y="789" width="0.3203%" height="15" fill="rgb(248,92,38)" fg:x="311" fg:w="4"/><text x="25.1499%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="24.8999%" y="773" width="0.3203%" height="15" fill="rgb(214,25,29)" fg:x="311" fg:w="4"/><text x="25.1499%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="24.9800%" y="757" width="0.2402%" height="15" fill="rgb(245,117,13)" fg:x="312" fg:w="3"/><text x="25.2300%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="24.9800%" y="741" width="0.2402%" height="15" fill="rgb(205,169,9)" fg:x="312" fg:w="3"/><text x="25.2300%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="24.9800%" y="725" width="0.2402%" height="15" fill="rgb(223,134,38)" fg:x="312" fg:w="3"/><text x="25.2300%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.1401%" y="709" width="0.0801%" height="15" fill="rgb(249,129,49)" fg:x="314" fg:w="1"/><text x="25.3901%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.1401%" y="693" width="0.0801%" height="15" fill="rgb(229,157,45)" fg:x="314" fg:w="1"/><text x="25.3901%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.1401%" y="677" width="0.0801%" height="15" fill="rgb(232,159,11)" fg:x="314" fg:w="1"/><text x="25.3901%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.1401%" y="661" width="0.0801%" height="15" fill="rgb(230,134,26)" fg:x="314" fg:w="1"/><text x="25.3901%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.1401%" y="645" width="0.0801%" height="15" fill="rgb(234,149,40)" fg:x="314" fg:w="1"/><text x="25.3901%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.1401%" y="629" width="0.0801%" height="15" fill="rgb(221,122,15)" fg:x="314" fg:w="1"/><text x="25.3901%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.1401%" y="613" width="0.0801%" height="15" fill="rgb(228,127,0)" fg:x="314" fg:w="1"/><text x="25.3901%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.1401%" y="597" width="0.0801%" height="15" fill="rgb(248,37,7)" fg:x="314" fg:w="1"/><text x="25.3901%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.1401%" y="581" width="0.0801%" height="15" fill="rgb(215,140,49)" fg:x="314" fg:w="1"/><text x="25.3901%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.1401%" y="565" width="0.0801%" height="15" fill="rgb(236,65,39)" fg:x="314" fg:w="1"/><text x="25.3901%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="25.1401%" y="549" width="0.0801%" height="15" fill="rgb(253,102,38)" fg:x="314" fg:w="1"/><text x="25.3901%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="25.1401%" y="533" width="0.0801%" height="15" fill="rgb(244,100,34)" fg:x="314" fg:w="1"/><text x="25.3901%" y="543.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="25.1401%" y="517" width="0.0801%" height="15" fill="rgb(210,179,47)" fg:x="314" fg:w="1"/><text x="25.3901%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="25.2202%" y="805" width="0.0801%" height="15" fill="rgb(231,41,37)" fg:x="315" fg:w="1"/><text x="25.4702%" y="815.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="25.2202%" y="853" width="0.1601%" height="15" fill="rgb(226,209,17)" fg:x="315" fg:w="2"/><text x="25.4702%" y="863.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="25.2202%" y="837" width="0.1601%" height="15" fill="rgb(231,154,20)" fg:x="315" fg:w="2"/><text x="25.4702%" y="847.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="25.2202%" y="821" width="0.1601%" height="15" fill="rgb(216,134,24)" fg:x="315" fg:w="2"/><text x="25.4702%" y="831.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="25.3002%" y="805" width="0.0801%" height="15" fill="rgb(224,71,42)" fg:x="316" fg:w="1"/><text x="25.5502%" y="815.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="25.3002%" y="789" width="0.0801%" height="15" fill="rgb(250,65,23)" fg:x="316" fg:w="1"/><text x="25.5502%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="25.3803%" y="789" width="0.0801%" height="15" fill="rgb(209,160,35)" fg:x="317" fg:w="1"/><text x="25.6303%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="25.3803%" y="805" width="0.3203%" height="15" fill="rgb(215,8,11)" fg:x="317" fg:w="4"/><text x="25.6303%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="25.4604%" y="789" width="0.2402%" height="15" fill="rgb(227,27,12)" fg:x="318" fg:w="3"/><text x="25.7104%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="25.4604%" y="773" width="0.2402%" height="15" fill="rgb(226,111,41)" fg:x="318" fg:w="3"/><text x="25.7104%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="25.4604%" y="757" width="0.2402%" height="15" fill="rgb(212,195,15)" fg:x="318" fg:w="3"/><text x="25.7104%" y="767.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="25.4604%" y="741" width="0.2402%" height="15" fill="rgb(216,191,17)" fg:x="318" fg:w="3"/><text x="25.7104%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="25.4604%" y="725" width="0.2402%" height="15" fill="rgb(215,57,44)" fg:x="318" fg:w="3"/><text x="25.7104%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="25.4604%" y="709" width="0.2402%" height="15" fill="rgb(209,38,4)" fg:x="318" fg:w="3"/><text x="25.7104%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="25.4604%" y="693" width="0.2402%" height="15" fill="rgb(238,49,31)" fg:x="318" fg:w="3"/><text x="25.7104%" y="703.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="25.4604%" y="677" width="0.2402%" height="15" fill="rgb(219,48,39)" fg:x="318" fg:w="3"/><text x="25.7104%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="25.4604%" y="661" width="0.2402%" height="15" fill="rgb(252,223,43)" fg:x="318" fg:w="3"/><text x="25.7104%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="25.4604%" y="645" width="0.2402%" height="15" fill="rgb(247,205,46)" fg:x="318" fg:w="3"/><text x="25.7104%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="25.5404%" y="629" width="0.1601%" height="15" fill="rgb(231,16,40)" fg:x="319" fg:w="2"/><text x="25.7904%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="25.5404%" y="613" width="0.1601%" height="15" fill="rgb(231,115,5)" fg:x="319" fg:w="2"/><text x="25.7904%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="25.5404%" y="597" width="0.1601%" height="15" fill="rgb(206,127,43)" fg:x="319" fg:w="2"/><text x="25.7904%" y="607.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="25.5404%" y="581" width="0.1601%" height="15" fill="rgb(218,101,9)" fg:x="319" fg:w="2"/><text x="25.7904%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="25.5404%" y="565" width="0.1601%" height="15" fill="rgb(235,138,50)" fg:x="319" fg:w="2"/><text x="25.7904%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="25.5404%" y="549" width="0.1601%" height="15" fill="rgb(214,197,52)" fg:x="319" fg:w="2"/><text x="25.7904%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="25.5404%" y="533" width="0.1601%" height="15" fill="rgb(230,80,19)" fg:x="319" fg:w="2"/><text x="25.7904%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="25.5404%" y="517" width="0.1601%" height="15" fill="rgb(224,77,16)" fg:x="319" fg:w="2"/><text x="25.7904%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="25.5404%" y="501" width="0.1601%" height="15" fill="rgb(246,4,13)" fg:x="319" fg:w="2"/><text x="25.7904%" y="511.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="25.5404%" y="485" width="0.1601%" height="15" fill="rgb(220,177,26)" fg:x="319" fg:w="2"/><text x="25.7904%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="25.5404%" y="469" width="0.1601%" height="15" fill="rgb(215,114,45)" fg:x="319" fg:w="2"/><text x="25.7904%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="25.5404%" y="453" width="0.1601%" height="15" fill="rgb(215,71,54)" fg:x="319" fg:w="2"/><text x="25.7904%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="25.5404%" y="437" width="0.1601%" height="15" fill="rgb(211,155,22)" fg:x="319" fg:w="2"/><text x="25.7904%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="25.5404%" y="421" width="0.1601%" height="15" fill="rgb(245,206,18)" fg:x="319" fg:w="2"/><text x="25.7904%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="25.5404%" y="405" width="0.1601%" height="15" fill="rgb(248,216,48)" fg:x="319" fg:w="2"/><text x="25.7904%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="25.5404%" y="389" width="0.1601%" height="15" fill="rgb(244,84,45)" fg:x="319" fg:w="2"/><text x="25.7904%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="25.5404%" y="373" width="0.1601%" height="15" fill="rgb(245,13,45)" fg:x="319" fg:w="2"/><text x="25.7904%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="25.5404%" y="357" width="0.1601%" height="15" fill="rgb(247,163,2)" fg:x="319" fg:w="2"/><text x="25.7904%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="25.5404%" y="341" width="0.1601%" height="15" fill="rgb(211,175,10)" fg:x="319" fg:w="2"/><text x="25.7904%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="25.5404%" y="325" width="0.1601%" height="15" fill="rgb(215,186,31)" fg:x="319" fg:w="2"/><text x="25.7904%" y="335.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="25.5404%" y="309" width="0.1601%" height="15" fill="rgb(207,42,11)" fg:x="319" fg:w="2"/><text x="25.7904%" y="319.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="25.5404%" y="293" width="0.1601%" height="15" fill="rgb(224,197,20)" fg:x="319" fg:w="2"/><text x="25.7904%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="25.7006%" y="805" width="0.0801%" height="15" fill="rgb(244,119,36)" fg:x="321" fg:w="1"/><text x="25.9506%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="25.7806%" y="757" width="0.0801%" height="15" fill="rgb(250,60,27)" fg:x="322" fg:w="1"/><text x="26.0306%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.7806%" y="741" width="0.0801%" height="15" fill="rgb(252,202,1)" fg:x="322" fg:w="1"/><text x="26.0306%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7806%" y="725" width="0.0801%" height="15" fill="rgb(206,53,25)" fg:x="322" fg:w="1"/><text x="26.0306%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7806%" y="709" width="0.0801%" height="15" fill="rgb(210,88,4)" fg:x="322" fg:w="1"/><text x="26.0306%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.8607%" y="725" width="0.0801%" height="15" fill="rgb(211,144,28)" fg:x="323" fg:w="1"/><text x="26.1107%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.8607%" y="709" width="0.0801%" height="15" fill="rgb(247,81,32)" fg:x="323" fg:w="1"/><text x="26.1107%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="25.7806%" y="789" width="0.2402%" height="15" fill="rgb(225,192,11)" fg:x="322" fg:w="3"/><text x="26.0306%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="25.7806%" y="773" width="0.2402%" height="15" fill="rgb(232,212,27)" fg:x="322" fg:w="3"/><text x="26.0306%" y="783.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="25.8607%" y="757" width="0.1601%" height="15" fill="rgb(239,3,29)" fg:x="323" fg:w="2"/><text x="26.1107%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="25.8607%" y="741" width="0.1601%" height="15" fill="rgb(252,225,29)" fg:x="323" fg:w="2"/><text x="26.1107%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="25.9408%" y="725" width="0.0801%" height="15" fill="rgb(205,151,9)" fg:x="324" fg:w="1"/><text x="26.1908%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.9408%" y="709" width="0.0801%" height="15" fill="rgb(216,171,47)" fg:x="324" fg:w="1"/><text x="26.1908%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="25.9408%" y="693" width="0.0801%" height="15" fill="rgb(206,181,1)" fg:x="324" fg:w="1"/><text x="26.1908%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.9408%" y="677" width="0.0801%" height="15" fill="rgb(232,218,10)" fg:x="324" fg:w="1"/><text x="26.1908%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="25.9408%" y="661" width="0.0801%" height="15" fill="rgb(244,222,51)" fg:x="324" fg:w="1"/><text x="26.1908%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="25.9408%" y="645" width="0.0801%" height="15" fill="rgb(252,215,16)" fg:x="324" fg:w="1"/><text x="26.1908%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="25.3803%" y="821" width="0.7206%" height="15" fill="rgb(212,130,13)" fg:x="317" fg:w="9"/><text x="25.6303%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="25.7806%" y="805" width="0.3203%" height="15" fill="rgb(227,103,37)" fg:x="322" fg:w="4"/><text x="26.0306%" y="815.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="26.0208%" y="789" width="0.0801%" height="15" fill="rgb(249,48,15)" fg:x="325" fg:w="1"/><text x="26.2708%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.0208%" y="773" width="0.0801%" height="15" fill="rgb(225,96,9)" fg:x="325" fg:w="1"/><text x="26.2708%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="26.1009%" y="805" width="0.0801%" height="15" fill="rgb(213,81,41)" fg:x="326" fg:w="1"/><text x="26.3509%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="26.1009%" y="789" width="0.0801%" height="15" fill="rgb(230,15,12)" fg:x="326" fg:w="1"/><text x="26.3509%" y="799.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="26.1009%" y="773" width="0.0801%" height="15" fill="rgb(218,106,37)" fg:x="326" fg:w="1"/><text x="26.3509%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="26.1009%" y="757" width="0.0801%" height="15" fill="rgb(223,172,47)" fg:x="326" fg:w="1"/><text x="26.3509%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="26.1009%" y="741" width="0.0801%" height="15" fill="rgb(246,180,49)" fg:x="326" fg:w="1"/><text x="26.3509%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.1009%" y="725" width="0.0801%" height="15" fill="rgb(231,63,37)" fg:x="326" fg:w="1"/><text x="26.3509%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.1009%" y="709" width="0.0801%" height="15" fill="rgb(235,70,40)" fg:x="326" fg:w="1"/><text x="26.3509%" y="719.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="26.1009%" y="693" width="0.0801%" height="15" fill="rgb(250,54,26)" fg:x="326" fg:w="1"/><text x="26.3509%" y="703.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="26.1009%" y="677" width="0.0801%" height="15" fill="rgb(214,190,1)" fg:x="326" fg:w="1"/><text x="26.3509%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.1009%" y="661" width="0.0801%" height="15" fill="rgb(212,40,35)" fg:x="326" fg:w="1"/><text x="26.3509%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.1009%" y="645" width="0.0801%" height="15" fill="rgb(239,183,47)" fg:x="326" fg:w="1"/><text x="26.3509%" y="655.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="26.1009%" y="629" width="0.0801%" height="15" fill="rgb(211,171,49)" fg:x="326" fg:w="1"/><text x="26.3509%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="26.1009%" y="613" width="0.0801%" height="15" fill="rgb(249,186,27)" fg:x="326" fg:w="1"/><text x="26.3509%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="26.1009%" y="597" width="0.0801%" height="15" fill="rgb(223,23,48)" fg:x="326" fg:w="1"/><text x="26.3509%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="26.1009%" y="581" width="0.0801%" height="15" fill="rgb(209,203,21)" fg:x="326" fg:w="1"/><text x="26.3509%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.1009%" y="565" width="0.0801%" height="15" fill="rgb(229,33,27)" fg:x="326" fg:w="1"/><text x="26.3509%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.1009%" y="549" width="0.0801%" height="15" fill="rgb(207,8,53)" fg:x="326" fg:w="1"/><text x="26.3509%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="26.1009%" y="533" width="0.0801%" height="15" fill="rgb(221,42,0)" fg:x="326" fg:w="1"/><text x="26.3509%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.08%)</title><rect x="26.1009%" y="517" width="0.0801%" height="15" fill="rgb(223,115,3)" fg:x="326" fg:w="1"/><text x="26.3509%" y="527.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="26.1009%" y="821" width="0.1601%" height="15" fill="rgb(239,35,26)" fg:x="326" fg:w="2"/><text x="26.3509%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="26.1809%" y="805" width="0.0801%" height="15" fill="rgb(233,22,9)" fg:x="327" fg:w="1"/><text x="26.4309%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="26.1809%" y="789" width="0.0801%" height="15" fill="rgb(236,221,48)" fg:x="327" fg:w="1"/><text x="26.4309%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="26.1809%" y="773" width="0.0801%" height="15" fill="rgb(235,52,30)" fg:x="327" fg:w="1"/><text x="26.4309%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.1809%" y="757" width="0.0801%" height="15" fill="rgb(238,133,51)" fg:x="327" fg:w="1"/><text x="26.4309%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.2610%" y="725" width="0.0801%" height="15" fill="rgb(213,122,23)" fg:x="328" fg:w="1"/><text x="26.5110%" y="735.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (13 samples, 1.04%)</title><rect x="25.3803%" y="853" width="1.0408%" height="15" fill="rgb(225,8,15)" fg:x="317" fg:w="13"/><text x="25.6303%" y="863.50"></text></g><g><title>plugins_core::build::QuickThing::make (13 samples, 1.04%)</title><rect x="25.3803%" y="837" width="1.0408%" height="15" fill="rgb(219,126,35)" fg:x="317" fg:w="13"/><text x="25.6303%" y="847.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="26.2610%" y="821" width="0.1601%" height="15" fill="rgb(246,113,21)" fg:x="328" fg:w="2"/><text x="26.5110%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="26.2610%" y="805" width="0.1601%" height="15" fill="rgb(241,193,32)" fg:x="328" fg:w="2"/><text x="26.5110%" y="815.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="26.2610%" y="789" width="0.1601%" height="15" fill="rgb(218,99,18)" fg:x="328" fg:w="2"/><text x="26.5110%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="26.2610%" y="773" width="0.1601%" height="15" fill="rgb(225,114,4)" fg:x="328" fg:w="2"/><text x="26.5110%" y="783.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="26.2610%" y="757" width="0.1601%" height="15" fill="rgb(235,0,15)" fg:x="328" fg:w="2"/><text x="26.5110%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="26.2610%" y="741" width="0.1601%" height="15" fill="rgb(247,45,27)" fg:x="328" fg:w="2"/><text x="26.5110%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="26.3411%" y="725" width="0.0801%" height="15" fill="rgb(249,88,53)" fg:x="329" fg:w="1"/><text x="26.5911%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.3411%" y="709" width="0.0801%" height="15" fill="rgb(207,58,45)" fg:x="329" fg:w="1"/><text x="26.5911%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="26.3411%" y="693" width="0.0801%" height="15" fill="rgb(216,7,11)" fg:x="329" fg:w="1"/><text x="26.5911%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="26.3411%" y="677" width="0.0801%" height="15" fill="rgb(230,40,33)" fg:x="329" fg:w="1"/><text x="26.5911%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="26.3411%" y="661" width="0.0801%" height="15" fill="rgb(232,24,46)" fg:x="329" fg:w="1"/><text x="26.5911%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.3411%" y="645" width="0.0801%" height="15" fill="rgb(219,222,45)" fg:x="329" fg:w="1"/><text x="26.5911%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="26.4211%" y="821" width="0.1601%" height="15" fill="rgb(229,85,44)" fg:x="330" fg:w="2"/><text x="26.6711%" y="831.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="26.4211%" y="805" width="0.1601%" height="15" fill="rgb(243,71,36)" fg:x="330" fg:w="2"/><text x="26.6711%" y="815.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="26.4211%" y="789" width="0.1601%" height="15" fill="rgb(230,203,45)" fg:x="330" fg:w="2"/><text x="26.6711%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="26.4211%" y="773" width="0.1601%" height="15" fill="rgb(224,77,49)" fg:x="330" fg:w="2"/><text x="26.6711%" y="783.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="26.4211%" y="757" width="0.1601%" height="15" fill="rgb(210,186,47)" fg:x="330" fg:w="2"/><text x="26.6711%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="26.4211%" y="741" width="0.1601%" height="15" fill="rgb(232,146,10)" fg:x="330" fg:w="2"/><text x="26.6711%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="26.4211%" y="725" width="0.1601%" height="15" fill="rgb(236,185,51)" fg:x="330" fg:w="2"/><text x="26.6711%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="26.4211%" y="709" width="0.1601%" height="15" fill="rgb(223,206,43)" fg:x="330" fg:w="2"/><text x="26.6711%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="26.4211%" y="693" width="0.1601%" height="15" fill="rgb(227,212,9)" fg:x="330" fg:w="2"/><text x="26.6711%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="26.4211%" y="677" width="0.1601%" height="15" fill="rgb(205,82,3)" fg:x="330" fg:w="2"/><text x="26.6711%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="26.4211%" y="661" width="0.1601%" height="15" fill="rgb(214,2,27)" fg:x="330" fg:w="2"/><text x="26.6711%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="26.4211%" y="645" width="0.1601%" height="15" fill="rgb(241,37,22)" fg:x="330" fg:w="2"/><text x="26.6711%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="26.4211%" y="629" width="0.1601%" height="15" fill="rgb(219,182,1)" fg:x="330" fg:w="2"/><text x="26.6711%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.5012%" y="613" width="0.0801%" height="15" fill="rgb(208,224,23)" fg:x="331" fg:w="1"/><text x="26.7512%" y="623.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="26.5012%" y="597" width="0.0801%" height="15" fill="rgb(219,121,32)" fg:x="331" fg:w="1"/><text x="26.7512%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="26.5012%" y="581" width="0.0801%" height="15" fill="rgb(253,13,40)" fg:x="331" fg:w="1"/><text x="26.7512%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.5012%" y="565" width="0.0801%" height="15" fill="rgb(233,6,28)" fg:x="331" fg:w="1"/><text x="26.7512%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="26.5012%" y="549" width="0.0801%" height="15" fill="rgb(233,73,8)" fg:x="331" fg:w="1"/><text x="26.7512%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.5012%" y="533" width="0.0801%" height="15" fill="rgb(223,48,27)" fg:x="331" fg:w="1"/><text x="26.7512%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.5012%" y="517" width="0.0801%" height="15" fill="rgb(231,98,37)" fg:x="331" fg:w="1"/><text x="26.7512%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="26.5012%" y="501" width="0.0801%" height="15" fill="rgb(249,43,32)" fg:x="331" fg:w="1"/><text x="26.7512%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="26.5012%" y="485" width="0.0801%" height="15" fill="rgb(246,184,20)" fg:x="331" fg:w="1"/><text x="26.7512%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="26.5012%" y="469" width="0.0801%" height="15" fill="rgb(251,216,0)" fg:x="331" fg:w="1"/><text x="26.7512%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="26.5012%" y="453" width="0.0801%" height="15" fill="rgb(238,41,42)" fg:x="331" fg:w="1"/><text x="26.7512%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.5012%" y="437" width="0.0801%" height="15" fill="rgb(227,224,50)" fg:x="331" fg:w="1"/><text x="26.7512%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.5012%" y="421" width="0.0801%" height="15" fill="rgb(237,189,18)" fg:x="331" fg:w="1"/><text x="26.7512%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="26.5012%" y="405" width="0.0801%" height="15" fill="rgb(238,108,6)" fg:x="331" fg:w="1"/><text x="26.7512%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="26.5012%" y="389" width="0.0801%" height="15" fill="rgb(214,197,53)" fg:x="331" fg:w="1"/><text x="26.7512%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="26.5012%" y="373" width="0.0801%" height="15" fill="rgb(206,183,15)" fg:x="331" fg:w="1"/><text x="26.7512%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="26.5012%" y="357" width="0.0801%" height="15" fill="rgb(208,130,32)" fg:x="331" fg:w="1"/><text x="26.7512%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="26.5012%" y="341" width="0.0801%" height="15" fill="rgb(226,128,52)" fg:x="331" fg:w="1"/><text x="26.7512%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="26.5012%" y="325" width="0.0801%" height="15" fill="rgb(231,183,21)" fg:x="331" fg:w="1"/><text x="26.7512%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="26.5012%" y="309" width="0.0801%" height="15" fill="rgb(216,8,35)" fg:x="331" fg:w="1"/><text x="26.7512%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.5813%" y="805" width="0.0801%" height="15" fill="rgb(224,221,8)" fg:x="332" fg:w="1"/><text x="26.8313%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.6613%" y="773" width="0.0801%" height="15" fill="rgb(210,111,33)" fg:x="333" fg:w="1"/><text x="26.9113%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.6613%" y="757" width="0.0801%" height="15" fill="rgb(232,211,38)" fg:x="333" fg:w="1"/><text x="26.9113%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.6613%" y="741" width="0.0801%" height="15" fill="rgb(216,190,27)" fg:x="333" fg:w="1"/><text x="26.9113%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.6613%" y="725" width="0.0801%" height="15" fill="rgb(237,215,27)" fg:x="333" fg:w="1"/><text x="26.9113%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.6613%" y="709" width="0.0801%" height="15" fill="rgb(251,121,39)" fg:x="333" fg:w="1"/><text x="26.9113%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.6613%" y="693" width="0.0801%" height="15" fill="rgb(244,21,14)" fg:x="333" fg:w="1"/><text x="26.9113%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.6613%" y="677" width="0.0801%" height="15" fill="rgb(221,192,22)" fg:x="333" fg:w="1"/><text x="26.9113%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.6613%" y="661" width="0.0801%" height="15" fill="rgb(251,190,28)" fg:x="333" fg:w="1"/><text x="26.9113%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.6613%" y="645" width="0.0801%" height="15" fill="rgb(217,4,51)" fg:x="333" fg:w="1"/><text x="26.9113%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.6613%" y="629" width="0.0801%" height="15" fill="rgb(215,183,49)" fg:x="333" fg:w="1"/><text x="26.9113%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.6613%" y="613" width="0.0801%" height="15" fill="rgb(249,28,49)" fg:x="333" fg:w="1"/><text x="26.9113%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.6613%" y="597" width="0.0801%" height="15" fill="rgb(214,42,20)" fg:x="333" fg:w="1"/><text x="26.9113%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6613%" y="581" width="0.0801%" height="15" fill="rgb(222,77,27)" fg:x="333" fg:w="1"/><text x="26.9113%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="26.5813%" y="821" width="0.2402%" height="15" fill="rgb(252,198,32)" fg:x="332" fg:w="3"/><text x="26.8313%" y="831.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="26.6613%" y="805" width="0.1601%" height="15" fill="rgb(207,140,50)" fg:x="333" fg:w="2"/><text x="26.9113%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.6613%" y="789" width="0.1601%" height="15" fill="rgb(251,170,16)" fg:x="333" fg:w="2"/><text x="26.9113%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.7414%" y="773" width="0.0801%" height="15" fill="rgb(249,111,45)" fg:x="334" fg:w="1"/><text x="26.9914%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.7414%" y="757" width="0.0801%" height="15" fill="rgb(241,99,35)" fg:x="334" fg:w="1"/><text x="26.9914%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.7414%" y="741" width="0.0801%" height="15" fill="rgb(216,188,17)" fg:x="334" fg:w="1"/><text x="26.9914%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.7414%" y="725" width="0.0801%" height="15" fill="rgb(254,209,53)" fg:x="334" fg:w="1"/><text x="26.9914%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.7414%" y="709" width="0.0801%" height="15" fill="rgb(231,105,41)" fg:x="334" fg:w="1"/><text x="26.9914%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="26.8215%" y="773" width="0.0801%" height="15" fill="rgb(242,93,23)" fg:x="335" fg:w="1"/><text x="27.0715%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.8215%" y="757" width="0.0801%" height="15" fill="rgb(218,159,11)" fg:x="335" fg:w="1"/><text x="27.0715%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.8215%" y="741" width="0.0801%" height="15" fill="rgb(209,90,32)" fg:x="335" fg:w="1"/><text x="27.0715%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.8215%" y="725" width="0.0801%" height="15" fill="rgb(253,118,46)" fg:x="335" fg:w="1"/><text x="27.0715%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.8215%" y="709" width="0.0801%" height="15" fill="rgb(219,121,2)" fg:x="335" fg:w="1"/><text x="27.0715%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.8215%" y="693" width="0.0801%" height="15" fill="rgb(207,57,47)" fg:x="335" fg:w="1"/><text x="27.0715%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9015%" y="741" width="0.0801%" height="15" fill="rgb(235,113,43)" fg:x="336" fg:w="1"/><text x="27.1515%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9015%" y="725" width="0.0801%" height="15" fill="rgb(238,30,50)" fg:x="336" fg:w="1"/><text x="27.1515%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9015%" y="709" width="0.0801%" height="15" fill="rgb(237,47,29)" fg:x="336" fg:w="1"/><text x="27.1515%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.9015%" y="693" width="0.0801%" height="15" fill="rgb(245,102,24)" fg:x="336" fg:w="1"/><text x="27.1515%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.9015%" y="677" width="0.0801%" height="15" fill="rgb(245,152,9)" fg:x="336" fg:w="1"/><text x="27.1515%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.9015%" y="661" width="0.0801%" height="15" fill="rgb(223,213,17)" fg:x="336" fg:w="1"/><text x="27.1515%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.9015%" y="645" width="0.0801%" height="15" fill="rgb(241,164,4)" fg:x="336" fg:w="1"/><text x="27.1515%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.9015%" y="629" width="0.0801%" height="15" fill="rgb(205,209,31)" fg:x="336" fg:w="1"/><text x="27.1515%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.9015%" y="613" width="0.0801%" height="15" fill="rgb(248,173,2)" fg:x="336" fg:w="1"/><text x="27.1515%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.9015%" y="597" width="0.0801%" height="15" fill="rgb(207,67,32)" fg:x="336" fg:w="1"/><text x="27.1515%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.9015%" y="581" width="0.0801%" height="15" fill="rgb(239,109,13)" fg:x="336" fg:w="1"/><text x="27.1515%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.9015%" y="565" width="0.0801%" height="15" fill="rgb(233,123,24)" fg:x="336" fg:w="1"/><text x="27.1515%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.9015%" y="549" width="0.0801%" height="15" fill="rgb(232,120,19)" fg:x="336" fg:w="1"/><text x="27.1515%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.9015%" y="533" width="0.0801%" height="15" fill="rgb(225,17,50)" fg:x="336" fg:w="1"/><text x="27.1515%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.9015%" y="517" width="0.0801%" height="15" fill="rgb(239,216,13)" fg:x="336" fg:w="1"/><text x="27.1515%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.9015%" y="501" width="0.0801%" height="15" fill="rgb(232,213,26)" fg:x="336" fg:w="1"/><text x="27.1515%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="26.8215%" y="805" width="0.2402%" height="15" fill="rgb(244,59,39)" fg:x="335" fg:w="3"/><text x="27.0715%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="26.8215%" y="789" width="0.2402%" height="15" fill="rgb(234,61,35)" fg:x="335" fg:w="3"/><text x="27.0715%" y="799.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="26.9015%" y="773" width="0.1601%" height="15" fill="rgb(245,94,24)" fg:x="336" fg:w="2"/><text x="27.1515%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="26.9015%" y="757" width="0.1601%" height="15" fill="rgb(238,190,44)" fg:x="336" fg:w="2"/><text x="27.1515%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.9816%" y="741" width="0.0801%" height="15" fill="rgb(205,145,25)" fg:x="337" fg:w="1"/><text x="27.2316%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.9816%" y="725" width="0.0801%" height="15" fill="rgb(229,158,41)" fg:x="337" fg:w="1"/><text x="27.2316%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.9816%" y="709" width="0.0801%" height="15" fill="rgb(224,121,5)" fg:x="337" fg:w="1"/><text x="27.2316%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.9816%" y="693" width="0.0801%" height="15" fill="rgb(238,168,35)" fg:x="337" fg:w="1"/><text x="27.2316%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.9816%" y="677" width="0.0801%" height="15" fill="rgb(231,11,42)" fg:x="337" fg:w="1"/><text x="27.2316%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.9816%" y="661" width="0.0801%" height="15" fill="rgb(241,105,19)" fg:x="337" fg:w="1"/><text x="27.2316%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="26.4211%" y="837" width="0.7206%" height="15" fill="rgb(253,210,20)" fg:x="330" fg:w="9"/><text x="26.6711%" y="847.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="26.8215%" y="821" width="0.3203%" height="15" fill="rgb(215,72,52)" fg:x="335" fg:w="4"/><text x="27.0715%" y="831.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="27.0616%" y="805" width="0.0801%" height="15" fill="rgb(223,225,30)" fg:x="338" fg:w="1"/><text x="27.3116%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.0616%" y="789" width="0.0801%" height="15" fill="rgb(220,138,44)" fg:x="338" fg:w="1"/><text x="27.3116%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.0616%" y="773" width="0.0801%" height="15" fill="rgb(206,128,12)" fg:x="338" fg:w="1"/><text x="27.3116%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="27.0616%" y="757" width="0.0801%" height="15" fill="rgb(245,194,0)" fg:x="338" fg:w="1"/><text x="27.3116%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.0616%" y="741" width="0.0801%" height="15" fill="rgb(235,175,41)" fg:x="338" fg:w="1"/><text x="27.3116%" y="751.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="27.1417%" y="805" width="0.0801%" height="15" fill="rgb(216,15,48)" fg:x="339" fg:w="1"/><text x="27.3917%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.1417%" y="789" width="0.0801%" height="15" fill="rgb(223,179,5)" fg:x="339" fg:w="1"/><text x="27.3917%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.1417%" y="773" width="0.0801%" height="15" fill="rgb(220,80,15)" fg:x="339" fg:w="1"/><text x="27.3917%" y="783.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="27.1417%" y="837" width="0.1601%" height="15" fill="rgb(228,20,30)" fg:x="339" fg:w="2"/><text x="27.3917%" y="847.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="27.1417%" y="821" width="0.1601%" height="15" fill="rgb(229,194,27)" fg:x="339" fg:w="2"/><text x="27.3917%" y="831.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="27.2218%" y="805" width="0.0801%" height="15" fill="rgb(238,202,32)" fg:x="340" fg:w="1"/><text x="27.4718%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.2218%" y="789" width="0.0801%" height="15" fill="rgb(207,82,27)" fg:x="340" fg:w="1"/><text x="27.4718%" y="799.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (296 samples, 23.70%)</title><rect x="3.6829%" y="869" width="23.6990%" height="15" fill="rgb(246,122,46)" fg:x="46" fg:w="296"/><text x="3.9329%" y="879.50">&lt;tests::HoldingKeyInVessel as tests::W..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (12 samples, 0.96%)</title><rect x="26.4211%" y="853" width="0.9608%" height="15" fill="rgb(220,101,26)" fg:x="330" fg:w="12"/><text x="26.6711%" y="863.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="27.3018%" y="837" width="0.0801%" height="15" fill="rgb(251,63,9)" fg:x="341" fg:w="1"/><text x="27.5518%" y="847.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="27.3018%" y="821" width="0.0801%" height="15" fill="rgb(235,186,5)" fg:x="341" fg:w="1"/><text x="27.5518%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="27.3018%" y="805" width="0.0801%" height="15" fill="rgb(241,139,37)" fg:x="341" fg:w="1"/><text x="27.5518%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="27.3018%" y="789" width="0.0801%" height="15" fill="rgb(252,177,51)" fg:x="341" fg:w="1"/><text x="27.5518%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="27.3018%" y="773" width="0.0801%" height="15" fill="rgb(214,131,22)" fg:x="341" fg:w="1"/><text x="27.5518%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.3018%" y="757" width="0.0801%" height="15" fill="rgb(246,53,19)" fg:x="341" fg:w="1"/><text x="27.5518%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.3018%" y="741" width="0.0801%" height="15" fill="rgb(231,158,27)" fg:x="341" fg:w="1"/><text x="27.5518%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.3018%" y="725" width="0.0801%" height="15" fill="rgb(226,166,46)" fg:x="341" fg:w="1"/><text x="27.5518%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.3018%" y="709" width="0.0801%" height="15" fill="rgb(218,178,26)" fg:x="341" fg:w="1"/><text x="27.5518%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.3018%" y="693" width="0.0801%" height="15" fill="rgb(206,25,39)" fg:x="341" fg:w="1"/><text x="27.5518%" y="703.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="27.3018%" y="677" width="0.0801%" height="15" fill="rgb(232,218,41)" fg:x="341" fg:w="1"/><text x="27.5518%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="27.3819%" y="853" width="0.0801%" height="15" fill="rgb(212,151,15)" fg:x="342" fg:w="1"/><text x="27.6319%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.3819%" y="837" width="0.0801%" height="15" fill="rgb(213,49,22)" fg:x="342" fg:w="1"/><text x="27.6319%" y="847.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="27.4620%" y="741" width="0.0801%" height="15" fill="rgb(247,116,21)" fg:x="343" fg:w="1"/><text x="27.7120%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="27.4620%" y="725" width="0.0801%" height="15" fill="rgb(248,98,14)" fg:x="343" fg:w="1"/><text x="27.7120%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.4620%" y="709" width="0.0801%" height="15" fill="rgb(247,72,6)" fg:x="343" fg:w="1"/><text x="27.7120%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.4620%" y="693" width="0.0801%" height="15" fill="rgb(213,9,22)" fg:x="343" fg:w="1"/><text x="27.7120%" y="703.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="27.4620%" y="677" width="0.0801%" height="15" fill="rgb(213,122,30)" fg:x="343" fg:w="1"/><text x="27.7120%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="27.4620%" y="661" width="0.0801%" height="15" fill="rgb(244,11,30)" fg:x="343" fg:w="1"/><text x="27.7120%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="27.4620%" y="645" width="0.0801%" height="15" fill="rgb(236,102,26)" fg:x="343" fg:w="1"/><text x="27.7120%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="27.4620%" y="629" width="0.0801%" height="15" fill="rgb(231,166,37)" fg:x="343" fg:w="1"/><text x="27.7120%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="27.4620%" y="613" width="0.0801%" height="15" fill="rgb(220,224,29)" fg:x="343" fg:w="1"/><text x="27.7120%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="27.4620%" y="597" width="0.0801%" height="15" fill="rgb(227,30,40)" fg:x="343" fg:w="1"/><text x="27.7120%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.08%)</title><rect x="27.4620%" y="581" width="0.0801%" height="15" fill="rgb(235,8,36)" fg:x="343" fg:w="1"/><text x="27.7120%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.08%)</title><rect x="27.4620%" y="565" width="0.0801%" height="15" fill="rgb(232,175,19)" fg:x="343" fg:w="1"/><text x="27.7120%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="27.4620%" y="853" width="0.1601%" height="15" fill="rgb(217,114,10)" fg:x="343" fg:w="2"/><text x="27.7120%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="27.4620%" y="837" width="0.1601%" height="15" fill="rgb(214,112,41)" fg:x="343" fg:w="2"/><text x="27.7120%" y="847.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="27.4620%" y="821" width="0.1601%" height="15" fill="rgb(226,69,34)" fg:x="343" fg:w="2"/><text x="27.7120%" y="831.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="27.4620%" y="805" width="0.1601%" height="15" fill="rgb(219,23,46)" fg:x="343" fg:w="2"/><text x="27.7120%" y="815.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="27.4620%" y="789" width="0.1601%" height="15" fill="rgb(233,3,8)" fg:x="343" fg:w="2"/><text x="27.7120%" y="799.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="27.4620%" y="773" width="0.1601%" height="15" fill="rgb(251,34,42)" fg:x="343" fg:w="2"/><text x="27.7120%" y="783.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="27.4620%" y="757" width="0.1601%" height="15" fill="rgb(215,84,9)" fg:x="343" fg:w="2"/><text x="27.7120%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="27.5420%" y="741" width="0.0801%" height="15" fill="rgb(231,75,52)" fg:x="344" fg:w="1"/><text x="27.7920%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="27.5420%" y="725" width="0.0801%" height="15" fill="rgb(247,201,31)" fg:x="344" fg:w="1"/><text x="27.7920%" y="735.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="27.5420%" y="709" width="0.0801%" height="15" fill="rgb(215,171,37)" fg:x="344" fg:w="1"/><text x="27.7920%" y="719.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="27.5420%" y="693" width="0.0801%" height="15" fill="rgb(208,208,44)" fg:x="344" fg:w="1"/><text x="27.7920%" y="703.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="27.6221%" y="853" width="0.1601%" height="15" fill="rgb(247,146,54)" fg:x="345" fg:w="2"/><text x="27.8721%" y="863.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="27.6221%" y="837" width="0.1601%" height="15" fill="rgb(209,0,40)" fg:x="345" fg:w="2"/><text x="27.8721%" y="847.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="27.6221%" y="821" width="0.1601%" height="15" fill="rgb(221,59,4)" fg:x="345" fg:w="2"/><text x="27.8721%" y="831.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="27.6221%" y="805" width="0.1601%" height="15" fill="rgb(227,153,47)" fg:x="345" fg:w="2"/><text x="27.8721%" y="815.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="27.6221%" y="789" width="0.1601%" height="15" fill="rgb(253,225,10)" fg:x="345" fg:w="2"/><text x="27.8721%" y="799.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="27.6221%" y="773" width="0.1601%" height="15" fill="rgb(237,201,24)" fg:x="345" fg:w="2"/><text x="27.8721%" y="783.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (2 samples, 0.16%)</title><rect x="27.6221%" y="757" width="0.1601%" height="15" fill="rgb(238,23,27)" fg:x="345" fg:w="2"/><text x="27.8721%" y="767.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="27.7022%" y="741" width="0.0801%" height="15" fill="rgb(236,54,50)" fg:x="346" fg:w="1"/><text x="27.9522%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="27.7822%" y="821" width="0.0801%" height="15" fill="rgb(216,106,0)" fg:x="347" fg:w="1"/><text x="28.0322%" y="831.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="27.7822%" y="805" width="0.0801%" height="15" fill="rgb(234,179,35)" fg:x="347" fg:w="1"/><text x="28.0322%" y="815.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="27.7822%" y="789" width="0.0801%" height="15" fill="rgb(210,35,8)" fg:x="347" fg:w="1"/><text x="28.0322%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="27.7822%" y="773" width="0.0801%" height="15" fill="rgb(238,144,16)" fg:x="347" fg:w="1"/><text x="28.0322%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="27.7822%" y="757" width="0.0801%" height="15" fill="rgb(244,54,7)" fg:x="347" fg:w="1"/><text x="28.0322%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="27.7822%" y="741" width="0.0801%" height="15" fill="rgb(233,225,40)" fg:x="347" fg:w="1"/><text x="28.0322%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="27.7822%" y="725" width="0.0801%" height="15" fill="rgb(249,227,23)" fg:x="347" fg:w="1"/><text x="28.0322%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="27.7822%" y="709" width="0.0801%" height="15" fill="rgb(215,42,44)" fg:x="347" fg:w="1"/><text x="28.0322%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="27.7822%" y="693" width="0.0801%" height="15" fill="rgb(220,145,40)" fg:x="347" fg:w="1"/><text x="28.0322%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="27.7822%" y="677" width="0.0801%" height="15" fill="rgb(228,218,40)" fg:x="347" fg:w="1"/><text x="28.0322%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="27.7822%" y="661" width="0.0801%" height="15" fill="rgb(217,52,54)" fg:x="347" fg:w="1"/><text x="28.0322%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="27.7822%" y="645" width="0.0801%" height="15" fill="rgb(223,90,22)" fg:x="347" fg:w="1"/><text x="28.0322%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="27.7822%" y="629" width="0.0801%" height="15" fill="rgb(232,114,35)" fg:x="347" fg:w="1"/><text x="28.0322%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="27.7822%" y="613" width="0.0801%" height="15" fill="rgb(227,223,50)" fg:x="347" fg:w="1"/><text x="28.0322%" y="623.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="27.7822%" y="597" width="0.0801%" height="15" fill="rgb(249,175,7)" fg:x="347" fg:w="1"/><text x="28.0322%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="27.8623%" y="805" width="0.0801%" height="15" fill="rgb(249,173,15)" fg:x="348" fg:w="1"/><text x="28.1123%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="27.8623%" y="789" width="0.0801%" height="15" fill="rgb(240,131,6)" fg:x="348" fg:w="1"/><text x="28.1123%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.8623%" y="773" width="0.0801%" height="15" fill="rgb(246,117,16)" fg:x="348" fg:w="1"/><text x="28.1123%" y="783.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.0224%" y="773" width="0.0801%" height="15" fill="rgb(209,32,16)" fg:x="350" fg:w="1"/><text x="28.2724%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.0224%" y="757" width="0.0801%" height="15" fill="rgb(207,45,44)" fg:x="350" fg:w="1"/><text x="28.2724%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.0224%" y="741" width="0.0801%" height="15" fill="rgb(210,66,3)" fg:x="350" fg:w="1"/><text x="28.2724%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.0224%" y="725" width="0.0801%" height="15" fill="rgb(246,133,30)" fg:x="350" fg:w="1"/><text x="28.2724%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.0224%" y="709" width="0.0801%" height="15" fill="rgb(224,37,17)" fg:x="350" fg:w="1"/><text x="28.2724%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.0224%" y="693" width="0.0801%" height="15" fill="rgb(237,218,18)" fg:x="350" fg:w="1"/><text x="28.2724%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.0224%" y="677" width="0.0801%" height="15" fill="rgb(240,57,8)" fg:x="350" fg:w="1"/><text x="28.2724%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.0224%" y="661" width="0.0801%" height="15" fill="rgb(231,51,38)" fg:x="350" fg:w="1"/><text x="28.2724%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.0224%" y="645" width="0.0801%" height="15" fill="rgb(230,89,50)" fg:x="350" fg:w="1"/><text x="28.2724%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.0224%" y="629" width="0.0801%" height="15" fill="rgb(234,103,34)" fg:x="350" fg:w="1"/><text x="28.2724%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.0224%" y="613" width="0.0801%" height="15" fill="rgb(220,45,48)" fg:x="350" fg:w="1"/><text x="28.2724%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.0224%" y="597" width="0.0801%" height="15" fill="rgb(250,210,3)" fg:x="350" fg:w="1"/><text x="28.2724%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.0224%" y="581" width="0.0801%" height="15" fill="rgb(210,118,12)" fg:x="350" fg:w="1"/><text x="28.2724%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.0224%" y="565" width="0.0801%" height="15" fill="rgb(238,154,21)" fg:x="350" fg:w="1"/><text x="28.2724%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (5 samples, 0.40%)</title><rect x="27.7822%" y="837" width="0.4003%" height="15" fill="rgb(227,220,4)" fg:x="347" fg:w="5"/><text x="28.0322%" y="847.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (4 samples, 0.32%)</title><rect x="27.8623%" y="821" width="0.3203%" height="15" fill="rgb(207,179,27)" fg:x="348" fg:w="4"/><text x="28.1123%" y="831.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="27.9424%" y="805" width="0.2402%" height="15" fill="rgb(240,111,30)" fg:x="349" fg:w="3"/><text x="28.1924%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="27.9424%" y="789" width="0.2402%" height="15" fill="rgb(251,29,1)" fg:x="349" fg:w="3"/><text x="28.1924%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.1025%" y="773" width="0.0801%" height="15" fill="rgb(224,141,39)" fg:x="351" fg:w="1"/><text x="28.3525%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.1025%" y="757" width="0.0801%" height="15" fill="rgb(207,98,26)" fg:x="351" fg:w="1"/><text x="28.3525%" y="767.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="28.1825%" y="821" width="0.0801%" height="15" fill="rgb(221,37,6)" fg:x="352" fg:w="1"/><text x="28.4325%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="28.1825%" y="805" width="0.0801%" height="15" fill="rgb(217,32,44)" fg:x="352" fg:w="1"/><text x="28.4325%" y="815.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="28.1825%" y="789" width="0.0801%" height="15" fill="rgb(253,149,2)" fg:x="352" fg:w="1"/><text x="28.4325%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="28.3427%" y="773" width="0.2402%" height="15" fill="rgb(220,165,39)" fg:x="354" fg:w="3"/><text x="28.5927%" y="783.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="28.7430%" y="757" width="0.2402%" height="15" fill="rgb(235,33,48)" fg:x="359" fg:w="3"/><text x="28.9930%" y="767.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.9031%" y="741" width="0.0801%" height="15" fill="rgb(221,89,6)" fg:x="361" fg:w="1"/><text x="29.1531%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="28.9031%" y="725" width="0.0801%" height="15" fill="rgb(215,214,6)" fg:x="361" fg:w="1"/><text x="29.1531%" y="735.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="28.5829%" y="773" width="0.6405%" height="15" fill="rgb(241,1,30)" fg:x="357" fg:w="8"/><text x="28.8329%" y="783.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="28.9832%" y="757" width="0.2402%" height="15" fill="rgb(211,140,32)" fg:x="362" fg:w="3"/><text x="29.2332%" y="767.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.1433%" y="741" width="0.0801%" height="15" fill="rgb(232,48,21)" fg:x="364" fg:w="1"/><text x="29.3933%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="29.3835%" y="757" width="0.0801%" height="15" fill="rgb(252,217,9)" fg:x="367" fg:w="1"/><text x="29.6335%" y="767.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.3835%" y="741" width="0.0801%" height="15" fill="rgb(206,123,34)" fg:x="367" fg:w="1"/><text x="29.6335%" y="751.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="29.4636%" y="757" width="0.1601%" height="15" fill="rgb(245,161,38)" fg:x="368" fg:w="2"/><text x="29.7136%" y="767.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.4636%" y="741" width="0.1601%" height="15" fill="rgb(233,205,7)" fg:x="368" fg:w="2"/><text x="29.7136%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.4636%" y="725" width="0.1601%" height="15" fill="rgb(217,119,18)" fg:x="368" fg:w="2"/><text x="29.7136%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.5436%" y="709" width="0.0801%" height="15" fill="rgb(252,126,3)" fg:x="369" fg:w="1"/><text x="29.7936%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.7838%" y="709" width="0.0801%" height="15" fill="rgb(252,188,15)" fg:x="372" fg:w="1"/><text x="30.0338%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="29.8639%" y="709" width="0.2402%" height="15" fill="rgb(228,1,48)" fg:x="373" fg:w="3"/><text x="30.1139%" y="719.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="29.8639%" y="693" width="0.2402%" height="15" fill="rgb(205,187,8)" fg:x="373" fg:w="3"/><text x="30.1139%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="29.9440%" y="677" width="0.1601%" height="15" fill="rgb(205,105,50)" fg:x="374" fg:w="2"/><text x="30.1940%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="29.9440%" y="661" width="0.1601%" height="15" fill="rgb(211,31,46)" fg:x="374" fg:w="2"/><text x="30.1940%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.0240%" y="645" width="0.0801%" height="15" fill="rgb(213,126,5)" fg:x="375" fg:w="1"/><text x="30.2740%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.0240%" y="629" width="0.0801%" height="15" fill="rgb(231,87,9)" fg:x="375" fg:w="1"/><text x="30.2740%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="30.0240%" y="613" width="0.0801%" height="15" fill="rgb(219,224,20)" fg:x="375" fg:w="1"/><text x="30.2740%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="29.7038%" y="741" width="0.4804%" height="15" fill="rgb(230,84,21)" fg:x="371" fg:w="6"/><text x="29.9538%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="29.7038%" y="725" width="0.4804%" height="15" fill="rgb(224,169,42)" fg:x="371" fg:w="6"/><text x="29.9538%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="30.1041%" y="709" width="0.0801%" height="15" fill="rgb(227,182,13)" fg:x="376" fg:w="1"/><text x="30.3541%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="30.1041%" y="693" width="0.0801%" height="15" fill="rgb(249,57,41)" fg:x="376" fg:w="1"/><text x="30.3541%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.1041%" y="677" width="0.0801%" height="15" fill="rgb(214,93,52)" fg:x="376" fg:w="1"/><text x="30.3541%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.1041%" y="661" width="0.0801%" height="15" fill="rgb(229,161,34)" fg:x="376" fg:w="1"/><text x="30.3541%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="30.1841%" y="741" width="0.2402%" height="15" fill="rgb(227,193,17)" fg:x="377" fg:w="3"/><text x="30.4341%" y="751.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="30.2642%" y="725" width="0.1601%" height="15" fill="rgb(242,164,46)" fg:x="378" fg:w="2"/><text x="30.5142%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.3443%" y="709" width="0.0801%" height="15" fill="rgb(242,142,47)" fg:x="379" fg:w="1"/><text x="30.5943%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="30.3443%" y="693" width="0.0801%" height="15" fill="rgb(208,23,18)" fg:x="379" fg:w="1"/><text x="30.5943%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.5044%" y="645" width="0.0801%" height="15" fill="rgb(219,54,38)" fg:x="381" fg:w="1"/><text x="30.7544%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="30.4243%" y="693" width="0.2402%" height="15" fill="rgb(206,97,35)" fg:x="380" fg:w="3"/><text x="30.6743%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="30.5044%" y="677" width="0.1601%" height="15" fill="rgb(208,76,8)" fg:x="381" fg:w="2"/><text x="30.7544%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="30.5044%" y="661" width="0.1601%" height="15" fill="rgb(220,92,28)" fg:x="381" fg:w="2"/><text x="30.7544%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="30.5845%" y="645" width="0.0801%" height="15" fill="rgb(209,158,39)" fg:x="382" fg:w="1"/><text x="30.8345%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="30.6645%" y="693" width="0.4804%" height="15" fill="rgb(238,175,9)" fg:x="383" fg:w="6"/><text x="30.9145%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="30.6645%" y="677" width="0.4804%" height="15" fill="rgb(240,116,17)" fg:x="383" fg:w="6"/><text x="30.9145%" y="687.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="30.7446%" y="661" width="0.4003%" height="15" fill="rgb(208,7,2)" fg:x="384" fg:w="5"/><text x="30.9946%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="30.9047%" y="645" width="0.2402%" height="15" fill="rgb(252,52,4)" fg:x="386" fg:w="3"/><text x="31.1547%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="30.9047%" y="629" width="0.2402%" height="15" fill="rgb(222,68,34)" fg:x="386" fg:w="3"/><text x="31.1547%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="30.9047%" y="613" width="0.2402%" height="15" fill="rgb(242,154,35)" fg:x="386" fg:w="3"/><text x="31.1547%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="30.9047%" y="597" width="0.2402%" height="15" fill="rgb(210,125,54)" fg:x="386" fg:w="3"/><text x="31.1547%" y="607.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="30.9047%" y="581" width="0.2402%" height="15" fill="rgb(247,121,18)" fg:x="386" fg:w="3"/><text x="31.1547%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="30.4243%" y="709" width="0.8006%" height="15" fill="rgb(223,48,51)" fg:x="380" fg:w="10"/><text x="30.6743%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.1449%" y="693" width="0.0801%" height="15" fill="rgb(211,156,48)" fg:x="389" fg:w="1"/><text x="31.3949%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.1449%" y="677" width="0.0801%" height="15" fill="rgb(236,56,31)" fg:x="389" fg:w="1"/><text x="31.3949%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.1449%" y="661" width="0.0801%" height="15" fill="rgb(247,157,52)" fg:x="389" fg:w="1"/><text x="31.3949%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="31.1449%" y="645" width="0.0801%" height="15" fill="rgb(244,121,39)" fg:x="389" fg:w="1"/><text x="31.3949%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.1449%" y="629" width="0.0801%" height="15" fill="rgb(239,4,40)" fg:x="389" fg:w="1"/><text x="31.3949%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="31.1449%" y="613" width="0.0801%" height="15" fill="rgb(213,204,45)" fg:x="389" fg:w="1"/><text x="31.3949%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.68%)</title><rect x="29.6237%" y="757" width="1.6813%" height="15" fill="rgb(242,107,0)" fg:x="370" fg:w="21"/><text x="29.8737%" y="767.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="30.4243%" y="741" width="0.8807%" height="15" fill="rgb(215,152,25)" fg:x="380" fg:w="11"/><text x="30.6743%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="30.4243%" y="725" width="0.8807%" height="15" fill="rgb(233,151,6)" fg:x="380" fg:w="11"/><text x="30.6743%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.2250%" y="709" width="0.0801%" height="15" fill="rgb(206,126,44)" fg:x="390" fg:w="1"/><text x="31.4750%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="31.2250%" y="693" width="0.0801%" height="15" fill="rgb(209,145,15)" fg:x="390" fg:w="1"/><text x="31.4750%" y="703.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (48 samples, 3.84%)</title><rect x="28.3427%" y="789" width="3.8431%" height="15" fill="rgb(235,214,8)" fg:x="354" fg:w="48"/><text x="28.5927%" y="799.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (37 samples, 2.96%)</title><rect x="29.2234%" y="773" width="2.9624%" height="15" fill="rgb(216,140,51)" fg:x="365" fg:w="37"/><text x="29.4734%" y="783.50">ser..</text></g><g><title>std::io::Write::write_all (11 samples, 0.88%)</title><rect x="31.3050%" y="757" width="0.8807%" height="15" fill="rgb(213,83,34)" fg:x="391" fg:w="11"/><text x="31.5550%" y="767.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (9 samples, 0.72%)</title><rect x="31.4652%" y="741" width="0.7206%" height="15" fill="rgb(218,186,44)" fg:x="393" fg:w="9"/><text x="31.7152%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6 samples, 0.48%)</title><rect x="31.7054%" y="725" width="0.4804%" height="15" fill="rgb(225,147,10)" fg:x="396" fg:w="6"/><text x="31.9554%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="31.8655%" y="709" width="0.3203%" height="15" fill="rgb(209,214,20)" fg:x="398" fg:w="4"/><text x="32.1155%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="31.9456%" y="693" width="0.2402%" height="15" fill="rgb(252,61,32)" fg:x="399" fg:w="3"/><text x="32.1956%" y="703.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="31.9456%" y="677" width="0.2402%" height="15" fill="rgb(237,204,10)" fg:x="399" fg:w="3"/><text x="32.1956%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="32.4259%" y="757" width="0.1601%" height="15" fill="rgb(246,118,16)" fg:x="405" fg:w="2"/><text x="32.6759%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.5060%" y="741" width="0.0801%" height="15" fill="rgb(214,50,9)" fg:x="406" fg:w="1"/><text x="32.7560%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="32.6661%" y="741" width="0.2402%" height="15" fill="rgb(212,41,1)" fg:x="408" fg:w="3"/><text x="32.9161%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.9864%" y="693" width="0.0801%" height="15" fill="rgb(228,172,32)" fg:x="412" fg:w="1"/><text x="33.2364%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="32.1857%" y="789" width="0.9608%" height="15" fill="rgb(231,85,38)" fg:x="402" fg:w="12"/><text x="32.4357%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.96%)</title><rect x="32.1857%" y="773" width="0.9608%" height="15" fill="rgb(223,120,31)" fg:x="402" fg:w="12"/><text x="32.4357%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="32.5861%" y="757" width="0.5604%" height="15" fill="rgb(254,174,9)" fg:x="407" fg:w="7"/><text x="32.8361%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="32.9063%" y="741" width="0.2402%" height="15" fill="rgb(243,197,0)" fg:x="411" fg:w="3"/><text x="33.1563%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="32.9864%" y="725" width="0.1601%" height="15" fill="rgb(226,186,17)" fg:x="412" fg:w="2"/><text x="33.2364%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="32.9864%" y="709" width="0.1601%" height="15" fill="rgb(229,38,38)" fg:x="412" fg:w="2"/><text x="33.2364%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.0665%" y="693" width="0.0801%" height="15" fill="rgb(238,82,14)" fg:x="413" fg:w="1"/><text x="33.3165%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.0665%" y="677" width="0.0801%" height="15" fill="rgb(230,154,54)" fg:x="413" fg:w="1"/><text x="33.3165%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.0665%" y="661" width="0.0801%" height="15" fill="rgb(243,84,17)" fg:x="413" fg:w="1"/><text x="33.3165%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.1465%" y="725" width="0.0801%" height="15" fill="rgb(226,41,37)" fg:x="414" fg:w="1"/><text x="33.3965%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.2266%" y="709" width="0.0801%" height="15" fill="rgb(219,20,18)" fg:x="415" fg:w="1"/><text x="33.4766%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.3066%" y="693" width="0.0801%" height="15" fill="rgb(243,173,39)" fg:x="416" fg:w="1"/><text x="33.5566%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.3066%" y="677" width="0.0801%" height="15" fill="rgb(245,79,20)" fg:x="416" fg:w="1"/><text x="33.5566%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="33.1465%" y="757" width="0.4003%" height="15" fill="rgb(229,101,45)" fg:x="414" fg:w="5"/><text x="33.3965%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="33.1465%" y="741" width="0.4003%" height="15" fill="rgb(215,123,52)" fg:x="414" fg:w="5"/><text x="33.3965%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="33.2266%" y="725" width="0.3203%" height="15" fill="rgb(215,11,33)" fg:x="415" fg:w="4"/><text x="33.4766%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="33.3066%" y="709" width="0.2402%" height="15" fill="rgb(245,105,20)" fg:x="416" fg:w="3"/><text x="33.5566%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.3867%" y="693" width="0.1601%" height="15" fill="rgb(231,132,30)" fg:x="417" fg:w="2"/><text x="33.6367%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="33.3867%" y="677" width="0.1601%" height="15" fill="rgb(224,62,21)" fg:x="417" fg:w="2"/><text x="33.6367%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="33.3867%" y="661" width="0.1601%" height="15" fill="rgb(209,221,38)" fg:x="417" fg:w="2"/><text x="33.6367%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.4668%" y="645" width="0.0801%" height="15" fill="rgb(229,200,30)" fg:x="418" fg:w="1"/><text x="33.7168%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="33.5468%" y="741" width="0.1601%" height="15" fill="rgb(237,142,41)" fg:x="419" fg:w="2"/><text x="33.7968%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="33.5468%" y="725" width="0.1601%" height="15" fill="rgb(238,37,22)" fg:x="419" fg:w="2"/><text x="33.7968%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="33.5468%" y="709" width="0.1601%" height="15" fill="rgb(234,182,17)" fg:x="419" fg:w="2"/><text x="33.7968%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="33.6269%" y="693" width="0.0801%" height="15" fill="rgb(237,58,48)" fg:x="420" fg:w="1"/><text x="33.8769%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="33.6269%" y="677" width="0.0801%" height="15" fill="rgb(226,112,37)" fg:x="420" fg:w="1"/><text x="33.8769%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="33.6269%" y="661" width="0.0801%" height="15" fill="rgb(230,201,20)" fg:x="420" fg:w="1"/><text x="33.8769%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="33.6269%" y="645" width="0.0801%" height="15" fill="rgb(252,95,39)" fg:x="420" fg:w="1"/><text x="33.8769%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="33.6269%" y="629" width="0.0801%" height="15" fill="rgb(240,150,33)" fg:x="420" fg:w="1"/><text x="33.8769%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="33.7070%" y="741" width="0.0801%" height="15" fill="rgb(208,202,37)" fg:x="421" fg:w="1"/><text x="33.9570%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="33.7870%" y="741" width="0.0801%" height="15" fill="rgb(251,37,12)" fg:x="422" fg:w="1"/><text x="34.0370%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.7870%" y="725" width="0.0801%" height="15" fill="rgb(247,150,26)" fg:x="422" fg:w="1"/><text x="34.0370%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.7870%" y="709" width="0.0801%" height="15" fill="rgb(232,28,8)" fg:x="422" fg:w="1"/><text x="34.0370%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.8671%" y="725" width="0.0801%" height="15" fill="rgb(226,121,34)" fg:x="423" fg:w="1"/><text x="34.1171%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.8671%" y="709" width="0.0801%" height="15" fill="rgb(237,23,13)" fg:x="423" fg:w="1"/><text x="34.1171%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.8671%" y="693" width="0.0801%" height="15" fill="rgb(214,42,29)" fg:x="423" fg:w="1"/><text x="34.1171%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.8671%" y="677" width="0.0801%" height="15" fill="rgb(246,204,29)" fg:x="423" fg:w="1"/><text x="34.1171%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.8671%" y="661" width="0.0801%" height="15" fill="rgb(242,28,40)" fg:x="423" fg:w="1"/><text x="34.1171%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.8671%" y="645" width="0.0801%" height="15" fill="rgb(243,64,49)" fg:x="423" fg:w="1"/><text x="34.1171%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.8671%" y="629" width="0.0801%" height="15" fill="rgb(226,93,13)" fg:x="423" fg:w="1"/><text x="34.1171%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.8671%" y="613" width="0.0801%" height="15" fill="rgb(241,113,26)" fg:x="423" fg:w="1"/><text x="34.1171%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.8671%" y="597" width="0.0801%" height="15" fill="rgb(209,209,0)" fg:x="423" fg:w="1"/><text x="34.1171%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.8671%" y="581" width="0.0801%" height="15" fill="rgb(251,183,50)" fg:x="423" fg:w="1"/><text x="34.1171%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.8671%" y="565" width="0.0801%" height="15" fill="rgb(248,24,43)" fg:x="423" fg:w="1"/><text x="34.1171%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.9472%" y="725" width="0.0801%" height="15" fill="rgb(218,102,9)" fg:x="424" fg:w="1"/><text x="34.1972%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.9472%" y="709" width="0.0801%" height="15" fill="rgb(249,209,39)" fg:x="424" fg:w="1"/><text x="34.1972%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.9472%" y="693" width="0.0801%" height="15" fill="rgb(210,37,6)" fg:x="424" fg:w="1"/><text x="34.1972%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.9472%" y="677" width="0.0801%" height="15" fill="rgb(212,99,4)" fg:x="424" fg:w="1"/><text x="34.1972%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.9472%" y="661" width="0.0801%" height="15" fill="rgb(253,59,46)" fg:x="424" fg:w="1"/><text x="34.1972%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.9472%" y="645" width="0.0801%" height="15" fill="rgb(229,96,9)" fg:x="424" fg:w="1"/><text x="34.1972%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.9472%" y="629" width="0.0801%" height="15" fill="rgb(207,103,49)" fg:x="424" fg:w="1"/><text x="34.1972%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.9472%" y="613" width="0.0801%" height="15" fill="rgb(250,226,20)" fg:x="424" fg:w="1"/><text x="34.1972%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.9472%" y="597" width="0.0801%" height="15" fill="rgb(238,220,11)" fg:x="424" fg:w="1"/><text x="34.1972%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.9472%" y="581" width="0.0801%" height="15" fill="rgb(236,74,15)" fg:x="424" fg:w="1"/><text x="34.1972%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.9472%" y="565" width="0.0801%" height="15" fill="rgb(218,43,40)" fg:x="424" fg:w="1"/><text x="34.1972%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.9472%" y="549" width="0.0801%" height="15" fill="rgb(245,206,37)" fg:x="424" fg:w="1"/><text x="34.1972%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.9472%" y="533" width="0.0801%" height="15" fill="rgb(206,30,3)" fg:x="424" fg:w="1"/><text x="34.1972%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="34.0272%" y="725" width="0.0801%" height="15" fill="rgb(211,29,35)" fg:x="425" fg:w="1"/><text x="34.2772%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="34.1873%" y="709" width="0.0801%" height="15" fill="rgb(218,49,50)" fg:x="427" fg:w="1"/><text x="34.4373%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="34.1873%" y="693" width="0.0801%" height="15" fill="rgb(211,114,30)" fg:x="427" fg:w="1"/><text x="34.4373%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="34.1873%" y="677" width="0.0801%" height="15" fill="rgb(238,70,33)" fg:x="427" fg:w="1"/><text x="34.4373%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.2674%" y="693" width="0.0801%" height="15" fill="rgb(238,141,50)" fg:x="428" fg:w="1"/><text x="34.5174%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.2674%" y="677" width="0.0801%" height="15" fill="rgb(205,69,6)" fg:x="428" fg:w="1"/><text x="34.5174%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.2674%" y="661" width="0.0801%" height="15" fill="rgb(229,65,0)" fg:x="428" fg:w="1"/><text x="34.5174%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.2674%" y="645" width="0.0801%" height="15" fill="rgb(211,3,37)" fg:x="428" fg:w="1"/><text x="34.5174%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.2674%" y="629" width="0.0801%" height="15" fill="rgb(223,196,42)" fg:x="428" fg:w="1"/><text x="34.5174%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.2674%" y="613" width="0.0801%" height="15" fill="rgb(227,191,15)" fg:x="428" fg:w="1"/><text x="34.5174%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.2674%" y="597" width="0.0801%" height="15" fill="rgb(229,210,53)" fg:x="428" fg:w="1"/><text x="34.5174%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.2674%" y="581" width="0.0801%" height="15" fill="rgb(250,203,10)" fg:x="428" fg:w="1"/><text x="34.5174%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.2674%" y="565" width="0.0801%" height="15" fill="rgb(247,8,37)" fg:x="428" fg:w="1"/><text x="34.5174%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.2674%" y="549" width="0.0801%" height="15" fill="rgb(240,52,9)" fg:x="428" fg:w="1"/><text x="34.5174%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.2674%" y="533" width="0.0801%" height="15" fill="rgb(243,100,52)" fg:x="428" fg:w="1"/><text x="34.5174%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.2674%" y="517" width="0.0801%" height="15" fill="rgb(224,149,30)" fg:x="428" fg:w="1"/><text x="34.5174%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="34.3475%" y="677" width="0.1601%" height="15" fill="rgb(232,27,45)" fg:x="429" fg:w="2"/><text x="34.5975%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.4275%" y="661" width="0.0801%" height="15" fill="rgb(242,161,36)" fg:x="430" fg:w="1"/><text x="34.6775%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.4275%" y="645" width="0.0801%" height="15" fill="rgb(235,223,32)" fg:x="430" fg:w="1"/><text x="34.6775%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.4275%" y="629" width="0.0801%" height="15" fill="rgb(242,78,19)" fg:x="430" fg:w="1"/><text x="34.6775%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.4275%" y="613" width="0.0801%" height="15" fill="rgb(233,157,47)" fg:x="430" fg:w="1"/><text x="34.6775%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.4275%" y="597" width="0.0801%" height="15" fill="rgb(251,213,5)" fg:x="430" fg:w="1"/><text x="34.6775%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.4275%" y="581" width="0.0801%" height="15" fill="rgb(215,223,5)" fg:x="430" fg:w="1"/><text x="34.6775%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.4275%" y="565" width="0.0801%" height="15" fill="rgb(230,14,7)" fg:x="430" fg:w="1"/><text x="34.6775%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.4275%" y="549" width="0.0801%" height="15" fill="rgb(249,179,20)" fg:x="430" fg:w="1"/><text x="34.6775%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.4275%" y="533" width="0.0801%" height="15" fill="rgb(230,204,44)" fg:x="430" fg:w="1"/><text x="34.6775%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.4275%" y="517" width="0.0801%" height="15" fill="rgb(233,229,46)" fg:x="430" fg:w="1"/><text x="34.6775%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.4275%" y="501" width="0.0801%" height="15" fill="rgb(210,154,35)" fg:x="430" fg:w="1"/><text x="34.6775%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4275%" y="485" width="0.0801%" height="15" fill="rgb(220,178,16)" fg:x="430" fg:w="1"/><text x="34.6775%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.5076%" y="677" width="0.0801%" height="15" fill="rgb(243,0,53)" fg:x="431" fg:w="1"/><text x="34.7576%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.5877%" y="677" width="0.0801%" height="15" fill="rgb(223,221,47)" fg:x="432" fg:w="1"/><text x="34.8377%" y="687.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (1 samples, 0.08%)</title><rect x="34.6677%" y="677" width="0.0801%" height="15" fill="rgb(233,82,15)" fg:x="433" fg:w="1"/><text x="34.9177%" y="687.50"></text></g><g><title>treediff::diff::diff (12 samples, 0.96%)</title><rect x="33.8671%" y="741" width="0.9608%" height="15" fill="rgb(222,8,38)" fg:x="423" fg:w="12"/><text x="34.1171%" y="751.50"></text></g><g><title>treediff::diff::diff (9 samples, 0.72%)</title><rect x="34.1073%" y="725" width="0.7206%" height="15" fill="rgb(241,28,48)" fg:x="426" fg:w="9"/><text x="34.3573%" y="735.50"></text></g><g><title>treediff::diff::diff (7 samples, 0.56%)</title><rect x="34.2674%" y="709" width="0.5604%" height="15" fill="rgb(209,227,15)" fg:x="428" fg:w="7"/><text x="34.5174%" y="719.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="34.3475%" y="693" width="0.4804%" height="15" fill="rgb(234,189,48)" fg:x="429" fg:w="6"/><text x="34.5975%" y="703.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="34.7478%" y="677" width="0.0801%" height="15" fill="rgb(212,27,44)" fg:x="434" fg:w="1"/><text x="34.9978%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="34.7478%" y="661" width="0.0801%" height="15" fill="rgb(249,55,42)" fg:x="434" fg:w="1"/><text x="34.9978%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.7478%" y="645" width="0.0801%" height="15" fill="rgb(215,211,28)" fg:x="434" fg:w="1"/><text x="34.9978%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="34.7478%" y="629" width="0.0801%" height="15" fill="rgb(221,155,16)" fg:x="434" fg:w="1"/><text x="34.9978%" y="639.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (22 samples, 1.76%)</title><rect x="33.1465%" y="773" width="1.7614%" height="15" fill="rgb(247,106,30)" fg:x="414" fg:w="22"/><text x="33.3965%" y="783.50"></text></g><g><title>treediff::diff::diff (17 samples, 1.36%)</title><rect x="33.5468%" y="757" width="1.3611%" height="15" fill="rgb(230,76,31)" fg:x="419" fg:w="17"/><text x="33.7968%" y="767.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="34.8279%" y="741" width="0.0801%" height="15" fill="rgb(222,6,48)" fg:x="435" fg:w="1"/><text x="35.0779%" y="751.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.0681%" y="741" width="0.1601%" height="15" fill="rgb(228,82,3)" fg:x="438" fg:w="2"/><text x="35.3181%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.2282%" y="741" width="0.1601%" height="15" fill="rgb(245,208,52)" fg:x="440" fg:w="2"/><text x="35.4782%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.2282%" y="725" width="0.1601%" height="15" fill="rgb(218,65,17)" fg:x="440" fg:w="2"/><text x="35.4782%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="35.3082%" y="709" width="0.0801%" height="15" fill="rgb(242,63,26)" fg:x="441" fg:w="1"/><text x="35.5582%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="35.3883%" y="741" width="0.0801%" height="15" fill="rgb(224,119,39)" fg:x="442" fg:w="1"/><text x="35.6383%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="35.3883%" y="725" width="0.0801%" height="15" fill="rgb(229,106,3)" fg:x="442" fg:w="1"/><text x="35.6383%" y="735.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.5484%" y="709" width="0.1601%" height="15" fill="rgb(248,6,33)" fg:x="444" fg:w="2"/><text x="35.7984%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (6 samples, 0.48%)</title><rect x="35.4684%" y="741" width="0.4804%" height="15" fill="rgb(226,3,49)" fg:x="443" fg:w="6"/><text x="35.7184%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="35.4684%" y="725" width="0.4804%" height="15" fill="rgb(228,142,14)" fg:x="443" fg:w="6"/><text x="35.7184%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.7086%" y="709" width="0.2402%" height="15" fill="rgb(241,141,54)" fg:x="446" fg:w="3"/><text x="35.9586%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="35.7086%" y="693" width="0.2402%" height="15" fill="rgb(252,17,50)" fg:x="446" fg:w="3"/><text x="35.9586%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="36.0288%" y="725" width="0.0801%" height="15" fill="rgb(221,120,48)" fg:x="450" fg:w="1"/><text x="36.2788%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.1089%" y="709" width="0.0801%" height="15" fill="rgb(229,171,33)" fg:x="451" fg:w="1"/><text x="36.3589%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="36.1890%" y="709" width="0.0801%" height="15" fill="rgb(236,207,21)" fg:x="452" fg:w="1"/><text x="36.4390%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.3491%" y="645" width="0.0801%" height="15" fill="rgb(218,93,35)" fg:x="454" fg:w="1"/><text x="36.5991%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="36.2690%" y="693" width="0.2402%" height="15" fill="rgb(207,101,8)" fg:x="453" fg:w="3"/><text x="36.5190%" y="703.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="36.2690%" y="677" width="0.2402%" height="15" fill="rgb(237,67,44)" fg:x="453" fg:w="3"/><text x="36.5190%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="36.2690%" y="661" width="0.2402%" height="15" fill="rgb(236,218,7)" fg:x="453" fg:w="3"/><text x="36.5190%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="36.4291%" y="645" width="0.0801%" height="15" fill="rgb(252,207,10)" fg:x="455" fg:w="1"/><text x="36.6791%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.4291%" y="629" width="0.0801%" height="15" fill="rgb(221,175,6)" fg:x="455" fg:w="1"/><text x="36.6791%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.5893%" y="661" width="0.1601%" height="15" fill="rgb(230,105,53)" fg:x="457" fg:w="2"/><text x="36.8393%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.5893%" y="645" width="0.1601%" height="15" fill="rgb(253,83,6)" fg:x="457" fg:w="2"/><text x="36.8393%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.6693%" y="629" width="0.0801%" height="15" fill="rgb(206,198,44)" fg:x="458" fg:w="1"/><text x="36.9193%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8295%" y="597" width="0.0801%" height="15" fill="rgb(206,164,29)" fg:x="460" fg:w="1"/><text x="37.0795%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.8295%" y="581" width="0.0801%" height="15" fill="rgb(215,2,50)" fg:x="460" fg:w="1"/><text x="37.0795%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="36.8295%" y="565" width="0.0801%" height="15" fill="rgb(246,127,18)" fg:x="460" fg:w="1"/><text x="37.0795%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="36.9896%" y="581" width="0.0801%" height="15" fill="rgb(232,6,21)" fg:x="462" fg:w="1"/><text x="37.2396%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="36.8295%" y="613" width="0.3203%" height="15" fill="rgb(224,154,1)" fg:x="460" fg:w="4"/><text x="37.0795%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="36.9095%" y="597" width="0.2402%" height="15" fill="rgb(248,135,32)" fg:x="461" fg:w="3"/><text x="37.1595%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="37.0697%" y="581" width="0.0801%" height="15" fill="rgb(253,129,38)" fg:x="463" fg:w="1"/><text x="37.3197%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="37.0697%" y="565" width="0.0801%" height="15" fill="rgb(214,110,11)" fg:x="463" fg:w="1"/><text x="37.3197%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.96%)</title><rect x="36.2690%" y="709" width="0.9608%" height="15" fill="rgb(246,150,22)" fg:x="453" fg:w="12"/><text x="36.5190%" y="719.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="36.5092%" y="693" width="0.7206%" height="15" fill="rgb(219,170,39)" fg:x="456" fg:w="9"/><text x="36.7592%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="36.5893%" y="677" width="0.6405%" height="15" fill="rgb(221,143,52)" fg:x="457" fg:w="8"/><text x="36.8393%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="36.7494%" y="661" width="0.4804%" height="15" fill="rgb(237,122,11)" fg:x="459" fg:w="6"/><text x="36.9994%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="36.7494%" y="645" width="0.4804%" height="15" fill="rgb(217,114,13)" fg:x="459" fg:w="6"/><text x="36.9994%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="36.7494%" y="629" width="0.4804%" height="15" fill="rgb(218,184,28)" fg:x="459" fg:w="6"/><text x="36.9994%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.1497%" y="613" width="0.0801%" height="15" fill="rgb(237,33,22)" fg:x="464" fg:w="1"/><text x="37.3997%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.28%)</title><rect x="36.1089%" y="725" width="1.2810%" height="15" fill="rgb(224,56,42)" fg:x="451" fg:w="16"/><text x="36.3589%" y="735.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="37.2298%" y="709" width="0.1601%" height="15" fill="rgb(216,138,53)" fg:x="465" fg:w="2"/><text x="37.4798%" y="719.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.2298%" y="693" width="0.1601%" height="15" fill="rgb(233,229,40)" fg:x="465" fg:w="2"/><text x="37.4798%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (32 samples, 2.56%)</title><rect x="34.9079%" y="773" width="2.5620%" height="15" fill="rgb(252,105,0)" fg:x="436" fg:w="32"/><text x="35.1579%" y="783.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (32 samples, 2.56%)</title><rect x="34.9079%" y="757" width="2.5620%" height="15" fill="rgb(212,75,24)" fg:x="436" fg:w="32"/><text x="35.1579%" y="767.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (19 samples, 1.52%)</title><rect x="35.9488%" y="741" width="1.5212%" height="15" fill="rgb(235,168,50)" fg:x="449" fg:w="19"/><text x="36.1988%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.3899%" y="725" width="0.0801%" height="15" fill="rgb(247,204,12)" fg:x="467" fg:w="1"/><text x="37.6399%" y="735.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="37.7102%" y="629" width="0.0801%" height="15" fill="rgb(250,203,27)" fg:x="471" fg:w="1"/><text x="37.9602%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="37.7102%" y="613" width="0.0801%" height="15" fill="rgb(221,215,2)" fg:x="471" fg:w="1"/><text x="37.9602%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="37.7102%" y="597" width="0.0801%" height="15" fill="rgb(242,163,47)" fg:x="471" fg:w="1"/><text x="37.9602%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="37.9504%" y="581" width="0.0801%" height="15" fill="rgb(237,136,50)" fg:x="474" fg:w="1"/><text x="38.2004%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="37.9504%" y="565" width="0.0801%" height="15" fill="rgb(217,201,47)" fg:x="474" fg:w="1"/><text x="38.2004%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="37.9504%" y="549" width="0.0801%" height="15" fill="rgb(212,38,47)" fg:x="474" fg:w="1"/><text x="38.2004%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="37.9504%" y="533" width="0.0801%" height="15" fill="rgb(254,113,41)" fg:x="474" fg:w="1"/><text x="38.2004%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.9504%" y="517" width="0.0801%" height="15" fill="rgb(236,7,22)" fg:x="474" fg:w="1"/><text x="38.2004%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.9504%" y="501" width="0.0801%" height="15" fill="rgb(235,81,25)" fg:x="474" fg:w="1"/><text x="38.2004%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.9504%" y="485" width="0.0801%" height="15" fill="rgb(216,41,31)" fg:x="474" fg:w="1"/><text x="38.2004%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="37.7902%" y="613" width="0.4003%" height="15" fill="rgb(249,219,15)" fg:x="472" fg:w="5"/><text x="38.0402%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="37.9504%" y="597" width="0.2402%" height="15" fill="rgb(248,201,3)" fg:x="474" fg:w="3"/><text x="38.2004%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="38.0304%" y="581" width="0.1601%" height="15" fill="rgb(249,141,18)" fg:x="475" fg:w="2"/><text x="38.2804%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.1105%" y="565" width="0.0801%" height="15" fill="rgb(222,32,39)" fg:x="476" fg:w="1"/><text x="38.3605%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="38.1906%" y="613" width="0.1601%" height="15" fill="rgb(237,139,51)" fg:x="477" fg:w="2"/><text x="38.4406%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.2706%" y="597" width="0.0801%" height="15" fill="rgb(218,210,4)" fg:x="478" fg:w="1"/><text x="38.5206%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="37.6301%" y="661" width="0.8006%" height="15" fill="rgb(217,199,13)" fg:x="470" fg:w="10"/><text x="37.8801%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="37.7102%" y="645" width="0.7206%" height="15" fill="rgb(222,118,25)" fg:x="471" fg:w="9"/><text x="37.9602%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="37.7902%" y="629" width="0.6405%" height="15" fill="rgb(241,70,28)" fg:x="472" fg:w="8"/><text x="38.0402%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.3507%" y="613" width="0.0801%" height="15" fill="rgb(205,51,41)" fg:x="479" fg:w="1"/><text x="38.6007%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="37.4700%" y="677" width="1.0408%" height="15" fill="rgb(237,165,49)" fg:x="468" fg:w="13"/><text x="37.7200%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.4307%" y="661" width="0.0801%" height="15" fill="rgb(213,10,51)" fg:x="480" fg:w="1"/><text x="38.6807%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14 samples, 1.12%)</title><rect x="37.4700%" y="709" width="1.1209%" height="15" fill="rgb(245,89,32)" fg:x="468" fg:w="14"/><text x="37.7200%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="37.4700%" y="693" width="1.1209%" height="15" fill="rgb(249,81,54)" fg:x="468" fg:w="14"/><text x="37.7200%" y="703.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="38.5108%" y="677" width="0.0801%" height="15" fill="rgb(223,134,14)" fg:x="481" fg:w="1"/><text x="38.7608%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="38.5909%" y="709" width="0.2402%" height="15" fill="rgb(233,62,37)" fg:x="482" fg:w="3"/><text x="38.8409%" y="719.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="38.5909%" y="693" width="0.2402%" height="15" fill="rgb(219,117,42)" fg:x="482" fg:w="3"/><text x="38.8409%" y="703.50"></text></g><g><title>engine::session::state::State::close (139 samples, 11.13%)</title><rect x="27.7822%" y="853" width="11.1289%" height="15" fill="rgb(248,40,28)" fg:x="347" fg:w="139"/><text x="28.0322%" y="863.50">engine::session:..</text></g><g><title>engine::session::state::State::flush_entities (134 samples, 10.73%)</title><rect x="28.1825%" y="837" width="10.7286%" height="15" fill="rgb(246,66,35)" fg:x="352" fg:w="134"/><text x="28.4325%" y="847.50">engine::session:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (133 samples, 10.65%)</title><rect x="28.2626%" y="821" width="10.6485%" height="15" fill="rgb(250,229,22)" fg:x="353" fg:w="133"/><text x="28.5126%" y="831.50">engine::session:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (133 samples, 10.65%)</title><rect x="28.2626%" y="805" width="10.6485%" height="15" fill="rgb(213,89,18)" fg:x="353" fg:w="133"/><text x="28.5126%" y="815.50">engine::session:..</text></g><g><title>kernel::model::any_entity_changes (72 samples, 5.76%)</title><rect x="33.1465%" y="789" width="5.7646%" height="15" fill="rgb(213,122,9)" fg:x="414" fg:w="72"/><text x="33.3965%" y="799.50">kernel:..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (18 samples, 1.44%)</title><rect x="37.4700%" y="773" width="1.4412%" height="15" fill="rgb(220,213,48)" fg:x="468" fg:w="18"/><text x="37.7200%" y="783.50"></text></g><g><title>serde_json::de::from_trait (18 samples, 1.44%)</title><rect x="37.4700%" y="757" width="1.4412%" height="15" fill="rgb(244,109,54)" fg:x="468" fg:w="18"/><text x="37.7200%" y="767.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.44%)</title><rect x="37.4700%" y="741" width="1.4412%" height="15" fill="rgb(254,104,49)" fg:x="468" fg:w="18"/><text x="37.7200%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.44%)</title><rect x="37.4700%" y="725" width="1.4412%" height="15" fill="rgb(219,28,32)" fg:x="468" fg:w="18"/><text x="37.7200%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.8311%" y="709" width="0.0801%" height="15" fill="rgb(249,153,33)" fg:x="485" fg:w="1"/><text x="39.0811%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.8311%" y="693" width="0.0801%" height="15" fill="rgb(230,116,21)" fg:x="485" fg:w="1"/><text x="39.0811%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.8311%" y="677" width="0.0801%" height="15" fill="rgb(247,110,3)" fg:x="485" fg:w="1"/><text x="39.0811%" y="687.50"></text></g><g><title>engine::session::Session::close (145 samples, 11.61%)</title><rect x="27.3819%" y="869" width="11.6093%" height="15" fill="rgb(227,128,3)" fg:x="342" fg:w="145"/><text x="27.6319%" y="879.50">engine::session::..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="38.9111%" y="853" width="0.0801%" height="15" fill="rgb(208,21,1)" fg:x="486" fg:w="1"/><text x="39.1611%" y="863.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="38.9111%" y="837" width="0.0801%" height="15" fill="rgb(225,24,20)" fg:x="486" fg:w="1"/><text x="39.1611%" y="847.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="38.9111%" y="821" width="0.0801%" height="15" fill="rgb(250,159,24)" fg:x="486" fg:w="1"/><text x="39.1611%" y="831.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="38.9111%" y="805" width="0.0801%" height="15" fill="rgb(214,30,53)" fg:x="486" fg:w="1"/><text x="39.1611%" y="815.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="38.9111%" y="789" width="0.0801%" height="15" fill="rgb(243,198,11)" fg:x="486" fg:w="1"/><text x="39.1611%" y="799.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.3114%" y="757" width="0.0801%" height="15" fill="rgb(232,33,1)" fg:x="491" fg:w="1"/><text x="39.5614%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.3114%" y="741" width="0.0801%" height="15" fill="rgb(242,60,11)" fg:x="491" fg:w="1"/><text x="39.5614%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.3114%" y="725" width="0.0801%" height="15" fill="rgb(241,229,34)" fg:x="491" fg:w="1"/><text x="39.5614%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.3114%" y="709" width="0.0801%" height="15" fill="rgb(230,92,51)" fg:x="491" fg:w="1"/><text x="39.5614%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.3114%" y="693" width="0.0801%" height="15" fill="rgb(212,209,8)" fg:x="491" fg:w="1"/><text x="39.5614%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.3114%" y="677" width="0.0801%" height="15" fill="rgb(241,55,35)" fg:x="491" fg:w="1"/><text x="39.5614%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.3114%" y="661" width="0.0801%" height="15" fill="rgb(208,187,52)" fg:x="491" fg:w="1"/><text x="39.5614%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.3114%" y="645" width="0.0801%" height="15" fill="rgb(251,110,17)" fg:x="491" fg:w="1"/><text x="39.5614%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.3114%" y="629" width="0.0801%" height="15" fill="rgb(246,225,54)" fg:x="491" fg:w="1"/><text x="39.5614%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.3114%" y="613" width="0.0801%" height="15" fill="rgb(220,109,6)" fg:x="491" fg:w="1"/><text x="39.5614%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.3114%" y="597" width="0.0801%" height="15" fill="rgb(228,56,50)" fg:x="491" fg:w="1"/><text x="39.5614%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.3114%" y="581" width="0.0801%" height="15" fill="rgb(230,34,30)" fg:x="491" fg:w="1"/><text x="39.5614%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.3114%" y="565" width="0.0801%" height="15" fill="rgb(205,28,42)" fg:x="491" fg:w="1"/><text x="39.5614%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="39.4716%" y="677" width="0.1601%" height="15" fill="rgb(215,68,0)" fg:x="493" fg:w="2"/><text x="39.7216%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.7118%" y="581" width="0.0801%" height="15" fill="rgb(206,91,47)" fg:x="496" fg:w="1"/><text x="39.9618%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.7118%" y="565" width="0.0801%" height="15" fill="rgb(241,159,43)" fg:x="496" fg:w="1"/><text x="39.9618%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.7118%" y="549" width="0.0801%" height="15" fill="rgb(232,191,38)" fg:x="496" fg:w="1"/><text x="39.9618%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.7118%" y="533" width="0.0801%" height="15" fill="rgb(212,180,41)" fg:x="496" fg:w="1"/><text x="39.9618%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.7118%" y="517" width="0.0801%" height="15" fill="rgb(236,134,49)" fg:x="496" fg:w="1"/><text x="39.9618%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.7118%" y="501" width="0.0801%" height="15" fill="rgb(221,83,26)" fg:x="496" fg:w="1"/><text x="39.9618%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.7118%" y="485" width="0.0801%" height="15" fill="rgb(215,87,39)" fg:x="496" fg:w="1"/><text x="39.9618%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.7118%" y="469" width="0.0801%" height="15" fill="rgb(242,28,29)" fg:x="496" fg:w="1"/><text x="39.9618%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.7118%" y="453" width="0.0801%" height="15" fill="rgb(212,219,47)" fg:x="496" fg:w="1"/><text x="39.9618%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="39.7118%" y="437" width="0.0801%" height="15" fill="rgb(221,35,20)" fg:x="496" fg:w="1"/><text x="39.9618%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="39.7118%" y="421" width="0.0801%" height="15" fill="rgb(234,144,13)" fg:x="496" fg:w="1"/><text x="39.9618%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="39.6317%" y="661" width="0.2402%" height="15" fill="rgb(237,41,27)" fg:x="495" fg:w="3"/><text x="39.8817%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="39.6317%" y="645" width="0.2402%" height="15" fill="rgb(253,175,5)" fg:x="495" fg:w="3"/><text x="39.8817%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="39.6317%" y="629" width="0.2402%" height="15" fill="rgb(235,210,51)" fg:x="495" fg:w="3"/><text x="39.8817%" y="639.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="39.6317%" y="613" width="0.2402%" height="15" fill="rgb(241,180,35)" fg:x="495" fg:w="3"/><text x="39.8817%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="39.6317%" y="597" width="0.2402%" height="15" fill="rgb(219,45,16)" fg:x="495" fg:w="3"/><text x="39.8817%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.7918%" y="581" width="0.0801%" height="15" fill="rgb(247,212,4)" fg:x="497" fg:w="1"/><text x="40.0418%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.7918%" y="565" width="0.0801%" height="15" fill="rgb(224,211,1)" fg:x="497" fg:w="1"/><text x="40.0418%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="39.7918%" y="549" width="0.0801%" height="15" fill="rgb(210,193,36)" fg:x="497" fg:w="1"/><text x="40.0418%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.7918%" y="533" width="0.0801%" height="15" fill="rgb(215,121,20)" fg:x="497" fg:w="1"/><text x="40.0418%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="39.7918%" y="517" width="0.0801%" height="15" fill="rgb(238,146,2)" fg:x="497" fg:w="1"/><text x="40.0418%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="39.7918%" y="501" width="0.0801%" height="15" fill="rgb(254,123,45)" fg:x="497" fg:w="1"/><text x="40.0418%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.7918%" y="485" width="0.0801%" height="15" fill="rgb(225,126,11)" fg:x="497" fg:w="1"/><text x="40.0418%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.8719%" y="597" width="0.0801%" height="15" fill="rgb(239,12,5)" fg:x="498" fg:w="1"/><text x="40.1219%" y="607.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="39.8719%" y="581" width="0.0801%" height="15" fill="rgb(241,207,14)" fg:x="498" fg:w="1"/><text x="40.1219%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="39.8719%" y="565" width="0.0801%" height="15" fill="rgb(227,134,33)" fg:x="498" fg:w="1"/><text x="40.1219%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.9520%" y="597" width="0.1601%" height="15" fill="rgb(221,40,52)" fg:x="499" fg:w="2"/><text x="40.2020%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.0320%" y="581" width="0.0801%" height="15" fill="rgb(206,93,8)" fg:x="500" fg:w="1"/><text x="40.2820%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="40.0320%" y="565" width="0.0801%" height="15" fill="rgb(242,160,22)" fg:x="500" fg:w="1"/><text x="40.2820%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.1121%" y="565" width="0.0801%" height="15" fill="rgb(232,204,40)" fg:x="501" fg:w="1"/><text x="40.3621%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.1121%" y="549" width="0.0801%" height="15" fill="rgb(247,210,47)" fg:x="501" fg:w="1"/><text x="40.3621%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="40.1121%" y="533" width="0.0801%" height="15" fill="rgb(211,91,7)" fg:x="501" fg:w="1"/><text x="40.3621%" y="543.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="39.8719%" y="645" width="0.4003%" height="15" fill="rgb(252,160,34)" fg:x="498" fg:w="5"/><text x="40.1219%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="39.8719%" y="629" width="0.4003%" height="15" fill="rgb(220,34,39)" fg:x="498" fg:w="5"/><text x="40.1219%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="39.8719%" y="613" width="0.4003%" height="15" fill="rgb(247,49,38)" fg:x="498" fg:w="5"/><text x="40.1219%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="40.1121%" y="597" width="0.1601%" height="15" fill="rgb(228,175,44)" fg:x="501" fg:w="2"/><text x="40.3621%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="40.1121%" y="581" width="0.1601%" height="15" fill="rgb(218,214,32)" fg:x="501" fg:w="2"/><text x="40.3621%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.1922%" y="565" width="0.0801%" height="15" fill="rgb(213,50,12)" fg:x="502" fg:w="1"/><text x="40.4422%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.1922%" y="549" width="0.0801%" height="15" fill="rgb(219,35,41)" fg:x="502" fg:w="1"/><text x="40.4422%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="40.1922%" y="533" width="0.0801%" height="15" fill="rgb(219,18,38)" fg:x="502" fg:w="1"/><text x="40.4422%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.1922%" y="517" width="0.0801%" height="15" fill="rgb(223,217,6)" fg:x="502" fg:w="1"/><text x="40.4422%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.1922%" y="501" width="0.0801%" height="15" fill="rgb(208,193,35)" fg:x="502" fg:w="1"/><text x="40.4422%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.1922%" y="485" width="0.0801%" height="15" fill="rgb(254,212,54)" fg:x="502" fg:w="1"/><text x="40.4422%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.1922%" y="469" width="0.0801%" height="15" fill="rgb(205,10,2)" fg:x="502" fg:w="1"/><text x="40.4422%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.2722%" y="565" width="0.0801%" height="15" fill="rgb(230,133,29)" fg:x="503" fg:w="1"/><text x="40.5222%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.2722%" y="549" width="0.0801%" height="15" fill="rgb(226,14,15)" fg:x="503" fg:w="1"/><text x="40.5222%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.2722%" y="533" width="0.0801%" height="15" fill="rgb(226,140,54)" fg:x="503" fg:w="1"/><text x="40.5222%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.2722%" y="517" width="0.0801%" height="15" fill="rgb(250,47,41)" fg:x="503" fg:w="1"/><text x="40.5222%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.2722%" y="501" width="0.0801%" height="15" fill="rgb(227,218,41)" fg:x="503" fg:w="1"/><text x="40.5222%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.2722%" y="485" width="0.0801%" height="15" fill="rgb(254,183,7)" fg:x="503" fg:w="1"/><text x="40.5222%" y="495.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="40.2722%" y="469" width="0.0801%" height="15" fill="rgb(206,84,53)" fg:x="503" fg:w="1"/><text x="40.5222%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.2722%" y="453" width="0.0801%" height="15" fill="rgb(213,177,2)" fg:x="503" fg:w="1"/><text x="40.5222%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.2722%" y="437" width="0.0801%" height="15" fill="rgb(234,28,29)" fg:x="503" fg:w="1"/><text x="40.5222%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.2722%" y="421" width="0.0801%" height="15" fill="rgb(248,211,38)" fg:x="503" fg:w="1"/><text x="40.5222%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.2722%" y="405" width="0.0801%" height="15" fill="rgb(246,30,0)" fg:x="503" fg:w="1"/><text x="40.5222%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="40.2722%" y="389" width="0.0801%" height="15" fill="rgb(244,115,24)" fg:x="503" fg:w="1"/><text x="40.5222%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="40.3523%" y="517" width="0.0801%" height="15" fill="rgb(226,193,14)" fg:x="504" fg:w="1"/><text x="40.6023%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="40.3523%" y="501" width="0.0801%" height="15" fill="rgb(211,196,48)" fg:x="504" fg:w="1"/><text x="40.6023%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (8 samples, 0.64%)</title><rect x="39.8719%" y="661" width="0.6405%" height="15" fill="rgb(235,32,20)" fg:x="498" fg:w="8"/><text x="40.1219%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.2722%" y="645" width="0.2402%" height="15" fill="rgb(251,151,49)" fg:x="503" fg:w="3"/><text x="40.5222%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.2722%" y="629" width="0.2402%" height="15" fill="rgb(254,141,38)" fg:x="503" fg:w="3"/><text x="40.5222%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="40.2722%" y="613" width="0.2402%" height="15" fill="rgb(209,118,44)" fg:x="503" fg:w="3"/><text x="40.5222%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.2722%" y="597" width="0.2402%" height="15" fill="rgb(205,81,4)" fg:x="503" fg:w="3"/><text x="40.5222%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="40.2722%" y="581" width="0.2402%" height="15" fill="rgb(241,25,6)" fg:x="503" fg:w="3"/><text x="40.5222%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.3523%" y="565" width="0.1601%" height="15" fill="rgb(212,179,29)" fg:x="504" fg:w="2"/><text x="40.6023%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="40.3523%" y="549" width="0.1601%" height="15" fill="rgb(241,40,32)" fg:x="504" fg:w="2"/><text x="40.6023%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="40.3523%" y="533" width="0.1601%" height="15" fill="rgb(223,35,2)" fg:x="504" fg:w="2"/><text x="40.6023%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.4323%" y="517" width="0.0801%" height="15" fill="rgb(221,125,54)" fg:x="505" fg:w="1"/><text x="40.6823%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (14 samples, 1.12%)</title><rect x="39.4716%" y="709" width="1.1209%" height="15" fill="rgb(230,5,49)" fg:x="493" fg:w="14"/><text x="39.7216%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (14 samples, 1.12%)</title><rect x="39.4716%" y="693" width="1.1209%" height="15" fill="rgb(221,157,7)" fg:x="493" fg:w="14"/><text x="39.7216%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (12 samples, 0.96%)</title><rect x="39.6317%" y="677" width="0.9608%" height="15" fill="rgb(242,163,10)" fg:x="495" fg:w="12"/><text x="39.8817%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="40.5124%" y="661" width="0.0801%" height="15" fill="rgb(232,30,2)" fg:x="506" fg:w="1"/><text x="40.7624%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="40.5124%" y="645" width="0.0801%" height="15" fill="rgb(245,102,40)" fg:x="506" fg:w="1"/><text x="40.7624%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="40.5124%" y="629" width="0.0801%" height="15" fill="rgb(242,10,41)" fg:x="506" fg:w="1"/><text x="40.7624%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.5124%" y="613" width="0.0801%" height="15" fill="rgb(236,184,36)" fg:x="506" fg:w="1"/><text x="40.7624%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="40.5925%" y="709" width="0.1601%" height="15" fill="rgb(247,147,48)" fg:x="507" fg:w="2"/><text x="40.8425%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.6725%" y="693" width="0.0801%" height="15" fill="rgb(226,166,2)" fg:x="508" fg:w="1"/><text x="40.9225%" y="703.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (18 samples, 1.44%)</title><rect x="39.3915%" y="757" width="1.4412%" height="15" fill="rgb(251,196,7)" fg:x="492" fg:w="18"/><text x="39.6415%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (18 samples, 1.44%)</title><rect x="39.3915%" y="741" width="1.4412%" height="15" fill="rgb(241,40,13)" fg:x="492" fg:w="18"/><text x="39.6415%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (18 samples, 1.44%)</title><rect x="39.3915%" y="725" width="1.4412%" height="15" fill="rgb(254,4,12)" fg:x="492" fg:w="18"/><text x="39.6415%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.7526%" y="709" width="0.0801%" height="15" fill="rgb(244,139,49)" fg:x="509" fg:w="1"/><text x="41.0026%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.7526%" y="693" width="0.0801%" height="15" fill="rgb(227,28,42)" fg:x="509" fg:w="1"/><text x="41.0026%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.7526%" y="677" width="0.0801%" height="15" fill="rgb(231,135,32)" fg:x="509" fg:w="1"/><text x="41.0026%" y="687.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (23 samples, 1.84%)</title><rect x="39.1513%" y="773" width="1.8415%" height="15" fill="rgb(244,182,3)" fg:x="489" fg:w="23"/><text x="39.4013%" y="783.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="40.8327%" y="757" width="0.1601%" height="15" fill="rgb(247,46,19)" fg:x="510" fg:w="2"/><text x="41.0827%" y="767.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="40.8327%" y="741" width="0.1601%" height="15" fill="rgb(251,179,10)" fg:x="510" fg:w="2"/><text x="41.0827%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="40.8327%" y="725" width="0.1601%" height="15" fill="rgb(229,222,18)" fg:x="510" fg:w="2"/><text x="41.0827%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="40.8327%" y="709" width="0.1601%" height="15" fill="rgb(251,107,20)" fg:x="510" fg:w="2"/><text x="41.0827%" y="719.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="40.9127%" y="693" width="0.0801%" height="15" fill="rgb(233,193,19)" fg:x="511" fg:w="1"/><text x="41.1627%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.0729%" y="709" width="0.0801%" height="15" fill="rgb(229,146,53)" fg:x="513" fg:w="1"/><text x="41.3229%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.4732%" y="533" width="0.0801%" height="15" fill="rgb(244,52,11)" fg:x="518" fg:w="1"/><text x="41.7232%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.4732%" y="581" width="0.1601%" height="15" fill="rgb(245,211,46)" fg:x="518" fg:w="2"/><text x="41.7232%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.4732%" y="565" width="0.1601%" height="15" fill="rgb(213,8,31)" fg:x="518" fg:w="2"/><text x="41.7232%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="41.4732%" y="549" width="0.1601%" height="15" fill="rgb(205,101,39)" fg:x="518" fg:w="2"/><text x="41.7232%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.5532%" y="533" width="0.0801%" height="15" fill="rgb(212,157,1)" fg:x="519" fg:w="1"/><text x="41.8032%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.6333%" y="581" width="0.0801%" height="15" fill="rgb(232,30,46)" fg:x="520" fg:w="1"/><text x="41.8833%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="41.6333%" y="565" width="0.0801%" height="15" fill="rgb(216,201,6)" fg:x="520" fg:w="1"/><text x="41.8833%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.6333%" y="549" width="0.0801%" height="15" fill="rgb(209,18,6)" fg:x="520" fg:w="1"/><text x="41.8833%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.6333%" y="533" width="0.0801%" height="15" fill="rgb(219,138,3)" fg:x="520" fg:w="1"/><text x="41.8833%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.6333%" y="517" width="0.0801%" height="15" fill="rgb(210,91,46)" fg:x="520" fg:w="1"/><text x="41.8833%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.6333%" y="501" width="0.0801%" height="15" fill="rgb(241,80,44)" fg:x="520" fg:w="1"/><text x="41.8833%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.6333%" y="485" width="0.0801%" height="15" fill="rgb(236,205,36)" fg:x="520" fg:w="1"/><text x="41.8833%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="41.8735%" y="485" width="0.1601%" height="15" fill="rgb(205,59,37)" fg:x="523" fg:w="2"/><text x="42.1235%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="41.8735%" y="469" width="0.1601%" height="15" fill="rgb(239,166,39)" fg:x="523" fg:w="2"/><text x="42.1235%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.9536%" y="453" width="0.0801%" height="15" fill="rgb(239,146,40)" fg:x="524" fg:w="1"/><text x="42.2036%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.0336%" y="485" width="0.0801%" height="15" fill="rgb(231,11,52)" fg:x="525" fg:w="1"/><text x="42.2836%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (13 samples, 1.04%)</title><rect x="41.4732%" y="629" width="1.0408%" height="15" fill="rgb(253,21,37)" fg:x="518" fg:w="13"/><text x="41.7232%" y="639.50"></text></g><g><title>kernel::model::props::load_props (13 samples, 1.04%)</title><rect x="41.4732%" y="613" width="1.0408%" height="15" fill="rgb(224,87,39)" fg:x="518" fg:w="13"/><text x="41.7232%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.04%)</title><rect x="41.4732%" y="597" width="1.0408%" height="15" fill="rgb(249,15,46)" fg:x="518" fg:w="13"/><text x="41.7232%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="41.7134%" y="581" width="0.8006%" height="15" fill="rgb(250,37,51)" fg:x="521" fg:w="10"/><text x="41.9634%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="41.7134%" y="565" width="0.8006%" height="15" fill="rgb(205,185,43)" fg:x="521" fg:w="10"/><text x="41.9634%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="41.7134%" y="549" width="0.8006%" height="15" fill="rgb(206,65,41)" fg:x="521" fg:w="10"/><text x="41.9634%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="41.7134%" y="533" width="0.8006%" height="15" fill="rgb(236,159,32)" fg:x="521" fg:w="10"/><text x="41.9634%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.80%)</title><rect x="41.7134%" y="517" width="0.8006%" height="15" fill="rgb(228,199,27)" fg:x="521" fg:w="10"/><text x="41.9634%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="41.7934%" y="501" width="0.7206%" height="15" fill="rgb(212,0,37)" fg:x="522" fg:w="9"/><text x="42.0434%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="42.1137%" y="485" width="0.4003%" height="15" fill="rgb(248,50,11)" fg:x="526" fg:w="5"/><text x="42.3637%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="42.1137%" y="469" width="0.4003%" height="15" fill="rgb(231,164,25)" fg:x="526" fg:w="5"/><text x="42.3637%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.4339%" y="453" width="0.0801%" height="15" fill="rgb(238,38,39)" fg:x="530" fg:w="1"/><text x="42.6839%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.4339%" y="437" width="0.0801%" height="15" fill="rgb(210,15,50)" fg:x="530" fg:w="1"/><text x="42.6839%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="42.5140%" y="613" width="0.1601%" height="15" fill="rgb(251,126,36)" fg:x="531" fg:w="2"/><text x="42.7640%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="42.5941%" y="597" width="0.0801%" height="15" fill="rgb(243,59,26)" fg:x="532" fg:w="1"/><text x="42.8441%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.7542%" y="517" width="0.1601%" height="15" fill="rgb(215,24,30)" fg:x="534" fg:w="2"/><text x="43.0042%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.8343%" y="501" width="0.0801%" height="15" fill="rgb(253,50,51)" fg:x="535" fg:w="1"/><text x="43.0843%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.9143%" y="341" width="0.0801%" height="15" fill="rgb(252,2,16)" fg:x="536" fg:w="1"/><text x="43.1643%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="42.9143%" y="437" width="0.1601%" height="15" fill="rgb(209,123,36)" fg:x="536" fg:w="2"/><text x="43.1643%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="42.9143%" y="421" width="0.1601%" height="15" fill="rgb(245,60,15)" fg:x="536" fg:w="2"/><text x="43.1643%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="42.9143%" y="405" width="0.1601%" height="15" fill="rgb(246,4,13)" fg:x="536" fg:w="2"/><text x="43.1643%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="42.9143%" y="389" width="0.1601%" height="15" fill="rgb(210,223,46)" fg:x="536" fg:w="2"/><text x="43.1643%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="42.9143%" y="373" width="0.1601%" height="15" fill="rgb(248,1,9)" fg:x="536" fg:w="2"/><text x="43.1643%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="42.9143%" y="357" width="0.1601%" height="15" fill="rgb(254,2,34)" fg:x="536" fg:w="2"/><text x="43.1643%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="42.9944%" y="341" width="0.0801%" height="15" fill="rgb(239,176,1)" fg:x="537" fg:w="1"/><text x="43.2444%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="42.9944%" y="325" width="0.0801%" height="15" fill="rgb(250,25,32)" fg:x="537" fg:w="1"/><text x="43.2444%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="42.9143%" y="517" width="0.2402%" height="15" fill="rgb(225,28,39)" fg:x="536" fg:w="3"/><text x="43.1643%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="42.9143%" y="501" width="0.2402%" height="15" fill="rgb(230,166,37)" fg:x="536" fg:w="3"/><text x="43.1643%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="42.9143%" y="485" width="0.2402%" height="15" fill="rgb(246,220,4)" fg:x="536" fg:w="3"/><text x="43.1643%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="42.9143%" y="469" width="0.2402%" height="15" fill="rgb(219,119,33)" fg:x="536" fg:w="3"/><text x="43.1643%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="42.9143%" y="453" width="0.2402%" height="15" fill="rgb(221,207,38)" fg:x="536" fg:w="3"/><text x="43.1643%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="43.0745%" y="437" width="0.0801%" height="15" fill="rgb(214,153,5)" fg:x="538" fg:w="1"/><text x="43.3245%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.0745%" y="421" width="0.0801%" height="15" fill="rgb(223,50,16)" fg:x="538" fg:w="1"/><text x="43.3245%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="42.6741%" y="581" width="0.5604%" height="15" fill="rgb(209,207,12)" fg:x="533" fg:w="7"/><text x="42.9241%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="42.6741%" y="565" width="0.5604%" height="15" fill="rgb(207,3,46)" fg:x="533" fg:w="7"/><text x="42.9241%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="42.6741%" y="549" width="0.5604%" height="15" fill="rgb(232,45,53)" fg:x="533" fg:w="7"/><text x="42.9241%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="42.7542%" y="533" width="0.4804%" height="15" fill="rgb(206,140,15)" fg:x="534" fg:w="6"/><text x="43.0042%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.1545%" y="517" width="0.0801%" height="15" fill="rgb(245,66,17)" fg:x="539" fg:w="1"/><text x="43.4045%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.2346%" y="581" width="0.0801%" height="15" fill="rgb(221,25,37)" fg:x="540" fg:w="1"/><text x="43.4846%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="43.3947%" y="453" width="0.0801%" height="15" fill="rgb(215,99,47)" fg:x="542" fg:w="1"/><text x="43.6447%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.3947%" y="437" width="0.0801%" height="15" fill="rgb(219,154,44)" fg:x="542" fg:w="1"/><text x="43.6447%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.4748%" y="453" width="0.0801%" height="15" fill="rgb(210,197,36)" fg:x="543" fg:w="1"/><text x="43.7248%" y="463.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (29 samples, 2.32%)</title><rect x="41.4732%" y="645" width="2.3219%" height="15" fill="rgb(217,137,10)" fg:x="518" fg:w="29"/><text x="41.7232%" y="655.50">&lt;..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (16 samples, 1.28%)</title><rect x="42.5140%" y="629" width="1.2810%" height="15" fill="rgb(240,216,26)" fg:x="531" fg:w="16"/><text x="42.7640%" y="639.50"></text></g><g><title>kernel::model::props::load_props (14 samples, 1.12%)</title><rect x="42.6741%" y="613" width="1.1209%" height="15" fill="rgb(242,76,17)" fg:x="533" fg:w="14"/><text x="42.9241%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.12%)</title><rect x="42.6741%" y="597" width="1.1209%" height="15" fill="rgb(243,142,51)" fg:x="533" fg:w="14"/><text x="42.9241%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="43.3147%" y="581" width="0.4804%" height="15" fill="rgb(233,109,46)" fg:x="541" fg:w="6"/><text x="43.5647%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="43.3147%" y="565" width="0.4804%" height="15" fill="rgb(252,45,32)" fg:x="541" fg:w="6"/><text x="43.5647%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="43.3147%" y="549" width="0.4804%" height="15" fill="rgb(210,69,52)" fg:x="541" fg:w="6"/><text x="43.5647%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="43.3147%" y="533" width="0.4804%" height="15" fill="rgb(242,30,2)" fg:x="541" fg:w="6"/><text x="43.5647%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="43.3147%" y="517" width="0.4804%" height="15" fill="rgb(246,137,1)" fg:x="541" fg:w="6"/><text x="43.5647%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="43.3147%" y="501" width="0.4804%" height="15" fill="rgb(221,205,25)" fg:x="541" fg:w="6"/><text x="43.5647%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="43.3147%" y="485" width="0.4804%" height="15" fill="rgb(224,44,43)" fg:x="541" fg:w="6"/><text x="43.5647%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="43.3147%" y="469" width="0.4804%" height="15" fill="rgb(209,81,13)" fg:x="541" fg:w="6"/><text x="43.5647%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="43.5548%" y="453" width="0.2402%" height="15" fill="rgb(227,88,4)" fg:x="544" fg:w="3"/><text x="43.8048%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.6349%" y="437" width="0.1601%" height="15" fill="rgb(228,118,49)" fg:x="545" fg:w="2"/><text x="43.8849%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="43.6349%" y="421" width="0.1601%" height="15" fill="rgb(225,215,27)" fg:x="545" fg:w="2"/><text x="43.8849%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="43.6349%" y="405" width="0.1601%" height="15" fill="rgb(235,226,1)" fg:x="545" fg:w="2"/><text x="43.8849%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="43.7150%" y="389" width="0.0801%" height="15" fill="rgb(205,107,17)" fg:x="546" fg:w="1"/><text x="43.9650%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="43.7950%" y="597" width="0.2402%" height="15" fill="rgb(247,85,8)" fg:x="547" fg:w="3"/><text x="44.0450%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="43.8751%" y="581" width="0.1601%" height="15" fill="rgb(230,220,20)" fg:x="548" fg:w="2"/><text x="44.1251%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="43.8751%" y="565" width="0.1601%" height="15" fill="rgb(237,22,6)" fg:x="548" fg:w="2"/><text x="44.1251%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="43.8751%" y="549" width="0.1601%" height="15" fill="rgb(253,39,1)" fg:x="548" fg:w="2"/><text x="44.1251%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="43.8751%" y="533" width="0.1601%" height="15" fill="rgb(251,206,50)" fg:x="548" fg:w="2"/><text x="44.1251%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="43.8751%" y="517" width="0.1601%" height="15" fill="rgb(239,162,11)" fg:x="548" fg:w="2"/><text x="44.1251%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="43.8751%" y="501" width="0.1601%" height="15" fill="rgb(234,164,6)" fg:x="548" fg:w="2"/><text x="44.1251%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="43.8751%" y="485" width="0.1601%" height="15" fill="rgb(238,112,10)" fg:x="548" fg:w="2"/><text x="44.1251%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="43.8751%" y="469" width="0.1601%" height="15" fill="rgb(232,78,29)" fg:x="548" fg:w="2"/><text x="44.1251%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="43.8751%" y="453" width="0.1601%" height="15" fill="rgb(232,20,13)" fg:x="548" fg:w="2"/><text x="44.1251%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="43.8751%" y="437" width="0.1601%" height="15" fill="rgb(222,175,9)" fg:x="548" fg:w="2"/><text x="44.1251%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="43.8751%" y="421" width="0.1601%" height="15" fill="rgb(233,61,14)" fg:x="548" fg:w="2"/><text x="44.1251%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="43.8751%" y="405" width="0.1601%" height="15" fill="rgb(224,152,29)" fg:x="548" fg:w="2"/><text x="44.1251%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.8751%" y="389" width="0.1601%" height="15" fill="rgb(232,26,6)" fg:x="548" fg:w="2"/><text x="44.1251%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="44.0352%" y="597" width="0.1601%" height="15" fill="rgb(210,116,11)" fg:x="550" fg:w="2"/><text x="44.2852%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="44.0352%" y="581" width="0.1601%" height="15" fill="rgb(238,213,15)" fg:x="550" fg:w="2"/><text x="44.2852%" y="591.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="44.0352%" y="565" width="0.1601%" height="15" fill="rgb(236,177,32)" fg:x="550" fg:w="2"/><text x="44.2852%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.3555%" y="277" width="0.0801%" height="15" fill="rgb(230,36,43)" fg:x="554" fg:w="1"/><text x="44.6055%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.3555%" y="261" width="0.0801%" height="15" fill="rgb(212,76,23)" fg:x="554" fg:w="1"/><text x="44.6055%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="44.3555%" y="245" width="0.0801%" height="15" fill="rgb(225,168,24)" fg:x="554" fg:w="1"/><text x="44.6055%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="44.3555%" y="229" width="0.0801%" height="15" fill="rgb(206,40,44)" fg:x="554" fg:w="1"/><text x="44.6055%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="44.3555%" y="213" width="0.0801%" height="15" fill="rgb(251,213,6)" fg:x="554" fg:w="1"/><text x="44.6055%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="44.3555%" y="197" width="0.0801%" height="15" fill="rgb(220,7,47)" fg:x="554" fg:w="1"/><text x="44.6055%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="44.3555%" y="181" width="0.0801%" height="15" fill="rgb(254,130,53)" fg:x="554" fg:w="1"/><text x="44.6055%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="44.3555%" y="165" width="0.0801%" height="15" fill="rgb(240,2,46)" fg:x="554" fg:w="1"/><text x="44.6055%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="44.3555%" y="149" width="0.0801%" height="15" fill="rgb(252,144,40)" fg:x="554" fg:w="1"/><text x="44.6055%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="44.3555%" y="133" width="0.0801%" height="15" fill="rgb(226,23,10)" fg:x="554" fg:w="1"/><text x="44.6055%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.3555%" y="117" width="0.0801%" height="15" fill="rgb(212,204,35)" fg:x="554" fg:w="1"/><text x="44.6055%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="44.3555%" y="101" width="0.0801%" height="15" fill="rgb(218,201,15)" fg:x="554" fg:w="1"/><text x="44.6055%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="44.3555%" y="85" width="0.0801%" height="15" fill="rgb(224,197,5)" fg:x="554" fg:w="1"/><text x="44.6055%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="44.3555%" y="69" width="0.0801%" height="15" fill="rgb(224,185,18)" fg:x="554" fg:w="1"/><text x="44.6055%" y="79.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="44.3555%" y="53" width="0.0801%" height="15" fill="rgb(251,71,45)" fg:x="554" fg:w="1"/><text x="44.6055%" y="63.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="44.1954%" y="581" width="0.3203%" height="15" fill="rgb(216,74,24)" fg:x="552" fg:w="4"/><text x="44.4454%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="44.2754%" y="565" width="0.2402%" height="15" fill="rgb(250,36,51)" fg:x="553" fg:w="3"/><text x="44.5254%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="44.2754%" y="549" width="0.2402%" height="15" fill="rgb(209,224,28)" fg:x="553" fg:w="3"/><text x="44.5254%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="44.2754%" y="533" width="0.2402%" height="15" fill="rgb(228,5,10)" fg:x="553" fg:w="3"/><text x="44.5254%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="44.2754%" y="517" width="0.2402%" height="15" fill="rgb(250,57,40)" fg:x="553" fg:w="3"/><text x="44.5254%" y="527.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="44.2754%" y="501" width="0.2402%" height="15" fill="rgb(228,194,41)" fg:x="553" fg:w="3"/><text x="44.5254%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="44.3555%" y="485" width="0.1601%" height="15" fill="rgb(206,68,23)" fg:x="554" fg:w="2"/><text x="44.6055%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="44.3555%" y="469" width="0.1601%" height="15" fill="rgb(230,33,29)" fg:x="554" fg:w="2"/><text x="44.6055%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="44.3555%" y="453" width="0.1601%" height="15" fill="rgb(210,39,32)" fg:x="554" fg:w="2"/><text x="44.6055%" y="463.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="44.3555%" y="437" width="0.1601%" height="15" fill="rgb(236,89,23)" fg:x="554" fg:w="2"/><text x="44.6055%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="44.3555%" y="421" width="0.1601%" height="15" fill="rgb(218,52,52)" fg:x="554" fg:w="2"/><text x="44.6055%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="44.3555%" y="405" width="0.1601%" height="15" fill="rgb(235,154,5)" fg:x="554" fg:w="2"/><text x="44.6055%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="44.3555%" y="389" width="0.1601%" height="15" fill="rgb(223,168,9)" fg:x="554" fg:w="2"/><text x="44.6055%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="44.3555%" y="373" width="0.1601%" height="15" fill="rgb(220,8,33)" fg:x="554" fg:w="2"/><text x="44.6055%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="44.3555%" y="357" width="0.1601%" height="15" fill="rgb(216,176,3)" fg:x="554" fg:w="2"/><text x="44.6055%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="44.3555%" y="341" width="0.1601%" height="15" fill="rgb(254,150,22)" fg:x="554" fg:w="2"/><text x="44.6055%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="44.3555%" y="325" width="0.1601%" height="15" fill="rgb(231,61,53)" fg:x="554" fg:w="2"/><text x="44.6055%" y="335.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="44.3555%" y="309" width="0.1601%" height="15" fill="rgb(249,177,41)" fg:x="554" fg:w="2"/><text x="44.6055%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="44.3555%" y="293" width="0.1601%" height="15" fill="rgb(221,122,7)" fg:x="554" fg:w="2"/><text x="44.6055%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="44.4355%" y="277" width="0.0801%" height="15" fill="rgb(215,115,7)" fg:x="555" fg:w="1"/><text x="44.6855%" y="287.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="44.4355%" y="261" width="0.0801%" height="15" fill="rgb(218,108,33)" fg:x="555" fg:w="1"/><text x="44.6855%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.4355%" y="245" width="0.0801%" height="15" fill="rgb(221,205,39)" fg:x="555" fg:w="1"/><text x="44.6855%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="44.4355%" y="229" width="0.0801%" height="15" fill="rgb(220,171,18)" fg:x="555" fg:w="1"/><text x="44.6855%" y="239.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="44.4355%" y="213" width="0.0801%" height="15" fill="rgb(236,188,29)" fg:x="555" fg:w="1"/><text x="44.6855%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="44.4355%" y="197" width="0.0801%" height="15" fill="rgb(239,29,5)" fg:x="555" fg:w="1"/><text x="44.6855%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="44.4355%" y="181" width="0.0801%" height="15" fill="rgb(236,114,44)" fg:x="555" fg:w="1"/><text x="44.6855%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="44.4355%" y="165" width="0.0801%" height="15" fill="rgb(239,214,48)" fg:x="555" fg:w="1"/><text x="44.6855%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="44.4355%" y="149" width="0.0801%" height="15" fill="rgb(241,56,8)" fg:x="555" fg:w="1"/><text x="44.6855%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="44.4355%" y="133" width="0.0801%" height="15" fill="rgb(228,201,0)" fg:x="555" fg:w="1"/><text x="44.6855%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="44.4355%" y="117" width="0.0801%" height="15" fill="rgb(226,219,34)" fg:x="555" fg:w="1"/><text x="44.6855%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="44.4355%" y="101" width="0.0801%" height="15" fill="rgb(209,204,54)" fg:x="555" fg:w="1"/><text x="44.6855%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="44.4355%" y="85" width="0.0801%" height="15" fill="rgb(251,160,17)" fg:x="555" fg:w="1"/><text x="44.6855%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="44.4355%" y="69" width="0.0801%" height="15" fill="rgb(235,15,25)" fg:x="555" fg:w="1"/><text x="44.6855%" y="79.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="44.4355%" y="53" width="0.0801%" height="15" fill="rgb(216,209,28)" fg:x="555" fg:w="1"/><text x="44.6855%" y="63.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="44.4355%" y="37" width="0.0801%" height="15" fill="rgb(248,123,21)" fg:x="555" fg:w="1"/><text x="44.6855%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6757%" y="517" width="0.0801%" height="15" fill="rgb(226,138,44)" fg:x="558" fg:w="1"/><text x="44.9257%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.6757%" y="501" width="0.0801%" height="15" fill="rgb(211,104,54)" fg:x="558" fg:w="1"/><text x="44.9257%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.6757%" y="485" width="0.0801%" height="15" fill="rgb(241,198,15)" fg:x="558" fg:w="1"/><text x="44.9257%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.6757%" y="469" width="0.0801%" height="15" fill="rgb(227,155,54)" fg:x="558" fg:w="1"/><text x="44.9257%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.6757%" y="453" width="0.0801%" height="15" fill="rgb(225,131,31)" fg:x="558" fg:w="1"/><text x="44.9257%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.6757%" y="437" width="0.0801%" height="15" fill="rgb(242,40,17)" fg:x="558" fg:w="1"/><text x="44.9257%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.6757%" y="421" width="0.0801%" height="15" fill="rgb(254,57,35)" fg:x="558" fg:w="1"/><text x="44.9257%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.6757%" y="405" width="0.0801%" height="15" fill="rgb(240,64,32)" fg:x="558" fg:w="1"/><text x="44.9257%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="44.6757%" y="389" width="0.0801%" height="15" fill="rgb(251,136,26)" fg:x="558" fg:w="1"/><text x="44.9257%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="44.6757%" y="373" width="0.0801%" height="15" fill="rgb(208,60,54)" fg:x="558" fg:w="1"/><text x="44.9257%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="44.6757%" y="549" width="0.2402%" height="15" fill="rgb(220,13,12)" fg:x="558" fg:w="3"/><text x="44.9257%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="44.6757%" y="533" width="0.2402%" height="15" fill="rgb(213,149,1)" fg:x="558" fg:w="3"/><text x="44.9257%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.7558%" y="517" width="0.1601%" height="15" fill="rgb(212,191,39)" fg:x="559" fg:w="2"/><text x="45.0058%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.7558%" y="501" width="0.1601%" height="15" fill="rgb(215,221,42)" fg:x="559" fg:w="2"/><text x="45.0058%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.7558%" y="485" width="0.1601%" height="15" fill="rgb(244,79,23)" fg:x="559" fg:w="2"/><text x="45.0058%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.7558%" y="469" width="0.1601%" height="15" fill="rgb(247,17,29)" fg:x="559" fg:w="2"/><text x="45.0058%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="44.7558%" y="453" width="0.1601%" height="15" fill="rgb(251,221,21)" fg:x="559" fg:w="2"/><text x="45.0058%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="44.7558%" y="437" width="0.1601%" height="15" fill="rgb(207,202,34)" fg:x="559" fg:w="2"/><text x="45.0058%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="44.7558%" y="421" width="0.1601%" height="15" fill="rgb(217,4,34)" fg:x="559" fg:w="2"/><text x="45.0058%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="44.7558%" y="405" width="0.1601%" height="15" fill="rgb(253,17,16)" fg:x="559" fg:w="2"/><text x="45.0058%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="44.7558%" y="389" width="0.1601%" height="15" fill="rgb(223,91,48)" fg:x="559" fg:w="2"/><text x="45.0058%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="44.7558%" y="373" width="0.1601%" height="15" fill="rgb(244,191,22)" fg:x="559" fg:w="2"/><text x="45.0058%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="44.7558%" y="357" width="0.1601%" height="15" fill="rgb(211,107,14)" fg:x="559" fg:w="2"/><text x="45.0058%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="44.7558%" y="341" width="0.1601%" height="15" fill="rgb(232,81,23)" fg:x="559" fg:w="2"/><text x="45.0058%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="44.7558%" y="325" width="0.1601%" height="15" fill="rgb(237,126,14)" fg:x="559" fg:w="2"/><text x="45.0058%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.7558%" y="309" width="0.1601%" height="15" fill="rgb(230,65,39)" fg:x="559" fg:w="2"/><text x="45.0058%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.9960%" y="389" width="0.0801%" height="15" fill="rgb(208,106,41)" fg:x="562" fg:w="1"/><text x="45.2460%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="44.9960%" y="405" width="0.1601%" height="15" fill="rgb(206,125,25)" fg:x="562" fg:w="2"/><text x="45.2460%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="45.0761%" y="389" width="0.0801%" height="15" fill="rgb(250,24,29)" fg:x="563" fg:w="1"/><text x="45.3261%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="45.0761%" y="373" width="0.0801%" height="15" fill="rgb(226,49,32)" fg:x="563" fg:w="1"/><text x="45.3261%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.0761%" y="357" width="0.0801%" height="15" fill="rgb(217,110,16)" fg:x="563" fg:w="1"/><text x="45.3261%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.0761%" y="341" width="0.0801%" height="15" fill="rgb(252,16,53)" fg:x="563" fg:w="1"/><text x="45.3261%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.0761%" y="325" width="0.0801%" height="15" fill="rgb(238,163,11)" fg:x="563" fg:w="1"/><text x="45.3261%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.0761%" y="309" width="0.0801%" height="15" fill="rgb(206,210,1)" fg:x="563" fg:w="1"/><text x="45.3261%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="45.0761%" y="293" width="0.0801%" height="15" fill="rgb(229,8,25)" fg:x="563" fg:w="1"/><text x="45.3261%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.0761%" y="277" width="0.0801%" height="15" fill="rgb(247,155,23)" fg:x="563" fg:w="1"/><text x="45.3261%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.0761%" y="261" width="0.0801%" height="15" fill="rgb(207,26,7)" fg:x="563" fg:w="1"/><text x="45.3261%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.0761%" y="245" width="0.0801%" height="15" fill="rgb(215,179,12)" fg:x="563" fg:w="1"/><text x="45.3261%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="45.1561%" y="389" width="0.0801%" height="15" fill="rgb(238,208,11)" fg:x="564" fg:w="1"/><text x="45.4061%" y="399.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="45.2362%" y="389" width="0.0801%" height="15" fill="rgb(238,102,42)" fg:x="565" fg:w="1"/><text x="45.4862%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="45.2362%" y="373" width="0.0801%" height="15" fill="rgb(239,35,9)" fg:x="565" fg:w="1"/><text x="45.4862%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (9 samples, 0.72%)</title><rect x="44.9159%" y="437" width="0.7206%" height="15" fill="rgb(244,182,30)" fg:x="561" fg:w="9"/><text x="45.1659%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="44.9159%" y="421" width="0.7206%" height="15" fill="rgb(232,181,23)" fg:x="561" fg:w="9"/><text x="45.1659%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="45.1561%" y="405" width="0.4804%" height="15" fill="rgb(242,154,29)" fg:x="564" fg:w="6"/><text x="45.4061%" y="415.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="45.3163%" y="389" width="0.3203%" height="15" fill="rgb(219,23,2)" fg:x="566" fg:w="4"/><text x="45.5663%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="45.3163%" y="373" width="0.3203%" height="15" fill="rgb(234,94,43)" fg:x="566" fg:w="4"/><text x="45.5663%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="45.3163%" y="357" width="0.3203%" height="15" fill="rgb(223,55,45)" fg:x="566" fg:w="4"/><text x="45.5663%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="45.3163%" y="341" width="0.3203%" height="15" fill="rgb(241,215,54)" fg:x="566" fg:w="4"/><text x="45.5663%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="45.3163%" y="325" width="0.3203%" height="15" fill="rgb(247,63,53)" fg:x="566" fg:w="4"/><text x="45.5663%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="45.3163%" y="309" width="0.3203%" height="15" fill="rgb(220,166,7)" fg:x="566" fg:w="4"/><text x="45.5663%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="45.3163%" y="293" width="0.3203%" height="15" fill="rgb(248,53,45)" fg:x="566" fg:w="4"/><text x="45.5663%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="45.3163%" y="277" width="0.3203%" height="15" fill="rgb(224,207,20)" fg:x="566" fg:w="4"/><text x="45.5663%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="45.3163%" y="261" width="0.3203%" height="15" fill="rgb(244,185,11)" fg:x="566" fg:w="4"/><text x="45.5663%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="45.3163%" y="245" width="0.3203%" height="15" fill="rgb(230,13,42)" fg:x="566" fg:w="4"/><text x="45.5663%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="45.5564%" y="229" width="0.0801%" height="15" fill="rgb(243,191,18)" fg:x="569" fg:w="1"/><text x="45.8064%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.5564%" y="213" width="0.0801%" height="15" fill="rgb(249,135,15)" fg:x="569" fg:w="1"/><text x="45.8064%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="45.5564%" y="197" width="0.0801%" height="15" fill="rgb(229,26,35)" fg:x="569" fg:w="1"/><text x="45.8064%" y="207.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="45.5564%" y="181" width="0.0801%" height="15" fill="rgb(216,191,16)" fg:x="569" fg:w="1"/><text x="45.8064%" y="191.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="45.5564%" y="165" width="0.0801%" height="15" fill="rgb(242,18,7)" fg:x="569" fg:w="1"/><text x="45.8064%" y="175.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.6365%" y="373" width="0.0801%" height="15" fill="rgb(205,128,17)" fg:x="570" fg:w="1"/><text x="45.8865%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.6365%" y="357" width="0.0801%" height="15" fill="rgb(229,199,44)" fg:x="570" fg:w="1"/><text x="45.8865%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.7166%" y="341" width="0.0801%" height="15" fill="rgb(234,222,3)" fg:x="571" fg:w="1"/><text x="45.9666%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.7166%" y="325" width="0.0801%" height="15" fill="rgb(220,170,20)" fg:x="571" fg:w="1"/><text x="45.9666%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.8767%" y="277" width="0.0801%" height="15" fill="rgb(207,138,8)" fg:x="573" fg:w="1"/><text x="46.1267%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.8767%" y="261" width="0.0801%" height="15" fill="rgb(244,130,36)" fg:x="573" fg:w="1"/><text x="46.1267%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="45.9568%" y="261" width="0.1601%" height="15" fill="rgb(207,197,52)" fg:x="574" fg:w="2"/><text x="46.2068%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="45.9568%" y="245" width="0.1601%" height="15" fill="rgb(206,9,21)" fg:x="574" fg:w="2"/><text x="46.2068%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="45.9568%" y="229" width="0.1601%" height="15" fill="rgb(250,15,47)" fg:x="574" fg:w="2"/><text x="46.2068%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.0368%" y="213" width="0.0801%" height="15" fill="rgb(235,202,14)" fg:x="575" fg:w="1"/><text x="46.2868%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.0368%" y="197" width="0.0801%" height="15" fill="rgb(211,180,47)" fg:x="575" fg:w="1"/><text x="46.2868%" y="207.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="45.6365%" y="421" width="0.6405%" height="15" fill="rgb(209,61,11)" fg:x="570" fg:w="8"/><text x="45.8865%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="45.6365%" y="405" width="0.6405%" height="15" fill="rgb(243,197,29)" fg:x="570" fg:w="8"/><text x="45.8865%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="45.6365%" y="389" width="0.6405%" height="15" fill="rgb(216,185,16)" fg:x="570" fg:w="8"/><text x="45.8865%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="45.7166%" y="373" width="0.5604%" height="15" fill="rgb(248,5,15)" fg:x="571" fg:w="7"/><text x="45.9666%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="45.7166%" y="357" width="0.5604%" height="15" fill="rgb(240,39,41)" fg:x="571" fg:w="7"/><text x="45.9666%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="45.7966%" y="341" width="0.4804%" height="15" fill="rgb(224,220,43)" fg:x="572" fg:w="6"/><text x="46.0466%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="45.7966%" y="325" width="0.4804%" height="15" fill="rgb(215,21,24)" fg:x="572" fg:w="6"/><text x="46.0466%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="45.7966%" y="309" width="0.4804%" height="15" fill="rgb(220,102,8)" fg:x="572" fg:w="6"/><text x="46.0466%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="45.8767%" y="293" width="0.4003%" height="15" fill="rgb(225,185,10)" fg:x="573" fg:w="5"/><text x="46.1267%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="45.9568%" y="277" width="0.3203%" height="15" fill="rgb(212,108,24)" fg:x="574" fg:w="4"/><text x="46.2068%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.1169%" y="261" width="0.1601%" height="15" fill="rgb(237,27,0)" fg:x="576" fg:w="2"/><text x="46.3669%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="46.4371%" y="277" width="0.1601%" height="15" fill="rgb(212,106,38)" fg:x="580" fg:w="2"/><text x="46.6871%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.4371%" y="261" width="0.1601%" height="15" fill="rgb(210,125,30)" fg:x="580" fg:w="2"/><text x="46.6871%" y="271.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="46.5172%" y="245" width="0.0801%" height="15" fill="rgb(215,219,1)" fg:x="581" fg:w="1"/><text x="46.7672%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="46.5172%" y="229" width="0.0801%" height="15" fill="rgb(223,10,12)" fg:x="581" fg:w="1"/><text x="46.7672%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.5172%" y="213" width="0.0801%" height="15" fill="rgb(245,40,34)" fg:x="581" fg:w="1"/><text x="46.7672%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="46.5172%" y="197" width="0.0801%" height="15" fill="rgb(211,185,19)" fg:x="581" fg:w="1"/><text x="46.7672%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.5172%" y="181" width="0.0801%" height="15" fill="rgb(243,190,43)" fg:x="581" fg:w="1"/><text x="46.7672%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="46.5172%" y="165" width="0.0801%" height="15" fill="rgb(232,208,29)" fg:x="581" fg:w="1"/><text x="46.7672%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="46.5973%" y="277" width="0.1601%" height="15" fill="rgb(234,134,27)" fg:x="582" fg:w="2"/><text x="46.8473%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="46.6773%" y="261" width="0.0801%" height="15" fill="rgb(225,41,29)" fg:x="583" fg:w="1"/><text x="46.9273%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="46.4371%" y="309" width="0.4804%" height="15" fill="rgb(241,214,44)" fg:x="580" fg:w="6"/><text x="46.6871%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="46.4371%" y="293" width="0.4804%" height="15" fill="rgb(205,219,41)" fg:x="580" fg:w="6"/><text x="46.6871%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.7574%" y="277" width="0.1601%" height="15" fill="rgb(226,15,26)" fg:x="584" fg:w="2"/><text x="47.0074%" y="287.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.7574%" y="261" width="0.1601%" height="15" fill="rgb(210,83,41)" fg:x="584" fg:w="2"/><text x="47.0074%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.8375%" y="245" width="0.0801%" height="15" fill="rgb(247,9,39)" fg:x="585" fg:w="1"/><text x="47.0875%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="46.4371%" y="341" width="0.5604%" height="15" fill="rgb(209,37,30)" fg:x="580" fg:w="7"/><text x="46.6871%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="46.4371%" y="325" width="0.5604%" height="15" fill="rgb(248,170,46)" fg:x="580" fg:w="7"/><text x="46.6871%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="46.9175%" y="309" width="0.0801%" height="15" fill="rgb(237,129,44)" fg:x="586" fg:w="1"/><text x="47.1675%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.9175%" y="293" width="0.0801%" height="15" fill="rgb(225,117,51)" fg:x="586" fg:w="1"/><text x="47.1675%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="46.9976%" y="341" width="0.0801%" height="15" fill="rgb(212,165,2)" fg:x="587" fg:w="1"/><text x="47.2476%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.9976%" y="325" width="0.0801%" height="15" fill="rgb(213,53,45)" fg:x="587" fg:w="1"/><text x="47.2476%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="46.9976%" y="309" width="0.0801%" height="15" fill="rgb(220,148,3)" fg:x="587" fg:w="1"/><text x="47.2476%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (23 samples, 1.84%)</title><rect x="45.6365%" y="437" width="1.8415%" height="15" fill="rgb(228,37,29)" fg:x="570" fg:w="23"/><text x="45.8865%" y="447.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (15 samples, 1.20%)</title><rect x="46.2770%" y="421" width="1.2010%" height="15" fill="rgb(209,76,29)" fg:x="578" fg:w="15"/><text x="46.5270%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.20%)</title><rect x="46.2770%" y="405" width="1.2010%" height="15" fill="rgb(215,90,5)" fg:x="578" fg:w="15"/><text x="46.5270%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (14 samples, 1.12%)</title><rect x="46.3571%" y="389" width="1.1209%" height="15" fill="rgb(227,207,32)" fg:x="579" fg:w="14"/><text x="46.6071%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.12%)</title><rect x="46.3571%" y="373" width="1.1209%" height="15" fill="rgb(251,218,44)" fg:x="579" fg:w="14"/><text x="46.6071%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (14 samples, 1.12%)</title><rect x="46.3571%" y="357" width="1.1209%" height="15" fill="rgb(211,44,16)" fg:x="579" fg:w="14"/><text x="46.6071%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="47.0777%" y="341" width="0.4003%" height="15" fill="rgb(242,170,37)" fg:x="588" fg:w="5"/><text x="47.3277%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="47.1577%" y="325" width="0.3203%" height="15" fill="rgb(205,181,22)" fg:x="589" fg:w="4"/><text x="47.4077%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="47.1577%" y="309" width="0.3203%" height="15" fill="rgb(228,130,19)" fg:x="589" fg:w="4"/><text x="47.4077%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="47.1577%" y="293" width="0.3203%" height="15" fill="rgb(228,9,15)" fg:x="589" fg:w="4"/><text x="47.4077%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="47.1577%" y="277" width="0.3203%" height="15" fill="rgb(219,66,48)" fg:x="589" fg:w="4"/><text x="47.4077%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="47.2378%" y="261" width="0.2402%" height="15" fill="rgb(234,203,10)" fg:x="590" fg:w="3"/><text x="47.4878%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.3179%" y="245" width="0.1601%" height="15" fill="rgb(219,209,1)" fg:x="591" fg:w="2"/><text x="47.5679%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="47.3179%" y="229" width="0.1601%" height="15" fill="rgb(206,167,9)" fg:x="591" fg:w="2"/><text x="47.5679%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="47.3979%" y="213" width="0.0801%" height="15" fill="rgb(210,11,39)" fg:x="592" fg:w="1"/><text x="47.6479%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.3979%" y="197" width="0.0801%" height="15" fill="rgb(251,90,47)" fg:x="592" fg:w="1"/><text x="47.6479%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.3979%" y="181" width="0.0801%" height="15" fill="rgb(237,7,4)" fg:x="592" fg:w="1"/><text x="47.6479%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="47.4780%" y="293" width="0.0801%" height="15" fill="rgb(232,205,47)" fg:x="593" fg:w="1"/><text x="47.7280%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.4780%" y="277" width="0.0801%" height="15" fill="rgb(215,86,48)" fg:x="593" fg:w="1"/><text x="47.7280%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.4780%" y="261" width="0.0801%" height="15" fill="rgb(232,14,47)" fg:x="593" fg:w="1"/><text x="47.7280%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="47.4780%" y="437" width="0.1601%" height="15" fill="rgb(240,28,46)" fg:x="593" fg:w="2"/><text x="47.7280%" y="447.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="47.4780%" y="421" width="0.1601%" height="15" fill="rgb(224,85,5)" fg:x="593" fg:w="2"/><text x="47.7280%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="47.4780%" y="405" width="0.1601%" height="15" fill="rgb(219,34,25)" fg:x="593" fg:w="2"/><text x="47.7280%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.4780%" y="389" width="0.1601%" height="15" fill="rgb(247,137,45)" fg:x="593" fg:w="2"/><text x="47.7280%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.4780%" y="373" width="0.1601%" height="15" fill="rgb(237,121,47)" fg:x="593" fg:w="2"/><text x="47.7280%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.4780%" y="357" width="0.1601%" height="15" fill="rgb(247,148,27)" fg:x="593" fg:w="2"/><text x="47.7280%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.4780%" y="341" width="0.1601%" height="15" fill="rgb(220,44,0)" fg:x="593" fg:w="2"/><text x="47.7280%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="47.4780%" y="325" width="0.1601%" height="15" fill="rgb(236,61,29)" fg:x="593" fg:w="2"/><text x="47.7280%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.4780%" y="309" width="0.1601%" height="15" fill="rgb(244,180,35)" fg:x="593" fg:w="2"/><text x="47.7280%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.5580%" y="293" width="0.0801%" height="15" fill="rgb(242,14,54)" fg:x="594" fg:w="1"/><text x="47.8080%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="47.5580%" y="277" width="0.0801%" height="15" fill="rgb(206,24,45)" fg:x="594" fg:w="1"/><text x="47.8080%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="47.5580%" y="261" width="0.0801%" height="15" fill="rgb(215,211,6)" fg:x="594" fg:w="1"/><text x="47.8080%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (40 samples, 3.20%)</title><rect x="44.9159%" y="549" width="3.2026%" height="15" fill="rgb(207,56,2)" fg:x="561" fg:w="40"/><text x="45.1659%" y="559.50">&lt;pl..</text></g><g><title>core::iter::adapters::try_process (40 samples, 3.20%)</title><rect x="44.9159%" y="533" width="3.2026%" height="15" fill="rgb(220,135,9)" fg:x="561" fg:w="40"/><text x="45.1659%" y="543.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (40 samples, 3.20%)</title><rect x="44.9159%" y="517" width="3.2026%" height="15" fill="rgb(214,145,52)" fg:x="561" fg:w="40"/><text x="45.1659%" y="527.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 3.20%)</title><rect x="44.9159%" y="501" width="3.2026%" height="15" fill="rgb(241,83,53)" fg:x="561" fg:w="40"/><text x="45.1659%" y="511.50">&lt;co..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (40 samples, 3.20%)</title><rect x="44.9159%" y="485" width="3.2026%" height="15" fill="rgb(222,66,13)" fg:x="561" fg:w="40"/><text x="45.1659%" y="495.50">&lt;en..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (40 samples, 3.20%)</title><rect x="44.9159%" y="469" width="3.2026%" height="15" fill="rgb(239,164,54)" fg:x="561" fg:w="40"/><text x="45.1659%" y="479.50">&lt;en..</text></g><g><title>engine::session::internal::Entities::add_persisted (40 samples, 3.20%)</title><rect x="44.9159%" y="453" width="3.2026%" height="15" fill="rgb(216,189,13)" fg:x="561" fg:w="40"/><text x="45.1659%" y="463.50">eng..</text></g><g><title>engine::session::internal::EntityMap::add_entity (6 samples, 0.48%)</title><rect x="47.6381%" y="437" width="0.4804%" height="15" fill="rgb(228,212,51)" fg:x="595" fg:w="6"/><text x="47.8881%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="47.6381%" y="421" width="0.4804%" height="15" fill="rgb(207,190,21)" fg:x="595" fg:w="6"/><text x="47.8881%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.48%)</title><rect x="47.6381%" y="405" width="0.4804%" height="15" fill="rgb(245,28,35)" fg:x="595" fg:w="6"/><text x="47.8881%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="47.6381%" y="389" width="0.4804%" height="15" fill="rgb(239,23,40)" fg:x="595" fg:w="6"/><text x="47.8881%" y="399.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="47.6381%" y="373" width="0.4804%" height="15" fill="rgb(242,10,51)" fg:x="595" fg:w="6"/><text x="47.8881%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.1185%" y="549" width="0.0801%" height="15" fill="rgb(207,186,5)" fg:x="601" fg:w="1"/><text x="48.3685%" y="559.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (58 samples, 4.64%)</title><rect x="43.7950%" y="613" width="4.6437%" height="15" fill="rgb(242,21,16)" fg:x="547" fg:w="58"/><text x="44.0450%" y="623.50">plugi..</text></g><g><title>plugins_core::tools::contained_by (53 samples, 4.24%)</title><rect x="44.1954%" y="597" width="4.2434%" height="15" fill="rgb(237,0,53)" fg:x="552" fg:w="53"/><text x="44.4454%" y="607.50">plugi..</text></g><g><title>kernel::model::entry::Entry::scope (49 samples, 3.92%)</title><rect x="44.5156%" y="581" width="3.9231%" height="15" fill="rgb(215,8,52)" fg:x="556" fg:w="49"/><text x="44.7656%" y="591.50">kern..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (49 samples, 3.92%)</title><rect x="44.5156%" y="565" width="3.9231%" height="15" fill="rgb(248,62,44)" fg:x="556" fg:w="49"/><text x="44.7656%" y="575.50">kern..</text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (3 samples, 0.24%)</title><rect x="48.1986%" y="549" width="0.2402%" height="15" fill="rgb(224,83,15)" fg:x="602" fg:w="3"/><text x="48.4486%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="48.1986%" y="533" width="0.2402%" height="15" fill="rgb(249,100,46)" fg:x="602" fg:w="3"/><text x="48.4486%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="48.2786%" y="517" width="0.1601%" height="15" fill="rgb(213,35,48)" fg:x="603" fg:w="2"/><text x="48.5286%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="48.2786%" y="501" width="0.1601%" height="15" fill="rgb(251,2,13)" fg:x="603" fg:w="2"/><text x="48.5286%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="48.2786%" y="485" width="0.1601%" height="15" fill="rgb(212,132,21)" fg:x="603" fg:w="2"/><text x="48.5286%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.2786%" y="469" width="0.1601%" height="15" fill="rgb(247,17,21)" fg:x="603" fg:w="2"/><text x="48.5286%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.2786%" y="453" width="0.1601%" height="15" fill="rgb(220,177,38)" fg:x="603" fg:w="2"/><text x="48.5286%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="48.2786%" y="437" width="0.1601%" height="15" fill="rgb(233,219,21)" fg:x="603" fg:w="2"/><text x="48.5286%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.4388%" y="597" width="0.0801%" height="15" fill="rgb(246,17,7)" fg:x="605" fg:w="1"/><text x="48.6888%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.4388%" y="581" width="0.0801%" height="15" fill="rgb(212,4,22)" fg:x="605" fg:w="1"/><text x="48.6888%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.4388%" y="565" width="0.0801%" height="15" fill="rgb(243,85,21)" fg:x="605" fg:w="1"/><text x="48.6888%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.4388%" y="549" width="0.0801%" height="15" fill="rgb(232,218,2)" fg:x="605" fg:w="1"/><text x="48.6888%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.4388%" y="533" width="0.0801%" height="15" fill="rgb(253,168,47)" fg:x="605" fg:w="1"/><text x="48.6888%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.4388%" y="517" width="0.0801%" height="15" fill="rgb(238,101,25)" fg:x="605" fg:w="1"/><text x="48.6888%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.4388%" y="501" width="0.0801%" height="15" fill="rgb(251,86,12)" fg:x="605" fg:w="1"/><text x="48.6888%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.4388%" y="485" width="0.0801%" height="15" fill="rgb(241,112,44)" fg:x="605" fg:w="1"/><text x="48.6888%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.4388%" y="469" width="0.0801%" height="15" fill="rgb(224,28,25)" fg:x="605" fg:w="1"/><text x="48.6888%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.4388%" y="453" width="0.0801%" height="15" fill="rgb(209,201,1)" fg:x="605" fg:w="1"/><text x="48.6888%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.4388%" y="437" width="0.0801%" height="15" fill="rgb(231,30,22)" fg:x="605" fg:w="1"/><text x="48.6888%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.4388%" y="421" width="0.0801%" height="15" fill="rgb(247,96,31)" fg:x="605" fg:w="1"/><text x="48.6888%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.4388%" y="405" width="0.0801%" height="15" fill="rgb(251,100,12)" fg:x="605" fg:w="1"/><text x="48.6888%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.4388%" y="389" width="0.0801%" height="15" fill="rgb(224,174,7)" fg:x="605" fg:w="1"/><text x="48.6888%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="48.5188%" y="597" width="0.0801%" height="15" fill="rgb(231,168,19)" fg:x="606" fg:w="1"/><text x="48.7688%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="48.5188%" y="581" width="0.0801%" height="15" fill="rgb(226,85,5)" fg:x="606" fg:w="1"/><text x="48.7688%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.5188%" y="565" width="0.0801%" height="15" fill="rgb(210,215,5)" fg:x="606" fg:w="1"/><text x="48.7688%" y="575.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.08%)</title><rect x="48.5989%" y="597" width="0.0801%" height="15" fill="rgb(233,70,8)" fg:x="607" fg:w="1"/><text x="48.8489%" y="607.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item::{{closure}} (1 samples, 0.08%)</title><rect x="48.5989%" y="581" width="0.0801%" height="15" fill="rgb(229,109,53)" fg:x="607" fg:w="1"/><text x="48.8489%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.6789%" y="501" width="0.0801%" height="15" fill="rgb(213,125,35)" fg:x="608" fg:w="1"/><text x="48.9289%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.6789%" y="485" width="0.0801%" height="15" fill="rgb(215,12,48)" fg:x="608" fg:w="1"/><text x="48.9289%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.6789%" y="469" width="0.0801%" height="15" fill="rgb(207,12,38)" fg:x="608" fg:w="1"/><text x="48.9289%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.6789%" y="453" width="0.0801%" height="15" fill="rgb(216,229,2)" fg:x="608" fg:w="1"/><text x="48.9289%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.6789%" y="437" width="0.0801%" height="15" fill="rgb(229,209,31)" fg:x="608" fg:w="1"/><text x="48.9289%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.7590%" y="405" width="0.0801%" height="15" fill="rgb(239,57,22)" fg:x="609" fg:w="1"/><text x="49.0090%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.7590%" y="389" width="0.0801%" height="15" fill="rgb(239,119,54)" fg:x="609" fg:w="1"/><text x="49.0090%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.7590%" y="373" width="0.0801%" height="15" fill="rgb(231,80,45)" fg:x="609" fg:w="1"/><text x="49.0090%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::name (3 samples, 0.24%)</title><rect x="48.6789%" y="565" width="0.2402%" height="15" fill="rgb(219,138,19)" fg:x="608" fg:w="3"/><text x="48.9289%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="48.6789%" y="549" width="0.2402%" height="15" fill="rgb(216,53,26)" fg:x="608" fg:w="3"/><text x="48.9289%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="48.6789%" y="533" width="0.2402%" height="15" fill="rgb(224,30,16)" fg:x="608" fg:w="3"/><text x="48.9289%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="48.6789%" y="517" width="0.2402%" height="15" fill="rgb(224,151,24)" fg:x="608" fg:w="3"/><text x="48.9289%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.7590%" y="501" width="0.1601%" height="15" fill="rgb(236,75,7)" fg:x="609" fg:w="2"/><text x="49.0090%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.7590%" y="485" width="0.1601%" height="15" fill="rgb(248,106,42)" fg:x="609" fg:w="2"/><text x="49.0090%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="48.7590%" y="469" width="0.1601%" height="15" fill="rgb(222,217,11)" fg:x="609" fg:w="2"/><text x="49.0090%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.7590%" y="453" width="0.1601%" height="15" fill="rgb(234,143,31)" fg:x="609" fg:w="2"/><text x="49.0090%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="48.7590%" y="437" width="0.1601%" height="15" fill="rgb(237,148,28)" fg:x="609" fg:w="2"/><text x="49.0090%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="48.7590%" y="421" width="0.1601%" height="15" fill="rgb(241,151,6)" fg:x="609" fg:w="2"/><text x="49.0090%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.8391%" y="405" width="0.0801%" height="15" fill="rgb(226,55,18)" fg:x="610" fg:w="1"/><text x="49.0891%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.8391%" y="389" width="0.0801%" height="15" fill="rgb(226,196,6)" fg:x="610" fg:w="1"/><text x="49.0891%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.8391%" y="373" width="0.0801%" height="15" fill="rgb(251,228,11)" fg:x="610" fg:w="1"/><text x="49.0891%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.8391%" y="357" width="0.0801%" height="15" fill="rgb(219,197,15)" fg:x="610" fg:w="1"/><text x="49.0891%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.8391%" y="341" width="0.0801%" height="15" fill="rgb(243,105,44)" fg:x="610" fg:w="1"/><text x="49.0891%" y="351.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (7 samples, 0.56%)</title><rect x="48.4388%" y="613" width="0.5604%" height="15" fill="rgb(205,183,40)" fg:x="605" fg:w="7"/><text x="48.6888%" y="623.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="48.6789%" y="597" width="0.3203%" height="15" fill="rgb(232,138,46)" fg:x="608" fg:w="4"/><text x="48.9289%" y="607.50"></text></g><g><title>plugins_core::finding::matches_description (4 samples, 0.32%)</title><rect x="48.6789%" y="581" width="0.3203%" height="15" fill="rgb(234,161,14)" fg:x="608" fg:w="4"/><text x="48.9289%" y="591.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="48.9191%" y="565" width="0.0801%" height="15" fill="rgb(238,211,18)" fg:x="611" fg:w="1"/><text x="49.1691%" y="575.50"></text></g><g><title>alloc::rc::rcbox_layout_for_value_layout (1 samples, 0.08%)</title><rect x="48.9191%" y="549" width="0.0801%" height="15" fill="rgb(217,130,2)" fg:x="611" fg:w="1"/><text x="49.1691%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (66 samples, 5.28%)</title><rect x="43.7950%" y="645" width="5.2842%" height="15" fill="rgb(251,17,29)" fg:x="547" fg:w="66"/><text x="44.0450%" y="655.50">&lt;engin..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (66 samples, 5.28%)</title><rect x="43.7950%" y="629" width="5.2842%" height="15" fill="rgb(243,18,0)" fg:x="547" fg:w="66"/><text x="44.0450%" y="639.50">&lt;plugi..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="48.9992%" y="613" width="0.0801%" height="15" fill="rgb(227,220,45)" fg:x="612" fg:w="1"/><text x="49.2492%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9992%" y="597" width="0.0801%" height="15" fill="rgb(212,34,2)" fg:x="612" fg:w="1"/><text x="49.2492%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9992%" y="581" width="0.0801%" height="15" fill="rgb(236,23,8)" fg:x="612" fg:w="1"/><text x="49.2492%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9992%" y="565" width="0.0801%" height="15" fill="rgb(210,113,39)" fg:x="612" fg:w="1"/><text x="49.2492%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.9992%" y="549" width="0.0801%" height="15" fill="rgb(243,123,48)" fg:x="612" fg:w="1"/><text x="49.2492%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.9992%" y="533" width="0.0801%" height="15" fill="rgb(223,175,36)" fg:x="612" fg:w="1"/><text x="49.2492%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.9992%" y="517" width="0.0801%" height="15" fill="rgb(226,100,30)" fg:x="612" fg:w="1"/><text x="49.2492%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="48.9992%" y="501" width="0.0801%" height="15" fill="rgb(221,225,39)" fg:x="612" fg:w="1"/><text x="49.2492%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="48.9992%" y="485" width="0.0801%" height="15" fill="rgb(224,222,42)" fg:x="612" fg:w="1"/><text x="49.2492%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.0793%" y="645" width="0.0801%" height="15" fill="rgb(221,53,1)" fg:x="613" fg:w="1"/><text x="49.3293%" y="655.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="49.1593%" y="645" width="0.0801%" height="15" fill="rgb(216,187,48)" fg:x="614" fg:w="1"/><text x="49.4093%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.1593%" y="629" width="0.0801%" height="15" fill="rgb(220,108,2)" fg:x="614" fg:w="1"/><text x="49.4093%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.1593%" y="613" width="0.0801%" height="15" fill="rgb(216,13,42)" fg:x="614" fg:w="1"/><text x="49.4093%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.1593%" y="597" width="0.0801%" height="15" fill="rgb(205,14,29)" fg:x="614" fg:w="1"/><text x="49.4093%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.1593%" y="581" width="0.0801%" height="15" fill="rgb(217,168,30)" fg:x="614" fg:w="1"/><text x="49.4093%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.1593%" y="565" width="0.0801%" height="15" fill="rgb(246,173,54)" fg:x="614" fg:w="1"/><text x="49.4093%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.1593%" y="549" width="0.0801%" height="15" fill="rgb(227,177,11)" fg:x="614" fg:w="1"/><text x="49.4093%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.1593%" y="533" width="0.0801%" height="15" fill="rgb(223,215,51)" fg:x="614" fg:w="1"/><text x="49.4093%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.1593%" y="517" width="0.0801%" height="15" fill="rgb(253,4,17)" fg:x="614" fg:w="1"/><text x="49.4093%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.1593%" y="501" width="0.0801%" height="15" fill="rgb(206,150,43)" fg:x="614" fg:w="1"/><text x="49.4093%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.1593%" y="485" width="0.0801%" height="15" fill="rgb(241,100,52)" fg:x="614" fg:w="1"/><text x="49.4093%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.1593%" y="469" width="0.0801%" height="15" fill="rgb(234,120,21)" fg:x="614" fg:w="1"/><text x="49.4093%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.1593%" y="453" width="0.0801%" height="15" fill="rgb(231,60,11)" fg:x="614" fg:w="1"/><text x="49.4093%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.1593%" y="437" width="0.0801%" height="15" fill="rgb(247,77,50)" fg:x="614" fg:w="1"/><text x="49.4093%" y="447.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="49.2394%" y="645" width="0.0801%" height="15" fill="rgb(251,199,54)" fg:x="615" fg:w="1"/><text x="49.4894%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="49.2394%" y="629" width="0.0801%" height="15" fill="rgb(212,120,38)" fg:x="615" fg:w="1"/><text x="49.4894%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="49.2394%" y="613" width="0.0801%" height="15" fill="rgb(250,161,37)" fg:x="615" fg:w="1"/><text x="49.4894%" y="623.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="49.2394%" y="597" width="0.0801%" height="15" fill="rgb(232,158,45)" fg:x="615" fg:w="1"/><text x="49.4894%" y="607.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="49.2394%" y="581" width="0.0801%" height="15" fill="rgb(233,114,2)" fg:x="615" fg:w="1"/><text x="49.4894%" y="591.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="49.2394%" y="565" width="0.0801%" height="15" fill="rgb(248,139,0)" fg:x="615" fg:w="1"/><text x="49.4894%" y="575.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="49.2394%" y="549" width="0.0801%" height="15" fill="rgb(222,164,18)" fg:x="615" fg:w="1"/><text x="49.4894%" y="559.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="49.2394%" y="533" width="0.0801%" height="15" fill="rgb(221,140,42)" fg:x="615" fg:w="1"/><text x="49.4894%" y="543.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="49.2394%" y="517" width="0.0801%" height="15" fill="rgb(209,186,11)" fg:x="615" fg:w="1"/><text x="49.4894%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="49.2394%" y="501" width="0.0801%" height="15" fill="rgb(254,212,38)" fg:x="615" fg:w="1"/><text x="49.4894%" y="511.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="49.2394%" y="485" width="0.0801%" height="15" fill="rgb(219,156,31)" fg:x="615" fg:w="1"/><text x="49.4894%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="49.2394%" y="469" width="0.0801%" height="15" fill="rgb(222,148,42)" fg:x="615" fg:w="1"/><text x="49.4894%" y="479.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.3195%" y="629" width="0.0801%" height="15" fill="rgb(225,65,5)" fg:x="616" fg:w="1"/><text x="49.5695%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.3195%" y="613" width="0.0801%" height="15" fill="rgb(235,28,12)" fg:x="616" fg:w="1"/><text x="49.5695%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.3195%" y="597" width="0.0801%" height="15" fill="rgb(245,58,4)" fg:x="616" fg:w="1"/><text x="49.5695%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.3195%" y="581" width="0.0801%" height="15" fill="rgb(235,118,5)" fg:x="616" fg:w="1"/><text x="49.5695%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.3195%" y="565" width="0.0801%" height="15" fill="rgb(253,196,3)" fg:x="616" fg:w="1"/><text x="49.5695%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.3195%" y="549" width="0.0801%" height="15" fill="rgb(238,90,28)" fg:x="616" fg:w="1"/><text x="49.5695%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.3195%" y="533" width="0.0801%" height="15" fill="rgb(254,227,4)" fg:x="616" fg:w="1"/><text x="49.5695%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.3195%" y="517" width="0.0801%" height="15" fill="rgb(237,114,35)" fg:x="616" fg:w="1"/><text x="49.5695%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.3195%" y="501" width="0.0801%" height="15" fill="rgb(221,147,29)" fg:x="616" fg:w="1"/><text x="49.5695%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.3195%" y="485" width="0.0801%" height="15" fill="rgb(216,201,17)" fg:x="616" fg:w="1"/><text x="49.5695%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.3195%" y="469" width="0.0801%" height="15" fill="rgb(251,46,50)" fg:x="616" fg:w="1"/><text x="49.5695%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.3195%" y="453" width="0.0801%" height="15" fill="rgb(216,143,48)" fg:x="616" fg:w="1"/><text x="49.5695%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="49.3195%" y="437" width="0.0801%" height="15" fill="rgb(224,62,51)" fg:x="616" fg:w="1"/><text x="49.5695%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="49.3995%" y="629" width="0.0801%" height="15" fill="rgb(232,152,20)" fg:x="617" fg:w="1"/><text x="49.6495%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="49.3995%" y="613" width="0.0801%" height="15" fill="rgb(233,194,7)" fg:x="617" fg:w="1"/><text x="49.6495%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.3995%" y="597" width="0.0801%" height="15" fill="rgb(207,33,22)" fg:x="617" fg:w="1"/><text x="49.6495%" y="607.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="49.4796%" y="581" width="0.0801%" height="15" fill="rgb(226,54,34)" fg:x="618" fg:w="1"/><text x="49.7296%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.5596%" y="549" width="0.0801%" height="15" fill="rgb(227,161,47)" fg:x="619" fg:w="1"/><text x="49.8096%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.5596%" y="533" width="0.0801%" height="15" fill="rgb(218,58,37)" fg:x="619" fg:w="1"/><text x="49.8096%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="49.6397%" y="549" width="0.0801%" height="15" fill="rgb(208,173,18)" fg:x="620" fg:w="1"/><text x="49.8897%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="49.4796%" y="597" width="0.4003%" height="15" fill="rgb(230,159,11)" fg:x="618" fg:w="5"/><text x="49.7296%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="49.5596%" y="581" width="0.3203%" height="15" fill="rgb(238,90,51)" fg:x="619" fg:w="4"/><text x="49.8096%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="49.5596%" y="565" width="0.3203%" height="15" fill="rgb(225,97,36)" fg:x="619" fg:w="4"/><text x="49.8096%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="49.7198%" y="549" width="0.1601%" height="15" fill="rgb(211,205,42)" fg:x="621" fg:w="2"/><text x="49.9698%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.7198%" y="533" width="0.1601%" height="15" fill="rgb(219,152,7)" fg:x="621" fg:w="2"/><text x="49.9698%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="49.7198%" y="517" width="0.1601%" height="15" fill="rgb(222,79,10)" fg:x="621" fg:w="2"/><text x="49.9698%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.7198%" y="501" width="0.1601%" height="15" fill="rgb(242,13,11)" fg:x="621" fg:w="2"/><text x="49.9698%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="49.7998%" y="485" width="0.0801%" height="15" fill="rgb(231,143,41)" fg:x="622" fg:w="1"/><text x="50.0498%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.7998%" y="469" width="0.0801%" height="15" fill="rgb(222,147,19)" fg:x="622" fg:w="1"/><text x="50.0498%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.7998%" y="453" width="0.0801%" height="15" fill="rgb(235,5,39)" fg:x="622" fg:w="1"/><text x="50.0498%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.7998%" y="437" width="0.0801%" height="15" fill="rgb(246,155,51)" fg:x="622" fg:w="1"/><text x="50.0498%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.7998%" y="421" width="0.0801%" height="15" fill="rgb(218,157,4)" fg:x="622" fg:w="1"/><text x="50.0498%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.7998%" y="405" width="0.0801%" height="15" fill="rgb(226,184,4)" fg:x="622" fg:w="1"/><text x="50.0498%" y="415.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="49.7998%" y="389" width="0.0801%" height="15" fill="rgb(210,103,26)" fg:x="622" fg:w="1"/><text x="50.0498%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.8799%" y="549" width="0.0801%" height="15" fill="rgb(228,23,31)" fg:x="623" fg:w="1"/><text x="50.1299%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.8799%" y="533" width="0.0801%" height="15" fill="rgb(205,176,34)" fg:x="623" fg:w="1"/><text x="50.1299%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.8799%" y="517" width="0.0801%" height="15" fill="rgb(246,213,37)" fg:x="623" fg:w="1"/><text x="50.1299%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.8799%" y="501" width="0.0801%" height="15" fill="rgb(213,52,45)" fg:x="623" fg:w="1"/><text x="50.1299%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.8799%" y="485" width="0.0801%" height="15" fill="rgb(249,9,52)" fg:x="623" fg:w="1"/><text x="50.1299%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.0400%" y="421" width="0.0801%" height="15" fill="rgb(205,97,16)" fg:x="625" fg:w="1"/><text x="50.2900%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.0400%" y="405" width="0.0801%" height="15" fill="rgb(214,11,46)" fg:x="625" fg:w="1"/><text x="50.2900%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.80%)</title><rect x="49.4796%" y="629" width="0.8006%" height="15" fill="rgb(221,66,18)" fg:x="618" fg:w="10"/><text x="49.7296%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="49.4796%" y="613" width="0.8006%" height="15" fill="rgb(213,49,1)" fg:x="618" fg:w="10"/><text x="49.7296%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="49.8799%" y="597" width="0.4003%" height="15" fill="rgb(232,75,51)" fg:x="623" fg:w="5"/><text x="50.1299%" y="607.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="49.8799%" y="581" width="0.4003%" height="15" fill="rgb(208,218,40)" fg:x="623" fg:w="5"/><text x="50.1299%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="49.8799%" y="565" width="0.4003%" height="15" fill="rgb(206,144,50)" fg:x="623" fg:w="5"/><text x="50.1299%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="49.9600%" y="549" width="0.3203%" height="15" fill="rgb(216,9,51)" fg:x="624" fg:w="4"/><text x="50.2100%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="49.9600%" y="533" width="0.3203%" height="15" fill="rgb(226,6,53)" fg:x="624" fg:w="4"/><text x="50.2100%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="49.9600%" y="517" width="0.3203%" height="15" fill="rgb(216,9,50)" fg:x="624" fg:w="4"/><text x="50.2100%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="49.9600%" y="501" width="0.3203%" height="15" fill="rgb(214,101,31)" fg:x="624" fg:w="4"/><text x="50.2100%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="50.0400%" y="485" width="0.2402%" height="15" fill="rgb(247,85,17)" fg:x="625" fg:w="3"/><text x="50.2900%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="50.0400%" y="469" width="0.2402%" height="15" fill="rgb(248,138,25)" fg:x="625" fg:w="3"/><text x="50.2900%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="50.0400%" y="453" width="0.2402%" height="15" fill="rgb(225,146,20)" fg:x="625" fg:w="3"/><text x="50.2900%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="50.0400%" y="437" width="0.2402%" height="15" fill="rgb(224,184,17)" fg:x="625" fg:w="3"/><text x="50.2900%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.1201%" y="421" width="0.1601%" height="15" fill="rgb(231,10,20)" fg:x="626" fg:w="2"/><text x="50.3701%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.1201%" y="405" width="0.1601%" height="15" fill="rgb(210,93,37)" fg:x="626" fg:w="2"/><text x="50.3701%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="50.2002%" y="389" width="0.0801%" height="15" fill="rgb(226,84,42)" fg:x="627" fg:w="1"/><text x="50.4502%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="50.2002%" y="373" width="0.0801%" height="15" fill="rgb(253,192,7)" fg:x="627" fg:w="1"/><text x="50.4502%" y="383.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="50.3603%" y="597" width="0.2402%" height="15" fill="rgb(214,107,27)" fg:x="629" fg:w="3"/><text x="50.6103%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="50.3603%" y="581" width="0.2402%" height="15" fill="rgb(238,146,21)" fg:x="629" fg:w="3"/><text x="50.6103%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="50.4404%" y="565" width="0.1601%" height="15" fill="rgb(209,136,30)" fg:x="630" fg:w="2"/><text x="50.6904%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="50.4404%" y="549" width="0.1601%" height="15" fill="rgb(226,60,22)" fg:x="630" fg:w="2"/><text x="50.6904%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.5204%" y="533" width="0.0801%" height="15" fill="rgb(243,92,26)" fg:x="631" fg:w="1"/><text x="50.7704%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.5204%" y="517" width="0.0801%" height="15" fill="rgb(211,85,33)" fg:x="631" fg:w="1"/><text x="50.7704%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.5204%" y="501" width="0.0801%" height="15" fill="rgb(243,187,44)" fg:x="631" fg:w="1"/><text x="50.7704%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.5204%" y="485" width="0.0801%" height="15" fill="rgb(251,172,23)" fg:x="631" fg:w="1"/><text x="50.7704%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.5204%" y="469" width="0.0801%" height="15" fill="rgb(254,162,50)" fg:x="631" fg:w="1"/><text x="50.7704%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.5204%" y="453" width="0.0801%" height="15" fill="rgb(239,14,53)" fg:x="631" fg:w="1"/><text x="50.7704%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.5204%" y="437" width="0.0801%" height="15" fill="rgb(242,208,8)" fg:x="631" fg:w="1"/><text x="50.7704%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.5204%" y="421" width="0.0801%" height="15" fill="rgb(225,61,41)" fg:x="631" fg:w="1"/><text x="50.7704%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.5204%" y="405" width="0.0801%" height="15" fill="rgb(219,154,6)" fg:x="631" fg:w="1"/><text x="50.7704%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.5204%" y="389" width="0.0801%" height="15" fill="rgb(227,223,44)" fg:x="631" fg:w="1"/><text x="50.7704%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.5204%" y="373" width="0.0801%" height="15" fill="rgb(220,188,6)" fg:x="631" fg:w="1"/><text x="50.7704%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.5204%" y="357" width="0.0801%" height="15" fill="rgb(216,65,22)" fg:x="631" fg:w="1"/><text x="50.7704%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="50.6005%" y="517" width="0.0801%" height="15" fill="rgb(236,66,46)" fg:x="632" fg:w="1"/><text x="50.8505%" y="527.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="50.6005%" y="501" width="0.0801%" height="15" fill="rgb(211,150,52)" fg:x="632" fg:w="1"/><text x="50.8505%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="50.6005%" y="549" width="0.1601%" height="15" fill="rgb(253,89,19)" fg:x="632" fg:w="2"/><text x="50.8505%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="50.6005%" y="533" width="0.1601%" height="15" fill="rgb(245,4,1)" fg:x="632" fg:w="2"/><text x="50.8505%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.6805%" y="517" width="0.0801%" height="15" fill="rgb(230,109,16)" fg:x="633" fg:w="1"/><text x="50.9305%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="50.6005%" y="597" width="0.2402%" height="15" fill="rgb(213,7,47)" fg:x="632" fg:w="3"/><text x="50.8505%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="50.6005%" y="581" width="0.2402%" height="15" fill="rgb(242,148,14)" fg:x="632" fg:w="3"/><text x="50.8505%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="50.6005%" y="565" width="0.2402%" height="15" fill="rgb(238,51,34)" fg:x="632" fg:w="3"/><text x="50.8505%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.7606%" y="549" width="0.0801%" height="15" fill="rgb(222,49,22)" fg:x="634" fg:w="1"/><text x="51.0106%" y="559.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="50.8407%" y="533" width="0.2402%" height="15" fill="rgb(237,102,50)" fg:x="635" fg:w="3"/><text x="51.0907%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.0008%" y="517" width="0.0801%" height="15" fill="rgb(237,195,8)" fg:x="637" fg:w="1"/><text x="51.2508%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.0008%" y="501" width="0.0801%" height="15" fill="rgb(245,60,18)" fg:x="637" fg:w="1"/><text x="51.2508%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (11 samples, 0.88%)</title><rect x="50.2802%" y="629" width="0.8807%" height="15" fill="rgb(253,74,32)" fg:x="628" fg:w="11"/><text x="50.5302%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="50.2802%" y="613" width="0.8807%" height="15" fill="rgb(240,91,39)" fg:x="628" fg:w="11"/><text x="50.5302%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (4 samples, 0.32%)</title><rect x="50.8407%" y="597" width="0.3203%" height="15" fill="rgb(221,162,34)" fg:x="635" fg:w="4"/><text x="51.0907%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="50.8407%" y="581" width="0.3203%" height="15" fill="rgb(223,32,2)" fg:x="635" fg:w="4"/><text x="51.0907%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.32%)</title><rect x="50.8407%" y="565" width="0.3203%" height="15" fill="rgb(245,220,46)" fg:x="635" fg:w="4"/><text x="51.0907%" y="575.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.32%)</title><rect x="50.8407%" y="549" width="0.3203%" height="15" fill="rgb(216,38,33)" fg:x="635" fg:w="4"/><text x="51.0907%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.0809%" y="533" width="0.0801%" height="15" fill="rgb(210,123,14)" fg:x="638" fg:w="1"/><text x="51.3309%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.3211%" y="565" width="0.0801%" height="15" fill="rgb(214,38,47)" fg:x="641" fg:w="1"/><text x="51.5711%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="51.4011%" y="565" width="0.0801%" height="15" fill="rgb(244,180,16)" fg:x="642" fg:w="1"/><text x="51.6511%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (8 samples, 0.64%)</title><rect x="51.1609%" y="597" width="0.6405%" height="15" fill="rgb(252,21,32)" fg:x="639" fg:w="8"/><text x="51.4109%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="51.2410%" y="581" width="0.5604%" height="15" fill="rgb(245,218,31)" fg:x="640" fg:w="7"/><text x="51.4910%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="51.4812%" y="565" width="0.3203%" height="15" fill="rgb(247,81,18)" fg:x="643" fg:w="4"/><text x="51.7312%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (4 samples, 0.32%)</title><rect x="51.4812%" y="549" width="0.3203%" height="15" fill="rgb(220,151,1)" fg:x="643" fg:w="4"/><text x="51.7312%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="51.4812%" y="533" width="0.3203%" height="15" fill="rgb(211,157,11)" fg:x="643" fg:w="4"/><text x="51.7312%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="51.4812%" y="517" width="0.3203%" height="15" fill="rgb(239,46,30)" fg:x="643" fg:w="4"/><text x="51.7312%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.7214%" y="501" width="0.0801%" height="15" fill="rgb(236,144,43)" fg:x="646" fg:w="1"/><text x="51.9714%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="51.7214%" y="485" width="0.0801%" height="15" fill="rgb(206,71,45)" fg:x="646" fg:w="1"/><text x="51.9714%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (9 samples, 0.72%)</title><rect x="51.1609%" y="629" width="0.7206%" height="15" fill="rgb(240,85,31)" fg:x="639" fg:w="9"/><text x="51.4109%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (9 samples, 0.72%)</title><rect x="51.1609%" y="613" width="0.7206%" height="15" fill="rgb(221,43,52)" fg:x="639" fg:w="9"/><text x="51.4109%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="51.8014%" y="597" width="0.0801%" height="15" fill="rgb(243,106,22)" fg:x="647" fg:w="1"/><text x="52.0514%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="51.8014%" y="581" width="0.0801%" height="15" fill="rgb(209,138,38)" fg:x="647" fg:w="1"/><text x="52.0514%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="51.8014%" y="565" width="0.0801%" height="15" fill="rgb(216,63,40)" fg:x="647" fg:w="1"/><text x="52.0514%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="51.8014%" y="549" width="0.0801%" height="15" fill="rgb(206,115,21)" fg:x="647" fg:w="1"/><text x="52.0514%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="51.8014%" y="533" width="0.0801%" height="15" fill="rgb(235,53,44)" fg:x="647" fg:w="1"/><text x="52.0514%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.8014%" y="517" width="0.0801%" height="15" fill="rgb(244,160,14)" fg:x="647" fg:w="1"/><text x="52.0514%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.8815%" y="373" width="0.0801%" height="15" fill="rgb(223,16,19)" fg:x="648" fg:w="1"/><text x="52.1315%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="51.8815%" y="613" width="0.1601%" height="15" fill="rgb(242,63,42)" fg:x="648" fg:w="2"/><text x="52.1315%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="51.8815%" y="597" width="0.1601%" height="15" fill="rgb(209,66,49)" fg:x="648" fg:w="2"/><text x="52.1315%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="51.8815%" y="581" width="0.1601%" height="15" fill="rgb(207,126,46)" fg:x="648" fg:w="2"/><text x="52.1315%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="51.8815%" y="565" width="0.1601%" height="15" fill="rgb(218,160,41)" fg:x="648" fg:w="2"/><text x="52.1315%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="51.8815%" y="549" width="0.1601%" height="15" fill="rgb(234,125,46)" fg:x="648" fg:w="2"/><text x="52.1315%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="51.8815%" y="533" width="0.1601%" height="15" fill="rgb(205,66,36)" fg:x="648" fg:w="2"/><text x="52.1315%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="51.8815%" y="517" width="0.1601%" height="15" fill="rgb(220,135,16)" fg:x="648" fg:w="2"/><text x="52.1315%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="51.8815%" y="501" width="0.1601%" height="15" fill="rgb(214,217,54)" fg:x="648" fg:w="2"/><text x="52.1315%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="51.8815%" y="485" width="0.1601%" height="15" fill="rgb(206,30,9)" fg:x="648" fg:w="2"/><text x="52.1315%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="51.8815%" y="469" width="0.1601%" height="15" fill="rgb(207,196,5)" fg:x="648" fg:w="2"/><text x="52.1315%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="51.8815%" y="453" width="0.1601%" height="15" fill="rgb(227,116,12)" fg:x="648" fg:w="2"/><text x="52.1315%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="51.8815%" y="437" width="0.1601%" height="15" fill="rgb(235,227,13)" fg:x="648" fg:w="2"/><text x="52.1315%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="51.8815%" y="421" width="0.1601%" height="15" fill="rgb(238,212,29)" fg:x="648" fg:w="2"/><text x="52.1315%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="51.8815%" y="405" width="0.1601%" height="15" fill="rgb(230,152,17)" fg:x="648" fg:w="2"/><text x="52.1315%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="51.8815%" y="389" width="0.1601%" height="15" fill="rgb(220,197,1)" fg:x="648" fg:w="2"/><text x="52.1315%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="51.9616%" y="373" width="0.0801%" height="15" fill="rgb(229,227,40)" fg:x="649" fg:w="1"/><text x="52.2116%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="51.9616%" y="357" width="0.0801%" height="15" fill="rgb(227,179,16)" fg:x="649" fg:w="1"/><text x="52.2116%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="52.0416%" y="613" width="0.0801%" height="15" fill="rgb(246,116,44)" fg:x="650" fg:w="1"/><text x="52.2916%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="52.0416%" y="597" width="0.0801%" height="15" fill="rgb(205,191,4)" fg:x="650" fg:w="1"/><text x="52.2916%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.2018%" y="565" width="0.0801%" height="15" fill="rgb(245,69,19)" fg:x="652" fg:w="1"/><text x="52.4518%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.2818%" y="533" width="0.0801%" height="15" fill="rgb(230,29,26)" fg:x="653" fg:w="1"/><text x="52.5318%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="52.2018%" y="581" width="0.2402%" height="15" fill="rgb(239,192,26)" fg:x="652" fg:w="3"/><text x="52.4518%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="52.2818%" y="565" width="0.1601%" height="15" fill="rgb(219,92,16)" fg:x="653" fg:w="2"/><text x="52.5318%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="52.2818%" y="549" width="0.1601%" height="15" fill="rgb(246,147,43)" fg:x="653" fg:w="2"/><text x="52.5318%" y="559.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="52.3619%" y="533" width="0.0801%" height="15" fill="rgb(222,147,11)" fg:x="654" fg:w="1"/><text x="52.6119%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.5220%" y="469" width="0.0801%" height="15" fill="rgb(243,71,8)" fg:x="656" fg:w="1"/><text x="52.7720%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6021%" y="469" width="0.0801%" height="15" fill="rgb(250,36,12)" fg:x="657" fg:w="1"/><text x="52.8521%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6021%" y="453" width="0.0801%" height="15" fill="rgb(207,168,14)" fg:x="657" fg:w="1"/><text x="52.8521%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.6021%" y="437" width="0.0801%" height="15" fill="rgb(254,210,51)" fg:x="657" fg:w="1"/><text x="52.8521%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.6021%" y="421" width="0.0801%" height="15" fill="rgb(236,152,38)" fg:x="657" fg:w="1"/><text x="52.8521%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.6021%" y="405" width="0.0801%" height="15" fill="rgb(240,164,36)" fg:x="657" fg:w="1"/><text x="52.8521%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6021%" y="389" width="0.0801%" height="15" fill="rgb(210,171,36)" fg:x="657" fg:w="1"/><text x="52.8521%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6021%" y="373" width="0.0801%" height="15" fill="rgb(254,156,34)" fg:x="657" fg:w="1"/><text x="52.8521%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.6021%" y="357" width="0.0801%" height="15" fill="rgb(216,204,23)" fg:x="657" fg:w="1"/><text x="52.8521%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.6021%" y="341" width="0.0801%" height="15" fill="rgb(230,75,38)" fg:x="657" fg:w="1"/><text x="52.8521%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.6021%" y="325" width="0.0801%" height="15" fill="rgb(248,197,25)" fg:x="657" fg:w="1"/><text x="52.8521%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.6021%" y="309" width="0.0801%" height="15" fill="rgb(234,121,26)" fg:x="657" fg:w="1"/><text x="52.8521%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.6021%" y="293" width="0.0801%" height="15" fill="rgb(220,41,36)" fg:x="657" fg:w="1"/><text x="52.8521%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="52.5220%" y="533" width="0.2402%" height="15" fill="rgb(227,33,32)" fg:x="656" fg:w="3"/><text x="52.7720%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="52.5220%" y="517" width="0.2402%" height="15" fill="rgb(208,214,54)" fg:x="656" fg:w="3"/><text x="52.7720%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="52.5220%" y="501" width="0.2402%" height="15" fill="rgb(205,37,38)" fg:x="656" fg:w="3"/><text x="52.7720%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="52.5220%" y="485" width="0.2402%" height="15" fill="rgb(252,2,0)" fg:x="656" fg:w="3"/><text x="52.7720%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.6821%" y="469" width="0.0801%" height="15" fill="rgb(212,171,10)" fg:x="658" fg:w="1"/><text x="52.9321%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="52.1217%" y="613" width="0.7206%" height="15" fill="rgb(239,35,46)" fg:x="651" fg:w="9"/><text x="52.3717%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="52.1217%" y="597" width="0.7206%" height="15" fill="rgb(209,34,42)" fg:x="651" fg:w="9"/><text x="52.3717%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="52.4420%" y="581" width="0.4003%" height="15" fill="rgb(237,9,4)" fg:x="655" fg:w="5"/><text x="52.6920%" y="591.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="52.4420%" y="565" width="0.4003%" height="15" fill="rgb(254,55,38)" fg:x="655" fg:w="5"/><text x="52.6920%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="52.4420%" y="549" width="0.4003%" height="15" fill="rgb(222,95,29)" fg:x="655" fg:w="5"/><text x="52.6920%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.7622%" y="533" width="0.0801%" height="15" fill="rgb(241,218,37)" fg:x="659" fg:w="1"/><text x="53.0122%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.7622%" y="517" width="0.0801%" height="15" fill="rgb(225,89,28)" fg:x="659" fg:w="1"/><text x="53.0122%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.7622%" y="501" width="0.0801%" height="15" fill="rgb(231,17,25)" fg:x="659" fg:w="1"/><text x="53.0122%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.7622%" y="485" width="0.0801%" height="15" fill="rgb(206,216,48)" fg:x="659" fg:w="1"/><text x="53.0122%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="52.7622%" y="469" width="0.0801%" height="15" fill="rgb(247,190,28)" fg:x="659" fg:w="1"/><text x="53.0122%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.7622%" y="453" width="0.0801%" height="15" fill="rgb(216,196,12)" fg:x="659" fg:w="1"/><text x="53.0122%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.7622%" y="437" width="0.0801%" height="15" fill="rgb(232,114,19)" fg:x="659" fg:w="1"/><text x="53.0122%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.7622%" y="421" width="0.0801%" height="15" fill="rgb(240,60,14)" fg:x="659" fg:w="1"/><text x="53.0122%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (13 samples, 1.04%)</title><rect x="51.8815%" y="629" width="1.0408%" height="15" fill="rgb(250,108,9)" fg:x="648" fg:w="13"/><text x="52.1315%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="52.8423%" y="613" width="0.0801%" height="15" fill="rgb(227,228,21)" fg:x="660" fg:w="1"/><text x="53.0923%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="52.8423%" y="597" width="0.0801%" height="15" fill="rgb(254,16,52)" fg:x="660" fg:w="1"/><text x="53.0923%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="52.9223%" y="629" width="0.0801%" height="15" fill="rgb(222,58,2)" fg:x="661" fg:w="1"/><text x="53.1723%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="52.9223%" y="613" width="0.0801%" height="15" fill="rgb(253,68,14)" fg:x="661" fg:w="1"/><text x="53.1723%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="52.9223%" y="597" width="0.0801%" height="15" fill="rgb(226,96,17)" fg:x="661" fg:w="1"/><text x="53.1723%" y="607.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="52.9223%" y="581" width="0.0801%" height="15" fill="rgb(227,199,2)" fg:x="661" fg:w="1"/><text x="53.1723%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="53.0024%" y="613" width="0.0801%" height="15" fill="rgb(228,227,48)" fg:x="662" fg:w="1"/><text x="53.2524%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.0024%" y="597" width="0.0801%" height="15" fill="rgb(249,183,0)" fg:x="662" fg:w="1"/><text x="53.2524%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.0825%" y="597" width="0.0801%" height="15" fill="rgb(250,89,38)" fg:x="663" fg:w="1"/><text x="53.3325%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.0825%" y="581" width="0.0801%" height="15" fill="rgb(240,227,8)" fg:x="663" fg:w="1"/><text x="53.3325%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.0825%" y="565" width="0.0801%" height="15" fill="rgb(242,197,35)" fg:x="663" fg:w="1"/><text x="53.3325%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.0825%" y="549" width="0.0801%" height="15" fill="rgb(224,37,41)" fg:x="663" fg:w="1"/><text x="53.3325%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.0825%" y="533" width="0.0801%" height="15" fill="rgb(236,127,7)" fg:x="663" fg:w="1"/><text x="53.3325%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.0825%" y="517" width="0.0801%" height="15" fill="rgb(230,62,52)" fg:x="663" fg:w="1"/><text x="53.3325%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.0825%" y="501" width="0.0801%" height="15" fill="rgb(235,114,23)" fg:x="663" fg:w="1"/><text x="53.3325%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="53.0825%" y="485" width="0.0801%" height="15" fill="rgb(211,55,40)" fg:x="663" fg:w="1"/><text x="53.3325%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="53.0825%" y="469" width="0.0801%" height="15" fill="rgb(228,123,1)" fg:x="663" fg:w="1"/><text x="53.3325%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (151 samples, 12.09%)</title><rect x="41.3131%" y="661" width="12.0897%" height="15" fill="rgb(244,208,8)" fg:x="516" fg:w="151"/><text x="41.5631%" y="671.50">&lt;plugins_core::car..</text></g><g><title>plugins_core::location::change_location (51 samples, 4.08%)</title><rect x="49.3195%" y="645" width="4.0833%" height="15" fill="rgb(237,118,14)" fg:x="616" fg:w="51"/><text x="49.5695%" y="655.50">plug..</text></g><g><title>plugins_core::location::Location::set (5 samples, 0.40%)</title><rect x="53.0024%" y="629" width="0.4003%" height="15" fill="rgb(219,170,13)" fg:x="662" fg:w="5"/><text x="53.2524%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="53.0825%" y="613" width="0.3203%" height="15" fill="rgb(212,39,43)" fg:x="663" fg:w="4"/><text x="53.3325%" y="623.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (3 samples, 0.24%)</title><rect x="53.1625%" y="597" width="0.2402%" height="15" fill="rgb(244,191,2)" fg:x="664" fg:w="3"/><text x="53.4125%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="53.1625%" y="581" width="0.2402%" height="15" fill="rgb(219,201,46)" fg:x="664" fg:w="3"/><text x="53.4125%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="53.1625%" y="565" width="0.2402%" height="15" fill="rgb(218,82,7)" fg:x="664" fg:w="3"/><text x="53.4125%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="53.1625%" y="549" width="0.2402%" height="15" fill="rgb(208,192,8)" fg:x="664" fg:w="3"/><text x="53.4125%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.3227%" y="533" width="0.0801%" height="15" fill="rgb(244,54,32)" fg:x="666" fg:w="1"/><text x="53.5727%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="53.4027%" y="629" width="0.0801%" height="15" fill="rgb(240,43,52)" fg:x="667" fg:w="1"/><text x="53.6527%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="53.4027%" y="613" width="0.0801%" height="15" fill="rgb(233,134,29)" fg:x="667" fg:w="1"/><text x="53.6527%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="53.4027%" y="597" width="0.0801%" height="15" fill="rgb(236,128,10)" fg:x="667" fg:w="1"/><text x="53.6527%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="53.4027%" y="581" width="0.0801%" height="15" fill="rgb(207,46,54)" fg:x="667" fg:w="1"/><text x="53.6527%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.4027%" y="565" width="0.0801%" height="15" fill="rgb(248,140,35)" fg:x="667" fg:w="1"/><text x="53.6527%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.5629%" y="517" width="0.0801%" height="15" fill="rgb(241,103,35)" fg:x="669" fg:w="1"/><text x="53.8129%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.5629%" y="565" width="0.1601%" height="15" fill="rgb(223,19,48)" fg:x="669" fg:w="2"/><text x="53.8129%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.5629%" y="549" width="0.1601%" height="15" fill="rgb(238,177,46)" fg:x="669" fg:w="2"/><text x="53.8129%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.5629%" y="533" width="0.1601%" height="15" fill="rgb(213,102,15)" fg:x="669" fg:w="2"/><text x="53.8129%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.6429%" y="517" width="0.0801%" height="15" fill="rgb(254,135,52)" fg:x="670" fg:w="1"/><text x="53.8929%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.6429%" y="501" width="0.0801%" height="15" fill="rgb(240,59,6)" fg:x="670" fg:w="1"/><text x="53.8929%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.6429%" y="485" width="0.0801%" height="15" fill="rgb(207,226,5)" fg:x="670" fg:w="1"/><text x="53.8929%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.6429%" y="469" width="0.0801%" height="15" fill="rgb(208,167,17)" fg:x="670" fg:w="1"/><text x="53.8929%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.6429%" y="453" width="0.0801%" height="15" fill="rgb(254,94,10)" fg:x="670" fg:w="1"/><text x="53.8929%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.6429%" y="437" width="0.0801%" height="15" fill="rgb(229,33,11)" fg:x="670" fg:w="1"/><text x="53.8929%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.6429%" y="421" width="0.0801%" height="15" fill="rgb(249,145,48)" fg:x="670" fg:w="1"/><text x="53.8929%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.6429%" y="405" width="0.0801%" height="15" fill="rgb(253,68,54)" fg:x="670" fg:w="1"/><text x="53.8929%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.6429%" y="389" width="0.0801%" height="15" fill="rgb(223,27,42)" fg:x="670" fg:w="1"/><text x="53.8929%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.6429%" y="373" width="0.0801%" height="15" fill="rgb(235,123,13)" fg:x="670" fg:w="1"/><text x="53.8929%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.6429%" y="357" width="0.0801%" height="15" fill="rgb(244,154,7)" fg:x="670" fg:w="1"/><text x="53.8929%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.6429%" y="341" width="0.0801%" height="15" fill="rgb(214,30,25)" fg:x="670" fg:w="1"/><text x="53.8929%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="53.5629%" y="581" width="0.2402%" height="15" fill="rgb(252,189,13)" fg:x="669" fg:w="3"/><text x="53.8129%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7230%" y="565" width="0.0801%" height="15" fill="rgb(234,27,40)" fg:x="671" fg:w="1"/><text x="53.9730%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.8030%" y="581" width="0.0801%" height="15" fill="rgb(252,199,25)" fg:x="672" fg:w="1"/><text x="54.0530%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.8831%" y="581" width="0.0801%" height="15" fill="rgb(234,207,20)" fg:x="673" fg:w="1"/><text x="54.1331%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.9632%" y="581" width="0.0801%" height="15" fill="rgb(244,220,10)" fg:x="674" fg:w="1"/><text x="54.2132%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="53.9632%" y="565" width="0.0801%" height="15" fill="rgb(247,68,23)" fg:x="674" fg:w="1"/><text x="54.2132%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.9632%" y="549" width="0.0801%" height="15" fill="rgb(254,61,4)" fg:x="674" fg:w="1"/><text x="54.2132%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.9632%" y="533" width="0.0801%" height="15" fill="rgb(245,208,35)" fg:x="674" fg:w="1"/><text x="54.2132%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.9632%" y="517" width="0.0801%" height="15" fill="rgb(235,90,11)" fg:x="674" fg:w="1"/><text x="54.2132%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.9632%" y="501" width="0.0801%" height="15" fill="rgb(239,139,43)" fg:x="674" fg:w="1"/><text x="54.2132%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.9632%" y="485" width="0.0801%" height="15" fill="rgb(209,187,9)" fg:x="674" fg:w="1"/><text x="54.2132%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.9632%" y="469" width="0.0801%" height="15" fill="rgb(241,30,6)" fg:x="674" fg:w="1"/><text x="54.2132%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.0432%" y="549" width="0.0801%" height="15" fill="rgb(216,104,1)" fg:x="675" fg:w="1"/><text x="54.2932%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.0432%" y="533" width="0.0801%" height="15" fill="rgb(238,55,39)" fg:x="675" fg:w="1"/><text x="54.2932%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.1233%" y="453" width="0.0801%" height="15" fill="rgb(226,151,41)" fg:x="676" fg:w="1"/><text x="54.3733%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.2034%" y="453" width="0.0801%" height="15" fill="rgb(228,73,40)" fg:x="677" fg:w="1"/><text x="54.4534%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.2034%" y="437" width="0.0801%" height="15" fill="rgb(215,81,0)" fg:x="677" fg:w="1"/><text x="54.4534%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (13 samples, 1.04%)</title><rect x="53.4828%" y="629" width="1.0408%" height="15" fill="rgb(209,52,39)" fg:x="668" fg:w="13"/><text x="53.7328%" y="639.50"></text></g><g><title>kernel::model::props::load_props (13 samples, 1.04%)</title><rect x="53.4828%" y="613" width="1.0408%" height="15" fill="rgb(221,127,5)" fg:x="668" fg:w="13"/><text x="53.7328%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.04%)</title><rect x="53.4828%" y="597" width="1.0408%" height="15" fill="rgb(213,215,6)" fg:x="668" fg:w="13"/><text x="53.7328%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="54.0432%" y="581" width="0.4804%" height="15" fill="rgb(214,118,13)" fg:x="675" fg:w="6"/><text x="54.2932%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="54.0432%" y="565" width="0.4804%" height="15" fill="rgb(207,205,41)" fg:x="675" fg:w="6"/><text x="54.2932%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="54.1233%" y="549" width="0.4003%" height="15" fill="rgb(218,208,45)" fg:x="676" fg:w="5"/><text x="54.3733%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="54.1233%" y="533" width="0.4003%" height="15" fill="rgb(244,81,54)" fg:x="676" fg:w="5"/><text x="54.3733%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="54.1233%" y="517" width="0.4003%" height="15" fill="rgb(244,175,1)" fg:x="676" fg:w="5"/><text x="54.3733%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="54.1233%" y="501" width="0.4003%" height="15" fill="rgb(232,128,28)" fg:x="676" fg:w="5"/><text x="54.3733%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="54.1233%" y="485" width="0.4003%" height="15" fill="rgb(234,83,13)" fg:x="676" fg:w="5"/><text x="54.3733%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="54.1233%" y="469" width="0.4003%" height="15" fill="rgb(233,222,35)" fg:x="676" fg:w="5"/><text x="54.3733%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="54.2834%" y="453" width="0.2402%" height="15" fill="rgb(244,204,21)" fg:x="678" fg:w="3"/><text x="54.5334%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.2834%" y="437" width="0.2402%" height="15" fill="rgb(225,121,40)" fg:x="678" fg:w="3"/><text x="54.5334%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.4436%" y="421" width="0.0801%" height="15" fill="rgb(231,89,18)" fg:x="680" fg:w="1"/><text x="54.6936%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.4436%" y="405" width="0.0801%" height="15" fill="rgb(205,41,50)" fg:x="680" fg:w="1"/><text x="54.6936%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.5236%" y="613" width="0.0801%" height="15" fill="rgb(254,25,22)" fg:x="681" fg:w="1"/><text x="54.7736%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="54.6037%" y="613" width="0.0801%" height="15" fill="rgb(208,44,21)" fg:x="682" fg:w="1"/><text x="54.8537%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.7638%" y="517" width="0.0801%" height="15" fill="rgb(237,59,53)" fg:x="684" fg:w="1"/><text x="55.0138%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.7638%" y="501" width="0.0801%" height="15" fill="rgb(233,24,36)" fg:x="684" fg:w="1"/><text x="55.0138%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.6837%" y="581" width="0.2402%" height="15" fill="rgb(216,92,41)" fg:x="683" fg:w="3"/><text x="54.9337%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.6837%" y="565" width="0.2402%" height="15" fill="rgb(225,158,49)" fg:x="683" fg:w="3"/><text x="54.9337%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.6837%" y="549" width="0.2402%" height="15" fill="rgb(244,11,16)" fg:x="683" fg:w="3"/><text x="54.9337%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.6837%" y="533" width="0.2402%" height="15" fill="rgb(208,215,38)" fg:x="683" fg:w="3"/><text x="54.9337%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.8439%" y="517" width="0.0801%" height="15" fill="rgb(250,69,53)" fg:x="685" fg:w="1"/><text x="55.0939%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="54.9239%" y="581" width="0.1601%" height="15" fill="rgb(240,187,52)" fg:x="686" fg:w="2"/><text x="55.1739%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="54.9239%" y="565" width="0.1601%" height="15" fill="rgb(235,22,25)" fg:x="686" fg:w="2"/><text x="55.1739%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="54.9239%" y="549" width="0.1601%" height="15" fill="rgb(213,173,22)" fg:x="686" fg:w="2"/><text x="55.1739%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="54.9239%" y="533" width="0.1601%" height="15" fill="rgb(218,47,0)" fg:x="686" fg:w="2"/><text x="55.1739%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="54.9239%" y="517" width="0.1601%" height="15" fill="rgb(254,157,11)" fg:x="686" fg:w="2"/><text x="55.1739%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.9239%" y="501" width="0.1601%" height="15" fill="rgb(233,154,6)" fg:x="686" fg:w="2"/><text x="55.1739%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.0841%" y="485" width="0.0801%" height="15" fill="rgb(233,207,47)" fg:x="688" fg:w="1"/><text x="55.3341%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.0841%" y="469" width="0.0801%" height="15" fill="rgb(249,128,18)" fg:x="688" fg:w="1"/><text x="55.3341%" y="479.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (26 samples, 2.08%)</title><rect x="53.4027%" y="645" width="2.0817%" height="15" fill="rgb(211,27,42)" fg:x="667" fg:w="26"/><text x="53.6527%" y="655.50">&lt;..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (12 samples, 0.96%)</title><rect x="54.5236%" y="629" width="0.9608%" height="15" fill="rgb(240,163,26)" fg:x="681" fg:w="12"/><text x="54.7736%" y="639.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.80%)</title><rect x="54.6837%" y="613" width="0.8006%" height="15" fill="rgb(232,118,46)" fg:x="683" fg:w="10"/><text x="54.9337%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="54.6837%" y="597" width="0.8006%" height="15" fill="rgb(238,158,34)" fg:x="683" fg:w="10"/><text x="54.9337%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="55.0841%" y="581" width="0.4003%" height="15" fill="rgb(254,99,45)" fg:x="688" fg:w="5"/><text x="55.3341%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="55.0841%" y="565" width="0.4003%" height="15" fill="rgb(247,205,20)" fg:x="688" fg:w="5"/><text x="55.3341%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="55.0841%" y="549" width="0.4003%" height="15" fill="rgb(240,20,41)" fg:x="688" fg:w="5"/><text x="55.3341%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="55.0841%" y="533" width="0.4003%" height="15" fill="rgb(231,22,43)" fg:x="688" fg:w="5"/><text x="55.3341%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="55.0841%" y="517" width="0.4003%" height="15" fill="rgb(207,86,33)" fg:x="688" fg:w="5"/><text x="55.3341%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="55.0841%" y="501" width="0.4003%" height="15" fill="rgb(231,148,5)" fg:x="688" fg:w="5"/><text x="55.3341%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="55.1641%" y="485" width="0.3203%" height="15" fill="rgb(253,77,28)" fg:x="689" fg:w="4"/><text x="55.4141%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="55.1641%" y="469" width="0.3203%" height="15" fill="rgb(253,227,9)" fg:x="689" fg:w="4"/><text x="55.4141%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.4043%" y="453" width="0.0801%" height="15" fill="rgb(235,4,18)" fg:x="692" fg:w="1"/><text x="55.6543%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.4043%" y="437" width="0.0801%" height="15" fill="rgb(205,206,45)" fg:x="692" fg:w="1"/><text x="55.6543%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.5645%" y="613" width="0.0801%" height="15" fill="rgb(252,34,0)" fg:x="694" fg:w="1"/><text x="55.8145%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="55.6445%" y="597" width="0.2402%" height="15" fill="rgb(213,56,7)" fg:x="695" fg:w="3"/><text x="55.8945%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="55.6445%" y="581" width="0.2402%" height="15" fill="rgb(227,74,29)" fg:x="695" fg:w="3"/><text x="55.8945%" y="591.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="55.6445%" y="565" width="0.2402%" height="15" fill="rgb(221,32,48)" fg:x="695" fg:w="3"/><text x="55.8945%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="55.8847%" y="549" width="0.0801%" height="15" fill="rgb(230,205,25)" fg:x="698" fg:w="1"/><text x="56.1347%" y="559.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="55.8847%" y="533" width="0.0801%" height="15" fill="rgb(215,110,9)" fg:x="698" fg:w="1"/><text x="56.1347%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="55.8847%" y="581" width="0.2402%" height="15" fill="rgb(245,220,47)" fg:x="698" fg:w="3"/><text x="56.1347%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="55.8847%" y="565" width="0.2402%" height="15" fill="rgb(224,117,5)" fg:x="698" fg:w="3"/><text x="56.1347%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="55.9648%" y="549" width="0.1601%" height="15" fill="rgb(242,208,25)" fg:x="699" fg:w="2"/><text x="56.2148%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="55.9648%" y="533" width="0.1601%" height="15" fill="rgb(226,12,37)" fg:x="699" fg:w="2"/><text x="56.2148%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="55.9648%" y="517" width="0.1601%" height="15" fill="rgb(224,221,22)" fg:x="699" fg:w="2"/><text x="56.2148%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="55.9648%" y="501" width="0.1601%" height="15" fill="rgb(239,38,44)" fg:x="699" fg:w="2"/><text x="56.2148%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="55.9648%" y="485" width="0.1601%" height="15" fill="rgb(218,25,46)" fg:x="699" fg:w="2"/><text x="56.2148%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="55.9648%" y="469" width="0.1601%" height="15" fill="rgb(206,137,51)" fg:x="699" fg:w="2"/><text x="56.2148%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="56.0448%" y="453" width="0.0801%" height="15" fill="rgb(233,174,3)" fg:x="700" fg:w="1"/><text x="56.2948%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="56.0448%" y="437" width="0.0801%" height="15" fill="rgb(207,224,43)" fg:x="700" fg:w="1"/><text x="56.2948%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="56.0448%" y="421" width="0.0801%" height="15" fill="rgb(230,46,27)" fg:x="700" fg:w="1"/><text x="56.2948%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="56.0448%" y="405" width="0.0801%" height="15" fill="rgb(251,215,32)" fg:x="700" fg:w="1"/><text x="56.2948%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.0448%" y="389" width="0.0801%" height="15" fill="rgb(244,219,19)" fg:x="700" fg:w="1"/><text x="56.2948%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="56.1249%" y="581" width="0.0801%" height="15" fill="rgb(242,125,36)" fg:x="701" fg:w="1"/><text x="56.3749%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="56.1249%" y="565" width="0.0801%" height="15" fill="rgb(251,211,12)" fg:x="701" fg:w="1"/><text x="56.3749%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.1249%" y="549" width="0.0801%" height="15" fill="rgb(209,179,33)" fg:x="701" fg:w="1"/><text x="56.3749%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.3651%" y="517" width="0.0801%" height="15" fill="rgb(205,161,48)" fg:x="704" fg:w="1"/><text x="56.6151%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.3651%" y="501" width="0.0801%" height="15" fill="rgb(241,139,8)" fg:x="704" fg:w="1"/><text x="56.6151%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.3651%" y="485" width="0.0801%" height="15" fill="rgb(246,159,53)" fg:x="704" fg:w="1"/><text x="56.6151%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.3651%" y="469" width="0.0801%" height="15" fill="rgb(212,62,27)" fg:x="704" fg:w="1"/><text x="56.6151%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.3651%" y="453" width="0.0801%" height="15" fill="rgb(216,168,18)" fg:x="704" fg:w="1"/><text x="56.6151%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.3651%" y="437" width="0.0801%" height="15" fill="rgb(228,136,50)" fg:x="704" fg:w="1"/><text x="56.6151%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.3651%" y="421" width="0.0801%" height="15" fill="rgb(237,19,45)" fg:x="704" fg:w="1"/><text x="56.6151%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.3651%" y="405" width="0.0801%" height="15" fill="rgb(249,150,28)" fg:x="704" fg:w="1"/><text x="56.6151%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.3651%" y="389" width="0.0801%" height="15" fill="rgb(236,179,39)" fg:x="704" fg:w="1"/><text x="56.6151%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.3651%" y="373" width="0.0801%" height="15" fill="rgb(250,113,27)" fg:x="704" fg:w="1"/><text x="56.6151%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.3651%" y="357" width="0.0801%" height="15" fill="rgb(223,13,14)" fg:x="704" fg:w="1"/><text x="56.6151%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.3651%" y="341" width="0.0801%" height="15" fill="rgb(226,68,24)" fg:x="704" fg:w="1"/><text x="56.6151%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="56.5252%" y="405" width="0.1601%" height="15" fill="rgb(239,40,50)" fg:x="706" fg:w="2"/><text x="56.7752%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="56.5252%" y="389" width="0.1601%" height="15" fill="rgb(209,187,0)" fg:x="706" fg:w="2"/><text x="56.7752%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="56.5252%" y="373" width="0.1601%" height="15" fill="rgb(240,61,8)" fg:x="706" fg:w="2"/><text x="56.7752%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="56.5252%" y="357" width="0.1601%" height="15" fill="rgb(236,137,5)" fg:x="706" fg:w="2"/><text x="56.7752%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="56.5252%" y="341" width="0.1601%" height="15" fill="rgb(247,214,21)" fg:x="706" fg:w="2"/><text x="56.7752%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="56.5252%" y="325" width="0.1601%" height="15" fill="rgb(244,115,25)" fg:x="706" fg:w="2"/><text x="56.7752%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.6053%" y="309" width="0.0801%" height="15" fill="rgb(230,58,38)" fg:x="707" fg:w="1"/><text x="56.8553%" y="319.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (7 samples, 0.56%)</title><rect x="56.2050%" y="549" width="0.5604%" height="15" fill="rgb(206,122,6)" fg:x="702" fg:w="7"/><text x="56.4550%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="56.2050%" y="533" width="0.5604%" height="15" fill="rgb(217,135,53)" fg:x="702" fg:w="7"/><text x="56.4550%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="56.4452%" y="517" width="0.3203%" height="15" fill="rgb(225,120,8)" fg:x="705" fg:w="4"/><text x="56.6952%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="56.4452%" y="501" width="0.3203%" height="15" fill="rgb(226,3,30)" fg:x="705" fg:w="4"/><text x="56.6952%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.5252%" y="485" width="0.2402%" height="15" fill="rgb(214,159,38)" fg:x="706" fg:w="3"/><text x="56.7752%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.5252%" y="469" width="0.2402%" height="15" fill="rgb(242,182,47)" fg:x="706" fg:w="3"/><text x="56.7752%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="56.5252%" y="453" width="0.2402%" height="15" fill="rgb(245,202,26)" fg:x="706" fg:w="3"/><text x="56.7752%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="56.5252%" y="437" width="0.2402%" height="15" fill="rgb(226,163,3)" fg:x="706" fg:w="3"/><text x="56.7752%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="56.5252%" y="421" width="0.2402%" height="15" fill="rgb(219,4,4)" fg:x="706" fg:w="3"/><text x="56.7752%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="56.6853%" y="405" width="0.0801%" height="15" fill="rgb(223,85,4)" fg:x="708" fg:w="1"/><text x="56.9353%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="56.6853%" y="389" width="0.0801%" height="15" fill="rgb(242,170,11)" fg:x="708" fg:w="1"/><text x="56.9353%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="56.7654%" y="469" width="0.0801%" height="15" fill="rgb(221,97,42)" fg:x="709" fg:w="1"/><text x="57.0154%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="56.7654%" y="453" width="0.0801%" height="15" fill="rgb(231,206,45)" fg:x="709" fg:w="1"/><text x="57.0154%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7654%" y="437" width="0.0801%" height="15" fill="rgb(216,23,48)" fg:x="709" fg:w="1"/><text x="57.0154%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7654%" y="421" width="0.0801%" height="15" fill="rgb(225,49,9)" fg:x="709" fg:w="1"/><text x="57.0154%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.7654%" y="405" width="0.0801%" height="15" fill="rgb(247,24,47)" fg:x="709" fg:w="1"/><text x="57.0154%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.7654%" y="389" width="0.0801%" height="15" fill="rgb(253,145,10)" fg:x="709" fg:w="1"/><text x="57.0154%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.7654%" y="373" width="0.0801%" height="15" fill="rgb(206,62,10)" fg:x="709" fg:w="1"/><text x="57.0154%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.7654%" y="357" width="0.0801%" height="15" fill="rgb(224,159,31)" fg:x="709" fg:w="1"/><text x="57.0154%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.7654%" y="341" width="0.0801%" height="15" fill="rgb(234,184,15)" fg:x="709" fg:w="1"/><text x="57.0154%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.7654%" y="325" width="0.0801%" height="15" fill="rgb(237,101,1)" fg:x="709" fg:w="1"/><text x="57.0154%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.7654%" y="309" width="0.0801%" height="15" fill="rgb(211,99,29)" fg:x="709" fg:w="1"/><text x="57.0154%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.7654%" y="293" width="0.0801%" height="15" fill="rgb(250,167,3)" fg:x="709" fg:w="1"/><text x="57.0154%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.7654%" y="277" width="0.0801%" height="15" fill="rgb(225,58,6)" fg:x="709" fg:w="1"/><text x="57.0154%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.7654%" y="261" width="0.0801%" height="15" fill="rgb(251,161,21)" fg:x="709" fg:w="1"/><text x="57.0154%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.7654%" y="245" width="0.0801%" height="15" fill="rgb(253,203,35)" fg:x="709" fg:w="1"/><text x="57.0154%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="56.7654%" y="549" width="0.1601%" height="15" fill="rgb(214,220,52)" fg:x="709" fg:w="2"/><text x="57.0154%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="56.7654%" y="533" width="0.1601%" height="15" fill="rgb(235,216,33)" fg:x="709" fg:w="2"/><text x="57.0154%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="56.7654%" y="517" width="0.1601%" height="15" fill="rgb(231,79,26)" fg:x="709" fg:w="2"/><text x="57.0154%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="56.7654%" y="501" width="0.1601%" height="15" fill="rgb(244,218,10)" fg:x="709" fg:w="2"/><text x="57.0154%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="56.7654%" y="485" width="0.1601%" height="15" fill="rgb(238,15,9)" fg:x="709" fg:w="2"/><text x="57.0154%" y="495.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="56.8455%" y="469" width="0.0801%" height="15" fill="rgb(235,112,15)" fg:x="710" fg:w="1"/><text x="57.0955%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.8455%" y="453" width="0.0801%" height="15" fill="rgb(239,126,18)" fg:x="710" fg:w="1"/><text x="57.0955%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.8455%" y="437" width="0.0801%" height="15" fill="rgb(253,171,19)" fg:x="710" fg:w="1"/><text x="57.0955%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.8455%" y="421" width="0.0801%" height="15" fill="rgb(237,218,25)" fg:x="710" fg:w="1"/><text x="57.0955%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.8455%" y="405" width="0.0801%" height="15" fill="rgb(213,88,46)" fg:x="710" fg:w="1"/><text x="57.0955%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.8455%" y="389" width="0.0801%" height="15" fill="rgb(222,124,54)" fg:x="710" fg:w="1"/><text x="57.0955%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.8455%" y="373" width="0.0801%" height="15" fill="rgb(209,206,42)" fg:x="710" fg:w="1"/><text x="57.0955%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.8455%" y="357" width="0.0801%" height="15" fill="rgb(219,25,49)" fg:x="710" fg:w="1"/><text x="57.0955%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.8455%" y="341" width="0.0801%" height="15" fill="rgb(228,207,53)" fg:x="710" fg:w="1"/><text x="57.0955%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.8455%" y="325" width="0.0801%" height="15" fill="rgb(224,3,4)" fg:x="710" fg:w="1"/><text x="57.0955%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.8455%" y="309" width="0.0801%" height="15" fill="rgb(254,206,26)" fg:x="710" fg:w="1"/><text x="57.0955%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.8455%" y="293" width="0.0801%" height="15" fill="rgb(209,4,26)" fg:x="710" fg:w="1"/><text x="57.0955%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.8455%" y="277" width="0.0801%" height="15" fill="rgb(243,193,32)" fg:x="710" fg:w="1"/><text x="57.0955%" y="287.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (17 samples, 1.36%)</title><rect x="55.6445%" y="613" width="1.3611%" height="15" fill="rgb(225,150,36)" fg:x="695" fg:w="17"/><text x="55.8945%" y="623.50"></text></g><g><title>plugins_core::tools::contained_by (14 samples, 1.12%)</title><rect x="55.8847%" y="597" width="1.1209%" height="15" fill="rgb(225,131,26)" fg:x="698" fg:w="14"/><text x="56.1347%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.80%)</title><rect x="56.2050%" y="581" width="0.8006%" height="15" fill="rgb(236,126,12)" fg:x="702" fg:w="10"/><text x="56.4550%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="56.2050%" y="565" width="0.8006%" height="15" fill="rgb(238,167,44)" fg:x="702" fg:w="10"/><text x="56.4550%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.9255%" y="549" width="0.0801%" height="15" fill="rgb(238,153,31)" fg:x="711" fg:w="1"/><text x="57.1755%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.1657%" y="517" width="0.0801%" height="15" fill="rgb(254,41,51)" fg:x="714" fg:w="1"/><text x="57.4157%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.1657%" y="501" width="0.0801%" height="15" fill="rgb(224,100,52)" fg:x="714" fg:w="1"/><text x="57.4157%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.1657%" y="485" width="0.0801%" height="15" fill="rgb(246,226,38)" fg:x="714" fg:w="1"/><text x="57.4157%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.1657%" y="469" width="0.0801%" height="15" fill="rgb(252,21,43)" fg:x="714" fg:w="1"/><text x="57.4157%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.1657%" y="453" width="0.0801%" height="15" fill="rgb(250,44,8)" fg:x="714" fg:w="1"/><text x="57.4157%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.1657%" y="437" width="0.0801%" height="15" fill="rgb(224,200,45)" fg:x="714" fg:w="1"/><text x="57.4157%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.1657%" y="421" width="0.0801%" height="15" fill="rgb(208,75,52)" fg:x="714" fg:w="1"/><text x="57.4157%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.1657%" y="405" width="0.0801%" height="15" fill="rgb(213,167,20)" fg:x="714" fg:w="1"/><text x="57.4157%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.1657%" y="389" width="0.0801%" height="15" fill="rgb(236,163,42)" fg:x="714" fg:w="1"/><text x="57.4157%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.1657%" y="373" width="0.0801%" height="15" fill="rgb(210,98,31)" fg:x="714" fg:w="1"/><text x="57.4157%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.1657%" y="357" width="0.0801%" height="15" fill="rgb(246,166,15)" fg:x="714" fg:w="1"/><text x="57.4157%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.1657%" y="341" width="0.0801%" height="15" fill="rgb(214,114,7)" fg:x="714" fg:w="1"/><text x="57.4157%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.1657%" y="325" width="0.0801%" height="15" fill="rgb(217,202,34)" fg:x="714" fg:w="1"/><text x="57.4157%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.1657%" y="309" width="0.0801%" height="15" fill="rgb(227,226,29)" fg:x="714" fg:w="1"/><text x="57.4157%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.1657%" y="293" width="0.0801%" height="15" fill="rgb(254,65,44)" fg:x="714" fg:w="1"/><text x="57.4157%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.1657%" y="277" width="0.0801%" height="15" fill="rgb(213,150,32)" fg:x="714" fg:w="1"/><text x="57.4157%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (23 samples, 1.84%)</title><rect x="55.4844%" y="645" width="1.8415%" height="15" fill="rgb(208,86,46)" fg:x="693" fg:w="23"/><text x="55.7344%" y="655.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (23 samples, 1.84%)</title><rect x="55.4844%" y="629" width="1.8415%" height="15" fill="rgb(222,75,3)" fg:x="693" fg:w="23"/><text x="55.7344%" y="639.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="57.0056%" y="613" width="0.3203%" height="15" fill="rgb(225,213,9)" fg:x="712" fg:w="4"/><text x="57.2556%" y="623.50"></text></g><g><title>plugins_core::finding::matches_description (4 samples, 0.32%)</title><rect x="57.0056%" y="597" width="0.3203%" height="15" fill="rgb(209,199,10)" fg:x="712" fg:w="4"/><text x="57.2556%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::name (4 samples, 0.32%)</title><rect x="57.0056%" y="581" width="0.3203%" height="15" fill="rgb(213,18,17)" fg:x="712" fg:w="4"/><text x="57.2556%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="57.0056%" y="565" width="0.3203%" height="15" fill="rgb(243,79,44)" fg:x="712" fg:w="4"/><text x="57.2556%" y="575.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="57.0056%" y="549" width="0.3203%" height="15" fill="rgb(226,20,5)" fg:x="712" fg:w="4"/><text x="57.2556%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="57.0056%" y="533" width="0.3203%" height="15" fill="rgb(217,52,31)" fg:x="712" fg:w="4"/><text x="57.2556%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="57.2458%" y="517" width="0.0801%" height="15" fill="rgb(229,42,7)" fg:x="715" fg:w="1"/><text x="57.4958%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="57.3259%" y="645" width="0.0801%" height="15" fill="rgb(206,118,29)" fg:x="716" fg:w="1"/><text x="57.5759%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="57.3259%" y="629" width="0.0801%" height="15" fill="rgb(248,132,44)" fg:x="716" fg:w="1"/><text x="57.5759%" y="639.50"></text></g><g><title>kernel::surround::Surroundings::unpack (3 samples, 0.24%)</title><rect x="57.4059%" y="645" width="0.2402%" height="15" fill="rgb(231,56,33)" fg:x="717" fg:w="3"/><text x="57.6559%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="57.4059%" y="629" width="0.2402%" height="15" fill="rgb(208,31,11)" fg:x="717" fg:w="3"/><text x="57.6559%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="57.4059%" y="613" width="0.2402%" height="15" fill="rgb(216,56,33)" fg:x="717" fg:w="3"/><text x="57.6559%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.4860%" y="597" width="0.1601%" height="15" fill="rgb(213,100,0)" fg:x="718" fg:w="2"/><text x="57.7360%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="57.4860%" y="581" width="0.1601%" height="15" fill="rgb(236,166,18)" fg:x="718" fg:w="2"/><text x="57.7360%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="57.4860%" y="565" width="0.1601%" height="15" fill="rgb(251,132,12)" fg:x="718" fg:w="2"/><text x="57.7360%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="57.4860%" y="549" width="0.1601%" height="15" fill="rgb(216,117,7)" fg:x="718" fg:w="2"/><text x="57.7360%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.4860%" y="533" width="0.1601%" height="15" fill="rgb(243,184,8)" fg:x="718" fg:w="2"/><text x="57.7360%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.4860%" y="517" width="0.1601%" height="15" fill="rgb(212,91,32)" fg:x="718" fg:w="2"/><text x="57.7360%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="57.4860%" y="501" width="0.1601%" height="15" fill="rgb(224,147,15)" fg:x="718" fg:w="2"/><text x="57.7360%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="57.4860%" y="485" width="0.1601%" height="15" fill="rgb(228,84,10)" fg:x="718" fg:w="2"/><text x="57.7360%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="57.4860%" y="469" width="0.1601%" height="15" fill="rgb(221,161,22)" fg:x="718" fg:w="2"/><text x="57.7360%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="57.4860%" y="453" width="0.1601%" height="15" fill="rgb(250,132,20)" fg:x="718" fg:w="2"/><text x="57.7360%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.4860%" y="437" width="0.1601%" height="15" fill="rgb(209,161,12)" fg:x="718" fg:w="2"/><text x="57.7360%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="57.6461%" y="597" width="0.0801%" height="15" fill="rgb(232,142,42)" fg:x="720" fg:w="1"/><text x="57.8961%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="57.6461%" y="581" width="0.0801%" height="15" fill="rgb(240,228,27)" fg:x="720" fg:w="1"/><text x="57.8961%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="57.6461%" y="565" width="0.0801%" height="15" fill="rgb(243,0,31)" fg:x="720" fg:w="1"/><text x="57.8961%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.6461%" y="549" width="0.0801%" height="15" fill="rgb(237,100,15)" fg:x="720" fg:w="1"/><text x="57.8961%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.6461%" y="533" width="0.0801%" height="15" fill="rgb(230,26,48)" fg:x="720" fg:w="1"/><text x="57.8961%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.6461%" y="517" width="0.0801%" height="15" fill="rgb(215,7,13)" fg:x="720" fg:w="1"/><text x="57.8961%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.6461%" y="501" width="0.0801%" height="15" fill="rgb(227,172,5)" fg:x="720" fg:w="1"/><text x="57.8961%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.6461%" y="485" width="0.0801%" height="15" fill="rgb(248,206,14)" fg:x="720" fg:w="1"/><text x="57.8961%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.6461%" y="469" width="0.0801%" height="15" fill="rgb(231,62,54)" fg:x="720" fg:w="1"/><text x="57.8961%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.6461%" y="453" width="0.0801%" height="15" fill="rgb(222,136,26)" fg:x="720" fg:w="1"/><text x="57.8961%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.6461%" y="437" width="0.0801%" height="15" fill="rgb(211,115,42)" fg:x="720" fg:w="1"/><text x="57.8961%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.6461%" y="421" width="0.0801%" height="15" fill="rgb(234,5,17)" fg:x="720" fg:w="1"/><text x="57.8961%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.6461%" y="405" width="0.0801%" height="15" fill="rgb(233,67,14)" fg:x="720" fg:w="1"/><text x="57.8961%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.6461%" y="389" width="0.0801%" height="15" fill="rgb(225,133,51)" fg:x="720" fg:w="1"/><text x="57.8961%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.6461%" y="373" width="0.0801%" height="15" fill="rgb(206,107,40)" fg:x="720" fg:w="1"/><text x="57.8961%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.6461%" y="357" width="0.0801%" height="15" fill="rgb(210,56,9)" fg:x="720" fg:w="1"/><text x="57.8961%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.6461%" y="341" width="0.0801%" height="15" fill="rgb(222,204,4)" fg:x="720" fg:w="1"/><text x="57.8961%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.6461%" y="325" width="0.0801%" height="15" fill="rgb(210,168,3)" fg:x="720" fg:w="1"/><text x="57.8961%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.8062%" y="501" width="0.1601%" height="15" fill="rgb(246,183,26)" fg:x="722" fg:w="2"/><text x="58.0562%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.8863%" y="485" width="0.0801%" height="15" fill="rgb(228,27,31)" fg:x="723" fg:w="1"/><text x="58.1363%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.8863%" y="469" width="0.0801%" height="15" fill="rgb(206,8,2)" fg:x="723" fg:w="1"/><text x="58.1363%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.8863%" y="453" width="0.0801%" height="15" fill="rgb(251,229,16)" fg:x="723" fg:w="1"/><text x="58.1363%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.8863%" y="437" width="0.0801%" height="15" fill="rgb(208,84,44)" fg:x="723" fg:w="1"/><text x="58.1363%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.8863%" y="421" width="0.0801%" height="15" fill="rgb(221,228,13)" fg:x="723" fg:w="1"/><text x="58.1363%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.8863%" y="405" width="0.0801%" height="15" fill="rgb(248,42,47)" fg:x="723" fg:w="1"/><text x="58.1363%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.8863%" y="389" width="0.0801%" height="15" fill="rgb(222,124,41)" fg:x="723" fg:w="1"/><text x="58.1363%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.8863%" y="373" width="0.0801%" height="15" fill="rgb(244,191,35)" fg:x="723" fg:w="1"/><text x="58.1363%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.8863%" y="357" width="0.0801%" height="15" fill="rgb(222,223,54)" fg:x="723" fg:w="1"/><text x="58.1363%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.8863%" y="341" width="0.0801%" height="15" fill="rgb(248,178,42)" fg:x="723" fg:w="1"/><text x="58.1363%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.8863%" y="325" width="0.0801%" height="15" fill="rgb(238,21,24)" fg:x="723" fg:w="1"/><text x="58.1363%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.8863%" y="309" width="0.0801%" height="15" fill="rgb(227,134,7)" fg:x="723" fg:w="1"/><text x="58.1363%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.8863%" y="293" width="0.0801%" height="15" fill="rgb(205,191,1)" fg:x="723" fg:w="1"/><text x="58.1363%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="57.8062%" y="549" width="0.2402%" height="15" fill="rgb(222,166,30)" fg:x="722" fg:w="3"/><text x="58.0562%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="57.8062%" y="533" width="0.2402%" height="15" fill="rgb(229,94,26)" fg:x="722" fg:w="3"/><text x="58.0562%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="57.8062%" y="517" width="0.2402%" height="15" fill="rgb(246,97,2)" fg:x="722" fg:w="3"/><text x="58.0562%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.9664%" y="501" width="0.0801%" height="15" fill="rgb(252,112,53)" fg:x="724" fg:w="1"/><text x="58.2164%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.9664%" y="485" width="0.0801%" height="15" fill="rgb(225,52,38)" fg:x="724" fg:w="1"/><text x="58.2164%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.9664%" y="469" width="0.0801%" height="15" fill="rgb(215,203,24)" fg:x="724" fg:w="1"/><text x="58.2164%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.9664%" y="453" width="0.0801%" height="15" fill="rgb(210,122,52)" fg:x="724" fg:w="1"/><text x="58.2164%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.9664%" y="437" width="0.0801%" height="15" fill="rgb(209,161,44)" fg:x="724" fg:w="1"/><text x="58.2164%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.9664%" y="421" width="0.0801%" height="15" fill="rgb(221,97,16)" fg:x="724" fg:w="1"/><text x="58.2164%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.9664%" y="405" width="0.0801%" height="15" fill="rgb(209,87,13)" fg:x="724" fg:w="1"/><text x="58.2164%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.9664%" y="389" width="0.0801%" height="15" fill="rgb(242,1,21)" fg:x="724" fg:w="1"/><text x="58.2164%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.9664%" y="373" width="0.0801%" height="15" fill="rgb(251,170,41)" fg:x="724" fg:w="1"/><text x="58.2164%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.9664%" y="357" width="0.0801%" height="15" fill="rgb(227,201,10)" fg:x="724" fg:w="1"/><text x="58.2164%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.9664%" y="341" width="0.0801%" height="15" fill="rgb(231,100,29)" fg:x="724" fg:w="1"/><text x="58.2164%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.9664%" y="325" width="0.0801%" height="15" fill="rgb(226,31,35)" fg:x="724" fg:w="1"/><text x="58.2164%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.0464%" y="549" width="0.0801%" height="15" fill="rgb(254,99,26)" fg:x="725" fg:w="1"/><text x="58.2964%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="57.6461%" y="629" width="0.6405%" height="15" fill="rgb(217,228,17)" fg:x="720" fg:w="8"/><text x="57.8961%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="57.6461%" y="613" width="0.6405%" height="15" fill="rgb(226,132,8)" fg:x="720" fg:w="8"/><text x="57.8961%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="57.7262%" y="597" width="0.5604%" height="15" fill="rgb(220,202,47)" fg:x="721" fg:w="7"/><text x="57.9762%" y="607.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="57.7262%" y="581" width="0.5604%" height="15" fill="rgb(245,194,10)" fg:x="721" fg:w="7"/><text x="57.9762%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="57.7262%" y="565" width="0.5604%" height="15" fill="rgb(225,44,52)" fg:x="721" fg:w="7"/><text x="57.9762%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.1265%" y="549" width="0.1601%" height="15" fill="rgb(235,10,4)" fg:x="726" fg:w="2"/><text x="58.3765%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.1265%" y="533" width="0.1601%" height="15" fill="rgb(244,32,23)" fg:x="726" fg:w="2"/><text x="58.3765%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.1265%" y="517" width="0.1601%" height="15" fill="rgb(210,115,0)" fg:x="726" fg:w="2"/><text x="58.3765%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.1265%" y="501" width="0.1601%" height="15" fill="rgb(246,72,16)" fg:x="726" fg:w="2"/><text x="58.3765%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="58.2066%" y="485" width="0.0801%" height="15" fill="rgb(223,32,10)" fg:x="727" fg:w="1"/><text x="58.4566%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.2066%" y="469" width="0.0801%" height="15" fill="rgb(223,97,52)" fg:x="727" fg:w="1"/><text x="58.4566%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.2066%" y="453" width="0.0801%" height="15" fill="rgb(238,69,38)" fg:x="727" fg:w="1"/><text x="58.4566%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.2066%" y="437" width="0.0801%" height="15" fill="rgb(226,61,1)" fg:x="727" fg:w="1"/><text x="58.4566%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="58.2866%" y="597" width="0.3203%" height="15" fill="rgb(244,56,14)" fg:x="728" fg:w="4"/><text x="58.5366%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="58.2866%" y="581" width="0.3203%" height="15" fill="rgb(242,164,18)" fg:x="728" fg:w="4"/><text x="58.5366%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="58.3667%" y="565" width="0.2402%" height="15" fill="rgb(217,130,28)" fg:x="729" fg:w="3"/><text x="58.6167%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.3667%" y="549" width="0.2402%" height="15" fill="rgb(218,118,52)" fg:x="729" fg:w="3"/><text x="58.6167%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.4468%" y="533" width="0.1601%" height="15" fill="rgb(251,112,38)" fg:x="730" fg:w="2"/><text x="58.6968%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.4468%" y="517" width="0.1601%" height="15" fill="rgb(239,14,50)" fg:x="730" fg:w="2"/><text x="58.6968%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="58.4468%" y="501" width="0.1601%" height="15" fill="rgb(228,141,54)" fg:x="730" fg:w="2"/><text x="58.6968%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="58.4468%" y="485" width="0.1601%" height="15" fill="rgb(236,128,15)" fg:x="730" fg:w="2"/><text x="58.6968%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="58.4468%" y="469" width="0.1601%" height="15" fill="rgb(206,140,54)" fg:x="730" fg:w="2"/><text x="58.6968%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.4468%" y="453" width="0.1601%" height="15" fill="rgb(240,0,44)" fg:x="730" fg:w="2"/><text x="58.6968%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.4468%" y="437" width="0.1601%" height="15" fill="rgb(243,207,23)" fg:x="730" fg:w="2"/><text x="58.6968%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="58.4468%" y="421" width="0.1601%" height="15" fill="rgb(247,202,1)" fg:x="730" fg:w="2"/><text x="58.6968%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="58.4468%" y="405" width="0.1601%" height="15" fill="rgb(239,83,27)" fg:x="730" fg:w="2"/><text x="58.6968%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="58.4468%" y="389" width="0.1601%" height="15" fill="rgb(219,205,7)" fg:x="730" fg:w="2"/><text x="58.6968%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="58.4468%" y="373" width="0.1601%" height="15" fill="rgb(249,184,22)" fg:x="730" fg:w="2"/><text x="58.6968%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.4468%" y="357" width="0.1601%" height="15" fill="rgb(230,150,14)" fg:x="730" fg:w="2"/><text x="58.6968%" y="367.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="58.6069%" y="597" width="0.1601%" height="15" fill="rgb(240,118,34)" fg:x="732" fg:w="2"/><text x="58.8569%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="58.6069%" y="581" width="0.1601%" height="15" fill="rgb(227,162,21)" fg:x="732" fg:w="2"/><text x="58.8569%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="58.6069%" y="565" width="0.1601%" height="15" fill="rgb(219,14,9)" fg:x="732" fg:w="2"/><text x="58.8569%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="58.6069%" y="549" width="0.1601%" height="15" fill="rgb(223,226,16)" fg:x="732" fg:w="2"/><text x="58.8569%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="58.6069%" y="533" width="0.1601%" height="15" fill="rgb(246,161,37)" fg:x="732" fg:w="2"/><text x="58.8569%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="58.6069%" y="517" width="0.1601%" height="15" fill="rgb(205,221,43)" fg:x="732" fg:w="2"/><text x="58.8569%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (7 samples, 0.56%)</title><rect x="58.2866%" y="629" width="0.5604%" height="15" fill="rgb(228,216,26)" fg:x="728" fg:w="7"/><text x="58.5366%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="58.2866%" y="613" width="0.5604%" height="15" fill="rgb(251,33,17)" fg:x="728" fg:w="7"/><text x="58.5366%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="58.7670%" y="597" width="0.0801%" height="15" fill="rgb(246,126,36)" fg:x="734" fg:w="1"/><text x="59.0170%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="58.7670%" y="581" width="0.0801%" height="15" fill="rgb(217,160,24)" fg:x="734" fg:w="1"/><text x="59.0170%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.7670%" y="565" width="0.0801%" height="15" fill="rgb(211,64,12)" fg:x="734" fg:w="1"/><text x="59.0170%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="58.7670%" y="549" width="0.0801%" height="15" fill="rgb(238,47,36)" fg:x="734" fg:w="1"/><text x="59.0170%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="58.7670%" y="533" width="0.0801%" height="15" fill="rgb(210,157,42)" fg:x="734" fg:w="1"/><text x="59.0170%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="58.8471%" y="597" width="0.1601%" height="15" fill="rgb(242,84,39)" fg:x="735" fg:w="2"/><text x="59.0971%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="58.9271%" y="581" width="0.0801%" height="15" fill="rgb(207,65,41)" fg:x="736" fg:w="1"/><text x="59.1771%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="58.9271%" y="565" width="0.0801%" height="15" fill="rgb(246,97,27)" fg:x="736" fg:w="1"/><text x="59.1771%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="58.9271%" y="549" width="0.0801%" height="15" fill="rgb(229,9,43)" fg:x="736" fg:w="1"/><text x="59.1771%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="58.9271%" y="533" width="0.0801%" height="15" fill="rgb(211,82,44)" fg:x="736" fg:w="1"/><text x="59.1771%" y="543.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="58.8471%" y="629" width="0.2402%" height="15" fill="rgb(253,45,54)" fg:x="735" fg:w="3"/><text x="59.0971%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="58.8471%" y="613" width="0.2402%" height="15" fill="rgb(235,94,32)" fg:x="735" fg:w="3"/><text x="59.0971%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="59.0072%" y="597" width="0.0801%" height="15" fill="rgb(252,143,1)" fg:x="737" fg:w="1"/><text x="59.2572%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="59.0072%" y="581" width="0.0801%" height="15" fill="rgb(239,164,4)" fg:x="737" fg:w="1"/><text x="59.2572%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.0072%" y="565" width="0.0801%" height="15" fill="rgb(222,25,39)" fg:x="737" fg:w="1"/><text x="59.2572%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="59.0072%" y="549" width="0.0801%" height="15" fill="rgb(234,175,9)" fg:x="737" fg:w="1"/><text x="59.2572%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="59.0072%" y="533" width="0.0801%" height="15" fill="rgb(247,200,41)" fg:x="737" fg:w="1"/><text x="59.2572%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="59.1673%" y="581" width="0.1601%" height="15" fill="rgb(245,101,27)" fg:x="739" fg:w="2"/><text x="59.4173%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="59.1673%" y="565" width="0.1601%" height="15" fill="rgb(221,29,7)" fg:x="739" fg:w="2"/><text x="59.4173%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="59.1673%" y="549" width="0.1601%" height="15" fill="rgb(240,184,10)" fg:x="739" fg:w="2"/><text x="59.4173%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.2474%" y="533" width="0.0801%" height="15" fill="rgb(251,85,15)" fg:x="740" fg:w="1"/><text x="59.4974%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.2474%" y="517" width="0.0801%" height="15" fill="rgb(252,84,16)" fg:x="740" fg:w="1"/><text x="59.4974%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2474%" y="501" width="0.0801%" height="15" fill="rgb(233,136,6)" fg:x="740" fg:w="1"/><text x="59.4974%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2474%" y="485" width="0.0801%" height="15" fill="rgb(226,169,30)" fg:x="740" fg:w="1"/><text x="59.4974%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.2474%" y="469" width="0.0801%" height="15" fill="rgb(241,83,18)" fg:x="740" fg:w="1"/><text x="59.4974%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.2474%" y="453" width="0.0801%" height="15" fill="rgb(239,151,5)" fg:x="740" fg:w="1"/><text x="59.4974%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.2474%" y="437" width="0.0801%" height="15" fill="rgb(238,56,13)" fg:x="740" fg:w="1"/><text x="59.4974%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2474%" y="421" width="0.0801%" height="15" fill="rgb(224,100,0)" fg:x="740" fg:w="1"/><text x="59.4974%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2474%" y="405" width="0.0801%" height="15" fill="rgb(231,168,26)" fg:x="740" fg:w="1"/><text x="59.4974%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.2474%" y="389" width="0.0801%" height="15" fill="rgb(238,110,3)" fg:x="740" fg:w="1"/><text x="59.4974%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.2474%" y="373" width="0.0801%" height="15" fill="rgb(216,190,1)" fg:x="740" fg:w="1"/><text x="59.4974%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.2474%" y="357" width="0.0801%" height="15" fill="rgb(208,130,52)" fg:x="740" fg:w="1"/><text x="59.4974%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.2474%" y="341" width="0.0801%" height="15" fill="rgb(233,74,12)" fg:x="740" fg:w="1"/><text x="59.4974%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2474%" y="325" width="0.0801%" height="15" fill="rgb(248,12,15)" fg:x="740" fg:w="1"/><text x="59.4974%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.4075%" y="501" width="0.0801%" height="15" fill="rgb(228,18,29)" fg:x="742" fg:w="1"/><text x="59.6575%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.4075%" y="485" width="0.0801%" height="15" fill="rgb(206,153,11)" fg:x="742" fg:w="1"/><text x="59.6575%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4075%" y="469" width="0.0801%" height="15" fill="rgb(216,50,30)" fg:x="742" fg:w="1"/><text x="59.6575%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4075%" y="453" width="0.0801%" height="15" fill="rgb(217,20,39)" fg:x="742" fg:w="1"/><text x="59.6575%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.4075%" y="437" width="0.0801%" height="15" fill="rgb(232,130,46)" fg:x="742" fg:w="1"/><text x="59.6575%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.4075%" y="421" width="0.0801%" height="15" fill="rgb(233,141,43)" fg:x="742" fg:w="1"/><text x="59.6575%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.4075%" y="405" width="0.0801%" height="15" fill="rgb(240,64,34)" fg:x="742" fg:w="1"/><text x="59.6575%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.4075%" y="389" width="0.0801%" height="15" fill="rgb(230,28,31)" fg:x="742" fg:w="1"/><text x="59.6575%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.4075%" y="373" width="0.0801%" height="15" fill="rgb(223,56,30)" fg:x="742" fg:w="1"/><text x="59.6575%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.4075%" y="357" width="0.0801%" height="15" fill="rgb(248,134,16)" fg:x="742" fg:w="1"/><text x="59.6575%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.4075%" y="341" width="0.0801%" height="15" fill="rgb(206,202,4)" fg:x="742" fg:w="1"/><text x="59.6575%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.4075%" y="325" width="0.0801%" height="15" fill="rgb(219,116,48)" fg:x="742" fg:w="1"/><text x="59.6575%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.4075%" y="309" width="0.0801%" height="15" fill="rgb(224,122,46)" fg:x="742" fg:w="1"/><text x="59.6575%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.4075%" y="293" width="0.0801%" height="15" fill="rgb(219,114,47)" fg:x="742" fg:w="1"/><text x="59.6575%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4876%" y="501" width="0.0801%" height="15" fill="rgb(244,60,44)" fg:x="743" fg:w="1"/><text x="59.7376%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4876%" y="485" width="0.0801%" height="15" fill="rgb(243,226,25)" fg:x="743" fg:w="1"/><text x="59.7376%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.4876%" y="469" width="0.0801%" height="15" fill="rgb(243,101,52)" fg:x="743" fg:w="1"/><text x="59.7376%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.4876%" y="453" width="0.0801%" height="15" fill="rgb(207,69,25)" fg:x="743" fg:w="1"/><text x="59.7376%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.4876%" y="437" width="0.0801%" height="15" fill="rgb(222,204,53)" fg:x="743" fg:w="1"/><text x="59.7376%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="59.4876%" y="421" width="0.0801%" height="15" fill="rgb(234,84,49)" fg:x="743" fg:w="1"/><text x="59.7376%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="59.4876%" y="405" width="0.0801%" height="15" fill="rgb(233,77,41)" fg:x="743" fg:w="1"/><text x="59.7376%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.4075%" y="533" width="0.2402%" height="15" fill="rgb(221,200,42)" fg:x="742" fg:w="3"/><text x="59.6575%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.4075%" y="517" width="0.2402%" height="15" fill="rgb(221,29,35)" fg:x="742" fg:w="3"/><text x="59.6575%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5677%" y="501" width="0.0801%" height="15" fill="rgb(221,71,22)" fg:x="744" fg:w="1"/><text x="59.8177%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.6477%" y="469" width="0.0801%" height="15" fill="rgb(216,162,23)" fg:x="745" fg:w="1"/><text x="59.8977%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.7278%" y="437" width="0.0801%" height="15" fill="rgb(248,32,48)" fg:x="746" fg:w="1"/><text x="59.9778%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.88%)</title><rect x="59.0873%" y="629" width="0.8807%" height="15" fill="rgb(241,156,30)" fg:x="738" fg:w="11"/><text x="59.3373%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.88%)</title><rect x="59.0873%" y="613" width="0.8807%" height="15" fill="rgb(237,196,46)" fg:x="738" fg:w="11"/><text x="59.3373%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (11 samples, 0.88%)</title><rect x="59.0873%" y="597" width="0.8807%" height="15" fill="rgb(216,2,6)" fg:x="738" fg:w="11"/><text x="59.3373%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="59.3275%" y="581" width="0.6405%" height="15" fill="rgb(214,47,16)" fg:x="741" fg:w="8"/><text x="59.5775%" y="591.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="59.3275%" y="565" width="0.6405%" height="15" fill="rgb(240,123,13)" fg:x="741" fg:w="8"/><text x="59.5775%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="59.3275%" y="549" width="0.6405%" height="15" fill="rgb(206,47,48)" fg:x="741" fg:w="8"/><text x="59.5775%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="59.6477%" y="533" width="0.3203%" height="15" fill="rgb(252,88,27)" fg:x="745" fg:w="4"/><text x="59.8977%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="59.6477%" y="517" width="0.3203%" height="15" fill="rgb(218,105,30)" fg:x="745" fg:w="4"/><text x="59.8977%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="59.6477%" y="501" width="0.3203%" height="15" fill="rgb(227,52,46)" fg:x="745" fg:w="4"/><text x="59.8977%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="59.6477%" y="485" width="0.3203%" height="15" fill="rgb(222,190,21)" fg:x="745" fg:w="4"/><text x="59.8977%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="59.7278%" y="469" width="0.2402%" height="15" fill="rgb(205,86,20)" fg:x="746" fg:w="3"/><text x="59.9778%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.7278%" y="453" width="0.2402%" height="15" fill="rgb(233,45,1)" fg:x="746" fg:w="3"/><text x="59.9778%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.8078%" y="437" width="0.1601%" height="15" fill="rgb(208,39,6)" fg:x="747" fg:w="2"/><text x="60.0578%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.8078%" y="421" width="0.1601%" height="15" fill="rgb(211,178,22)" fg:x="747" fg:w="2"/><text x="60.0578%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.8879%" y="405" width="0.0801%" height="15" fill="rgb(227,112,23)" fg:x="748" fg:w="1"/><text x="60.1379%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.8879%" y="389" width="0.0801%" height="15" fill="rgb(214,41,4)" fg:x="748" fg:w="1"/><text x="60.1379%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="59.9680%" y="629" width="0.0801%" height="15" fill="rgb(219,144,46)" fg:x="749" fg:w="1"/><text x="60.2180%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="59.9680%" y="613" width="0.0801%" height="15" fill="rgb(253,176,50)" fg:x="749" fg:w="1"/><text x="60.2180%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="59.9680%" y="597" width="0.0801%" height="15" fill="rgb(206,123,1)" fg:x="749" fg:w="1"/><text x="60.2180%" y="607.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0480%" y="581" width="0.0801%" height="15" fill="rgb(250,111,32)" fg:x="750" fg:w="1"/><text x="60.2980%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.0480%" y="565" width="0.0801%" height="15" fill="rgb(229,17,49)" fg:x="750" fg:w="1"/><text x="60.2980%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0480%" y="549" width="0.0801%" height="15" fill="rgb(250,123,19)" fg:x="750" fg:w="1"/><text x="60.2980%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.0480%" y="533" width="0.0801%" height="15" fill="rgb(220,124,20)" fg:x="750" fg:w="1"/><text x="60.2980%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.0480%" y="517" width="0.0801%" height="15" fill="rgb(242,85,25)" fg:x="750" fg:w="1"/><text x="60.2980%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.0480%" y="501" width="0.0801%" height="15" fill="rgb(245,217,7)" fg:x="750" fg:w="1"/><text x="60.2980%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.0480%" y="485" width="0.0801%" height="15" fill="rgb(242,50,25)" fg:x="750" fg:w="1"/><text x="60.2980%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="60.0480%" y="469" width="0.0801%" height="15" fill="rgb(251,210,24)" fg:x="750" fg:w="1"/><text x="60.2980%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="60.0480%" y="453" width="0.0801%" height="15" fill="rgb(238,24,8)" fg:x="750" fg:w="1"/><text x="60.2980%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="60.1281%" y="581" width="0.0801%" height="15" fill="rgb(211,96,19)" fg:x="751" fg:w="1"/><text x="60.3781%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="60.2082%" y="581" width="0.0801%" height="15" fill="rgb(222,186,12)" fg:x="752" fg:w="1"/><text x="60.4582%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="60.2082%" y="565" width="0.0801%" height="15" fill="rgb(212,70,49)" fg:x="752" fg:w="1"/><text x="60.4582%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="60.2082%" y="549" width="0.0801%" height="15" fill="rgb(238,69,49)" fg:x="752" fg:w="1"/><text x="60.4582%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.2082%" y="533" width="0.0801%" height="15" fill="rgb(225,13,3)" fg:x="752" fg:w="1"/><text x="60.4582%" y="543.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="60.2882%" y="581" width="0.0801%" height="15" fill="rgb(229,188,14)" fg:x="753" fg:w="1"/><text x="60.5382%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="60.2882%" y="565" width="0.0801%" height="15" fill="rgb(218,58,16)" fg:x="753" fg:w="1"/><text x="60.5382%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="60.2882%" y="549" width="0.0801%" height="15" fill="rgb(206,213,49)" fg:x="753" fg:w="1"/><text x="60.5382%" y="559.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="60.2882%" y="533" width="0.0801%" height="15" fill="rgb(225,152,48)" fg:x="753" fg:w="1"/><text x="60.5382%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (6 samples, 0.48%)</title><rect x="60.0480%" y="613" width="0.4804%" height="15" fill="rgb(216,103,42)" fg:x="750" fg:w="6"/><text x="60.2980%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="60.0480%" y="597" width="0.4804%" height="15" fill="rgb(212,214,39)" fg:x="750" fg:w="6"/><text x="60.2980%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.3683%" y="581" width="0.1601%" height="15" fill="rgb(249,52,41)" fg:x="754" fg:w="2"/><text x="60.6183%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.3683%" y="565" width="0.1601%" height="15" fill="rgb(212,173,53)" fg:x="754" fg:w="2"/><text x="60.6183%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.3683%" y="549" width="0.1601%" height="15" fill="rgb(232,222,21)" fg:x="754" fg:w="2"/><text x="60.6183%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.3683%" y="533" width="0.1601%" height="15" fill="rgb(206,228,31)" fg:x="754" fg:w="2"/><text x="60.6183%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.4484%" y="517" width="0.0801%" height="15" fill="rgb(231,121,16)" fg:x="755" fg:w="1"/><text x="60.6984%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (90 samples, 7.21%)</title><rect x="53.4027%" y="661" width="7.2058%" height="15" fill="rgb(241,3,23)" fg:x="667" fg:w="90"/><text x="53.6527%" y="671.50">&lt;plugins_c..</text></g><g><title>plugins_core::location::change_location (37 samples, 2.96%)</title><rect x="57.6461%" y="645" width="2.9624%" height="15" fill="rgb(220,68,37)" fg:x="720" fg:w="37"/><text x="57.8961%" y="655.50">plu..</text></g><g><title>plugins_core::location::Location::set (7 samples, 0.56%)</title><rect x="60.0480%" y="629" width="0.5604%" height="15" fill="rgb(212,23,49)" fg:x="750" fg:w="7"/><text x="60.2980%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="60.5284%" y="613" width="0.0801%" height="15" fill="rgb(231,38,8)" fg:x="756" fg:w="1"/><text x="60.7784%" y="623.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="60.5284%" y="597" width="0.0801%" height="15" fill="rgb(222,137,29)" fg:x="756" fg:w="1"/><text x="60.7784%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="60.5284%" y="581" width="0.0801%" height="15" fill="rgb(239,8,6)" fg:x="756" fg:w="1"/><text x="60.7784%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="60.5284%" y="565" width="0.0801%" height="15" fill="rgb(224,142,47)" fg:x="756" fg:w="1"/><text x="60.7784%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="60.5284%" y="549" width="0.0801%" height="15" fill="rgb(226,67,29)" fg:x="756" fg:w="1"/><text x="60.7784%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (270 samples, 21.62%)</title><rect x="39.0713%" y="837" width="21.6173%" height="15" fill="rgb(212,144,29)" fg:x="488" fg:w="270"/><text x="39.3213%" y="847.50">&lt;engine::session::Session as kerne..</text></g><g><title>kernel::plugins::mw::apply_middleware (270 samples, 21.62%)</title><rect x="39.0713%" y="821" width="21.6173%" height="15" fill="rgb(252,2,51)" fg:x="488" fg:w="270"/><text x="39.3213%" y="831.50">kernel::plugins::mw::apply_middlew..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (270 samples, 21.62%)</title><rect x="39.0713%" y="805" width="21.6173%" height="15" fill="rgb(246,103,52)" fg:x="488" fg:w="270"/><text x="39.3213%" y="815.50">kernel::plugins::mw::MiddlewareNex..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (270 samples, 21.62%)</title><rect x="39.0713%" y="789" width="21.6173%" height="15" fill="rgb(229,229,35)" fg:x="488" fg:w="270"/><text x="39.3213%" y="799.50">&lt;engine::session::ExpandSurroundin..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (246 samples, 19.70%)</title><rect x="40.9928%" y="773" width="19.6958%" height="15" fill="rgb(209,83,15)" fg:x="512" fg:w="246"/><text x="41.2428%" y="783.50">kernel::plugins::mw::Middleware..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (246 samples, 19.70%)</title><rect x="40.9928%" y="757" width="19.6958%" height="15" fill="rgb(218,54,16)" fg:x="512" fg:w="246"/><text x="41.2428%" y="767.50">&lt;plugins_dynlib::DynamicMiddlew..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (245 samples, 19.62%)</title><rect x="41.0729%" y="741" width="19.6157%" height="15" fill="rgb(205,2,26)" fg:x="513" fg:w="245"/><text x="41.3229%" y="751.50">kernel::plugins::mw::Middleware..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (245 samples, 19.62%)</title><rect x="41.0729%" y="725" width="19.6157%" height="15" fill="rgb(248,180,0)" fg:x="513" fg:w="245"/><text x="41.3229%" y="735.50">core::ops::function::FnOnce::ca..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (244 samples, 19.54%)</title><rect x="41.1529%" y="709" width="19.5356%" height="15" fill="rgb(231,136,16)" fg:x="514" fg:w="244"/><text x="41.4029%" y="719.50">kernel::plugins::mw::Middleware..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (243 samples, 19.46%)</title><rect x="41.2330%" y="693" width="19.4556%" height="15" fill="rgb(215,90,4)" fg:x="515" fg:w="243"/><text x="41.4830%" y="703.50">core::ops::function::FnOnce::c..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (242 samples, 19.38%)</title><rect x="41.3131%" y="677" width="19.3755%" height="15" fill="rgb(251,131,3)" fg:x="516" fg:w="242"/><text x="41.5631%" y="687.50">&lt;engine::session::state::State..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::Item&gt; (1 samples, 0.08%)</title><rect x="60.6085%" y="661" width="0.0801%" height="15" fill="rgb(244,47,21)" fg:x="757" fg:w="1"/><text x="60.8585%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="60.7686%" y="805" width="0.0801%" height="15" fill="rgb(231,115,9)" fg:x="759" fg:w="1"/><text x="61.0186%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7686%" y="789" width="0.0801%" height="15" fill="rgb(241,119,20)" fg:x="759" fg:w="1"/><text x="61.0186%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7686%" y="773" width="0.0801%" height="15" fill="rgb(224,99,0)" fg:x="759" fg:w="1"/><text x="61.0186%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.7686%" y="757" width="0.0801%" height="15" fill="rgb(219,213,18)" fg:x="759" fg:w="1"/><text x="61.0186%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.7686%" y="741" width="0.0801%" height="15" fill="rgb(209,71,34)" fg:x="759" fg:w="1"/><text x="61.0186%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.7686%" y="725" width="0.0801%" height="15" fill="rgb(245,203,20)" fg:x="759" fg:w="1"/><text x="61.0186%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.7686%" y="709" width="0.0801%" height="15" fill="rgb(221,44,20)" fg:x="759" fg:w="1"/><text x="61.0186%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.7686%" y="693" width="0.0801%" height="15" fill="rgb(229,97,0)" fg:x="759" fg:w="1"/><text x="61.0186%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.7686%" y="677" width="0.0801%" height="15" fill="rgb(206,56,49)" fg:x="759" fg:w="1"/><text x="61.0186%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.7686%" y="661" width="0.0801%" height="15" fill="rgb(208,216,41)" fg:x="759" fg:w="1"/><text x="61.0186%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.7686%" y="645" width="0.0801%" height="15" fill="rgb(231,31,6)" fg:x="759" fg:w="1"/><text x="61.0186%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.7686%" y="629" width="0.0801%" height="15" fill="rgb(239,88,23)" fg:x="759" fg:w="1"/><text x="61.0186%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.7686%" y="613" width="0.0801%" height="15" fill="rgb(227,111,45)" fg:x="759" fg:w="1"/><text x="61.0186%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="60.8487%" y="741" width="0.0801%" height="15" fill="rgb(207,167,18)" fg:x="760" fg:w="1"/><text x="61.0987%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.8487%" y="725" width="0.0801%" height="15" fill="rgb(253,127,17)" fg:x="760" fg:w="1"/><text x="61.0987%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="60.8487%" y="757" width="0.1601%" height="15" fill="rgb(211,229,9)" fg:x="760" fg:w="2"/><text x="61.0987%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="60.9287%" y="741" width="0.0801%" height="15" fill="rgb(249,25,14)" fg:x="761" fg:w="1"/><text x="61.1787%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="60.9287%" y="725" width="0.0801%" height="15" fill="rgb(237,177,4)" fg:x="761" fg:w="1"/><text x="61.1787%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.9287%" y="709" width="0.0801%" height="15" fill="rgb(248,163,50)" fg:x="761" fg:w="1"/><text x="61.1787%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.9287%" y="693" width="0.0801%" height="15" fill="rgb(246,67,42)" fg:x="761" fg:w="1"/><text x="61.1787%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="60.9287%" y="677" width="0.0801%" height="15" fill="rgb(228,136,45)" fg:x="761" fg:w="1"/><text x="61.1787%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.9287%" y="661" width="0.0801%" height="15" fill="rgb(218,93,4)" fg:x="761" fg:w="1"/><text x="61.1787%" y="671.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="61.0889%" y="741" width="0.0801%" height="15" fill="rgb(209,82,29)" fg:x="763" fg:w="1"/><text x="61.3389%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.48%)</title><rect x="60.8487%" y="789" width="0.4804%" height="15" fill="rgb(213,219,38)" fg:x="760" fg:w="6"/><text x="61.0987%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="60.8487%" y="773" width="0.4804%" height="15" fill="rgb(233,212,17)" fg:x="760" fg:w="6"/><text x="61.0987%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="61.0088%" y="757" width="0.3203%" height="15" fill="rgb(225,65,3)" fg:x="762" fg:w="4"/><text x="61.2588%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="61.1689%" y="741" width="0.1601%" height="15" fill="rgb(226,25,1)" fg:x="764" fg:w="2"/><text x="61.4189%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="61.1689%" y="725" width="0.1601%" height="15" fill="rgb(229,83,27)" fg:x="764" fg:w="2"/><text x="61.4189%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.1689%" y="709" width="0.1601%" height="15" fill="rgb(245,80,47)" fg:x="764" fg:w="2"/><text x="61.4189%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.1689%" y="693" width="0.1601%" height="15" fill="rgb(213,79,27)" fg:x="764" fg:w="2"/><text x="61.4189%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.1689%" y="677" width="0.1601%" height="15" fill="rgb(232,38,28)" fg:x="764" fg:w="2"/><text x="61.4189%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.1689%" y="661" width="0.1601%" height="15" fill="rgb(253,63,39)" fg:x="764" fg:w="2"/><text x="61.4189%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="61.1689%" y="645" width="0.1601%" height="15" fill="rgb(222,204,17)" fg:x="764" fg:w="2"/><text x="61.4189%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.1689%" y="629" width="0.1601%" height="15" fill="rgb(254,135,49)" fg:x="764" fg:w="2"/><text x="61.4189%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.1689%" y="613" width="0.1601%" height="15" fill="rgb(226,203,24)" fg:x="764" fg:w="2"/><text x="61.4189%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.1689%" y="597" width="0.1601%" height="15" fill="rgb(225,2,17)" fg:x="764" fg:w="2"/><text x="61.4189%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.1689%" y="581" width="0.1601%" height="15" fill="rgb(234,135,43)" fg:x="764" fg:w="2"/><text x="61.4189%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.1689%" y="565" width="0.1601%" height="15" fill="rgb(224,14,46)" fg:x="764" fg:w="2"/><text x="61.4189%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.3291%" y="725" width="0.0801%" height="15" fill="rgb(206,42,0)" fg:x="766" fg:w="1"/><text x="61.5791%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.3291%" y="709" width="0.0801%" height="15" fill="rgb(244,38,23)" fg:x="766" fg:w="1"/><text x="61.5791%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="61.3291%" y="693" width="0.0801%" height="15" fill="rgb(230,25,21)" fg:x="766" fg:w="1"/><text x="61.5791%" y="703.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.4091%" y="677" width="0.0801%" height="15" fill="rgb(252,217,28)" fg:x="767" fg:w="1"/><text x="61.6591%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="61.4091%" y="693" width="0.1601%" height="15" fill="rgb(251,4,49)" fg:x="767" fg:w="2"/><text x="61.6591%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4892%" y="677" width="0.0801%" height="15" fill="rgb(217,126,31)" fg:x="768" fg:w="1"/><text x="61.7392%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.5693%" y="661" width="0.0801%" height="15" fill="rgb(242,181,33)" fg:x="769" fg:w="1"/><text x="61.8193%" y="671.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.5693%" y="645" width="0.0801%" height="15" fill="rgb(241,108,6)" fg:x="769" fg:w="1"/><text x="61.8193%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.6493%" y="661" width="0.0801%" height="15" fill="rgb(238,87,39)" fg:x="770" fg:w="1"/><text x="61.8993%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.6493%" y="645" width="0.0801%" height="15" fill="rgb(244,101,49)" fg:x="770" fg:w="1"/><text x="61.8993%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.6493%" y="629" width="0.0801%" height="15" fill="rgb(211,43,42)" fg:x="770" fg:w="1"/><text x="61.8993%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="61.7294%" y="629" width="0.1601%" height="15" fill="rgb(210,93,2)" fg:x="771" fg:w="2"/><text x="61.9794%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.8895%" y="629" width="0.0801%" height="15" fill="rgb(242,149,32)" fg:x="773" fg:w="1"/><text x="62.1395%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.8895%" y="613" width="0.0801%" height="15" fill="rgb(228,1,6)" fg:x="773" fg:w="1"/><text x="62.1395%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.8895%" y="597" width="0.0801%" height="15" fill="rgb(221,0,20)" fg:x="773" fg:w="1"/><text x="62.1395%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.9696%" y="597" width="0.0801%" height="15" fill="rgb(230,39,32)" fg:x="774" fg:w="1"/><text x="62.2196%" y="607.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.80%)</title><rect x="61.3291%" y="773" width="0.8006%" height="15" fill="rgb(240,89,38)" fg:x="766" fg:w="10"/><text x="61.5791%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.80%)</title><rect x="61.3291%" y="757" width="0.8006%" height="15" fill="rgb(208,221,23)" fg:x="766" fg:w="10"/><text x="61.5791%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="61.3291%" y="741" width="0.8006%" height="15" fill="rgb(220,145,29)" fg:x="766" fg:w="10"/><text x="61.5791%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="61.4091%" y="725" width="0.7206%" height="15" fill="rgb(219,146,23)" fg:x="767" fg:w="9"/><text x="61.6591%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="61.4091%" y="709" width="0.7206%" height="15" fill="rgb(244,114,49)" fg:x="767" fg:w="9"/><text x="61.6591%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="61.5693%" y="693" width="0.5604%" height="15" fill="rgb(221,17,10)" fg:x="769" fg:w="7"/><text x="61.8193%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="61.5693%" y="677" width="0.5604%" height="15" fill="rgb(228,133,21)" fg:x="769" fg:w="7"/><text x="61.8193%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="61.7294%" y="661" width="0.4003%" height="15" fill="rgb(218,81,30)" fg:x="771" fg:w="5"/><text x="61.9794%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="61.7294%" y="645" width="0.4003%" height="15" fill="rgb(240,29,36)" fg:x="771" fg:w="5"/><text x="61.9794%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="61.9696%" y="629" width="0.1601%" height="15" fill="rgb(246,0,36)" fg:x="774" fg:w="2"/><text x="62.2196%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.9696%" y="613" width="0.1601%" height="15" fill="rgb(217,79,8)" fg:x="774" fg:w="2"/><text x="62.2196%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="62.0496%" y="597" width="0.0801%" height="15" fill="rgb(229,124,44)" fg:x="775" fg:w="1"/><text x="62.2996%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.0496%" y="581" width="0.0801%" height="15" fill="rgb(210,187,22)" fg:x="775" fg:w="1"/><text x="62.2996%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="62.0496%" y="565" width="0.0801%" height="15" fill="rgb(212,115,40)" fg:x="775" fg:w="1"/><text x="62.2996%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.1297%" y="741" width="0.0801%" height="15" fill="rgb(210,2,54)" fg:x="776" fg:w="1"/><text x="62.3797%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.2098%" y="709" width="0.0801%" height="15" fill="rgb(227,168,43)" fg:x="777" fg:w="1"/><text x="62.4598%" y="719.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="62.4500%" y="549" width="0.0801%" height="15" fill="rgb(249,92,8)" fg:x="780" fg:w="1"/><text x="62.7000%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="62.3699%" y="661" width="0.2402%" height="15" fill="rgb(239,111,35)" fg:x="779" fg:w="3"/><text x="62.6199%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="62.3699%" y="645" width="0.2402%" height="15" fill="rgb(230,126,13)" fg:x="779" fg:w="3"/><text x="62.6199%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="62.3699%" y="629" width="0.2402%" height="15" fill="rgb(243,116,33)" fg:x="779" fg:w="3"/><text x="62.6199%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="62.3699%" y="613" width="0.2402%" height="15" fill="rgb(246,103,21)" fg:x="779" fg:w="3"/><text x="62.6199%" y="623.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="62.3699%" y="597" width="0.2402%" height="15" fill="rgb(237,53,26)" fg:x="779" fg:w="3"/><text x="62.6199%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="62.3699%" y="581" width="0.2402%" height="15" fill="rgb(213,121,15)" fg:x="779" fg:w="3"/><text x="62.6199%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="62.3699%" y="565" width="0.2402%" height="15" fill="rgb(251,83,35)" fg:x="779" fg:w="3"/><text x="62.6199%" y="575.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="62.5300%" y="549" width="0.0801%" height="15" fill="rgb(222,79,8)" fg:x="781" fg:w="1"/><text x="62.7800%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="62.5300%" y="533" width="0.0801%" height="15" fill="rgb(217,74,36)" fg:x="781" fg:w="1"/><text x="62.7800%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="62.2898%" y="693" width="0.4804%" height="15" fill="rgb(221,14,30)" fg:x="778" fg:w="6"/><text x="62.5398%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="62.2898%" y="677" width="0.4804%" height="15" fill="rgb(216,221,5)" fg:x="778" fg:w="6"/><text x="62.5398%" y="687.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="62.6101%" y="661" width="0.1601%" height="15" fill="rgb(236,118,16)" fg:x="782" fg:w="2"/><text x="62.8601%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="62.6101%" y="645" width="0.1601%" height="15" fill="rgb(243,91,43)" fg:x="782" fg:w="2"/><text x="62.8601%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="62.6101%" y="629" width="0.1601%" height="15" fill="rgb(231,110,7)" fg:x="782" fg:w="2"/><text x="62.8601%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="62.6101%" y="613" width="0.1601%" height="15" fill="rgb(217,80,6)" fg:x="782" fg:w="2"/><text x="62.8601%" y="623.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="62.6902%" y="597" width="0.0801%" height="15" fill="rgb(251,116,7)" fg:x="783" fg:w="1"/><text x="62.9402%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="62.7702%" y="693" width="0.0801%" height="15" fill="rgb(236,70,22)" fg:x="784" fg:w="1"/><text x="63.0202%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.7702%" y="677" width="0.0801%" height="15" fill="rgb(245,13,10)" fg:x="784" fg:w="1"/><text x="63.0202%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.7702%" y="661" width="0.0801%" height="15" fill="rgb(233,146,34)" fg:x="784" fg:w="1"/><text x="63.0202%" y="671.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="62.9303%" y="645" width="0.1601%" height="15" fill="rgb(241,196,34)" fg:x="786" fg:w="2"/><text x="63.1803%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="62.9303%" y="629" width="0.1601%" height="15" fill="rgb(207,150,20)" fg:x="786" fg:w="2"/><text x="63.1803%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.0104%" y="613" width="0.0801%" height="15" fill="rgb(251,27,52)" fg:x="787" fg:w="1"/><text x="63.2604%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.0104%" y="597" width="0.0801%" height="15" fill="rgb(221,76,2)" fg:x="787" fg:w="1"/><text x="63.2604%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.0104%" y="581" width="0.0801%" height="15" fill="rgb(242,94,41)" fg:x="787" fg:w="1"/><text x="63.2604%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.0905%" y="565" width="0.0801%" height="15" fill="rgb(245,9,8)" fg:x="788" fg:w="1"/><text x="63.3405%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (24 samples, 1.92%)</title><rect x="61.3291%" y="789" width="1.9215%" height="15" fill="rgb(236,139,26)" fg:x="766" fg:w="24"/><text x="61.5791%" y="799.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.12%)</title><rect x="62.1297%" y="773" width="1.1209%" height="15" fill="rgb(249,11,18)" fg:x="776" fg:w="14"/><text x="62.3797%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.12%)</title><rect x="62.1297%" y="757" width="1.1209%" height="15" fill="rgb(206,175,35)" fg:x="776" fg:w="14"/><text x="62.3797%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (13 samples, 1.04%)</title><rect x="62.2098%" y="741" width="1.0408%" height="15" fill="rgb(231,3,46)" fg:x="777" fg:w="13"/><text x="62.4598%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.04%)</title><rect x="62.2098%" y="725" width="1.0408%" height="15" fill="rgb(243,27,8)" fg:x="777" fg:w="13"/><text x="62.4598%" y="735.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (12 samples, 0.96%)</title><rect x="62.2898%" y="709" width="0.9608%" height="15" fill="rgb(223,53,13)" fg:x="778" fg:w="12"/><text x="62.5398%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="62.8503%" y="693" width="0.4003%" height="15" fill="rgb(248,68,15)" fg:x="785" fg:w="5"/><text x="63.1003%" y="703.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="62.8503%" y="677" width="0.4003%" height="15" fill="rgb(216,61,26)" fg:x="785" fg:w="5"/><text x="63.1003%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.32%)</title><rect x="62.9303%" y="661" width="0.3203%" height="15" fill="rgb(213,201,24)" fg:x="786" fg:w="4"/><text x="63.1803%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.0905%" y="645" width="0.1601%" height="15" fill="rgb(214,20,17)" fg:x="788" fg:w="2"/><text x="63.3405%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.0905%" y="629" width="0.1601%" height="15" fill="rgb(206,21,46)" fg:x="788" fg:w="2"/><text x="63.3405%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="63.0905%" y="613" width="0.1601%" height="15" fill="rgb(234,222,24)" fg:x="788" fg:w="2"/><text x="63.3405%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.0905%" y="597" width="0.1601%" height="15" fill="rgb(221,25,26)" fg:x="788" fg:w="2"/><text x="63.3405%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.0905%" y="581" width="0.1601%" height="15" fill="rgb(241,148,26)" fg:x="788" fg:w="2"/><text x="63.3405%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="63.1705%" y="565" width="0.0801%" height="15" fill="rgb(248,119,35)" fg:x="789" fg:w="1"/><text x="63.4205%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.1705%" y="549" width="0.0801%" height="15" fill="rgb(239,126,23)" fg:x="789" fg:w="1"/><text x="63.4205%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.1705%" y="533" width="0.0801%" height="15" fill="rgb(247,120,25)" fg:x="789" fg:w="1"/><text x="63.4205%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="63.1705%" y="517" width="0.0801%" height="15" fill="rgb(220,93,32)" fg:x="789" fg:w="1"/><text x="63.4205%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.1705%" y="501" width="0.0801%" height="15" fill="rgb(236,46,26)" fg:x="789" fg:w="1"/><text x="63.4205%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.1705%" y="485" width="0.0801%" height="15" fill="rgb(229,20,45)" fg:x="789" fg:w="1"/><text x="63.4205%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.2506%" y="741" width="0.0801%" height="15" fill="rgb(225,168,41)" fg:x="790" fg:w="1"/><text x="63.5006%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.2506%" y="725" width="0.0801%" height="15" fill="rgb(253,123,20)" fg:x="790" fg:w="1"/><text x="63.5006%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.2506%" y="709" width="0.0801%" height="15" fill="rgb(244,17,29)" fg:x="790" fg:w="1"/><text x="63.5006%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.2506%" y="693" width="0.0801%" height="15" fill="rgb(242,196,24)" fg:x="790" fg:w="1"/><text x="63.5006%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.3307%" y="645" width="0.0801%" height="15" fill="rgb(210,113,45)" fg:x="791" fg:w="1"/><text x="63.5807%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.3307%" y="629" width="0.0801%" height="15" fill="rgb(205,129,3)" fg:x="791" fg:w="1"/><text x="63.5807%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.3307%" y="613" width="0.0801%" height="15" fill="rgb(232,74,10)" fg:x="791" fg:w="1"/><text x="63.5807%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.4107%" y="645" width="0.0801%" height="15" fill="rgb(251,63,43)" fg:x="792" fg:w="1"/><text x="63.6607%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.4107%" y="629" width="0.0801%" height="15" fill="rgb(228,215,15)" fg:x="792" fg:w="1"/><text x="63.6607%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (34 samples, 2.72%)</title><rect x="60.8487%" y="805" width="2.7222%" height="15" fill="rgb(233,179,38)" fg:x="760" fg:w="34"/><text x="61.0987%" y="815.50">en..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="63.2506%" y="789" width="0.3203%" height="15" fill="rgb(227,187,9)" fg:x="790" fg:w="4"/><text x="63.5006%" y="799.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="63.2506%" y="773" width="0.3203%" height="15" fill="rgb(231,89,27)" fg:x="790" fg:w="4"/><text x="63.5006%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="63.2506%" y="757" width="0.3203%" height="15" fill="rgb(225,117,1)" fg:x="790" fg:w="4"/><text x="63.5006%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="63.3307%" y="741" width="0.2402%" height="15" fill="rgb(239,120,49)" fg:x="791" fg:w="3"/><text x="63.5807%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.3307%" y="725" width="0.2402%" height="15" fill="rgb(236,137,37)" fg:x="791" fg:w="3"/><text x="63.5807%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="63.3307%" y="709" width="0.2402%" height="15" fill="rgb(239,73,42)" fg:x="791" fg:w="3"/><text x="63.5807%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.3307%" y="693" width="0.2402%" height="15" fill="rgb(207,169,6)" fg:x="791" fg:w="3"/><text x="63.5807%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="63.3307%" y="677" width="0.2402%" height="15" fill="rgb(228,171,10)" fg:x="791" fg:w="3"/><text x="63.5807%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.3307%" y="661" width="0.2402%" height="15" fill="rgb(217,228,47)" fg:x="791" fg:w="3"/><text x="63.5807%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.4908%" y="645" width="0.0801%" height="15" fill="rgb(227,116,17)" fg:x="793" fg:w="1"/><text x="63.7408%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.4908%" y="629" width="0.0801%" height="15" fill="rgb(245,128,36)" fg:x="793" fg:w="1"/><text x="63.7408%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (37 samples, 2.96%)</title><rect x="60.7686%" y="821" width="2.9624%" height="15" fill="rgb(221,139,3)" fg:x="759" fg:w="37"/><text x="61.0186%" y="831.50">&lt;en..</text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="63.5709%" y="805" width="0.1601%" height="15" fill="rgb(207,59,54)" fg:x="794" fg:w="2"/><text x="63.8209%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (43 samples, 3.44%)</title><rect x="60.6886%" y="837" width="3.4428%" height="15" fill="rgb(231,129,12)" fg:x="758" fg:w="43"/><text x="60.9386%" y="847.50">&lt;en..</text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="63.7310%" y="821" width="0.4003%" height="15" fill="rgb(235,49,17)" fg:x="796" fg:w="5"/><text x="63.9810%" y="831.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="63.8911%" y="805" width="0.2402%" height="15" fill="rgb(229,175,11)" fg:x="798" fg:w="3"/><text x="64.1411%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="63.8911%" y="789" width="0.2402%" height="15" fill="rgb(206,187,30)" fg:x="798" fg:w="3"/><text x="64.1411%" y="799.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="63.8911%" y="773" width="0.2402%" height="15" fill="rgb(214,39,19)" fg:x="798" fg:w="3"/><text x="64.1411%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="63.8911%" y="757" width="0.2402%" height="15" fill="rgb(243,92,46)" fg:x="798" fg:w="3"/><text x="64.1411%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="63.8911%" y="741" width="0.2402%" height="15" fill="rgb(240,125,36)" fg:x="798" fg:w="3"/><text x="64.1411%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="63.8911%" y="725" width="0.2402%" height="15" fill="rgb(217,193,45)" fg:x="798" fg:w="3"/><text x="64.1411%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="63.9712%" y="709" width="0.1601%" height="15" fill="rgb(230,127,16)" fg:x="799" fg:w="2"/><text x="64.2212%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="63.9712%" y="693" width="0.1601%" height="15" fill="rgb(208,161,0)" fg:x="799" fg:w="2"/><text x="64.2212%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="63.9712%" y="677" width="0.1601%" height="15" fill="rgb(251,69,39)" fg:x="799" fg:w="2"/><text x="64.2212%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="64.0512%" y="661" width="0.0801%" height="15" fill="rgb(229,86,22)" fg:x="800" fg:w="1"/><text x="64.3012%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="64.0512%" y="645" width="0.0801%" height="15" fill="rgb(223,67,43)" fg:x="800" fg:w="1"/><text x="64.3012%" y="655.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="64.1313%" y="837" width="0.1601%" height="15" fill="rgb(254,80,31)" fg:x="801" fg:w="2"/><text x="64.3813%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="64.1313%" y="821" width="0.1601%" height="15" fill="rgb(225,149,52)" fg:x="801" fg:w="2"/><text x="64.3813%" y="831.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="64.2114%" y="805" width="0.0801%" height="15" fill="rgb(214,169,18)" fg:x="802" fg:w="1"/><text x="64.4614%" y="815.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="64.2114%" y="789" width="0.0801%" height="15" fill="rgb(236,224,43)" fg:x="802" fg:w="1"/><text x="64.4614%" y="799.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="64.2114%" y="773" width="0.0801%" height="15" fill="rgb(251,125,34)" fg:x="802" fg:w="1"/><text x="64.4614%" y="783.50"></text></g><g><title>&lt;kernel::session::SetSession as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.2914%" y="837" width="0.0801%" height="15" fill="rgb(224,39,44)" fg:x="803" fg:w="1"/><text x="64.5414%" y="847.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.3715%" y="837" width="0.0801%" height="15" fill="rgb(206,111,46)" fg:x="804" fg:w="1"/><text x="64.6215%" y="847.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="64.4516%" y="837" width="0.0801%" height="15" fill="rgb(227,147,50)" fg:x="805" fg:w="1"/><text x="64.7016%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.5316%" y="821" width="0.0801%" height="15" fill="rgb(239,144,36)" fg:x="806" fg:w="1"/><text x="64.7816%" y="831.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.5316%" y="805" width="0.0801%" height="15" fill="rgb(216,17,19)" fg:x="806" fg:w="1"/><text x="64.7816%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.6117%" y="821" width="0.0801%" height="15" fill="rgb(211,192,29)" fg:x="807" fg:w="1"/><text x="64.8617%" y="831.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.7718%" y="789" width="0.0801%" height="15" fill="rgb(238,195,20)" fg:x="809" fg:w="1"/><text x="65.0218%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.7718%" y="773" width="0.0801%" height="15" fill="rgb(213,210,42)" fg:x="809" fg:w="1"/><text x="65.0218%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.7718%" y="757" width="0.0801%" height="15" fill="rgb(244,4,49)" fg:x="809" fg:w="1"/><text x="65.0218%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.8519%" y="757" width="0.0801%" height="15" fill="rgb(254,106,42)" fg:x="810" fg:w="1"/><text x="65.1019%" y="767.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.9319%" y="725" width="0.0801%" height="15" fill="rgb(222,182,12)" fg:x="811" fg:w="1"/><text x="65.1819%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (813 samples, 65.09%)</title><rect x="0.0000%" y="917" width="65.0921%" height="15" fill="rgb(228,160,15)" fg:x="0" fg:w="813"/><text x="0.2500%" y="927.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (813 samples, 65.09%)</title><rect x="0.0000%" y="901" width="65.0921%" height="15" fill="rgb(243,149,43)" fg:x="0" fg:w="813"/><text x="0.2500%" y="911.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (813 samples, 65.09%)</title><rect x="0.0000%" y="885" width="65.0921%" height="15" fill="rgb(245,150,32)" fg:x="0" fg:w="813"/><text x="0.2500%" y="895.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (326 samples, 26.10%)</title><rect x="38.9912%" y="869" width="26.1009%" height="15" fill="rgb(205,43,19)" fg:x="487" fg:w="326"/><text x="39.2412%" y="879.50">engine::session::Session::evaluate_and_per..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (326 samples, 26.10%)</title><rect x="38.9912%" y="853" width="26.1009%" height="15" fill="rgb(249,189,35)" fg:x="487" fg:w="326"/><text x="39.2412%" y="863.50">engine::session::Session::evaluate_and_per..</text></g><g><title>engine::users::model::username_to_key (7 samples, 0.56%)</title><rect x="64.5316%" y="837" width="0.5604%" height="15" fill="rgb(223,9,0)" fg:x="806" fg:w="7"/><text x="64.7816%" y="847.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="64.6918%" y="821" width="0.4003%" height="15" fill="rgb(213,142,45)" fg:x="808" fg:w="5"/><text x="64.9418%" y="831.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="64.6918%" y="805" width="0.4003%" height="15" fill="rgb(208,148,2)" fg:x="808" fg:w="5"/><text x="64.9418%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="64.8519%" y="789" width="0.2402%" height="15" fill="rgb(207,191,42)" fg:x="810" fg:w="3"/><text x="65.1019%" y="799.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.8519%" y="773" width="0.2402%" height="15" fill="rgb(215,218,38)" fg:x="810" fg:w="3"/><text x="65.1019%" y="783.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.9319%" y="757" width="0.1601%" height="15" fill="rgb(223,195,24)" fg:x="811" fg:w="2"/><text x="65.1819%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.9319%" y="741" width="0.1601%" height="15" fill="rgb(254,60,30)" fg:x="811" fg:w="2"/><text x="65.1819%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="65.0120%" y="725" width="0.0801%" height="15" fill="rgb(223,2,9)" fg:x="812" fg:w="1"/><text x="65.2620%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="65.0921%" y="853" width="0.1601%" height="15" fill="rgb(253,134,46)" fg:x="813" fg:w="2"/><text x="65.3421%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="65.0921%" y="837" width="0.1601%" height="15" fill="rgb(206,209,20)" fg:x="813" fg:w="2"/><text x="65.3421%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="65.1721%" y="821" width="0.0801%" height="15" fill="rgb(253,104,42)" fg:x="814" fg:w="1"/><text x="65.4221%" y="831.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="65.1721%" y="805" width="0.0801%" height="15" fill="rgb(223,47,23)" fg:x="814" fg:w="1"/><text x="65.4221%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.2522%" y="821" width="0.0801%" height="15" fill="rgb(247,148,44)" fg:x="815" fg:w="1"/><text x="65.5022%" y="831.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="65.3323%" y="757" width="0.1601%" height="15" fill="rgb(221,224,16)" fg:x="816" fg:w="2"/><text x="65.5823%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.4123%" y="741" width="0.0801%" height="15" fill="rgb(252,103,29)" fg:x="817" fg:w="1"/><text x="65.6623%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="65.4924%" y="741" width="0.1601%" height="15" fill="rgb(244,185,34)" fg:x="818" fg:w="2"/><text x="65.7424%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="65.4924%" y="725" width="0.1601%" height="15" fill="rgb(218,18,50)" fg:x="818" fg:w="2"/><text x="65.7424%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="65.6525%" y="741" width="0.1601%" height="15" fill="rgb(234,105,8)" fg:x="820" fg:w="2"/><text x="65.9025%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="65.6525%" y="725" width="0.1601%" height="15" fill="rgb(249,51,19)" fg:x="820" fg:w="2"/><text x="65.9025%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.8127%" y="725" width="0.0801%" height="15" fill="rgb(233,132,7)" fg:x="822" fg:w="1"/><text x="66.0627%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.8927%" y="725" width="0.0801%" height="15" fill="rgb(229,181,43)" fg:x="823" fg:w="1"/><text x="66.1427%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.8927%" y="709" width="0.0801%" height="15" fill="rgb(223,20,7)" fg:x="823" fg:w="1"/><text x="66.1427%" y="719.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="65.9728%" y="709" width="0.1601%" height="15" fill="rgb(245,13,34)" fg:x="824" fg:w="2"/><text x="66.2228%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="65.3323%" y="789" width="0.9608%" height="15" fill="rgb(242,0,53)" fg:x="816" fg:w="12"/><text x="65.5823%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="65.3323%" y="773" width="0.9608%" height="15" fill="rgb(233,115,19)" fg:x="816" fg:w="12"/><text x="65.5823%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="65.4924%" y="757" width="0.8006%" height="15" fill="rgb(216,170,26)" fg:x="818" fg:w="10"/><text x="65.7424%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="65.8127%" y="741" width="0.4804%" height="15" fill="rgb(233,13,0)" fg:x="822" fg:w="6"/><text x="66.0627%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="65.9728%" y="725" width="0.3203%" height="15" fill="rgb(228,79,21)" fg:x="824" fg:w="4"/><text x="66.2228%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="66.1329%" y="709" width="0.1601%" height="15" fill="rgb(244,17,41)" fg:x="826" fg:w="2"/><text x="66.3829%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="66.1329%" y="693" width="0.1601%" height="15" fill="rgb(253,152,11)" fg:x="826" fg:w="2"/><text x="66.3829%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.1329%" y="677" width="0.1601%" height="15" fill="rgb(254,94,47)" fg:x="826" fg:w="2"/><text x="66.3829%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (15 samples, 1.20%)</title><rect x="65.2522%" y="853" width="1.2010%" height="15" fill="rgb(239,66,43)" fg:x="815" fg:w="15"/><text x="65.5022%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.20%)</title><rect x="65.2522%" y="837" width="1.2010%" height="15" fill="rgb(251,25,22)" fg:x="815" fg:w="15"/><text x="65.5022%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (14 samples, 1.12%)</title><rect x="65.3323%" y="821" width="1.1209%" height="15" fill="rgb(227,65,46)" fg:x="816" fg:w="14"/><text x="65.5823%" y="831.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="65.3323%" y="805" width="1.1209%" height="15" fill="rgb(240,180,32)" fg:x="816" fg:w="14"/><text x="65.5823%" y="815.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.2930%" y="789" width="0.1601%" height="15" fill="rgb(242,11,35)" fg:x="828" fg:w="2"/><text x="66.5430%" y="799.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.44%)</title><rect x="65.0921%" y="869" width="1.4412%" height="15" fill="rgb(221,41,49)" fg:x="813" fg:w="18"/><text x="65.3421%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="66.4532%" y="853" width="0.0801%" height="15" fill="rgb(253,80,52)" fg:x="830" fg:w="1"/><text x="66.7032%" y="863.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="66.6133%" y="821" width="0.0801%" height="15" fill="rgb(232,152,28)" fg:x="832" fg:w="1"/><text x="66.8633%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="66.6934%" y="805" width="0.0801%" height="15" fill="rgb(219,110,12)" fg:x="833" fg:w="1"/><text x="66.9434%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.6934%" y="789" width="0.0801%" height="15" fill="rgb(218,98,43)" fg:x="833" fg:w="1"/><text x="66.9434%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="66.7734%" y="773" width="0.0801%" height="15" fill="rgb(253,96,49)" fg:x="834" fg:w="1"/><text x="67.0234%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="66.7734%" y="757" width="0.0801%" height="15" fill="rgb(238,132,17)" fg:x="834" fg:w="1"/><text x="67.0234%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.7734%" y="741" width="0.0801%" height="15" fill="rgb(208,82,25)" fg:x="834" fg:w="1"/><text x="67.0234%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.7734%" y="725" width="0.0801%" height="15" fill="rgb(237,77,13)" fg:x="834" fg:w="1"/><text x="67.0234%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.7734%" y="709" width="0.0801%" height="15" fill="rgb(230,6,11)" fg:x="834" fg:w="1"/><text x="67.0234%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.7734%" y="693" width="0.0801%" height="15" fill="rgb(207,29,48)" fg:x="834" fg:w="1"/><text x="67.0234%" y="703.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="66.7734%" y="677" width="0.0801%" height="15" fill="rgb(247,105,22)" fg:x="834" fg:w="1"/><text x="67.0234%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="66.7734%" y="661" width="0.0801%" height="15" fill="rgb(223,114,44)" fg:x="834" fg:w="1"/><text x="67.0234%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="66.7734%" y="645" width="0.0801%" height="15" fill="rgb(242,3,46)" fg:x="834" fg:w="1"/><text x="67.0234%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="66.7734%" y="629" width="0.0801%" height="15" fill="rgb(243,197,8)" fg:x="834" fg:w="1"/><text x="67.0234%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.7734%" y="613" width="0.0801%" height="15" fill="rgb(238,171,27)" fg:x="834" fg:w="1"/><text x="67.0234%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.7734%" y="597" width="0.0801%" height="15" fill="rgb(254,144,27)" fg:x="834" fg:w="1"/><text x="67.0234%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="66.7734%" y="581" width="0.0801%" height="15" fill="rgb(216,203,36)" fg:x="834" fg:w="1"/><text x="67.0234%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="66.7734%" y="565" width="0.0801%" height="15" fill="rgb(247,27,26)" fg:x="834" fg:w="1"/><text x="67.0234%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.7734%" y="549" width="0.0801%" height="15" fill="rgb(234,180,24)" fg:x="834" fg:w="1"/><text x="67.0234%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="66.7734%" y="533" width="0.0801%" height="15" fill="rgb(221,50,43)" fg:x="834" fg:w="1"/><text x="67.0234%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="66.7734%" y="517" width="0.0801%" height="15" fill="rgb(236,50,6)" fg:x="834" fg:w="1"/><text x="67.0234%" y="527.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="66.7734%" y="501" width="0.0801%" height="15" fill="rgb(245,172,32)" fg:x="834" fg:w="1"/><text x="67.0234%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="66.7734%" y="485" width="0.0801%" height="15" fill="rgb(207,54,46)" fg:x="834" fg:w="1"/><text x="67.0234%" y="495.50"></text></g><g><title>anyhow::error::object_drop (1 samples, 0.08%)</title><rect x="66.8535%" y="773" width="0.0801%" height="15" fill="rgb(218,67,44)" fg:x="835" fg:w="1"/><text x="67.1035%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.8535%" y="757" width="0.0801%" height="15" fill="rgb(208,152,22)" fg:x="835" fg:w="1"/><text x="67.1035%" y="767.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="66.9335%" y="773" width="0.0801%" height="15" fill="rgb(243,177,0)" fg:x="836" fg:w="1"/><text x="67.1835%" y="783.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="66.9335%" y="757" width="0.0801%" height="15" fill="rgb(212,75,12)" fg:x="836" fg:w="1"/><text x="67.1835%" y="767.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="67.0136%" y="757" width="0.0801%" height="15" fill="rgb(212,129,29)" fg:x="837" fg:w="1"/><text x="67.2636%" y="767.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="67.0136%" y="741" width="0.0801%" height="15" fill="rgb(241,229,35)" fg:x="837" fg:w="1"/><text x="67.2636%" y="751.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="67.0136%" y="725" width="0.0801%" height="15" fill="rgb(232,49,32)" fg:x="837" fg:w="1"/><text x="67.2636%" y="735.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (8 samples, 0.64%)</title><rect x="66.7734%" y="789" width="0.6405%" height="15" fill="rgb(243,119,48)" fg:x="834" fg:w="8"/><text x="67.0234%" y="799.50"></text></g><g><title>libloading::safe::Library::new (5 samples, 0.40%)</title><rect x="67.0136%" y="773" width="0.4003%" height="15" fill="rgb(212,205,30)" fg:x="837" fg:w="5"/><text x="67.2636%" y="783.50"></text></g><g><title>dlopen (4 samples, 0.32%)</title><rect x="67.0937%" y="757" width="0.3203%" height="15" fill="rgb(218,175,42)" fg:x="838" fg:w="4"/><text x="67.3437%" y="767.50"></text></g><g><title>_dl_catch_error (4 samples, 0.32%)</title><rect x="67.0937%" y="741" width="0.3203%" height="15" fill="rgb(230,156,27)" fg:x="838" fg:w="4"/><text x="67.3437%" y="751.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="67.0937%" y="725" width="0.3203%" height="15" fill="rgb(254,32,43)" fg:x="838" fg:w="4"/><text x="67.3437%" y="735.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="67.0937%" y="709" width="0.3203%" height="15" fill="rgb(246,89,34)" fg:x="838" fg:w="4"/><text x="67.3437%" y="719.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="67.0937%" y="693" width="0.3203%" height="15" fill="rgb(247,162,17)" fg:x="838" fg:w="4"/><text x="67.3437%" y="703.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.08%)</title><rect x="67.4139%" y="789" width="0.0801%" height="15" fill="rgb(219,71,37)" fg:x="842" fg:w="1"/><text x="67.6639%" y="799.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.08%)</title><rect x="67.4139%" y="773" width="0.0801%" height="15" fill="rgb(210,184,7)" fg:x="842" fg:w="1"/><text x="67.6639%" y="783.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.08%)</title><rect x="67.4139%" y="757" width="0.0801%" height="15" fill="rgb(245,16,32)" fg:x="842" fg:w="1"/><text x="67.6639%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.08%)</title><rect x="67.4139%" y="741" width="0.0801%" height="15" fill="rgb(209,62,7)" fg:x="842" fg:w="1"/><text x="67.6639%" y="751.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.08%)</title><rect x="67.4139%" y="725" width="0.0801%" height="15" fill="rgb(215,16,15)" fg:x="842" fg:w="1"/><text x="67.6639%" y="735.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::convert::From&lt;libc::unix::timespec&gt;&gt;::from (1 samples, 0.08%)</title><rect x="67.4940%" y="773" width="0.0801%" height="15" fill="rgb(223,60,14)" fg:x="843" fg:w="1"/><text x="67.7440%" y="783.50"></text></g><g><title>std::sys::unix::time::Timespec::new (1 samples, 0.08%)</title><rect x="67.4940%" y="757" width="0.0801%" height="15" fill="rgb(244,134,12)" fg:x="843" fg:w="1"/><text x="67.7440%" y="767.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (11 samples, 0.88%)</title><rect x="66.7734%" y="805" width="0.8807%" height="15" fill="rgb(224,3,41)" fg:x="834" fg:w="11"/><text x="67.0234%" y="815.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="67.4940%" y="789" width="0.1601%" height="15" fill="rgb(213,84,2)" fg:x="843" fg:w="2"/><text x="67.7440%" y="799.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="67.5741%" y="773" width="0.0801%" height="15" fill="rgb(213,216,27)" fg:x="844" fg:w="1"/><text x="67.8241%" y="783.50"></text></g><g><title>engine::session::Session::initialize (13 samples, 1.04%)</title><rect x="66.6934%" y="821" width="1.0408%" height="15" fill="rgb(218,76,35)" fg:x="833" fg:w="13"/><text x="66.9434%" y="831.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="67.6541%" y="805" width="0.0801%" height="15" fill="rgb(253,89,24)" fg:x="845" fg:w="1"/><text x="67.9041%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="67.6541%" y="789" width="0.0801%" height="15" fill="rgb(217,188,40)" fg:x="845" fg:w="1"/><text x="67.9041%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="67.6541%" y="773" width="0.0801%" height="15" fill="rgb(237,79,38)" fg:x="845" fg:w="1"/><text x="67.9041%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.6541%" y="757" width="0.0801%" height="15" fill="rgb(215,116,13)" fg:x="845" fg:w="1"/><text x="67.9041%" y="767.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (16 samples, 1.28%)</title><rect x="66.5332%" y="869" width="1.2810%" height="15" fill="rgb(249,66,35)" fg:x="831" fg:w="16"/><text x="66.7832%" y="879.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (15 samples, 1.20%)</title><rect x="66.6133%" y="853" width="1.2010%" height="15" fill="rgb(253,86,18)" fg:x="832" fg:w="15"/><text x="66.8633%" y="863.50"></text></g><g><title>engine::session::Session::new (15 samples, 1.20%)</title><rect x="66.6133%" y="837" width="1.2010%" height="15" fill="rgb(209,175,36)" fg:x="832" fg:w="15"/><text x="66.8633%" y="847.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="67.7342%" y="821" width="0.0801%" height="15" fill="rgb(253,149,3)" fg:x="846" fg:w="1"/><text x="67.9842%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="67.7342%" y="805" width="0.0801%" height="15" fill="rgb(242,124,49)" fg:x="846" fg:w="1"/><text x="67.9842%" y="815.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.8143%" y="853" width="0.1601%" height="15" fill="rgb(219,171,24)" fg:x="847" fg:w="2"/><text x="68.0643%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8943%" y="837" width="0.0801%" height="15" fill="rgb(216,121,30)" fg:x="848" fg:w="1"/><text x="68.1443%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8943%" y="821" width="0.0801%" height="15" fill="rgb(234,165,21)" fg:x="848" fg:w="1"/><text x="68.1443%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.8943%" y="805" width="0.0801%" height="15" fill="rgb(234,103,40)" fg:x="848" fg:w="1"/><text x="68.1443%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.8943%" y="789" width="0.0801%" height="15" fill="rgb(250,137,24)" fg:x="848" fg:w="1"/><text x="68.1443%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.8943%" y="773" width="0.0801%" height="15" fill="rgb(253,22,21)" fg:x="848" fg:w="1"/><text x="68.1443%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8943%" y="757" width="0.0801%" height="15" fill="rgb(243,22,5)" fg:x="848" fg:w="1"/><text x="68.1443%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8943%" y="741" width="0.0801%" height="15" fill="rgb(212,56,7)" fg:x="848" fg:w="1"/><text x="68.1443%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.8943%" y="725" width="0.0801%" height="15" fill="rgb(223,190,49)" fg:x="848" fg:w="1"/><text x="68.1443%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.8943%" y="709" width="0.0801%" height="15" fill="rgb(221,110,35)" fg:x="848" fg:w="1"/><text x="68.1443%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.8943%" y="693" width="0.0801%" height="15" fill="rgb(212,113,34)" fg:x="848" fg:w="1"/><text x="68.1443%" y="703.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.8943%" y="677" width="0.0801%" height="15" fill="rgb(216,125,47)" fg:x="848" fg:w="1"/><text x="68.1443%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8943%" y="661" width="0.0801%" height="15" fill="rgb(251,112,19)" fg:x="848" fg:w="1"/><text x="68.1443%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="67.9744%" y="853" width="0.0801%" height="15" fill="rgb(254,200,41)" fg:x="849" fg:w="1"/><text x="68.2244%" y="863.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="68.0544%" y="821" width="0.0801%" height="15" fill="rgb(225,17,42)" fg:x="850" fg:w="1"/><text x="68.3044%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (2 samples, 0.16%)</title><rect x="68.0544%" y="853" width="0.1601%" height="15" fill="rgb(208,105,35)" fg:x="850" fg:w="2"/><text x="68.3044%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="68.0544%" y="837" width="0.1601%" height="15" fill="rgb(210,125,51)" fg:x="850" fg:w="2"/><text x="68.3044%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="68.1345%" y="821" width="0.0801%" height="15" fill="rgb(227,213,18)" fg:x="851" fg:w="1"/><text x="68.3845%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.2146%" y="821" width="0.0801%" height="15" fill="rgb(221,174,32)" fg:x="852" fg:w="1"/><text x="68.4646%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.2146%" y="805" width="0.0801%" height="15" fill="rgb(234,23,1)" fg:x="852" fg:w="1"/><text x="68.4646%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.2146%" y="789" width="0.0801%" height="15" fill="rgb(209,65,17)" fg:x="852" fg:w="1"/><text x="68.4646%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.2146%" y="773" width="0.0801%" height="15" fill="rgb(206,224,31)" fg:x="852" fg:w="1"/><text x="68.4646%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.2146%" y="757" width="0.0801%" height="15" fill="rgb(230,20,38)" fg:x="852" fg:w="1"/><text x="68.4646%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.2146%" y="741" width="0.0801%" height="15" fill="rgb(211,9,41)" fg:x="852" fg:w="1"/><text x="68.4646%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.2146%" y="725" width="0.0801%" height="15" fill="rgb(233,214,4)" fg:x="852" fg:w="1"/><text x="68.4646%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.2146%" y="709" width="0.0801%" height="15" fill="rgb(225,60,54)" fg:x="852" fg:w="1"/><text x="68.4646%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.2146%" y="693" width="0.0801%" height="15" fill="rgb(206,228,35)" fg:x="852" fg:w="1"/><text x="68.4646%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.2146%" y="677" width="0.0801%" height="15" fill="rgb(212,178,50)" fg:x="852" fg:w="1"/><text x="68.4646%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.2146%" y="661" width="0.0801%" height="15" fill="rgb(206,192,33)" fg:x="852" fg:w="1"/><text x="68.4646%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.2146%" y="645" width="0.0801%" height="15" fill="rgb(238,210,1)" fg:x="852" fg:w="1"/><text x="68.4646%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.2946%" y="821" width="0.0801%" height="15" fill="rgb(205,65,52)" fg:x="853" fg:w="1"/><text x="68.5446%" y="831.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="68.2146%" y="837" width="0.2402%" height="15" fill="rgb(237,204,51)" fg:x="852" fg:w="3"/><text x="68.4646%" y="847.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="68.3747%" y="821" width="0.0801%" height="15" fill="rgb(213,119,51)" fg:x="854" fg:w="1"/><text x="68.6247%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="68.4548%" y="805" width="0.0801%" height="15" fill="rgb(244,156,37)" fg:x="855" fg:w="1"/><text x="68.7048%" y="815.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="68.5348%" y="757" width="0.0801%" height="15" fill="rgb(249,96,18)" fg:x="856" fg:w="1"/><text x="68.7848%" y="767.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.5348%" y="741" width="0.0801%" height="15" fill="rgb(231,65,11)" fg:x="856" fg:w="1"/><text x="68.7848%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.5348%" y="725" width="0.0801%" height="15" fill="rgb(240,187,2)" fg:x="856" fg:w="1"/><text x="68.7848%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="68.7750%" y="725" width="0.1601%" height="15" fill="rgb(242,121,39)" fg:x="859" fg:w="2"/><text x="69.0250%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="68.7750%" y="709" width="0.1601%" height="15" fill="rgb(233,205,18)" fg:x="859" fg:w="2"/><text x="69.0250%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="68.7750%" y="693" width="0.1601%" height="15" fill="rgb(219,67,33)" fg:x="859" fg:w="2"/><text x="69.0250%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="68.7750%" y="677" width="0.1601%" height="15" fill="rgb(227,84,12)" fg:x="859" fg:w="2"/><text x="69.0250%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="68.7750%" y="661" width="0.1601%" height="15" fill="rgb(227,42,52)" fg:x="859" fg:w="2"/><text x="69.0250%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.8551%" y="645" width="0.0801%" height="15" fill="rgb(231,27,28)" fg:x="860" fg:w="1"/><text x="69.1051%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="68.8551%" y="629" width="0.0801%" height="15" fill="rgb(238,42,2)" fg:x="860" fg:w="1"/><text x="69.1051%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.8551%" y="613" width="0.0801%" height="15" fill="rgb(215,15,9)" fg:x="860" fg:w="1"/><text x="69.1051%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="68.8551%" y="597" width="0.0801%" height="15" fill="rgb(205,195,15)" fg:x="860" fg:w="1"/><text x="69.1051%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="68.9351%" y="725" width="0.0801%" height="15" fill="rgb(233,143,2)" fg:x="861" fg:w="1"/><text x="69.1851%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="68.9351%" y="709" width="0.0801%" height="15" fill="rgb(207,108,8)" fg:x="861" fg:w="1"/><text x="69.1851%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="68.9351%" y="693" width="0.0801%" height="15" fill="rgb(214,53,21)" fg:x="861" fg:w="1"/><text x="69.1851%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.9351%" y="677" width="0.0801%" height="15" fill="rgb(238,212,36)" fg:x="861" fg:w="1"/><text x="69.1851%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.9351%" y="661" width="0.0801%" height="15" fill="rgb(218,151,47)" fg:x="861" fg:w="1"/><text x="69.1851%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.9351%" y="645" width="0.0801%" height="15" fill="rgb(245,160,3)" fg:x="861" fg:w="1"/><text x="69.1851%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="68.6149%" y="741" width="0.4804%" height="15" fill="rgb(238,106,19)" fg:x="857" fg:w="6"/><text x="68.8649%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.0152%" y="725" width="0.0801%" height="15" fill="rgb(207,206,9)" fg:x="862" fg:w="1"/><text x="69.2652%" y="735.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.80%)</title><rect x="68.5348%" y="773" width="0.8006%" height="15" fill="rgb(254,40,10)" fg:x="856" fg:w="10"/><text x="68.7848%" y="783.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="68.6149%" y="757" width="0.7206%" height="15" fill="rgb(245,81,8)" fg:x="857" fg:w="9"/><text x="68.8649%" y="767.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="69.0953%" y="741" width="0.2402%" height="15" fill="rgb(214,119,17)" fg:x="863" fg:w="3"/><text x="69.3453%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="69.1753%" y="725" width="0.1601%" height="15" fill="rgb(245,100,39)" fg:x="864" fg:w="2"/><text x="69.4253%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.2554%" y="709" width="0.0801%" height="15" fill="rgb(243,105,16)" fg:x="865" fg:w="1"/><text x="69.5054%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.3355%" y="741" width="0.0801%" height="15" fill="rgb(214,53,2)" fg:x="866" fg:w="1"/><text x="69.5855%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="69.3355%" y="773" width="0.3203%" height="15" fill="rgb(251,54,50)" fg:x="866" fg:w="4"/><text x="69.5855%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="69.3355%" y="757" width="0.3203%" height="15" fill="rgb(244,121,37)" fg:x="866" fg:w="4"/><text x="69.5855%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="69.4155%" y="741" width="0.2402%" height="15" fill="rgb(236,158,39)" fg:x="867" fg:w="3"/><text x="69.6655%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="69.4956%" y="725" width="0.1601%" height="15" fill="rgb(226,25,37)" fg:x="868" fg:w="2"/><text x="69.7456%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="69.4956%" y="709" width="0.1601%" height="15" fill="rgb(222,71,46)" fg:x="868" fg:w="2"/><text x="69.7456%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="69.4956%" y="693" width="0.1601%" height="15" fill="rgb(209,27,29)" fg:x="868" fg:w="2"/><text x="69.7456%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.5757%" y="677" width="0.0801%" height="15" fill="rgb(210,196,17)" fg:x="869" fg:w="1"/><text x="69.8257%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.5757%" y="661" width="0.0801%" height="15" fill="rgb(236,76,23)" fg:x="869" fg:w="1"/><text x="69.8257%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.5757%" y="645" width="0.0801%" height="15" fill="rgb(214,33,32)" fg:x="869" fg:w="1"/><text x="69.8257%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.8159%" y="725" width="0.0801%" height="15" fill="rgb(243,16,26)" fg:x="872" fg:w="1"/><text x="70.0659%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.8959%" y="725" width="0.0801%" height="15" fill="rgb(241,30,48)" fg:x="873" fg:w="1"/><text x="70.1459%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.8959%" y="709" width="0.0801%" height="15" fill="rgb(241,106,1)" fg:x="873" fg:w="1"/><text x="70.1459%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="69.9760%" y="725" width="0.1601%" height="15" fill="rgb(230,62,29)" fg:x="874" fg:w="2"/><text x="70.2260%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.0560%" y="709" width="0.0801%" height="15" fill="rgb(207,166,53)" fg:x="875" fg:w="1"/><text x="70.3060%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="70.0560%" y="693" width="0.0801%" height="15" fill="rgb(244,54,13)" fg:x="875" fg:w="1"/><text x="70.3060%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="70.1361%" y="725" width="0.1601%" height="15" fill="rgb(205,144,19)" fg:x="876" fg:w="2"/><text x="70.3861%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="70.1361%" y="709" width="0.1601%" height="15" fill="rgb(225,165,45)" fg:x="876" fg:w="2"/><text x="70.3861%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="70.1361%" y="693" width="0.1601%" height="15" fill="rgb(220,140,6)" fg:x="876" fg:w="2"/><text x="70.3861%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.2162%" y="677" width="0.0801%" height="15" fill="rgb(234,69,14)" fg:x="877" fg:w="1"/><text x="70.4662%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="70.2962%" y="725" width="0.0801%" height="15" fill="rgb(243,24,33)" fg:x="878" fg:w="1"/><text x="70.5462%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="70.4564%" y="677" width="0.1601%" height="15" fill="rgb(253,100,43)" fg:x="880" fg:w="2"/><text x="70.7064%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="70.4564%" y="661" width="0.1601%" height="15" fill="rgb(221,168,15)" fg:x="880" fg:w="2"/><text x="70.7064%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="70.5364%" y="645" width="0.0801%" height="15" fill="rgb(237,15,11)" fg:x="881" fg:w="1"/><text x="70.7864%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5364%" y="629" width="0.0801%" height="15" fill="rgb(229,207,40)" fg:x="881" fg:w="1"/><text x="70.7864%" y="639.50"></text></g><g><title>engine::session::Session::flush (34 samples, 2.72%)</title><rect x="68.2146%" y="853" width="2.7222%" height="15" fill="rgb(246,125,48)" fg:x="852" fg:w="34"/><text x="68.4646%" y="863.50">en..</text></g><g><title>engine::session::state::State::close (31 samples, 2.48%)</title><rect x="68.4548%" y="837" width="2.4820%" height="15" fill="rgb(231,65,10)" fg:x="855" fg:w="31"/><text x="68.7048%" y="847.50">en..</text></g><g><title>engine::session::state::State::flush_entities (31 samples, 2.48%)</title><rect x="68.4548%" y="821" width="2.4820%" height="15" fill="rgb(222,152,40)" fg:x="855" fg:w="31"/><text x="68.7048%" y="831.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (30 samples, 2.40%)</title><rect x="68.5348%" y="805" width="2.4019%" height="15" fill="rgb(214,12,30)" fg:x="856" fg:w="30"/><text x="68.7848%" y="815.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (30 samples, 2.40%)</title><rect x="68.5348%" y="789" width="2.4019%" height="15" fill="rgb(239,80,41)" fg:x="856" fg:w="30"/><text x="68.7848%" y="799.50">en..</text></g><g><title>kernel::model::any_entity_changes (16 samples, 1.28%)</title><rect x="69.6557%" y="773" width="1.2810%" height="15" fill="rgb(206,175,27)" fg:x="870" fg:w="16"/><text x="69.9057%" y="783.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.28%)</title><rect x="69.6557%" y="757" width="1.2810%" height="15" fill="rgb(222,43,39)" fg:x="870" fg:w="16"/><text x="69.9057%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.20%)</title><rect x="69.7358%" y="741" width="1.2010%" height="15" fill="rgb(243,47,50)" fg:x="871" fg:w="15"/><text x="69.9858%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="70.3763%" y="725" width="0.5604%" height="15" fill="rgb(243,61,21)" fg:x="879" fg:w="7"/><text x="70.6263%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="70.4564%" y="709" width="0.4804%" height="15" fill="rgb(208,172,5)" fg:x="880" fg:w="6"/><text x="70.7064%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="70.4564%" y="693" width="0.4804%" height="15" fill="rgb(219,24,25)" fg:x="880" fg:w="6"/><text x="70.7064%" y="703.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="70.6165%" y="677" width="0.3203%" height="15" fill="rgb(235,42,41)" fg:x="882" fg:w="4"/><text x="70.8665%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="70.6966%" y="661" width="0.2402%" height="15" fill="rgb(226,190,24)" fg:x="883" fg:w="3"/><text x="70.9466%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="70.6966%" y="645" width="0.2402%" height="15" fill="rgb(216,55,27)" fg:x="883" fg:w="3"/><text x="70.9466%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="70.7766%" y="629" width="0.1601%" height="15" fill="rgb(231,77,14)" fg:x="884" fg:w="2"/><text x="71.0266%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="70.8567%" y="613" width="0.0801%" height="15" fill="rgb(208,108,34)" fg:x="885" fg:w="1"/><text x="71.1067%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="70.9367%" y="821" width="0.0801%" height="15" fill="rgb(228,183,52)" fg:x="886" fg:w="1"/><text x="71.1867%" y="831.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="70.9367%" y="805" width="0.0801%" height="15" fill="rgb(224,152,1)" fg:x="886" fg:w="1"/><text x="71.1867%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.9367%" y="789" width="0.0801%" height="15" fill="rgb(246,115,8)" fg:x="886" fg:w="1"/><text x="71.1867%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.9367%" y="773" width="0.0801%" height="15" fill="rgb(211,76,13)" fg:x="886" fg:w="1"/><text x="71.1867%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.9367%" y="757" width="0.0801%" height="15" fill="rgb(233,214,49)" fg:x="886" fg:w="1"/><text x="71.1867%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.9367%" y="741" width="0.0801%" height="15" fill="rgb(223,44,51)" fg:x="886" fg:w="1"/><text x="71.1867%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.9367%" y="725" width="0.0801%" height="15" fill="rgb(225,111,51)" fg:x="886" fg:w="1"/><text x="71.1867%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.9367%" y="709" width="0.0801%" height="15" fill="rgb(231,185,26)" fg:x="886" fg:w="1"/><text x="71.1867%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.9367%" y="693" width="0.0801%" height="15" fill="rgb(233,111,30)" fg:x="886" fg:w="1"/><text x="71.1867%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.9367%" y="677" width="0.0801%" height="15" fill="rgb(250,1,47)" fg:x="886" fg:w="1"/><text x="71.1867%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.9367%" y="661" width="0.0801%" height="15" fill="rgb(254,210,3)" fg:x="886" fg:w="1"/><text x="71.1867%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="71.0168%" y="821" width="0.0801%" height="15" fill="rgb(234,14,22)" fg:x="887" fg:w="1"/><text x="71.2668%" y="831.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="71.0168%" y="805" width="0.0801%" height="15" fill="rgb(221,117,4)" fg:x="887" fg:w="1"/><text x="71.2668%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.0168%" y="789" width="0.0801%" height="15" fill="rgb(251,147,27)" fg:x="887" fg:w="1"/><text x="71.2668%" y="799.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0168%" y="773" width="0.0801%" height="15" fill="rgb(226,52,11)" fg:x="887" fg:w="1"/><text x="71.2668%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.0168%" y="757" width="0.0801%" height="15" fill="rgb(229,222,5)" fg:x="887" fg:w="1"/><text x="71.2668%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.0168%" y="741" width="0.0801%" height="15" fill="rgb(232,76,2)" fg:x="887" fg:w="1"/><text x="71.2668%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0168%" y="725" width="0.0801%" height="15" fill="rgb(242,108,2)" fg:x="887" fg:w="1"/><text x="71.2668%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0168%" y="709" width="0.0801%" height="15" fill="rgb(213,165,6)" fg:x="887" fg:w="1"/><text x="71.2668%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.0168%" y="693" width="0.0801%" height="15" fill="rgb(222,24,42)" fg:x="887" fg:w="1"/><text x="71.2668%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.0168%" y="677" width="0.0801%" height="15" fill="rgb(242,170,24)" fg:x="887" fg:w="1"/><text x="71.2668%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.0168%" y="661" width="0.0801%" height="15" fill="rgb(209,110,40)" fg:x="887" fg:w="1"/><text x="71.2668%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.0168%" y="645" width="0.0801%" height="15" fill="rgb(233,146,36)" fg:x="887" fg:w="1"/><text x="71.2668%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.0168%" y="629" width="0.0801%" height="15" fill="rgb(229,33,32)" fg:x="887" fg:w="1"/><text x="71.2668%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.0168%" y="613" width="0.0801%" height="15" fill="rgb(225,55,34)" fg:x="887" fg:w="1"/><text x="71.2668%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.0168%" y="597" width="0.0801%" height="15" fill="rgb(217,32,50)" fg:x="887" fg:w="1"/><text x="71.2668%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.0168%" y="581" width="0.0801%" height="15" fill="rgb(206,110,53)" fg:x="887" fg:w="1"/><text x="71.2668%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.0168%" y="565" width="0.0801%" height="15" fill="rgb(247,25,10)" fg:x="887" fg:w="1"/><text x="71.2668%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.0168%" y="549" width="0.0801%" height="15" fill="rgb(226,67,48)" fg:x="887" fg:w="1"/><text x="71.2668%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="71.0969%" y="805" width="0.0801%" height="15" fill="rgb(239,73,28)" fg:x="888" fg:w="1"/><text x="71.3469%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="71.0969%" y="789" width="0.0801%" height="15" fill="rgb(234,200,41)" fg:x="888" fg:w="1"/><text x="71.3469%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="71.0969%" y="773" width="0.0801%" height="15" fill="rgb(233,76,35)" fg:x="888" fg:w="1"/><text x="71.3469%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.0969%" y="757" width="0.0801%" height="15" fill="rgb(238,166,31)" fg:x="888" fg:w="1"/><text x="71.3469%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.0969%" y="741" width="0.0801%" height="15" fill="rgb(219,218,51)" fg:x="888" fg:w="1"/><text x="71.3469%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.0969%" y="725" width="0.0801%" height="15" fill="rgb(221,82,53)" fg:x="888" fg:w="1"/><text x="71.3469%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.0969%" y="709" width="0.0801%" height="15" fill="rgb(218,179,13)" fg:x="888" fg:w="1"/><text x="71.3469%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.0969%" y="693" width="0.0801%" height="15" fill="rgb(210,53,38)" fg:x="888" fg:w="1"/><text x="71.3469%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="70.9367%" y="837" width="0.7206%" height="15" fill="rgb(214,167,31)" fg:x="886" fg:w="9"/><text x="71.1867%" y="847.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="71.0969%" y="821" width="0.5604%" height="15" fill="rgb(223,26,5)" fg:x="888" fg:w="7"/><text x="71.3469%" y="831.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (6 samples, 0.48%)</title><rect x="71.1769%" y="805" width="0.4804%" height="15" fill="rgb(218,95,23)" fg:x="889" fg:w="6"/><text x="71.4269%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="71.1769%" y="789" width="0.4804%" height="15" fill="rgb(248,205,45)" fg:x="889" fg:w="6"/><text x="71.4269%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.48%)</title><rect x="71.1769%" y="773" width="0.4804%" height="15" fill="rgb(211,76,6)" fg:x="889" fg:w="6"/><text x="71.4269%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="71.1769%" y="757" width="0.4804%" height="15" fill="rgb(250,176,29)" fg:x="889" fg:w="6"/><text x="71.4269%" y="767.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="71.1769%" y="741" width="0.4804%" height="15" fill="rgb(240,107,31)" fg:x="889" fg:w="6"/><text x="71.4269%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.6573%" y="741" width="0.0801%" height="15" fill="rgb(229,215,17)" fg:x="895" fg:w="1"/><text x="71.9073%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.6573%" y="725" width="0.0801%" height="15" fill="rgb(240,79,8)" fg:x="895" fg:w="1"/><text x="71.9073%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.6573%" y="709" width="0.0801%" height="15" fill="rgb(243,110,48)" fg:x="895" fg:w="1"/><text x="71.9073%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.6573%" y="693" width="0.0801%" height="15" fill="rgb(236,201,9)" fg:x="895" fg:w="1"/><text x="71.9073%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="71.6573%" y="789" width="0.1601%" height="15" fill="rgb(220,87,26)" fg:x="895" fg:w="2"/><text x="71.9073%" y="799.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="71.6573%" y="773" width="0.1601%" height="15" fill="rgb(212,118,27)" fg:x="895" fg:w="2"/><text x="71.9073%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="71.6573%" y="757" width="0.1601%" height="15" fill="rgb(244,178,50)" fg:x="895" fg:w="2"/><text x="71.9073%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.7374%" y="741" width="0.0801%" height="15" fill="rgb(215,204,7)" fg:x="896" fg:w="1"/><text x="71.9874%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7374%" y="725" width="0.0801%" height="15" fill="rgb(214,122,43)" fg:x="896" fg:w="1"/><text x="71.9874%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.7374%" y="709" width="0.0801%" height="15" fill="rgb(251,178,26)" fg:x="896" fg:w="1"/><text x="71.9874%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7374%" y="693" width="0.0801%" height="15" fill="rgb(210,7,35)" fg:x="896" fg:w="1"/><text x="71.9874%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.7374%" y="677" width="0.0801%" height="15" fill="rgb(227,164,54)" fg:x="896" fg:w="1"/><text x="71.9874%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7374%" y="661" width="0.0801%" height="15" fill="rgb(205,18,34)" fg:x="896" fg:w="1"/><text x="71.9874%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.7374%" y="645" width="0.0801%" height="15" fill="rgb(239,50,19)" fg:x="896" fg:w="1"/><text x="71.9874%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7374%" y="629" width="0.0801%" height="15" fill="rgb(224,85,6)" fg:x="896" fg:w="1"/><text x="71.9874%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.7374%" y="613" width="0.0801%" height="15" fill="rgb(252,167,34)" fg:x="896" fg:w="1"/><text x="71.9874%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7374%" y="597" width="0.0801%" height="15" fill="rgb(243,180,35)" fg:x="896" fg:w="1"/><text x="71.9874%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.8175%" y="709" width="0.0801%" height="15" fill="rgb(213,214,53)" fg:x="897" fg:w="1"/><text x="72.0675%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.8175%" y="693" width="0.0801%" height="15" fill="rgb(244,39,37)" fg:x="897" fg:w="1"/><text x="72.0675%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.8175%" y="677" width="0.0801%" height="15" fill="rgb(215,141,14)" fg:x="897" fg:w="1"/><text x="72.0675%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.8175%" y="661" width="0.0801%" height="15" fill="rgb(210,2,42)" fg:x="897" fg:w="1"/><text x="72.0675%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.8175%" y="645" width="0.0801%" height="15" fill="rgb(252,189,47)" fg:x="897" fg:w="1"/><text x="72.0675%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.8175%" y="629" width="0.0801%" height="15" fill="rgb(222,154,47)" fg:x="897" fg:w="1"/><text x="72.0675%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.8175%" y="613" width="0.0801%" height="15" fill="rgb(228,20,37)" fg:x="897" fg:w="1"/><text x="72.0675%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.8175%" y="597" width="0.0801%" height="15" fill="rgb(236,17,4)" fg:x="897" fg:w="1"/><text x="72.0675%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.8175%" y="581" width="0.0801%" height="15" fill="rgb(222,211,31)" fg:x="897" fg:w="1"/><text x="72.0675%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.8175%" y="565" width="0.0801%" height="15" fill="rgb(218,134,25)" fg:x="897" fg:w="1"/><text x="72.0675%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.8175%" y="549" width="0.0801%" height="15" fill="rgb(218,97,43)" fg:x="897" fg:w="1"/><text x="72.0675%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.8175%" y="533" width="0.0801%" height="15" fill="rgb(234,163,32)" fg:x="897" fg:w="1"/><text x="72.0675%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="71.8175%" y="741" width="0.1601%" height="15" fill="rgb(251,171,42)" fg:x="897" fg:w="2"/><text x="72.0675%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="71.8175%" y="725" width="0.1601%" height="15" fill="rgb(223,104,12)" fg:x="897" fg:w="2"/><text x="72.0675%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.8975%" y="709" width="0.0801%" height="15" fill="rgb(225,29,49)" fg:x="898" fg:w="1"/><text x="72.1475%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="71.6573%" y="821" width="0.4003%" height="15" fill="rgb(253,77,7)" fg:x="895" fg:w="5"/><text x="71.9073%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="71.6573%" y="805" width="0.4003%" height="15" fill="rgb(213,81,26)" fg:x="895" fg:w="5"/><text x="71.9073%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="71.8175%" y="789" width="0.2402%" height="15" fill="rgb(246,126,6)" fg:x="897" fg:w="3"/><text x="72.0675%" y="799.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="71.8175%" y="773" width="0.2402%" height="15" fill="rgb(232,186,21)" fg:x="897" fg:w="3"/><text x="72.0675%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="71.8175%" y="757" width="0.2402%" height="15" fill="rgb(215,126,18)" fg:x="897" fg:w="3"/><text x="72.0675%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.9776%" y="741" width="0.0801%" height="15" fill="rgb(210,47,5)" fg:x="899" fg:w="1"/><text x="72.2276%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.9776%" y="725" width="0.0801%" height="15" fill="rgb(240,70,6)" fg:x="899" fg:w="1"/><text x="72.2276%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.9776%" y="709" width="0.0801%" height="15" fill="rgb(230,99,49)" fg:x="899" fg:w="1"/><text x="72.2276%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.9776%" y="693" width="0.0801%" height="15" fill="rgb(212,57,36)" fg:x="899" fg:w="1"/><text x="72.2276%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.9776%" y="677" width="0.0801%" height="15" fill="rgb(243,14,50)" fg:x="899" fg:w="1"/><text x="72.2276%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.9776%" y="661" width="0.0801%" height="15" fill="rgb(240,2,53)" fg:x="899" fg:w="1"/><text x="72.2276%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="72.0576%" y="821" width="0.1601%" height="15" fill="rgb(208,47,53)" fg:x="900" fg:w="2"/><text x="72.3076%" y="831.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="72.0576%" y="805" width="0.1601%" height="15" fill="rgb(235,186,39)" fg:x="900" fg:w="2"/><text x="72.3076%" y="815.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="72.0576%" y="789" width="0.1601%" height="15" fill="rgb(212,35,47)" fg:x="900" fg:w="2"/><text x="72.3076%" y="799.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="72.0576%" y="773" width="0.1601%" height="15" fill="rgb(248,59,37)" fg:x="900" fg:w="2"/><text x="72.3076%" y="783.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="72.1377%" y="757" width="0.0801%" height="15" fill="rgb(223,186,16)" fg:x="901" fg:w="1"/><text x="72.3877%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="72.1377%" y="741" width="0.0801%" height="15" fill="rgb(215,106,35)" fg:x="901" fg:w="1"/><text x="72.3877%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.1377%" y="725" width="0.0801%" height="15" fill="rgb(217,141,29)" fg:x="901" fg:w="1"/><text x="72.3877%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.1377%" y="709" width="0.0801%" height="15" fill="rgb(221,227,46)" fg:x="901" fg:w="1"/><text x="72.3877%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.2178%" y="773" width="0.0801%" height="15" fill="rgb(212,36,41)" fg:x="902" fg:w="1"/><text x="72.4678%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="72.2178%" y="757" width="0.0801%" height="15" fill="rgb(222,35,11)" fg:x="902" fg:w="1"/><text x="72.4678%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.2178%" y="741" width="0.0801%" height="15" fill="rgb(232,165,33)" fg:x="902" fg:w="1"/><text x="72.4678%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.2178%" y="725" width="0.0801%" height="15" fill="rgb(211,38,20)" fg:x="902" fg:w="1"/><text x="72.4678%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.2178%" y="709" width="0.0801%" height="15" fill="rgb(230,7,36)" fg:x="902" fg:w="1"/><text x="72.4678%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.2178%" y="693" width="0.0801%" height="15" fill="rgb(213,128,35)" fg:x="902" fg:w="1"/><text x="72.4678%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.2178%" y="677" width="0.0801%" height="15" fill="rgb(218,11,14)" fg:x="902" fg:w="1"/><text x="72.4678%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.2178%" y="661" width="0.0801%" height="15" fill="rgb(249,105,7)" fg:x="902" fg:w="1"/><text x="72.4678%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.2178%" y="645" width="0.0801%" height="15" fill="rgb(226,125,21)" fg:x="902" fg:w="1"/><text x="72.4678%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.2978%" y="757" width="0.0801%" height="15" fill="rgb(239,90,47)" fg:x="903" fg:w="1"/><text x="72.5478%" y="767.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="72.2178%" y="821" width="0.2402%" height="15" fill="rgb(226,19,1)" fg:x="902" fg:w="3"/><text x="72.4678%" y="831.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="72.2178%" y="805" width="0.2402%" height="15" fill="rgb(205,117,40)" fg:x="902" fg:w="3"/><text x="72.4678%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="72.2178%" y="789" width="0.2402%" height="15" fill="rgb(234,6,54)" fg:x="902" fg:w="3"/><text x="72.4678%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="72.2978%" y="773" width="0.1601%" height="15" fill="rgb(239,73,32)" fg:x="903" fg:w="2"/><text x="72.5478%" y="783.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="72.3779%" y="757" width="0.0801%" height="15" fill="rgb(226,197,12)" fg:x="904" fg:w="1"/><text x="72.6279%" y="767.50"></text></g><g><title>plugins_core::build::Build::holding (20 samples, 1.60%)</title><rect x="70.9367%" y="853" width="1.6013%" height="15" fill="rgb(226,53,42)" fg:x="886" fg:w="20"/><text x="71.1867%" y="863.50"></text></g><g><title>plugins_core::tools::set_container (11 samples, 0.88%)</title><rect x="71.6573%" y="837" width="0.8807%" height="15" fill="rgb(234,99,30)" fg:x="895" fg:w="11"/><text x="71.9073%" y="847.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="72.4580%" y="821" width="0.0801%" height="15" fill="rgb(237,175,49)" fg:x="905" fg:w="1"/><text x="72.7080%" y="831.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="72.4580%" y="805" width="0.0801%" height="15" fill="rgb(228,75,42)" fg:x="905" fg:w="1"/><text x="72.7080%" y="815.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="72.4580%" y="789" width="0.0801%" height="15" fill="rgb(223,162,48)" fg:x="905" fg:w="1"/><text x="72.7080%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="72.4580%" y="773" width="0.0801%" height="15" fill="rgb(221,192,29)" fg:x="905" fg:w="1"/><text x="72.7080%" y="783.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="72.4580%" y="757" width="0.0801%" height="15" fill="rgb(249,150,41)" fg:x="905" fg:w="1"/><text x="72.7080%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="72.4580%" y="741" width="0.0801%" height="15" fill="rgb(243,107,34)" fg:x="905" fg:w="1"/><text x="72.7080%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="72.5380%" y="821" width="0.0801%" height="15" fill="rgb(214,227,11)" fg:x="906" fg:w="1"/><text x="72.7880%" y="831.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="72.5380%" y="805" width="0.0801%" height="15" fill="rgb(209,37,13)" fg:x="906" fg:w="1"/><text x="72.7880%" y="815.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="72.5380%" y="789" width="0.0801%" height="15" fill="rgb(249,124,20)" fg:x="906" fg:w="1"/><text x="72.7880%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="72.5380%" y="773" width="0.0801%" height="15" fill="rgb(228,28,2)" fg:x="906" fg:w="1"/><text x="72.7880%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.5380%" y="757" width="0.0801%" height="15" fill="rgb(244,55,1)" fg:x="906" fg:w="1"/><text x="72.7880%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.5380%" y="741" width="0.0801%" height="15" fill="rgb(216,26,19)" fg:x="906" fg:w="1"/><text x="72.7880%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="72.5380%" y="725" width="0.0801%" height="15" fill="rgb(209,162,10)" fg:x="906" fg:w="1"/><text x="72.7880%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="72.5380%" y="709" width="0.0801%" height="15" fill="rgb(235,168,42)" fg:x="906" fg:w="1"/><text x="72.7880%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.5380%" y="693" width="0.0801%" height="15" fill="rgb(240,24,14)" fg:x="906" fg:w="1"/><text x="72.7880%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="72.5380%" y="677" width="0.0801%" height="15" fill="rgb(224,107,11)" fg:x="906" fg:w="1"/><text x="72.7880%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="72.5380%" y="661" width="0.0801%" height="15" fill="rgb(226,48,4)" fg:x="906" fg:w="1"/><text x="72.7880%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.6181%" y="773" width="0.0801%" height="15" fill="rgb(254,31,21)" fg:x="907" fg:w="1"/><text x="72.8681%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.6181%" y="757" width="0.0801%" height="15" fill="rgb(205,156,19)" fg:x="907" fg:w="1"/><text x="72.8681%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.6181%" y="741" width="0.0801%" height="15" fill="rgb(216,73,31)" fg:x="907" fg:w="1"/><text x="72.8681%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.6181%" y="725" width="0.0801%" height="15" fill="rgb(237,88,35)" fg:x="907" fg:w="1"/><text x="72.8681%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.6181%" y="709" width="0.0801%" height="15" fill="rgb(254,79,48)" fg:x="907" fg:w="1"/><text x="72.8681%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.6181%" y="693" width="0.0801%" height="15" fill="rgb(211,66,36)" fg:x="907" fg:w="1"/><text x="72.8681%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.6181%" y="677" width="0.0801%" height="15" fill="rgb(222,13,1)" fg:x="907" fg:w="1"/><text x="72.8681%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.6181%" y="661" width="0.0801%" height="15" fill="rgb(221,216,41)" fg:x="907" fg:w="1"/><text x="72.8681%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.6181%" y="645" width="0.0801%" height="15" fill="rgb(220,10,17)" fg:x="907" fg:w="1"/><text x="72.8681%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.6181%" y="629" width="0.0801%" height="15" fill="rgb(242,43,35)" fg:x="907" fg:w="1"/><text x="72.8681%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.6181%" y="613" width="0.0801%" height="15" fill="rgb(216,182,18)" fg:x="907" fg:w="1"/><text x="72.8681%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.6181%" y="597" width="0.0801%" height="15" fill="rgb(246,217,36)" fg:x="907" fg:w="1"/><text x="72.8681%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.6181%" y="581" width="0.0801%" height="15" fill="rgb(208,107,8)" fg:x="907" fg:w="1"/><text x="72.8681%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.6181%" y="565" width="0.0801%" height="15" fill="rgb(208,189,15)" fg:x="907" fg:w="1"/><text x="72.8681%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.6181%" y="549" width="0.0801%" height="15" fill="rgb(211,70,9)" fg:x="907" fg:w="1"/><text x="72.8681%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.6181%" y="533" width="0.0801%" height="15" fill="rgb(217,95,34)" fg:x="907" fg:w="1"/><text x="72.8681%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="72.6181%" y="517" width="0.0801%" height="15" fill="rgb(240,223,2)" fg:x="907" fg:w="1"/><text x="72.8681%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="72.6181%" y="501" width="0.0801%" height="15" fill="rgb(231,18,6)" fg:x="907" fg:w="1"/><text x="72.8681%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.6982%" y="677" width="0.0801%" height="15" fill="rgb(254,44,46)" fg:x="908" fg:w="1"/><text x="72.9482%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.6982%" y="661" width="0.0801%" height="15" fill="rgb(223,222,46)" fg:x="908" fg:w="1"/><text x="72.9482%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="72.6181%" y="821" width="0.2402%" height="15" fill="rgb(229,163,13)" fg:x="907" fg:w="3"/><text x="72.8681%" y="831.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="72.6181%" y="805" width="0.2402%" height="15" fill="rgb(220,208,13)" fg:x="907" fg:w="3"/><text x="72.8681%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="72.6181%" y="789" width="0.2402%" height="15" fill="rgb(244,28,53)" fg:x="907" fg:w="3"/><text x="72.8681%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.6982%" y="773" width="0.1601%" height="15" fill="rgb(243,138,0)" fg:x="908" fg:w="2"/><text x="72.9482%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.6982%" y="757" width="0.1601%" height="15" fill="rgb(209,90,49)" fg:x="908" fg:w="2"/><text x="72.9482%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.6982%" y="741" width="0.1601%" height="15" fill="rgb(247,114,18)" fg:x="908" fg:w="2"/><text x="72.9482%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.6982%" y="725" width="0.1601%" height="15" fill="rgb(221,14,46)" fg:x="908" fg:w="2"/><text x="72.9482%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="72.6982%" y="709" width="0.1601%" height="15" fill="rgb(215,29,23)" fg:x="908" fg:w="2"/><text x="72.9482%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.6982%" y="693" width="0.1601%" height="15" fill="rgb(241,37,25)" fg:x="908" fg:w="2"/><text x="72.9482%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.7782%" y="677" width="0.0801%" height="15" fill="rgb(225,17,22)" fg:x="909" fg:w="1"/><text x="73.0282%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.7782%" y="661" width="0.0801%" height="15" fill="rgb(241,182,7)" fg:x="909" fg:w="1"/><text x="73.0282%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="72.8583%" y="821" width="0.0801%" height="15" fill="rgb(248,125,10)" fg:x="910" fg:w="1"/><text x="73.1083%" y="831.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="72.8583%" y="805" width="0.0801%" height="15" fill="rgb(250,3,37)" fg:x="910" fg:w="1"/><text x="73.1083%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.8583%" y="789" width="0.0801%" height="15" fill="rgb(237,102,7)" fg:x="910" fg:w="1"/><text x="73.1083%" y="799.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.8583%" y="773" width="0.0801%" height="15" fill="rgb(235,5,5)" fg:x="910" fg:w="1"/><text x="73.1083%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.8583%" y="757" width="0.0801%" height="15" fill="rgb(249,147,38)" fg:x="910" fg:w="1"/><text x="73.1083%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.8583%" y="741" width="0.0801%" height="15" fill="rgb(221,25,18)" fg:x="910" fg:w="1"/><text x="73.1083%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.8583%" y="725" width="0.0801%" height="15" fill="rgb(211,88,9)" fg:x="910" fg:w="1"/><text x="73.1083%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.8583%" y="709" width="0.0801%" height="15" fill="rgb(219,62,54)" fg:x="910" fg:w="1"/><text x="73.1083%" y="719.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="72.5380%" y="853" width="0.4804%" height="15" fill="rgb(243,133,46)" fg:x="906" fg:w="6"/><text x="72.7880%" y="863.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="72.5380%" y="837" width="0.4804%" height="15" fill="rgb(214,168,53)" fg:x="906" fg:w="6"/><text x="72.7880%" y="847.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="72.9384%" y="821" width="0.0801%" height="15" fill="rgb(250,58,7)" fg:x="911" fg:w="1"/><text x="73.1884%" y="831.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="72.9384%" y="805" width="0.0801%" height="15" fill="rgb(249,131,5)" fg:x="911" fg:w="1"/><text x="73.1884%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="72.9384%" y="789" width="0.0801%" height="15" fill="rgb(234,40,44)" fg:x="911" fg:w="1"/><text x="73.1884%" y="799.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="72.9384%" y="773" width="0.0801%" height="15" fill="rgb(225,188,42)" fg:x="911" fg:w="1"/><text x="73.1884%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="72.9384%" y="757" width="0.0801%" height="15" fill="rgb(218,201,51)" fg:x="911" fg:w="1"/><text x="73.1884%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.9384%" y="741" width="0.0801%" height="15" fill="rgb(214,209,38)" fg:x="911" fg:w="1"/><text x="73.1884%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.9384%" y="725" width="0.0801%" height="15" fill="rgb(217,0,20)" fg:x="911" fg:w="1"/><text x="73.1884%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.9384%" y="709" width="0.0801%" height="15" fill="rgb(248,183,46)" fg:x="911" fg:w="1"/><text x="73.1884%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.9384%" y="693" width="0.0801%" height="15" fill="rgb(208,99,41)" fg:x="911" fg:w="1"/><text x="73.1884%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.9384%" y="677" width="0.0801%" height="15" fill="rgb(210,189,49)" fg:x="911" fg:w="1"/><text x="73.1884%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.9384%" y="661" width="0.0801%" height="15" fill="rgb(239,191,42)" fg:x="911" fg:w="1"/><text x="73.1884%" y="671.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="73.0184%" y="853" width="0.0801%" height="15" fill="rgb(240,138,26)" fg:x="912" fg:w="1"/><text x="73.2684%" y="863.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="73.0184%" y="837" width="0.0801%" height="15" fill="rgb(234,45,22)" fg:x="912" fg:w="1"/><text x="73.2684%" y="847.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="73.0184%" y="821" width="0.0801%" height="15" fill="rgb(228,43,35)" fg:x="912" fg:w="1"/><text x="73.2684%" y="831.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.0184%" y="805" width="0.0801%" height="15" fill="rgb(215,201,54)" fg:x="912" fg:w="1"/><text x="73.2684%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.0184%" y="789" width="0.0801%" height="15" fill="rgb(209,60,31)" fg:x="912" fg:w="1"/><text x="73.2684%" y="799.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.0184%" y="773" width="0.0801%" height="15" fill="rgb(232,66,12)" fg:x="912" fg:w="1"/><text x="73.2684%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="73.0985%" y="837" width="0.0801%" height="15" fill="rgb(244,78,24)" fg:x="913" fg:w="1"/><text x="73.3485%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="73.0985%" y="821" width="0.0801%" height="15" fill="rgb(249,65,27)" fg:x="913" fg:w="1"/><text x="73.3485%" y="831.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="73.0985%" y="805" width="0.0801%" height="15" fill="rgb(208,218,19)" fg:x="913" fg:w="1"/><text x="73.3485%" y="815.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1785%" y="837" width="0.0801%" height="15" fill="rgb(212,181,38)" fg:x="914" fg:w="1"/><text x="73.4285%" y="847.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="73.2586%" y="789" width="0.0801%" height="15" fill="rgb(207,118,40)" fg:x="915" fg:w="1"/><text x="73.5086%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="73.2586%" y="773" width="0.0801%" height="15" fill="rgb(207,126,20)" fg:x="915" fg:w="1"/><text x="73.5086%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="73.2586%" y="757" width="0.0801%" height="15" fill="rgb(232,15,46)" fg:x="915" fg:w="1"/><text x="73.5086%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="73.2586%" y="741" width="0.0801%" height="15" fill="rgb(254,33,30)" fg:x="915" fg:w="1"/><text x="73.5086%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.2586%" y="725" width="0.0801%" height="15" fill="rgb(233,92,20)" fg:x="915" fg:w="1"/><text x="73.5086%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.2586%" y="709" width="0.0801%" height="15" fill="rgb(225,195,54)" fg:x="915" fg:w="1"/><text x="73.5086%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.2586%" y="693" width="0.0801%" height="15" fill="rgb(208,196,7)" fg:x="915" fg:w="1"/><text x="73.5086%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.2586%" y="677" width="0.0801%" height="15" fill="rgb(253,19,35)" fg:x="915" fg:w="1"/><text x="73.5086%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.2586%" y="661" width="0.0801%" height="15" fill="rgb(228,180,1)" fg:x="915" fg:w="1"/><text x="73.5086%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.2586%" y="645" width="0.0801%" height="15" fill="rgb(248,35,18)" fg:x="915" fg:w="1"/><text x="73.5086%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.2586%" y="629" width="0.0801%" height="15" fill="rgb(220,34,8)" fg:x="915" fg:w="1"/><text x="73.5086%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="73.3387%" y="757" width="0.0801%" height="15" fill="rgb(219,223,17)" fg:x="916" fg:w="1"/><text x="73.5887%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="73.3387%" y="741" width="0.0801%" height="15" fill="rgb(223,183,15)" fg:x="916" fg:w="1"/><text x="73.5887%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.3387%" y="725" width="0.0801%" height="15" fill="rgb(253,184,45)" fg:x="916" fg:w="1"/><text x="73.5887%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.3387%" y="709" width="0.0801%" height="15" fill="rgb(207,97,29)" fg:x="916" fg:w="1"/><text x="73.5887%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.3387%" y="693" width="0.0801%" height="15" fill="rgb(250,170,27)" fg:x="916" fg:w="1"/><text x="73.5887%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.3387%" y="677" width="0.0801%" height="15" fill="rgb(206,178,17)" fg:x="916" fg:w="1"/><text x="73.5887%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.3387%" y="661" width="0.0801%" height="15" fill="rgb(213,92,46)" fg:x="916" fg:w="1"/><text x="73.5887%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="73.3387%" y="645" width="0.0801%" height="15" fill="rgb(223,114,30)" fg:x="916" fg:w="1"/><text x="73.5887%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.3387%" y="629" width="0.0801%" height="15" fill="rgb(207,228,9)" fg:x="916" fg:w="1"/><text x="73.5887%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.3387%" y="613" width="0.0801%" height="15" fill="rgb(205,70,25)" fg:x="916" fg:w="1"/><text x="73.5887%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.3387%" y="597" width="0.0801%" height="15" fill="rgb(252,45,30)" fg:x="916" fg:w="1"/><text x="73.5887%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.3387%" y="581" width="0.0801%" height="15" fill="rgb(219,185,54)" fg:x="916" fg:w="1"/><text x="73.5887%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.3387%" y="565" width="0.0801%" height="15" fill="rgb(219,208,54)" fg:x="916" fg:w="1"/><text x="73.5887%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="73.3387%" y="549" width="0.0801%" height="15" fill="rgb(207,164,54)" fg:x="916" fg:w="1"/><text x="73.5887%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="73.3387%" y="533" width="0.0801%" height="15" fill="rgb(240,155,22)" fg:x="916" fg:w="1"/><text x="73.5887%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="73.4187%" y="709" width="0.0801%" height="15" fill="rgb(217,127,14)" fg:x="917" fg:w="1"/><text x="73.6687%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.4187%" y="693" width="0.0801%" height="15" fill="rgb(232,179,42)" fg:x="917" fg:w="1"/><text x="73.6687%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.4187%" y="677" width="0.0801%" height="15" fill="rgb(247,55,45)" fg:x="917" fg:w="1"/><text x="73.6687%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.4187%" y="661" width="0.0801%" height="15" fill="rgb(217,11,18)" fg:x="917" fg:w="1"/><text x="73.6687%" y="671.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="73.4187%" y="645" width="0.0801%" height="15" fill="rgb(227,127,4)" fg:x="917" fg:w="1"/><text x="73.6687%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.4988%" y="677" width="0.0801%" height="15" fill="rgb(217,97,45)" fg:x="918" fg:w="1"/><text x="73.7488%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.4988%" y="661" width="0.0801%" height="15" fill="rgb(250,135,20)" fg:x="918" fg:w="1"/><text x="73.7488%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.4988%" y="645" width="0.0801%" height="15" fill="rgb(224,213,26)" fg:x="918" fg:w="1"/><text x="73.7488%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.4988%" y="629" width="0.0801%" height="15" fill="rgb(237,86,25)" fg:x="918" fg:w="1"/><text x="73.7488%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.4988%" y="613" width="0.0801%" height="15" fill="rgb(251,105,18)" fg:x="918" fg:w="1"/><text x="73.7488%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.4988%" y="597" width="0.0801%" height="15" fill="rgb(246,124,25)" fg:x="918" fg:w="1"/><text x="73.7488%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="73.3387%" y="773" width="0.3203%" height="15" fill="rgb(210,90,3)" fg:x="916" fg:w="4"/><text x="73.5887%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="73.4187%" y="757" width="0.2402%" height="15" fill="rgb(249,40,31)" fg:x="917" fg:w="3"/><text x="73.6687%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="73.4187%" y="741" width="0.2402%" height="15" fill="rgb(231,228,1)" fg:x="917" fg:w="3"/><text x="73.6687%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="73.4187%" y="725" width="0.2402%" height="15" fill="rgb(242,25,49)" fg:x="917" fg:w="3"/><text x="73.6687%" y="735.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="73.4988%" y="709" width="0.1601%" height="15" fill="rgb(224,142,22)" fg:x="918" fg:w="2"/><text x="73.7488%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="73.4988%" y="693" width="0.1601%" height="15" fill="rgb(228,106,29)" fg:x="918" fg:w="2"/><text x="73.7488%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="73.5789%" y="677" width="0.0801%" height="15" fill="rgb(207,2,15)" fg:x="919" fg:w="1"/><text x="73.8289%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.5789%" y="661" width="0.0801%" height="15" fill="rgb(231,43,37)" fg:x="919" fg:w="1"/><text x="73.8289%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="73.5789%" y="645" width="0.0801%" height="15" fill="rgb(245,193,12)" fg:x="919" fg:w="1"/><text x="73.8289%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.5789%" y="629" width="0.0801%" height="15" fill="rgb(246,9,49)" fg:x="919" fg:w="1"/><text x="73.8289%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="73.5789%" y="613" width="0.0801%" height="15" fill="rgb(218,50,36)" fg:x="919" fg:w="1"/><text x="73.8289%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.5789%" y="597" width="0.0801%" height="15" fill="rgb(225,206,16)" fg:x="919" fg:w="1"/><text x="73.8289%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.5789%" y="581" width="0.0801%" height="15" fill="rgb(242,52,5)" fg:x="919" fg:w="1"/><text x="73.8289%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="73.6589%" y="773" width="0.0801%" height="15" fill="rgb(217,158,11)" fg:x="920" fg:w="1"/><text x="73.9089%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.6589%" y="757" width="0.0801%" height="15" fill="rgb(242,144,22)" fg:x="920" fg:w="1"/><text x="73.9089%" y="767.50"></text></g><g><title>plugins_core::build::Build::leads_to (6 samples, 0.48%)</title><rect x="73.3387%" y="789" width="0.4804%" height="15" fill="rgb(236,191,3)" fg:x="916" fg:w="6"/><text x="73.5887%" y="799.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="73.7390%" y="773" width="0.0801%" height="15" fill="rgb(241,22,19)" fg:x="921" fg:w="1"/><text x="73.9890%" y="783.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="73.7390%" y="757" width="0.0801%" height="15" fill="rgb(205,217,44)" fg:x="921" fg:w="1"/><text x="73.9890%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="73.7390%" y="741" width="0.0801%" height="15" fill="rgb(231,53,3)" fg:x="921" fg:w="1"/><text x="73.9890%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="73.7390%" y="725" width="0.0801%" height="15" fill="rgb(207,13,22)" fg:x="921" fg:w="1"/><text x="73.9890%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="73.7390%" y="709" width="0.0801%" height="15" fill="rgb(234,62,29)" fg:x="921" fg:w="1"/><text x="73.9890%" y="719.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.64%)</title><rect x="73.2586%" y="837" width="0.6405%" height="15" fill="rgb(226,175,44)" fg:x="915" fg:w="8"/><text x="73.5086%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="73.2586%" y="821" width="0.6405%" height="15" fill="rgb(239,177,6)" fg:x="915" fg:w="8"/><text x="73.5086%" y="831.50"></text></g><g><title>plugins_core::build::QuickThing::make (8 samples, 0.64%)</title><rect x="73.2586%" y="805" width="0.6405%" height="15" fill="rgb(249,125,15)" fg:x="915" fg:w="8"/><text x="73.5086%" y="815.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="73.8191%" y="789" width="0.0801%" height="15" fill="rgb(210,201,5)" fg:x="922" fg:w="1"/><text x="74.0691%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="73.8191%" y="773" width="0.0801%" height="15" fill="rgb(210,14,6)" fg:x="922" fg:w="1"/><text x="74.0691%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="73.8191%" y="757" width="0.0801%" height="15" fill="rgb(239,141,15)" fg:x="922" fg:w="1"/><text x="74.0691%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="73.8191%" y="741" width="0.0801%" height="15" fill="rgb(235,75,9)" fg:x="922" fg:w="1"/><text x="74.0691%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="73.8191%" y="725" width="0.0801%" height="15" fill="rgb(246,122,37)" fg:x="922" fg:w="1"/><text x="74.0691%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.8191%" y="709" width="0.0801%" height="15" fill="rgb(235,75,52)" fg:x="922" fg:w="1"/><text x="74.0691%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="73.8191%" y="693" width="0.0801%" height="15" fill="rgb(235,179,12)" fg:x="922" fg:w="1"/><text x="74.0691%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.8191%" y="677" width="0.0801%" height="15" fill="rgb(223,20,9)" fg:x="922" fg:w="1"/><text x="74.0691%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="73.8191%" y="661" width="0.0801%" height="15" fill="rgb(223,75,22)" fg:x="922" fg:w="1"/><text x="74.0691%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="73.8191%" y="645" width="0.0801%" height="15" fill="rgb(248,148,18)" fg:x="922" fg:w="1"/><text x="74.0691%" y="655.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="73.8991%" y="805" width="0.0801%" height="15" fill="rgb(225,103,8)" fg:x="923" fg:w="1"/><text x="74.1491%" y="815.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="73.8991%" y="789" width="0.0801%" height="15" fill="rgb(237,168,17)" fg:x="923" fg:w="1"/><text x="74.1491%" y="799.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="73.8991%" y="773" width="0.0801%" height="15" fill="rgb(215,192,38)" fg:x="923" fg:w="1"/><text x="74.1491%" y="783.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="73.8991%" y="757" width="0.0801%" height="15" fill="rgb(237,69,28)" fg:x="923" fg:w="1"/><text x="74.1491%" y="767.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="73.8991%" y="741" width="0.0801%" height="15" fill="rgb(254,167,32)" fg:x="923" fg:w="1"/><text x="74.1491%" y="751.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="73.8991%" y="725" width="0.0801%" height="15" fill="rgb(250,81,30)" fg:x="923" fg:w="1"/><text x="74.1491%" y="735.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="73.8991%" y="709" width="0.0801%" height="15" fill="rgb(240,68,52)" fg:x="923" fg:w="1"/><text x="74.1491%" y="719.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="73.8991%" y="693" width="0.0801%" height="15" fill="rgb(205,97,42)" fg:x="923" fg:w="1"/><text x="74.1491%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.0592%" y="725" width="0.0801%" height="15" fill="rgb(217,10,22)" fg:x="925" fg:w="1"/><text x="74.3092%" y="735.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="74.1393%" y="725" width="0.0801%" height="15" fill="rgb(216,21,26)" fg:x="926" fg:w="1"/><text x="74.3893%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.2994%" y="709" width="0.0801%" height="15" fill="rgb(239,0,36)" fg:x="928" fg:w="1"/><text x="74.5494%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.4596%" y="693" width="0.0801%" height="15" fill="rgb(216,162,28)" fg:x="930" fg:w="1"/><text x="74.7096%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.5396%" y="693" width="0.0801%" height="15" fill="rgb(246,22,39)" fg:x="931" fg:w="1"/><text x="74.7896%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="74.5396%" y="677" width="0.0801%" height="15" fill="rgb(222,84,49)" fg:x="931" fg:w="1"/><text x="74.7896%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.5396%" y="661" width="0.0801%" height="15" fill="rgb(250,38,34)" fg:x="931" fg:w="1"/><text x="74.7896%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.5396%" y="645" width="0.0801%" height="15" fill="rgb(236,0,38)" fg:x="931" fg:w="1"/><text x="74.7896%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="74.5396%" y="629" width="0.0801%" height="15" fill="rgb(237,205,54)" fg:x="931" fg:w="1"/><text x="74.7896%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.6197%" y="677" width="0.0801%" height="15" fill="rgb(221,80,35)" fg:x="932" fg:w="1"/><text x="74.8697%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.6197%" y="661" width="0.0801%" height="15" fill="rgb(237,204,22)" fg:x="932" fg:w="1"/><text x="74.8697%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.6998%" y="661" width="0.0801%" height="15" fill="rgb(213,108,15)" fg:x="933" fg:w="1"/><text x="74.9498%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.6998%" y="645" width="0.0801%" height="15" fill="rgb(251,187,9)" fg:x="933" fg:w="1"/><text x="74.9498%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="74.7798%" y="645" width="0.0801%" height="15" fill="rgb(250,61,9)" fg:x="934" fg:w="1"/><text x="75.0298%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.7798%" y="629" width="0.0801%" height="15" fill="rgb(230,131,33)" fg:x="934" fg:w="1"/><text x="75.0298%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="74.7798%" y="613" width="0.0801%" height="15" fill="rgb(239,117,11)" fg:x="934" fg:w="1"/><text x="75.0298%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.7798%" y="597" width="0.0801%" height="15" fill="rgb(222,112,44)" fg:x="934" fg:w="1"/><text x="75.0298%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="74.8599%" y="645" width="0.0801%" height="15" fill="rgb(251,33,25)" fg:x="935" fg:w="1"/><text x="75.1099%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.8599%" y="629" width="0.0801%" height="15" fill="rgb(208,171,34)" fg:x="935" fg:w="1"/><text x="75.1099%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.8599%" y="613" width="0.0801%" height="15" fill="rgb(250,166,54)" fg:x="935" fg:w="1"/><text x="75.1099%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="74.3795%" y="709" width="0.6405%" height="15" fill="rgb(212,148,2)" fg:x="929" fg:w="8"/><text x="74.6295%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="74.6197%" y="693" width="0.4003%" height="15" fill="rgb(224,92,39)" fg:x="932" fg:w="5"/><text x="74.8697%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="74.6998%" y="677" width="0.3203%" height="15" fill="rgb(250,28,16)" fg:x="933" fg:w="4"/><text x="74.9498%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="74.7798%" y="661" width="0.2402%" height="15" fill="rgb(227,128,26)" fg:x="934" fg:w="3"/><text x="75.0298%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="74.9400%" y="645" width="0.0801%" height="15" fill="rgb(248,66,7)" fg:x="936" fg:w="1"/><text x="75.1900%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.1801%" y="677" width="0.0801%" height="15" fill="rgb(215,124,51)" fg:x="939" fg:w="1"/><text x="75.4301%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.1801%" y="661" width="0.0801%" height="15" fill="rgb(207,91,1)" fg:x="939" fg:w="1"/><text x="75.4301%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.1801%" y="645" width="0.0801%" height="15" fill="rgb(217,207,38)" fg:x="939" fg:w="1"/><text x="75.4301%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.1801%" y="629" width="0.0801%" height="15" fill="rgb(240,118,9)" fg:x="939" fg:w="1"/><text x="75.4301%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.28%)</title><rect x="74.0592%" y="741" width="1.2810%" height="15" fill="rgb(224,147,4)" fg:x="925" fg:w="16"/><text x="74.3092%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="74.2194%" y="725" width="1.1209%" height="15" fill="rgb(205,105,13)" fg:x="927" fg:w="14"/><text x="74.4694%" y="735.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="75.0200%" y="709" width="0.3203%" height="15" fill="rgb(251,78,39)" fg:x="937" fg:w="4"/><text x="75.2700%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="75.1801%" y="693" width="0.1601%" height="15" fill="rgb(225,60,44)" fg:x="939" fg:w="2"/><text x="75.4301%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="75.2602%" y="677" width="0.0801%" height="15" fill="rgb(221,228,40)" fg:x="940" fg:w="1"/><text x="75.5102%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.3403%" y="693" width="0.0801%" height="15" fill="rgb(215,104,30)" fg:x="941" fg:w="1"/><text x="75.5903%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="75.3403%" y="741" width="0.2402%" height="15" fill="rgb(206,183,3)" fg:x="941" fg:w="3"/><text x="75.5903%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="75.3403%" y="725" width="0.2402%" height="15" fill="rgb(236,199,25)" fg:x="941" fg:w="3"/><text x="75.5903%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="75.3403%" y="709" width="0.2402%" height="15" fill="rgb(230,107,29)" fg:x="941" fg:w="3"/><text x="75.5903%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.4203%" y="693" width="0.1601%" height="15" fill="rgb(216,12,37)" fg:x="942" fg:w="2"/><text x="75.6703%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.4203%" y="677" width="0.1601%" height="15" fill="rgb(238,165,28)" fg:x="942" fg:w="2"/><text x="75.6703%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.4203%" y="661" width="0.1601%" height="15" fill="rgb(226,173,5)" fg:x="942" fg:w="2"/><text x="75.6703%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="75.4203%" y="645" width="0.1601%" height="15" fill="rgb(229,9,37)" fg:x="942" fg:w="2"/><text x="75.6703%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.5004%" y="629" width="0.0801%" height="15" fill="rgb(252,194,43)" fg:x="943" fg:w="1"/><text x="75.7504%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.6605%" y="693" width="0.0801%" height="15" fill="rgb(215,58,45)" fg:x="945" fg:w="1"/><text x="75.9105%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.7406%" y="693" width="0.1601%" height="15" fill="rgb(218,34,51)" fg:x="946" fg:w="2"/><text x="75.9906%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.7406%" y="677" width="0.1601%" height="15" fill="rgb(230,104,27)" fg:x="946" fg:w="2"/><text x="75.9906%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="75.9007%" y="693" width="0.0801%" height="15" fill="rgb(250,9,6)" fg:x="948" fg:w="1"/><text x="76.1507%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.9007%" y="677" width="0.0801%" height="15" fill="rgb(245,10,16)" fg:x="948" fg:w="1"/><text x="76.1507%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="75.9007%" y="661" width="0.0801%" height="15" fill="rgb(227,182,27)" fg:x="948" fg:w="1"/><text x="76.1507%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="75.9007%" y="645" width="0.0801%" height="15" fill="rgb(225,91,37)" fg:x="948" fg:w="1"/><text x="76.1507%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="75.9808%" y="693" width="0.0801%" height="15" fill="rgb(240,16,41)" fg:x="949" fg:w="1"/><text x="76.2308%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="76.0608%" y="693" width="0.1601%" height="15" fill="rgb(214,108,54)" fg:x="950" fg:w="2"/><text x="76.3108%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="76.0608%" y="677" width="0.1601%" height="15" fill="rgb(253,65,28)" fg:x="950" fg:w="2"/><text x="76.3108%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1409%" y="661" width="0.0801%" height="15" fill="rgb(246,105,4)" fg:x="951" fg:w="1"/><text x="76.3909%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1409%" y="645" width="0.0801%" height="15" fill="rgb(223,163,37)" fg:x="951" fg:w="1"/><text x="76.3909%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="76.2210%" y="613" width="0.1601%" height="15" fill="rgb(206,202,31)" fg:x="952" fg:w="2"/><text x="76.4710%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="76.2210%" y="597" width="0.1601%" height="15" fill="rgb(241,202,54)" fg:x="952" fg:w="2"/><text x="76.4710%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="76.2210%" y="581" width="0.1601%" height="15" fill="rgb(220,22,45)" fg:x="952" fg:w="2"/><text x="76.4710%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="76.2210%" y="645" width="0.2402%" height="15" fill="rgb(234,215,40)" fg:x="952" fg:w="3"/><text x="76.4710%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="76.2210%" y="629" width="0.2402%" height="15" fill="rgb(220,3,5)" fg:x="952" fg:w="3"/><text x="76.4710%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.3811%" y="613" width="0.0801%" height="15" fill="rgb(210,8,15)" fg:x="954" fg:w="1"/><text x="76.6311%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.32%)</title><rect x="76.2210%" y="677" width="0.3203%" height="15" fill="rgb(218,113,45)" fg:x="952" fg:w="4"/><text x="76.4710%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="76.2210%" y="661" width="0.3203%" height="15" fill="rgb(249,208,10)" fg:x="952" fg:w="4"/><text x="76.4710%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.4612%" y="645" width="0.0801%" height="15" fill="rgb(250,145,17)" fg:x="955" fg:w="1"/><text x="76.7112%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4612%" y="629" width="0.0801%" height="15" fill="rgb(254,24,13)" fg:x="955" fg:w="1"/><text x="76.7112%" y="639.50"></text></g><g><title>engine::session::Session::flush (34 samples, 2.72%)</title><rect x="73.8991%" y="837" width="2.7222%" height="15" fill="rgb(244,36,15)" fg:x="923" fg:w="34"/><text x="74.1491%" y="847.50">en..</text></g><g><title>engine::session::Session::save_changes (34 samples, 2.72%)</title><rect x="73.8991%" y="821" width="2.7222%" height="15" fill="rgb(228,168,26)" fg:x="923" fg:w="34"/><text x="74.1491%" y="831.50">en..</text></g><g><title>engine::session::state::State::close (33 samples, 2.64%)</title><rect x="73.9792%" y="805" width="2.6421%" height="15" fill="rgb(214,145,10)" fg:x="924" fg:w="33"/><text x="74.2292%" y="815.50">en..</text></g><g><title>engine::session::state::State::flush_entities (33 samples, 2.64%)</title><rect x="73.9792%" y="789" width="2.6421%" height="15" fill="rgb(232,59,25)" fg:x="924" fg:w="33"/><text x="74.2292%" y="799.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (33 samples, 2.64%)</title><rect x="73.9792%" y="773" width="2.6421%" height="15" fill="rgb(254,181,2)" fg:x="924" fg:w="33"/><text x="74.2292%" y="783.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (32 samples, 2.56%)</title><rect x="74.0592%" y="757" width="2.5620%" height="15" fill="rgb(221,139,49)" fg:x="925" fg:w="32"/><text x="74.3092%" y="767.50">en..</text></g><g><title>kernel::model::any_entity_changes (13 samples, 1.04%)</title><rect x="75.5805%" y="741" width="1.0408%" height="15" fill="rgb(235,84,36)" fg:x="944" fg:w="13"/><text x="75.8305%" y="751.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (13 samples, 1.04%)</title><rect x="75.5805%" y="725" width="1.0408%" height="15" fill="rgb(254,32,49)" fg:x="944" fg:w="13"/><text x="75.8305%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.04%)</title><rect x="75.5805%" y="709" width="1.0408%" height="15" fill="rgb(214,136,49)" fg:x="944" fg:w="13"/><text x="75.8305%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="76.2210%" y="693" width="0.4003%" height="15" fill="rgb(206,113,54)" fg:x="952" fg:w="5"/><text x="76.4710%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.5412%" y="677" width="0.0801%" height="15" fill="rgb(226,78,17)" fg:x="956" fg:w="1"/><text x="76.7912%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="76.6213%" y="805" width="0.0801%" height="15" fill="rgb(249,189,19)" fg:x="957" fg:w="1"/><text x="76.8713%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="76.6213%" y="789" width="0.0801%" height="15" fill="rgb(211,82,26)" fg:x="957" fg:w="1"/><text x="76.8713%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="76.6213%" y="773" width="0.0801%" height="15" fill="rgb(206,131,52)" fg:x="957" fg:w="1"/><text x="76.8713%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="76.6213%" y="757" width="0.0801%" height="15" fill="rgb(223,51,24)" fg:x="957" fg:w="1"/><text x="76.8713%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.6213%" y="741" width="0.0801%" height="15" fill="rgb(235,93,36)" fg:x="957" fg:w="1"/><text x="76.8713%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="76.7014%" y="805" width="0.0801%" height="15" fill="rgb(219,118,14)" fg:x="958" fg:w="1"/><text x="76.9514%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="76.7014%" y="789" width="0.0801%" height="15" fill="rgb(240,145,10)" fg:x="958" fg:w="1"/><text x="76.9514%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.7014%" y="773" width="0.0801%" height="15" fill="rgb(241,104,15)" fg:x="958" fg:w="1"/><text x="76.9514%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.7014%" y="757" width="0.0801%" height="15" fill="rgb(248,117,21)" fg:x="958" fg:w="1"/><text x="76.9514%" y="767.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="76.7814%" y="805" width="0.0801%" height="15" fill="rgb(250,184,34)" fg:x="959" fg:w="1"/><text x="77.0314%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="76.7814%" y="789" width="0.0801%" height="15" fill="rgb(218,169,23)" fg:x="959" fg:w="1"/><text x="77.0314%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.7814%" y="773" width="0.0801%" height="15" fill="rgb(214,33,53)" fg:x="959" fg:w="1"/><text x="77.0314%" y="783.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.7814%" y="757" width="0.0801%" height="15" fill="rgb(239,78,4)" fg:x="959" fg:w="1"/><text x="77.0314%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7814%" y="741" width="0.0801%" height="15" fill="rgb(250,25,23)" fg:x="959" fg:w="1"/><text x="77.0314%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.7814%" y="725" width="0.0801%" height="15" fill="rgb(220,205,51)" fg:x="959" fg:w="1"/><text x="77.0314%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8615%" y="725" width="0.0801%" height="15" fill="rgb(252,115,2)" fg:x="960" fg:w="1"/><text x="77.1115%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8615%" y="709" width="0.0801%" height="15" fill="rgb(222,106,48)" fg:x="960" fg:w="1"/><text x="77.1115%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="76.6213%" y="821" width="0.4003%" height="15" fill="rgb(225,77,33)" fg:x="957" fg:w="5"/><text x="76.8713%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="76.8615%" y="805" width="0.1601%" height="15" fill="rgb(250,135,2)" fg:x="960" fg:w="2"/><text x="77.1115%" y="815.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="76.8615%" y="789" width="0.1601%" height="15" fill="rgb(221,217,54)" fg:x="960" fg:w="2"/><text x="77.1115%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="76.8615%" y="773" width="0.1601%" height="15" fill="rgb(233,12,6)" fg:x="960" fg:w="2"/><text x="77.1115%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="76.8615%" y="757" width="0.1601%" height="15" fill="rgb(251,10,27)" fg:x="960" fg:w="2"/><text x="77.1115%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.8615%" y="741" width="0.1601%" height="15" fill="rgb(214,20,35)" fg:x="960" fg:w="2"/><text x="77.1115%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.9416%" y="725" width="0.0801%" height="15" fill="rgb(249,13,18)" fg:x="961" fg:w="1"/><text x="77.1916%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.9416%" y="709" width="0.0801%" height="15" fill="rgb(251,115,18)" fg:x="961" fg:w="1"/><text x="77.1916%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.9416%" y="693" width="0.0801%" height="15" fill="rgb(219,91,11)" fg:x="961" fg:w="1"/><text x="77.1916%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.9416%" y="677" width="0.0801%" height="15" fill="rgb(238,130,14)" fg:x="961" fg:w="1"/><text x="77.1916%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.9416%" y="661" width="0.0801%" height="15" fill="rgb(216,197,46)" fg:x="961" fg:w="1"/><text x="77.1916%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.9416%" y="645" width="0.0801%" height="15" fill="rgb(239,113,46)" fg:x="961" fg:w="1"/><text x="77.1916%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.9416%" y="629" width="0.0801%" height="15" fill="rgb(220,76,52)" fg:x="961" fg:w="1"/><text x="77.1916%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.9416%" y="613" width="0.0801%" height="15" fill="rgb(247,167,28)" fg:x="961" fg:w="1"/><text x="77.1916%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="77.0216%" y="821" width="0.0801%" height="15" fill="rgb(228,6,44)" fg:x="962" fg:w="1"/><text x="77.2716%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="77.0216%" y="805" width="0.0801%" height="15" fill="rgb(214,75,23)" fg:x="962" fg:w="1"/><text x="77.2716%" y="815.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.0216%" y="789" width="0.0801%" height="15" fill="rgb(241,211,28)" fg:x="962" fg:w="1"/><text x="77.2716%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.1017%" y="773" width="0.0801%" height="15" fill="rgb(216,147,39)" fg:x="963" fg:w="1"/><text x="77.3517%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.1017%" y="757" width="0.0801%" height="15" fill="rgb(237,121,45)" fg:x="963" fg:w="1"/><text x="77.3517%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.1017%" y="741" width="0.0801%" height="15" fill="rgb(214,115,15)" fg:x="963" fg:w="1"/><text x="77.3517%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="77.1017%" y="805" width="0.1601%" height="15" fill="rgb(253,132,27)" fg:x="963" fg:w="2"/><text x="77.3517%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="77.1017%" y="789" width="0.1601%" height="15" fill="rgb(222,56,1)" fg:x="963" fg:w="2"/><text x="77.3517%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.1817%" y="773" width="0.0801%" height="15" fill="rgb(216,99,46)" fg:x="964" fg:w="1"/><text x="77.4317%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.1817%" y="757" width="0.0801%" height="15" fill="rgb(232,1,9)" fg:x="964" fg:w="1"/><text x="77.4317%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.1817%" y="741" width="0.0801%" height="15" fill="rgb(215,41,52)" fg:x="964" fg:w="1"/><text x="77.4317%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.1817%" y="725" width="0.0801%" height="15" fill="rgb(223,107,41)" fg:x="964" fg:w="1"/><text x="77.4317%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.1817%" y="709" width="0.0801%" height="15" fill="rgb(208,151,32)" fg:x="964" fg:w="1"/><text x="77.4317%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.1817%" y="693" width="0.0801%" height="15" fill="rgb(229,32,3)" fg:x="964" fg:w="1"/><text x="77.4317%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.1817%" y="677" width="0.0801%" height="15" fill="rgb(234,186,36)" fg:x="964" fg:w="1"/><text x="77.4317%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.2618%" y="805" width="0.0801%" height="15" fill="rgb(216,9,5)" fg:x="965" fg:w="1"/><text x="77.5118%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.2618%" y="789" width="0.0801%" height="15" fill="rgb(226,151,21)" fg:x="965" fg:w="1"/><text x="77.5118%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.3419%" y="789" width="0.0801%" height="15" fill="rgb(210,130,28)" fg:x="966" fg:w="1"/><text x="77.5919%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="77.4219%" y="789" width="0.0801%" height="15" fill="rgb(239,58,31)" fg:x="967" fg:w="1"/><text x="77.6719%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.5020%" y="693" width="0.0801%" height="15" fill="rgb(213,14,0)" fg:x="968" fg:w="1"/><text x="77.7520%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.5020%" y="677" width="0.0801%" height="15" fill="rgb(228,97,38)" fg:x="968" fg:w="1"/><text x="77.7520%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.5020%" y="661" width="0.0801%" height="15" fill="rgb(248,9,13)" fg:x="968" fg:w="1"/><text x="77.7520%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.5020%" y="645" width="0.0801%" height="15" fill="rgb(233,149,17)" fg:x="968" fg:w="1"/><text x="77.7520%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.5020%" y="629" width="0.0801%" height="15" fill="rgb(233,127,53)" fg:x="968" fg:w="1"/><text x="77.7520%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.5020%" y="613" width="0.0801%" height="15" fill="rgb(207,120,37)" fg:x="968" fg:w="1"/><text x="77.7520%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.5020%" y="597" width="0.0801%" height="15" fill="rgb(210,65,38)" fg:x="968" fg:w="1"/><text x="77.7520%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.5020%" y="581" width="0.0801%" height="15" fill="rgb(229,206,39)" fg:x="968" fg:w="1"/><text x="77.7520%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.5020%" y="565" width="0.0801%" height="15" fill="rgb(237,11,35)" fg:x="968" fg:w="1"/><text x="77.7520%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.5020%" y="549" width="0.0801%" height="15" fill="rgb(237,159,38)" fg:x="968" fg:w="1"/><text x="77.7520%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.5020%" y="533" width="0.0801%" height="15" fill="rgb(239,79,36)" fg:x="968" fg:w="1"/><text x="77.7520%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.5020%" y="517" width="0.0801%" height="15" fill="rgb(231,163,51)" fg:x="968" fg:w="1"/><text x="77.7520%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.5020%" y="501" width="0.0801%" height="15" fill="rgb(226,68,29)" fg:x="968" fg:w="1"/><text x="77.7520%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.5020%" y="485" width="0.0801%" height="15" fill="rgb(250,192,3)" fg:x="968" fg:w="1"/><text x="77.7520%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.5020%" y="709" width="0.1601%" height="15" fill="rgb(206,11,13)" fg:x="968" fg:w="2"/><text x="77.7520%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.5821%" y="693" width="0.0801%" height="15" fill="rgb(234,128,26)" fg:x="969" fg:w="1"/><text x="77.8321%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="77.5020%" y="757" width="0.2402%" height="15" fill="rgb(226,134,12)" fg:x="968" fg:w="3"/><text x="77.7520%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="77.5020%" y="741" width="0.2402%" height="15" fill="rgb(240,60,15)" fg:x="968" fg:w="3"/><text x="77.7520%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="77.5020%" y="725" width="0.2402%" height="15" fill="rgb(222,112,11)" fg:x="968" fg:w="3"/><text x="77.7520%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.6621%" y="709" width="0.0801%" height="15" fill="rgb(231,207,44)" fg:x="970" fg:w="1"/><text x="77.9121%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.6621%" y="693" width="0.0801%" height="15" fill="rgb(250,222,54)" fg:x="970" fg:w="1"/><text x="77.9121%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.6621%" y="677" width="0.0801%" height="15" fill="rgb(243,223,15)" fg:x="970" fg:w="1"/><text x="77.9121%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.6621%" y="661" width="0.0801%" height="15" fill="rgb(239,2,5)" fg:x="970" fg:w="1"/><text x="77.9121%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.6621%" y="645" width="0.0801%" height="15" fill="rgb(241,83,27)" fg:x="970" fg:w="1"/><text x="77.9121%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.6621%" y="629" width="0.0801%" height="15" fill="rgb(223,175,51)" fg:x="970" fg:w="1"/><text x="77.9121%" y="639.50"></text></g><g><title>plugins_core::build::Build::holding (15 samples, 1.20%)</title><rect x="76.6213%" y="837" width="1.2010%" height="15" fill="rgb(209,11,47)" fg:x="957" fg:w="15"/><text x="76.8713%" y="847.50"></text></g><g><title>plugins_core::tools::set_container (9 samples, 0.72%)</title><rect x="77.1017%" y="821" width="0.7206%" height="15" fill="rgb(249,60,43)" fg:x="963" fg:w="9"/><text x="77.3517%" y="831.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="77.3419%" y="805" width="0.4804%" height="15" fill="rgb(244,84,47)" fg:x="966" fg:w="6"/><text x="77.5919%" y="815.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="77.5020%" y="789" width="0.3203%" height="15" fill="rgb(241,110,24)" fg:x="968" fg:w="4"/><text x="77.7520%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="77.5020%" y="773" width="0.3203%" height="15" fill="rgb(236,79,1)" fg:x="968" fg:w="4"/><text x="77.7520%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.7422%" y="757" width="0.0801%" height="15" fill="rgb(210,152,4)" fg:x="971" fg:w="1"/><text x="77.9922%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.7422%" y="741" width="0.0801%" height="15" fill="rgb(218,71,19)" fg:x="971" fg:w="1"/><text x="77.9922%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.7422%" y="725" width="0.0801%" height="15" fill="rgb(207,161,51)" fg:x="971" fg:w="1"/><text x="77.9922%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7422%" y="709" width="0.0801%" height="15" fill="rgb(219,84,54)" fg:x="971" fg:w="1"/><text x="77.9922%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7422%" y="693" width="0.0801%" height="15" fill="rgb(243,172,34)" fg:x="971" fg:w="1"/><text x="77.9922%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7422%" y="677" width="0.0801%" height="15" fill="rgb(233,181,1)" fg:x="971" fg:w="1"/><text x="77.9922%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7422%" y="661" width="0.0801%" height="15" fill="rgb(236,21,18)" fg:x="971" fg:w="1"/><text x="77.9922%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.7422%" y="645" width="0.0801%" height="15" fill="rgb(244,165,15)" fg:x="971" fg:w="1"/><text x="77.9922%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7422%" y="629" width="0.0801%" height="15" fill="rgb(235,75,19)" fg:x="971" fg:w="1"/><text x="77.9922%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7422%" y="613" width="0.0801%" height="15" fill="rgb(217,229,29)" fg:x="971" fg:w="1"/><text x="77.9922%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7422%" y="597" width="0.0801%" height="15" fill="rgb(250,200,19)" fg:x="971" fg:w="1"/><text x="77.9922%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7422%" y="581" width="0.0801%" height="15" fill="rgb(218,195,36)" fg:x="971" fg:w="1"/><text x="77.9922%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7422%" y="565" width="0.0801%" height="15" fill="rgb(206,183,32)" fg:x="971" fg:w="1"/><text x="77.9922%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.8223%" y="757" width="0.0801%" height="15" fill="rgb(235,151,53)" fg:x="972" fg:w="1"/><text x="78.0723%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.8223%" y="741" width="0.0801%" height="15" fill="rgb(244,120,37)" fg:x="972" fg:w="1"/><text x="78.0723%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.8223%" y="725" width="0.0801%" height="15" fill="rgb(209,96,41)" fg:x="972" fg:w="1"/><text x="78.0723%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.8223%" y="709" width="0.0801%" height="15" fill="rgb(208,229,20)" fg:x="972" fg:w="1"/><text x="78.0723%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.8223%" y="693" width="0.0801%" height="15" fill="rgb(208,153,33)" fg:x="972" fg:w="1"/><text x="78.0723%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.8223%" y="677" width="0.0801%" height="15" fill="rgb(223,196,8)" fg:x="972" fg:w="1"/><text x="78.0723%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.8223%" y="661" width="0.0801%" height="15" fill="rgb(241,75,49)" fg:x="972" fg:w="1"/><text x="78.0723%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.8223%" y="645" width="0.0801%" height="15" fill="rgb(212,52,42)" fg:x="972" fg:w="1"/><text x="78.0723%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.8223%" y="629" width="0.0801%" height="15" fill="rgb(220,148,43)" fg:x="972" fg:w="1"/><text x="78.0723%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.8223%" y="613" width="0.0801%" height="15" fill="rgb(228,88,15)" fg:x="972" fg:w="1"/><text x="78.0723%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.8223%" y="597" width="0.0801%" height="15" fill="rgb(213,87,14)" fg:x="972" fg:w="1"/><text x="78.0723%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.8223%" y="581" width="0.0801%" height="15" fill="rgb(220,198,31)" fg:x="972" fg:w="1"/><text x="78.0723%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.8223%" y="565" width="0.0801%" height="15" fill="rgb(223,165,38)" fg:x="972" fg:w="1"/><text x="78.0723%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.8223%" y="549" width="0.0801%" height="15" fill="rgb(247,56,48)" fg:x="972" fg:w="1"/><text x="78.0723%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.8223%" y="533" width="0.0801%" height="15" fill="rgb(222,150,13)" fg:x="972" fg:w="1"/><text x="78.0723%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.8223%" y="517" width="0.0801%" height="15" fill="rgb(218,214,11)" fg:x="972" fg:w="1"/><text x="78.0723%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="77.8223%" y="837" width="0.1601%" height="15" fill="rgb(246,111,16)" fg:x="972" fg:w="2"/><text x="78.0723%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="77.8223%" y="821" width="0.1601%" height="15" fill="rgb(250,127,26)" fg:x="972" fg:w="2"/><text x="78.0723%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="77.8223%" y="805" width="0.1601%" height="15" fill="rgb(237,156,23)" fg:x="972" fg:w="2"/><text x="78.0723%" y="815.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="77.8223%" y="789" width="0.1601%" height="15" fill="rgb(215,143,51)" fg:x="972" fg:w="2"/><text x="78.0723%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.8223%" y="773" width="0.1601%" height="15" fill="rgb(209,119,39)" fg:x="972" fg:w="2"/><text x="78.0723%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.9023%" y="757" width="0.0801%" height="15" fill="rgb(228,181,16)" fg:x="973" fg:w="1"/><text x="78.1523%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9023%" y="741" width="0.0801%" height="15" fill="rgb(236,113,51)" fg:x="973" fg:w="1"/><text x="78.1523%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.9023%" y="725" width="0.0801%" height="15" fill="rgb(223,132,1)" fg:x="973" fg:w="1"/><text x="78.1523%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9023%" y="709" width="0.0801%" height="15" fill="rgb(227,4,54)" fg:x="973" fg:w="1"/><text x="78.1523%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.9023%" y="693" width="0.0801%" height="15" fill="rgb(254,72,52)" fg:x="973" fg:w="1"/><text x="78.1523%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9023%" y="677" width="0.0801%" height="15" fill="rgb(252,104,52)" fg:x="973" fg:w="1"/><text x="78.1523%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.9023%" y="661" width="0.0801%" height="15" fill="rgb(251,146,26)" fg:x="973" fg:w="1"/><text x="78.1523%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9023%" y="645" width="0.0801%" height="15" fill="rgb(214,146,19)" fg:x="973" fg:w="1"/><text x="78.1523%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.9023%" y="629" width="0.0801%" height="15" fill="rgb(242,222,1)" fg:x="973" fg:w="1"/><text x="78.1523%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.9023%" y="613" width="0.0801%" height="15" fill="rgb(220,178,32)" fg:x="973" fg:w="1"/><text x="78.1523%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="77.9023%" y="597" width="0.0801%" height="15" fill="rgb(220,50,48)" fg:x="973" fg:w="1"/><text x="78.1523%" y="607.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="77.9023%" y="581" width="0.0801%" height="15" fill="rgb(207,117,22)" fg:x="973" fg:w="1"/><text x="78.1523%" y="591.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="77.9023%" y="565" width="0.0801%" height="15" fill="rgb(247,195,50)" fg:x="973" fg:w="1"/><text x="78.1523%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="77.9824%" y="805" width="0.0801%" height="15" fill="rgb(206,50,39)" fg:x="974" fg:w="1"/><text x="78.2324%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0624%" y="773" width="0.0801%" height="15" fill="rgb(236,141,29)" fg:x="975" fg:w="1"/><text x="78.3124%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0624%" y="757" width="0.0801%" height="15" fill="rgb(247,18,44)" fg:x="975" fg:w="1"/><text x="78.3124%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0624%" y="741" width="0.0801%" height="15" fill="rgb(243,179,46)" fg:x="975" fg:w="1"/><text x="78.3124%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.0624%" y="725" width="0.0801%" height="15" fill="rgb(241,178,53)" fg:x="975" fg:w="1"/><text x="78.3124%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.0624%" y="709" width="0.0801%" height="15" fill="rgb(236,100,9)" fg:x="975" fg:w="1"/><text x="78.3124%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.0624%" y="693" width="0.0801%" height="15" fill="rgb(208,180,29)" fg:x="975" fg:w="1"/><text x="78.3124%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.0624%" y="677" width="0.0801%" height="15" fill="rgb(241,204,36)" fg:x="975" fg:w="1"/><text x="78.3124%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.0624%" y="661" width="0.0801%" height="15" fill="rgb(248,106,5)" fg:x="975" fg:w="1"/><text x="78.3124%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.0624%" y="645" width="0.0801%" height="15" fill="rgb(245,13,49)" fg:x="975" fg:w="1"/><text x="78.3124%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.0624%" y="629" width="0.0801%" height="15" fill="rgb(221,209,34)" fg:x="975" fg:w="1"/><text x="78.3124%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.0624%" y="613" width="0.0801%" height="15" fill="rgb(224,83,31)" fg:x="975" fg:w="1"/><text x="78.3124%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.0624%" y="597" width="0.0801%" height="15" fill="rgb(218,63,22)" fg:x="975" fg:w="1"/><text x="78.3124%" y="607.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="78.0624%" y="581" width="0.0801%" height="15" fill="rgb(214,167,5)" fg:x="975" fg:w="1"/><text x="78.3124%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="78.0624%" y="565" width="0.0801%" height="15" fill="rgb(243,13,0)" fg:x="975" fg:w="1"/><text x="78.3124%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="77.9824%" y="837" width="0.2402%" height="15" fill="rgb(237,20,46)" fg:x="974" fg:w="3"/><text x="78.2324%" y="847.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="77.9824%" y="821" width="0.2402%" height="15" fill="rgb(240,94,48)" fg:x="974" fg:w="3"/><text x="78.2324%" y="831.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="78.0624%" y="805" width="0.1601%" height="15" fill="rgb(205,160,17)" fg:x="975" fg:w="2"/><text x="78.3124%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="78.0624%" y="789" width="0.1601%" height="15" fill="rgb(234,42,33)" fg:x="975" fg:w="2"/><text x="78.3124%" y="799.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.1425%" y="773" width="0.0801%" height="15" fill="rgb(215,166,5)" fg:x="976" fg:w="1"/><text x="78.3925%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.3026%" y="805" width="0.0801%" height="15" fill="rgb(215,9,6)" fg:x="978" fg:w="1"/><text x="78.5526%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="78.3026%" y="789" width="0.0801%" height="15" fill="rgb(212,53,6)" fg:x="978" fg:w="1"/><text x="78.5526%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.3026%" y="773" width="0.0801%" height="15" fill="rgb(249,157,19)" fg:x="978" fg:w="1"/><text x="78.5526%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="78.2226%" y="821" width="0.2402%" height="15" fill="rgb(222,212,45)" fg:x="977" fg:w="3"/><text x="78.4726%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="78.3827%" y="805" width="0.0801%" height="15" fill="rgb(232,155,17)" fg:x="979" fg:w="1"/><text x="78.6327%" y="815.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="78.3827%" y="789" width="0.0801%" height="15" fill="rgb(212,159,50)" fg:x="979" fg:w="1"/><text x="78.6327%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="78.3827%" y="773" width="0.0801%" height="15" fill="rgb(247,71,8)" fg:x="979" fg:w="1"/><text x="78.6327%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="78.3827%" y="757" width="0.0801%" height="15" fill="rgb(239,128,29)" fg:x="979" fg:w="1"/><text x="78.6327%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="78.3827%" y="741" width="0.0801%" height="15" fill="rgb(227,117,11)" fg:x="979" fg:w="1"/><text x="78.6327%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.3827%" y="725" width="0.0801%" height="15" fill="rgb(247,183,4)" fg:x="979" fg:w="1"/><text x="78.6327%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.3827%" y="709" width="0.0801%" height="15" fill="rgb(211,161,41)" fg:x="979" fg:w="1"/><text x="78.6327%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4628%" y="677" width="0.0801%" height="15" fill="rgb(250,157,52)" fg:x="980" fg:w="1"/><text x="78.7128%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.4628%" y="661" width="0.0801%" height="15" fill="rgb(249,118,26)" fg:x="980" fg:w="1"/><text x="78.7128%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.4628%" y="645" width="0.0801%" height="15" fill="rgb(234,52,37)" fg:x="980" fg:w="1"/><text x="78.7128%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.4628%" y="629" width="0.0801%" height="15" fill="rgb(237,188,45)" fg:x="980" fg:w="1"/><text x="78.7128%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.4628%" y="613" width="0.0801%" height="15" fill="rgb(241,3,40)" fg:x="980" fg:w="1"/><text x="78.7128%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.4628%" y="597" width="0.0801%" height="15" fill="rgb(246,192,7)" fg:x="980" fg:w="1"/><text x="78.7128%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.4628%" y="581" width="0.0801%" height="15" fill="rgb(206,168,17)" fg:x="980" fg:w="1"/><text x="78.7128%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.4628%" y="565" width="0.0801%" height="15" fill="rgb(208,124,33)" fg:x="980" fg:w="1"/><text x="78.7128%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.4628%" y="549" width="0.0801%" height="15" fill="rgb(226,186,11)" fg:x="980" fg:w="1"/><text x="78.7128%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.4628%" y="533" width="0.0801%" height="15" fill="rgb(218,223,1)" fg:x="980" fg:w="1"/><text x="78.7128%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.4628%" y="517" width="0.0801%" height="15" fill="rgb(254,65,21)" fg:x="980" fg:w="1"/><text x="78.7128%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.4628%" y="501" width="0.0801%" height="15" fill="rgb(239,63,32)" fg:x="980" fg:w="1"/><text x="78.7128%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.4628%" y="485" width="0.0801%" height="15" fill="rgb(219,85,29)" fg:x="980" fg:w="1"/><text x="78.7128%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.4628%" y="469" width="0.0801%" height="15" fill="rgb(246,74,32)" fg:x="980" fg:w="1"/><text x="78.7128%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.4628%" y="725" width="0.1601%" height="15" fill="rgb(251,20,52)" fg:x="980" fg:w="2"/><text x="78.7128%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.4628%" y="709" width="0.1601%" height="15" fill="rgb(222,160,46)" fg:x="980" fg:w="2"/><text x="78.7128%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="78.4628%" y="693" width="0.1601%" height="15" fill="rgb(230,68,24)" fg:x="980" fg:w="2"/><text x="78.7128%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.5428%" y="677" width="0.0801%" height="15" fill="rgb(233,83,32)" fg:x="981" fg:w="1"/><text x="78.7928%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="78.4628%" y="773" width="0.2402%" height="15" fill="rgb(253,79,36)" fg:x="980" fg:w="3"/><text x="78.7128%" y="783.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="78.4628%" y="757" width="0.2402%" height="15" fill="rgb(224,125,51)" fg:x="980" fg:w="3"/><text x="78.7128%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="78.4628%" y="741" width="0.2402%" height="15" fill="rgb(254,158,3)" fg:x="980" fg:w="3"/><text x="78.7128%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.6229%" y="725" width="0.0801%" height="15" fill="rgb(243,226,3)" fg:x="982" fg:w="1"/><text x="78.8729%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.6229%" y="709" width="0.0801%" height="15" fill="rgb(208,37,10)" fg:x="982" fg:w="1"/><text x="78.8729%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.6229%" y="693" width="0.0801%" height="15" fill="rgb(227,35,6)" fg:x="982" fg:w="1"/><text x="78.8729%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.6229%" y="677" width="0.0801%" height="15" fill="rgb(236,35,38)" fg:x="982" fg:w="1"/><text x="78.8729%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.6229%" y="661" width="0.0801%" height="15" fill="rgb(247,165,26)" fg:x="982" fg:w="1"/><text x="78.8729%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.7030%" y="725" width="0.0801%" height="15" fill="rgb(251,131,20)" fg:x="983" fg:w="1"/><text x="78.9530%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.7030%" y="709" width="0.0801%" height="15" fill="rgb(248,168,52)" fg:x="983" fg:w="1"/><text x="78.9530%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.7030%" y="693" width="0.0801%" height="15" fill="rgb(241,220,45)" fg:x="983" fg:w="1"/><text x="78.9530%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.7030%" y="677" width="0.0801%" height="15" fill="rgb(240,85,44)" fg:x="983" fg:w="1"/><text x="78.9530%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.7030%" y="661" width="0.0801%" height="15" fill="rgb(223,69,47)" fg:x="983" fg:w="1"/><text x="78.9530%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="78.4628%" y="805" width="0.4003%" height="15" fill="rgb(221,209,17)" fg:x="980" fg:w="5"/><text x="78.7128%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="78.4628%" y="789" width="0.4003%" height="15" fill="rgb(224,194,24)" fg:x="980" fg:w="5"/><text x="78.7128%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="78.7030%" y="773" width="0.1601%" height="15" fill="rgb(249,43,24)" fg:x="983" fg:w="2"/><text x="78.9530%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="78.7030%" y="757" width="0.1601%" height="15" fill="rgb(245,78,29)" fg:x="983" fg:w="2"/><text x="78.9530%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.7030%" y="741" width="0.1601%" height="15" fill="rgb(241,167,34)" fg:x="983" fg:w="2"/><text x="78.9530%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.7830%" y="725" width="0.0801%" height="15" fill="rgb(225,91,27)" fg:x="984" fg:w="1"/><text x="79.0330%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.7830%" y="709" width="0.0801%" height="15" fill="rgb(249,82,49)" fg:x="984" fg:w="1"/><text x="79.0330%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.7830%" y="693" width="0.0801%" height="15" fill="rgb(215,90,36)" fg:x="984" fg:w="1"/><text x="79.0330%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.7830%" y="677" width="0.0801%" height="15" fill="rgb(209,128,1)" fg:x="984" fg:w="1"/><text x="79.0330%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.7830%" y="661" width="0.0801%" height="15" fill="rgb(233,184,1)" fg:x="984" fg:w="1"/><text x="79.0330%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.7830%" y="645" width="0.0801%" height="15" fill="rgb(240,59,32)" fg:x="984" fg:w="1"/><text x="79.0330%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.7830%" y="629" width="0.0801%" height="15" fill="rgb(249,163,0)" fg:x="984" fg:w="1"/><text x="79.0330%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8631%" y="709" width="0.0801%" height="15" fill="rgb(249,220,13)" fg:x="985" fg:w="1"/><text x="79.1131%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8631%" y="693" width="0.0801%" height="15" fill="rgb(235,127,52)" fg:x="985" fg:w="1"/><text x="79.1131%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8631%" y="677" width="0.0801%" height="15" fill="rgb(229,172,26)" fg:x="985" fg:w="1"/><text x="79.1131%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.8631%" y="661" width="0.0801%" height="15" fill="rgb(217,37,29)" fg:x="985" fg:w="1"/><text x="79.1131%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.8631%" y="645" width="0.0801%" height="15" fill="rgb(208,66,47)" fg:x="985" fg:w="1"/><text x="79.1131%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="78.8631%" y="757" width="0.1601%" height="15" fill="rgb(221,99,19)" fg:x="985" fg:w="2"/><text x="79.1131%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="78.8631%" y="741" width="0.1601%" height="15" fill="rgb(214,149,49)" fg:x="985" fg:w="2"/><text x="79.1131%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="78.8631%" y="725" width="0.1601%" height="15" fill="rgb(229,91,37)" fg:x="985" fg:w="2"/><text x="79.1131%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.9432%" y="709" width="0.0801%" height="15" fill="rgb(207,159,48)" fg:x="986" fg:w="1"/><text x="79.1932%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.9432%" y="693" width="0.0801%" height="15" fill="rgb(209,125,46)" fg:x="986" fg:w="1"/><text x="79.1932%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.9432%" y="677" width="0.0801%" height="15" fill="rgb(211,188,18)" fg:x="986" fg:w="1"/><text x="79.1932%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.9432%" y="661" width="0.0801%" height="15" fill="rgb(207,203,34)" fg:x="986" fg:w="1"/><text x="79.1932%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.9432%" y="645" width="0.0801%" height="15" fill="rgb(245,182,16)" fg:x="986" fg:w="1"/><text x="79.1932%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.9432%" y="629" width="0.0801%" height="15" fill="rgb(210,66,30)" fg:x="986" fg:w="1"/><text x="79.1932%" y="639.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="78.9432%" y="613" width="0.0801%" height="15" fill="rgb(230,110,14)" fg:x="986" fg:w="1"/><text x="79.1932%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (75 samples, 6.00%)</title><rect x="73.0985%" y="853" width="6.0048%" height="15" fill="rgb(242,198,32)" fg:x="913" fg:w="75"/><text x="73.3485%" y="863.50">plugins_..</text></g><g><title>plugins_core::build::Build::occupying (11 samples, 0.88%)</title><rect x="78.2226%" y="837" width="0.8807%" height="15" fill="rgb(213,45,23)" fg:x="977" fg:w="11"/><text x="78.4726%" y="847.50"></text></g><g><title>plugins_core::tools::set_occupying (8 samples, 0.64%)</title><rect x="78.4628%" y="821" width="0.6405%" height="15" fill="rgb(205,76,9)" fg:x="980" fg:w="8"/><text x="78.7128%" y="831.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (3 samples, 0.24%)</title><rect x="78.8631%" y="805" width="0.2402%" height="15" fill="rgb(250,200,25)" fg:x="985" fg:w="3"/><text x="79.1131%" y="815.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="78.8631%" y="789" width="0.2402%" height="15" fill="rgb(221,161,23)" fg:x="985" fg:w="3"/><text x="79.1131%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="78.8631%" y="773" width="0.2402%" height="15" fill="rgb(226,135,48)" fg:x="985" fg:w="3"/><text x="79.1131%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="79.0232%" y="757" width="0.0801%" height="15" fill="rgb(228,33,6)" fg:x="987" fg:w="1"/><text x="79.2732%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.0232%" y="741" width="0.0801%" height="15" fill="rgb(237,224,9)" fg:x="987" fg:w="1"/><text x="79.2732%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.0232%" y="725" width="0.0801%" height="15" fill="rgb(251,61,40)" fg:x="987" fg:w="1"/><text x="79.2732%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.0232%" y="709" width="0.0801%" height="15" fill="rgb(220,222,2)" fg:x="987" fg:w="1"/><text x="79.2732%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="79.1033%" y="821" width="0.0801%" height="15" fill="rgb(238,4,8)" fg:x="988" fg:w="1"/><text x="79.3533%" y="831.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="79.1033%" y="805" width="0.0801%" height="15" fill="rgb(240,153,3)" fg:x="988" fg:w="1"/><text x="79.3533%" y="815.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="79.1033%" y="789" width="0.0801%" height="15" fill="rgb(245,29,24)" fg:x="988" fg:w="1"/><text x="79.3533%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.1033%" y="773" width="0.0801%" height="15" fill="rgb(231,220,37)" fg:x="988" fg:w="1"/><text x="79.3533%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.1033%" y="757" width="0.0801%" height="15" fill="rgb(245,33,10)" fg:x="988" fg:w="1"/><text x="79.3533%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.1033%" y="741" width="0.0801%" height="15" fill="rgb(220,227,43)" fg:x="988" fg:w="1"/><text x="79.3533%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.1033%" y="725" width="0.0801%" height="15" fill="rgb(215,183,54)" fg:x="988" fg:w="1"/><text x="79.3533%" y="735.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="79.1033%" y="709" width="0.0801%" height="15" fill="rgb(242,80,26)" fg:x="988" fg:w="1"/><text x="79.3533%" y="719.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="79.1033%" y="693" width="0.0801%" height="15" fill="rgb(206,172,49)" fg:x="988" fg:w="1"/><text x="79.3533%" y="703.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="79.1033%" y="853" width="0.1601%" height="15" fill="rgb(249,0,10)" fg:x="988" fg:w="2"/><text x="79.3533%" y="863.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="79.1033%" y="837" width="0.1601%" height="15" fill="rgb(246,171,19)" fg:x="988" fg:w="2"/><text x="79.3533%" y="847.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="79.1833%" y="821" width="0.0801%" height="15" fill="rgb(236,25,43)" fg:x="989" fg:w="1"/><text x="79.4333%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.1833%" y="805" width="0.0801%" height="15" fill="rgb(225,146,20)" fg:x="989" fg:w="1"/><text x="79.4333%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.1833%" y="789" width="0.0801%" height="15" fill="rgb(243,50,39)" fg:x="989" fg:w="1"/><text x="79.4333%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.1833%" y="773" width="0.0801%" height="15" fill="rgb(239,153,27)" fg:x="989" fg:w="1"/><text x="79.4333%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.1833%" y="757" width="0.0801%" height="15" fill="rgb(208,164,31)" fg:x="989" fg:w="1"/><text x="79.4333%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.1833%" y="741" width="0.0801%" height="15" fill="rgb(231,32,38)" fg:x="989" fg:w="1"/><text x="79.4333%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.3435%" y="805" width="0.0801%" height="15" fill="rgb(247,158,12)" fg:x="991" fg:w="1"/><text x="79.5935%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.3435%" y="789" width="0.0801%" height="15" fill="rgb(254,126,16)" fg:x="991" fg:w="1"/><text x="79.5935%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.3435%" y="773" width="0.0801%" height="15" fill="rgb(246,12,32)" fg:x="991" fg:w="1"/><text x="79.5935%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.3435%" y="757" width="0.0801%" height="15" fill="rgb(245,190,44)" fg:x="991" fg:w="1"/><text x="79.5935%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.3435%" y="741" width="0.0801%" height="15" fill="rgb(253,148,49)" fg:x="991" fg:w="1"/><text x="79.5935%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.3435%" y="725" width="0.0801%" height="15" fill="rgb(232,193,44)" fg:x="991" fg:w="1"/><text x="79.5935%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.3435%" y="709" width="0.0801%" height="15" fill="rgb(212,67,50)" fg:x="991" fg:w="1"/><text x="79.5935%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="79.3435%" y="693" width="0.0801%" height="15" fill="rgb(235,109,24)" fg:x="991" fg:w="1"/><text x="79.5935%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.3435%" y="677" width="0.0801%" height="15" fill="rgb(242,228,23)" fg:x="991" fg:w="1"/><text x="79.5935%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.3435%" y="661" width="0.0801%" height="15" fill="rgb(232,48,19)" fg:x="991" fg:w="1"/><text x="79.5935%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.3435%" y="645" width="0.0801%" height="15" fill="rgb(221,167,25)" fg:x="991" fg:w="1"/><text x="79.5935%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="79.2634%" y="821" width="0.3203%" height="15" fill="rgb(220,29,38)" fg:x="990" fg:w="4"/><text x="79.5134%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="79.4235%" y="805" width="0.1601%" height="15" fill="rgb(245,95,26)" fg:x="992" fg:w="2"/><text x="79.6735%" y="815.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="79.4235%" y="789" width="0.1601%" height="15" fill="rgb(227,189,38)" fg:x="992" fg:w="2"/><text x="79.6735%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="79.4235%" y="773" width="0.1601%" height="15" fill="rgb(231,212,22)" fg:x="992" fg:w="2"/><text x="79.6735%" y="783.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="79.4235%" y="757" width="0.1601%" height="15" fill="rgb(246,25,46)" fg:x="992" fg:w="2"/><text x="79.6735%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="79.4235%" y="741" width="0.1601%" height="15" fill="rgb(218,90,32)" fg:x="992" fg:w="2"/><text x="79.6735%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="79.5036%" y="725" width="0.0801%" height="15" fill="rgb(207,89,34)" fg:x="993" fg:w="1"/><text x="79.7536%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.5036%" y="709" width="0.0801%" height="15" fill="rgb(222,30,54)" fg:x="993" fg:w="1"/><text x="79.7536%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="79.5036%" y="693" width="0.0801%" height="15" fill="rgb(224,229,32)" fg:x="993" fg:w="1"/><text x="79.7536%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.5036%" y="677" width="0.0801%" height="15" fill="rgb(209,188,44)" fg:x="993" fg:w="1"/><text x="79.7536%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.5036%" y="661" width="0.0801%" height="15" fill="rgb(215,174,23)" fg:x="993" fg:w="1"/><text x="79.7536%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.5036%" y="645" width="0.0801%" height="15" fill="rgb(242,104,18)" fg:x="993" fg:w="1"/><text x="79.7536%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.5837%" y="789" width="0.0801%" height="15" fill="rgb(240,173,53)" fg:x="994" fg:w="1"/><text x="79.8337%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.5837%" y="773" width="0.0801%" height="15" fill="rgb(240,105,45)" fg:x="994" fg:w="1"/><text x="79.8337%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.5837%" y="757" width="0.0801%" height="15" fill="rgb(252,164,29)" fg:x="994" fg:w="1"/><text x="79.8337%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.5837%" y="741" width="0.0801%" height="15" fill="rgb(217,17,6)" fg:x="994" fg:w="1"/><text x="79.8337%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.5837%" y="725" width="0.0801%" height="15" fill="rgb(245,27,23)" fg:x="994" fg:w="1"/><text x="79.8337%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.5837%" y="709" width="0.0801%" height="15" fill="rgb(239,73,33)" fg:x="994" fg:w="1"/><text x="79.8337%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.5837%" y="693" width="0.0801%" height="15" fill="rgb(209,140,21)" fg:x="994" fg:w="1"/><text x="79.8337%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.5837%" y="677" width="0.0801%" height="15" fill="rgb(206,36,53)" fg:x="994" fg:w="1"/><text x="79.8337%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.5837%" y="661" width="0.0801%" height="15" fill="rgb(238,134,8)" fg:x="994" fg:w="1"/><text x="79.8337%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.5837%" y="645" width="0.0801%" height="15" fill="rgb(209,3,20)" fg:x="994" fg:w="1"/><text x="79.8337%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.5837%" y="629" width="0.0801%" height="15" fill="rgb(208,101,32)" fg:x="994" fg:w="1"/><text x="79.8337%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.5837%" y="613" width="0.0801%" height="15" fill="rgb(253,56,38)" fg:x="994" fg:w="1"/><text x="79.8337%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.5837%" y="597" width="0.0801%" height="15" fill="rgb(209,85,49)" fg:x="994" fg:w="1"/><text x="79.8337%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.5837%" y="581" width="0.0801%" height="15" fill="rgb(234,177,21)" fg:x="994" fg:w="1"/><text x="79.8337%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.5837%" y="565" width="0.0801%" height="15" fill="rgb(250,4,6)" fg:x="994" fg:w="1"/><text x="79.8337%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.5837%" y="549" width="0.0801%" height="15" fill="rgb(240,153,10)" fg:x="994" fg:w="1"/><text x="79.8337%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (7 samples, 0.56%)</title><rect x="79.2634%" y="853" width="0.5604%" height="15" fill="rgb(205,136,51)" fg:x="990" fg:w="7"/><text x="79.5134%" y="863.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.56%)</title><rect x="79.2634%" y="837" width="0.5604%" height="15" fill="rgb(245,165,50)" fg:x="990" fg:w="7"/><text x="79.5134%" y="847.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="79.5837%" y="821" width="0.2402%" height="15" fill="rgb(211,28,10)" fg:x="994" fg:w="3"/><text x="79.8337%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="79.5837%" y="805" width="0.2402%" height="15" fill="rgb(218,155,54)" fg:x="994" fg:w="3"/><text x="79.8337%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="79.6637%" y="789" width="0.1601%" height="15" fill="rgb(254,214,30)" fg:x="995" fg:w="2"/><text x="79.9137%" y="799.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="79.6637%" y="773" width="0.1601%" height="15" fill="rgb(248,200,10)" fg:x="995" fg:w="2"/><text x="79.9137%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="79.6637%" y="757" width="0.1601%" height="15" fill="rgb(238,219,45)" fg:x="995" fg:w="2"/><text x="79.9137%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="79.6637%" y="741" width="0.1601%" height="15" fill="rgb(227,35,34)" fg:x="995" fg:w="2"/><text x="79.9137%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="79.6637%" y="725" width="0.1601%" height="15" fill="rgb(214,187,37)" fg:x="995" fg:w="2"/><text x="79.9137%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="79.8239%" y="821" width="0.0801%" height="15" fill="rgb(247,164,44)" fg:x="997" fg:w="1"/><text x="80.0739%" y="831.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="79.8239%" y="805" width="0.0801%" height="15" fill="rgb(238,198,10)" fg:x="997" fg:w="1"/><text x="80.0739%" y="815.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="79.8239%" y="789" width="0.0801%" height="15" fill="rgb(213,69,8)" fg:x="997" fg:w="1"/><text x="80.0739%" y="799.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.8239%" y="773" width="0.0801%" height="15" fill="rgb(222,82,16)" fg:x="997" fg:w="1"/><text x="80.0739%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.9039%" y="741" width="0.0801%" height="15" fill="rgb(205,172,30)" fg:x="998" fg:w="1"/><text x="80.1539%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.9039%" y="725" width="0.0801%" height="15" fill="rgb(227,39,8)" fg:x="998" fg:w="1"/><text x="80.1539%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.9039%" y="709" width="0.0801%" height="15" fill="rgb(249,10,19)" fg:x="998" fg:w="1"/><text x="80.1539%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.9039%" y="693" width="0.0801%" height="15" fill="rgb(205,158,53)" fg:x="998" fg:w="1"/><text x="80.1539%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="79.9039%" y="805" width="0.1601%" height="15" fill="rgb(237,229,35)" fg:x="998" fg:w="2"/><text x="80.1539%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="79.9039%" y="789" width="0.1601%" height="15" fill="rgb(238,129,14)" fg:x="998" fg:w="2"/><text x="80.1539%" y="799.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="79.9039%" y="773" width="0.1601%" height="15" fill="rgb(218,217,40)" fg:x="998" fg:w="2"/><text x="80.1539%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="79.9039%" y="757" width="0.1601%" height="15" fill="rgb(221,187,9)" fg:x="998" fg:w="2"/><text x="80.1539%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="79.9840%" y="741" width="0.0801%" height="15" fill="rgb(214,108,19)" fg:x="999" fg:w="1"/><text x="80.2340%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.9840%" y="725" width="0.0801%" height="15" fill="rgb(216,86,23)" fg:x="999" fg:w="1"/><text x="80.2340%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="79.9840%" y="709" width="0.0801%" height="15" fill="rgb(209,116,23)" fg:x="999" fg:w="1"/><text x="80.2340%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.9840%" y="693" width="0.0801%" height="15" fill="rgb(222,185,40)" fg:x="999" fg:w="1"/><text x="80.2340%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.9840%" y="677" width="0.0801%" height="15" fill="rgb(238,150,2)" fg:x="999" fg:w="1"/><text x="80.2340%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="79.9840%" y="661" width="0.0801%" height="15" fill="rgb(229,132,47)" fg:x="999" fg:w="1"/><text x="80.2340%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.9840%" y="645" width="0.0801%" height="15" fill="rgb(231,7,23)" fg:x="999" fg:w="1"/><text x="80.2340%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="79.9840%" y="629" width="0.0801%" height="15" fill="rgb(235,12,37)" fg:x="999" fg:w="1"/><text x="80.2340%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.9840%" y="613" width="0.0801%" height="15" fill="rgb(247,170,51)" fg:x="999" fg:w="1"/><text x="80.2340%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="79.8239%" y="837" width="0.3203%" height="15" fill="rgb(210,62,49)" fg:x="997" fg:w="4"/><text x="80.0739%" y="847.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="79.9039%" y="821" width="0.2402%" height="15" fill="rgb(248,30,8)" fg:x="998" fg:w="3"/><text x="80.1539%" y="831.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="80.0641%" y="805" width="0.0801%" height="15" fill="rgb(252,11,2)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0641%" y="789" width="0.0801%" height="15" fill="rgb(249,65,4)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.0641%" y="773" width="0.0801%" height="15" fill="rgb(217,219,7)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.0641%" y="757" width="0.0801%" height="15" fill="rgb(222,186,36)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.0641%" y="741" width="0.0801%" height="15" fill="rgb(247,184,5)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.0641%" y="725" width="0.0801%" height="15" fill="rgb(221,108,7)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.0641%" y="709" width="0.0801%" height="15" fill="rgb(209,208,22)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.0641%" y="693" width="0.0801%" height="15" fill="rgb(247,106,21)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.0641%" y="677" width="0.0801%" height="15" fill="rgb(223,2,44)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.0641%" y="661" width="0.0801%" height="15" fill="rgb(208,190,12)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.0641%" y="645" width="0.0801%" height="15" fill="rgb(250,221,0)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.0641%" y="629" width="0.0801%" height="15" fill="rgb(212,210,16)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.0641%" y="613" width="0.0801%" height="15" fill="rgb(212,224,21)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="623.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="80.1441%" y="837" width="0.0801%" height="15" fill="rgb(206,186,54)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="847.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="80.1441%" y="821" width="0.0801%" height="15" fill="rgb(213,211,25)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="831.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="80.1441%" y="805" width="0.0801%" height="15" fill="rgb(243,78,36)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="815.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (156 samples, 12.49%)</title><rect x="67.8143%" y="869" width="12.4900%" height="15" fill="rgb(236,105,24)" fg:x="847" fg:w="156"/><text x="68.0643%" y="879.50">&lt;tests::HoldingKeyI..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (6 samples, 0.48%)</title><rect x="79.8239%" y="853" width="0.4804%" height="15" fill="rgb(223,46,45)" fg:x="997" fg:w="6"/><text x="80.0739%" y="863.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="80.2242%" y="837" width="0.0801%" height="15" fill="rgb(249,65,35)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="847.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="80.2242%" y="821" width="0.0801%" height="15" fill="rgb(226,122,19)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="80.2242%" y="805" width="0.0801%" height="15" fill="rgb(253,17,37)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.2242%" y="789" width="0.0801%" height="15" fill="rgb(223,138,24)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.2242%" y="773" width="0.0801%" height="15" fill="rgb(227,89,20)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.2242%" y="757" width="0.0801%" height="15" fill="rgb(239,140,41)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="767.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="80.3042%" y="853" width="0.0801%" height="15" fill="rgb(237,29,24)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="863.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="80.3042%" y="837" width="0.0801%" height="15" fill="rgb(212,123,27)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="847.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="80.3042%" y="821" width="0.0801%" height="15" fill="rgb(236,173,10)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="831.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="80.3042%" y="805" width="0.0801%" height="15" fill="rgb(244,17,3)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="815.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="80.3042%" y="789" width="0.0801%" height="15" fill="rgb(220,73,21)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="799.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="80.3042%" y="773" width="0.0801%" height="15" fill="rgb(220,187,17)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="783.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="80.3042%" y="757" width="0.0801%" height="15" fill="rgb(236,64,13)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="767.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="80.3042%" y="741" width="0.0801%" height="15" fill="rgb(214,111,25)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="80.3843%" y="821" width="0.0801%" height="15" fill="rgb(251,123,0)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="831.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="80.3843%" y="805" width="0.0801%" height="15" fill="rgb(210,8,32)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="815.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="80.3843%" y="789" width="0.0801%" height="15" fill="rgb(221,27,44)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="80.3843%" y="773" width="0.0801%" height="15" fill="rgb(233,207,54)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.3843%" y="757" width="0.0801%" height="15" fill="rgb(219,217,1)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.3843%" y="741" width="0.0801%" height="15" fill="rgb(236,150,15)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="80.3843%" y="725" width="0.0801%" height="15" fill="rgb(244,119,54)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="80.3843%" y="709" width="0.0801%" height="15" fill="rgb(218,116,36)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.3843%" y="693" width="0.0801%" height="15" fill="rgb(215,42,32)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.3843%" y="677" width="0.0801%" height="15" fill="rgb(254,87,2)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="80.3843%" y="661" width="0.0801%" height="15" fill="rgb(241,195,45)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="80.3843%" y="645" width="0.0801%" height="15" fill="rgb(252,11,14)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.3843%" y="629" width="0.0801%" height="15" fill="rgb(233,199,43)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.3843%" y="613" width="0.0801%" height="15" fill="rgb(243,170,27)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.3843%" y="597" width="0.0801%" height="15" fill="rgb(236,178,54)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.3843%" y="581" width="0.0801%" height="15" fill="rgb(230,38,12)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="80.3843%" y="565" width="0.0801%" height="15" fill="rgb(241,44,47)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="80.3843%" y="549" width="0.0801%" height="15" fill="rgb(218,99,12)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="80.3843%" y="533" width="0.0801%" height="15" fill="rgb(211,48,36)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="80.3843%" y="517" width="0.0801%" height="15" fill="rgb(220,81,29)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="80.3843%" y="501" width="0.0801%" height="15" fill="rgb(232,121,54)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="80.3843%" y="485" width="0.0801%" height="15" fill="rgb(236,227,37)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.3843%" y="469" width="0.0801%" height="15" fill="rgb(207,43,26)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="80.3843%" y="453" width="0.0801%" height="15" fill="rgb(224,163,34)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.3843%" y="437" width="0.0801%" height="15" fill="rgb(228,127,11)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="80.3843%" y="421" width="0.0801%" height="15" fill="rgb(215,32,51)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="80.3843%" y="405" width="0.0801%" height="15" fill="rgb(206,180,37)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="80.3843%" y="389" width="0.0801%" height="15" fill="rgb(245,217,39)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.3843%" y="373" width="0.0801%" height="15" fill="rgb(237,179,18)" fg:x="1004" fg:w="1"/><text x="80.6343%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.4644%" y="805" width="0.0801%" height="15" fill="rgb(248,177,3)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.4644%" y="789" width="0.0801%" height="15" fill="rgb(208,31,45)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.4644%" y="773" width="0.0801%" height="15" fill="rgb(231,16,43)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.4644%" y="757" width="0.0801%" height="15" fill="rgb(246,12,20)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.4644%" y="741" width="0.0801%" height="15" fill="rgb(214,40,41)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.4644%" y="725" width="0.0801%" height="15" fill="rgb(225,183,42)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.4644%" y="709" width="0.0801%" height="15" fill="rgb(229,88,50)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.4644%" y="693" width="0.0801%" height="15" fill="rgb(247,34,33)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.4644%" y="677" width="0.0801%" height="15" fill="rgb(246,163,52)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.4644%" y="661" width="0.0801%" height="15" fill="rgb(251,13,27)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.4644%" y="645" width="0.0801%" height="15" fill="rgb(218,127,46)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.4644%" y="629" width="0.0801%" height="15" fill="rgb(215,155,29)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.4644%" y="613" width="0.0801%" height="15" fill="rgb(251,180,13)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="623.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.6245%" y="773" width="0.0801%" height="15" fill="rgb(246,215,19)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="80.6245%" y="757" width="0.0801%" height="15" fill="rgb(210,47,28)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.6245%" y="741" width="0.0801%" height="15" fill="rgb(231,175,40)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.6245%" y="725" width="0.0801%" height="15" fill="rgb(207,138,24)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.7046%" y="741" width="0.0801%" height="15" fill="rgb(216,44,38)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="751.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (6 samples, 0.48%)</title><rect x="80.3843%" y="837" width="0.4804%" height="15" fill="rgb(206,81,53)" fg:x="1004" fg:w="6"/><text x="80.6343%" y="847.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (5 samples, 0.40%)</title><rect x="80.4644%" y="821" width="0.4003%" height="15" fill="rgb(246,139,21)" fg:x="1005" fg:w="5"/><text x="80.7144%" y="831.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="80.5444%" y="805" width="0.3203%" height="15" fill="rgb(212,163,26)" fg:x="1006" fg:w="4"/><text x="80.7944%" y="815.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="80.5444%" y="789" width="0.3203%" height="15" fill="rgb(223,82,35)" fg:x="1006" fg:w="4"/><text x="80.7944%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="80.7046%" y="773" width="0.1601%" height="15" fill="rgb(224,76,13)" fg:x="1008" fg:w="2"/><text x="80.9546%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.7046%" y="757" width="0.1601%" height="15" fill="rgb(240,2,40)" fg:x="1008" fg:w="2"/><text x="80.9546%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="80.7846%" y="741" width="0.0801%" height="15" fill="rgb(232,188,36)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="751.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="80.7846%" y="725" width="0.0801%" height="15" fill="rgb(249,34,46)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="735.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="80.7846%" y="709" width="0.0801%" height="15" fill="rgb(226,99,19)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.7846%" y="693" width="0.0801%" height="15" fill="rgb(207,78,52)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.7846%" y="677" width="0.0801%" height="15" fill="rgb(241,119,8)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.7846%" y="661" width="0.0801%" height="15" fill="rgb(238,31,9)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Raised&gt; (1 samples, 0.08%)</title><rect x="80.8647%" y="837" width="0.0801%" height="15" fill="rgb(223,165,6)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="80.8647%" y="821" width="0.0801%" height="15" fill="rgb(227,228,21)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="831.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.8647%" y="805" width="0.0801%" height="15" fill="rgb(206,188,51)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="80.9448%" y="805" width="0.0801%" height="15" fill="rgb(225,207,23)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.9448%" y="789" width="0.0801%" height="15" fill="rgb(232,197,54)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="799.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.9448%" y="773" width="0.0801%" height="15" fill="rgb(229,149,21)" fg:x="1011" fg:w="1"/><text x="81.1948%" y="783.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="81.0248%" y="773" width="0.1601%" height="15" fill="rgb(209,197,1)" fg:x="1012" fg:w="2"/><text x="81.2748%" y="783.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="81.0248%" y="757" width="0.1601%" height="15" fill="rgb(227,82,17)" fg:x="1012" fg:w="2"/><text x="81.2748%" y="767.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.0248%" y="741" width="0.1601%" height="15" fill="rgb(237,201,43)" fg:x="1012" fg:w="2"/><text x="81.2748%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.1049%" y="725" width="0.0801%" height="15" fill="rgb(221,91,37)" fg:x="1013" fg:w="1"/><text x="81.3549%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="81.1049%" y="709" width="0.0801%" height="15" fill="rgb(239,35,7)" fg:x="1013" fg:w="1"/><text x="81.3549%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.1849%" y="757" width="0.0801%" height="15" fill="rgb(234,145,45)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="767.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.1849%" y="741" width="0.0801%" height="15" fill="rgb(214,151,47)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.1849%" y="725" width="0.0801%" height="15" fill="rgb(248,62,54)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.1849%" y="709" width="0.0801%" height="15" fill="rgb(236,99,21)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="81.2650%" y="757" width="0.1601%" height="15" fill="rgb(223,94,43)" fg:x="1015" fg:w="2"/><text x="81.5150%" y="767.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.3451%" y="741" width="0.0801%" height="15" fill="rgb(214,66,6)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.3451%" y="725" width="0.0801%" height="15" fill="rgb(231,152,46)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.3451%" y="709" width="0.0801%" height="15" fill="rgb(254,0,48)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="81.4251%" y="741" width="0.1601%" height="15" fill="rgb(225,136,42)" fg:x="1017" fg:w="2"/><text x="81.6751%" y="751.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.4251%" y="725" width="0.1601%" height="15" fill="rgb(231,194,28)" fg:x="1017" fg:w="2"/><text x="81.6751%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="81.4251%" y="709" width="0.1601%" height="15" fill="rgb(248,141,22)" fg:x="1017" fg:w="2"/><text x="81.6751%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="81.4251%" y="693" width="0.1601%" height="15" fill="rgb(222,133,1)" fg:x="1017" fg:w="2"/><text x="81.6751%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="81.4251%" y="677" width="0.1601%" height="15" fill="rgb(222,50,8)" fg:x="1017" fg:w="2"/><text x="81.6751%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="81.4251%" y="661" width="0.1601%" height="15" fill="rgb(215,67,27)" fg:x="1017" fg:w="2"/><text x="81.6751%" y="671.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="81.4251%" y="645" width="0.1601%" height="15" fill="rgb(220,102,37)" fg:x="1017" fg:w="2"/><text x="81.6751%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.5853%" y="709" width="0.0801%" height="15" fill="rgb(222,64,25)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.5853%" y="693" width="0.0801%" height="15" fill="rgb(215,40,16)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.5853%" y="677" width="0.0801%" height="15" fill="rgb(252,171,3)" fg:x="1019" fg:w="1"/><text x="81.8353%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.6653%" y="693" width="0.0801%" height="15" fill="rgb(252,199,51)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.6653%" y="677" width="0.0801%" height="15" fill="rgb(244,42,10)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.6653%" y="661" width="0.0801%" height="15" fill="rgb(243,169,37)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.6653%" y="645" width="0.0801%" height="15" fill="rgb(241,140,9)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.6653%" y="629" width="0.0801%" height="15" fill="rgb(241,66,40)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.6653%" y="613" width="0.0801%" height="15" fill="rgb(220,50,41)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.6653%" y="597" width="0.0801%" height="15" fill="rgb(214,104,9)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.6653%" y="581" width="0.0801%" height="15" fill="rgb(241,227,25)" fg:x="1020" fg:w="1"/><text x="81.9153%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.6653%" y="709" width="0.1601%" height="15" fill="rgb(248,37,46)" fg:x="1020" fg:w="2"/><text x="81.9153%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.7454%" y="693" width="0.0801%" height="15" fill="rgb(243,52,43)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.7454%" y="677" width="0.0801%" height="15" fill="rgb(232,122,17)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.7454%" y="661" width="0.0801%" height="15" fill="rgb(242,15,36)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.7454%" y="645" width="0.0801%" height="15" fill="rgb(232,63,30)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.7454%" y="629" width="0.0801%" height="15" fill="rgb(237,86,45)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.7454%" y="613" width="0.0801%" height="15" fill="rgb(245,123,47)" fg:x="1021" fg:w="1"/><text x="81.9954%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="81.5853%" y="725" width="0.3203%" height="15" fill="rgb(252,85,3)" fg:x="1019" fg:w="4"/><text x="81.8353%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.8255%" y="709" width="0.0801%" height="15" fill="rgb(249,171,16)" fg:x="1022" fg:w="1"/><text x="82.0755%" y="719.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.96%)</title><rect x="81.0248%" y="789" width="0.9608%" height="15" fill="rgb(225,146,54)" fg:x="1012" fg:w="12"/><text x="81.2748%" y="799.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="81.1849%" y="773" width="0.8006%" height="15" fill="rgb(213,216,54)" fg:x="1014" fg:w="10"/><text x="81.4349%" y="783.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="81.4251%" y="757" width="0.5604%" height="15" fill="rgb(236,60,6)" fg:x="1017" fg:w="7"/><text x="81.6751%" y="767.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="81.5853%" y="741" width="0.4003%" height="15" fill="rgb(227,93,24)" fg:x="1019" fg:w="5"/><text x="81.8353%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.9055%" y="725" width="0.0801%" height="15" fill="rgb(219,41,42)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.9055%" y="709" width="0.0801%" height="15" fill="rgb(229,52,32)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="81.9055%" y="693" width="0.0801%" height="15" fill="rgb(221,33,40)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="81.9856%" y="709" width="0.1601%" height="15" fill="rgb(216,109,23)" fg:x="1024" fg:w="2"/><text x="82.2356%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="81.9856%" y="693" width="0.1601%" height="15" fill="rgb(214,39,24)" fg:x="1024" fg:w="2"/><text x="82.2356%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="81.9856%" y="677" width="0.1601%" height="15" fill="rgb(205,36,6)" fg:x="1024" fg:w="2"/><text x="82.2356%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="82.2258%" y="677" width="0.1601%" height="15" fill="rgb(222,146,34)" fg:x="1027" fg:w="2"/><text x="82.4758%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="81.9856%" y="789" width="0.5604%" height="15" fill="rgb(214,72,53)" fg:x="1024" fg:w="7"/><text x="82.2356%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="81.9856%" y="773" width="0.5604%" height="15" fill="rgb(250,157,2)" fg:x="1024" fg:w="7"/><text x="82.2356%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="81.9856%" y="757" width="0.5604%" height="15" fill="rgb(248,5,23)" fg:x="1024" fg:w="7"/><text x="82.2356%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="81.9856%" y="741" width="0.5604%" height="15" fill="rgb(207,146,36)" fg:x="1024" fg:w="7"/><text x="82.2356%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="81.9856%" y="725" width="0.5604%" height="15" fill="rgb(205,184,43)" fg:x="1024" fg:w="7"/><text x="82.2356%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="82.1457%" y="709" width="0.4003%" height="15" fill="rgb(251,150,46)" fg:x="1026" fg:w="5"/><text x="82.3957%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="82.2258%" y="693" width="0.3203%" height="15" fill="rgb(227,224,12)" fg:x="1027" fg:w="4"/><text x="82.4758%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.3859%" y="677" width="0.1601%" height="15" fill="rgb(215,26,26)" fg:x="1029" fg:w="2"/><text x="82.6359%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="82.3859%" y="661" width="0.1601%" height="15" fill="rgb(238,180,42)" fg:x="1029" fg:w="2"/><text x="82.6359%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="82.3859%" y="645" width="0.1601%" height="15" fill="rgb(218,148,48)" fg:x="1029" fg:w="2"/><text x="82.6359%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.5460%" y="757" width="0.0801%" height="15" fill="rgb(252,14,36)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5460%" y="741" width="0.0801%" height="15" fill="rgb(224,35,37)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.6261%" y="725" width="0.0801%" height="15" fill="rgb(245,177,29)" fg:x="1032" fg:w="1"/><text x="82.8761%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.7862%" y="693" width="0.0801%" height="15" fill="rgb(221,149,34)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.7862%" y="677" width="0.0801%" height="15" fill="rgb(239,115,36)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="82.6261%" y="757" width="0.3203%" height="15" fill="rgb(226,196,40)" fg:x="1032" fg:w="4"/><text x="82.8761%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="82.6261%" y="741" width="0.3203%" height="15" fill="rgb(209,206,26)" fg:x="1032" fg:w="4"/><text x="82.8761%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.7062%" y="725" width="0.2402%" height="15" fill="rgb(225,13,33)" fg:x="1033" fg:w="3"/><text x="82.9562%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.7862%" y="709" width="0.1601%" height="15" fill="rgb(244,126,22)" fg:x="1034" fg:w="2"/><text x="83.0362%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.8663%" y="693" width="0.0801%" height="15" fill="rgb(248,213,25)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.8663%" y="677" width="0.0801%" height="15" fill="rgb(222,94,36)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.8663%" y="661" width="0.0801%" height="15" fill="rgb(212,114,20)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.8663%" y="645" width="0.0801%" height="15" fill="rgb(213,157,26)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.8663%" y="629" width="0.0801%" height="15" fill="rgb(211,130,1)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.9464%" y="757" width="0.0801%" height="15" fill="rgb(212,83,53)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.9464%" y="741" width="0.0801%" height="15" fill="rgb(238,129,10)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="83.1865%" y="725" width="0.0801%" height="15" fill="rgb(213,76,2)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="83.1865%" y="709" width="0.0801%" height="15" fill="rgb(220,189,22)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="83.1065%" y="741" width="0.2402%" height="15" fill="rgb(250,155,31)" fg:x="1038" fg:w="3"/><text x="83.3565%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.2666%" y="725" width="0.0801%" height="15" fill="rgb(218,184,22)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.3467%" y="741" width="0.0801%" height="15" fill="rgb(247,117,4)" fg:x="1041" fg:w="1"/><text x="83.5967%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="83.4267%" y="741" width="0.1601%" height="15" fill="rgb(253,185,37)" fg:x="1042" fg:w="2"/><text x="83.6767%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.5869%" y="741" width="0.0801%" height="15" fill="rgb(226,36,44)" fg:x="1044" fg:w="1"/><text x="83.8369%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.5869%" y="725" width="0.0801%" height="15" fill="rgb(224,7,24)" fg:x="1044" fg:w="1"/><text x="83.8369%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.5869%" y="709" width="0.0801%" height="15" fill="rgb(239,201,0)" fg:x="1044" fg:w="1"/><text x="83.8369%" y="719.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (15 samples, 1.20%)</title><rect x="82.5460%" y="773" width="1.2010%" height="15" fill="rgb(218,56,33)" fg:x="1031" fg:w="15"/><text x="82.7960%" y="783.50"></text></g><g><title>treediff::diff::diff (9 samples, 0.72%)</title><rect x="83.0264%" y="757" width="0.7206%" height="15" fill="rgb(210,187,29)" fg:x="1037" fg:w="9"/><text x="83.2764%" y="767.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="83.6669%" y="741" width="0.0801%" height="15" fill="rgb(206,158,49)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="751.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="83.6669%" y="725" width="0.0801%" height="15" fill="rgb(234,36,5)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="735.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="83.6669%" y="709" width="0.0801%" height="15" fill="rgb(239,79,15)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="719.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="83.6669%" y="693" width="0.0801%" height="15" fill="rgb(240,136,17)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.6669%" y="677" width="0.0801%" height="15" fill="rgb(227,83,12)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.6669%" y="661" width="0.0801%" height="15" fill="rgb(212,2,8)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.6669%" y="645" width="0.0801%" height="15" fill="rgb(219,144,5)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.6669%" y="629" width="0.0801%" height="15" fill="rgb(253,204,27)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.6669%" y="613" width="0.0801%" height="15" fill="rgb(228,188,17)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.6669%" y="597" width="0.0801%" height="15" fill="rgb(208,198,33)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.6669%" y="581" width="0.0801%" height="15" fill="rgb(249,153,19)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.6669%" y="565" width="0.0801%" height="15" fill="rgb(222,193,37)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.6669%" y="549" width="0.0801%" height="15" fill="rgb(215,168,16)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.6669%" y="533" width="0.0801%" height="15" fill="rgb(238,69,36)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.6669%" y="517" width="0.0801%" height="15" fill="rgb(227,11,51)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.6669%" y="501" width="0.0801%" height="15" fill="rgb(214,204,5)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.6669%" y="485" width="0.0801%" height="15" fill="rgb(242,182,42)" fg:x="1045" fg:w="1"/><text x="83.9169%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.9872%" y="709" width="0.0801%" height="15" fill="rgb(212,208,46)" fg:x="1049" fg:w="1"/><text x="84.2372%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="83.8271%" y="741" width="0.3203%" height="15" fill="rgb(249,22,49)" fg:x="1047" fg:w="4"/><text x="84.0771%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.9872%" y="725" width="0.1601%" height="15" fill="rgb(226,130,52)" fg:x="1049" fg:w="2"/><text x="84.2372%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.0673%" y="709" width="0.0801%" height="15" fill="rgb(209,156,10)" fg:x="1050" fg:w="1"/><text x="84.3173%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1473%" y="741" width="0.0801%" height="15" fill="rgb(207,125,47)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.1473%" y="725" width="0.0801%" height="15" fill="rgb(221,117,28)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1473%" y="709" width="0.0801%" height="15" fill="rgb(221,170,12)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1473%" y="693" width="0.0801%" height="15" fill="rgb(241,222,52)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2274%" y="741" width="0.0801%" height="15" fill="rgb(219,52,6)" fg:x="1052" fg:w="1"/><text x="84.4774%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="84.2274%" y="725" width="0.0801%" height="15" fill="rgb(226,144,34)" fg:x="1052" fg:w="1"/><text x="84.4774%" y="735.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3074%" y="741" width="0.0801%" height="15" fill="rgb(231,179,27)" fg:x="1053" fg:w="1"/><text x="84.5574%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3074%" y="725" width="0.0801%" height="15" fill="rgb(211,178,51)" fg:x="1053" fg:w="1"/><text x="84.5574%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.3074%" y="709" width="0.0801%" height="15" fill="rgb(233,141,5)" fg:x="1053" fg:w="1"/><text x="84.5574%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3875%" y="693" width="0.0801%" height="15" fill="rgb(214,10,9)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.4676%" y="693" width="0.0801%" height="15" fill="rgb(209,0,1)" fg:x="1055" fg:w="1"/><text x="84.7176%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="84.4676%" y="677" width="0.0801%" height="15" fill="rgb(207,82,30)" fg:x="1055" fg:w="1"/><text x="84.7176%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.6277%" y="661" width="0.0801%" height="15" fill="rgb(224,214,13)" fg:x="1057" fg:w="1"/><text x="84.8777%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="84.8679%" y="613" width="0.0801%" height="15" fill="rgb(237,84,33)" fg:x="1060" fg:w="1"/><text x="85.1179%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="84.6277%" y="677" width="0.4003%" height="15" fill="rgb(231,25,9)" fg:x="1057" fg:w="5"/><text x="84.8777%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="84.7078%" y="661" width="0.3203%" height="15" fill="rgb(207,51,8)" fg:x="1058" fg:w="4"/><text x="84.9578%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="84.7878%" y="645" width="0.2402%" height="15" fill="rgb(234,189,54)" fg:x="1059" fg:w="3"/><text x="85.0378%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="84.7878%" y="629" width="0.2402%" height="15" fill="rgb(214,188,52)" fg:x="1059" fg:w="3"/><text x="85.0378%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.9480%" y="613" width="0.0801%" height="15" fill="rgb(214,17,11)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.9480%" y="597" width="0.0801%" height="15" fill="rgb(250,31,36)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.9480%" y="581" width="0.0801%" height="15" fill="rgb(244,57,44)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9480%" y="565" width="0.0801%" height="15" fill="rgb(209,209,31)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9480%" y="549" width="0.0801%" height="15" fill="rgb(217,47,5)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9480%" y="533" width="0.0801%" height="15" fill="rgb(214,78,42)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="84.3875%" y="709" width="0.7206%" height="15" fill="rgb(226,15,23)" fg:x="1054" fg:w="9"/><text x="84.6375%" y="719.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="84.5476%" y="693" width="0.5604%" height="15" fill="rgb(230,171,7)" fg:x="1056" fg:w="7"/><text x="84.7976%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0280%" y="677" width="0.0801%" height="15" fill="rgb(229,71,9)" fg:x="1062" fg:w="1"/><text x="85.2780%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="84.3875%" y="725" width="0.8006%" height="15" fill="rgb(221,111,31)" fg:x="1054" fg:w="10"/><text x="84.6375%" y="735.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="85.1081%" y="709" width="0.0801%" height="15" fill="rgb(237,86,50)" fg:x="1063" fg:w="1"/><text x="85.3581%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1081%" y="693" width="0.0801%" height="15" fill="rgb(234,49,32)" fg:x="1063" fg:w="1"/><text x="85.3581%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1882%" y="725" width="0.0801%" height="15" fill="rgb(225,144,27)" fg:x="1064" fg:w="1"/><text x="85.4382%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.60%)</title><rect x="83.7470%" y="773" width="1.6013%" height="15" fill="rgb(225,209,36)" fg:x="1046" fg:w="20"/><text x="83.9970%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.52%)</title><rect x="83.8271%" y="757" width="1.5212%" height="15" fill="rgb(218,109,14)" fg:x="1047" fg:w="19"/><text x="84.0771%" y="767.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.96%)</title><rect x="84.3875%" y="741" width="0.9608%" height="15" fill="rgb(238,186,42)" fg:x="1054" fg:w="12"/><text x="84.6375%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.2682%" y="725" width="0.0801%" height="15" fill="rgb(236,143,10)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="735.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.6685%" y="613" width="0.0801%" height="15" fill="rgb(205,147,7)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.6685%" y="597" width="0.0801%" height="15" fill="rgb(245,224,0)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.6685%" y="581" width="0.0801%" height="15" fill="rgb(213,208,32)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.6685%" y="565" width="0.0801%" height="15" fill="rgb(208,212,4)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.6685%" y="549" width="0.0801%" height="15" fill="rgb(236,143,49)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.6685%" y="533" width="0.0801%" height="15" fill="rgb(228,152,33)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.6685%" y="517" width="0.0801%" height="15" fill="rgb(236,132,39)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="85.6685%" y="645" width="0.1601%" height="15" fill="rgb(228,176,23)" fg:x="1070" fg:w="2"/><text x="85.9185%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="85.6685%" y="629" width="0.1601%" height="15" fill="rgb(229,34,18)" fg:x="1070" fg:w="2"/><text x="85.9185%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7486%" y="613" width="0.0801%" height="15" fill="rgb(244,81,37)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7486%" y="597" width="0.0801%" height="15" fill="rgb(242,79,32)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.7486%" y="581" width="0.0801%" height="15" fill="rgb(245,15,51)" fg:x="1071" fg:w="1"/><text x="85.9986%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="85.8287%" y="645" width="0.1601%" height="15" fill="rgb(209,82,8)" fg:x="1072" fg:w="2"/><text x="86.0787%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="85.9087%" y="629" width="0.0801%" height="15" fill="rgb(248,65,42)" fg:x="1073" fg:w="1"/><text x="86.1587%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="85.5084%" y="677" width="0.5604%" height="15" fill="rgb(216,132,33)" fg:x="1068" fg:w="7"/><text x="85.7584%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="85.5084%" y="661" width="0.5604%" height="15" fill="rgb(207,21,32)" fg:x="1068" fg:w="7"/><text x="85.7584%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9888%" y="645" width="0.0801%" height="15" fill="rgb(247,27,22)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9888%" y="629" width="0.0801%" height="15" fill="rgb(254,72,41)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9888%" y="613" width="0.0801%" height="15" fill="rgb(250,6,31)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="86.0689%" y="677" width="0.1601%" height="15" fill="rgb(224,124,0)" fg:x="1075" fg:w="2"/><text x="86.3189%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="85.4283%" y="709" width="0.8807%" height="15" fill="rgb(228,7,24)" fg:x="1067" fg:w="11"/><text x="85.6783%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="85.4283%" y="693" width="0.8807%" height="15" fill="rgb(250,202,22)" fg:x="1067" fg:w="11"/><text x="85.6783%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.2290%" y="677" width="0.0801%" height="15" fill="rgb(214,89,5)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="86.3090%" y="709" width="0.1601%" height="15" fill="rgb(228,82,34)" fg:x="1078" fg:w="2"/><text x="86.5590%" y="719.50"></text></g><g><title>engine::session::Session::close (79 samples, 6.33%)</title><rect x="80.3042%" y="869" width="6.3251%" height="15" fill="rgb(212,164,18)" fg:x="1003" fg:w="79"/><text x="80.5542%" y="879.50">engine::..</text></g><g><title>engine::session::state::State::close (78 samples, 6.24%)</title><rect x="80.3843%" y="853" width="6.2450%" height="15" fill="rgb(210,75,6)" fg:x="1004" fg:w="78"/><text x="80.6343%" y="863.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (71 samples, 5.68%)</title><rect x="80.9448%" y="837" width="5.6845%" height="15" fill="rgb(251,11,45)" fg:x="1011" fg:w="71"/><text x="81.1948%" y="847.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (71 samples, 5.68%)</title><rect x="80.9448%" y="821" width="5.6845%" height="15" fill="rgb(234,105,14)" fg:x="1011" fg:w="71"/><text x="81.1948%" y="831.50">engine:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (70 samples, 5.60%)</title><rect x="81.0248%" y="805" width="5.6045%" height="15" fill="rgb(220,123,16)" fg:x="1012" fg:w="70"/><text x="81.2748%" y="815.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (51 samples, 4.08%)</title><rect x="82.5460%" y="789" width="4.0833%" height="15" fill="rgb(238,16,42)" fg:x="1031" fg:w="51"/><text x="82.7960%" y="799.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (16 samples, 1.28%)</title><rect x="85.3483%" y="773" width="1.2810%" height="15" fill="rgb(239,101,26)" fg:x="1066" fg:w="16"/><text x="85.5983%" y="783.50"></text></g><g><title>serde_json::de::from_trait (16 samples, 1.28%)</title><rect x="85.3483%" y="757" width="1.2810%" height="15" fill="rgb(228,12,27)" fg:x="1066" fg:w="16"/><text x="85.5983%" y="767.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.28%)</title><rect x="85.3483%" y="741" width="1.2810%" height="15" fill="rgb(218,165,53)" fg:x="1066" fg:w="16"/><text x="85.5983%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.28%)</title><rect x="85.3483%" y="725" width="1.2810%" height="15" fill="rgb(250,44,27)" fg:x="1066" fg:w="16"/><text x="85.5983%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="86.4692%" y="709" width="0.1601%" height="15" fill="rgb(229,69,35)" fg:x="1080" fg:w="2"/><text x="86.7192%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.5492%" y="693" width="0.0801%" height="15" fill="rgb(241,38,31)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="86.5492%" y="677" width="0.0801%" height="15" fill="rgb(224,152,13)" fg:x="1081" fg:w="1"/><text x="86.7992%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="86.6293%" y="741" width="0.1601%" height="15" fill="rgb(207,225,8)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="86.6293%" y="725" width="0.1601%" height="15" fill="rgb(222,135,50)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="86.6293%" y="709" width="0.1601%" height="15" fill="rgb(245,39,15)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="86.6293%" y="693" width="0.1601%" height="15" fill="rgb(233,22,17)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="86.6293%" y="677" width="0.1601%" height="15" fill="rgb(227,152,49)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="86.6293%" y="661" width="0.1601%" height="15" fill="rgb(233,162,45)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="86.6293%" y="645" width="0.1601%" height="15" fill="rgb(217,44,48)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="86.6293%" y="629" width="0.1601%" height="15" fill="rgb(253,41,35)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="86.6293%" y="613" width="0.1601%" height="15" fill="rgb(254,32,37)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="86.6293%" y="597" width="0.1601%" height="15" fill="rgb(250,9,9)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="86.6293%" y="581" width="0.1601%" height="15" fill="rgb(212,37,16)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="86.6293%" y="565" width="0.1601%" height="15" fill="rgb(235,142,51)" fg:x="1082" fg:w="2"/><text x="86.8793%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.7094%" y="549" width="0.0801%" height="15" fill="rgb(250,225,53)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.7094%" y="533" width="0.0801%" height="15" fill="rgb(207,188,48)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.7094%" y="517" width="0.0801%" height="15" fill="rgb(222,25,21)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.7094%" y="501" width="0.0801%" height="15" fill="rgb(249,112,5)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="86.7094%" y="485" width="0.0801%" height="15" fill="rgb(242,11,22)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="86.7094%" y="469" width="0.0801%" height="15" fill="rgb(217,125,14)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="86.7094%" y="453" width="0.0801%" height="15" fill="rgb(239,92,14)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="86.7094%" y="437" width="0.0801%" height="15" fill="rgb(232,145,17)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="86.7094%" y="421" width="0.0801%" height="15" fill="rgb(250,158,16)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="86.7094%" y="405" width="0.0801%" height="15" fill="rgb(247,30,22)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="86.7094%" y="389" width="0.0801%" height="15" fill="rgb(219,215,46)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="86.7094%" y="373" width="0.0801%" height="15" fill="rgb(237,40,53)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="86.7094%" y="357" width="0.0801%" height="15" fill="rgb(253,207,11)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.08%)</title><rect x="86.7094%" y="341" width="0.0801%" height="15" fill="rgb(242,16,9)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.8695%" y="485" width="0.0801%" height="15" fill="rgb(237,94,35)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.8695%" y="469" width="0.0801%" height="15" fill="rgb(244,145,23)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="86.8695%" y="661" width="0.1601%" height="15" fill="rgb(209,93,17)" fg:x="1085" fg:w="2"/><text x="87.1195%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="86.8695%" y="645" width="0.1601%" height="15" fill="rgb(205,201,0)" fg:x="1085" fg:w="2"/><text x="87.1195%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="86.8695%" y="629" width="0.1601%" height="15" fill="rgb(225,198,48)" fg:x="1085" fg:w="2"/><text x="87.1195%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.8695%" y="613" width="0.1601%" height="15" fill="rgb(211,131,51)" fg:x="1085" fg:w="2"/><text x="87.1195%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.8695%" y="597" width="0.1601%" height="15" fill="rgb(237,196,37)" fg:x="1085" fg:w="2"/><text x="87.1195%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.8695%" y="581" width="0.1601%" height="15" fill="rgb(218,204,52)" fg:x="1085" fg:w="2"/><text x="87.1195%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.8695%" y="565" width="0.1601%" height="15" fill="rgb(251,67,25)" fg:x="1085" fg:w="2"/><text x="87.1195%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.8695%" y="549" width="0.1601%" height="15" fill="rgb(219,87,2)" fg:x="1085" fg:w="2"/><text x="87.1195%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.8695%" y="533" width="0.1601%" height="15" fill="rgb(224,171,9)" fg:x="1085" fg:w="2"/><text x="87.1195%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="86.8695%" y="517" width="0.1601%" height="15" fill="rgb(215,98,45)" fg:x="1085" fg:w="2"/><text x="87.1195%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.8695%" y="501" width="0.1601%" height="15" fill="rgb(231,48,23)" fg:x="1085" fg:w="2"/><text x="87.1195%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.9496%" y="485" width="0.0801%" height="15" fill="rgb(233,138,42)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.9496%" y="469" width="0.0801%" height="15" fill="rgb(244,107,0)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.9496%" y="453" width="0.0801%" height="15" fill="rgb(224,15,0)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.1097%" y="565" width="0.0801%" height="15" fill="rgb(218,71,35)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.1097%" y="549" width="0.0801%" height="15" fill="rgb(244,32,22)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.1898%" y="549" width="0.0801%" height="15" fill="rgb(232,209,34)" fg:x="1089" fg:w="1"/><text x="87.4398%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.1898%" y="533" width="0.0801%" height="15" fill="rgb(232,54,38)" fg:x="1089" fg:w="1"/><text x="87.4398%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.1898%" y="517" width="0.0801%" height="15" fill="rgb(208,83,16)" fg:x="1089" fg:w="1"/><text x="87.4398%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.1898%" y="501" width="0.0801%" height="15" fill="rgb(208,70,33)" fg:x="1089" fg:w="1"/><text x="87.4398%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.1898%" y="485" width="0.0801%" height="15" fill="rgb(247,38,12)" fg:x="1089" fg:w="1"/><text x="87.4398%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (4 samples, 0.32%)</title><rect x="87.0296%" y="661" width="0.3203%" height="15" fill="rgb(206,34,42)" fg:x="1087" fg:w="4"/><text x="87.2796%" y="671.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="87.0296%" y="645" width="0.3203%" height="15" fill="rgb(226,75,43)" fg:x="1087" fg:w="4"/><text x="87.2796%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="87.0296%" y="629" width="0.3203%" height="15" fill="rgb(223,109,12)" fg:x="1087" fg:w="4"/><text x="87.2796%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="87.0296%" y="613" width="0.3203%" height="15" fill="rgb(218,53,16)" fg:x="1087" fg:w="4"/><text x="87.2796%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="87.0296%" y="597" width="0.3203%" height="15" fill="rgb(236,44,50)" fg:x="1087" fg:w="4"/><text x="87.2796%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="87.0296%" y="581" width="0.3203%" height="15" fill="rgb(211,163,12)" fg:x="1087" fg:w="4"/><text x="87.2796%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="87.1898%" y="565" width="0.1601%" height="15" fill="rgb(230,67,52)" fg:x="1089" fg:w="2"/><text x="87.4398%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.2698%" y="549" width="0.0801%" height="15" fill="rgb(224,204,24)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.56%)</title><rect x="86.8695%" y="709" width="0.5604%" height="15" fill="rgb(210,50,27)" fg:x="1085" fg:w="7"/><text x="87.1195%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.56%)</title><rect x="86.8695%" y="693" width="0.5604%" height="15" fill="rgb(251,202,23)" fg:x="1085" fg:w="7"/><text x="87.1195%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="86.8695%" y="677" width="0.5604%" height="15" fill="rgb(230,210,21)" fg:x="1085" fg:w="7"/><text x="87.1195%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.3499%" y="661" width="0.0801%" height="15" fill="rgb(222,72,44)" fg:x="1091" fg:w="1"/><text x="87.5999%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.4299%" y="677" width="0.0801%" height="15" fill="rgb(223,182,13)" fg:x="1092" fg:w="1"/><text x="87.6799%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.4299%" y="661" width="0.0801%" height="15" fill="rgb(228,61,15)" fg:x="1092" fg:w="1"/><text x="87.6799%" y="671.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (12 samples, 0.96%)</title><rect x="86.6293%" y="773" width="0.9608%" height="15" fill="rgb(253,207,22)" fg:x="1082" fg:w="12"/><text x="86.8793%" y="783.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (12 samples, 0.96%)</title><rect x="86.6293%" y="757" width="0.9608%" height="15" fill="rgb(232,10,15)" fg:x="1082" fg:w="12"/><text x="86.8793%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.80%)</title><rect x="86.7894%" y="741" width="0.8006%" height="15" fill="rgb(227,207,39)" fg:x="1084" fg:w="10"/><text x="87.0394%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="86.8695%" y="725" width="0.7206%" height="15" fill="rgb(228,187,3)" fg:x="1085" fg:w="9"/><text x="87.1195%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="87.4299%" y="709" width="0.1601%" height="15" fill="rgb(246,45,9)" fg:x="1092" fg:w="2"/><text x="87.6799%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="87.4299%" y="693" width="0.1601%" height="15" fill="rgb(249,10,17)" fg:x="1092" fg:w="2"/><text x="87.6799%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.5100%" y="677" width="0.0801%" height="15" fill="rgb(251,56,51)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.5100%" y="661" width="0.0801%" height="15" fill="rgb(232,51,36)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="87.5100%" y="645" width="0.0801%" height="15" fill="rgb(215,38,28)" fg:x="1093" fg:w="1"/><text x="87.7600%" y="655.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="87.7502%" y="629" width="0.0801%" height="15" fill="rgb(218,5,35)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.7502%" y="613" width="0.0801%" height="15" fill="rgb(232,219,8)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.7502%" y="597" width="0.0801%" height="15" fill="rgb(243,162,8)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.7502%" y="581" width="0.0801%" height="15" fill="rgb(218,86,32)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.7502%" y="565" width="0.0801%" height="15" fill="rgb(218,179,51)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.7502%" y="549" width="0.0801%" height="15" fill="rgb(237,42,52)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.8303%" y="581" width="0.0801%" height="15" fill="rgb(229,12,4)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.8303%" y="565" width="0.0801%" height="15" fill="rgb(214,203,2)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.8303%" y="549" width="0.0801%" height="15" fill="rgb(241,11,44)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.8303%" y="533" width="0.0801%" height="15" fill="rgb(221,106,48)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.8303%" y="517" width="0.0801%" height="15" fill="rgb(220,220,10)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.8303%" y="501" width="0.0801%" height="15" fill="rgb(228,220,44)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.8303%" y="485" width="0.0801%" height="15" fill="rgb(214,144,45)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.8303%" y="469" width="0.0801%" height="15" fill="rgb(224,142,28)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.8303%" y="453" width="0.0801%" height="15" fill="rgb(214,79,27)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.8303%" y="437" width="0.0801%" height="15" fill="rgb(208,173,30)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.8303%" y="421" width="0.0801%" height="15" fill="rgb(222,81,9)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.8303%" y="405" width="0.0801%" height="15" fill="rgb(217,152,25)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.8303%" y="389" width="0.0801%" height="15" fill="rgb(248,170,26)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.8303%" y="373" width="0.0801%" height="15" fill="rgb(206,151,5)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.9103%" y="485" width="0.0801%" height="15" fill="rgb(216,7,52)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.9904%" y="485" width="0.0801%" height="15" fill="rgb(228,27,44)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (5 samples, 0.40%)</title><rect x="87.8303%" y="629" width="0.4003%" height="15" fill="rgb(208,221,38)" fg:x="1097" fg:w="5"/><text x="88.0803%" y="639.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="87.8303%" y="613" width="0.4003%" height="15" fill="rgb(240,59,23)" fg:x="1097" fg:w="5"/><text x="88.0803%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="87.8303%" y="597" width="0.4003%" height="15" fill="rgb(210,127,41)" fg:x="1097" fg:w="5"/><text x="88.0803%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="87.9103%" y="581" width="0.3203%" height="15" fill="rgb(224,160,3)" fg:x="1098" fg:w="4"/><text x="88.1603%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="87.9103%" y="565" width="0.3203%" height="15" fill="rgb(215,228,26)" fg:x="1098" fg:w="4"/><text x="88.1603%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="87.9103%" y="549" width="0.3203%" height="15" fill="rgb(218,107,38)" fg:x="1098" fg:w="4"/><text x="88.1603%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="87.9103%" y="533" width="0.3203%" height="15" fill="rgb(246,159,42)" fg:x="1098" fg:w="4"/><text x="88.1603%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="87.9103%" y="517" width="0.3203%" height="15" fill="rgb(251,23,41)" fg:x="1098" fg:w="4"/><text x="88.1603%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="87.9103%" y="501" width="0.3203%" height="15" fill="rgb(246,94,53)" fg:x="1098" fg:w="4"/><text x="88.1603%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.0705%" y="485" width="0.1601%" height="15" fill="rgb(241,212,46)" fg:x="1100" fg:w="2"/><text x="88.3205%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.0705%" y="469" width="0.1601%" height="15" fill="rgb(231,79,30)" fg:x="1100" fg:w="2"/><text x="88.3205%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.3106%" y="533" width="0.0801%" height="15" fill="rgb(208,202,21)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.3106%" y="517" width="0.0801%" height="15" fill="rgb(226,136,22)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.3106%" y="501" width="0.0801%" height="15" fill="rgb(214,87,0)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.3106%" y="485" width="0.0801%" height="15" fill="rgb(239,176,44)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.3106%" y="469" width="0.0801%" height="15" fill="rgb(230,102,31)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.3106%" y="453" width="0.0801%" height="15" fill="rgb(219,40,19)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.3106%" y="437" width="0.0801%" height="15" fill="rgb(228,55,4)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="88.3106%" y="421" width="0.0801%" height="15" fill="rgb(239,120,21)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="88.3106%" y="405" width="0.0801%" height="15" fill="rgb(243,136,1)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="88.3106%" y="581" width="0.2402%" height="15" fill="rgb(237,12,45)" fg:x="1103" fg:w="3"/><text x="88.5606%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="88.3106%" y="565" width="0.2402%" height="15" fill="rgb(245,142,47)" fg:x="1103" fg:w="3"/><text x="88.5606%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="88.3106%" y="549" width="0.2402%" height="15" fill="rgb(237,24,54)" fg:x="1103" fg:w="3"/><text x="88.5606%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.3907%" y="533" width="0.1601%" height="15" fill="rgb(234,164,40)" fg:x="1104" fg:w="2"/><text x="88.6407%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.5508%" y="581" width="0.0801%" height="15" fill="rgb(242,95,12)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.5508%" y="565" width="0.0801%" height="15" fill="rgb(238,75,28)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.5508%" y="549" width="0.0801%" height="15" fill="rgb(236,4,26)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5508%" y="533" width="0.0801%" height="15" fill="rgb(252,158,20)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="88.6309%" y="485" width="0.0801%" height="15" fill="rgb(231,67,31)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="495.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (15 samples, 1.20%)</title><rect x="87.7502%" y="645" width="1.2010%" height="15" fill="rgb(241,151,13)" fg:x="1096" fg:w="15"/><text x="88.0002%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.72%)</title><rect x="88.2306%" y="629" width="0.7206%" height="15" fill="rgb(242,25,36)" fg:x="1102" fg:w="9"/><text x="88.4806%" y="639.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="88.2306%" y="613" width="0.7206%" height="15" fill="rgb(205,222,34)" fg:x="1102" fg:w="9"/><text x="88.4806%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="88.2306%" y="597" width="0.7206%" height="15" fill="rgb(235,154,26)" fg:x="1102" fg:w="9"/><text x="88.4806%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="88.6309%" y="581" width="0.3203%" height="15" fill="rgb(233,17,9)" fg:x="1107" fg:w="4"/><text x="88.8809%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="88.6309%" y="565" width="0.3203%" height="15" fill="rgb(245,113,50)" fg:x="1107" fg:w="4"/><text x="88.8809%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="88.6309%" y="549" width="0.3203%" height="15" fill="rgb(247,105,34)" fg:x="1107" fg:w="4"/><text x="88.8809%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="88.6309%" y="533" width="0.3203%" height="15" fill="rgb(225,50,23)" fg:x="1107" fg:w="4"/><text x="88.8809%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="88.6309%" y="517" width="0.3203%" height="15" fill="rgb(253,189,32)" fg:x="1107" fg:w="4"/><text x="88.8809%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="88.6309%" y="501" width="0.3203%" height="15" fill="rgb(208,159,41)" fg:x="1107" fg:w="4"/><text x="88.8809%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="88.7110%" y="485" width="0.2402%" height="15" fill="rgb(222,135,10)" fg:x="1108" fg:w="3"/><text x="88.9610%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="88.7110%" y="469" width="0.2402%" height="15" fill="rgb(214,75,20)" fg:x="1108" fg:w="3"/><text x="88.9610%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.7910%" y="453" width="0.1601%" height="15" fill="rgb(231,65,33)" fg:x="1109" fg:w="2"/><text x="89.0410%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.7910%" y="437" width="0.1601%" height="15" fill="rgb(251,139,6)" fg:x="1109" fg:w="2"/><text x="89.0410%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.8711%" y="421" width="0.0801%" height="15" fill="rgb(225,220,53)" fg:x="1110" fg:w="1"/><text x="89.1211%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="88.9512%" y="613" width="0.1601%" height="15" fill="rgb(244,73,26)" fg:x="1111" fg:w="2"/><text x="89.2012%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="88.9512%" y="597" width="0.1601%" height="15" fill="rgb(244,98,34)" fg:x="1111" fg:w="2"/><text x="89.2012%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.0312%" y="581" width="0.0801%" height="15" fill="rgb(211,131,5)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.1113%" y="597" width="0.0801%" height="15" fill="rgb(238,14,50)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.1113%" y="581" width="0.0801%" height="15" fill="rgb(206,132,52)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="89.1914%" y="597" width="0.1601%" height="15" fill="rgb(228,200,17)" fg:x="1114" fg:w="2"/><text x="89.4414%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="89.1914%" y="581" width="0.1601%" height="15" fill="rgb(209,53,28)" fg:x="1114" fg:w="2"/><text x="89.4414%" y="591.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="89.1914%" y="565" width="0.1601%" height="15" fill="rgb(240,214,22)" fg:x="1114" fg:w="2"/><text x="89.4414%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="89.3515%" y="597" width="0.0801%" height="15" fill="rgb(213,217,46)" fg:x="1116" fg:w="1"/><text x="89.6015%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.3515%" y="581" width="0.0801%" height="15" fill="rgb(241,159,53)" fg:x="1116" fg:w="1"/><text x="89.6015%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="89.5116%" y="581" width="0.1601%" height="15" fill="rgb(241,70,32)" fg:x="1118" fg:w="2"/><text x="89.7616%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="89.5917%" y="565" width="0.0801%" height="15" fill="rgb(233,117,50)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="89.5917%" y="549" width="0.0801%" height="15" fill="rgb(211,114,15)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="89.5917%" y="533" width="0.0801%" height="15" fill="rgb(254,0,36)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="89.5917%" y="517" width="0.0801%" height="15" fill="rgb(221,74,12)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.5917%" y="501" width="0.0801%" height="15" fill="rgb(241,221,3)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.5917%" y="485" width="0.0801%" height="15" fill="rgb(252,91,23)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="89.5917%" y="469" width="0.0801%" height="15" fill="rgb(232,1,25)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="89.5917%" y="453" width="0.0801%" height="15" fill="rgb(253,145,25)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.5917%" y="437" width="0.0801%" height="15" fill="rgb(226,43,53)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.5917%" y="421" width="0.0801%" height="15" fill="rgb(245,116,39)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="89.5917%" y="405" width="0.0801%" height="15" fill="rgb(231,205,33)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.5917%" y="389" width="0.0801%" height="15" fill="rgb(238,96,15)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.5917%" y="373" width="0.0801%" height="15" fill="rgb(212,80,14)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.5917%" y="357" width="0.0801%" height="15" fill="rgb(209,118,24)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.5917%" y="341" width="0.0801%" height="15" fill="rgb(234,176,14)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.5917%" y="325" width="0.0801%" height="15" fill="rgb(207,145,21)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="89.5917%" y="309" width="0.0801%" height="15" fill="rgb(218,58,54)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="89.5917%" y="293" width="0.0801%" height="15" fill="rgb(229,11,50)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="89.7518%" y="549" width="0.2402%" height="15" fill="rgb(221,170,33)" fg:x="1121" fg:w="3"/><text x="90.0018%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.8319%" y="533" width="0.1601%" height="15" fill="rgb(221,121,40)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.8319%" y="517" width="0.1601%" height="15" fill="rgb(214,165,32)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.8319%" y="501" width="0.1601%" height="15" fill="rgb(243,195,30)" fg:x="1122" fg:w="2"/><text x="90.0819%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9119%" y="485" width="0.0801%" height="15" fill="rgb(238,0,27)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9119%" y="469" width="0.0801%" height="15" fill="rgb(226,0,50)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.9119%" y="453" width="0.0801%" height="15" fill="rgb(222,93,46)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.9119%" y="437" width="0.0801%" height="15" fill="rgb(210,34,24)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.9119%" y="421" width="0.0801%" height="15" fill="rgb(217,47,8)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.9119%" y="405" width="0.0801%" height="15" fill="rgb(217,0,26)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.9119%" y="389" width="0.0801%" height="15" fill="rgb(218,228,31)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.9119%" y="373" width="0.0801%" height="15" fill="rgb(208,101,40)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.9119%" y="357" width="0.0801%" height="15" fill="rgb(225,134,0)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.9119%" y="341" width="0.0801%" height="15" fill="rgb(241,37,25)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.9119%" y="325" width="0.0801%" height="15" fill="rgb(251,149,9)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.9119%" y="309" width="0.0801%" height="15" fill="rgb(225,196,54)" fg:x="1123" fg:w="1"/><text x="90.1619%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.1521%" y="405" width="0.0801%" height="15" fill="rgb(240,46,24)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="415.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="90.1521%" y="389" width="0.0801%" height="15" fill="rgb(214,189,4)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="90.1521%" y="373" width="0.0801%" height="15" fill="rgb(222,3,8)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.1521%" y="357" width="0.0801%" height="15" fill="rgb(250,163,6)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.1521%" y="341" width="0.0801%" height="15" fill="rgb(225,23,45)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.1521%" y="325" width="0.0801%" height="15" fill="rgb(225,177,23)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.1521%" y="309" width="0.0801%" height="15" fill="rgb(253,75,3)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.1521%" y="293" width="0.0801%" height="15" fill="rgb(237,85,4)" fg:x="1126" fg:w="1"/><text x="90.4021%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="90.1521%" y="437" width="0.2402%" height="15" fill="rgb(212,23,3)" fg:x="1126" fg:w="3"/><text x="90.4021%" y="447.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="90.1521%" y="421" width="0.2402%" height="15" fill="rgb(250,127,19)" fg:x="1126" fg:w="3"/><text x="90.4021%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="90.2322%" y="405" width="0.1601%" height="15" fill="rgb(222,82,14)" fg:x="1127" fg:w="2"/><text x="90.4822%" y="415.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="90.2322%" y="389" width="0.1601%" height="15" fill="rgb(213,63,47)" fg:x="1127" fg:w="2"/><text x="90.4822%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="90.2322%" y="373" width="0.1601%" height="15" fill="rgb(219,132,41)" fg:x="1127" fg:w="2"/><text x="90.4822%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.3122%" y="357" width="0.0801%" height="15" fill="rgb(251,205,16)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3122%" y="341" width="0.0801%" height="15" fill="rgb(239,102,23)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.3122%" y="325" width="0.0801%" height="15" fill="rgb(222,218,4)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3122%" y="309" width="0.0801%" height="15" fill="rgb(232,91,40)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="90.3122%" y="293" width="0.0801%" height="15" fill="rgb(238,170,50)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3122%" y="277" width="0.0801%" height="15" fill="rgb(243,52,25)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.3122%" y="261" width="0.0801%" height="15" fill="rgb(236,151,10)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3122%" y="245" width="0.0801%" height="15" fill="rgb(216,123,7)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.3122%" y="229" width="0.0801%" height="15" fill="rgb(247,115,15)" fg:x="1128" fg:w="1"/><text x="90.5622%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.5524%" y="373" width="0.0801%" height="15" fill="rgb(249,65,46)" fg:x="1131" fg:w="1"/><text x="90.8024%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.5524%" y="357" width="0.0801%" height="15" fill="rgb(230,132,24)" fg:x="1131" fg:w="1"/><text x="90.8024%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.6325%" y="341" width="0.0801%" height="15" fill="rgb(253,115,7)" fg:x="1132" fg:w="1"/><text x="90.8825%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.6325%" y="325" width="0.0801%" height="15" fill="rgb(233,23,21)" fg:x="1132" fg:w="1"/><text x="90.8825%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.6325%" y="309" width="0.0801%" height="15" fill="rgb(231,203,18)" fg:x="1132" fg:w="1"/><text x="90.8825%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7126%" y="309" width="0.0801%" height="15" fill="rgb(233,19,15)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.7126%" y="293" width="0.0801%" height="15" fill="rgb(213,12,4)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7126%" y="277" width="0.0801%" height="15" fill="rgb(221,198,54)" fg:x="1133" fg:w="1"/><text x="90.9626%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="90.7926%" y="197" width="0.0801%" height="15" fill="rgb(247,189,16)" fg:x="1134" fg:w="1"/><text x="91.0426%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="90.7926%" y="213" width="0.1601%" height="15" fill="rgb(213,82,46)" fg:x="1134" fg:w="2"/><text x="91.0426%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8727%" y="197" width="0.0801%" height="15" fill="rgb(216,129,40)" fg:x="1135" fg:w="1"/><text x="91.1227%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.7926%" y="293" width="0.2402%" height="15" fill="rgb(222,154,45)" fg:x="1134" fg:w="3"/><text x="91.0426%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="90.7926%" y="277" width="0.2402%" height="15" fill="rgb(214,223,41)" fg:x="1134" fg:w="3"/><text x="91.0426%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.7926%" y="261" width="0.2402%" height="15" fill="rgb(212,167,3)" fg:x="1134" fg:w="3"/><text x="91.0426%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="90.7926%" y="245" width="0.2402%" height="15" fill="rgb(219,226,20)" fg:x="1134" fg:w="3"/><text x="91.0426%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.7926%" y="229" width="0.2402%" height="15" fill="rgb(231,29,48)" fg:x="1134" fg:w="3"/><text x="91.0426%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.9528%" y="213" width="0.0801%" height="15" fill="rgb(224,12,4)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.9528%" y="197" width="0.0801%" height="15" fill="rgb(217,180,30)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.9528%" y="181" width="0.0801%" height="15" fill="rgb(237,137,17)" fg:x="1136" fg:w="1"/><text x="91.2028%" y="191.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="90.3923%" y="421" width="0.7206%" height="15" fill="rgb(252,225,18)" fg:x="1129" fg:w="9"/><text x="90.6423%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="90.3923%" y="405" width="0.7206%" height="15" fill="rgb(209,177,11)" fg:x="1129" fg:w="9"/><text x="90.6423%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="90.3923%" y="389" width="0.7206%" height="15" fill="rgb(214,147,8)" fg:x="1129" fg:w="9"/><text x="90.6423%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="90.6325%" y="373" width="0.4804%" height="15" fill="rgb(213,225,52)" fg:x="1132" fg:w="6"/><text x="90.8825%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="90.6325%" y="357" width="0.4804%" height="15" fill="rgb(205,99,43)" fg:x="1132" fg:w="6"/><text x="90.8825%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="90.7126%" y="341" width="0.4003%" height="15" fill="rgb(248,141,45)" fg:x="1133" fg:w="5"/><text x="90.9626%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="90.7126%" y="325" width="0.4003%" height="15" fill="rgb(233,198,44)" fg:x="1133" fg:w="5"/><text x="90.9626%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="90.7926%" y="309" width="0.3203%" height="15" fill="rgb(231,176,38)" fg:x="1134" fg:w="4"/><text x="91.0426%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.0328%" y="293" width="0.0801%" height="15" fill="rgb(209,31,1)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.0328%" y="277" width="0.0801%" height="15" fill="rgb(246,42,27)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.0328%" y="261" width="0.0801%" height="15" fill="rgb(244,104,27)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.0328%" y="245" width="0.0801%" height="15" fill="rgb(209,14,27)" fg:x="1137" fg:w="1"/><text x="91.2828%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="91.1930%" y="341" width="0.2402%" height="15" fill="rgb(205,170,50)" fg:x="1139" fg:w="3"/><text x="91.4430%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="91.1930%" y="325" width="0.2402%" height="15" fill="rgb(241,127,20)" fg:x="1139" fg:w="3"/><text x="91.4430%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="91.2730%" y="309" width="0.1601%" height="15" fill="rgb(230,72,5)" fg:x="1140" fg:w="2"/><text x="91.5230%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.2730%" y="293" width="0.1601%" height="15" fill="rgb(231,221,3)" fg:x="1140" fg:w="2"/><text x="91.5230%" y="303.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="91.2730%" y="277" width="0.1601%" height="15" fill="rgb(232,150,49)" fg:x="1140" fg:w="2"/><text x="91.5230%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="91.3531%" y="261" width="0.0801%" height="15" fill="rgb(225,13,46)" fg:x="1141" fg:w="1"/><text x="91.6031%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.3531%" y="245" width="0.0801%" height="15" fill="rgb(236,192,49)" fg:x="1141" fg:w="1"/><text x="91.6031%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="91.1129%" y="389" width="0.4003%" height="15" fill="rgb(242,107,14)" fg:x="1138" fg:w="5"/><text x="91.3629%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="91.1129%" y="373" width="0.4003%" height="15" fill="rgb(251,185,35)" fg:x="1138" fg:w="5"/><text x="91.3629%" y="383.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="91.1129%" y="357" width="0.4003%" height="15" fill="rgb(212,128,8)" fg:x="1138" fg:w="5"/><text x="91.3629%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.4331%" y="341" width="0.0801%" height="15" fill="rgb(215,223,6)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.4331%" y="325" width="0.0801%" height="15" fill="rgb(216,23,45)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.4331%" y="309" width="0.0801%" height="15" fill="rgb(215,71,45)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.4331%" y="293" width="0.0801%" height="15" fill="rgb(224,2,48)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.4331%" y="277" width="0.0801%" height="15" fill="rgb(218,48,8)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.4331%" y="261" width="0.0801%" height="15" fill="rgb(254,37,27)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.4331%" y="245" width="0.0801%" height="15" fill="rgb(237,112,2)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.4331%" y="229" width="0.0801%" height="15" fill="rgb(243,64,54)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.4331%" y="213" width="0.0801%" height="15" fill="rgb(211,93,4)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.4331%" y="197" width="0.0801%" height="15" fill="rgb(249,127,30)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.4331%" y="181" width="0.0801%" height="15" fill="rgb(248,76,17)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.4331%" y="165" width="0.0801%" height="15" fill="rgb(244,153,49)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.4331%" y="149" width="0.0801%" height="15" fill="rgb(231,94,34)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.4331%" y="133" width="0.0801%" height="15" fill="rgb(253,162,40)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.4331%" y="117" width="0.0801%" height="15" fill="rgb(219,194,14)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="127.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="91.4331%" y="101" width="0.0801%" height="15" fill="rgb(226,80,42)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="111.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.4331%" y="85" width="0.0801%" height="15" fill="rgb(208,108,5)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="95.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (15 samples, 1.20%)</title><rect x="90.3923%" y="437" width="1.2010%" height="15" fill="rgb(209,204,33)" fg:x="1129" fg:w="15"/><text x="90.6423%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="91.1129%" y="421" width="0.4804%" height="15" fill="rgb(232,22,14)" fg:x="1138" fg:w="6"/><text x="91.3629%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="91.1129%" y="405" width="0.4804%" height="15" fill="rgb(236,139,41)" fg:x="1138" fg:w="6"/><text x="91.3629%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.5132%" y="389" width="0.0801%" height="15" fill="rgb(220,91,0)" fg:x="1143" fg:w="1"/><text x="91.7632%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.5132%" y="373" width="0.0801%" height="15" fill="rgb(243,200,48)" fg:x="1143" fg:w="1"/><text x="91.7632%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5132%" y="357" width="0.0801%" height="15" fill="rgb(237,172,41)" fg:x="1143" fg:w="1"/><text x="91.7632%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="91.5933%" y="437" width="0.0801%" height="15" fill="rgb(247,152,34)" fg:x="1144" fg:w="1"/><text x="91.8433%" y="447.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="91.5933%" y="421" width="0.0801%" height="15" fill="rgb(205,88,40)" fg:x="1144" fg:w="1"/><text x="91.8433%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.5933%" y="405" width="0.0801%" height="15" fill="rgb(223,30,13)" fg:x="1144" fg:w="1"/><text x="91.8433%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.5933%" y="389" width="0.0801%" height="15" fill="rgb(249,7,18)" fg:x="1144" fg:w="1"/><text x="91.8433%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.5933%" y="373" width="0.0801%" height="15" fill="rgb(242,185,6)" fg:x="1144" fg:w="1"/><text x="91.8433%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.5933%" y="357" width="0.0801%" height="15" fill="rgb(234,115,47)" fg:x="1144" fg:w="1"/><text x="91.8433%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.5933%" y="341" width="0.0801%" height="15" fill="rgb(213,98,2)" fg:x="1144" fg:w="1"/><text x="91.8433%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.5933%" y="325" width="0.0801%" height="15" fill="rgb(237,162,23)" fg:x="1144" fg:w="1"/><text x="91.8433%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (28 samples, 2.24%)</title><rect x="89.9920%" y="549" width="2.2418%" height="15" fill="rgb(240,174,26)" fg:x="1124" fg:w="28"/><text x="90.2420%" y="559.50">&lt;..</text></g><g><title>core::iter::adapters::try_process (28 samples, 2.24%)</title><rect x="89.9920%" y="533" width="2.2418%" height="15" fill="rgb(249,90,45)" fg:x="1124" fg:w="28"/><text x="90.2420%" y="543.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 2.16%)</title><rect x="90.0721%" y="517" width="2.1617%" height="15" fill="rgb(212,126,4)" fg:x="1125" fg:w="27"/><text x="90.3221%" y="527.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 2.16%)</title><rect x="90.0721%" y="501" width="2.1617%" height="15" fill="rgb(236,98,48)" fg:x="1125" fg:w="27"/><text x="90.3221%" y="511.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (27 samples, 2.16%)</title><rect x="90.0721%" y="485" width="2.1617%" height="15" fill="rgb(250,14,51)" fg:x="1125" fg:w="27"/><text x="90.3221%" y="495.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (27 samples, 2.16%)</title><rect x="90.0721%" y="469" width="2.1617%" height="15" fill="rgb(236,2,16)" fg:x="1125" fg:w="27"/><text x="90.3221%" y="479.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (27 samples, 2.16%)</title><rect x="90.0721%" y="453" width="2.1617%" height="15" fill="rgb(250,146,3)" fg:x="1125" fg:w="27"/><text x="90.3221%" y="463.50">e..</text></g><g><title>engine::session::internal::EntityMap::add_entity (7 samples, 0.56%)</title><rect x="91.6733%" y="437" width="0.5604%" height="15" fill="rgb(233,72,0)" fg:x="1145" fg:w="7"/><text x="91.9233%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="91.7534%" y="421" width="0.4804%" height="15" fill="rgb(249,172,7)" fg:x="1146" fg:w="6"/><text x="92.0034%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.48%)</title><rect x="91.7534%" y="405" width="0.4804%" height="15" fill="rgb(224,213,17)" fg:x="1146" fg:w="6"/><text x="92.0034%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.48%)</title><rect x="91.7534%" y="389" width="0.4804%" height="15" fill="rgb(221,52,2)" fg:x="1146" fg:w="6"/><text x="92.0034%" y="399.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="91.7534%" y="373" width="0.4804%" height="15" fill="rgb(220,8,41)" fg:x="1146" fg:w="6"/><text x="92.0034%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.3139%" y="517" width="0.0801%" height="15" fill="rgb(230,207,34)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3139%" y="501" width="0.0801%" height="15" fill="rgb(240,157,11)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.3139%" y="485" width="0.0801%" height="15" fill="rgb(243,209,15)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="495.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (42 samples, 3.36%)</title><rect x="89.1113%" y="613" width="3.3627%" height="15" fill="rgb(251,191,33)" fg:x="1113" fg:w="42"/><text x="89.3613%" y="623.50">plu..</text></g><g><title>plugins_core::tools::contained_by (38 samples, 3.04%)</title><rect x="89.4315%" y="597" width="3.0424%" height="15" fill="rgb(217,58,8)" fg:x="1117" fg:w="38"/><text x="89.6815%" y="607.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (35 samples, 2.80%)</title><rect x="89.6717%" y="581" width="2.8022%" height="15" fill="rgb(210,35,1)" fg:x="1120" fg:w="35"/><text x="89.9217%" y="591.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (35 samples, 2.80%)</title><rect x="89.6717%" y="565" width="2.8022%" height="15" fill="rgb(231,62,7)" fg:x="1120" fg:w="35"/><text x="89.9217%" y="575.50">ke..</text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (3 samples, 0.24%)</title><rect x="92.2338%" y="549" width="0.2402%" height="15" fill="rgb(207,73,10)" fg:x="1152" fg:w="3"/><text x="92.4838%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.2338%" y="533" width="0.2402%" height="15" fill="rgb(216,178,40)" fg:x="1152" fg:w="3"/><text x="92.4838%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="92.3939%" y="517" width="0.0801%" height="15" fill="rgb(238,220,1)" fg:x="1154" fg:w="1"/><text x="92.6439%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="92.4740%" y="597" width="0.0801%" height="15" fill="rgb(246,169,39)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="92.4740%" y="581" width="0.0801%" height="15" fill="rgb(240,186,45)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.4740%" y="565" width="0.0801%" height="15" fill="rgb(225,14,29)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5540%" y="501" width="0.0801%" height="15" fill="rgb(243,96,26)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5540%" y="485" width="0.0801%" height="15" fill="rgb(234,139,10)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5540%" y="469" width="0.0801%" height="15" fill="rgb(235,208,23)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5540%" y="453" width="0.0801%" height="15" fill="rgb(230,140,47)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.5540%" y="437" width="0.0801%" height="15" fill="rgb(241,227,54)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.5540%" y="421" width="0.0801%" height="15" fill="rgb(221,210,40)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.5540%" y="405" width="0.0801%" height="15" fill="rgb(207,52,1)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.5540%" y="389" width="0.0801%" height="15" fill="rgb(243,147,42)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.5540%" y="373" width="0.0801%" height="15" fill="rgb(245,93,7)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.5540%" y="357" width="0.0801%" height="15" fill="rgb(243,119,13)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.5540%" y="341" width="0.0801%" height="15" fill="rgb(228,164,28)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.5540%" y="325" width="0.0801%" height="15" fill="rgb(234,37,39)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.5540%" y="309" width="0.0801%" height="15" fill="rgb(246,155,10)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.5540%" y="293" width="0.0801%" height="15" fill="rgb(208,140,53)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.5540%" y="277" width="0.0801%" height="15" fill="rgb(234,107,29)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.5540%" y="261" width="0.0801%" height="15" fill="rgb(217,45,5)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.5540%" y="245" width="0.0801%" height="15" fill="rgb(251,168,5)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.6341%" y="405" width="0.0801%" height="15" fill="rgb(242,96,14)" fg:x="1157" fg:w="1"/><text x="92.8841%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="92.6341%" y="389" width="0.0801%" height="15" fill="rgb(231,148,6)" fg:x="1157" fg:w="1"/><text x="92.8841%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::name (4 samples, 0.32%)</title><rect x="92.5540%" y="565" width="0.3203%" height="15" fill="rgb(249,100,2)" fg:x="1156" fg:w="4"/><text x="92.8040%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="92.5540%" y="549" width="0.3203%" height="15" fill="rgb(212,22,52)" fg:x="1156" fg:w="4"/><text x="92.8040%" y="559.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="92.5540%" y="533" width="0.3203%" height="15" fill="rgb(212,97,14)" fg:x="1156" fg:w="4"/><text x="92.8040%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="92.5540%" y="517" width="0.3203%" height="15" fill="rgb(212,24,14)" fg:x="1156" fg:w="4"/><text x="92.8040%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="92.6341%" y="501" width="0.2402%" height="15" fill="rgb(239,209,43)" fg:x="1157" fg:w="3"/><text x="92.8841%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.6341%" y="485" width="0.2402%" height="15" fill="rgb(226,211,38)" fg:x="1157" fg:w="3"/><text x="92.8841%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="92.6341%" y="469" width="0.2402%" height="15" fill="rgb(216,118,11)" fg:x="1157" fg:w="3"/><text x="92.8841%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.6341%" y="453" width="0.2402%" height="15" fill="rgb(223,214,43)" fg:x="1157" fg:w="3"/><text x="92.8841%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="92.6341%" y="437" width="0.2402%" height="15" fill="rgb(213,225,15)" fg:x="1157" fg:w="3"/><text x="92.8841%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.6341%" y="421" width="0.2402%" height="15" fill="rgb(233,115,42)" fg:x="1157" fg:w="3"/><text x="92.8841%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.7142%" y="405" width="0.1601%" height="15" fill="rgb(229,93,16)" fg:x="1158" fg:w="2"/><text x="92.9642%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.7142%" y="389" width="0.1601%" height="15" fill="rgb(220,114,48)" fg:x="1158" fg:w="2"/><text x="92.9642%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.7942%" y="373" width="0.0801%" height="15" fill="rgb(253,78,24)" fg:x="1159" fg:w="1"/><text x="93.0442%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.7942%" y="357" width="0.0801%" height="15" fill="rgb(206,29,19)" fg:x="1159" fg:w="1"/><text x="93.0442%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.7942%" y="341" width="0.0801%" height="15" fill="rgb(220,96,19)" fg:x="1159" fg:w="1"/><text x="93.0442%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.7942%" y="325" width="0.0801%" height="15" fill="rgb(222,62,18)" fg:x="1159" fg:w="1"/><text x="93.0442%" y="335.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (6 samples, 0.48%)</title><rect x="92.4740%" y="613" width="0.4804%" height="15" fill="rgb(243,4,41)" fg:x="1155" fg:w="6"/><text x="92.7240%" y="623.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (5 samples, 0.40%)</title><rect x="92.5540%" y="597" width="0.4003%" height="15" fill="rgb(232,199,53)" fg:x="1156" fg:w="5"/><text x="92.8040%" y="607.50"></text></g><g><title>plugins_core::finding::matches_description (5 samples, 0.40%)</title><rect x="92.5540%" y="581" width="0.4003%" height="15" fill="rgb(212,18,26)" fg:x="1156" fg:w="5"/><text x="92.8040%" y="591.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="92.8743%" y="565" width="0.0801%" height="15" fill="rgb(218,30,49)" fg:x="1160" fg:w="1"/><text x="93.1243%" y="575.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_contained_in (1 samples, 0.08%)</title><rect x="92.8743%" y="549" width="0.0801%" height="15" fill="rgb(250,154,52)" fg:x="1160" fg:w="1"/><text x="93.1243%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (51 samples, 4.08%)</title><rect x="88.9512%" y="645" width="4.0833%" height="15" fill="rgb(218,176,16)" fg:x="1111" fg:w="51"/><text x="89.2012%" y="655.50">&lt;eng..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (51 samples, 4.08%)</title><rect x="88.9512%" y="629" width="4.0833%" height="15" fill="rgb(215,61,51)" fg:x="1111" fg:w="51"/><text x="89.2012%" y="639.50">&lt;plu..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="92.9544%" y="613" width="0.0801%" height="15" fill="rgb(234,40,53)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.9544%" y="597" width="0.0801%" height="15" fill="rgb(214,142,25)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.9544%" y="581" width="0.0801%" height="15" fill="rgb(206,61,7)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.0344%" y="629" width="0.0801%" height="15" fill="rgb(245,225,1)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="93.1145%" y="629" width="0.0801%" height="15" fill="rgb(224,122,37)" fg:x="1163" fg:w="1"/><text x="93.3645%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="93.1145%" y="613" width="0.0801%" height="15" fill="rgb(209,221,12)" fg:x="1163" fg:w="1"/><text x="93.3645%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.1145%" y="597" width="0.0801%" height="15" fill="rgb(248,70,2)" fg:x="1163" fg:w="1"/><text x="93.3645%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="93.1946%" y="629" width="0.1601%" height="15" fill="rgb(227,173,19)" fg:x="1164" fg:w="2"/><text x="93.4446%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="93.2746%" y="613" width="0.0801%" height="15" fill="rgb(228,217,53)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="93.2746%" y="597" width="0.0801%" height="15" fill="rgb(248,43,46)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="93.2746%" y="581" width="0.0801%" height="15" fill="rgb(236,202,32)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.2746%" y="565" width="0.0801%" height="15" fill="rgb(231,220,0)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.2746%" y="549" width="0.0801%" height="15" fill="rgb(235,11,31)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.2746%" y="533" width="0.0801%" height="15" fill="rgb(247,159,37)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.2746%" y="517" width="0.0801%" height="15" fill="rgb(246,179,15)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2746%" y="501" width="0.0801%" height="15" fill="rgb(221,193,41)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2746%" y="485" width="0.0801%" height="15" fill="rgb(228,30,1)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.2746%" y="469" width="0.0801%" height="15" fill="rgb(233,226,32)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.2746%" y="453" width="0.0801%" height="15" fill="rgb(238,110,42)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.2746%" y="437" width="0.0801%" height="15" fill="rgb(233,141,16)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="93.2746%" y="421" width="0.0801%" height="15" fill="rgb(212,227,9)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.2746%" y="405" width="0.0801%" height="15" fill="rgb(247,119,37)" fg:x="1165" fg:w="1"/><text x="93.5246%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="93.3547%" y="629" width="0.0801%" height="15" fill="rgb(219,101,42)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.3547%" y="613" width="0.0801%" height="15" fill="rgb(252,226,3)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="93.3547%" y="597" width="0.0801%" height="15" fill="rgb(229,50,28)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="93.3547%" y="581" width="0.0801%" height="15" fill="rgb(249,122,7)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="93.3547%" y="565" width="0.0801%" height="15" fill="rgb(207,101,46)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="93.3547%" y="549" width="0.0801%" height="15" fill="rgb(249,90,48)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="93.3547%" y="533" width="0.0801%" height="15" fill="rgb(231,10,48)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="93.3547%" y="517" width="0.0801%" height="15" fill="rgb(234,120,19)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="527.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="93.3547%" y="501" width="0.0801%" height="15" fill="rgb(212,221,36)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3547%" y="485" width="0.0801%" height="15" fill="rgb(230,151,52)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3547%" y="469" width="0.0801%" height="15" fill="rgb(246,35,38)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3547%" y="453" width="0.0801%" height="15" fill="rgb(208,110,54)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.3547%" y="437" width="0.0801%" height="15" fill="rgb(250,206,40)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.3547%" y="421" width="0.0801%" height="15" fill="rgb(225,204,22)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.3547%" y="405" width="0.0801%" height="15" fill="rgb(220,29,11)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.3547%" y="389" width="0.0801%" height="15" fill="rgb(254,133,9)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.3547%" y="373" width="0.0801%" height="15" fill="rgb(254,178,33)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.3547%" y="357" width="0.0801%" height="15" fill="rgb(239,217,37)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.3547%" y="341" width="0.0801%" height="15" fill="rgb(210,41,5)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.3547%" y="325" width="0.0801%" height="15" fill="rgb(227,23,47)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.3547%" y="309" width="0.0801%" height="15" fill="rgb(215,18,46)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.3547%" y="293" width="0.0801%" height="15" fill="rgb(247,172,0)" fg:x="1166" fg:w="1"/><text x="93.6047%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.4347%" y="597" width="0.0801%" height="15" fill="rgb(254,23,27)" fg:x="1167" fg:w="1"/><text x="93.6847%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="93.5148%" y="597" width="0.1601%" height="15" fill="rgb(223,61,6)" fg:x="1168" fg:w="2"/><text x="93.7648%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="93.5148%" y="581" width="0.1601%" height="15" fill="rgb(237,65,24)" fg:x="1168" fg:w="2"/><text x="93.7648%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="93.5148%" y="565" width="0.1601%" height="15" fill="rgb(238,133,22)" fg:x="1168" fg:w="2"/><text x="93.7648%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="93.5148%" y="549" width="0.1601%" height="15" fill="rgb(217,219,5)" fg:x="1168" fg:w="2"/><text x="93.7648%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="93.5148%" y="533" width="0.1601%" height="15" fill="rgb(254,24,44)" fg:x="1168" fg:w="2"/><text x="93.7648%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.5949%" y="517" width="0.0801%" height="15" fill="rgb(217,136,50)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="527.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (4 samples, 0.32%)</title><rect x="93.4347%" y="629" width="0.3203%" height="15" fill="rgb(243,85,15)" fg:x="1167" fg:w="4"/><text x="93.6847%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="93.4347%" y="613" width="0.3203%" height="15" fill="rgb(224,85,42)" fg:x="1167" fg:w="4"/><text x="93.6847%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.6749%" y="597" width="0.0801%" height="15" fill="rgb(237,142,36)" fg:x="1170" fg:w="1"/><text x="93.9249%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.6749%" y="581" width="0.0801%" height="15" fill="rgb(215,131,52)" fg:x="1170" fg:w="1"/><text x="93.9249%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.7550%" y="533" width="0.0801%" height="15" fill="rgb(216,124,50)" fg:x="1171" fg:w="1"/><text x="94.0050%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.7550%" y="517" width="0.0801%" height="15" fill="rgb(223,61,20)" fg:x="1171" fg:w="1"/><text x="94.0050%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.7550%" y="501" width="0.0801%" height="15" fill="rgb(250,62,47)" fg:x="1171" fg:w="1"/><text x="94.0050%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="93.7550%" y="581" width="0.1601%" height="15" fill="rgb(225,180,21)" fg:x="1171" fg:w="2"/><text x="94.0050%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="93.7550%" y="565" width="0.1601%" height="15" fill="rgb(210,89,33)" fg:x="1171" fg:w="2"/><text x="94.0050%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="93.7550%" y="549" width="0.1601%" height="15" fill="rgb(205,215,50)" fg:x="1171" fg:w="2"/><text x="94.0050%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.8351%" y="533" width="0.0801%" height="15" fill="rgb(207,191,48)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8351%" y="517" width="0.0801%" height="15" fill="rgb(247,32,5)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.8351%" y="501" width="0.0801%" height="15" fill="rgb(210,113,39)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8351%" y="485" width="0.0801%" height="15" fill="rgb(242,181,23)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.8351%" y="469" width="0.0801%" height="15" fill="rgb(215,58,22)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8351%" y="453" width="0.0801%" height="15" fill="rgb(236,31,11)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.8351%" y="437" width="0.0801%" height="15" fill="rgb(244,198,15)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8351%" y="421" width="0.0801%" height="15" fill="rgb(230,142,36)" fg:x="1172" fg:w="1"/><text x="94.0851%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="93.7550%" y="613" width="0.2402%" height="15" fill="rgb(219,48,29)" fg:x="1171" fg:w="3"/><text x="94.0050%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="93.7550%" y="597" width="0.2402%" height="15" fill="rgb(237,179,43)" fg:x="1171" fg:w="3"/><text x="94.0050%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="93.9151%" y="581" width="0.0801%" height="15" fill="rgb(221,67,37)" fg:x="1173" fg:w="1"/><text x="94.1651%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="93.9151%" y="565" width="0.0801%" height="15" fill="rgb(222,217,18)" fg:x="1173" fg:w="1"/><text x="94.1651%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.9151%" y="549" width="0.0801%" height="15" fill="rgb(235,107,38)" fg:x="1173" fg:w="1"/><text x="94.1651%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.9151%" y="533" width="0.0801%" height="15" fill="rgb(227,110,50)" fg:x="1173" fg:w="1"/><text x="94.1651%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.9151%" y="517" width="0.0801%" height="15" fill="rgb(224,176,42)" fg:x="1173" fg:w="1"/><text x="94.1651%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="93.7550%" y="629" width="0.3203%" height="15" fill="rgb(250,34,11)" fg:x="1171" fg:w="4"/><text x="94.0050%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="93.9952%" y="613" width="0.0801%" height="15" fill="rgb(253,107,24)" fg:x="1174" fg:w="1"/><text x="94.2452%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.9952%" y="597" width="0.0801%" height="15" fill="rgb(213,146,11)" fg:x="1174" fg:w="1"/><text x="94.2452%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="94.0753%" y="613" width="0.0801%" height="15" fill="rgb(216,88,42)" fg:x="1175" fg:w="1"/><text x="94.3253%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.0753%" y="597" width="0.0801%" height="15" fill="rgb(231,37,19)" fg:x="1175" fg:w="1"/><text x="94.3253%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.0753%" y="581" width="0.0801%" height="15" fill="rgb(213,154,5)" fg:x="1175" fg:w="1"/><text x="94.3253%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0753%" y="565" width="0.0801%" height="15" fill="rgb(234,102,6)" fg:x="1175" fg:w="1"/><text x="94.3253%" y="575.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="94.0753%" y="549" width="0.0801%" height="15" fill="rgb(206,125,39)" fg:x="1175" fg:w="1"/><text x="94.3253%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.2354%" y="581" width="0.1601%" height="15" fill="rgb(254,216,50)" fg:x="1177" fg:w="2"/><text x="94.4854%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="94.1553%" y="597" width="0.3203%" height="15" fill="rgb(205,65,40)" fg:x="1176" fg:w="4"/><text x="94.4053%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.3955%" y="581" width="0.0801%" height="15" fill="rgb(244,217,7)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.3955%" y="565" width="0.0801%" height="15" fill="rgb(220,203,19)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.3955%" y="549" width="0.0801%" height="15" fill="rgb(254,124,45)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.3955%" y="533" width="0.0801%" height="15" fill="rgb(236,111,39)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.3955%" y="517" width="0.0801%" height="15" fill="rgb(243,49,31)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.3955%" y="501" width="0.0801%" height="15" fill="rgb(252,80,32)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.3955%" y="485" width="0.0801%" height="15" fill="rgb(221,67,33)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.3955%" y="469" width="0.0801%" height="15" fill="rgb(225,12,36)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.3955%" y="453" width="0.0801%" height="15" fill="rgb(210,14,38)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.3955%" y="437" width="0.0801%" height="15" fill="rgb(251,82,7)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.3955%" y="421" width="0.0801%" height="15" fill="rgb(253,73,22)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.3955%" y="405" width="0.0801%" height="15" fill="rgb(237,31,38)" fg:x="1179" fg:w="1"/><text x="94.6455%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="94.4756%" y="597" width="0.0801%" height="15" fill="rgb(234,184,33)" fg:x="1180" fg:w="1"/><text x="94.7256%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="94.4756%" y="581" width="0.0801%" height="15" fill="rgb(219,43,13)" fg:x="1180" fg:w="1"/><text x="94.7256%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.4756%" y="565" width="0.0801%" height="15" fill="rgb(252,139,13)" fg:x="1180" fg:w="1"/><text x="94.7256%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.4756%" y="549" width="0.0801%" height="15" fill="rgb(229,79,33)" fg:x="1180" fg:w="1"/><text x="94.7256%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.5556%" y="597" width="0.0801%" height="15" fill="rgb(248,8,21)" fg:x="1181" fg:w="1"/><text x="94.8056%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (88 samples, 7.05%)</title><rect x="87.6701%" y="661" width="7.0456%" height="15" fill="rgb(225,124,31)" fg:x="1095" fg:w="88"/><text x="87.9201%" y="671.50">&lt;plugins_..</text></g><g><title>plugins_core::location::change_location (21 samples, 1.68%)</title><rect x="93.0344%" y="645" width="1.6813%" height="15" fill="rgb(248,141,9)" fg:x="1162" fg:w="21"/><text x="93.2844%" y="655.50"></text></g><g><title>plugins_core::location::Location::set (8 samples, 0.64%)</title><rect x="94.0753%" y="629" width="0.6405%" height="15" fill="rgb(251,223,32)" fg:x="1175" fg:w="8"/><text x="94.3253%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="94.1553%" y="613" width="0.5604%" height="15" fill="rgb(251,8,33)" fg:x="1176" fg:w="7"/><text x="94.4053%" y="623.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="94.6357%" y="597" width="0.0801%" height="15" fill="rgb(205,95,13)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="94.6357%" y="581" width="0.0801%" height="15" fill="rgb(235,208,38)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6357%" y="565" width="0.0801%" height="15" fill="rgb(222,33,24)" fg:x="1182" fg:w="1"/><text x="94.8857%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.7958%" y="533" width="0.0801%" height="15" fill="rgb(219,97,3)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.7958%" y="517" width="0.0801%" height="15" fill="rgb(209,15,37)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.7958%" y="581" width="0.1601%" height="15" fill="rgb(206,100,16)" fg:x="1184" fg:w="2"/><text x="95.0458%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.7958%" y="565" width="0.1601%" height="15" fill="rgb(208,61,41)" fg:x="1184" fg:w="2"/><text x="95.0458%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.7958%" y="549" width="0.1601%" height="15" fill="rgb(226,154,13)" fg:x="1184" fg:w="2"/><text x="95.0458%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.8759%" y="533" width="0.0801%" height="15" fill="rgb(226,113,19)" fg:x="1185" fg:w="1"/><text x="95.1259%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.8759%" y="517" width="0.0801%" height="15" fill="rgb(209,115,46)" fg:x="1185" fg:w="1"/><text x="95.1259%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.8759%" y="501" width="0.0801%" height="15" fill="rgb(234,170,38)" fg:x="1185" fg:w="1"/><text x="95.1259%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.8759%" y="485" width="0.0801%" height="15" fill="rgb(228,23,37)" fg:x="1185" fg:w="1"/><text x="95.1259%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.8759%" y="469" width="0.0801%" height="15" fill="rgb(243,83,27)" fg:x="1185" fg:w="1"/><text x="95.1259%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="94.8759%" y="453" width="0.0801%" height="15" fill="rgb(251,121,22)" fg:x="1185" fg:w="1"/><text x="95.1259%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="94.8759%" y="437" width="0.0801%" height="15" fill="rgb(205,106,26)" fg:x="1185" fg:w="1"/><text x="95.1259%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (4 samples, 0.32%)</title><rect x="94.7158%" y="629" width="0.3203%" height="15" fill="rgb(251,23,10)" fg:x="1183" fg:w="4"/><text x="94.9658%" y="639.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="94.7158%" y="613" width="0.3203%" height="15" fill="rgb(250,218,35)" fg:x="1183" fg:w="4"/><text x="94.9658%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="94.7158%" y="597" width="0.3203%" height="15" fill="rgb(211,16,34)" fg:x="1183" fg:w="4"/><text x="94.9658%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.9560%" y="581" width="0.0801%" height="15" fill="rgb(238,148,30)" fg:x="1186" fg:w="1"/><text x="95.2060%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.9560%" y="565" width="0.0801%" height="15" fill="rgb(236,171,40)" fg:x="1186" fg:w="1"/><text x="95.2060%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.9560%" y="549" width="0.0801%" height="15" fill="rgb(237,128,15)" fg:x="1186" fg:w="1"/><text x="95.2060%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.9560%" y="533" width="0.0801%" height="15" fill="rgb(222,8,10)" fg:x="1186" fg:w="1"/><text x="95.2060%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.9560%" y="517" width="0.0801%" height="15" fill="rgb(244,223,11)" fg:x="1186" fg:w="1"/><text x="95.2060%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.9560%" y="501" width="0.0801%" height="15" fill="rgb(230,23,54)" fg:x="1186" fg:w="1"/><text x="95.2060%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.9560%" y="485" width="0.0801%" height="15" fill="rgb(206,71,18)" fg:x="1186" fg:w="1"/><text x="95.2060%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.9560%" y="469" width="0.0801%" height="15" fill="rgb(221,190,41)" fg:x="1186" fg:w="1"/><text x="95.2060%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.0360%" y="581" width="0.0801%" height="15" fill="rgb(242,202,19)" fg:x="1187" fg:w="1"/><text x="95.2860%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.0360%" y="565" width="0.0801%" height="15" fill="rgb(242,213,28)" fg:x="1187" fg:w="1"/><text x="95.2860%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.0360%" y="549" width="0.0801%" height="15" fill="rgb(224,77,34)" fg:x="1187" fg:w="1"/><text x="95.2860%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.0360%" y="533" width="0.0801%" height="15" fill="rgb(231,13,30)" fg:x="1187" fg:w="1"/><text x="95.2860%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.1161%" y="453" width="0.0801%" height="15" fill="rgb(231,126,46)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="95.0360%" y="629" width="0.2402%" height="15" fill="rgb(237,50,16)" fg:x="1187" fg:w="3"/><text x="95.2860%" y="639.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="95.0360%" y="613" width="0.2402%" height="15" fill="rgb(250,0,53)" fg:x="1187" fg:w="3"/><text x="95.2860%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="95.0360%" y="597" width="0.2402%" height="15" fill="rgb(206,168,4)" fg:x="1187" fg:w="3"/><text x="95.2860%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.1161%" y="581" width="0.1601%" height="15" fill="rgb(237,195,30)" fg:x="1188" fg:w="2"/><text x="95.3661%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.1161%" y="565" width="0.1601%" height="15" fill="rgb(250,185,28)" fg:x="1188" fg:w="2"/><text x="95.3661%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.1161%" y="549" width="0.1601%" height="15" fill="rgb(236,31,48)" fg:x="1188" fg:w="2"/><text x="95.3661%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.1161%" y="533" width="0.1601%" height="15" fill="rgb(240,210,1)" fg:x="1188" fg:w="2"/><text x="95.3661%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="95.1161%" y="517" width="0.1601%" height="15" fill="rgb(211,67,10)" fg:x="1188" fg:w="2"/><text x="95.3661%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.1161%" y="501" width="0.1601%" height="15" fill="rgb(224,37,37)" fg:x="1188" fg:w="2"/><text x="95.3661%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.1161%" y="485" width="0.1601%" height="15" fill="rgb(211,57,29)" fg:x="1188" fg:w="2"/><text x="95.3661%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.1161%" y="469" width="0.1601%" height="15" fill="rgb(222,128,38)" fg:x="1188" fg:w="2"/><text x="95.3661%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.1962%" y="453" width="0.0801%" height="15" fill="rgb(222,119,2)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.1962%" y="437" width="0.0801%" height="15" fill="rgb(207,185,13)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="95.1962%" y="421" width="0.0801%" height="15" fill="rgb(234,134,26)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="95.1962%" y="405" width="0.0801%" height="15" fill="rgb(236,28,54)" fg:x="1189" fg:w="1"/><text x="95.4462%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.2762%" y="629" width="0.0801%" height="15" fill="rgb(218,4,16)" fg:x="1190" fg:w="1"/><text x="95.5262%" y="639.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (9 samples, 0.72%)</title><rect x="94.7158%" y="645" width="0.7206%" height="15" fill="rgb(206,115,32)" fg:x="1183" fg:w="9"/><text x="94.9658%" y="655.50"></text></g><g><title>plugins_core::looking::model::Unqualified::qualify (1 samples, 0.08%)</title><rect x="95.3563%" y="629" width="0.0801%" height="15" fill="rgb(221,12,8)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.3563%" y="613" width="0.0801%" height="15" fill="rgb(239,207,6)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.4363%" y="597" width="0.0801%" height="15" fill="rgb(217,119,6)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="95.4363%" y="613" width="0.1601%" height="15" fill="rgb(230,27,1)" fg:x="1192" fg:w="2"/><text x="95.6863%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="95.5164%" y="597" width="0.0801%" height="15" fill="rgb(237,155,1)" fg:x="1193" fg:w="1"/><text x="95.7664%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="95.5965%" y="597" width="0.1601%" height="15" fill="rgb(248,66,50)" fg:x="1194" fg:w="2"/><text x="95.8465%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="95.5965%" y="581" width="0.1601%" height="15" fill="rgb(218,66,19)" fg:x="1194" fg:w="2"/><text x="95.8465%" y="591.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="95.5965%" y="565" width="0.1601%" height="15" fill="rgb(229,19,7)" fg:x="1194" fg:w="2"/><text x="95.8465%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="95.7566%" y="581" width="0.0801%" height="15" fill="rgb(223,65,18)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="95.7566%" y="565" width="0.0801%" height="15" fill="rgb(216,100,6)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="95.7566%" y="549" width="0.0801%" height="15" fill="rgb(215,16,2)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="95.7566%" y="533" width="0.0801%" height="15" fill="rgb(219,20,33)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="95.7566%" y="517" width="0.0801%" height="15" fill="rgb(215,120,26)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.7566%" y="501" width="0.0801%" height="15" fill="rgb(240,175,31)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.7566%" y="485" width="0.0801%" height="15" fill="rgb(245,165,43)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="95.7566%" y="469" width="0.0801%" height="15" fill="rgb(228,92,16)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="95.7566%" y="453" width="0.0801%" height="15" fill="rgb(252,37,37)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.7566%" y="437" width="0.0801%" height="15" fill="rgb(220,96,32)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.7566%" y="421" width="0.0801%" height="15" fill="rgb(206,224,2)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="95.7566%" y="405" width="0.0801%" height="15" fill="rgb(221,63,25)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.7566%" y="389" width="0.0801%" height="15" fill="rgb(244,60,40)" fg:x="1196" fg:w="1"/><text x="96.0066%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="95.8367%" y="581" width="0.1601%" height="15" fill="rgb(209,102,13)" fg:x="1197" fg:w="2"/><text x="96.0867%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="95.8367%" y="565" width="0.1601%" height="15" fill="rgb(216,127,17)" fg:x="1197" fg:w="2"/><text x="96.0867%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.9167%" y="549" width="0.0801%" height="15" fill="rgb(242,182,26)" fg:x="1198" fg:w="1"/><text x="96.1667%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="95.9968%" y="549" width="0.0801%" height="15" fill="rgb(233,22,19)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="95.9968%" y="533" width="0.0801%" height="15" fill="rgb(238,173,31)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.9968%" y="517" width="0.0801%" height="15" fill="rgb(244,165,10)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="95.9968%" y="501" width="0.0801%" height="15" fill="rgb(251,138,36)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="95.9968%" y="485" width="0.0801%" height="15" fill="rgb(233,2,19)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="495.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="95.9968%" y="469" width="0.0801%" height="15" fill="rgb(206,178,31)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9968%" y="453" width="0.0801%" height="15" fill="rgb(223,128,44)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9968%" y="437" width="0.0801%" height="15" fill="rgb(238,24,5)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.9968%" y="421" width="0.0801%" height="15" fill="rgb(217,140,4)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.9968%" y="405" width="0.0801%" height="15" fill="rgb(250,89,54)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.9968%" y="389" width="0.0801%" height="15" fill="rgb(223,199,30)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.9968%" y="373" width="0.0801%" height="15" fill="rgb(220,47,34)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.9968%" y="357" width="0.0801%" height="15" fill="rgb(206,12,44)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.9968%" y="341" width="0.0801%" height="15" fill="rgb(226,159,9)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.9968%" y="325" width="0.0801%" height="15" fill="rgb(224,150,25)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.9968%" y="309" width="0.0801%" height="15" fill="rgb(248,214,17)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.9968%" y="293" width="0.0801%" height="15" fill="rgb(208,189,54)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9968%" y="277" width="0.0801%" height="15" fill="rgb(233,78,33)" fg:x="1199" fg:w="1"/><text x="96.2468%" y="287.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (7 samples, 0.56%)</title><rect x="95.5965%" y="613" width="0.5604%" height="15" fill="rgb(244,217,34)" fg:x="1194" fg:w="7"/><text x="95.8465%" y="623.50"></text></g><g><title>plugins_core::tools::contained_by (5 samples, 0.40%)</title><rect x="95.7566%" y="597" width="0.4003%" height="15" fill="rgb(221,41,46)" fg:x="1196" fg:w="5"/><text x="96.0066%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="95.9968%" y="581" width="0.1601%" height="15" fill="rgb(216,152,46)" fg:x="1199" fg:w="2"/><text x="96.2468%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.9968%" y="565" width="0.1601%" height="15" fill="rgb(235,72,49)" fg:x="1199" fg:w="2"/><text x="96.2468%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="96.0769%" y="549" width="0.0801%" height="15" fill="rgb(214,12,0)" fg:x="1200" fg:w="1"/><text x="96.3269%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.0769%" y="533" width="0.0801%" height="15" fill="rgb(254,8,3)" fg:x="1200" fg:w="1"/><text x="96.3269%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.0769%" y="517" width="0.0801%" height="15" fill="rgb(238,167,16)" fg:x="1200" fg:w="1"/><text x="96.3269%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.0769%" y="501" width="0.0801%" height="15" fill="rgb(236,220,0)" fg:x="1200" fg:w="1"/><text x="96.3269%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="96.1569%" y="581" width="0.0801%" height="15" fill="rgb(207,8,20)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="96.1569%" y="565" width="0.0801%" height="15" fill="rgb(236,113,14)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.1569%" y="549" width="0.0801%" height="15" fill="rgb(207,6,6)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.1569%" y="533" width="0.0801%" height="15" fill="rgb(225,92,41)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1569%" y="517" width="0.0801%" height="15" fill="rgb(234,224,18)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1569%" y="501" width="0.0801%" height="15" fill="rgb(248,195,4)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1569%" y="485" width="0.0801%" height="15" fill="rgb(229,146,7)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1569%" y="469" width="0.0801%" height="15" fill="rgb(249,192,15)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.1569%" y="453" width="0.0801%" height="15" fill="rgb(253,77,34)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1569%" y="437" width="0.0801%" height="15" fill="rgb(236,228,3)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1569%" y="421" width="0.0801%" height="15" fill="rgb(233,71,16)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1569%" y="405" width="0.0801%" height="15" fill="rgb(239,41,1)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1569%" y="389" width="0.0801%" height="15" fill="rgb(214,119,41)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1569%" y="373" width="0.0801%" height="15" fill="rgb(213,17,39)" fg:x="1201" fg:w="1"/><text x="96.4069%" y="383.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="96.1569%" y="613" width="0.1601%" height="15" fill="rgb(245,42,20)" fg:x="1201" fg:w="2"/><text x="96.4069%" y="623.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="96.1569%" y="597" width="0.1601%" height="15" fill="rgb(252,18,22)" fg:x="1201" fg:w="2"/><text x="96.4069%" y="607.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="96.2370%" y="581" width="0.0801%" height="15" fill="rgb(219,125,29)" fg:x="1202" fg:w="1"/><text x="96.4870%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.3171%" y="501" width="0.0801%" height="15" fill="rgb(215,56,47)" fg:x="1203" fg:w="1"/><text x="96.5671%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.3171%" y="485" width="0.0801%" height="15" fill="rgb(212,211,43)" fg:x="1203" fg:w="1"/><text x="96.5671%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.3171%" y="469" width="0.0801%" height="15" fill="rgb(225,24,34)" fg:x="1203" fg:w="1"/><text x="96.5671%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.3171%" y="453" width="0.0801%" height="15" fill="rgb(229,104,27)" fg:x="1203" fg:w="1"/><text x="96.5671%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.3171%" y="437" width="0.0801%" height="15" fill="rgb(208,56,42)" fg:x="1203" fg:w="1"/><text x="96.5671%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.3171%" y="421" width="0.0801%" height="15" fill="rgb(210,79,18)" fg:x="1203" fg:w="1"/><text x="96.5671%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3171%" y="405" width="0.0801%" height="15" fill="rgb(236,125,53)" fg:x="1203" fg:w="1"/><text x="96.5671%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (13 samples, 1.04%)</title><rect x="95.4363%" y="645" width="1.0408%" height="15" fill="rgb(207,101,52)" fg:x="1192" fg:w="13"/><text x="95.6863%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (13 samples, 1.04%)</title><rect x="95.4363%" y="629" width="1.0408%" height="15" fill="rgb(248,51,10)" fg:x="1192" fg:w="13"/><text x="95.6863%" y="639.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (2 samples, 0.16%)</title><rect x="96.3171%" y="613" width="0.1601%" height="15" fill="rgb(222,184,26)" fg:x="1203" fg:w="2"/><text x="96.5671%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.3171%" y="597" width="0.1601%" height="15" fill="rgb(226,13,15)" fg:x="1203" fg:w="2"/><text x="96.5671%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.3171%" y="581" width="0.1601%" height="15" fill="rgb(238,108,43)" fg:x="1203" fg:w="2"/><text x="96.5671%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.3171%" y="565" width="0.1601%" height="15" fill="rgb(252,6,18)" fg:x="1203" fg:w="2"/><text x="96.5671%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="96.3171%" y="549" width="0.1601%" height="15" fill="rgb(215,206,11)" fg:x="1203" fg:w="2"/><text x="96.5671%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="96.3171%" y="533" width="0.1601%" height="15" fill="rgb(243,20,18)" fg:x="1203" fg:w="2"/><text x="96.5671%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="96.3171%" y="517" width="0.1601%" height="15" fill="rgb(213,39,51)" fg:x="1203" fg:w="2"/><text x="96.5671%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="96.3971%" y="501" width="0.0801%" height="15" fill="rgb(225,153,38)" fg:x="1204" fg:w="1"/><text x="96.6471%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.3971%" y="485" width="0.0801%" height="15" fill="rgb(235,8,28)" fg:x="1204" fg:w="1"/><text x="96.6471%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.5572%" y="629" width="0.0801%" height="15" fill="rgb(215,0,21)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.6373%" y="405" width="0.0801%" height="15" fill="rgb(205,153,39)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.6373%" y="389" width="0.0801%" height="15" fill="rgb(231,172,8)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.6373%" y="373" width="0.0801%" height="15" fill="rgb(251,142,40)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.6373%" y="357" width="0.0801%" height="15" fill="rgb(214,48,45)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.6373%" y="341" width="0.0801%" height="15" fill="rgb(231,29,28)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.6373%" y="325" width="0.0801%" height="15" fill="rgb(245,57,8)" fg:x="1207" fg:w="1"/><text x="96.8873%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="96.6373%" y="597" width="0.1601%" height="15" fill="rgb(236,199,39)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="96.6373%" y="581" width="0.1601%" height="15" fill="rgb(208,132,35)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.6373%" y="565" width="0.1601%" height="15" fill="rgb(225,217,34)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.6373%" y="549" width="0.1601%" height="15" fill="rgb(252,227,26)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.6373%" y="533" width="0.1601%" height="15" fill="rgb(250,228,18)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.6373%" y="517" width="0.1601%" height="15" fill="rgb(222,176,49)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.6373%" y="501" width="0.1601%" height="15" fill="rgb(212,89,5)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.6373%" y="485" width="0.1601%" height="15" fill="rgb(211,131,11)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.6373%" y="469" width="0.1601%" height="15" fill="rgb(226,185,34)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="96.6373%" y="453" width="0.1601%" height="15" fill="rgb(239,228,52)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="96.6373%" y="437" width="0.1601%" height="15" fill="rgb(213,126,26)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="96.6373%" y="421" width="0.1601%" height="15" fill="rgb(248,59,21)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="96.7174%" y="405" width="0.0801%" height="15" fill="rgb(207,10,1)" fg:x="1208" fg:w="1"/><text x="96.9674%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.7174%" y="389" width="0.0801%" height="15" fill="rgb(240,122,43)" fg:x="1208" fg:w="1"/><text x="96.9674%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.7974%" y="549" width="0.0801%" height="15" fill="rgb(250,158,39)" fg:x="1209" fg:w="1"/><text x="97.0474%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.7974%" y="533" width="0.0801%" height="15" fill="rgb(212,108,0)" fg:x="1209" fg:w="1"/><text x="97.0474%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.7974%" y="517" width="0.0801%" height="15" fill="rgb(231,150,38)" fg:x="1209" fg:w="1"/><text x="97.0474%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.7974%" y="501" width="0.0801%" height="15" fill="rgb(249,154,4)" fg:x="1209" fg:w="1"/><text x="97.0474%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="96.6373%" y="629" width="0.3203%" height="15" fill="rgb(219,46,1)" fg:x="1207" fg:w="4"/><text x="96.8873%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="96.6373%" y="613" width="0.3203%" height="15" fill="rgb(227,68,4)" fg:x="1207" fg:w="4"/><text x="96.8873%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="96.7974%" y="597" width="0.1601%" height="15" fill="rgb(254,224,51)" fg:x="1209" fg:w="2"/><text x="97.0474%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="96.7974%" y="581" width="0.1601%" height="15" fill="rgb(220,89,20)" fg:x="1209" fg:w="2"/><text x="97.0474%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.7974%" y="565" width="0.1601%" height="15" fill="rgb(245,148,36)" fg:x="1209" fg:w="2"/><text x="97.0474%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.8775%" y="549" width="0.0801%" height="15" fill="rgb(216,50,30)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.8775%" y="533" width="0.0801%" height="15" fill="rgb(254,186,48)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.8775%" y="517" width="0.0801%" height="15" fill="rgb(237,78,54)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.8775%" y="501" width="0.0801%" height="15" fill="rgb(208,122,28)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.8775%" y="485" width="0.0801%" height="15" fill="rgb(237,71,0)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.8775%" y="469" width="0.0801%" height="15" fill="rgb(241,168,21)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.8775%" y="453" width="0.0801%" height="15" fill="rgb(252,223,14)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.8775%" y="437" width="0.0801%" height="15" fill="rgb(228,172,14)" fg:x="1210" fg:w="1"/><text x="97.1275%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9576%" y="597" width="0.0801%" height="15" fill="rgb(236,44,24)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9576%" y="581" width="0.0801%" height="15" fill="rgb(211,153,1)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9576%" y="565" width="0.0801%" height="15" fill="rgb(242,70,19)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9576%" y="549" width="0.0801%" height="15" fill="rgb(237,172,13)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9576%" y="533" width="0.0801%" height="15" fill="rgb(215,222,51)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9576%" y="517" width="0.0801%" height="15" fill="rgb(227,136,3)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.9576%" y="501" width="0.0801%" height="15" fill="rgb(234,107,46)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.9576%" y="485" width="0.0801%" height="15" fill="rgb(224,56,35)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.9576%" y="469" width="0.0801%" height="15" fill="rgb(253,132,31)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.9576%" y="453" width="0.0801%" height="15" fill="rgb(249,97,5)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.9576%" y="437" width="0.0801%" height="15" fill="rgb(225,135,20)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.9576%" y="421" width="0.0801%" height="15" fill="rgb(220,48,27)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.9576%" y="405" width="0.0801%" height="15" fill="rgb(214,91,28)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.9576%" y="389" width="0.0801%" height="15" fill="rgb(232,51,16)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.9576%" y="373" width="0.0801%" height="15" fill="rgb(254,38,15)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9576%" y="357" width="0.0801%" height="15" fill="rgb(243,186,4)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="367.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="97.0376%" y="597" width="0.0801%" height="15" fill="rgb(222,210,21)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="97.0376%" y="581" width="0.0801%" height="15" fill="rgb(228,132,3)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.0376%" y="565" width="0.0801%" height="15" fill="rgb(253,188,15)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="97.0376%" y="549" width="0.0801%" height="15" fill="rgb(216,192,40)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="97.0376%" y="533" width="0.0801%" height="15" fill="rgb(230,126,2)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="97.1177%" y="597" width="0.0801%" height="15" fill="rgb(246,23,15)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.1177%" y="581" width="0.0801%" height="15" fill="rgb(250,224,8)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.1177%" y="565" width="0.0801%" height="15" fill="rgb(247,226,46)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="97.1177%" y="549" width="0.0801%" height="15" fill="rgb(226,67,43)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.1177%" y="533" width="0.0801%" height="15" fill="rgb(239,37,7)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1177%" y="517" width="0.0801%" height="15" fill="rgb(239,125,3)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.1978%" y="565" width="0.0801%" height="15" fill="rgb(235,59,37)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1978%" y="549" width="0.0801%" height="15" fill="rgb(241,214,47)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.40%)</title><rect x="96.9576%" y="629" width="0.4003%" height="15" fill="rgb(214,114,51)" fg:x="1211" fg:w="5"/><text x="97.2076%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="96.9576%" y="613" width="0.4003%" height="15" fill="rgb(221,180,19)" fg:x="1211" fg:w="5"/><text x="97.2076%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.1978%" y="597" width="0.1601%" height="15" fill="rgb(223,66,32)" fg:x="1214" fg:w="2"/><text x="97.4478%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.1978%" y="581" width="0.1601%" height="15" fill="rgb(218,134,38)" fg:x="1214" fg:w="2"/><text x="97.4478%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="97.2778%" y="565" width="0.0801%" height="15" fill="rgb(250,83,11)" fg:x="1215" fg:w="1"/><text x="97.5278%" y="575.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="97.2778%" y="549" width="0.0801%" height="15" fill="rgb(239,137,18)" fg:x="1215" fg:w="1"/><text x="97.5278%" y="559.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="97.2778%" y="533" width="0.0801%" height="15" fill="rgb(242,185,53)" fg:x="1215" fg:w="1"/><text x="97.5278%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.2778%" y="517" width="0.0801%" height="15" fill="rgb(244,165,31)" fg:x="1215" fg:w="1"/><text x="97.5278%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.2778%" y="501" width="0.0801%" height="15" fill="rgb(223,129,30)" fg:x="1215" fg:w="1"/><text x="97.5278%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="97.2778%" y="485" width="0.0801%" height="15" fill="rgb(240,148,35)" fg:x="1215" fg:w="1"/><text x="97.5278%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="97.3579%" y="629" width="0.0801%" height="15" fill="rgb(231,3,24)" fg:x="1216" fg:w="1"/><text x="97.6079%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="97.3579%" y="613" width="0.0801%" height="15" fill="rgb(227,197,42)" fg:x="1216" fg:w="1"/><text x="97.6079%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="97.3579%" y="597" width="0.0801%" height="15" fill="rgb(251,41,31)" fg:x="1216" fg:w="1"/><text x="97.6079%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.3579%" y="581" width="0.0801%" height="15" fill="rgb(207,92,5)" fg:x="1216" fg:w="1"/><text x="97.6079%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.3579%" y="565" width="0.0801%" height="15" fill="rgb(236,62,31)" fg:x="1216" fg:w="1"/><text x="97.6079%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4380%" y="533" width="0.0801%" height="15" fill="rgb(248,218,41)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4380%" y="517" width="0.0801%" height="15" fill="rgb(250,128,19)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4380%" y="501" width="0.0801%" height="15" fill="rgb(239,216,33)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4380%" y="485" width="0.0801%" height="15" fill="rgb(216,44,26)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.4380%" y="469" width="0.0801%" height="15" fill="rgb(207,69,29)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.4380%" y="453" width="0.0801%" height="15" fill="rgb(246,182,38)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.4380%" y="437" width="0.0801%" height="15" fill="rgb(252,219,28)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.4380%" y="421" width="0.0801%" height="15" fill="rgb(209,164,16)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.4380%" y="405" width="0.0801%" height="15" fill="rgb(208,49,15)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.4380%" y="389" width="0.0801%" height="15" fill="rgb(235,42,45)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.4380%" y="373" width="0.0801%" height="15" fill="rgb(246,198,8)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.4380%" y="357" width="0.0801%" height="15" fill="rgb(237,205,33)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.4380%" y="341" width="0.0801%" height="15" fill="rgb(249,116,21)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.4380%" y="325" width="0.0801%" height="15" fill="rgb(230,35,49)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.4380%" y="309" width="0.0801%" height="15" fill="rgb(207,8,52)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.4380%" y="293" width="0.0801%" height="15" fill="rgb(218,173,0)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="97.4380%" y="581" width="0.2402%" height="15" fill="rgb(248,106,34)" fg:x="1217" fg:w="3"/><text x="97.6880%" y="591.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="97.4380%" y="565" width="0.2402%" height="15" fill="rgb(232,50,11)" fg:x="1217" fg:w="3"/><text x="97.6880%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="97.4380%" y="549" width="0.2402%" height="15" fill="rgb(213,142,18)" fg:x="1217" fg:w="3"/><text x="97.6880%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.5180%" y="533" width="0.1601%" height="15" fill="rgb(246,117,38)" fg:x="1218" fg:w="2"/><text x="97.7680%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.5180%" y="517" width="0.1601%" height="15" fill="rgb(218,133,54)" fg:x="1218" fg:w="2"/><text x="97.7680%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.5180%" y="501" width="0.1601%" height="15" fill="rgb(216,154,35)" fg:x="1218" fg:w="2"/><text x="97.7680%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.5180%" y="485" width="0.1601%" height="15" fill="rgb(219,175,36)" fg:x="1218" fg:w="2"/><text x="97.7680%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="97.5180%" y="469" width="0.1601%" height="15" fill="rgb(224,0,16)" fg:x="1218" fg:w="2"/><text x="97.7680%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.5180%" y="453" width="0.1601%" height="15" fill="rgb(221,186,40)" fg:x="1218" fg:w="2"/><text x="97.7680%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.5180%" y="437" width="0.1601%" height="15" fill="rgb(254,0,31)" fg:x="1218" fg:w="2"/><text x="97.7680%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.5180%" y="421" width="0.1601%" height="15" fill="rgb(206,138,52)" fg:x="1218" fg:w="2"/><text x="97.7680%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.5981%" y="405" width="0.0801%" height="15" fill="rgb(229,99,30)" fg:x="1219" fg:w="1"/><text x="97.8481%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.5981%" y="389" width="0.0801%" height="15" fill="rgb(205,131,29)" fg:x="1219" fg:w="1"/><text x="97.8481%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6781%" y="533" width="0.0801%" height="15" fill="rgb(232,114,46)" fg:x="1220" fg:w="1"/><text x="97.9281%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6781%" y="517" width="0.0801%" height="15" fill="rgb(206,181,31)" fg:x="1220" fg:w="1"/><text x="97.9281%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6781%" y="501" width="0.0801%" height="15" fill="rgb(251,142,12)" fg:x="1220" fg:w="1"/><text x="97.9281%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6781%" y="485" width="0.0801%" height="15" fill="rgb(252,128,47)" fg:x="1220" fg:w="1"/><text x="97.9281%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6781%" y="469" width="0.0801%" height="15" fill="rgb(208,51,33)" fg:x="1220" fg:w="1"/><text x="97.9281%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="97.4380%" y="629" width="0.4003%" height="15" fill="rgb(240,36,11)" fg:x="1217" fg:w="5"/><text x="97.6880%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="97.4380%" y="613" width="0.4003%" height="15" fill="rgb(245,160,28)" fg:x="1217" fg:w="5"/><text x="97.6880%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="97.4380%" y="597" width="0.4003%" height="15" fill="rgb(230,37,49)" fg:x="1217" fg:w="5"/><text x="97.6880%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="97.6781%" y="581" width="0.1601%" height="15" fill="rgb(227,40,34)" fg:x="1220" fg:w="2"/><text x="97.9281%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="97.6781%" y="565" width="0.1601%" height="15" fill="rgb(253,212,23)" fg:x="1220" fg:w="2"/><text x="97.9281%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.6781%" y="549" width="0.1601%" height="15" fill="rgb(230,155,36)" fg:x="1220" fg:w="2"/><text x="97.9281%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.7582%" y="533" width="0.0801%" height="15" fill="rgb(221,176,6)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7582%" y="517" width="0.0801%" height="15" fill="rgb(207,203,40)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.7582%" y="501" width="0.0801%" height="15" fill="rgb(215,88,16)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7582%" y="485" width="0.0801%" height="15" fill="rgb(233,52,54)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.7582%" y="469" width="0.0801%" height="15" fill="rgb(205,47,52)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.7582%" y="453" width="0.0801%" height="15" fill="rgb(218,56,43)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.7582%" y="437" width="0.0801%" height="15" fill="rgb(251,225,48)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="97.8383%" y="613" width="0.0801%" height="15" fill="rgb(244,56,1)" fg:x="1222" fg:w="1"/><text x="98.0883%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.8383%" y="597" width="0.0801%" height="15" fill="rgb(215,46,3)" fg:x="1222" fg:w="1"/><text x="98.0883%" y="607.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="97.8383%" y="581" width="0.0801%" height="15" fill="rgb(252,25,51)" fg:x="1222" fg:w="1"/><text x="98.0883%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="97.8383%" y="565" width="0.0801%" height="15" fill="rgb(243,86,25)" fg:x="1222" fg:w="1"/><text x="98.0883%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="97.8383%" y="549" width="0.0801%" height="15" fill="rgb(223,57,49)" fg:x="1222" fg:w="1"/><text x="98.0883%" y="559.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="97.8383%" y="533" width="0.0801%" height="15" fill="rgb(226,26,11)" fg:x="1222" fg:w="1"/><text x="98.0883%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9183%" y="597" width="0.0801%" height="15" fill="rgb(233,166,51)" fg:x="1223" fg:w="1"/><text x="98.1683%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9183%" y="581" width="0.0801%" height="15" fill="rgb(232,145,44)" fg:x="1223" fg:w="1"/><text x="98.1683%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9183%" y="565" width="0.0801%" height="15" fill="rgb(246,98,4)" fg:x="1223" fg:w="1"/><text x="98.1683%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (143 samples, 11.45%)</title><rect x="86.6293%" y="837" width="11.4492%" height="15" fill="rgb(223,187,1)" fg:x="1082" fg:w="143"/><text x="86.8793%" y="847.50">&lt;engine::session:..</text></g><g><title>kernel::plugins::mw::apply_middleware (143 samples, 11.45%)</title><rect x="86.6293%" y="821" width="11.4492%" height="15" fill="rgb(245,183,34)" fg:x="1082" fg:w="143"/><text x="86.8793%" y="831.50">kernel::plugins::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (143 samples, 11.45%)</title><rect x="86.6293%" y="805" width="11.4492%" height="15" fill="rgb(223,6,23)" fg:x="1082" fg:w="143"/><text x="86.8793%" y="815.50">kernel::plugins::..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (143 samples, 11.45%)</title><rect x="86.6293%" y="789" width="11.4492%" height="15" fill="rgb(226,63,21)" fg:x="1082" fg:w="143"/><text x="86.8793%" y="799.50">&lt;engine::session:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (131 samples, 10.49%)</title><rect x="87.5901%" y="773" width="10.4884%" height="15" fill="rgb(244,58,43)" fg:x="1094" fg:w="131"/><text x="87.8401%" y="783.50">kernel::plugins..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (131 samples, 10.49%)</title><rect x="87.5901%" y="757" width="10.4884%" height="15" fill="rgb(221,65,27)" fg:x="1094" fg:w="131"/><text x="87.8401%" y="767.50">&lt;plugins_dynlib..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (131 samples, 10.49%)</title><rect x="87.5901%" y="741" width="10.4884%" height="15" fill="rgb(231,17,48)" fg:x="1094" fg:w="131"/><text x="87.8401%" y="751.50">kernel::plugins..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (130 samples, 10.41%)</title><rect x="87.6701%" y="725" width="10.4083%" height="15" fill="rgb(229,198,23)" fg:x="1095" fg:w="130"/><text x="87.9201%" y="735.50">core::ops::func..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (130 samples, 10.41%)</title><rect x="87.6701%" y="709" width="10.4083%" height="15" fill="rgb(220,192,38)" fg:x="1095" fg:w="130"/><text x="87.9201%" y="719.50">kernel::plugins..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (130 samples, 10.41%)</title><rect x="87.6701%" y="693" width="10.4083%" height="15" fill="rgb(224,157,12)" fg:x="1095" fg:w="130"/><text x="87.9201%" y="703.50">core::ops::func..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (130 samples, 10.41%)</title><rect x="87.6701%" y="677" width="10.4083%" height="15" fill="rgb(210,74,7)" fg:x="1095" fg:w="130"/><text x="87.9201%" y="687.50">&lt;engine::sessio..</text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (42 samples, 3.36%)</title><rect x="94.7158%" y="661" width="3.3627%" height="15" fill="rgb(233,184,31)" fg:x="1183" fg:w="42"/><text x="94.9658%" y="671.50">&lt;pl..</text></g><g><title>plugins_core::location::change_location (20 samples, 1.60%)</title><rect x="96.4772%" y="645" width="1.6013%" height="15" fill="rgb(246,44,22)" fg:x="1205" fg:w="20"/><text x="96.7272%" y="655.50"></text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="97.8383%" y="629" width="0.2402%" height="15" fill="rgb(236,102,41)" fg:x="1222" fg:w="3"/><text x="98.0883%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="97.9183%" y="613" width="0.1601%" height="15" fill="rgb(245,17,40)" fg:x="1223" fg:w="2"/><text x="98.1683%" y="623.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="97.9984%" y="597" width="0.0801%" height="15" fill="rgb(227,165,9)" fg:x="1224" fg:w="1"/><text x="98.2484%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.9984%" y="581" width="0.0801%" height="15" fill="rgb(220,123,37)" fg:x="1224" fg:w="1"/><text x="98.2484%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="97.9984%" y="565" width="0.0801%" height="15" fill="rgb(239,124,16)" fg:x="1224" fg:w="1"/><text x="98.2484%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.9984%" y="549" width="0.0801%" height="15" fill="rgb(214,215,39)" fg:x="1224" fg:w="1"/><text x="98.2484%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9984%" y="533" width="0.0801%" height="15" fill="rgb(224,72,47)" fg:x="1224" fg:w="1"/><text x="98.2484%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.1585%" y="741" width="0.0801%" height="15" fill="rgb(252,112,7)" fg:x="1226" fg:w="1"/><text x="98.4085%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="98.0785%" y="757" width="0.2402%" height="15" fill="rgb(228,116,35)" fg:x="1225" fg:w="3"/><text x="98.3285%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.2386%" y="741" width="0.0801%" height="15" fill="rgb(246,125,25)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.2386%" y="725" width="0.0801%" height="15" fill="rgb(230,220,33)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2386%" y="709" width="0.0801%" height="15" fill="rgb(220,48,47)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2386%" y="693" width="0.0801%" height="15" fill="rgb(240,130,32)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2386%" y="677" width="0.0801%" height="15" fill="rgb(252,97,40)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.2386%" y="661" width="0.0801%" height="15" fill="rgb(211,117,15)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.2386%" y="645" width="0.0801%" height="15" fill="rgb(223,47,44)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.2386%" y="629" width="0.0801%" height="15" fill="rgb(239,53,20)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="98.2386%" y="613" width="0.0801%" height="15" fill="rgb(242,71,22)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="98.2386%" y="597" width="0.0801%" height="15" fill="rgb(244,146,41)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="98.2386%" y="581" width="0.0801%" height="15" fill="rgb(206,133,42)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.2386%" y="565" width="0.0801%" height="15" fill="rgb(220,206,16)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.2386%" y="549" width="0.0801%" height="15" fill="rgb(234,5,52)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="98.2386%" y="533" width="0.0801%" height="15" fill="rgb(206,81,46)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="98.2386%" y="517" width="0.0801%" height="15" fill="rgb(245,111,47)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="98.2386%" y="501" width="0.0801%" height="15" fill="rgb(227,198,45)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="98.2386%" y="485" width="0.0801%" height="15" fill="rgb(223,141,47)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2386%" y="469" width="0.0801%" height="15" fill="rgb(234,124,3)" fg:x="1227" fg:w="1"/><text x="98.4886%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="98.3187%" y="741" width="0.0801%" height="15" fill="rgb(218,189,15)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.3187%" y="725" width="0.0801%" height="15" fill="rgb(253,91,25)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="98.0785%" y="789" width="0.4003%" height="15" fill="rgb(243,103,39)" fg:x="1225" fg:w="5"/><text x="98.3285%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="98.0785%" y="773" width="0.4003%" height="15" fill="rgb(252,94,6)" fg:x="1225" fg:w="5"/><text x="98.3285%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="98.3187%" y="757" width="0.1601%" height="15" fill="rgb(236,153,18)" fg:x="1228" fg:w="2"/><text x="98.5687%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.3987%" y="741" width="0.0801%" height="15" fill="rgb(218,227,22)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.3987%" y="725" width="0.0801%" height="15" fill="rgb(209,53,33)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3987%" y="709" width="0.0801%" height="15" fill="rgb(252,183,3)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3987%" y="693" width="0.0801%" height="15" fill="rgb(249,138,54)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3987%" y="677" width="0.0801%" height="15" fill="rgb(226,39,3)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3987%" y="661" width="0.0801%" height="15" fill="rgb(237,129,38)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.3987%" y="645" width="0.0801%" height="15" fill="rgb(218,214,54)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3987%" y="629" width="0.0801%" height="15" fill="rgb(228,112,8)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3987%" y="613" width="0.0801%" height="15" fill="rgb(219,128,11)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3987%" y="597" width="0.0801%" height="15" fill="rgb(240,39,37)" fg:x="1229" fg:w="1"/><text x="98.6487%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.4788%" y="677" width="0.0801%" height="15" fill="rgb(215,199,42)" fg:x="1230" fg:w="1"/><text x="98.7288%" y="687.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="98.4788%" y="773" width="0.2402%" height="15" fill="rgb(248,51,13)" fg:x="1230" fg:w="3"/><text x="98.7288%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.4788%" y="757" width="0.2402%" height="15" fill="rgb(225,196,0)" fg:x="1230" fg:w="3"/><text x="98.7288%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.4788%" y="741" width="0.2402%" height="15" fill="rgb(221,31,53)" fg:x="1230" fg:w="3"/><text x="98.7288%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.4788%" y="725" width="0.2402%" height="15" fill="rgb(211,79,37)" fg:x="1230" fg:w="3"/><text x="98.7288%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.4788%" y="709" width="0.2402%" height="15" fill="rgb(227,118,20)" fg:x="1230" fg:w="3"/><text x="98.7288%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.4788%" y="693" width="0.2402%" height="15" fill="rgb(225,142,40)" fg:x="1230" fg:w="3"/><text x="98.7288%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.5588%" y="677" width="0.1601%" height="15" fill="rgb(208,183,34)" fg:x="1231" fg:w="2"/><text x="98.8088%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.5588%" y="661" width="0.1601%" height="15" fill="rgb(209,112,52)" fg:x="1231" fg:w="2"/><text x="98.8088%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.5588%" y="645" width="0.1601%" height="15" fill="rgb(236,9,32)" fg:x="1231" fg:w="2"/><text x="98.8088%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.5588%" y="629" width="0.1601%" height="15" fill="rgb(208,222,9)" fg:x="1231" fg:w="2"/><text x="98.8088%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.5588%" y="613" width="0.1601%" height="15" fill="rgb(214,142,24)" fg:x="1231" fg:w="2"/><text x="98.8088%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.5588%" y="597" width="0.1601%" height="15" fill="rgb(244,48,51)" fg:x="1231" fg:w="2"/><text x="98.8088%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.5588%" y="581" width="0.1601%" height="15" fill="rgb(253,171,44)" fg:x="1231" fg:w="2"/><text x="98.8088%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.5588%" y="565" width="0.1601%" height="15" fill="rgb(221,85,21)" fg:x="1231" fg:w="2"/><text x="98.8088%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6389%" y="549" width="0.0801%" height="15" fill="rgb(245,40,38)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.6389%" y="533" width="0.0801%" height="15" fill="rgb(220,135,37)" fg:x="1232" fg:w="1"/><text x="98.8889%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.7190%" y="741" width="0.0801%" height="15" fill="rgb(249,62,46)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.7990%" y="741" width="0.0801%" height="15" fill="rgb(232,81,15)" fg:x="1234" fg:w="1"/><text x="99.0490%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8791%" y="709" width="0.0801%" height="15" fill="rgb(244,179,28)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="98.8791%" y="741" width="0.1601%" height="15" fill="rgb(220,4,32)" fg:x="1235" fg:w="2"/><text x="99.1291%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.8791%" y="725" width="0.1601%" height="15" fill="rgb(214,116,42)" fg:x="1235" fg:w="2"/><text x="99.1291%" y="735.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9592%" y="709" width="0.0801%" height="15" fill="rgb(226,94,31)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="719.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9592%" y="693" width="0.0801%" height="15" fill="rgb(241,172,26)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9592%" y="677" width="0.0801%" height="15" fill="rgb(206,38,39)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="687.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9592%" y="661" width="0.0801%" height="15" fill="rgb(210,139,19)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9592%" y="645" width="0.0801%" height="15" fill="rgb(220,10,22)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (8 samples, 0.64%)</title><rect x="98.4788%" y="789" width="0.6405%" height="15" fill="rgb(225,218,36)" fg:x="1230" fg:w="8"/><text x="98.7288%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="98.7190%" y="773" width="0.4003%" height="15" fill="rgb(244,50,47)" fg:x="1233" fg:w="5"/><text x="98.9690%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="98.7190%" y="757" width="0.4003%" height="15" fill="rgb(247,80,2)" fg:x="1233" fg:w="5"/><text x="98.9690%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0392%" y="741" width="0.0801%" height="15" fill="rgb(234,70,38)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0392%" y="725" width="0.0801%" height="15" fill="rgb(238,170,25)" fg:x="1237" fg:w="1"/><text x="99.2892%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.1994%" y="645" width="0.0801%" height="15" fill="rgb(252,23,6)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.1994%" y="629" width="0.0801%" height="15" fill="rgb(209,98,49)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.28%)</title><rect x="98.0785%" y="805" width="1.2810%" height="15" fill="rgb(213,29,25)" fg:x="1225" fg:w="16"/><text x="98.3285%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="99.1193%" y="789" width="0.2402%" height="15" fill="rgb(235,71,32)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="799.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="99.1193%" y="773" width="0.2402%" height="15" fill="rgb(227,75,49)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="99.1193%" y="757" width="0.2402%" height="15" fill="rgb(220,19,24)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.1193%" y="741" width="0.2402%" height="15" fill="rgb(249,67,15)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.1193%" y="725" width="0.2402%" height="15" fill="rgb(233,197,44)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.1193%" y="709" width="0.2402%" height="15" fill="rgb(245,206,23)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.1193%" y="693" width="0.2402%" height="15" fill="rgb(205,164,14)" fg:x="1238" fg:w="3"/><text x="99.3693%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.1994%" y="677" width="0.1601%" height="15" fill="rgb(209,57,33)" fg:x="1239" fg:w="2"/><text x="99.4494%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1994%" y="661" width="0.1601%" height="15" fill="rgb(237,209,41)" fg:x="1239" fg:w="2"/><text x="99.4494%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.2794%" y="645" width="0.0801%" height="15" fill="rgb(252,93,6)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2794%" y="629" width="0.0801%" height="15" fill="rgb(218,214,32)" fg:x="1240" fg:w="1"/><text x="99.5294%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (18 samples, 1.44%)</title><rect x="98.0785%" y="821" width="1.4412%" height="15" fill="rgb(243,144,9)" fg:x="1225" fg:w="18"/><text x="98.3285%" y="831.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="99.3595%" y="805" width="0.1601%" height="15" fill="rgb(254,62,38)" fg:x="1241" fg:w="2"/><text x="99.6095%" y="815.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.4396%" y="789" width="0.0801%" height="15" fill="rgb(247,146,11)" fg:x="1242" fg:w="1"/><text x="99.6896%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (20 samples, 1.60%)</title><rect x="98.0785%" y="837" width="1.6013%" height="15" fill="rgb(213,96,14)" fg:x="1225" fg:w="20"/><text x="98.3285%" y="847.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="99.5196%" y="821" width="0.1601%" height="15" fill="rgb(246,102,11)" fg:x="1243" fg:w="2"/><text x="99.7696%" y="831.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.5997%" y="805" width="0.0801%" height="15" fill="rgb(241,182,16)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.5997%" y="789" width="0.0801%" height="15" fill="rgb(225,28,43)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.5997%" y="773" width="0.0801%" height="15" fill="rgb(247,87,15)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.5997%" y="757" width="0.0801%" height="15" fill="rgb(225,211,30)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.5997%" y="741" width="0.0801%" height="15" fill="rgb(223,111,44)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.5997%" y="725" width="0.0801%" height="15" fill="rgb(225,60,10)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.5997%" y="709" width="0.0801%" height="15" fill="rgb(245,196,31)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.5997%" y="693" width="0.0801%" height="15" fill="rgb(238,71,27)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.5997%" y="677" width="0.0801%" height="15" fill="rgb(212,77,40)" fg:x="1244" fg:w="1"/><text x="99.8497%" y="687.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.6797%" y="837" width="0.0801%" height="15" fill="rgb(242,14,34)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="99.6797%" y="821" width="0.0801%" height="15" fill="rgb(227,221,15)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="831.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.6797%" y="805" width="0.0801%" height="15" fill="rgb(230,80,41)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="815.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.6797%" y="789" width="0.0801%" height="15" fill="rgb(221,65,43)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="799.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="99.6797%" y="773" width="0.0801%" height="15" fill="rgb(250,139,15)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="783.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.6797%" y="757" width="0.0801%" height="15" fill="rgb(236,101,33)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="767.50"></text></g><g><title>plugins_core::library::parser::word (1 samples, 0.08%)</title><rect x="99.6797%" y="741" width="0.0801%" height="15" fill="rgb(240,185,7)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="751.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="99.6797%" y="725" width="0.0801%" height="15" fill="rgb(230,219,29)" fg:x="1245" fg:w="1"/><text x="99.9297%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="99.7598%" y="837" width="0.0801%" height="15" fill="rgb(250,208,42)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="847.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.7598%" y="821" width="0.0801%" height="15" fill="rgb(231,6,17)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="831.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="99.8399%" y="837" width="0.0801%" height="15" fill="rgb(250,180,47)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="847.50"></text></g><g><title>kernel::session::SetSession::new (1 samples, 0.08%)</title><rect x="99.8399%" y="821" width="0.0801%" height="15" fill="rgb(218,156,38)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="831.50"></text></g><g><title>all (1,249 samples, 100%)</title><rect x="0.0000%" y="1221" width="100.0000%" height="15" fill="rgb(207,13,46)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1231.50"></text></g><g><title>simple-6376ea62 (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(221,30,24)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1215.50">simple-6376ea62</text></g><g><title>_start (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1189" width="100.0000%" height="15" fill="rgb(239,110,29)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1199.50">_start</text></g><g><title>__libc_start_main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(223,212,28)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1183.50">__libc_start_main</text></g><g><title>main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(206,148,43)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1167.50">main</text></g><g><title>std::rt::lang_start_internal (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(227,139,9)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1151.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(244,64,31)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1135.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(219,45,45)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1119.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(205,112,40)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1103.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(207,18,46)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1087.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(219,65,15)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(248,191,24)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(251,155,16)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1039.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(249,62,38)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1023.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,249 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(252,214,17)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1007.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,249 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(246,215,53)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="991.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(232,148,8)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="975.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,249 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(221,119,15)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="959.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,249 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(239,69,36)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="943.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (436 samples, 34.91%)</title><rect x="65.0921%" y="917" width="34.9079%" height="15" fill="rgb(247,164,1)" fg:x="813" fg:w="436"/><text x="65.3421%" y="927.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routin..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (436 samples, 34.91%)</title><rect x="65.0921%" y="901" width="34.9079%" height="15" fill="rgb(216,221,53)" fg:x="813" fg:w="436"/><text x="65.3421%" y="911.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (436 samples, 34.91%)</title><rect x="65.0921%" y="885" width="34.9079%" height="15" fill="rgb(249,57,29)" fg:x="813" fg:w="436"/><text x="65.3421%" y="895.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (167 samples, 13.37%)</title><rect x="86.6293%" y="869" width="13.3707%" height="15" fill="rgb(227,23,6)" fg:x="1082" fg:w="167"/><text x="86.8793%" y="879.50">engine::session::Ses..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (167 samples, 13.37%)</title><rect x="86.6293%" y="853" width="13.3707%" height="15" fill="rgb(213,211,30)" fg:x="1082" fg:w="167"/><text x="86.8793%" y="863.50">engine::session::Ses..</text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="99.9199%" y="837" width="0.0801%" height="15" fill="rgb(254,202,30)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="847.50"></text></g></svg></svg>