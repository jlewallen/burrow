<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1237.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="1261"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.3172%" y="837" width="0.0793%" height="15" fill="rgb(207,115,37)" fg:x="4" fg:w="1"/><text x="0.5672%" y="847.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3965%" y="805" width="0.0793%" height="15" fill="rgb(237,221,44)" fg:x="5" fg:w="1"/><text x="0.6465%" y="815.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.6344%" y="741" width="0.0793%" height="15" fill="rgb(249,78,2)" fg:x="8" fg:w="1"/><text x="0.8844%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="0.7137%" y="725" width="0.2379%" height="15" fill="rgb(211,169,23)" fg:x="9" fg:w="3"/><text x="0.9637%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="0.7137%" y="709" width="0.2379%" height="15" fill="rgb(207,116,29)" fg:x="9" fg:w="3"/><text x="0.9637%" y="719.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.7137%" y="693" width="0.2379%" height="15" fill="rgb(240,84,33)" fg:x="9" fg:w="3"/><text x="0.9637%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.9516%" y="725" width="0.1586%" height="15" fill="rgb(229,224,31)" fg:x="12" fg:w="2"/><text x="1.2016%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.1895%" y="693" width="0.1586%" height="15" fill="rgb(227,90,31)" fg:x="15" fg:w="2"/><text x="1.4395%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.03%)</title><rect x="0.4758%" y="757" width="1.0309%" height="15" fill="rgb(249,22,41)" fg:x="6" fg:w="13"/><text x="0.7258%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.79%)</title><rect x="0.7137%" y="741" width="0.7930%" height="15" fill="rgb(239,65,11)" fg:x="9" fg:w="10"/><text x="0.9637%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="1.1102%" y="725" width="0.3965%" height="15" fill="rgb(205,5,23)" fg:x="14" fg:w="5"/><text x="1.3602%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="1.1895%" y="709" width="0.3172%" height="15" fill="rgb(254,78,52)" fg:x="15" fg:w="4"/><text x="1.4395%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.3481%" y="693" width="0.1586%" height="15" fill="rgb(214,156,33)" fg:x="17" fg:w="2"/><text x="1.5981%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.3481%" y="677" width="0.1586%" height="15" fill="rgb(208,20,30)" fg:x="17" fg:w="2"/><text x="1.5981%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.19%)</title><rect x="0.3965%" y="821" width="1.1895%" height="15" fill="rgb(223,133,18)" fg:x="5" fg:w="15"/><text x="0.6465%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (14 samples, 1.11%)</title><rect x="0.4758%" y="805" width="1.1102%" height="15" fill="rgb(222,91,41)" fg:x="6" fg:w="14"/><text x="0.7258%" y="815.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.11%)</title><rect x="0.4758%" y="789" width="1.1102%" height="15" fill="rgb(247,137,48)" fg:x="6" fg:w="14"/><text x="0.7258%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.11%)</title><rect x="0.4758%" y="773" width="1.1102%" height="15" fill="rgb(239,156,11)" fg:x="6" fg:w="14"/><text x="0.7258%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="1.5067%" y="757" width="0.0793%" height="15" fill="rgb(244,56,26)" fg:x="19" fg:w="1"/><text x="1.7567%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.43%)</title><rect x="0.2379%" y="853" width="1.4274%" height="15" fill="rgb(205,131,49)" fg:x="3" fg:w="18"/><text x="0.4879%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (16 samples, 1.27%)</title><rect x="0.3965%" y="837" width="1.2688%" height="15" fill="rgb(224,0,2)" fg:x="5" fg:w="16"/><text x="0.6465%" y="847.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5860%" y="821" width="0.0793%" height="15" fill="rgb(247,59,36)" fg:x="20" fg:w="1"/><text x="1.8360%" y="831.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="1.6653%" y="805" width="0.0793%" height="15" fill="rgb(215,4,47)" fg:x="21" fg:w="1"/><text x="1.9153%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="1.8239%" y="789" width="0.0793%" height="15" fill="rgb(242,72,42)" fg:x="23" fg:w="1"/><text x="2.0739%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="1.8239%" y="773" width="0.0793%" height="15" fill="rgb(232,145,44)" fg:x="23" fg:w="1"/><text x="2.0739%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="1.9033%" y="757" width="0.0793%" height="15" fill="rgb(205,108,43)" fg:x="24" fg:w="1"/><text x="2.1533%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="1.9033%" y="741" width="0.0793%" height="15" fill="rgb(215,190,17)" fg:x="24" fg:w="1"/><text x="2.1533%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="1.9033%" y="725" width="0.0793%" height="15" fill="rgb(223,90,34)" fg:x="24" fg:w="1"/><text x="2.1533%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="1.9033%" y="709" width="0.0793%" height="15" fill="rgb(216,25,0)" fg:x="24" fg:w="1"/><text x="2.1533%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="1.9033%" y="693" width="0.0793%" height="15" fill="rgb(223,51,28)" fg:x="24" fg:w="1"/><text x="2.1533%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="1.9033%" y="677" width="0.0793%" height="15" fill="rgb(227,131,7)" fg:x="24" fg:w="1"/><text x="2.1533%" y="687.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="1.9033%" y="661" width="0.0793%" height="15" fill="rgb(216,72,36)" fg:x="24" fg:w="1"/><text x="2.1533%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="1.9033%" y="645" width="0.0793%" height="15" fill="rgb(243,158,40)" fg:x="24" fg:w="1"/><text x="2.1533%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="1.9033%" y="629" width="0.0793%" height="15" fill="rgb(218,60,54)" fg:x="24" fg:w="1"/><text x="2.1533%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="1.9033%" y="613" width="0.0793%" height="15" fill="rgb(230,15,46)" fg:x="24" fg:w="1"/><text x="2.1533%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="1.9033%" y="597" width="0.0793%" height="15" fill="rgb(250,22,26)" fg:x="24" fg:w="1"/><text x="2.1533%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="1.9033%" y="581" width="0.0793%" height="15" fill="rgb(239,194,40)" fg:x="24" fg:w="1"/><text x="2.1533%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="1.9033%" y="565" width="0.0793%" height="15" fill="rgb(219,62,9)" fg:x="24" fg:w="1"/><text x="2.1533%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="1.9033%" y="549" width="0.0793%" height="15" fill="rgb(228,45,21)" fg:x="24" fg:w="1"/><text x="2.1533%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="1.9033%" y="533" width="0.0793%" height="15" fill="rgb(242,56,44)" fg:x="24" fg:w="1"/><text x="2.1533%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="1.9033%" y="517" width="0.0793%" height="15" fill="rgb(239,170,14)" fg:x="24" fg:w="1"/><text x="2.1533%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="1.9033%" y="501" width="0.0793%" height="15" fill="rgb(236,150,13)" fg:x="24" fg:w="1"/><text x="2.1533%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="1.9033%" y="485" width="0.0793%" height="15" fill="rgb(228,15,30)" fg:x="24" fg:w="1"/><text x="2.1533%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="1.9033%" y="469" width="0.0793%" height="15" fill="rgb(217,43,28)" fg:x="24" fg:w="1"/><text x="2.1533%" y="479.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.79%)</title><rect x="1.9826%" y="693" width="0.7930%" height="15" fill="rgb(246,223,1)" fg:x="25" fg:w="10"/><text x="2.2326%" y="703.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.79%)</title><rect x="1.9826%" y="677" width="0.7930%" height="15" fill="rgb(247,103,7)" fg:x="25" fg:w="10"/><text x="2.2326%" y="687.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (12 samples, 0.95%)</title><rect x="1.9033%" y="789" width="0.9516%" height="15" fill="rgb(205,105,39)" fg:x="24" fg:w="12"/><text x="2.1533%" y="799.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (12 samples, 0.95%)</title><rect x="1.9033%" y="773" width="0.9516%" height="15" fill="rgb(216,134,18)" fg:x="24" fg:w="12"/><text x="2.1533%" y="783.50"></text></g><g><title>libloading::safe::Library::new (11 samples, 0.87%)</title><rect x="1.9826%" y="757" width="0.8723%" height="15" fill="rgb(226,139,50)" fg:x="25" fg:w="11"/><text x="2.2326%" y="767.50"></text></g><g><title>dlopen (11 samples, 0.87%)</title><rect x="1.9826%" y="741" width="0.8723%" height="15" fill="rgb(251,152,38)" fg:x="25" fg:w="11"/><text x="2.2326%" y="751.50"></text></g><g><title>_dl_catch_error (11 samples, 0.87%)</title><rect x="1.9826%" y="725" width="0.8723%" height="15" fill="rgb(222,63,15)" fg:x="25" fg:w="11"/><text x="2.2326%" y="735.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.87%)</title><rect x="1.9826%" y="709" width="0.8723%" height="15" fill="rgb(212,198,28)" fg:x="25" fg:w="11"/><text x="2.2326%" y="719.50"></text></g><g><title>_dl_signal_exception (1 samples, 0.08%)</title><rect x="2.7756%" y="693" width="0.0793%" height="15" fill="rgb(216,93,38)" fg:x="35" fg:w="1"/><text x="3.0256%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="2.8549%" y="757" width="0.0793%" height="15" fill="rgb(247,202,44)" fg:x="36" fg:w="1"/><text x="3.1049%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="2.8549%" y="741" width="0.0793%" height="15" fill="rgb(237,204,46)" fg:x="36" fg:w="1"/><text x="3.1049%" y="751.50"></text></g><g><title>engine::session::Session::initialize (17 samples, 1.35%)</title><rect x="1.7446%" y="805" width="1.3481%" height="15" fill="rgb(224,98,48)" fg:x="22" fg:w="17"/><text x="1.9946%" y="815.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (3 samples, 0.24%)</title><rect x="2.8549%" y="789" width="0.2379%" height="15" fill="rgb(247,105,21)" fg:x="36" fg:w="3"/><text x="3.1049%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="2.8549%" y="773" width="0.2379%" height="15" fill="rgb(212,137,52)" fg:x="36" fg:w="3"/><text x="3.1049%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="2.9342%" y="757" width="0.1586%" height="15" fill="rgb(223,76,33)" fg:x="37" fg:w="2"/><text x="3.1842%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="2.9342%" y="741" width="0.1586%" height="15" fill="rgb(209,156,27)" fg:x="37" fg:w="2"/><text x="3.1842%" y="751.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="2.9342%" y="725" width="0.1586%" height="15" fill="rgb(249,81,54)" fg:x="37" fg:w="2"/><text x="3.1842%" y="735.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (19 samples, 1.51%)</title><rect x="1.6653%" y="853" width="1.5067%" height="15" fill="rgb(241,46,29)" fg:x="21" fg:w="19"/><text x="1.9153%" y="863.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (19 samples, 1.51%)</title><rect x="1.6653%" y="837" width="1.5067%" height="15" fill="rgb(213,193,39)" fg:x="21" fg:w="19"/><text x="1.9153%" y="847.50"></text></g><g><title>engine::session::Session::new (19 samples, 1.51%)</title><rect x="1.6653%" y="821" width="1.5067%" height="15" fill="rgb(214,85,16)" fg:x="21" fg:w="19"/><text x="1.9153%" y="831.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="3.0928%" y="805" width="0.0793%" height="15" fill="rgb(216,184,17)" fg:x="39" fg:w="1"/><text x="3.3428%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.0928%" y="789" width="0.0793%" height="15" fill="rgb(254,219,29)" fg:x="39" fg:w="1"/><text x="3.3428%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.0928%" y="773" width="0.0793%" height="15" fill="rgb(209,148,34)" fg:x="39" fg:w="1"/><text x="3.3428%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.0928%" y="757" width="0.0793%" height="15" fill="rgb(253,215,11)" fg:x="39" fg:w="1"/><text x="3.3428%" y="767.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.0928%" y="741" width="0.0793%" height="15" fill="rgb(232,126,20)" fg:x="39" fg:w="1"/><text x="3.3428%" y="751.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.3307%" y="837" width="0.0793%" height="15" fill="rgb(248,118,51)" fg:x="42" fg:w="1"/><text x="3.5807%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.3307%" y="821" width="0.0793%" height="15" fill="rgb(226,121,21)" fg:x="42" fg:w="1"/><text x="3.5807%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.3307%" y="805" width="0.0793%" height="15" fill="rgb(216,128,16)" fg:x="42" fg:w="1"/><text x="3.5807%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="3.3307%" y="789" width="0.0793%" height="15" fill="rgb(205,17,9)" fg:x="42" fg:w="1"/><text x="3.5807%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="3.3307%" y="773" width="0.0793%" height="15" fill="rgb(206,197,21)" fg:x="42" fg:w="1"/><text x="3.5807%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="3.3307%" y="757" width="0.0793%" height="15" fill="rgb(212,202,9)" fg:x="42" fg:w="1"/><text x="3.5807%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.3307%" y="741" width="0.0793%" height="15" fill="rgb(241,131,50)" fg:x="42" fg:w="1"/><text x="3.5807%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="3.3307%" y="725" width="0.0793%" height="15" fill="rgb(228,115,51)" fg:x="42" fg:w="1"/><text x="3.5807%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="3.3307%" y="709" width="0.0793%" height="15" fill="rgb(237,209,8)" fg:x="42" fg:w="1"/><text x="3.5807%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="3.3307%" y="693" width="0.0793%" height="15" fill="rgb(241,121,28)" fg:x="42" fg:w="1"/><text x="3.5807%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="3.3307%" y="677" width="0.0793%" height="15" fill="rgb(238,194,51)" fg:x="42" fg:w="1"/><text x="3.5807%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="3.3307%" y="661" width="0.0793%" height="15" fill="rgb(208,41,39)" fg:x="42" fg:w="1"/><text x="3.5807%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.3307%" y="645" width="0.0793%" height="15" fill="rgb(223,95,44)" fg:x="42" fg:w="1"/><text x="3.5807%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.4100%" y="837" width="0.0793%" height="15" fill="rgb(253,98,40)" fg:x="43" fg:w="1"/><text x="3.6600%" y="847.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.4100%" y="821" width="0.0793%" height="15" fill="rgb(210,5,12)" fg:x="43" fg:w="1"/><text x="3.6600%" y="831.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="3.4893%" y="821" width="0.1586%" height="15" fill="rgb(233,201,23)" fg:x="44" fg:w="2"/><text x="3.7393%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="3.5686%" y="805" width="0.0793%" height="15" fill="rgb(251,68,15)" fg:x="45" fg:w="1"/><text x="3.8186%" y="815.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="3.6479%" y="757" width="0.0793%" height="15" fill="rgb(243,10,46)" fg:x="46" fg:w="1"/><text x="3.8979%" y="767.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="3.6479%" y="741" width="0.0793%" height="15" fill="rgb(253,130,44)" fg:x="46" fg:w="1"/><text x="3.8979%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="3.6479%" y="725" width="0.0793%" height="15" fill="rgb(244,5,26)" fg:x="46" fg:w="1"/><text x="3.8979%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="3.6479%" y="709" width="0.0793%" height="15" fill="rgb(220,126,20)" fg:x="46" fg:w="1"/><text x="3.8979%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.6479%" y="693" width="0.0793%" height="15" fill="rgb(212,188,29)" fg:x="46" fg:w="1"/><text x="3.8979%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.6479%" y="677" width="0.0793%" height="15" fill="rgb(227,194,48)" fg:x="46" fg:w="1"/><text x="3.8979%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.6479%" y="661" width="0.0793%" height="15" fill="rgb(245,64,28)" fg:x="46" fg:w="1"/><text x="3.8979%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="3.7272%" y="741" width="0.2379%" height="15" fill="rgb(205,44,7)" fg:x="47" fg:w="3"/><text x="3.9772%" y="751.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="3.7272%" y="725" width="0.2379%" height="15" fill="rgb(213,193,11)" fg:x="47" fg:w="3"/><text x="3.9772%" y="735.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="3.7272%" y="709" width="0.2379%" height="15" fill="rgb(238,157,6)" fg:x="47" fg:w="3"/><text x="3.9772%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="3.7272%" y="693" width="0.2379%" height="15" fill="rgb(222,73,7)" fg:x="47" fg:w="3"/><text x="3.9772%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.8858%" y="677" width="0.0793%" height="15" fill="rgb(224,78,15)" fg:x="49" fg:w="1"/><text x="4.1358%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="4.0444%" y="725" width="0.0793%" height="15" fill="rgb(218,149,46)" fg:x="51" fg:w="1"/><text x="4.2944%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.0444%" y="709" width="0.0793%" height="15" fill="rgb(218,175,44)" fg:x="51" fg:w="1"/><text x="4.2944%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.0444%" y="693" width="0.0793%" height="15" fill="rgb(215,183,45)" fg:x="51" fg:w="1"/><text x="4.2944%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="4.0444%" y="677" width="0.0793%" height="15" fill="rgb(226,116,37)" fg:x="51" fg:w="1"/><text x="4.2944%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="4.1237%" y="725" width="0.3965%" height="15" fill="rgb(252,224,12)" fg:x="52" fg:w="5"/><text x="4.3737%" y="735.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="4.2030%" y="709" width="0.3172%" height="15" fill="rgb(232,212,21)" fg:x="53" fg:w="4"/><text x="4.4530%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.3616%" y="693" width="0.1586%" height="15" fill="rgb(226,191,16)" fg:x="55" fg:w="2"/><text x="4.6116%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.3616%" y="677" width="0.1586%" height="15" fill="rgb(231,156,11)" fg:x="55" fg:w="2"/><text x="4.6116%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.8374%" y="629" width="0.0793%" height="15" fill="rgb(225,134,49)" fg:x="61" fg:w="1"/><text x="5.0874%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="4.6788%" y="677" width="0.3172%" height="15" fill="rgb(254,55,32)" fg:x="59" fg:w="4"/><text x="4.9288%" y="687.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="4.6788%" y="661" width="0.3172%" height="15" fill="rgb(242,195,29)" fg:x="59" fg:w="4"/><text x="4.9288%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="4.7581%" y="645" width="0.2379%" height="15" fill="rgb(210,155,20)" fg:x="60" fg:w="3"/><text x="5.0081%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="4.9167%" y="629" width="0.0793%" height="15" fill="rgb(243,170,23)" fg:x="62" fg:w="1"/><text x="5.1667%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="4.6788%" y="709" width="0.3965%" height="15" fill="rgb(242,197,51)" fg:x="59" fg:w="5"/><text x="4.9288%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="4.6788%" y="693" width="0.3965%" height="15" fill="rgb(248,48,13)" fg:x="59" fg:w="5"/><text x="4.9288%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="4.9960%" y="677" width="0.0793%" height="15" fill="rgb(221,185,15)" fg:x="63" fg:w="1"/><text x="5.2460%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.9960%" y="661" width="0.0793%" height="15" fill="rgb(244,49,7)" fg:x="63" fg:w="1"/><text x="5.2460%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.0753%" y="709" width="0.1586%" height="15" fill="rgb(213,182,52)" fg:x="64" fg:w="2"/><text x="5.3253%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.1546%" y="693" width="0.0793%" height="15" fill="rgb(209,15,45)" fg:x="65" fg:w="1"/><text x="5.4046%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.3132%" y="693" width="0.1586%" height="15" fill="rgb(233,23,44)" fg:x="67" fg:w="2"/><text x="5.5632%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.3925%" y="677" width="0.0793%" height="15" fill="rgb(220,182,30)" fg:x="68" fg:w="1"/><text x="5.6425%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.4718%" y="677" width="0.1586%" height="15" fill="rgb(219,116,33)" fg:x="69" fg:w="2"/><text x="5.7218%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.5511%" y="661" width="0.0793%" height="15" fill="rgb(231,15,21)" fg:x="70" fg:w="1"/><text x="5.8011%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.5511%" y="645" width="0.0793%" height="15" fill="rgb(238,119,25)" fg:x="70" fg:w="1"/><text x="5.8011%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.5511%" y="629" width="0.0793%" height="15" fill="rgb(232,30,39)" fg:x="70" fg:w="1"/><text x="5.8011%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.6305%" y="661" width="0.0793%" height="15" fill="rgb(241,26,30)" fg:x="71" fg:w="1"/><text x="5.8805%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.6305%" y="645" width="0.0793%" height="15" fill="rgb(234,154,4)" fg:x="71" fg:w="1"/><text x="5.8805%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.6305%" y="629" width="0.0793%" height="15" fill="rgb(229,199,39)" fg:x="71" fg:w="1"/><text x="5.8805%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.6305%" y="613" width="0.0793%" height="15" fill="rgb(236,213,10)" fg:x="71" fg:w="1"/><text x="5.8805%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="5.7098%" y="645" width="0.2379%" height="15" fill="rgb(247,28,19)" fg:x="72" fg:w="3"/><text x="5.9598%" y="655.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.7098%" y="629" width="0.2379%" height="15" fill="rgb(239,199,24)" fg:x="72" fg:w="3"/><text x="5.9598%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="5.7098%" y="613" width="0.2379%" height="15" fill="rgb(246,122,13)" fg:x="72" fg:w="3"/><text x="5.9598%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="5.7098%" y="597" width="0.2379%" height="15" fill="rgb(210,203,29)" fg:x="72" fg:w="3"/><text x="5.9598%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="5.7891%" y="581" width="0.1586%" height="15" fill="rgb(218,4,50)" fg:x="73" fg:w="2"/><text x="6.0391%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.7891%" y="565" width="0.1586%" height="15" fill="rgb(236,142,48)" fg:x="73" fg:w="2"/><text x="6.0391%" y="575.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="5.7891%" y="549" width="0.1586%" height="15" fill="rgb(245,173,2)" fg:x="73" fg:w="2"/><text x="6.0391%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="5.7098%" y="661" width="0.3172%" height="15" fill="rgb(244,196,18)" fg:x="72" fg:w="4"/><text x="5.9598%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.9477%" y="645" width="0.0793%" height="15" fill="rgb(221,27,33)" fg:x="75" fg:w="1"/><text x="6.1977%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.9477%" y="629" width="0.0793%" height="15" fill="rgb(210,206,16)" fg:x="75" fg:w="1"/><text x="6.1977%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.9477%" y="613" width="0.0793%" height="15" fill="rgb(238,161,34)" fg:x="75" fg:w="1"/><text x="6.1977%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.87%)</title><rect x="5.6305%" y="677" width="0.8723%" height="15" fill="rgb(243,118,39)" fg:x="71" fg:w="11"/><text x="5.8805%" y="687.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="6.0270%" y="661" width="0.4758%" height="15" fill="rgb(234,126,9)" fg:x="76" fg:w="6"/><text x="6.2770%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="6.1856%" y="645" width="0.3172%" height="15" fill="rgb(234,167,42)" fg:x="78" fg:w="4"/><text x="6.4356%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="6.2649%" y="629" width="0.2379%" height="15" fill="rgb(238,54,48)" fg:x="79" fg:w="3"/><text x="6.5149%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.4235%" y="613" width="0.0793%" height="15" fill="rgb(226,105,2)" fg:x="81" fg:w="1"/><text x="6.6735%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.4235%" y="597" width="0.0793%" height="15" fill="rgb(223,95,23)" fg:x="81" fg:w="1"/><text x="6.6735%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.19%)</title><rect x="5.4718%" y="693" width="1.1895%" height="15" fill="rgb(249,212,19)" fg:x="69" fg:w="15"/><text x="5.7218%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.5028%" y="677" width="0.1586%" height="15" fill="rgb(234,158,54)" fg:x="82" fg:w="2"/><text x="6.7528%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.67%)</title><rect x="5.2339%" y="709" width="1.6653%" height="15" fill="rgb(247,114,32)" fg:x="66" fg:w="21"/><text x="5.4839%" y="719.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="6.6614%" y="693" width="0.2379%" height="15" fill="rgb(250,68,44)" fg:x="84" fg:w="3"/><text x="6.9114%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.8200%" y="677" width="0.0793%" height="15" fill="rgb(242,3,15)" fg:x="86" fg:w="1"/><text x="7.0700%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.8200%" y="661" width="0.0793%" height="15" fill="rgb(223,110,32)" fg:x="86" fg:w="1"/><text x="7.0700%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.62%)</title><rect x="4.5202%" y="725" width="2.6170%" height="15" fill="rgb(216,26,54)" fg:x="57" fg:w="33"/><text x="4.7702%" y="735.50">se..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="6.8993%" y="709" width="0.2379%" height="15" fill="rgb(209,145,42)" fg:x="87" fg:w="3"/><text x="7.1493%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.9786%" y="693" width="0.1586%" height="15" fill="rgb(240,111,53)" fg:x="88" fg:w="2"/><text x="7.2286%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.0579%" y="677" width="0.0793%" height="15" fill="rgb(209,101,4)" fg:x="89" fg:w="1"/><text x="7.3079%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (43 samples, 3.41%)</title><rect x="3.9651%" y="741" width="3.4100%" height="15" fill="rgb(231,74,29)" fg:x="50" fg:w="43"/><text x="4.2151%" y="751.50">ser..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="7.1372%" y="725" width="0.2379%" height="15" fill="rgb(223,12,12)" fg:x="90" fg:w="3"/><text x="7.3872%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="7.1372%" y="709" width="0.2379%" height="15" fill="rgb(207,162,2)" fg:x="90" fg:w="3"/><text x="7.3872%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.2165%" y="693" width="0.1586%" height="15" fill="rgb(230,152,0)" fg:x="91" fg:w="2"/><text x="7.4665%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="7.2165%" y="677" width="0.1586%" height="15" fill="rgb(254,156,19)" fg:x="91" fg:w="2"/><text x="7.4665%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.2958%" y="661" width="0.0793%" height="15" fill="rgb(250,28,0)" fg:x="92" fg:w="1"/><text x="7.5458%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.2958%" y="645" width="0.0793%" height="15" fill="rgb(253,27,5)" fg:x="92" fg:w="1"/><text x="7.5458%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (47 samples, 3.73%)</title><rect x="3.7272%" y="757" width="3.7272%" height="15" fill="rgb(244,154,7)" fg:x="47" fg:w="47"/><text x="3.9772%" y="767.50">&lt;ser..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.3751%" y="741" width="0.0793%" height="15" fill="rgb(242,108,21)" fg:x="93" fg:w="1"/><text x="7.6251%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.5337%" y="709" width="0.0793%" height="15" fill="rgb(254,200,38)" fg:x="95" fg:w="1"/><text x="7.7837%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.6130%" y="693" width="0.0793%" height="15" fill="rgb(250,145,41)" fg:x="96" fg:w="1"/><text x="7.8630%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.6130%" y="677" width="0.0793%" height="15" fill="rgb(235,136,31)" fg:x="96" fg:w="1"/><text x="7.8630%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.7716%" y="677" width="0.0793%" height="15" fill="rgb(215,13,18)" fg:x="98" fg:w="1"/><text x="8.0216%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.8509%" y="677" width="0.0793%" height="15" fill="rgb(238,199,12)" fg:x="99" fg:w="1"/><text x="8.1009%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="7.9302%" y="677" width="0.0793%" height="15" fill="rgb(242,179,49)" fg:x="100" fg:w="1"/><text x="8.1802%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="7.9302%" y="661" width="0.0793%" height="15" fill="rgb(214,10,44)" fg:x="100" fg:w="1"/><text x="8.1802%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.9302%" y="645" width="0.0793%" height="15" fill="rgb(229,181,11)" fg:x="100" fg:w="1"/><text x="8.1802%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.71%)</title><rect x="7.4544%" y="757" width="0.7137%" height="15" fill="rgb(244,155,10)" fg:x="94" fg:w="9"/><text x="7.7044%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.71%)</title><rect x="7.4544%" y="741" width="0.7137%" height="15" fill="rgb(254,13,48)" fg:x="94" fg:w="9"/><text x="7.7044%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.71%)</title><rect x="7.4544%" y="725" width="0.7137%" height="15" fill="rgb(210,164,6)" fg:x="94" fg:w="9"/><text x="7.7044%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="7.6130%" y="709" width="0.5551%" height="15" fill="rgb(216,187,40)" fg:x="96" fg:w="7"/><text x="7.8630%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="7.6923%" y="693" width="0.4758%" height="15" fill="rgb(208,143,21)" fg:x="97" fg:w="6"/><text x="7.9423%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="8.0095%" y="677" width="0.1586%" height="15" fill="rgb(211,73,41)" fg:x="101" fg:w="2"/><text x="8.2595%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.1681%" y="709" width="0.0793%" height="15" fill="rgb(244,69,21)" fg:x="103" fg:w="1"/><text x="8.4181%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.1681%" y="693" width="0.0793%" height="15" fill="rgb(230,152,32)" fg:x="103" fg:w="1"/><text x="8.4181%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.2474%" y="677" width="0.0793%" height="15" fill="rgb(208,110,18)" fg:x="104" fg:w="1"/><text x="8.4974%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="8.2474%" y="709" width="0.1586%" height="15" fill="rgb(214,201,49)" fg:x="104" fg:w="2"/><text x="8.4974%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="8.2474%" y="693" width="0.1586%" height="15" fill="rgb(253,153,27)" fg:x="104" fg:w="2"/><text x="8.4974%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.3267%" y="677" width="0.0793%" height="15" fill="rgb(238,61,11)" fg:x="105" fg:w="1"/><text x="8.5767%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.4853%" y="661" width="0.0793%" height="15" fill="rgb(227,84,2)" fg:x="107" fg:w="1"/><text x="8.7353%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="8.4853%" y="645" width="0.0793%" height="15" fill="rgb(233,52,8)" fg:x="107" fg:w="1"/><text x="8.7353%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.4853%" y="629" width="0.0793%" height="15" fill="rgb(209,136,13)" fg:x="107" fg:w="1"/><text x="8.7353%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.5646%" y="597" width="0.0793%" height="15" fill="rgb(229,86,25)" fg:x="108" fg:w="1"/><text x="8.8146%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.5646%" y="581" width="0.0793%" height="15" fill="rgb(235,47,16)" fg:x="108" fg:w="1"/><text x="8.8146%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.5646%" y="565" width="0.0793%" height="15" fill="rgb(231,186,4)" fg:x="108" fg:w="1"/><text x="8.8146%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="8.7232%" y="549" width="0.0793%" height="15" fill="rgb(209,213,23)" fg:x="110" fg:w="1"/><text x="8.9732%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.7232%" y="533" width="0.0793%" height="15" fill="rgb(212,142,47)" fg:x="110" fg:w="1"/><text x="8.9732%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.7232%" y="517" width="0.0793%" height="15" fill="rgb(251,86,24)" fg:x="110" fg:w="1"/><text x="8.9732%" y="527.50"></text></g><g><title>engine::session::Session::flush (68 samples, 5.39%)</title><rect x="3.4893%" y="837" width="5.3925%" height="15" fill="rgb(206,217,17)" fg:x="44" fg:w="68"/><text x="3.7393%" y="847.50">engine:..</text></g><g><title>engine::session::state::State::close (66 samples, 5.23%)</title><rect x="3.6479%" y="821" width="5.2339%" height="15" fill="rgb(248,92,38)" fg:x="46" fg:w="66"/><text x="3.8979%" y="831.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (66 samples, 5.23%)</title><rect x="3.6479%" y="805" width="5.2339%" height="15" fill="rgb(214,25,29)" fg:x="46" fg:w="66"/><text x="3.8979%" y="815.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (66 samples, 5.23%)</title><rect x="3.6479%" y="789" width="5.2339%" height="15" fill="rgb(245,117,13)" fg:x="46" fg:w="66"/><text x="3.8979%" y="799.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (66 samples, 5.23%)</title><rect x="3.6479%" y="773" width="5.2339%" height="15" fill="rgb(205,169,9)" fg:x="46" fg:w="66"/><text x="3.8979%" y="783.50">engine..</text></g><g><title>kernel::model::any_entity_changes (9 samples, 0.71%)</title><rect x="8.1681%" y="757" width="0.7137%" height="15" fill="rgb(223,134,38)" fg:x="103" fg:w="9"/><text x="8.4181%" y="767.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.71%)</title><rect x="8.1681%" y="741" width="0.7137%" height="15" fill="rgb(249,129,49)" fg:x="103" fg:w="9"/><text x="8.4181%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.71%)</title><rect x="8.1681%" y="725" width="0.7137%" height="15" fill="rgb(229,157,45)" fg:x="103" fg:w="9"/><text x="8.4181%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="8.4060%" y="709" width="0.4758%" height="15" fill="rgb(232,159,11)" fg:x="106" fg:w="6"/><text x="8.6560%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="8.4060%" y="693" width="0.4758%" height="15" fill="rgb(230,134,26)" fg:x="106" fg:w="6"/><text x="8.6560%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="8.4060%" y="677" width="0.4758%" height="15" fill="rgb(234,149,40)" fg:x="106" fg:w="6"/><text x="8.6560%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="8.5646%" y="661" width="0.3172%" height="15" fill="rgb(221,122,15)" fg:x="108" fg:w="4"/><text x="8.8146%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="8.5646%" y="645" width="0.3172%" height="15" fill="rgb(228,127,0)" fg:x="108" fg:w="4"/><text x="8.8146%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="8.5646%" y="629" width="0.3172%" height="15" fill="rgb(248,37,7)" fg:x="108" fg:w="4"/><text x="8.8146%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="8.5646%" y="613" width="0.3172%" height="15" fill="rgb(215,140,49)" fg:x="108" fg:w="4"/><text x="8.8146%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="8.6439%" y="597" width="0.2379%" height="15" fill="rgb(236,65,39)" fg:x="109" fg:w="3"/><text x="8.8939%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="8.6439%" y="581" width="0.2379%" height="15" fill="rgb(253,102,38)" fg:x="109" fg:w="3"/><text x="8.8939%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="8.7232%" y="565" width="0.1586%" height="15" fill="rgb(244,100,34)" fg:x="110" fg:w="2"/><text x="8.9732%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="8.8025%" y="549" width="0.0793%" height="15" fill="rgb(210,179,47)" fg:x="111" fg:w="1"/><text x="9.0525%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.8818%" y="757" width="0.0793%" height="15" fill="rgb(231,41,37)" fg:x="112" fg:w="1"/><text x="9.1318%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.8818%" y="741" width="0.0793%" height="15" fill="rgb(226,209,17)" fg:x="112" fg:w="1"/><text x="9.1318%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.8818%" y="725" width="0.0793%" height="15" fill="rgb(231,154,20)" fg:x="112" fg:w="1"/><text x="9.1318%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.8818%" y="709" width="0.0793%" height="15" fill="rgb(216,134,24)" fg:x="112" fg:w="1"/><text x="9.1318%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.8818%" y="693" width="0.0793%" height="15" fill="rgb(224,71,42)" fg:x="112" fg:w="1"/><text x="9.1318%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.8818%" y="677" width="0.0793%" height="15" fill="rgb(250,65,23)" fg:x="112" fg:w="1"/><text x="9.1318%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.8818%" y="661" width="0.0793%" height="15" fill="rgb(209,160,35)" fg:x="112" fg:w="1"/><text x="9.1318%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.8818%" y="645" width="0.0793%" height="15" fill="rgb(215,8,11)" fg:x="112" fg:w="1"/><text x="9.1318%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.8818%" y="629" width="0.0793%" height="15" fill="rgb(227,27,12)" fg:x="112" fg:w="1"/><text x="9.1318%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.8818%" y="613" width="0.0793%" height="15" fill="rgb(226,111,41)" fg:x="112" fg:w="1"/><text x="9.1318%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.8818%" y="597" width="0.0793%" height="15" fill="rgb(212,195,15)" fg:x="112" fg:w="1"/><text x="9.1318%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.8818%" y="581" width="0.0793%" height="15" fill="rgb(216,191,17)" fg:x="112" fg:w="1"/><text x="9.1318%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.8818%" y="565" width="0.0793%" height="15" fill="rgb(215,57,44)" fg:x="112" fg:w="1"/><text x="9.1318%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.8818%" y="549" width="0.0793%" height="15" fill="rgb(209,38,4)" fg:x="112" fg:w="1"/><text x="9.1318%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.8818%" y="533" width="0.0793%" height="15" fill="rgb(238,49,31)" fg:x="112" fg:w="1"/><text x="9.1318%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.8818%" y="517" width="0.0793%" height="15" fill="rgb(219,48,39)" fg:x="112" fg:w="1"/><text x="9.1318%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="8.8818%" y="805" width="0.2379%" height="15" fill="rgb(252,223,43)" fg:x="112" fg:w="3"/><text x="9.1318%" y="815.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="8.8818%" y="789" width="0.2379%" height="15" fill="rgb(247,205,46)" fg:x="112" fg:w="3"/><text x="9.1318%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="8.8818%" y="773" width="0.2379%" height="15" fill="rgb(231,16,40)" fg:x="112" fg:w="3"/><text x="9.1318%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="8.9611%" y="757" width="0.1586%" height="15" fill="rgb(231,115,5)" fg:x="113" fg:w="2"/><text x="9.2111%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="8.9611%" y="741" width="0.1586%" height="15" fill="rgb(206,127,43)" fg:x="113" fg:w="2"/><text x="9.2111%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="8.9611%" y="725" width="0.1586%" height="15" fill="rgb(218,101,9)" fg:x="113" fg:w="2"/><text x="9.2111%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="8.9611%" y="709" width="0.1586%" height="15" fill="rgb(235,138,50)" fg:x="113" fg:w="2"/><text x="9.2111%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="9.0404%" y="693" width="0.0793%" height="15" fill="rgb(214,197,52)" fg:x="114" fg:w="1"/><text x="9.2904%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.0404%" y="677" width="0.0793%" height="15" fill="rgb(230,80,19)" fg:x="114" fg:w="1"/><text x="9.2904%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.0404%" y="661" width="0.0793%" height="15" fill="rgb(224,77,16)" fg:x="114" fg:w="1"/><text x="9.2904%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.0404%" y="645" width="0.0793%" height="15" fill="rgb(246,4,13)" fg:x="114" fg:w="1"/><text x="9.2904%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.0404%" y="629" width="0.0793%" height="15" fill="rgb(220,177,26)" fg:x="114" fg:w="1"/><text x="9.2904%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.0404%" y="613" width="0.0793%" height="15" fill="rgb(215,114,45)" fg:x="114" fg:w="1"/><text x="9.2904%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="9.0404%" y="597" width="0.0793%" height="15" fill="rgb(215,71,54)" fg:x="114" fg:w="1"/><text x="9.2904%" y="607.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="9.0404%" y="581" width="0.0793%" height="15" fill="rgb(211,155,22)" fg:x="114" fg:w="1"/><text x="9.2904%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="9.1197%" y="789" width="0.0793%" height="15" fill="rgb(245,206,18)" fg:x="115" fg:w="1"/><text x="9.3697%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="9.1197%" y="773" width="0.0793%" height="15" fill="rgb(248,216,48)" fg:x="115" fg:w="1"/><text x="9.3697%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.1197%" y="757" width="0.0793%" height="15" fill="rgb(244,84,45)" fg:x="115" fg:w="1"/><text x="9.3697%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="9.1990%" y="789" width="0.0793%" height="15" fill="rgb(245,13,45)" fg:x="116" fg:w="1"/><text x="9.4490%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="9.1990%" y="773" width="0.0793%" height="15" fill="rgb(247,163,2)" fg:x="116" fg:w="1"/><text x="9.4490%" y="783.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="9.1197%" y="805" width="0.2379%" height="15" fill="rgb(211,175,10)" fg:x="115" fg:w="3"/><text x="9.3697%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="9.2784%" y="789" width="0.0793%" height="15" fill="rgb(215,186,31)" fg:x="117" fg:w="1"/><text x="9.5284%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="9.2784%" y="773" width="0.0793%" height="15" fill="rgb(207,42,11)" fg:x="117" fg:w="1"/><text x="9.5284%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="9.2784%" y="757" width="0.0793%" height="15" fill="rgb(224,197,20)" fg:x="117" fg:w="1"/><text x="9.5284%" y="767.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.2784%" y="741" width="0.0793%" height="15" fill="rgb(244,119,36)" fg:x="117" fg:w="1"/><text x="9.5284%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="9.3577%" y="757" width="0.1586%" height="15" fill="rgb(250,60,27)" fg:x="118" fg:w="2"/><text x="9.6077%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="9.3577%" y="741" width="0.1586%" height="15" fill="rgb(252,202,1)" fg:x="118" fg:w="2"/><text x="9.6077%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="9.3577%" y="725" width="0.1586%" height="15" fill="rgb(206,53,25)" fg:x="118" fg:w="2"/><text x="9.6077%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="9.3577%" y="709" width="0.1586%" height="15" fill="rgb(210,88,4)" fg:x="118" fg:w="2"/><text x="9.6077%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.4370%" y="693" width="0.0793%" height="15" fill="rgb(211,144,28)" fg:x="119" fg:w="1"/><text x="9.6870%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.4370%" y="677" width="0.0793%" height="15" fill="rgb(247,81,32)" fg:x="119" fg:w="1"/><text x="9.6870%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.5163%" y="725" width="0.0793%" height="15" fill="rgb(225,192,11)" fg:x="120" fg:w="1"/><text x="9.7663%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.5163%" y="709" width="0.0793%" height="15" fill="rgb(232,212,27)" fg:x="120" fg:w="1"/><text x="9.7663%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.5163%" y="693" width="0.0793%" height="15" fill="rgb(239,3,29)" fg:x="120" fg:w="1"/><text x="9.7663%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="9.3577%" y="789" width="0.3172%" height="15" fill="rgb(252,225,29)" fg:x="118" fg:w="4"/><text x="9.6077%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="9.3577%" y="773" width="0.3172%" height="15" fill="rgb(205,151,9)" fg:x="118" fg:w="4"/><text x="9.6077%" y="783.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="9.5163%" y="757" width="0.1586%" height="15" fill="rgb(216,171,47)" fg:x="120" fg:w="2"/><text x="9.7663%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="9.5163%" y="741" width="0.1586%" height="15" fill="rgb(206,181,1)" fg:x="120" fg:w="2"/><text x="9.7663%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="9.5956%" y="725" width="0.0793%" height="15" fill="rgb(232,218,10)" fg:x="121" fg:w="1"/><text x="9.8456%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.5956%" y="709" width="0.0793%" height="15" fill="rgb(244,222,51)" fg:x="121" fg:w="1"/><text x="9.8456%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="9.5956%" y="693" width="0.0793%" height="15" fill="rgb(252,215,16)" fg:x="121" fg:w="1"/><text x="9.8456%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.5956%" y="677" width="0.0793%" height="15" fill="rgb(212,130,13)" fg:x="121" fg:w="1"/><text x="9.8456%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="9.5956%" y="661" width="0.0793%" height="15" fill="rgb(227,103,37)" fg:x="121" fg:w="1"/><text x="9.8456%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.5956%" y="645" width="0.0793%" height="15" fill="rgb(249,48,15)" fg:x="121" fg:w="1"/><text x="9.8456%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.5956%" y="629" width="0.0793%" height="15" fill="rgb(225,96,9)" fg:x="121" fg:w="1"/><text x="9.8456%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="9.5956%" y="613" width="0.0793%" height="15" fill="rgb(213,81,41)" fg:x="121" fg:w="1"/><text x="9.8456%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="9.6749%" y="773" width="0.3965%" height="15" fill="rgb(230,15,12)" fg:x="122" fg:w="5"/><text x="9.9249%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.40%)</title><rect x="9.6749%" y="757" width="0.3965%" height="15" fill="rgb(218,106,37)" fg:x="122" fg:w="5"/><text x="9.9249%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="9.6749%" y="741" width="0.3965%" height="15" fill="rgb(223,172,47)" fg:x="122" fg:w="5"/><text x="9.9249%" y="751.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="9.6749%" y="725" width="0.3965%" height="15" fill="rgb(246,180,49)" fg:x="122" fg:w="5"/><text x="9.9249%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.27%)</title><rect x="8.8818%" y="821" width="1.2688%" height="15" fill="rgb(231,63,37)" fg:x="112" fg:w="16"/><text x="9.1318%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.79%)</title><rect x="9.3577%" y="805" width="0.7930%" height="15" fill="rgb(235,70,40)" fg:x="118" fg:w="10"/><text x="9.6077%" y="815.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (6 samples, 0.48%)</title><rect x="9.6749%" y="789" width="0.4758%" height="15" fill="rgb(250,54,26)" fg:x="122" fg:w="6"/><text x="9.9249%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.0714%" y="773" width="0.0793%" height="15" fill="rgb(214,190,1)" fg:x="127" fg:w="1"/><text x="10.3214%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="10.0714%" y="757" width="0.0793%" height="15" fill="rgb(212,40,35)" fg:x="127" fg:w="1"/><text x="10.3214%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="10.0714%" y="741" width="0.0793%" height="15" fill="rgb(239,183,47)" fg:x="127" fg:w="1"/><text x="10.3214%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="10.0714%" y="725" width="0.0793%" height="15" fill="rgb(211,171,49)" fg:x="127" fg:w="1"/><text x="10.3214%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.2300%" y="677" width="0.0793%" height="15" fill="rgb(249,186,27)" fg:x="129" fg:w="1"/><text x="10.4800%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="10.2300%" y="773" width="0.1586%" height="15" fill="rgb(223,23,48)" fg:x="129" fg:w="2"/><text x="10.4800%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="10.2300%" y="757" width="0.1586%" height="15" fill="rgb(209,203,21)" fg:x="129" fg:w="2"/><text x="10.4800%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="10.2300%" y="741" width="0.1586%" height="15" fill="rgb(229,33,27)" fg:x="129" fg:w="2"/><text x="10.4800%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.2300%" y="725" width="0.1586%" height="15" fill="rgb(207,8,53)" fg:x="129" fg:w="2"/><text x="10.4800%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="10.2300%" y="709" width="0.1586%" height="15" fill="rgb(221,42,0)" fg:x="129" fg:w="2"/><text x="10.4800%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.2300%" y="693" width="0.1586%" height="15" fill="rgb(223,115,3)" fg:x="129" fg:w="2"/><text x="10.4800%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.3093%" y="677" width="0.0793%" height="15" fill="rgb(239,35,26)" fg:x="130" fg:w="1"/><text x="10.5593%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.3093%" y="661" width="0.0793%" height="15" fill="rgb(233,22,9)" fg:x="130" fg:w="1"/><text x="10.5593%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.3093%" y="645" width="0.0793%" height="15" fill="rgb(236,221,48)" fg:x="130" fg:w="1"/><text x="10.5593%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.3093%" y="629" width="0.0793%" height="15" fill="rgb(235,52,30)" fg:x="130" fg:w="1"/><text x="10.5593%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.3093%" y="613" width="0.0793%" height="15" fill="rgb(238,133,51)" fg:x="130" fg:w="1"/><text x="10.5593%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="10.3886%" y="725" width="0.1586%" height="15" fill="rgb(213,122,23)" fg:x="131" fg:w="2"/><text x="10.6386%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.4679%" y="709" width="0.0793%" height="15" fill="rgb(225,8,15)" fg:x="132" fg:w="1"/><text x="10.7179%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.4679%" y="693" width="0.0793%" height="15" fill="rgb(219,126,35)" fg:x="132" fg:w="1"/><text x="10.7179%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.5472%" y="725" width="0.1586%" height="15" fill="rgb(246,113,21)" fg:x="133" fg:w="2"/><text x="10.7972%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="10.5472%" y="709" width="0.1586%" height="15" fill="rgb(241,193,32)" fg:x="133" fg:w="2"/><text x="10.7972%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.5472%" y="693" width="0.1586%" height="15" fill="rgb(218,99,18)" fg:x="133" fg:w="2"/><text x="10.7972%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.5472%" y="677" width="0.1586%" height="15" fill="rgb(225,114,4)" fg:x="133" fg:w="2"/><text x="10.7972%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.6265%" y="661" width="0.0793%" height="15" fill="rgb(235,0,15)" fg:x="134" fg:w="1"/><text x="10.8765%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="10.2300%" y="805" width="0.5551%" height="15" fill="rgb(247,45,27)" fg:x="129" fg:w="7"/><text x="10.4800%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="10.2300%" y="789" width="0.5551%" height="15" fill="rgb(249,88,53)" fg:x="129" fg:w="7"/><text x="10.4800%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="10.3886%" y="773" width="0.3965%" height="15" fill="rgb(207,58,45)" fg:x="131" fg:w="5"/><text x="10.6386%" y="783.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="10.3886%" y="757" width="0.3965%" height="15" fill="rgb(216,7,11)" fg:x="131" fg:w="5"/><text x="10.6386%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="10.3886%" y="741" width="0.3965%" height="15" fill="rgb(230,40,33)" fg:x="131" fg:w="5"/><text x="10.6386%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.7058%" y="725" width="0.0793%" height="15" fill="rgb(232,24,46)" fg:x="135" fg:w="1"/><text x="10.9558%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.7058%" y="709" width="0.0793%" height="15" fill="rgb(219,222,45)" fg:x="135" fg:w="1"/><text x="10.9558%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.7058%" y="693" width="0.0793%" height="15" fill="rgb(229,85,44)" fg:x="135" fg:w="1"/><text x="10.9558%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.7058%" y="677" width="0.0793%" height="15" fill="rgb(243,71,36)" fg:x="135" fg:w="1"/><text x="10.9558%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.7058%" y="661" width="0.0793%" height="15" fill="rgb(230,203,45)" fg:x="135" fg:w="1"/><text x="10.9558%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.7058%" y="645" width="0.0793%" height="15" fill="rgb(224,77,49)" fg:x="135" fg:w="1"/><text x="10.9558%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.7058%" y="629" width="0.0793%" height="15" fill="rgb(210,186,47)" fg:x="135" fg:w="1"/><text x="10.9558%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="10.7058%" y="613" width="0.0793%" height="15" fill="rgb(232,146,10)" fg:x="135" fg:w="1"/><text x="10.9558%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="10.7058%" y="597" width="0.0793%" height="15" fill="rgb(236,185,51)" fg:x="135" fg:w="1"/><text x="10.9558%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="10.7851%" y="805" width="0.1586%" height="15" fill="rgb(223,206,43)" fg:x="136" fg:w="2"/><text x="11.0351%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="10.9437%" y="805" width="0.0793%" height="15" fill="rgb(227,212,9)" fg:x="138" fg:w="1"/><text x="11.1937%" y="815.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="10.9437%" y="789" width="0.0793%" height="15" fill="rgb(205,82,3)" fg:x="138" fg:w="1"/><text x="11.1937%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.9437%" y="773" width="0.0793%" height="15" fill="rgb(214,2,27)" fg:x="138" fg:w="1"/><text x="11.1937%" y="783.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="10.9437%" y="757" width="0.0793%" height="15" fill="rgb(241,37,22)" fg:x="138" fg:w="1"/><text x="11.1937%" y="767.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="10.9437%" y="741" width="0.0793%" height="15" fill="rgb(219,182,1)" fg:x="138" fg:w="1"/><text x="11.1937%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="10.9437%" y="725" width="0.0793%" height="15" fill="rgb(208,224,23)" fg:x="138" fg:w="1"/><text x="11.1937%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.0230%" y="757" width="0.0793%" height="15" fill="rgb(219,121,32)" fg:x="139" fg:w="1"/><text x="11.2730%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="11.0230%" y="741" width="0.0793%" height="15" fill="rgb(253,13,40)" fg:x="139" fg:w="1"/><text x="11.2730%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.0230%" y="725" width="0.0793%" height="15" fill="rgb(233,6,28)" fg:x="139" fg:w="1"/><text x="11.2730%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.0230%" y="709" width="0.0793%" height="15" fill="rgb(233,73,8)" fg:x="139" fg:w="1"/><text x="11.2730%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.0230%" y="693" width="0.0793%" height="15" fill="rgb(223,48,27)" fg:x="139" fg:w="1"/><text x="11.2730%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.0230%" y="677" width="0.0793%" height="15" fill="rgb(231,98,37)" fg:x="139" fg:w="1"/><text x="11.2730%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.0230%" y="661" width="0.0793%" height="15" fill="rgb(249,43,32)" fg:x="139" fg:w="1"/><text x="11.2730%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.0230%" y="645" width="0.0793%" height="15" fill="rgb(246,184,20)" fg:x="139" fg:w="1"/><text x="11.2730%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.0230%" y="629" width="0.0793%" height="15" fill="rgb(251,216,0)" fg:x="139" fg:w="1"/><text x="11.2730%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.0230%" y="613" width="0.0793%" height="15" fill="rgb(238,41,42)" fg:x="139" fg:w="1"/><text x="11.2730%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.0230%" y="597" width="0.0793%" height="15" fill="rgb(227,224,50)" fg:x="139" fg:w="1"/><text x="11.2730%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.0230%" y="581" width="0.0793%" height="15" fill="rgb(237,189,18)" fg:x="139" fg:w="1"/><text x="11.2730%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.0230%" y="565" width="0.0793%" height="15" fill="rgb(238,108,6)" fg:x="139" fg:w="1"/><text x="11.2730%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.0230%" y="549" width="0.0793%" height="15" fill="rgb(214,197,53)" fg:x="139" fg:w="1"/><text x="11.2730%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.0230%" y="533" width="0.0793%" height="15" fill="rgb(206,183,15)" fg:x="139" fg:w="1"/><text x="11.2730%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.0230%" y="517" width="0.0793%" height="15" fill="rgb(208,130,32)" fg:x="139" fg:w="1"/><text x="11.2730%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.0230%" y="501" width="0.0793%" height="15" fill="rgb(226,128,52)" fg:x="139" fg:w="1"/><text x="11.2730%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.0230%" y="485" width="0.0793%" height="15" fill="rgb(231,183,21)" fg:x="139" fg:w="1"/><text x="11.2730%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.0230%" y="469" width="0.0793%" height="15" fill="rgb(216,8,35)" fg:x="139" fg:w="1"/><text x="11.2730%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.1816%" y="709" width="0.0793%" height="15" fill="rgb(224,221,8)" fg:x="141" fg:w="1"/><text x="11.4316%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.1816%" y="693" width="0.0793%" height="15" fill="rgb(210,111,33)" fg:x="141" fg:w="1"/><text x="11.4316%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.1816%" y="677" width="0.0793%" height="15" fill="rgb(232,211,38)" fg:x="141" fg:w="1"/><text x="11.4316%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.1816%" y="661" width="0.0793%" height="15" fill="rgb(216,190,27)" fg:x="141" fg:w="1"/><text x="11.4316%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.1816%" y="645" width="0.0793%" height="15" fill="rgb(237,215,27)" fg:x="141" fg:w="1"/><text x="11.4316%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.1816%" y="629" width="0.0793%" height="15" fill="rgb(251,121,39)" fg:x="141" fg:w="1"/><text x="11.4316%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.3402%" y="613" width="0.0793%" height="15" fill="rgb(244,21,14)" fg:x="143" fg:w="1"/><text x="11.5902%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.3402%" y="597" width="0.0793%" height="15" fill="rgb(221,192,22)" fg:x="143" fg:w="1"/><text x="11.5902%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.3402%" y="581" width="0.0793%" height="15" fill="rgb(251,190,28)" fg:x="143" fg:w="1"/><text x="11.5902%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.3402%" y="565" width="0.0793%" height="15" fill="rgb(217,4,51)" fg:x="143" fg:w="1"/><text x="11.5902%" y="575.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="11.3402%" y="549" width="0.0793%" height="15" fill="rgb(215,183,49)" fg:x="143" fg:w="1"/><text x="11.5902%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="11.0230%" y="805" width="0.4758%" height="15" fill="rgb(249,28,49)" fg:x="139" fg:w="6"/><text x="11.2730%" y="815.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="11.0230%" y="789" width="0.4758%" height="15" fill="rgb(214,42,20)" fg:x="139" fg:w="6"/><text x="11.2730%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="11.0230%" y="773" width="0.4758%" height="15" fill="rgb(222,77,27)" fg:x="139" fg:w="6"/><text x="11.2730%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="11.1023%" y="757" width="0.3965%" height="15" fill="rgb(252,198,32)" fg:x="140" fg:w="5"/><text x="11.3523%" y="767.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="11.1023%" y="741" width="0.3965%" height="15" fill="rgb(207,140,50)" fg:x="140" fg:w="5"/><text x="11.3523%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="11.1023%" y="725" width="0.3965%" height="15" fill="rgb(251,170,16)" fg:x="140" fg:w="5"/><text x="11.3523%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="11.2609%" y="709" width="0.2379%" height="15" fill="rgb(249,111,45)" fg:x="142" fg:w="3"/><text x="11.5109%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="11.2609%" y="693" width="0.2379%" height="15" fill="rgb(241,99,35)" fg:x="142" fg:w="3"/><text x="11.5109%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="11.2609%" y="677" width="0.2379%" height="15" fill="rgb(216,188,17)" fg:x="142" fg:w="3"/><text x="11.5109%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="11.2609%" y="661" width="0.2379%" height="15" fill="rgb(254,209,53)" fg:x="142" fg:w="3"/><text x="11.5109%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="11.2609%" y="645" width="0.2379%" height="15" fill="rgb(231,105,41)" fg:x="142" fg:w="3"/><text x="11.5109%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="11.2609%" y="629" width="0.2379%" height="15" fill="rgb(242,93,23)" fg:x="142" fg:w="3"/><text x="11.5109%" y="639.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="11.4195%" y="613" width="0.0793%" height="15" fill="rgb(218,159,11)" fg:x="144" fg:w="1"/><text x="11.6695%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="11.4988%" y="789" width="0.0793%" height="15" fill="rgb(209,90,32)" fg:x="145" fg:w="1"/><text x="11.7488%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="11.4988%" y="773" width="0.0793%" height="15" fill="rgb(253,118,46)" fg:x="145" fg:w="1"/><text x="11.7488%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.8160%" y="709" width="0.0793%" height="15" fill="rgb(219,121,2)" fg:x="149" fg:w="1"/><text x="12.0660%" y="719.50"></text></g><g><title>plugins_core::build::Build::holding (39 samples, 3.09%)</title><rect x="8.8818%" y="837" width="3.0928%" height="15" fill="rgb(207,57,47)" fg:x="112" fg:w="39"/><text x="9.1318%" y="847.50">plu..</text></g><g><title>plugins_core::tools::set_container (23 samples, 1.82%)</title><rect x="10.1507%" y="821" width="1.8239%" height="15" fill="rgb(235,113,43)" fg:x="128" fg:w="23"/><text x="10.4007%" y="831.50">p..</text></g><g><title>plugins_core::location::Location::set (6 samples, 0.48%)</title><rect x="11.4988%" y="805" width="0.4758%" height="15" fill="rgb(238,30,50)" fg:x="145" fg:w="6"/><text x="11.7488%" y="815.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="11.5781%" y="789" width="0.3965%" height="15" fill="rgb(237,47,29)" fg:x="146" fg:w="5"/><text x="11.8281%" y="799.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (4 samples, 0.32%)</title><rect x="11.6574%" y="773" width="0.3172%" height="15" fill="rgb(245,102,24)" fg:x="147" fg:w="4"/><text x="11.9074%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="11.7367%" y="757" width="0.2379%" height="15" fill="rgb(245,152,9)" fg:x="148" fg:w="3"/><text x="11.9867%" y="767.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="11.7367%" y="741" width="0.2379%" height="15" fill="rgb(223,213,17)" fg:x="148" fg:w="3"/><text x="11.9867%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="11.7367%" y="725" width="0.2379%" height="15" fill="rgb(241,164,4)" fg:x="148" fg:w="3"/><text x="11.9867%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.8953%" y="709" width="0.0793%" height="15" fill="rgb(205,209,31)" fg:x="150" fg:w="1"/><text x="12.1453%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.2918%" y="693" width="0.0793%" height="15" fill="rgb(248,173,2)" fg:x="155" fg:w="1"/><text x="12.5418%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="12.1332%" y="805" width="0.3172%" height="15" fill="rgb(207,67,32)" fg:x="153" fg:w="4"/><text x="12.3832%" y="815.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="12.1332%" y="789" width="0.3172%" height="15" fill="rgb(239,109,13)" fg:x="153" fg:w="4"/><text x="12.3832%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="12.1332%" y="773" width="0.3172%" height="15" fill="rgb(233,123,24)" fg:x="153" fg:w="4"/><text x="12.3832%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.2125%" y="757" width="0.2379%" height="15" fill="rgb(232,120,19)" fg:x="154" fg:w="3"/><text x="12.4625%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.2125%" y="741" width="0.2379%" height="15" fill="rgb(225,17,50)" fg:x="154" fg:w="3"/><text x="12.4625%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.2125%" y="725" width="0.2379%" height="15" fill="rgb(239,216,13)" fg:x="154" fg:w="3"/><text x="12.4625%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="12.2125%" y="709" width="0.2379%" height="15" fill="rgb(232,213,26)" fg:x="154" fg:w="3"/><text x="12.4625%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.3711%" y="693" width="0.0793%" height="15" fill="rgb(244,59,39)" fg:x="156" fg:w="1"/><text x="12.6211%" y="703.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="12.4504%" y="757" width="0.0793%" height="15" fill="rgb(234,61,35)" fg:x="157" fg:w="1"/><text x="12.7004%" y="767.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="12.4504%" y="805" width="0.1586%" height="15" fill="rgb(245,94,24)" fg:x="157" fg:w="2"/><text x="12.7004%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="12.4504%" y="789" width="0.1586%" height="15" fill="rgb(238,190,44)" fg:x="157" fg:w="2"/><text x="12.7004%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.4504%" y="773" width="0.1586%" height="15" fill="rgb(205,145,25)" fg:x="157" fg:w="2"/><text x="12.7004%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.5297%" y="757" width="0.0793%" height="15" fill="rgb(229,158,41)" fg:x="158" fg:w="1"/><text x="12.7797%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.5297%" y="741" width="0.0793%" height="15" fill="rgb(224,121,5)" fg:x="158" fg:w="1"/><text x="12.7797%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.5297%" y="725" width="0.0793%" height="15" fill="rgb(238,168,35)" fg:x="158" fg:w="1"/><text x="12.7797%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.5297%" y="709" width="0.0793%" height="15" fill="rgb(231,11,42)" fg:x="158" fg:w="1"/><text x="12.7797%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.5297%" y="693" width="0.0793%" height="15" fill="rgb(241,105,19)" fg:x="158" fg:w="1"/><text x="12.7797%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.5297%" y="677" width="0.0793%" height="15" fill="rgb(253,210,20)" fg:x="158" fg:w="1"/><text x="12.7797%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="12.6090%" y="757" width="0.1586%" height="15" fill="rgb(215,72,52)" fg:x="159" fg:w="2"/><text x="12.8590%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.6090%" y="741" width="0.1586%" height="15" fill="rgb(223,225,30)" fg:x="159" fg:w="2"/><text x="12.8590%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.6883%" y="725" width="0.0793%" height="15" fill="rgb(220,138,44)" fg:x="160" fg:w="1"/><text x="12.9383%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.6883%" y="709" width="0.0793%" height="15" fill="rgb(206,128,12)" fg:x="160" fg:w="1"/><text x="12.9383%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.6883%" y="693" width="0.0793%" height="15" fill="rgb(245,194,0)" fg:x="160" fg:w="1"/><text x="12.9383%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.6883%" y="677" width="0.0793%" height="15" fill="rgb(235,175,41)" fg:x="160" fg:w="1"/><text x="12.9383%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.6883%" y="661" width="0.0793%" height="15" fill="rgb(216,15,48)" fg:x="160" fg:w="1"/><text x="12.9383%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.6883%" y="645" width="0.0793%" height="15" fill="rgb(223,179,5)" fg:x="160" fg:w="1"/><text x="12.9383%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.6883%" y="629" width="0.0793%" height="15" fill="rgb(220,80,15)" fg:x="160" fg:w="1"/><text x="12.9383%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.6883%" y="613" width="0.0793%" height="15" fill="rgb(228,20,30)" fg:x="160" fg:w="1"/><text x="12.9383%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.6883%" y="597" width="0.0793%" height="15" fill="rgb(229,194,27)" fg:x="160" fg:w="1"/><text x="12.9383%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.6883%" y="581" width="0.0793%" height="15" fill="rgb(238,202,32)" fg:x="160" fg:w="1"/><text x="12.9383%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.6883%" y="565" width="0.0793%" height="15" fill="rgb(207,82,27)" fg:x="160" fg:w="1"/><text x="12.9383%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.6883%" y="549" width="0.0793%" height="15" fill="rgb(246,122,46)" fg:x="160" fg:w="1"/><text x="12.9383%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.6883%" y="533" width="0.0793%" height="15" fill="rgb(220,101,26)" fg:x="160" fg:w="1"/><text x="12.9383%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.6883%" y="517" width="0.0793%" height="15" fill="rgb(251,63,9)" fg:x="160" fg:w="1"/><text x="12.9383%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.6883%" y="501" width="0.0793%" height="15" fill="rgb(235,186,5)" fg:x="160" fg:w="1"/><text x="12.9383%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.6883%" y="485" width="0.0793%" height="15" fill="rgb(241,139,37)" fg:x="160" fg:w="1"/><text x="12.9383%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.6883%" y="469" width="0.0793%" height="15" fill="rgb(252,177,51)" fg:x="160" fg:w="1"/><text x="12.9383%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7676%" y="725" width="0.0793%" height="15" fill="rgb(214,131,22)" fg:x="161" fg:w="1"/><text x="13.0176%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7676%" y="709" width="0.0793%" height="15" fill="rgb(246,53,19)" fg:x="161" fg:w="1"/><text x="13.0176%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7676%" y="693" width="0.0793%" height="15" fill="rgb(231,158,27)" fg:x="161" fg:w="1"/><text x="13.0176%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7676%" y="677" width="0.0793%" height="15" fill="rgb(226,166,46)" fg:x="161" fg:w="1"/><text x="13.0176%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7676%" y="661" width="0.0793%" height="15" fill="rgb(218,178,26)" fg:x="161" fg:w="1"/><text x="13.0176%" y="671.50"></text></g><g><title>plugins_core::build::Build::into_entry (12 samples, 0.95%)</title><rect x="11.9746%" y="837" width="0.9516%" height="15" fill="rgb(206,25,39)" fg:x="151" fg:w="12"/><text x="12.2246%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.87%)</title><rect x="12.0539%" y="821" width="0.8723%" height="15" fill="rgb(232,218,41)" fg:x="152" fg:w="11"/><text x="12.3039%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="12.6090%" y="805" width="0.3172%" height="15" fill="rgb(212,151,15)" fg:x="159" fg:w="4"/><text x="12.8590%" y="815.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="12.6090%" y="789" width="0.3172%" height="15" fill="rgb(213,49,22)" fg:x="159" fg:w="4"/><text x="12.8590%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="12.6090%" y="773" width="0.3172%" height="15" fill="rgb(247,116,21)" fg:x="159" fg:w="4"/><text x="12.8590%" y="783.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="12.7676%" y="757" width="0.1586%" height="15" fill="rgb(248,98,14)" fg:x="161" fg:w="2"/><text x="13.0176%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="12.7676%" y="741" width="0.1586%" height="15" fill="rgb(247,72,6)" fg:x="161" fg:w="2"/><text x="13.0176%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="12.8469%" y="725" width="0.0793%" height="15" fill="rgb(213,9,22)" fg:x="162" fg:w="1"/><text x="13.0969%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.8469%" y="709" width="0.0793%" height="15" fill="rgb(213,122,30)" fg:x="162" fg:w="1"/><text x="13.0969%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="12.8469%" y="693" width="0.0793%" height="15" fill="rgb(244,11,30)" fg:x="162" fg:w="1"/><text x="13.0969%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.8469%" y="677" width="0.0793%" height="15" fill="rgb(236,102,26)" fg:x="162" fg:w="1"/><text x="13.0969%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="12.8469%" y="661" width="0.0793%" height="15" fill="rgb(231,166,37)" fg:x="162" fg:w="1"/><text x="13.0969%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="12.8469%" y="645" width="0.0793%" height="15" fill="rgb(220,224,29)" fg:x="162" fg:w="1"/><text x="13.0969%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.8469%" y="629" width="0.0793%" height="15" fill="rgb(227,30,40)" fg:x="162" fg:w="1"/><text x="13.0969%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.8469%" y="613" width="0.0793%" height="15" fill="rgb(235,8,36)" fg:x="162" fg:w="1"/><text x="13.0969%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.8469%" y="597" width="0.0793%" height="15" fill="rgb(232,175,19)" fg:x="162" fg:w="1"/><text x="13.0969%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="12.9262%" y="837" width="0.0793%" height="15" fill="rgb(217,114,10)" fg:x="163" fg:w="1"/><text x="13.1762%" y="847.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="12.9262%" y="821" width="0.0793%" height="15" fill="rgb(214,112,41)" fg:x="163" fg:w="1"/><text x="13.1762%" y="831.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="12.9262%" y="805" width="0.0793%" height="15" fill="rgb(226,69,34)" fg:x="163" fg:w="1"/><text x="13.1762%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.9262%" y="789" width="0.0793%" height="15" fill="rgb(219,23,46)" fg:x="163" fg:w="1"/><text x="13.1762%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.9262%" y="773" width="0.0793%" height="15" fill="rgb(233,3,8)" fg:x="163" fg:w="1"/><text x="13.1762%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="12.9262%" y="757" width="0.0793%" height="15" fill="rgb(251,34,42)" fg:x="163" fg:w="1"/><text x="13.1762%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9262%" y="741" width="0.0793%" height="15" fill="rgb(215,84,9)" fg:x="163" fg:w="1"/><text x="13.1762%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="13.1642%" y="805" width="0.0793%" height="15" fill="rgb(231,75,52)" fg:x="166" fg:w="1"/><text x="13.4142%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="13.1642%" y="789" width="0.0793%" height="15" fill="rgb(247,201,31)" fg:x="166" fg:w="1"/><text x="13.4142%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2435%" y="757" width="0.0793%" height="15" fill="rgb(215,171,37)" fg:x="167" fg:w="1"/><text x="13.4935%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2435%" y="741" width="0.0793%" height="15" fill="rgb(208,208,44)" fg:x="167" fg:w="1"/><text x="13.4935%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2435%" y="725" width="0.0793%" height="15" fill="rgb(247,146,54)" fg:x="167" fg:w="1"/><text x="13.4935%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2435%" y="709" width="0.0793%" height="15" fill="rgb(209,0,40)" fg:x="167" fg:w="1"/><text x="13.4935%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="13.1642%" y="821" width="0.2379%" height="15" fill="rgb(221,59,4)" fg:x="166" fg:w="3"/><text x="13.4142%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.2435%" y="805" width="0.1586%" height="15" fill="rgb(227,153,47)" fg:x="167" fg:w="2"/><text x="13.4935%" y="815.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="13.2435%" y="789" width="0.1586%" height="15" fill="rgb(253,225,10)" fg:x="167" fg:w="2"/><text x="13.4935%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.2435%" y="773" width="0.1586%" height="15" fill="rgb(237,201,24)" fg:x="167" fg:w="2"/><text x="13.4935%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.3228%" y="757" width="0.0793%" height="15" fill="rgb(238,23,27)" fg:x="168" fg:w="1"/><text x="13.5728%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3228%" y="741" width="0.0793%" height="15" fill="rgb(236,54,50)" fg:x="168" fg:w="1"/><text x="13.5728%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.3228%" y="725" width="0.0793%" height="15" fill="rgb(216,106,0)" fg:x="168" fg:w="1"/><text x="13.5728%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3228%" y="709" width="0.0793%" height="15" fill="rgb(234,179,35)" fg:x="168" fg:w="1"/><text x="13.5728%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.3228%" y="693" width="0.0793%" height="15" fill="rgb(210,35,8)" fg:x="168" fg:w="1"/><text x="13.5728%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3228%" y="677" width="0.0793%" height="15" fill="rgb(238,144,16)" fg:x="168" fg:w="1"/><text x="13.5728%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="13.3228%" y="661" width="0.0793%" height="15" fill="rgb(244,54,7)" fg:x="168" fg:w="1"/><text x="13.5728%" y="671.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="13.4814%" y="757" width="0.0793%" height="15" fill="rgb(233,225,40)" fg:x="170" fg:w="1"/><text x="13.7314%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="13.4814%" y="773" width="0.1586%" height="15" fill="rgb(249,227,23)" fg:x="170" fg:w="2"/><text x="13.7314%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="13.5607%" y="757" width="0.0793%" height="15" fill="rgb(215,42,44)" fg:x="171" fg:w="1"/><text x="13.8107%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="13.5607%" y="741" width="0.0793%" height="15" fill="rgb(220,145,40)" fg:x="171" fg:w="1"/><text x="13.8107%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="13.5607%" y="725" width="0.0793%" height="15" fill="rgb(228,218,40)" fg:x="171" fg:w="1"/><text x="13.8107%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.5607%" y="709" width="0.0793%" height="15" fill="rgb(217,52,54)" fg:x="171" fg:w="1"/><text x="13.8107%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.5607%" y="693" width="0.0793%" height="15" fill="rgb(223,90,22)" fg:x="171" fg:w="1"/><text x="13.8107%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.5607%" y="677" width="0.0793%" height="15" fill="rgb(232,114,35)" fg:x="171" fg:w="1"/><text x="13.8107%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.5607%" y="661" width="0.0793%" height="15" fill="rgb(227,223,50)" fg:x="171" fg:w="1"/><text x="13.8107%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.5607%" y="645" width="0.0793%" height="15" fill="rgb(249,175,7)" fg:x="171" fg:w="1"/><text x="13.8107%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.5607%" y="629" width="0.0793%" height="15" fill="rgb(249,173,15)" fg:x="171" fg:w="1"/><text x="13.8107%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.5607%" y="613" width="0.0793%" height="15" fill="rgb(240,131,6)" fg:x="171" fg:w="1"/><text x="13.8107%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="13.6400%" y="773" width="0.0793%" height="15" fill="rgb(246,117,16)" fg:x="172" fg:w="1"/><text x="13.8900%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="13.6400%" y="757" width="0.0793%" height="15" fill="rgb(209,32,16)" fg:x="172" fg:w="1"/><text x="13.8900%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="13.6400%" y="741" width="0.0793%" height="15" fill="rgb(207,45,44)" fg:x="172" fg:w="1"/><text x="13.8900%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="13.6400%" y="725" width="0.0793%" height="15" fill="rgb(210,66,3)" fg:x="172" fg:w="1"/><text x="13.8900%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.6400%" y="709" width="0.0793%" height="15" fill="rgb(246,133,30)" fg:x="172" fg:w="1"/><text x="13.8900%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6400%" y="693" width="0.0793%" height="15" fill="rgb(224,37,17)" fg:x="172" fg:w="1"/><text x="13.8900%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6400%" y="677" width="0.0793%" height="15" fill="rgb(237,218,18)" fg:x="172" fg:w="1"/><text x="13.8900%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6400%" y="661" width="0.0793%" height="15" fill="rgb(240,57,8)" fg:x="172" fg:w="1"/><text x="13.8900%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6400%" y="645" width="0.0793%" height="15" fill="rgb(231,51,38)" fg:x="172" fg:w="1"/><text x="13.8900%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.6400%" y="629" width="0.0793%" height="15" fill="rgb(230,89,50)" fg:x="172" fg:w="1"/><text x="13.8900%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.7193%" y="645" width="0.0793%" height="15" fill="rgb(234,103,34)" fg:x="173" fg:w="1"/><text x="13.9693%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.7193%" y="629" width="0.0793%" height="15" fill="rgb(220,45,48)" fg:x="173" fg:w="1"/><text x="13.9693%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.7193%" y="613" width="0.0793%" height="15" fill="rgb(250,210,3)" fg:x="173" fg:w="1"/><text x="13.9693%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.7193%" y="693" width="0.1586%" height="15" fill="rgb(210,118,12)" fg:x="173" fg:w="2"/><text x="13.9693%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.7193%" y="677" width="0.1586%" height="15" fill="rgb(238,154,21)" fg:x="173" fg:w="2"/><text x="13.9693%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.7193%" y="661" width="0.1586%" height="15" fill="rgb(227,220,4)" fg:x="173" fg:w="2"/><text x="13.9693%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.7986%" y="645" width="0.0793%" height="15" fill="rgb(207,179,27)" fg:x="174" fg:w="1"/><text x="14.0486%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="13.7193%" y="741" width="0.2379%" height="15" fill="rgb(240,111,30)" fg:x="173" fg:w="3"/><text x="13.9693%" y="751.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="13.7193%" y="725" width="0.2379%" height="15" fill="rgb(251,29,1)" fg:x="173" fg:w="3"/><text x="13.9693%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.7193%" y="709" width="0.2379%" height="15" fill="rgb(224,141,39)" fg:x="173" fg:w="3"/><text x="13.9693%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.8779%" y="693" width="0.0793%" height="15" fill="rgb(207,98,26)" fg:x="175" fg:w="1"/><text x="14.1279%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.8779%" y="677" width="0.0793%" height="15" fill="rgb(221,37,6)" fg:x="175" fg:w="1"/><text x="14.1279%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="13.9572%" y="741" width="0.1586%" height="15" fill="rgb(217,32,44)" fg:x="176" fg:w="2"/><text x="14.2072%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="14.0365%" y="725" width="0.0793%" height="15" fill="rgb(253,149,2)" fg:x="177" fg:w="1"/><text x="14.2865%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.0365%" y="709" width="0.0793%" height="15" fill="rgb(220,165,39)" fg:x="177" fg:w="1"/><text x="14.2865%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.0365%" y="693" width="0.0793%" height="15" fill="rgb(235,33,48)" fg:x="177" fg:w="1"/><text x="14.2865%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.0365%" y="677" width="0.0793%" height="15" fill="rgb(221,89,6)" fg:x="177" fg:w="1"/><text x="14.2865%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.0365%" y="661" width="0.0793%" height="15" fill="rgb(215,214,6)" fg:x="177" fg:w="1"/><text x="14.2865%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.0365%" y="645" width="0.0793%" height="15" fill="rgb(241,1,30)" fg:x="177" fg:w="1"/><text x="14.2865%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.0365%" y="629" width="0.0793%" height="15" fill="rgb(211,140,32)" fg:x="177" fg:w="1"/><text x="14.2865%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="14.0365%" y="613" width="0.0793%" height="15" fill="rgb(232,48,21)" fg:x="177" fg:w="1"/><text x="14.2865%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.0365%" y="597" width="0.0793%" height="15" fill="rgb(252,217,9)" fg:x="177" fg:w="1"/><text x="14.2865%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="13.7193%" y="757" width="0.4758%" height="15" fill="rgb(206,123,34)" fg:x="173" fg:w="6"/><text x="13.9693%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="14.1158%" y="741" width="0.0793%" height="15" fill="rgb(245,161,38)" fg:x="178" fg:w="1"/><text x="14.3658%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="14.1158%" y="725" width="0.0793%" height="15" fill="rgb(233,205,7)" fg:x="178" fg:w="1"/><text x="14.3658%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="14.1158%" y="709" width="0.0793%" height="15" fill="rgb(217,119,18)" fg:x="178" fg:w="1"/><text x="14.3658%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="14.1158%" y="693" width="0.0793%" height="15" fill="rgb(252,126,3)" fg:x="178" fg:w="1"/><text x="14.3658%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.1158%" y="677" width="0.0793%" height="15" fill="rgb(252,188,15)" fg:x="178" fg:w="1"/><text x="14.3658%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1158%" y="661" width="0.0793%" height="15" fill="rgb(228,1,48)" fg:x="178" fg:w="1"/><text x="14.3658%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1158%" y="645" width="0.0793%" height="15" fill="rgb(205,187,8)" fg:x="178" fg:w="1"/><text x="14.3658%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1158%" y="629" width="0.0793%" height="15" fill="rgb(205,105,50)" fg:x="178" fg:w="1"/><text x="14.3658%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1158%" y="613" width="0.0793%" height="15" fill="rgb(211,31,46)" fg:x="178" fg:w="1"/><text x="14.3658%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.1158%" y="597" width="0.0793%" height="15" fill="rgb(213,126,5)" fg:x="178" fg:w="1"/><text x="14.3658%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.1158%" y="581" width="0.0793%" height="15" fill="rgb(231,87,9)" fg:x="178" fg:w="1"/><text x="14.3658%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.1158%" y="565" width="0.0793%" height="15" fill="rgb(219,224,20)" fg:x="178" fg:w="1"/><text x="14.3658%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.1158%" y="549" width="0.0793%" height="15" fill="rgb(230,84,21)" fg:x="178" fg:w="1"/><text x="14.3658%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.1158%" y="533" width="0.0793%" height="15" fill="rgb(224,169,42)" fg:x="178" fg:w="1"/><text x="14.3658%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.1158%" y="517" width="0.0793%" height="15" fill="rgb(227,182,13)" fg:x="178" fg:w="1"/><text x="14.3658%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.1158%" y="501" width="0.0793%" height="15" fill="rgb(249,57,41)" fg:x="178" fg:w="1"/><text x="14.3658%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.1158%" y="485" width="0.0793%" height="15" fill="rgb(214,93,52)" fg:x="178" fg:w="1"/><text x="14.3658%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="14.1158%" y="469" width="0.0793%" height="15" fill="rgb(229,161,34)" fg:x="178" fg:w="1"/><text x="14.3658%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="14.1158%" y="453" width="0.0793%" height="15" fill="rgb(227,193,17)" fg:x="178" fg:w="1"/><text x="14.3658%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.1951%" y="661" width="0.0793%" height="15" fill="rgb(242,164,46)" fg:x="179" fg:w="1"/><text x="14.4451%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.2744%" y="565" width="0.0793%" height="15" fill="rgb(242,142,47)" fg:x="180" fg:w="1"/><text x="14.5244%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="14.1951%" y="709" width="0.2379%" height="15" fill="rgb(208,23,18)" fg:x="179" fg:w="3"/><text x="14.4451%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="14.1951%" y="693" width="0.2379%" height="15" fill="rgb(219,54,38)" fg:x="179" fg:w="3"/><text x="14.4451%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="14.1951%" y="677" width="0.2379%" height="15" fill="rgb(206,97,35)" fg:x="179" fg:w="3"/><text x="14.4451%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.2744%" y="661" width="0.1586%" height="15" fill="rgb(208,76,8)" fg:x="180" fg:w="2"/><text x="14.5244%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.2744%" y="645" width="0.1586%" height="15" fill="rgb(220,92,28)" fg:x="180" fg:w="2"/><text x="14.5244%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.2744%" y="629" width="0.1586%" height="15" fill="rgb(209,158,39)" fg:x="180" fg:w="2"/><text x="14.5244%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.2744%" y="613" width="0.1586%" height="15" fill="rgb(238,175,9)" fg:x="180" fg:w="2"/><text x="14.5244%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="14.2744%" y="597" width="0.1586%" height="15" fill="rgb(240,116,17)" fg:x="180" fg:w="2"/><text x="14.5244%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.2744%" y="581" width="0.1586%" height="15" fill="rgb(208,7,2)" fg:x="180" fg:w="2"/><text x="14.5244%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.3537%" y="565" width="0.0793%" height="15" fill="rgb(252,52,4)" fg:x="181" fg:w="1"/><text x="14.6037%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.3537%" y="549" width="0.0793%" height="15" fill="rgb(222,68,34)" fg:x="181" fg:w="1"/><text x="14.6037%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.3537%" y="533" width="0.0793%" height="15" fill="rgb(242,154,35)" fg:x="181" fg:w="1"/><text x="14.6037%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.3537%" y="517" width="0.0793%" height="15" fill="rgb(210,125,54)" fg:x="181" fg:w="1"/><text x="14.6037%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.3537%" y="501" width="0.0793%" height="15" fill="rgb(247,121,18)" fg:x="181" fg:w="1"/><text x="14.6037%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.4330%" y="645" width="0.0793%" height="15" fill="rgb(223,48,51)" fg:x="182" fg:w="1"/><text x="14.6830%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.4330%" y="629" width="0.0793%" height="15" fill="rgb(211,156,48)" fg:x="182" fg:w="1"/><text x="14.6830%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.4330%" y="613" width="0.0793%" height="15" fill="rgb(236,56,31)" fg:x="182" fg:w="1"/><text x="14.6830%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.4330%" y="597" width="0.0793%" height="15" fill="rgb(247,157,52)" fg:x="182" fg:w="1"/><text x="14.6830%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.4330%" y="661" width="0.1586%" height="15" fill="rgb(244,121,39)" fg:x="182" fg:w="2"/><text x="14.6830%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.5123%" y="645" width="0.0793%" height="15" fill="rgb(239,4,40)" fg:x="183" fg:w="1"/><text x="14.7623%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="14.1951%" y="741" width="0.4758%" height="15" fill="rgb(213,204,45)" fg:x="179" fg:w="6"/><text x="14.4451%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="14.1951%" y="725" width="0.4758%" height="15" fill="rgb(242,107,0)" fg:x="179" fg:w="6"/><text x="14.4451%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="14.4330%" y="709" width="0.2379%" height="15" fill="rgb(215,152,25)" fg:x="182" fg:w="3"/><text x="14.6830%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="14.4330%" y="693" width="0.2379%" height="15" fill="rgb(233,151,6)" fg:x="182" fg:w="3"/><text x="14.6830%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="14.4330%" y="677" width="0.2379%" height="15" fill="rgb(206,126,44)" fg:x="182" fg:w="3"/><text x="14.6830%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.5916%" y="661" width="0.0793%" height="15" fill="rgb(209,145,15)" fg:x="184" fg:w="1"/><text x="14.8416%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5916%" y="645" width="0.0793%" height="15" fill="rgb(235,214,8)" fg:x="184" fg:w="1"/><text x="14.8416%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.5916%" y="629" width="0.0793%" height="15" fill="rgb(216,140,51)" fg:x="184" fg:w="1"/><text x="14.8416%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5916%" y="613" width="0.0793%" height="15" fill="rgb(213,83,34)" fg:x="184" fg:w="1"/><text x="14.8416%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.5916%" y="597" width="0.0793%" height="15" fill="rgb(218,186,44)" fg:x="184" fg:w="1"/><text x="14.8416%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5916%" y="581" width="0.0793%" height="15" fill="rgb(225,147,10)" fg:x="184" fg:w="1"/><text x="14.8416%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.5916%" y="565" width="0.0793%" height="15" fill="rgb(209,214,20)" fg:x="184" fg:w="1"/><text x="14.8416%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5916%" y="549" width="0.0793%" height="15" fill="rgb(252,61,32)" fg:x="184" fg:w="1"/><text x="14.8416%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.5916%" y="533" width="0.0793%" height="15" fill="rgb(237,204,10)" fg:x="184" fg:w="1"/><text x="14.8416%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5916%" y="517" width="0.0793%" height="15" fill="rgb(246,118,16)" fg:x="184" fg:w="1"/><text x="14.8416%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.5916%" y="501" width="0.0793%" height="15" fill="rgb(214,50,9)" fg:x="184" fg:w="1"/><text x="14.8416%" y="511.50"></text></g><g><title>plugins_core::build::Build::leads_to (14 samples, 1.11%)</title><rect x="13.7193%" y="773" width="1.1102%" height="15" fill="rgb(212,41,1)" fg:x="173" fg:w="14"/><text x="13.9693%" y="783.50"></text></g><g><title>plugins_core::tools::leads_to (8 samples, 0.63%)</title><rect x="14.1951%" y="757" width="0.6344%" height="15" fill="rgb(228,172,32)" fg:x="179" fg:w="8"/><text x="14.4451%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.6709%" y="741" width="0.1586%" height="15" fill="rgb(231,85,38)" fg:x="185" fg:w="2"/><text x="14.9209%" y="751.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (2 samples, 0.16%)</title><rect x="14.6709%" y="725" width="0.1586%" height="15" fill="rgb(223,120,31)" fg:x="185" fg:w="2"/><text x="14.9209%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.6709%" y="709" width="0.1586%" height="15" fill="rgb(254,174,9)" fg:x="185" fg:w="2"/><text x="14.9209%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="14.6709%" y="693" width="0.1586%" height="15" fill="rgb(243,197,0)" fg:x="185" fg:w="2"/><text x="14.9209%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.6709%" y="677" width="0.1586%" height="15" fill="rgb(226,186,17)" fg:x="185" fg:w="2"/><text x="14.9209%" y="687.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="14.6709%" y="661" width="0.1586%" height="15" fill="rgb(229,38,38)" fg:x="185" fg:w="2"/><text x="14.9209%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="14.8295%" y="741" width="0.0793%" height="15" fill="rgb(238,82,14)" fg:x="187" fg:w="1"/><text x="15.0795%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.8295%" y="725" width="0.0793%" height="15" fill="rgb(230,154,54)" fg:x="187" fg:w="1"/><text x="15.0795%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.8295%" y="709" width="0.0793%" height="15" fill="rgb(243,84,17)" fg:x="187" fg:w="1"/><text x="15.0795%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="14.8295%" y="693" width="0.0793%" height="15" fill="rgb(226,41,37)" fg:x="187" fg:w="1"/><text x="15.0795%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.9088%" y="645" width="0.0793%" height="15" fill="rgb(219,20,18)" fg:x="188" fg:w="1"/><text x="15.1588%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.9088%" y="629" width="0.0793%" height="15" fill="rgb(243,173,39)" fg:x="188" fg:w="1"/><text x="15.1588%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.9088%" y="613" width="0.0793%" height="15" fill="rgb(245,79,20)" fg:x="188" fg:w="1"/><text x="15.1588%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.9881%" y="613" width="0.0793%" height="15" fill="rgb(229,101,45)" fg:x="189" fg:w="1"/><text x="15.2381%" y="623.50"></text></g><g><title>core::iter::adapters::try_process (22 samples, 1.74%)</title><rect x="13.4021%" y="821" width="1.7446%" height="15" fill="rgb(215,123,52)" fg:x="169" fg:w="22"/><text x="13.6521%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 1.74%)</title><rect x="13.4021%" y="805" width="1.7446%" height="15" fill="rgb(215,11,33)" fg:x="169" fg:w="22"/><text x="13.6521%" y="815.50"></text></g><g><title>plugins_core::build::QuickThing::make (21 samples, 1.67%)</title><rect x="13.4814%" y="789" width="1.6653%" height="15" fill="rgb(245,105,20)" fg:x="170" fg:w="21"/><text x="13.7314%" y="799.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="14.8295%" y="773" width="0.3172%" height="15" fill="rgb(231,132,30)" fg:x="187" fg:w="4"/><text x="15.0795%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="14.8295%" y="757" width="0.3172%" height="15" fill="rgb(224,62,21)" fg:x="187" fg:w="4"/><text x="15.0795%" y="767.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="14.9088%" y="741" width="0.2379%" height="15" fill="rgb(209,221,38)" fg:x="188" fg:w="3"/><text x="15.1588%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="14.9088%" y="725" width="0.2379%" height="15" fill="rgb(229,200,30)" fg:x="188" fg:w="3"/><text x="15.1588%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="14.9088%" y="709" width="0.2379%" height="15" fill="rgb(237,142,41)" fg:x="188" fg:w="3"/><text x="15.1588%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="14.9088%" y="693" width="0.2379%" height="15" fill="rgb(238,37,22)" fg:x="188" fg:w="3"/><text x="15.1588%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="14.9088%" y="677" width="0.2379%" height="15" fill="rgb(234,182,17)" fg:x="188" fg:w="3"/><text x="15.1588%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="14.9088%" y="661" width="0.2379%" height="15" fill="rgb(237,58,48)" fg:x="188" fg:w="3"/><text x="15.1588%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="14.9881%" y="645" width="0.1586%" height="15" fill="rgb(226,112,37)" fg:x="189" fg:w="2"/><text x="15.2381%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="14.9881%" y="629" width="0.1586%" height="15" fill="rgb(230,201,20)" fg:x="189" fg:w="2"/><text x="15.2381%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0674%" y="613" width="0.0793%" height="15" fill="rgb(252,95,39)" fg:x="190" fg:w="1"/><text x="15.3174%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="15.2260%" y="757" width="0.0793%" height="15" fill="rgb(240,150,33)" fg:x="192" fg:w="1"/><text x="15.4760%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="15.2260%" y="741" width="0.0793%" height="15" fill="rgb(208,202,37)" fg:x="192" fg:w="1"/><text x="15.4760%" y="751.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="15.2260%" y="725" width="0.0793%" height="15" fill="rgb(251,37,12)" fg:x="192" fg:w="1"/><text x="15.4760%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3053%" y="725" width="0.0793%" height="15" fill="rgb(247,150,26)" fg:x="193" fg:w="1"/><text x="15.5553%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.3053%" y="709" width="0.0793%" height="15" fill="rgb(232,28,8)" fg:x="193" fg:w="1"/><text x="15.5553%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.3053%" y="693" width="0.0793%" height="15" fill="rgb(226,121,34)" fg:x="193" fg:w="1"/><text x="15.5553%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.3053%" y="677" width="0.0793%" height="15" fill="rgb(237,23,13)" fg:x="193" fg:w="1"/><text x="15.5553%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.3053%" y="661" width="0.0793%" height="15" fill="rgb(214,42,29)" fg:x="193" fg:w="1"/><text x="15.5553%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="15.3053%" y="645" width="0.0793%" height="15" fill="rgb(246,204,29)" fg:x="193" fg:w="1"/><text x="15.5553%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="15.3053%" y="629" width="0.0793%" height="15" fill="rgb(242,28,40)" fg:x="193" fg:w="1"/><text x="15.5553%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="15.3846%" y="725" width="0.0793%" height="15" fill="rgb(243,64,49)" fg:x="194" fg:w="1"/><text x="15.6346%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.3846%" y="709" width="0.0793%" height="15" fill="rgb(226,93,13)" fg:x="194" fg:w="1"/><text x="15.6346%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.3846%" y="693" width="0.0793%" height="15" fill="rgb(241,113,26)" fg:x="194" fg:w="1"/><text x="15.6346%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.3846%" y="677" width="0.0793%" height="15" fill="rgb(209,209,0)" fg:x="194" fg:w="1"/><text x="15.6346%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.3846%" y="661" width="0.0793%" height="15" fill="rgb(251,183,50)" fg:x="194" fg:w="1"/><text x="15.6346%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="15.4639%" y="709" width="0.1586%" height="15" fill="rgb(248,24,43)" fg:x="195" fg:w="2"/><text x="15.7139%" y="719.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="15.6225%" y="709" width="0.3172%" height="15" fill="rgb(218,102,9)" fg:x="197" fg:w="4"/><text x="15.8725%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="15.6225%" y="693" width="0.3172%" height="15" fill="rgb(249,209,39)" fg:x="197" fg:w="4"/><text x="15.8725%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="15.7018%" y="677" width="0.2379%" height="15" fill="rgb(210,37,6)" fg:x="198" fg:w="3"/><text x="15.9518%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.7811%" y="661" width="0.1586%" height="15" fill="rgb(212,99,4)" fg:x="199" fg:w="2"/><text x="16.0311%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.8604%" y="645" width="0.0793%" height="15" fill="rgb(253,59,46)" fg:x="200" fg:w="1"/><text x="16.1104%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="15.9397%" y="693" width="0.1586%" height="15" fill="rgb(229,96,9)" fg:x="201" fg:w="2"/><text x="16.1897%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.9397%" y="677" width="0.1586%" height="15" fill="rgb(207,103,49)" fg:x="201" fg:w="2"/><text x="16.1897%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="15.9397%" y="661" width="0.1586%" height="15" fill="rgb(250,226,20)" fg:x="201" fg:w="2"/><text x="16.1897%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.1776%" y="645" width="0.0793%" height="15" fill="rgb(238,220,11)" fg:x="204" fg:w="1"/><text x="16.4276%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="16.2569%" y="645" width="0.1586%" height="15" fill="rgb(236,74,15)" fg:x="205" fg:w="2"/><text x="16.5069%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.2569%" y="629" width="0.1586%" height="15" fill="rgb(218,43,40)" fg:x="205" fg:w="2"/><text x="16.5069%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.2569%" y="613" width="0.1586%" height="15" fill="rgb(245,206,37)" fg:x="205" fg:w="2"/><text x="16.5069%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.3362%" y="597" width="0.0793%" height="15" fill="rgb(206,30,3)" fg:x="206" fg:w="1"/><text x="16.5862%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.3362%" y="581" width="0.0793%" height="15" fill="rgb(211,29,35)" fg:x="206" fg:w="1"/><text x="16.5862%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="16.1776%" y="677" width="0.3172%" height="15" fill="rgb(218,49,50)" fg:x="204" fg:w="4"/><text x="16.4276%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="16.1776%" y="661" width="0.3172%" height="15" fill="rgb(211,114,30)" fg:x="204" fg:w="4"/><text x="16.4276%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.4155%" y="645" width="0.0793%" height="15" fill="rgb(238,70,33)" fg:x="207" fg:w="1"/><text x="16.6655%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="16.4948%" y="677" width="0.3965%" height="15" fill="rgb(238,141,50)" fg:x="208" fg:w="5"/><text x="16.7448%" y="687.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="16.6534%" y="661" width="0.2379%" height="15" fill="rgb(205,69,6)" fg:x="210" fg:w="3"/><text x="16.9034%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.7328%" y="645" width="0.1586%" height="15" fill="rgb(229,65,0)" fg:x="211" fg:w="2"/><text x="16.9828%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="16.7328%" y="629" width="0.1586%" height="15" fill="rgb(211,3,37)" fg:x="211" fg:w="2"/><text x="16.9828%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="16.7328%" y="613" width="0.1586%" height="15" fill="rgb(223,196,42)" fg:x="211" fg:w="2"/><text x="16.9828%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="16.7328%" y="597" width="0.1586%" height="15" fill="rgb(227,191,15)" fg:x="211" fg:w="2"/><text x="16.9828%" y="607.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="16.7328%" y="581" width="0.1586%" height="15" fill="rgb(229,210,53)" fg:x="211" fg:w="2"/><text x="16.9828%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.0500%" y="613" width="0.0793%" height="15" fill="rgb(250,203,10)" fg:x="215" fg:w="1"/><text x="17.3000%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="16.9707%" y="661" width="0.2379%" height="15" fill="rgb(247,8,37)" fg:x="214" fg:w="3"/><text x="17.2207%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="16.9707%" y="645" width="0.2379%" height="15" fill="rgb(240,52,9)" fg:x="214" fg:w="3"/><text x="17.2207%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="17.0500%" y="629" width="0.1586%" height="15" fill="rgb(243,100,52)" fg:x="215" fg:w="2"/><text x="17.3000%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="17.1293%" y="613" width="0.0793%" height="15" fill="rgb(224,149,30)" fg:x="216" fg:w="1"/><text x="17.3793%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.2086%" y="629" width="0.0793%" height="15" fill="rgb(232,27,45)" fg:x="217" fg:w="1"/><text x="17.4586%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.2086%" y="613" width="0.0793%" height="15" fill="rgb(242,161,36)" fg:x="217" fg:w="1"/><text x="17.4586%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.2086%" y="597" width="0.0793%" height="15" fill="rgb(235,223,32)" fg:x="217" fg:w="1"/><text x="17.4586%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="17.2086%" y="645" width="0.3172%" height="15" fill="rgb(242,78,19)" fg:x="217" fg:w="4"/><text x="17.4586%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="17.2879%" y="629" width="0.2379%" height="15" fill="rgb(233,157,47)" fg:x="218" fg:w="3"/><text x="17.5379%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="17.3672%" y="613" width="0.1586%" height="15" fill="rgb(251,213,5)" fg:x="219" fg:w="2"/><text x="17.6172%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.3672%" y="597" width="0.1586%" height="15" fill="rgb(215,223,5)" fg:x="219" fg:w="2"/><text x="17.6172%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.4465%" y="581" width="0.0793%" height="15" fill="rgb(230,14,7)" fg:x="220" fg:w="1"/><text x="17.6965%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.4465%" y="565" width="0.0793%" height="15" fill="rgb(249,179,20)" fg:x="220" fg:w="1"/><text x="17.6965%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="17.4465%" y="549" width="0.0793%" height="15" fill="rgb(230,204,44)" fg:x="220" fg:w="1"/><text x="17.6965%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.4465%" y="533" width="0.0793%" height="15" fill="rgb(233,229,46)" fg:x="220" fg:w="1"/><text x="17.6965%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="17.4465%" y="517" width="0.0793%" height="15" fill="rgb(210,154,35)" fg:x="220" fg:w="1"/><text x="17.6965%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.71%)</title><rect x="16.8914%" y="677" width="0.7137%" height="15" fill="rgb(220,178,16)" fg:x="213" fg:w="9"/><text x="17.1414%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="17.2086%" y="661" width="0.3965%" height="15" fill="rgb(243,0,53)" fg:x="217" fg:w="5"/><text x="17.4586%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.5258%" y="645" width="0.0793%" height="15" fill="rgb(223,221,47)" fg:x="221" fg:w="1"/><text x="17.7758%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.67%)</title><rect x="16.0983%" y="693" width="1.6653%" height="15" fill="rgb(233,82,15)" fg:x="203" fg:w="21"/><text x="16.3483%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.6051%" y="677" width="0.1586%" height="15" fill="rgb(222,8,38)" fg:x="222" fg:w="2"/><text x="17.8551%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.6844%" y="661" width="0.0793%" height="15" fill="rgb(241,28,48)" fg:x="223" fg:w="1"/><text x="17.9344%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.6844%" y="645" width="0.0793%" height="15" fill="rgb(209,227,15)" fg:x="223" fg:w="1"/><text x="17.9344%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (32 samples, 2.54%)</title><rect x="15.4639%" y="725" width="2.5377%" height="15" fill="rgb(234,189,48)" fg:x="195" fg:w="32"/><text x="15.7139%" y="735.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.06%)</title><rect x="15.9397%" y="709" width="2.0619%" height="15" fill="rgb(212,27,44)" fg:x="201" fg:w="26"/><text x="16.1897%" y="719.50">s..</text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="17.7637%" y="693" width="0.2379%" height="15" fill="rgb(249,55,42)" fg:x="224" fg:w="3"/><text x="18.0137%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="17.7637%" y="677" width="0.2379%" height="15" fill="rgb(215,211,28)" fg:x="224" fg:w="3"/><text x="18.0137%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="17.7637%" y="661" width="0.2379%" height="15" fill="rgb(221,155,16)" fg:x="224" fg:w="3"/><text x="18.0137%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="17.7637%" y="645" width="0.2379%" height="15" fill="rgb(247,106,30)" fg:x="224" fg:w="3"/><text x="18.0137%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.9223%" y="629" width="0.0793%" height="15" fill="rgb(230,76,31)" fg:x="226" fg:w="1"/><text x="18.1723%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="17.9223%" y="613" width="0.0793%" height="15" fill="rgb(222,6,48)" fg:x="226" fg:w="1"/><text x="18.1723%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.0016%" y="693" width="0.0793%" height="15" fill="rgb(228,82,3)" fg:x="227" fg:w="1"/><text x="18.2516%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.1602%" y="677" width="0.0793%" height="15" fill="rgb(245,208,52)" fg:x="229" fg:w="1"/><text x="18.4102%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.2395%" y="677" width="0.0793%" height="15" fill="rgb(218,65,17)" fg:x="230" fg:w="1"/><text x="18.4895%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="18.3188%" y="661" width="0.2379%" height="15" fill="rgb(242,63,26)" fg:x="231" fg:w="3"/><text x="18.5688%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="18.3981%" y="645" width="0.1586%" height="15" fill="rgb(224,119,39)" fg:x="232" fg:w="2"/><text x="18.6481%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.5567%" y="645" width="0.0793%" height="15" fill="rgb(229,106,3)" fg:x="234" fg:w="1"/><text x="18.8067%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="18.6360%" y="645" width="0.0793%" height="15" fill="rgb(248,6,33)" fg:x="235" fg:w="1"/><text x="18.8860%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.6360%" y="629" width="0.0793%" height="15" fill="rgb(226,3,49)" fg:x="235" fg:w="1"/><text x="18.8860%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.6360%" y="613" width="0.0793%" height="15" fill="rgb(228,142,14)" fg:x="235" fg:w="1"/><text x="18.8860%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.7153%" y="613" width="0.0793%" height="15" fill="rgb(241,141,54)" fg:x="236" fg:w="1"/><text x="18.9653%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.7946%" y="597" width="0.0793%" height="15" fill="rgb(252,17,50)" fg:x="237" fg:w="1"/><text x="19.0446%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.95%)</title><rect x="18.0016%" y="725" width="0.9516%" height="15" fill="rgb(221,120,48)" fg:x="227" fg:w="12"/><text x="18.2516%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.95%)</title><rect x="18.0016%" y="709" width="0.9516%" height="15" fill="rgb(229,171,33)" fg:x="227" fg:w="12"/><text x="18.2516%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="18.0809%" y="693" width="0.8723%" height="15" fill="rgb(236,207,21)" fg:x="228" fg:w="11"/><text x="18.3309%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="18.3188%" y="677" width="0.6344%" height="15" fill="rgb(218,93,35)" fg:x="231" fg:w="8"/><text x="18.5688%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="18.5567%" y="661" width="0.3965%" height="15" fill="rgb(207,101,8)" fg:x="234" fg:w="5"/><text x="18.8067%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="18.7153%" y="645" width="0.2379%" height="15" fill="rgb(237,67,44)" fg:x="236" fg:w="3"/><text x="18.9653%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="18.7153%" y="629" width="0.2379%" height="15" fill="rgb(236,218,7)" fg:x="236" fg:w="3"/><text x="18.9653%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="18.7946%" y="613" width="0.1586%" height="15" fill="rgb(252,207,10)" fg:x="237" fg:w="2"/><text x="19.0446%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.8739%" y="597" width="0.0793%" height="15" fill="rgb(221,175,6)" fg:x="238" fg:w="1"/><text x="19.1239%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.0325%" y="677" width="0.0793%" height="15" fill="rgb(230,105,53)" fg:x="240" fg:w="1"/><text x="19.2825%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.1118%" y="677" width="0.1586%" height="15" fill="rgb(253,83,6)" fg:x="241" fg:w="2"/><text x="19.3618%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="19.2704%" y="677" width="0.1586%" height="15" fill="rgb(206,198,44)" fg:x="243" fg:w="2"/><text x="19.5204%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="19.2704%" y="661" width="0.1586%" height="15" fill="rgb(206,164,29)" fg:x="243" fg:w="2"/><text x="19.5204%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.2704%" y="645" width="0.1586%" height="15" fill="rgb(215,2,50)" fg:x="243" fg:w="2"/><text x="19.5204%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.3497%" y="629" width="0.0793%" height="15" fill="rgb(246,127,18)" fg:x="244" fg:w="1"/><text x="19.5997%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.5083%" y="597" width="0.0793%" height="15" fill="rgb(232,6,21)" fg:x="246" fg:w="1"/><text x="19.7583%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="19.4290%" y="629" width="0.2379%" height="15" fill="rgb(224,154,1)" fg:x="245" fg:w="3"/><text x="19.6790%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="19.4290%" y="613" width="0.2379%" height="15" fill="rgb(248,135,32)" fg:x="245" fg:w="3"/><text x="19.6790%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="19.5876%" y="597" width="0.0793%" height="15" fill="rgb(253,129,38)" fg:x="247" fg:w="1"/><text x="19.8376%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="19.6669%" y="613" width="0.0793%" height="15" fill="rgb(214,110,11)" fg:x="248" fg:w="1"/><text x="19.9169%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.6669%" y="597" width="0.0793%" height="15" fill="rgb(246,150,22)" fg:x="248" fg:w="1"/><text x="19.9169%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="19.6669%" y="629" width="0.2379%" height="15" fill="rgb(219,170,39)" fg:x="248" fg:w="3"/><text x="19.9169%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="19.7462%" y="613" width="0.1586%" height="15" fill="rgb(221,143,52)" fg:x="249" fg:w="2"/><text x="19.9962%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="19.8255%" y="597" width="0.0793%" height="15" fill="rgb(237,122,11)" fg:x="250" fg:w="1"/><text x="20.0755%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.0634%" y="597" width="0.1586%" height="15" fill="rgb(217,114,13)" fg:x="253" fg:w="2"/><text x="20.3134%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.0634%" y="581" width="0.1586%" height="15" fill="rgb(218,184,28)" fg:x="253" fg:w="2"/><text x="20.3134%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="20.0634%" y="565" width="0.1586%" height="15" fill="rgb(237,33,22)" fg:x="253" fg:w="2"/><text x="20.3134%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.2220%" y="597" width="0.0793%" height="15" fill="rgb(224,56,42)" fg:x="255" fg:w="1"/><text x="20.4720%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="20.3807%" y="565" width="0.2379%" height="15" fill="rgb(216,138,53)" fg:x="257" fg:w="3"/><text x="20.6307%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.5393%" y="549" width="0.0793%" height="15" fill="rgb(233,229,40)" fg:x="259" fg:w="1"/><text x="20.7893%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="20.5393%" y="533" width="0.0793%" height="15" fill="rgb(252,105,0)" fg:x="259" fg:w="1"/><text x="20.7893%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="20.8565%" y="549" width="0.0793%" height="15" fill="rgb(212,75,24)" fg:x="263" fg:w="1"/><text x="21.1065%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.0151%" y="533" width="0.0793%" height="15" fill="rgb(235,168,50)" fg:x="265" fg:w="1"/><text x="21.2651%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="21.0151%" y="517" width="0.0793%" height="15" fill="rgb(247,204,12)" fg:x="265" fg:w="1"/><text x="21.2651%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.0151%" y="501" width="0.0793%" height="15" fill="rgb(250,203,27)" fg:x="265" fg:w="1"/><text x="21.2651%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.0944%" y="517" width="0.0793%" height="15" fill="rgb(221,215,2)" fg:x="266" fg:w="1"/><text x="21.3444%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="21.1737%" y="501" width="0.2379%" height="15" fill="rgb(242,163,47)" fg:x="267" fg:w="3"/><text x="21.4237%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.2530%" y="485" width="0.1586%" height="15" fill="rgb(237,136,50)" fg:x="268" fg:w="2"/><text x="21.5030%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.2530%" y="469" width="0.1586%" height="15" fill="rgb(217,201,47)" fg:x="268" fg:w="2"/><text x="21.5030%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="21.1737%" y="517" width="0.3172%" height="15" fill="rgb(212,38,47)" fg:x="267" fg:w="4"/><text x="21.4237%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="21.4116%" y="501" width="0.0793%" height="15" fill="rgb(254,113,41)" fg:x="270" fg:w="1"/><text x="21.6616%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="21.4116%" y="485" width="0.0793%" height="15" fill="rgb(236,7,22)" fg:x="270" fg:w="1"/><text x="21.6616%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (27 samples, 2.14%)</title><rect x="19.4290%" y="645" width="2.1412%" height="15" fill="rgb(235,81,25)" fg:x="245" fg:w="27"/><text x="19.6790%" y="655.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (21 samples, 1.67%)</title><rect x="19.9048%" y="629" width="1.6653%" height="15" fill="rgb(216,41,31)" fg:x="251" fg:w="21"/><text x="20.1548%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.59%)</title><rect x="19.9841%" y="613" width="1.5860%" height="15" fill="rgb(249,219,15)" fg:x="252" fg:w="20"/><text x="20.2341%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.27%)</title><rect x="20.3013%" y="597" width="1.2688%" height="15" fill="rgb(248,201,3)" fg:x="256" fg:w="16"/><text x="20.5513%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.27%)</title><rect x="20.3013%" y="581" width="1.2688%" height="15" fill="rgb(249,141,18)" fg:x="256" fg:w="16"/><text x="20.5513%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.95%)</title><rect x="20.6186%" y="565" width="0.9516%" height="15" fill="rgb(222,32,39)" fg:x="260" fg:w="12"/><text x="20.8686%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.63%)</title><rect x="20.9358%" y="549" width="0.6344%" height="15" fill="rgb(237,139,51)" fg:x="264" fg:w="8"/><text x="21.1858%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="21.0944%" y="533" width="0.4758%" height="15" fill="rgb(218,210,4)" fg:x="266" fg:w="6"/><text x="21.3444%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.4909%" y="517" width="0.0793%" height="15" fill="rgb(217,199,13)" fg:x="271" fg:w="1"/><text x="21.7409%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (29 samples, 2.30%)</title><rect x="19.4290%" y="677" width="2.2998%" height="15" fill="rgb(222,118,25)" fg:x="245" fg:w="29"/><text x="19.6790%" y="687.50">s..</text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (29 samples, 2.30%)</title><rect x="19.4290%" y="661" width="2.2998%" height="15" fill="rgb(241,70,28)" fg:x="245" fg:w="29"/><text x="19.6790%" y="671.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="21.5702%" y="645" width="0.1586%" height="15" fill="rgb(205,51,41)" fg:x="272" fg:w="2"/><text x="21.8202%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.6495%" y="629" width="0.0793%" height="15" fill="rgb(237,165,49)" fg:x="273" fg:w="1"/><text x="21.8995%" y="639.50"></text></g><g><title>engine::session::Session::flush (84 samples, 6.66%)</title><rect x="15.1467%" y="821" width="6.6614%" height="15" fill="rgb(213,10,51)" fg:x="191" fg:w="84"/><text x="15.3967%" y="831.50">engine::s..</text></g><g><title>engine::session::Session::save_changes (83 samples, 6.58%)</title><rect x="15.2260%" y="805" width="6.5821%" height="15" fill="rgb(245,89,32)" fg:x="192" fg:w="83"/><text x="15.4760%" y="815.50">engine::s..</text></g><g><title>engine::session::state::State::close (83 samples, 6.58%)</title><rect x="15.2260%" y="789" width="6.5821%" height="15" fill="rgb(249,81,54)" fg:x="192" fg:w="83"/><text x="15.4760%" y="799.50">engine::s..</text></g><g><title>engine::session::state::State::flush_entities (83 samples, 6.58%)</title><rect x="15.2260%" y="773" width="6.5821%" height="15" fill="rgb(223,134,14)" fg:x="192" fg:w="83"/><text x="15.4760%" y="783.50">engine::s..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (82 samples, 6.50%)</title><rect x="15.3053%" y="757" width="6.5028%" height="15" fill="rgb(233,62,37)" fg:x="193" fg:w="82"/><text x="15.5553%" y="767.50">engine::s..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (82 samples, 6.50%)</title><rect x="15.3053%" y="741" width="6.5028%" height="15" fill="rgb(219,117,42)" fg:x="193" fg:w="82"/><text x="15.5553%" y="751.50">engine::s..</text></g><g><title>kernel::model::any_entity_changes (36 samples, 2.85%)</title><rect x="18.9532%" y="725" width="2.8549%" height="15" fill="rgb(248,40,28)" fg:x="239" fg:w="36"/><text x="19.2032%" y="735.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (36 samples, 2.85%)</title><rect x="18.9532%" y="709" width="2.8549%" height="15" fill="rgb(246,66,35)" fg:x="239" fg:w="36"/><text x="19.2032%" y="719.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (36 samples, 2.85%)</title><rect x="18.9532%" y="693" width="2.8549%" height="15" fill="rgb(250,229,22)" fg:x="239" fg:w="36"/><text x="19.2032%" y="703.50">&lt;s..</text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="21.7288%" y="677" width="0.0793%" height="15" fill="rgb(213,89,18)" fg:x="274" fg:w="1"/><text x="21.9788%" y="687.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="21.7288%" y="661" width="0.0793%" height="15" fill="rgb(213,122,9)" fg:x="274" fg:w="1"/><text x="21.9788%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="21.8081%" y="805" width="0.1586%" height="15" fill="rgb(220,213,48)" fg:x="275" fg:w="2"/><text x="22.0581%" y="815.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="21.8081%" y="789" width="0.1586%" height="15" fill="rgb(244,109,54)" fg:x="275" fg:w="2"/><text x="22.0581%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.8874%" y="773" width="0.0793%" height="15" fill="rgb(254,104,49)" fg:x="276" fg:w="1"/><text x="22.1374%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (3 samples, 0.24%)</title><rect x="21.8081%" y="821" width="0.2379%" height="15" fill="rgb(219,28,32)" fg:x="275" fg:w="3"/><text x="22.0581%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="21.9667%" y="805" width="0.0793%" height="15" fill="rgb(249,153,33)" fg:x="277" fg:w="1"/><text x="22.2167%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="21.9667%" y="789" width="0.0793%" height="15" fill="rgb(230,116,21)" fg:x="277" fg:w="1"/><text x="22.2167%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="21.9667%" y="773" width="0.0793%" height="15" fill="rgb(247,110,3)" fg:x="277" fg:w="1"/><text x="22.2167%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.9667%" y="757" width="0.0793%" height="15" fill="rgb(227,128,3)" fg:x="277" fg:w="1"/><text x="22.2167%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.9667%" y="741" width="0.0793%" height="15" fill="rgb(208,21,1)" fg:x="277" fg:w="1"/><text x="22.2167%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.9667%" y="725" width="0.0793%" height="15" fill="rgb(225,24,20)" fg:x="277" fg:w="1"/><text x="22.2167%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.9667%" y="709" width="0.0793%" height="15" fill="rgb(250,159,24)" fg:x="277" fg:w="1"/><text x="22.2167%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.9667%" y="693" width="0.0793%" height="15" fill="rgb(214,30,53)" fg:x="277" fg:w="1"/><text x="22.2167%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.9667%" y="677" width="0.0793%" height="15" fill="rgb(243,198,11)" fg:x="277" fg:w="1"/><text x="22.2167%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.9667%" y="661" width="0.0793%" height="15" fill="rgb(232,33,1)" fg:x="277" fg:w="1"/><text x="22.2167%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="22.0460%" y="789" width="0.0793%" height="15" fill="rgb(242,60,11)" fg:x="278" fg:w="1"/><text x="22.2960%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="22.0460%" y="773" width="0.0793%" height="15" fill="rgb(241,229,34)" fg:x="278" fg:w="1"/><text x="22.2960%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="22.0460%" y="757" width="0.0793%" height="15" fill="rgb(230,92,51)" fg:x="278" fg:w="1"/><text x="22.2960%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="22.0460%" y="741" width="0.0793%" height="15" fill="rgb(212,209,8)" fg:x="278" fg:w="1"/><text x="22.2960%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.0460%" y="725" width="0.0793%" height="15" fill="rgb(241,55,35)" fg:x="278" fg:w="1"/><text x="22.2960%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.0460%" y="709" width="0.0793%" height="15" fill="rgb(208,187,52)" fg:x="278" fg:w="1"/><text x="22.2960%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="22.0460%" y="693" width="0.0793%" height="15" fill="rgb(251,110,17)" fg:x="278" fg:w="1"/><text x="22.2960%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="22.0460%" y="677" width="0.0793%" height="15" fill="rgb(246,225,54)" fg:x="278" fg:w="1"/><text x="22.2960%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.0460%" y="661" width="0.0793%" height="15" fill="rgb(220,109,6)" fg:x="278" fg:w="1"/><text x="22.2960%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.0460%" y="645" width="0.0793%" height="15" fill="rgb(228,56,50)" fg:x="278" fg:w="1"/><text x="22.2960%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="22.0460%" y="629" width="0.0793%" height="15" fill="rgb(230,34,30)" fg:x="278" fg:w="1"/><text x="22.2960%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="22.0460%" y="613" width="0.0793%" height="15" fill="rgb(205,28,42)" fg:x="278" fg:w="1"/><text x="22.2960%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.0460%" y="597" width="0.0793%" height="15" fill="rgb(215,68,0)" fg:x="278" fg:w="1"/><text x="22.2960%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="22.0460%" y="581" width="0.0793%" height="15" fill="rgb(206,91,47)" fg:x="278" fg:w="1"/><text x="22.2960%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="22.0460%" y="565" width="0.0793%" height="15" fill="rgb(241,159,43)" fg:x="278" fg:w="1"/><text x="22.2960%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="22.1253%" y="773" width="0.1586%" height="15" fill="rgb(232,191,38)" fg:x="279" fg:w="2"/><text x="22.3753%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="22.1253%" y="757" width="0.1586%" height="15" fill="rgb(212,180,41)" fg:x="279" fg:w="2"/><text x="22.3753%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="22.2046%" y="741" width="0.0793%" height="15" fill="rgb(236,134,49)" fg:x="280" fg:w="1"/><text x="22.4546%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.3632%" y="677" width="0.0793%" height="15" fill="rgb(221,83,26)" fg:x="282" fg:w="1"/><text x="22.6132%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.3632%" y="661" width="0.0793%" height="15" fill="rgb(215,87,39)" fg:x="282" fg:w="1"/><text x="22.6132%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="22.2839%" y="741" width="0.2379%" height="15" fill="rgb(242,28,29)" fg:x="281" fg:w="3"/><text x="22.5339%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="22.2839%" y="725" width="0.2379%" height="15" fill="rgb(212,219,47)" fg:x="281" fg:w="3"/><text x="22.5339%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.3632%" y="709" width="0.1586%" height="15" fill="rgb(221,35,20)" fg:x="282" fg:w="2"/><text x="22.6132%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.3632%" y="693" width="0.1586%" height="15" fill="rgb(234,144,13)" fg:x="282" fg:w="2"/><text x="22.6132%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.4425%" y="677" width="0.0793%" height="15" fill="rgb(237,41,27)" fg:x="283" fg:w="1"/><text x="22.6925%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="22.1253%" y="789" width="0.5551%" height="15" fill="rgb(253,175,5)" fg:x="279" fg:w="7"/><text x="22.3753%" y="799.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="22.2839%" y="773" width="0.3965%" height="15" fill="rgb(235,210,51)" fg:x="281" fg:w="5"/><text x="22.5339%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="22.2839%" y="757" width="0.3965%" height="15" fill="rgb(241,180,35)" fg:x="281" fg:w="5"/><text x="22.5339%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.5218%" y="741" width="0.1586%" height="15" fill="rgb(219,45,16)" fg:x="284" fg:w="2"/><text x="22.7718%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.5218%" y="725" width="0.1586%" height="15" fill="rgb(247,212,4)" fg:x="284" fg:w="2"/><text x="22.7718%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.6011%" y="709" width="0.0793%" height="15" fill="rgb(224,211,1)" fg:x="285" fg:w="1"/><text x="22.8511%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.6011%" y="693" width="0.0793%" height="15" fill="rgb(210,193,36)" fg:x="285" fg:w="1"/><text x="22.8511%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.6011%" y="677" width="0.0793%" height="15" fill="rgb(215,121,20)" fg:x="285" fg:w="1"/><text x="22.8511%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.6011%" y="661" width="0.0793%" height="15" fill="rgb(238,146,2)" fg:x="285" fg:w="1"/><text x="22.8511%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.6011%" y="645" width="0.0793%" height="15" fill="rgb(254,123,45)" fg:x="285" fg:w="1"/><text x="22.8511%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.6011%" y="629" width="0.0793%" height="15" fill="rgb(225,126,11)" fg:x="285" fg:w="1"/><text x="22.8511%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.6011%" y="613" width="0.0793%" height="15" fill="rgb(239,12,5)" fg:x="285" fg:w="1"/><text x="22.8511%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.6011%" y="597" width="0.0793%" height="15" fill="rgb(241,207,14)" fg:x="285" fg:w="1"/><text x="22.8511%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.6011%" y="581" width="0.0793%" height="15" fill="rgb(227,134,33)" fg:x="285" fg:w="1"/><text x="22.8511%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="22.6804%" y="773" width="0.0793%" height="15" fill="rgb(221,40,52)" fg:x="286" fg:w="1"/><text x="22.9304%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.6804%" y="757" width="0.0793%" height="15" fill="rgb(206,93,8)" fg:x="286" fg:w="1"/><text x="22.9304%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="22.6804%" y="741" width="0.0793%" height="15" fill="rgb(242,160,22)" fg:x="286" fg:w="1"/><text x="22.9304%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.6804%" y="725" width="0.0793%" height="15" fill="rgb(232,204,40)" fg:x="286" fg:w="1"/><text x="22.9304%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.6804%" y="709" width="0.0793%" height="15" fill="rgb(247,210,47)" fg:x="286" fg:w="1"/><text x="22.9304%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.6804%" y="693" width="0.0793%" height="15" fill="rgb(211,91,7)" fg:x="286" fg:w="1"/><text x="22.9304%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="22.6804%" y="677" width="0.0793%" height="15" fill="rgb(252,160,34)" fg:x="286" fg:w="1"/><text x="22.9304%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.7597%" y="757" width="0.0793%" height="15" fill="rgb(220,34,39)" fg:x="287" fg:w="1"/><text x="23.0097%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="22.7597%" y="741" width="0.0793%" height="15" fill="rgb(247,49,38)" fg:x="287" fg:w="1"/><text x="23.0097%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="22.8390%" y="757" width="0.0793%" height="15" fill="rgb(228,175,44)" fg:x="288" fg:w="1"/><text x="23.0890%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.8390%" y="741" width="0.0793%" height="15" fill="rgb(218,214,32)" fg:x="288" fg:w="1"/><text x="23.0890%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.8390%" y="725" width="0.0793%" height="15" fill="rgb(213,50,12)" fg:x="288" fg:w="1"/><text x="23.0890%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.8390%" y="709" width="0.0793%" height="15" fill="rgb(219,35,41)" fg:x="288" fg:w="1"/><text x="23.0890%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.8390%" y="693" width="0.0793%" height="15" fill="rgb(219,18,38)" fg:x="288" fg:w="1"/><text x="23.0890%" y="703.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="22.6804%" y="789" width="0.3172%" height="15" fill="rgb(223,217,6)" fg:x="286" fg:w="4"/><text x="22.9304%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="22.7597%" y="773" width="0.2379%" height="15" fill="rgb(208,193,35)" fg:x="287" fg:w="3"/><text x="23.0097%" y="783.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="22.9183%" y="757" width="0.0793%" height="15" fill="rgb(254,212,54)" fg:x="289" fg:w="1"/><text x="23.1683%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.9183%" y="741" width="0.0793%" height="15" fill="rgb(205,10,2)" fg:x="289" fg:w="1"/><text x="23.1683%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9183%" y="725" width="0.0793%" height="15" fill="rgb(230,133,29)" fg:x="289" fg:w="1"/><text x="23.1683%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9183%" y="709" width="0.0793%" height="15" fill="rgb(226,14,15)" fg:x="289" fg:w="1"/><text x="23.1683%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.9976%" y="741" width="0.0793%" height="15" fill="rgb(226,140,54)" fg:x="290" fg:w="1"/><text x="23.2476%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.9976%" y="725" width="0.0793%" height="15" fill="rgb(250,47,41)" fg:x="290" fg:w="1"/><text x="23.2476%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.9976%" y="709" width="0.0793%" height="15" fill="rgb(227,218,41)" fg:x="290" fg:w="1"/><text x="23.2476%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9976%" y="693" width="0.0793%" height="15" fill="rgb(254,183,7)" fg:x="290" fg:w="1"/><text x="23.2476%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.9976%" y="677" width="0.0793%" height="15" fill="rgb(206,84,53)" fg:x="290" fg:w="1"/><text x="23.2476%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9976%" y="661" width="0.0793%" height="15" fill="rgb(213,177,2)" fg:x="290" fg:w="1"/><text x="23.2476%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="22.9976%" y="645" width="0.0793%" height="15" fill="rgb(234,28,29)" fg:x="290" fg:w="1"/><text x="23.2476%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9976%" y="629" width="0.0793%" height="15" fill="rgb(248,211,38)" fg:x="290" fg:w="1"/><text x="23.2476%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.9976%" y="613" width="0.0793%" height="15" fill="rgb(246,30,0)" fg:x="290" fg:w="1"/><text x="23.2476%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9976%" y="597" width="0.0793%" height="15" fill="rgb(244,115,24)" fg:x="290" fg:w="1"/><text x="23.2476%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.9976%" y="581" width="0.0793%" height="15" fill="rgb(226,193,14)" fg:x="290" fg:w="1"/><text x="23.2476%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9976%" y="565" width="0.0793%" height="15" fill="rgb(211,196,48)" fg:x="290" fg:w="1"/><text x="23.2476%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1562%" y="709" width="0.0793%" height="15" fill="rgb(235,32,20)" fg:x="292" fg:w="1"/><text x="23.4062%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1562%" y="693" width="0.0793%" height="15" fill="rgb(251,151,49)" fg:x="292" fg:w="1"/><text x="23.4062%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.1562%" y="677" width="0.0793%" height="15" fill="rgb(254,141,38)" fg:x="292" fg:w="1"/><text x="23.4062%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.1562%" y="661" width="0.0793%" height="15" fill="rgb(209,118,44)" fg:x="292" fg:w="1"/><text x="23.4062%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.1562%" y="645" width="0.0793%" height="15" fill="rgb(205,81,4)" fg:x="292" fg:w="1"/><text x="23.4062%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.1562%" y="629" width="0.0793%" height="15" fill="rgb(241,25,6)" fg:x="292" fg:w="1"/><text x="23.4062%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.1562%" y="613" width="0.0793%" height="15" fill="rgb(212,179,29)" fg:x="292" fg:w="1"/><text x="23.4062%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.1562%" y="597" width="0.0793%" height="15" fill="rgb(241,40,32)" fg:x="292" fg:w="1"/><text x="23.4062%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.1562%" y="581" width="0.0793%" height="15" fill="rgb(223,35,2)" fg:x="292" fg:w="1"/><text x="23.4062%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.1562%" y="565" width="0.0793%" height="15" fill="rgb(221,125,54)" fg:x="292" fg:w="1"/><text x="23.4062%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.1562%" y="549" width="0.0793%" height="15" fill="rgb(230,5,49)" fg:x="292" fg:w="1"/><text x="23.4062%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.1562%" y="533" width="0.0793%" height="15" fill="rgb(221,157,7)" fg:x="292" fg:w="1"/><text x="23.4062%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.1562%" y="517" width="0.0793%" height="15" fill="rgb(242,163,10)" fg:x="292" fg:w="1"/><text x="23.4062%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.1562%" y="501" width="0.0793%" height="15" fill="rgb(232,30,2)" fg:x="292" fg:w="1"/><text x="23.4062%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.27%)</title><rect x="22.0460%" y="805" width="1.2688%" height="15" fill="rgb(245,102,40)" fg:x="278" fg:w="16"/><text x="22.2960%" y="815.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="22.9976%" y="789" width="0.3172%" height="15" fill="rgb(242,10,41)" fg:x="290" fg:w="4"/><text x="23.2476%" y="799.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="22.9976%" y="773" width="0.3172%" height="15" fill="rgb(236,184,36)" fg:x="290" fg:w="4"/><text x="23.2476%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="22.9976%" y="757" width="0.3172%" height="15" fill="rgb(247,147,48)" fg:x="290" fg:w="4"/><text x="23.2476%" y="767.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="23.0769%" y="741" width="0.2379%" height="15" fill="rgb(226,166,2)" fg:x="291" fg:w="3"/><text x="23.3269%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="23.1562%" y="725" width="0.1586%" height="15" fill="rgb(251,196,7)" fg:x="292" fg:w="2"/><text x="23.4062%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="23.2355%" y="709" width="0.0793%" height="15" fill="rgb(241,40,13)" fg:x="293" fg:w="1"/><text x="23.4855%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.2355%" y="693" width="0.0793%" height="15" fill="rgb(254,4,12)" fg:x="293" fg:w="1"/><text x="23.4855%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="23.2355%" y="677" width="0.0793%" height="15" fill="rgb(244,139,49)" fg:x="293" fg:w="1"/><text x="23.4855%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.2355%" y="661" width="0.0793%" height="15" fill="rgb(227,28,42)" fg:x="293" fg:w="1"/><text x="23.4855%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="23.2355%" y="645" width="0.0793%" height="15" fill="rgb(231,135,32)" fg:x="293" fg:w="1"/><text x="23.4855%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="23.2355%" y="629" width="0.0793%" height="15" fill="rgb(244,182,3)" fg:x="293" fg:w="1"/><text x="23.4855%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="23.2355%" y="613" width="0.0793%" height="15" fill="rgb(247,46,19)" fg:x="293" fg:w="1"/><text x="23.4855%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2355%" y="597" width="0.0793%" height="15" fill="rgb(251,179,10)" fg:x="293" fg:w="1"/><text x="23.4855%" y="607.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="23.3148%" y="741" width="0.0793%" height="15" fill="rgb(229,222,18)" fg:x="294" fg:w="1"/><text x="23.5648%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.3941%" y="629" width="0.0793%" height="15" fill="rgb(251,107,20)" fg:x="295" fg:w="1"/><text x="23.6441%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.3941%" y="613" width="0.0793%" height="15" fill="rgb(233,193,19)" fg:x="295" fg:w="1"/><text x="23.6441%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.3941%" y="597" width="0.0793%" height="15" fill="rgb(229,146,53)" fg:x="295" fg:w="1"/><text x="23.6441%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.3941%" y="581" width="0.0793%" height="15" fill="rgb(244,52,11)" fg:x="295" fg:w="1"/><text x="23.6441%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.3941%" y="565" width="0.0793%" height="15" fill="rgb(245,211,46)" fg:x="295" fg:w="1"/><text x="23.6441%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.3941%" y="549" width="0.0793%" height="15" fill="rgb(213,8,31)" fg:x="295" fg:w="1"/><text x="23.6441%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.3941%" y="533" width="0.0793%" height="15" fill="rgb(205,101,39)" fg:x="295" fg:w="1"/><text x="23.6441%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.3941%" y="517" width="0.0793%" height="15" fill="rgb(212,157,1)" fg:x="295" fg:w="1"/><text x="23.6441%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.3941%" y="501" width="0.0793%" height="15" fill="rgb(232,30,46)" fg:x="295" fg:w="1"/><text x="23.6441%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.3941%" y="485" width="0.0793%" height="15" fill="rgb(216,201,6)" fg:x="295" fg:w="1"/><text x="23.6441%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.3941%" y="469" width="0.0793%" height="15" fill="rgb(209,18,6)" fg:x="295" fg:w="1"/><text x="23.6441%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.3941%" y="453" width="0.0793%" height="15" fill="rgb(219,138,3)" fg:x="295" fg:w="1"/><text x="23.6441%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.3941%" y="709" width="0.1586%" height="15" fill="rgb(210,91,46)" fg:x="295" fg:w="2"/><text x="23.6441%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.3941%" y="693" width="0.1586%" height="15" fill="rgb(241,80,44)" fg:x="295" fg:w="2"/><text x="23.6441%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.3941%" y="677" width="0.1586%" height="15" fill="rgb(236,205,36)" fg:x="295" fg:w="2"/><text x="23.6441%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.3941%" y="661" width="0.1586%" height="15" fill="rgb(205,59,37)" fg:x="295" fg:w="2"/><text x="23.6441%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="23.3941%" y="645" width="0.1586%" height="15" fill="rgb(239,166,39)" fg:x="295" fg:w="2"/><text x="23.6441%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.4734%" y="629" width="0.0793%" height="15" fill="rgb(239,146,40)" fg:x="296" fg:w="1"/><text x="23.7234%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.5527%" y="709" width="0.0793%" height="15" fill="rgb(231,11,52)" fg:x="297" fg:w="1"/><text x="23.8027%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.5527%" y="693" width="0.0793%" height="15" fill="rgb(253,21,37)" fg:x="297" fg:w="1"/><text x="23.8027%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.5527%" y="677" width="0.0793%" height="15" fill="rgb(224,87,39)" fg:x="297" fg:w="1"/><text x="23.8027%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.5527%" y="661" width="0.0793%" height="15" fill="rgb(249,15,46)" fg:x="297" fg:w="1"/><text x="23.8027%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.6320%" y="613" width="0.0793%" height="15" fill="rgb(250,37,51)" fg:x="298" fg:w="1"/><text x="23.8820%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.6320%" y="597" width="0.0793%" height="15" fill="rgb(205,185,43)" fg:x="298" fg:w="1"/><text x="23.8820%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="23.3148%" y="757" width="0.5551%" height="15" fill="rgb(206,65,41)" fg:x="294" fg:w="7"/><text x="23.5648%" y="767.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="23.3941%" y="741" width="0.4758%" height="15" fill="rgb(236,159,32)" fg:x="295" fg:w="6"/><text x="23.6441%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="23.3941%" y="725" width="0.4758%" height="15" fill="rgb(228,199,27)" fg:x="295" fg:w="6"/><text x="23.6441%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="23.6320%" y="709" width="0.2379%" height="15" fill="rgb(212,0,37)" fg:x="298" fg:w="3"/><text x="23.8820%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="23.6320%" y="693" width="0.2379%" height="15" fill="rgb(248,50,11)" fg:x="298" fg:w="3"/><text x="23.8820%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="23.6320%" y="677" width="0.2379%" height="15" fill="rgb(231,164,25)" fg:x="298" fg:w="3"/><text x="23.8820%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="23.6320%" y="661" width="0.2379%" height="15" fill="rgb(238,38,39)" fg:x="298" fg:w="3"/><text x="23.8820%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="23.6320%" y="645" width="0.2379%" height="15" fill="rgb(210,15,50)" fg:x="298" fg:w="3"/><text x="23.8820%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="23.6320%" y="629" width="0.2379%" height="15" fill="rgb(251,126,36)" fg:x="298" fg:w="3"/><text x="23.8820%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.7113%" y="613" width="0.1586%" height="15" fill="rgb(243,59,26)" fg:x="299" fg:w="2"/><text x="23.9613%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.7113%" y="597" width="0.1586%" height="15" fill="rgb(215,24,30)" fg:x="299" fg:w="2"/><text x="23.9613%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.7906%" y="581" width="0.0793%" height="15" fill="rgb(253,50,51)" fg:x="300" fg:w="1"/><text x="24.0406%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.7906%" y="565" width="0.0793%" height="15" fill="rgb(252,2,16)" fg:x="300" fg:w="1"/><text x="24.0406%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="23.7906%" y="549" width="0.0793%" height="15" fill="rgb(209,123,36)" fg:x="300" fg:w="1"/><text x="24.0406%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="23.7906%" y="533" width="0.0793%" height="15" fill="rgb(245,60,15)" fg:x="300" fg:w="1"/><text x="24.0406%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.1079%" y="645" width="0.0793%" height="15" fill="rgb(246,4,13)" fg:x="304" fg:w="1"/><text x="24.3579%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.1872%" y="581" width="0.0793%" height="15" fill="rgb(210,223,46)" fg:x="305" fg:w="1"/><text x="24.4372%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (14 samples, 1.11%)</title><rect x="23.3148%" y="789" width="1.1102%" height="15" fill="rgb(248,1,9)" fg:x="294" fg:w="14"/><text x="23.5648%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (14 samples, 1.11%)</title><rect x="23.3148%" y="773" width="1.1102%" height="15" fill="rgb(254,2,34)" fg:x="294" fg:w="14"/><text x="23.5648%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="23.8699%" y="757" width="0.5551%" height="15" fill="rgb(239,176,1)" fg:x="301" fg:w="7"/><text x="24.1199%" y="767.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="23.9492%" y="741" width="0.4758%" height="15" fill="rgb(250,25,32)" fg:x="302" fg:w="6"/><text x="24.1992%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="23.9492%" y="725" width="0.4758%" height="15" fill="rgb(225,28,39)" fg:x="302" fg:w="6"/><text x="24.1992%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="23.9492%" y="709" width="0.4758%" height="15" fill="rgb(230,166,37)" fg:x="302" fg:w="6"/><text x="24.1992%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="23.9492%" y="693" width="0.4758%" height="15" fill="rgb(246,220,4)" fg:x="302" fg:w="6"/><text x="24.1992%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="24.0285%" y="677" width="0.3965%" height="15" fill="rgb(219,119,33)" fg:x="303" fg:w="5"/><text x="24.2785%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="24.0285%" y="661" width="0.3965%" height="15" fill="rgb(221,207,38)" fg:x="303" fg:w="5"/><text x="24.2785%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="24.1872%" y="645" width="0.2379%" height="15" fill="rgb(214,153,5)" fg:x="305" fg:w="3"/><text x="24.4372%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="24.1872%" y="629" width="0.2379%" height="15" fill="rgb(223,50,16)" fg:x="305" fg:w="3"/><text x="24.4372%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="24.1872%" y="613" width="0.2379%" height="15" fill="rgb(209,207,12)" fg:x="305" fg:w="3"/><text x="24.4372%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="24.1872%" y="597" width="0.2379%" height="15" fill="rgb(207,3,46)" fg:x="305" fg:w="3"/><text x="24.4372%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.2665%" y="581" width="0.1586%" height="15" fill="rgb(232,45,53)" fg:x="306" fg:w="2"/><text x="24.5165%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.2665%" y="565" width="0.1586%" height="15" fill="rgb(206,140,15)" fg:x="306" fg:w="2"/><text x="24.5165%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="24.3458%" y="549" width="0.0793%" height="15" fill="rgb(245,66,17)" fg:x="307" fg:w="1"/><text x="24.5958%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="24.3458%" y="533" width="0.0793%" height="15" fill="rgb(221,25,37)" fg:x="307" fg:w="1"/><text x="24.5958%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="24.3458%" y="517" width="0.0793%" height="15" fill="rgb(215,99,47)" fg:x="307" fg:w="1"/><text x="24.5958%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="24.4251%" y="789" width="0.0793%" height="15" fill="rgb(219,154,44)" fg:x="308" fg:w="1"/><text x="24.6751%" y="799.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.4251%" y="773" width="0.0793%" height="15" fill="rgb(210,197,36)" fg:x="308" fg:w="1"/><text x="24.6751%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.5044%" y="613" width="0.0793%" height="15" fill="rgb(217,137,10)" fg:x="309" fg:w="1"/><text x="24.7544%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.5044%" y="597" width="0.0793%" height="15" fill="rgb(240,216,26)" fg:x="309" fg:w="1"/><text x="24.7544%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.5044%" y="581" width="0.0793%" height="15" fill="rgb(242,76,17)" fg:x="309" fg:w="1"/><text x="24.7544%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.5044%" y="565" width="0.0793%" height="15" fill="rgb(243,142,51)" fg:x="309" fg:w="1"/><text x="24.7544%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.5044%" y="549" width="0.0793%" height="15" fill="rgb(233,109,46)" fg:x="309" fg:w="1"/><text x="24.7544%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="24.5044%" y="533" width="0.0793%" height="15" fill="rgb(252,45,32)" fg:x="309" fg:w="1"/><text x="24.7544%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.5044%" y="517" width="0.0793%" height="15" fill="rgb(210,69,52)" fg:x="309" fg:w="1"/><text x="24.7544%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.5044%" y="661" width="0.1586%" height="15" fill="rgb(242,30,2)" fg:x="309" fg:w="2"/><text x="24.7544%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.5044%" y="645" width="0.1586%" height="15" fill="rgb(246,137,1)" fg:x="309" fg:w="2"/><text x="24.7544%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.5044%" y="629" width="0.1586%" height="15" fill="rgb(221,205,25)" fg:x="309" fg:w="2"/><text x="24.7544%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.5837%" y="613" width="0.0793%" height="15" fill="rgb(224,44,43)" fg:x="310" fg:w="1"/><text x="24.8337%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6630%" y="661" width="0.0793%" height="15" fill="rgb(209,81,13)" fg:x="311" fg:w="1"/><text x="24.9130%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.6630%" y="645" width="0.0793%" height="15" fill="rgb(227,88,4)" fg:x="311" fg:w="1"/><text x="24.9130%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.6630%" y="629" width="0.0793%" height="15" fill="rgb(228,118,49)" fg:x="311" fg:w="1"/><text x="24.9130%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.6630%" y="613" width="0.0793%" height="15" fill="rgb(225,215,27)" fg:x="311" fg:w="1"/><text x="24.9130%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.6630%" y="597" width="0.0793%" height="15" fill="rgb(235,226,1)" fg:x="311" fg:w="1"/><text x="24.9130%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.6630%" y="581" width="0.0793%" height="15" fill="rgb(205,107,17)" fg:x="311" fg:w="1"/><text x="24.9130%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.6630%" y="565" width="0.0793%" height="15" fill="rgb(247,85,8)" fg:x="311" fg:w="1"/><text x="24.9130%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.6630%" y="549" width="0.0793%" height="15" fill="rgb(230,220,20)" fg:x="311" fg:w="1"/><text x="24.9130%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.6630%" y="533" width="0.0793%" height="15" fill="rgb(237,22,6)" fg:x="311" fg:w="1"/><text x="24.9130%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.6630%" y="517" width="0.0793%" height="15" fill="rgb(253,39,1)" fg:x="311" fg:w="1"/><text x="24.9130%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.6630%" y="501" width="0.0793%" height="15" fill="rgb(251,206,50)" fg:x="311" fg:w="1"/><text x="24.9130%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6630%" y="485" width="0.0793%" height="15" fill="rgb(239,162,11)" fg:x="311" fg:w="1"/><text x="24.9130%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="24.5044%" y="677" width="0.3172%" height="15" fill="rgb(234,164,6)" fg:x="309" fg:w="4"/><text x="24.7544%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.7423%" y="661" width="0.0793%" height="15" fill="rgb(238,112,10)" fg:x="312" fg:w="1"/><text x="24.9923%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="24.5044%" y="693" width="0.4758%" height="15" fill="rgb(232,78,29)" fg:x="309" fg:w="6"/><text x="24.7544%" y="703.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="24.8216%" y="677" width="0.1586%" height="15" fill="rgb(232,20,13)" fg:x="313" fg:w="2"/><text x="25.0716%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="24.9802%" y="693" width="0.1586%" height="15" fill="rgb(222,175,9)" fg:x="315" fg:w="2"/><text x="25.2302%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="24.9802%" y="677" width="0.1586%" height="15" fill="rgb(233,61,14)" fg:x="315" fg:w="2"/><text x="25.2302%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.0595%" y="661" width="0.0793%" height="15" fill="rgb(224,152,29)" fg:x="316" fg:w="1"/><text x="25.3095%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.0595%" y="645" width="0.0793%" height="15" fill="rgb(232,26,6)" fg:x="316" fg:w="1"/><text x="25.3095%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.0595%" y="629" width="0.0793%" height="15" fill="rgb(210,116,11)" fg:x="316" fg:w="1"/><text x="25.3095%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.0595%" y="613" width="0.0793%" height="15" fill="rgb(238,213,15)" fg:x="316" fg:w="1"/><text x="25.3095%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.0595%" y="597" width="0.0793%" height="15" fill="rgb(236,177,32)" fg:x="316" fg:w="1"/><text x="25.3095%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.71%)</title><rect x="24.5044%" y="741" width="0.7137%" height="15" fill="rgb(230,36,43)" fg:x="309" fg:w="9"/><text x="24.7544%" y="751.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.71%)</title><rect x="24.5044%" y="725" width="0.7137%" height="15" fill="rgb(212,76,23)" fg:x="309" fg:w="9"/><text x="24.7544%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.71%)</title><rect x="24.5044%" y="709" width="0.7137%" height="15" fill="rgb(225,168,24)" fg:x="309" fg:w="9"/><text x="24.7544%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.1388%" y="693" width="0.0793%" height="15" fill="rgb(206,40,44)" fg:x="317" fg:w="1"/><text x="25.3888%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.1388%" y="677" width="0.0793%" height="15" fill="rgb(251,213,6)" fg:x="317" fg:w="1"/><text x="25.3888%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.1388%" y="661" width="0.0793%" height="15" fill="rgb(220,7,47)" fg:x="317" fg:w="1"/><text x="25.3888%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.2974%" y="725" width="0.0793%" height="15" fill="rgb(254,130,53)" fg:x="319" fg:w="1"/><text x="25.5474%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.3767%" y="693" width="0.0793%" height="15" fill="rgb(240,2,46)" fg:x="320" fg:w="1"/><text x="25.6267%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.3767%" y="677" width="0.0793%" height="15" fill="rgb(252,144,40)" fg:x="320" fg:w="1"/><text x="25.6267%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.3767%" y="661" width="0.0793%" height="15" fill="rgb(226,23,10)" fg:x="320" fg:w="1"/><text x="25.6267%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.3767%" y="645" width="0.0793%" height="15" fill="rgb(212,204,35)" fg:x="320" fg:w="1"/><text x="25.6267%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.3767%" y="629" width="0.0793%" height="15" fill="rgb(218,201,15)" fg:x="320" fg:w="1"/><text x="25.6267%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.3767%" y="613" width="0.0793%" height="15" fill="rgb(224,197,5)" fg:x="320" fg:w="1"/><text x="25.6267%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (13 samples, 1.03%)</title><rect x="24.5044%" y="789" width="1.0309%" height="15" fill="rgb(224,185,18)" fg:x="309" fg:w="13"/><text x="24.7544%" y="799.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.03%)</title><rect x="24.5044%" y="773" width="1.0309%" height="15" fill="rgb(251,71,45)" fg:x="309" fg:w="13"/><text x="24.7544%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (13 samples, 1.03%)</title><rect x="24.5044%" y="757" width="1.0309%" height="15" fill="rgb(216,74,24)" fg:x="309" fg:w="13"/><text x="24.7544%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="25.2181%" y="741" width="0.3172%" height="15" fill="rgb(250,36,51)" fg:x="318" fg:w="4"/><text x="25.4681%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="25.3767%" y="725" width="0.1586%" height="15" fill="rgb(209,224,28)" fg:x="320" fg:w="2"/><text x="25.6267%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="25.3767%" y="709" width="0.1586%" height="15" fill="rgb(228,5,10)" fg:x="320" fg:w="2"/><text x="25.6267%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.4560%" y="693" width="0.0793%" height="15" fill="rgb(250,57,40)" fg:x="321" fg:w="1"/><text x="25.7060%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.4560%" y="677" width="0.0793%" height="15" fill="rgb(228,194,41)" fg:x="321" fg:w="1"/><text x="25.7060%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.4560%" y="661" width="0.0793%" height="15" fill="rgb(206,68,23)" fg:x="321" fg:w="1"/><text x="25.7060%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.4560%" y="645" width="0.0793%" height="15" fill="rgb(230,33,29)" fg:x="321" fg:w="1"/><text x="25.7060%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.4560%" y="629" width="0.0793%" height="15" fill="rgb(210,39,32)" fg:x="321" fg:w="1"/><text x="25.7060%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.4560%" y="613" width="0.0793%" height="15" fill="rgb(236,89,23)" fg:x="321" fg:w="1"/><text x="25.7060%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.4560%" y="597" width="0.0793%" height="15" fill="rgb(218,52,52)" fg:x="321" fg:w="1"/><text x="25.7060%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.4560%" y="581" width="0.0793%" height="15" fill="rgb(235,154,5)" fg:x="321" fg:w="1"/><text x="25.7060%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.4560%" y="565" width="0.0793%" height="15" fill="rgb(223,168,9)" fg:x="321" fg:w="1"/><text x="25.7060%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.4560%" y="549" width="0.0793%" height="15" fill="rgb(220,8,33)" fg:x="321" fg:w="1"/><text x="25.7060%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="25.4560%" y="533" width="0.0793%" height="15" fill="rgb(216,176,3)" fg:x="321" fg:w="1"/><text x="25.7060%" y="543.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="25.4560%" y="517" width="0.0793%" height="15" fill="rgb(254,150,22)" fg:x="321" fg:w="1"/><text x="25.7060%" y="527.50"></text></g><g><title>plugins_core::build::Build::holding (46 samples, 3.65%)</title><rect x="22.0460%" y="821" width="3.6479%" height="15" fill="rgb(231,61,53)" fg:x="278" fg:w="46"/><text x="22.2960%" y="831.50">plug..</text></g><g><title>plugins_core::tools::set_container (30 samples, 2.38%)</title><rect x="23.3148%" y="805" width="2.3791%" height="15" fill="rgb(249,177,41)" fg:x="294" fg:w="30"/><text x="23.5648%" y="815.50">pl..</text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="25.5353%" y="789" width="0.1586%" height="15" fill="rgb(221,122,7)" fg:x="322" fg:w="2"/><text x="25.7853%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="25.5353%" y="773" width="0.1586%" height="15" fill="rgb(215,115,7)" fg:x="322" fg:w="2"/><text x="25.7853%" y="783.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="25.6146%" y="757" width="0.0793%" height="15" fill="rgb(218,108,33)" fg:x="323" fg:w="1"/><text x="25.8646%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.6146%" y="741" width="0.0793%" height="15" fill="rgb(221,205,39)" fg:x="323" fg:w="1"/><text x="25.8646%" y="751.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="25.6146%" y="725" width="0.0793%" height="15" fill="rgb(220,171,18)" fg:x="323" fg:w="1"/><text x="25.8646%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.6939%" y="741" width="0.1586%" height="15" fill="rgb(236,188,29)" fg:x="324" fg:w="2"/><text x="25.9439%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.6939%" y="725" width="0.1586%" height="15" fill="rgb(239,29,5)" fg:x="324" fg:w="2"/><text x="25.9439%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.6939%" y="709" width="0.1586%" height="15" fill="rgb(236,114,44)" fg:x="324" fg:w="2"/><text x="25.9439%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.6939%" y="693" width="0.1586%" height="15" fill="rgb(239,214,48)" fg:x="324" fg:w="2"/><text x="25.9439%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7732%" y="677" width="0.0793%" height="15" fill="rgb(241,56,8)" fg:x="325" fg:w="1"/><text x="26.0232%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.7732%" y="661" width="0.0793%" height="15" fill="rgb(228,201,0)" fg:x="325" fg:w="1"/><text x="26.0232%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.8525%" y="741" width="0.0793%" height="15" fill="rgb(226,219,34)" fg:x="326" fg:w="1"/><text x="26.1025%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.8525%" y="725" width="0.0793%" height="15" fill="rgb(209,204,54)" fg:x="326" fg:w="1"/><text x="26.1025%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.8525%" y="709" width="0.0793%" height="15" fill="rgb(251,160,17)" fg:x="326" fg:w="1"/><text x="26.1025%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.8525%" y="693" width="0.0793%" height="15" fill="rgb(235,15,25)" fg:x="326" fg:w="1"/><text x="26.1025%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="25.6939%" y="789" width="0.3172%" height="15" fill="rgb(216,209,28)" fg:x="324" fg:w="4"/><text x="25.9439%" y="799.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="25.6939%" y="773" width="0.3172%" height="15" fill="rgb(248,123,21)" fg:x="324" fg:w="4"/><text x="25.9439%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="25.6939%" y="757" width="0.3172%" height="15" fill="rgb(226,138,44)" fg:x="324" fg:w="4"/><text x="25.9439%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.9318%" y="741" width="0.0793%" height="15" fill="rgb(211,104,54)" fg:x="327" fg:w="1"/><text x="26.1818%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9318%" y="725" width="0.0793%" height="15" fill="rgb(241,198,15)" fg:x="327" fg:w="1"/><text x="26.1818%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.9318%" y="709" width="0.0793%" height="15" fill="rgb(227,155,54)" fg:x="327" fg:w="1"/><text x="26.1818%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9318%" y="693" width="0.0793%" height="15" fill="rgb(225,131,31)" fg:x="327" fg:w="1"/><text x="26.1818%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.9318%" y="677" width="0.0793%" height="15" fill="rgb(242,40,17)" fg:x="327" fg:w="1"/><text x="26.1818%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9318%" y="661" width="0.0793%" height="15" fill="rgb(254,57,35)" fg:x="327" fg:w="1"/><text x="26.1818%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.9318%" y="645" width="0.0793%" height="15" fill="rgb(240,64,32)" fg:x="327" fg:w="1"/><text x="26.1818%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9318%" y="629" width="0.0793%" height="15" fill="rgb(251,136,26)" fg:x="327" fg:w="1"/><text x="26.1818%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.9318%" y="613" width="0.0793%" height="15" fill="rgb(208,60,54)" fg:x="327" fg:w="1"/><text x="26.1818%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="25.6939%" y="821" width="0.3965%" height="15" fill="rgb(220,13,12)" fg:x="324" fg:w="5"/><text x="25.9439%" y="831.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="25.6939%" y="805" width="0.3965%" height="15" fill="rgb(213,149,1)" fg:x="324" fg:w="5"/><text x="25.9439%" y="815.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="26.0111%" y="789" width="0.0793%" height="15" fill="rgb(212,191,39)" fg:x="328" fg:w="1"/><text x="26.2611%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="26.0904%" y="789" width="0.0793%" height="15" fill="rgb(215,221,42)" fg:x="329" fg:w="1"/><text x="26.3404%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.0904%" y="773" width="0.0793%" height="15" fill="rgb(244,79,23)" fg:x="329" fg:w="1"/><text x="26.3404%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="26.0904%" y="757" width="0.0793%" height="15" fill="rgb(247,17,29)" fg:x="329" fg:w="1"/><text x="26.3404%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="26.0904%" y="741" width="0.0793%" height="15" fill="rgb(251,221,21)" fg:x="329" fg:w="1"/><text x="26.3404%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.1697%" y="773" width="0.0793%" height="15" fill="rgb(207,202,34)" fg:x="330" fg:w="1"/><text x="26.4197%" y="783.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="26.0904%" y="821" width="0.2379%" height="15" fill="rgb(217,4,34)" fg:x="329" fg:w="3"/><text x="26.3404%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="26.0904%" y="805" width="0.2379%" height="15" fill="rgb(253,17,16)" fg:x="329" fg:w="3"/><text x="26.3404%" y="815.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="26.1697%" y="789" width="0.1586%" height="15" fill="rgb(223,91,48)" fg:x="330" fg:w="2"/><text x="26.4197%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="26.2490%" y="773" width="0.0793%" height="15" fill="rgb(244,191,22)" fg:x="331" fg:w="1"/><text x="26.4990%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.2490%" y="757" width="0.0793%" height="15" fill="rgb(211,107,14)" fg:x="331" fg:w="1"/><text x="26.4990%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="26.3283%" y="789" width="0.0793%" height="15" fill="rgb(232,81,23)" fg:x="332" fg:w="1"/><text x="26.5783%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="26.3283%" y="773" width="0.0793%" height="15" fill="rgb(237,126,14)" fg:x="332" fg:w="1"/><text x="26.5783%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.3283%" y="757" width="0.0793%" height="15" fill="rgb(230,65,39)" fg:x="332" fg:w="1"/><text x="26.5783%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.3283%" y="741" width="0.0793%" height="15" fill="rgb(208,106,41)" fg:x="332" fg:w="1"/><text x="26.5783%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.3283%" y="725" width="0.0793%" height="15" fill="rgb(206,125,25)" fg:x="332" fg:w="1"/><text x="26.5783%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.3283%" y="709" width="0.0793%" height="15" fill="rgb(250,24,29)" fg:x="332" fg:w="1"/><text x="26.5783%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.3283%" y="693" width="0.0793%" height="15" fill="rgb(226,49,32)" fg:x="332" fg:w="1"/><text x="26.5783%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.3283%" y="677" width="0.0793%" height="15" fill="rgb(217,110,16)" fg:x="332" fg:w="1"/><text x="26.5783%" y="687.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.4076%" y="741" width="0.0793%" height="15" fill="rgb(252,16,53)" fg:x="333" fg:w="1"/><text x="26.6576%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.4076%" y="725" width="0.0793%" height="15" fill="rgb(238,163,11)" fg:x="333" fg:w="1"/><text x="26.6576%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.4076%" y="709" width="0.0793%" height="15" fill="rgb(206,210,1)" fg:x="333" fg:w="1"/><text x="26.6576%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.4076%" y="693" width="0.0793%" height="15" fill="rgb(229,8,25)" fg:x="333" fg:w="1"/><text x="26.6576%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.4076%" y="677" width="0.0793%" height="15" fill="rgb(247,155,23)" fg:x="333" fg:w="1"/><text x="26.6576%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.4076%" y="661" width="0.0793%" height="15" fill="rgb(207,26,7)" fg:x="333" fg:w="1"/><text x="26.6576%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.4076%" y="645" width="0.0793%" height="15" fill="rgb(215,179,12)" fg:x="333" fg:w="1"/><text x="26.6576%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.4076%" y="629" width="0.0793%" height="15" fill="rgb(238,208,11)" fg:x="333" fg:w="1"/><text x="26.6576%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.4076%" y="613" width="0.0793%" height="15" fill="rgb(238,102,42)" fg:x="333" fg:w="1"/><text x="26.6576%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.4076%" y="597" width="0.0793%" height="15" fill="rgb(239,35,9)" fg:x="333" fg:w="1"/><text x="26.6576%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.4076%" y="581" width="0.0793%" height="15" fill="rgb(244,182,30)" fg:x="333" fg:w="1"/><text x="26.6576%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.4076%" y="565" width="0.0793%" height="15" fill="rgb(232,181,23)" fg:x="333" fg:w="1"/><text x="26.6576%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.4076%" y="549" width="0.0793%" height="15" fill="rgb(242,154,29)" fg:x="333" fg:w="1"/><text x="26.6576%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.4076%" y="533" width="0.0793%" height="15" fill="rgb(219,23,2)" fg:x="333" fg:w="1"/><text x="26.6576%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.4076%" y="517" width="0.0793%" height="15" fill="rgb(234,94,43)" fg:x="333" fg:w="1"/><text x="26.6576%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="26.4076%" y="773" width="0.2379%" height="15" fill="rgb(223,55,45)" fg:x="333" fg:w="3"/><text x="26.6576%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="26.4076%" y="757" width="0.2379%" height="15" fill="rgb(241,215,54)" fg:x="333" fg:w="3"/><text x="26.6576%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="26.4869%" y="741" width="0.1586%" height="15" fill="rgb(247,63,53)" fg:x="334" fg:w="2"/><text x="26.7369%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="26.4869%" y="725" width="0.1586%" height="15" fill="rgb(220,166,7)" fg:x="334" fg:w="2"/><text x="26.7369%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.5662%" y="709" width="0.0793%" height="15" fill="rgb(248,53,45)" fg:x="335" fg:w="1"/><text x="26.8162%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.32%)</title><rect x="26.4076%" y="789" width="0.3172%" height="15" fill="rgb(224,207,20)" fg:x="333" fg:w="4"/><text x="26.6576%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="26.6455%" y="773" width="0.0793%" height="15" fill="rgb(244,185,11)" fg:x="336" fg:w="1"/><text x="26.8955%" y="783.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="26.6455%" y="757" width="0.0793%" height="15" fill="rgb(230,13,42)" fg:x="336" fg:w="1"/><text x="26.8955%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.6455%" y="741" width="0.0793%" height="15" fill="rgb(243,191,18)" fg:x="336" fg:w="1"/><text x="26.8955%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="26.3283%" y="805" width="0.5551%" height="15" fill="rgb(249,135,15)" fg:x="332" fg:w="7"/><text x="26.5783%" y="815.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="26.7248%" y="789" width="0.1586%" height="15" fill="rgb(229,26,35)" fg:x="337" fg:w="2"/><text x="26.9748%" y="799.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="26.7248%" y="773" width="0.1586%" height="15" fill="rgb(216,191,16)" fg:x="337" fg:w="2"/><text x="26.9748%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="26.7248%" y="757" width="0.1586%" height="15" fill="rgb(242,18,7)" fg:x="337" fg:w="2"/><text x="26.9748%" y="767.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="26.7248%" y="741" width="0.1586%" height="15" fill="rgb(205,128,17)" fg:x="337" fg:w="2"/><text x="26.9748%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="26.7248%" y="725" width="0.1586%" height="15" fill="rgb(229,199,44)" fg:x="337" fg:w="2"/><text x="26.9748%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="26.7248%" y="709" width="0.1586%" height="15" fill="rgb(234,222,3)" fg:x="337" fg:w="2"/><text x="26.9748%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="26.7248%" y="693" width="0.1586%" height="15" fill="rgb(220,170,20)" fg:x="337" fg:w="2"/><text x="26.9748%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="26.7248%" y="677" width="0.1586%" height="15" fill="rgb(207,138,8)" fg:x="337" fg:w="2"/><text x="26.9748%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="26.7248%" y="661" width="0.1586%" height="15" fill="rgb(244,130,36)" fg:x="337" fg:w="2"/><text x="26.9748%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="26.8041%" y="645" width="0.0793%" height="15" fill="rgb(207,197,52)" fg:x="338" fg:w="1"/><text x="27.0541%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="26.8041%" y="629" width="0.0793%" height="15" fill="rgb(206,9,21)" fg:x="338" fg:w="1"/><text x="27.0541%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.8041%" y="613" width="0.0793%" height="15" fill="rgb(250,15,47)" fg:x="338" fg:w="1"/><text x="27.0541%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (2 samples, 0.16%)</title><rect x="26.8834%" y="789" width="0.1586%" height="15" fill="rgb(235,202,14)" fg:x="339" fg:w="2"/><text x="27.1334%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="26.8834%" y="773" width="0.1586%" height="15" fill="rgb(211,180,47)" fg:x="339" fg:w="2"/><text x="27.1334%" y="783.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="26.8834%" y="757" width="0.1586%" height="15" fill="rgb(209,61,11)" fg:x="339" fg:w="2"/><text x="27.1334%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="27.0420%" y="789" width="0.0793%" height="15" fill="rgb(243,197,29)" fg:x="341" fg:w="1"/><text x="27.2920%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="27.0420%" y="773" width="0.0793%" height="15" fill="rgb(216,185,16)" fg:x="341" fg:w="1"/><text x="27.2920%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="27.0420%" y="757" width="0.0793%" height="15" fill="rgb(248,5,15)" fg:x="341" fg:w="1"/><text x="27.2920%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="27.0420%" y="741" width="0.0793%" height="15" fill="rgb(240,39,41)" fg:x="341" fg:w="1"/><text x="27.2920%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.0420%" y="725" width="0.0793%" height="15" fill="rgb(224,220,43)" fg:x="341" fg:w="1"/><text x="27.2920%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.0420%" y="709" width="0.0793%" height="15" fill="rgb(215,21,24)" fg:x="341" fg:w="1"/><text x="27.2920%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.0420%" y="693" width="0.0793%" height="15" fill="rgb(220,102,8)" fg:x="341" fg:w="1"/><text x="27.2920%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.0420%" y="677" width="0.0793%" height="15" fill="rgb(225,185,10)" fg:x="341" fg:w="1"/><text x="27.2920%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.0420%" y="661" width="0.0793%" height="15" fill="rgb(212,108,24)" fg:x="341" fg:w="1"/><text x="27.2920%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.0420%" y="645" width="0.0793%" height="15" fill="rgb(237,27,0)" fg:x="341" fg:w="1"/><text x="27.2920%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.0420%" y="629" width="0.0793%" height="15" fill="rgb(212,106,38)" fg:x="341" fg:w="1"/><text x="27.2920%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.0420%" y="613" width="0.0793%" height="15" fill="rgb(210,125,30)" fg:x="341" fg:w="1"/><text x="27.2920%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.0420%" y="597" width="0.0793%" height="15" fill="rgb(215,219,1)" fg:x="341" fg:w="1"/><text x="27.2920%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.0420%" y="581" width="0.0793%" height="15" fill="rgb(223,10,12)" fg:x="341" fg:w="1"/><text x="27.2920%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.0420%" y="565" width="0.0793%" height="15" fill="rgb(245,40,34)" fg:x="341" fg:w="1"/><text x="27.2920%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.0420%" y="549" width="0.0793%" height="15" fill="rgb(211,185,19)" fg:x="341" fg:w="1"/><text x="27.2920%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.0420%" y="533" width="0.0793%" height="15" fill="rgb(243,190,43)" fg:x="341" fg:w="1"/><text x="27.2920%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.0420%" y="517" width="0.0793%" height="15" fill="rgb(232,208,29)" fg:x="341" fg:w="1"/><text x="27.2920%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.0420%" y="501" width="0.0793%" height="15" fill="rgb(234,134,27)" fg:x="341" fg:w="1"/><text x="27.2920%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.0420%" y="485" width="0.0793%" height="15" fill="rgb(225,41,29)" fg:x="341" fg:w="1"/><text x="27.2920%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.0420%" y="469" width="0.0793%" height="15" fill="rgb(241,214,44)" fg:x="341" fg:w="1"/><text x="27.2920%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="27.1213%" y="789" width="0.1586%" height="15" fill="rgb(205,219,41)" fg:x="342" fg:w="2"/><text x="27.3713%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.2006%" y="773" width="0.0793%" height="15" fill="rgb(226,15,26)" fg:x="343" fg:w="1"/><text x="27.4506%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.2006%" y="757" width="0.0793%" height="15" fill="rgb(210,83,41)" fg:x="343" fg:w="1"/><text x="27.4506%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.4385%" y="773" width="0.0793%" height="15" fill="rgb(247,9,39)" fg:x="346" fg:w="1"/><text x="27.6885%" y="783.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="27.5178%" y="773" width="0.0793%" height="15" fill="rgb(209,37,30)" fg:x="347" fg:w="1"/><text x="27.7678%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.5178%" y="757" width="0.0793%" height="15" fill="rgb(248,170,46)" fg:x="347" fg:w="1"/><text x="27.7678%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.5178%" y="741" width="0.0793%" height="15" fill="rgb(237,129,44)" fg:x="347" fg:w="1"/><text x="27.7678%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.5178%" y="725" width="0.0793%" height="15" fill="rgb(225,117,51)" fg:x="347" fg:w="1"/><text x="27.7678%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="27.5178%" y="709" width="0.0793%" height="15" fill="rgb(212,165,2)" fg:x="347" fg:w="1"/><text x="27.7678%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="27.2799%" y="789" width="0.3965%" height="15" fill="rgb(213,53,45)" fg:x="344" fg:w="5"/><text x="27.5299%" y="799.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="27.5971%" y="773" width="0.0793%" height="15" fill="rgb(220,148,3)" fg:x="348" fg:w="1"/><text x="27.8471%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.5971%" y="757" width="0.0793%" height="15" fill="rgb(228,37,29)" fg:x="348" fg:w="1"/><text x="27.8471%" y="767.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="27.5971%" y="741" width="0.0793%" height="15" fill="rgb(209,76,29)" fg:x="348" fg:w="1"/><text x="27.8471%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.5971%" y="725" width="0.0793%" height="15" fill="rgb(215,90,5)" fg:x="348" fg:w="1"/><text x="27.8471%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.6764%" y="693" width="0.0793%" height="15" fill="rgb(227,207,32)" fg:x="349" fg:w="1"/><text x="27.9264%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.6764%" y="677" width="0.0793%" height="15" fill="rgb(251,218,44)" fg:x="349" fg:w="1"/><text x="27.9264%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.6764%" y="661" width="0.0793%" height="15" fill="rgb(211,44,16)" fg:x="349" fg:w="1"/><text x="27.9264%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.6764%" y="645" width="0.0793%" height="15" fill="rgb(242,170,37)" fg:x="349" fg:w="1"/><text x="27.9264%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.6764%" y="629" width="0.0793%" height="15" fill="rgb(205,181,22)" fg:x="349" fg:w="1"/><text x="27.9264%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.6764%" y="613" width="0.0793%" height="15" fill="rgb(228,130,19)" fg:x="349" fg:w="1"/><text x="27.9264%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.7557%" y="693" width="0.0793%" height="15" fill="rgb(228,9,15)" fg:x="350" fg:w="1"/><text x="28.0057%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.8351%" y="693" width="0.0793%" height="15" fill="rgb(219,66,48)" fg:x="351" fg:w="1"/><text x="28.0851%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.8351%" y="677" width="0.0793%" height="15" fill="rgb(234,203,10)" fg:x="351" fg:w="1"/><text x="28.0851%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.8351%" y="661" width="0.0793%" height="15" fill="rgb(219,209,1)" fg:x="351" fg:w="1"/><text x="28.0851%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.8351%" y="645" width="0.0793%" height="15" fill="rgb(206,167,9)" fg:x="351" fg:w="1"/><text x="28.0851%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.8351%" y="629" width="0.0793%" height="15" fill="rgb(210,11,39)" fg:x="351" fg:w="1"/><text x="28.0851%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.8351%" y="613" width="0.0793%" height="15" fill="rgb(251,90,47)" fg:x="351" fg:w="1"/><text x="28.0851%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.8351%" y="597" width="0.0793%" height="15" fill="rgb(237,7,4)" fg:x="351" fg:w="1"/><text x="28.0851%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="27.6764%" y="741" width="0.3172%" height="15" fill="rgb(232,205,47)" fg:x="349" fg:w="4"/><text x="27.9264%" y="751.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="27.6764%" y="725" width="0.3172%" height="15" fill="rgb(215,86,48)" fg:x="349" fg:w="4"/><text x="27.9264%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="27.6764%" y="709" width="0.3172%" height="15" fill="rgb(232,14,47)" fg:x="349" fg:w="4"/><text x="27.9264%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.9144%" y="693" width="0.0793%" height="15" fill="rgb(240,28,46)" fg:x="352" fg:w="1"/><text x="28.1644%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.9144%" y="677" width="0.0793%" height="15" fill="rgb(224,85,5)" fg:x="352" fg:w="1"/><text x="28.1644%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.9144%" y="661" width="0.0793%" height="15" fill="rgb(219,34,25)" fg:x="352" fg:w="1"/><text x="28.1644%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.9144%" y="645" width="0.0793%" height="15" fill="rgb(247,137,45)" fg:x="352" fg:w="1"/><text x="28.1644%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="27.9144%" y="629" width="0.0793%" height="15" fill="rgb(237,121,47)" fg:x="352" fg:w="1"/><text x="28.1644%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.9144%" y="613" width="0.0793%" height="15" fill="rgb(247,148,27)" fg:x="352" fg:w="1"/><text x="28.1644%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.9144%" y="597" width="0.0793%" height="15" fill="rgb(220,44,0)" fg:x="352" fg:w="1"/><text x="28.1644%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.9144%" y="581" width="0.0793%" height="15" fill="rgb(236,61,29)" fg:x="352" fg:w="1"/><text x="28.1644%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="28.0730%" y="533" width="0.0793%" height="15" fill="rgb(244,180,35)" fg:x="354" fg:w="1"/><text x="28.3230%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.0730%" y="517" width="0.0793%" height="15" fill="rgb(242,14,54)" fg:x="354" fg:w="1"/><text x="28.3230%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (192 samples, 15.23%)</title><rect x="13.0056%" y="837" width="15.2260%" height="15" fill="rgb(206,24,45)" fg:x="164" fg:w="192"/><text x="13.2556%" y="847.50">plugins_core::build::Bu..</text></g><g><title>plugins_core::build::Build::occupying (24 samples, 1.90%)</title><rect x="26.3283%" y="821" width="1.9033%" height="15" fill="rgb(215,211,6)" fg:x="332" fg:w="24"/><text x="26.5783%" y="831.50">p..</text></g><g><title>plugins_core::tools::set_occupying (17 samples, 1.35%)</title><rect x="26.8834%" y="805" width="1.3481%" height="15" fill="rgb(207,56,2)" fg:x="339" fg:w="17"/><text x="27.1334%" y="815.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (7 samples, 0.56%)</title><rect x="27.6764%" y="789" width="0.5551%" height="15" fill="rgb(220,135,9)" fg:x="349" fg:w="7"/><text x="27.9264%" y="799.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="27.6764%" y="773" width="0.5551%" height="15" fill="rgb(214,145,52)" fg:x="349" fg:w="7"/><text x="27.9264%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="27.6764%" y="757" width="0.5551%" height="15" fill="rgb(241,83,53)" fg:x="349" fg:w="7"/><text x="27.9264%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="27.9937%" y="741" width="0.2379%" height="15" fill="rgb(222,66,13)" fg:x="353" fg:w="3"/><text x="28.2437%" y="751.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="27.9937%" y="725" width="0.2379%" height="15" fill="rgb(239,164,54)" fg:x="353" fg:w="3"/><text x="28.2437%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="27.9937%" y="709" width="0.2379%" height="15" fill="rgb(216,189,13)" fg:x="353" fg:w="3"/><text x="28.2437%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.0730%" y="693" width="0.1586%" height="15" fill="rgb(228,212,51)" fg:x="354" fg:w="2"/><text x="28.3230%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.0730%" y="677" width="0.1586%" height="15" fill="rgb(207,190,21)" fg:x="354" fg:w="2"/><text x="28.3230%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.0730%" y="661" width="0.1586%" height="15" fill="rgb(245,28,35)" fg:x="354" fg:w="2"/><text x="28.3230%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.0730%" y="645" width="0.1586%" height="15" fill="rgb(239,23,40)" fg:x="354" fg:w="2"/><text x="28.3230%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="28.0730%" y="629" width="0.1586%" height="15" fill="rgb(242,10,51)" fg:x="354" fg:w="2"/><text x="28.3230%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.0730%" y="613" width="0.1586%" height="15" fill="rgb(207,186,5)" fg:x="354" fg:w="2"/><text x="28.3230%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.0730%" y="597" width="0.1586%" height="15" fill="rgb(242,21,16)" fg:x="354" fg:w="2"/><text x="28.3230%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.0730%" y="581" width="0.1586%" height="15" fill="rgb(237,0,53)" fg:x="354" fg:w="2"/><text x="28.3230%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.0730%" y="565" width="0.1586%" height="15" fill="rgb(215,8,52)" fg:x="354" fg:w="2"/><text x="28.3230%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.0730%" y="549" width="0.1586%" height="15" fill="rgb(248,62,44)" fg:x="354" fg:w="2"/><text x="28.3230%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.1523%" y="533" width="0.0793%" height="15" fill="rgb(224,83,15)" fg:x="355" fg:w="1"/><text x="28.4023%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.1523%" y="517" width="0.0793%" height="15" fill="rgb(249,100,46)" fg:x="355" fg:w="1"/><text x="28.4023%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="28.2316%" y="837" width="0.1586%" height="15" fill="rgb(213,35,48)" fg:x="356" fg:w="2"/><text x="28.4816%" y="847.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="28.2316%" y="821" width="0.1586%" height="15" fill="rgb(251,2,13)" fg:x="356" fg:w="2"/><text x="28.4816%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="28.3109%" y="805" width="0.0793%" height="15" fill="rgb(212,132,21)" fg:x="357" fg:w="1"/><text x="28.5609%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="28.3109%" y="789" width="0.0793%" height="15" fill="rgb(247,17,21)" fg:x="357" fg:w="1"/><text x="28.5609%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="28.3109%" y="773" width="0.0793%" height="15" fill="rgb(220,177,38)" fg:x="357" fg:w="1"/><text x="28.5609%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="28.3109%" y="757" width="0.0793%" height="15" fill="rgb(233,219,21)" fg:x="357" fg:w="1"/><text x="28.5609%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.3109%" y="741" width="0.0793%" height="15" fill="rgb(246,17,7)" fg:x="357" fg:w="1"/><text x="28.5609%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="28.4695%" y="789" width="0.0793%" height="15" fill="rgb(212,4,22)" fg:x="359" fg:w="1"/><text x="28.7195%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.5488%" y="773" width="0.0793%" height="15" fill="rgb(243,85,21)" fg:x="360" fg:w="1"/><text x="28.7988%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="28.5488%" y="789" width="0.2379%" height="15" fill="rgb(232,218,2)" fg:x="360" fg:w="3"/><text x="28.7988%" y="799.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="28.6281%" y="773" width="0.1586%" height="15" fill="rgb(253,168,47)" fg:x="361" fg:w="2"/><text x="28.8781%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.6281%" y="757" width="0.1586%" height="15" fill="rgb(238,101,25)" fg:x="361" fg:w="2"/><text x="28.8781%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.7074%" y="741" width="0.0793%" height="15" fill="rgb(251,86,12)" fg:x="362" fg:w="1"/><text x="28.9574%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.7074%" y="725" width="0.0793%" height="15" fill="rgb(241,112,44)" fg:x="362" fg:w="1"/><text x="28.9574%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="28.7867%" y="773" width="0.1586%" height="15" fill="rgb(224,28,25)" fg:x="363" fg:w="2"/><text x="29.0367%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.7867%" y="757" width="0.1586%" height="15" fill="rgb(209,201,1)" fg:x="363" fg:w="2"/><text x="29.0367%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="28.8660%" y="741" width="0.0793%" height="15" fill="rgb(231,30,22)" fg:x="364" fg:w="1"/><text x="29.1160%" y="751.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="28.7867%" y="789" width="0.2379%" height="15" fill="rgb(247,96,31)" fg:x="363" fg:w="3"/><text x="29.0367%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="28.9453%" y="773" width="0.0793%" height="15" fill="rgb(251,100,12)" fg:x="365" fg:w="1"/><text x="29.1953%" y="783.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="28.9453%" y="757" width="0.0793%" height="15" fill="rgb(224,174,7)" fg:x="365" fg:w="1"/><text x="29.1953%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.9453%" y="741" width="0.0793%" height="15" fill="rgb(231,168,19)" fg:x="365" fg:w="1"/><text x="29.1953%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.9453%" y="725" width="0.0793%" height="15" fill="rgb(226,85,5)" fg:x="365" fg:w="1"/><text x="29.1953%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.9453%" y="709" width="0.0793%" height="15" fill="rgb(210,215,5)" fg:x="365" fg:w="1"/><text x="29.1953%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.63%)</title><rect x="28.4695%" y="805" width="0.6344%" height="15" fill="rgb(233,70,8)" fg:x="359" fg:w="8"/><text x="28.7195%" y="815.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="29.0246%" y="789" width="0.0793%" height="15" fill="rgb(229,109,53)" fg:x="366" fg:w="1"/><text x="29.2746%" y="799.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="29.0246%" y="773" width="0.0793%" height="15" fill="rgb(213,125,35)" fg:x="366" fg:w="1"/><text x="29.2746%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="29.0246%" y="757" width="0.0793%" height="15" fill="rgb(215,12,48)" fg:x="366" fg:w="1"/><text x="29.2746%" y="767.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (10 samples, 0.79%)</title><rect x="28.3902%" y="837" width="0.7930%" height="15" fill="rgb(207,12,38)" fg:x="358" fg:w="10"/><text x="28.6402%" y="847.50"></text></g><g><title>plugins_core::build::QuickThing::make (10 samples, 0.79%)</title><rect x="28.3902%" y="821" width="0.7930%" height="15" fill="rgb(216,229,2)" fg:x="358" fg:w="10"/><text x="28.6402%" y="831.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="29.1039%" y="805" width="0.0793%" height="15" fill="rgb(229,209,31)" fg:x="367" fg:w="1"/><text x="29.3539%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="29.1039%" y="789" width="0.0793%" height="15" fill="rgb(239,57,22)" fg:x="367" fg:w="1"/><text x="29.3539%" y="799.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="29.1039%" y="773" width="0.0793%" height="15" fill="rgb(239,119,54)" fg:x="367" fg:w="1"/><text x="29.3539%" y="783.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="29.1039%" y="757" width="0.0793%" height="15" fill="rgb(231,80,45)" fg:x="367" fg:w="1"/><text x="29.3539%" y="767.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="29.1039%" y="741" width="0.0793%" height="15" fill="rgb(219,138,19)" fg:x="367" fg:w="1"/><text x="29.3539%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.1039%" y="725" width="0.0793%" height="15" fill="rgb(216,53,26)" fg:x="367" fg:w="1"/><text x="29.3539%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="29.1039%" y="709" width="0.0793%" height="15" fill="rgb(224,30,16)" fg:x="367" fg:w="1"/><text x="29.3539%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.1039%" y="693" width="0.0793%" height="15" fill="rgb(224,151,24)" fg:x="367" fg:w="1"/><text x="29.3539%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="29.1039%" y="677" width="0.0793%" height="15" fill="rgb(236,75,7)" fg:x="367" fg:w="1"/><text x="29.3539%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="29.1039%" y="661" width="0.0793%" height="15" fill="rgb(248,106,42)" fg:x="367" fg:w="1"/><text x="29.3539%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="29.1039%" y="645" width="0.0793%" height="15" fill="rgb(222,217,11)" fg:x="367" fg:w="1"/><text x="29.3539%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="29.1039%" y="629" width="0.0793%" height="15" fill="rgb(234,143,31)" fg:x="367" fg:w="1"/><text x="29.3539%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="29.1832%" y="805" width="0.0793%" height="15" fill="rgb(237,148,28)" fg:x="368" fg:w="1"/><text x="29.4332%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="29.1832%" y="789" width="0.0793%" height="15" fill="rgb(241,151,6)" fg:x="368" fg:w="1"/><text x="29.4332%" y="799.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="29.1832%" y="773" width="0.0793%" height="15" fill="rgb(226,55,18)" fg:x="368" fg:w="1"/><text x="29.4332%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="29.2625%" y="805" width="0.0793%" height="15" fill="rgb(226,196,6)" fg:x="369" fg:w="1"/><text x="29.5125%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="29.2625%" y="789" width="0.0793%" height="15" fill="rgb(251,228,11)" fg:x="369" fg:w="1"/><text x="29.5125%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.2625%" y="773" width="0.0793%" height="15" fill="rgb(219,197,15)" fg:x="369" fg:w="1"/><text x="29.5125%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.2625%" y="757" width="0.0793%" height="15" fill="rgb(243,105,44)" fg:x="369" fg:w="1"/><text x="29.5125%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.2625%" y="741" width="0.0793%" height="15" fill="rgb(205,183,40)" fg:x="369" fg:w="1"/><text x="29.5125%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.2625%" y="725" width="0.0793%" height="15" fill="rgb(232,138,46)" fg:x="369" fg:w="1"/><text x="29.5125%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.2625%" y="709" width="0.0793%" height="15" fill="rgb(234,161,14)" fg:x="369" fg:w="1"/><text x="29.5125%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.2625%" y="693" width="0.0793%" height="15" fill="rgb(238,211,18)" fg:x="369" fg:w="1"/><text x="29.5125%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.2625%" y="677" width="0.0793%" height="15" fill="rgb(217,130,2)" fg:x="369" fg:w="1"/><text x="29.5125%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.2625%" y="661" width="0.0793%" height="15" fill="rgb(251,17,29)" fg:x="369" fg:w="1"/><text x="29.5125%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.2625%" y="645" width="0.0793%" height="15" fill="rgb(243,18,0)" fg:x="369" fg:w="1"/><text x="29.5125%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.2625%" y="629" width="0.0793%" height="15" fill="rgb(227,220,45)" fg:x="369" fg:w="1"/><text x="29.5125%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.2625%" y="613" width="0.0793%" height="15" fill="rgb(212,34,2)" fg:x="369" fg:w="1"/><text x="29.5125%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="29.2625%" y="597" width="0.0793%" height="15" fill="rgb(236,23,8)" fg:x="369" fg:w="1"/><text x="29.5125%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="29.2625%" y="581" width="0.0793%" height="15" fill="rgb(210,113,39)" fg:x="369" fg:w="1"/><text x="29.5125%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.3418%" y="725" width="0.0793%" height="15" fill="rgb(243,123,48)" fg:x="370" fg:w="1"/><text x="29.5918%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.3418%" y="709" width="0.0793%" height="15" fill="rgb(223,175,36)" fg:x="370" fg:w="1"/><text x="29.5918%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.3418%" y="693" width="0.0793%" height="15" fill="rgb(226,100,30)" fg:x="370" fg:w="1"/><text x="29.5918%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.3418%" y="677" width="0.0793%" height="15" fill="rgb(221,225,39)" fg:x="370" fg:w="1"/><text x="29.5918%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.3418%" y="661" width="0.0793%" height="15" fill="rgb(224,222,42)" fg:x="370" fg:w="1"/><text x="29.5918%" y="671.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="29.3418%" y="757" width="0.1586%" height="15" fill="rgb(221,53,1)" fg:x="370" fg:w="2"/><text x="29.5918%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="29.3418%" y="741" width="0.1586%" height="15" fill="rgb(216,187,48)" fg:x="370" fg:w="2"/><text x="29.5918%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.4211%" y="725" width="0.0793%" height="15" fill="rgb(220,108,2)" fg:x="371" fg:w="1"/><text x="29.6711%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.4211%" y="709" width="0.0793%" height="15" fill="rgb(216,13,42)" fg:x="371" fg:w="1"/><text x="29.6711%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.4211%" y="693" width="0.0793%" height="15" fill="rgb(205,14,29)" fg:x="371" fg:w="1"/><text x="29.6711%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.4211%" y="677" width="0.0793%" height="15" fill="rgb(217,168,30)" fg:x="371" fg:w="1"/><text x="29.6711%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.4211%" y="661" width="0.0793%" height="15" fill="rgb(246,173,54)" fg:x="371" fg:w="1"/><text x="29.6711%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.4211%" y="645" width="0.0793%" height="15" fill="rgb(227,177,11)" fg:x="371" fg:w="1"/><text x="29.6711%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="29.4211%" y="629" width="0.0793%" height="15" fill="rgb(223,215,51)" fg:x="371" fg:w="1"/><text x="29.6711%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.5797%" y="725" width="0.1586%" height="15" fill="rgb(253,4,17)" fg:x="373" fg:w="2"/><text x="29.8297%" y="735.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="29.5797%" y="709" width="0.1586%" height="15" fill="rgb(206,150,43)" fg:x="373" fg:w="2"/><text x="29.8297%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.63%)</title><rect x="29.1832%" y="821" width="0.6344%" height="15" fill="rgb(241,100,52)" fg:x="368" fg:w="8"/><text x="29.4332%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="29.3418%" y="805" width="0.4758%" height="15" fill="rgb(234,120,21)" fg:x="370" fg:w="6"/><text x="29.5918%" y="815.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="29.3418%" y="789" width="0.4758%" height="15" fill="rgb(231,60,11)" fg:x="370" fg:w="6"/><text x="29.5918%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="29.3418%" y="773" width="0.4758%" height="15" fill="rgb(247,77,50)" fg:x="370" fg:w="6"/><text x="29.5918%" y="783.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="29.5004%" y="757" width="0.3172%" height="15" fill="rgb(251,199,54)" fg:x="372" fg:w="4"/><text x="29.7504%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="29.5004%" y="741" width="0.3172%" height="15" fill="rgb(212,120,38)" fg:x="372" fg:w="4"/><text x="29.7504%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="29.7383%" y="725" width="0.0793%" height="15" fill="rgb(250,161,37)" fg:x="375" fg:w="1"/><text x="29.9883%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.7383%" y="709" width="0.0793%" height="15" fill="rgb(232,158,45)" fg:x="375" fg:w="1"/><text x="29.9883%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="29.7383%" y="693" width="0.0793%" height="15" fill="rgb(233,114,2)" fg:x="375" fg:w="1"/><text x="29.9883%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.7383%" y="677" width="0.0793%" height="15" fill="rgb(248,139,0)" fg:x="375" fg:w="1"/><text x="29.9883%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="29.7383%" y="661" width="0.0793%" height="15" fill="rgb(222,164,18)" fg:x="375" fg:w="1"/><text x="29.9883%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.7383%" y="645" width="0.0793%" height="15" fill="rgb(221,140,42)" fg:x="375" fg:w="1"/><text x="29.9883%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="29.8176%" y="821" width="0.0793%" height="15" fill="rgb(209,186,11)" fg:x="376" fg:w="1"/><text x="30.0676%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="29.8176%" y="805" width="0.0793%" height="15" fill="rgb(254,212,38)" fg:x="376" fg:w="1"/><text x="30.0676%" y="815.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="29.8176%" y="789" width="0.0793%" height="15" fill="rgb(219,156,31)" fg:x="376" fg:w="1"/><text x="30.0676%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.8176%" y="773" width="0.0793%" height="15" fill="rgb(222,148,42)" fg:x="376" fg:w="1"/><text x="30.0676%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="29.8176%" y="757" width="0.0793%" height="15" fill="rgb(225,65,5)" fg:x="376" fg:w="1"/><text x="30.0676%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="29.8176%" y="741" width="0.0793%" height="15" fill="rgb(235,28,12)" fg:x="376" fg:w="1"/><text x="30.0676%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.8969%" y="789" width="0.0793%" height="15" fill="rgb(245,58,4)" fg:x="377" fg:w="1"/><text x="30.1469%" y="799.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (339 samples, 26.88%)</title><rect x="3.1721%" y="853" width="26.8834%" height="15" fill="rgb(235,118,5)" fg:x="40" fg:w="339"/><text x="3.4221%" y="863.50">&lt;tests::HoldingKeyInVessel as tests::WorldF..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (11 samples, 0.87%)</title><rect x="29.1832%" y="837" width="0.8723%" height="15" fill="rgb(253,196,3)" fg:x="368" fg:w="11"/><text x="29.4332%" y="847.50"></text></g><g><title>plugins_core::build::Build::new_world (2 samples, 0.16%)</title><rect x="29.8969%" y="821" width="0.1586%" height="15" fill="rgb(238,90,28)" fg:x="377" fg:w="2"/><text x="30.1469%" y="831.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.16%)</title><rect x="29.8969%" y="805" width="0.1586%" height="15" fill="rgb(254,227,4)" fg:x="377" fg:w="2"/><text x="30.1469%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="29.9762%" y="789" width="0.0793%" height="15" fill="rgb(237,114,35)" fg:x="378" fg:w="1"/><text x="30.2262%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="29.9762%" y="773" width="0.0793%" height="15" fill="rgb(221,147,29)" fg:x="378" fg:w="1"/><text x="30.2262%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="29.9762%" y="757" width="0.0793%" height="15" fill="rgb(216,201,17)" fg:x="378" fg:w="1"/><text x="30.2262%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.9762%" y="741" width="0.0793%" height="15" fill="rgb(251,46,50)" fg:x="378" fg:w="1"/><text x="30.2262%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.9762%" y="725" width="0.0793%" height="15" fill="rgb(216,143,48)" fg:x="378" fg:w="1"/><text x="30.2262%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.9762%" y="709" width="0.0793%" height="15" fill="rgb(224,62,51)" fg:x="378" fg:w="1"/><text x="30.2262%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.9762%" y="693" width="0.0793%" height="15" fill="rgb(232,152,20)" fg:x="378" fg:w="1"/><text x="30.2262%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.9762%" y="677" width="0.0793%" height="15" fill="rgb(233,194,7)" fg:x="378" fg:w="1"/><text x="30.2262%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="30.0555%" y="853" width="0.0793%" height="15" fill="rgb(207,33,22)" fg:x="379" fg:w="1"/><text x="30.3055%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="30.0555%" y="837" width="0.0793%" height="15" fill="rgb(226,54,34)" fg:x="379" fg:w="1"/><text x="30.3055%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="30.0555%" y="821" width="0.0793%" height="15" fill="rgb(227,161,47)" fg:x="379" fg:w="1"/><text x="30.3055%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="30.0555%" y="805" width="0.0793%" height="15" fill="rgb(218,58,37)" fg:x="379" fg:w="1"/><text x="30.3055%" y="815.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="30.1348%" y="837" width="0.3172%" height="15" fill="rgb(208,173,18)" fg:x="380" fg:w="4"/><text x="30.3848%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.2934%" y="821" width="0.1586%" height="15" fill="rgb(230,159,11)" fg:x="382" fg:w="2"/><text x="30.5434%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.2934%" y="805" width="0.1586%" height="15" fill="rgb(238,90,51)" fg:x="382" fg:w="2"/><text x="30.5434%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="30.2934%" y="789" width="0.1586%" height="15" fill="rgb(225,97,36)" fg:x="382" fg:w="2"/><text x="30.5434%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="30.2934%" y="773" width="0.1586%" height="15" fill="rgb(211,205,42)" fg:x="382" fg:w="2"/><text x="30.5434%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="30.2934%" y="757" width="0.1586%" height="15" fill="rgb(219,152,7)" fg:x="382" fg:w="2"/><text x="30.5434%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="30.2934%" y="741" width="0.1586%" height="15" fill="rgb(222,79,10)" fg:x="382" fg:w="2"/><text x="30.5434%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="30.2934%" y="725" width="0.1586%" height="15" fill="rgb(242,13,11)" fg:x="382" fg:w="2"/><text x="30.5434%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.5313%" y="725" width="0.0793%" height="15" fill="rgb(231,143,41)" fg:x="385" fg:w="1"/><text x="30.7813%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.5313%" y="709" width="0.0793%" height="15" fill="rgb(222,147,19)" fg:x="385" fg:w="1"/><text x="30.7813%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="30.4520%" y="837" width="0.2379%" height="15" fill="rgb(235,5,39)" fg:x="384" fg:w="3"/><text x="30.7020%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="30.4520%" y="821" width="0.2379%" height="15" fill="rgb(246,155,51)" fg:x="384" fg:w="3"/><text x="30.7020%" y="831.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="30.4520%" y="805" width="0.2379%" height="15" fill="rgb(218,157,4)" fg:x="384" fg:w="3"/><text x="30.7020%" y="815.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="30.4520%" y="789" width="0.2379%" height="15" fill="rgb(226,184,4)" fg:x="384" fg:w="3"/><text x="30.7020%" y="799.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="30.4520%" y="773" width="0.2379%" height="15" fill="rgb(210,103,26)" fg:x="384" fg:w="3"/><text x="30.7020%" y="783.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.24%)</title><rect x="30.4520%" y="757" width="0.2379%" height="15" fill="rgb(228,23,31)" fg:x="384" fg:w="3"/><text x="30.7020%" y="767.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="30.5313%" y="741" width="0.1586%" height="15" fill="rgb(205,176,34)" fg:x="385" fg:w="2"/><text x="30.7813%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.6106%" y="725" width="0.0793%" height="15" fill="rgb(246,213,37)" fg:x="386" fg:w="1"/><text x="30.8606%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.6106%" y="709" width="0.0793%" height="15" fill="rgb(213,52,45)" fg:x="386" fg:w="1"/><text x="30.8606%" y="719.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="30.6106%" y="693" width="0.0793%" height="15" fill="rgb(249,9,52)" fg:x="386" fg:w="1"/><text x="30.8606%" y="703.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="30.6106%" y="677" width="0.0793%" height="15" fill="rgb(205,97,16)" fg:x="386" fg:w="1"/><text x="30.8606%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.6106%" y="661" width="0.0793%" height="15" fill="rgb(214,11,46)" fg:x="386" fg:w="1"/><text x="30.8606%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.6899%" y="773" width="0.0793%" height="15" fill="rgb(221,66,18)" fg:x="387" fg:w="1"/><text x="30.9399%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.6899%" y="757" width="0.0793%" height="15" fill="rgb(213,49,1)" fg:x="387" fg:w="1"/><text x="30.9399%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.6899%" y="741" width="0.0793%" height="15" fill="rgb(232,75,51)" fg:x="387" fg:w="1"/><text x="30.9399%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.6899%" y="725" width="0.0793%" height="15" fill="rgb(208,218,40)" fg:x="387" fg:w="1"/><text x="30.9399%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.6899%" y="709" width="0.0793%" height="15" fill="rgb(206,144,50)" fg:x="387" fg:w="1"/><text x="30.9399%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.6899%" y="693" width="0.0793%" height="15" fill="rgb(216,9,51)" fg:x="387" fg:w="1"/><text x="30.9399%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.6899%" y="677" width="0.0793%" height="15" fill="rgb(226,6,53)" fg:x="387" fg:w="1"/><text x="30.9399%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.6899%" y="661" width="0.0793%" height="15" fill="rgb(216,9,50)" fg:x="387" fg:w="1"/><text x="30.9399%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.6899%" y="645" width="0.0793%" height="15" fill="rgb(214,101,31)" fg:x="387" fg:w="1"/><text x="30.9399%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.6899%" y="629" width="0.0793%" height="15" fill="rgb(247,85,17)" fg:x="387" fg:w="1"/><text x="30.9399%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.6899%" y="613" width="0.0793%" height="15" fill="rgb(248,138,25)" fg:x="387" fg:w="1"/><text x="30.9399%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.6899%" y="597" width="0.0793%" height="15" fill="rgb(225,146,20)" fg:x="387" fg:w="1"/><text x="30.9399%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="30.6899%" y="805" width="0.1586%" height="15" fill="rgb(224,184,17)" fg:x="387" fg:w="2"/><text x="30.9399%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="30.6899%" y="789" width="0.1586%" height="15" fill="rgb(231,10,20)" fg:x="387" fg:w="2"/><text x="30.9399%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.7692%" y="773" width="0.0793%" height="15" fill="rgb(210,93,37)" fg:x="388" fg:w="1"/><text x="31.0192%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.7692%" y="757" width="0.0793%" height="15" fill="rgb(226,84,42)" fg:x="388" fg:w="1"/><text x="31.0192%" y="767.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.7692%" y="741" width="0.0793%" height="15" fill="rgb(253,192,7)" fg:x="388" fg:w="1"/><text x="31.0192%" y="751.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.7692%" y="725" width="0.0793%" height="15" fill="rgb(214,107,27)" fg:x="388" fg:w="1"/><text x="31.0192%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="30.7692%" y="709" width="0.0793%" height="15" fill="rgb(238,146,21)" fg:x="388" fg:w="1"/><text x="31.0192%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.7692%" y="693" width="0.0793%" height="15" fill="rgb(209,136,30)" fg:x="388" fg:w="1"/><text x="31.0192%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.7692%" y="677" width="0.0793%" height="15" fill="rgb(226,60,22)" fg:x="388" fg:w="1"/><text x="31.0192%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.7692%" y="661" width="0.0793%" height="15" fill="rgb(243,92,26)" fg:x="388" fg:w="1"/><text x="31.0192%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="30.7692%" y="645" width="0.0793%" height="15" fill="rgb(211,85,33)" fg:x="388" fg:w="1"/><text x="31.0192%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.7692%" y="629" width="0.0793%" height="15" fill="rgb(243,187,44)" fg:x="388" fg:w="1"/><text x="31.0192%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.7692%" y="613" width="0.0793%" height="15" fill="rgb(251,172,23)" fg:x="388" fg:w="1"/><text x="31.0192%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.7692%" y="597" width="0.0793%" height="15" fill="rgb(254,162,50)" fg:x="388" fg:w="1"/><text x="31.0192%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.7692%" y="581" width="0.0793%" height="15" fill="rgb(239,14,53)" fg:x="388" fg:w="1"/><text x="31.0192%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.7692%" y="565" width="0.0793%" height="15" fill="rgb(242,208,8)" fg:x="388" fg:w="1"/><text x="31.0192%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="30.7692%" y="549" width="0.0793%" height="15" fill="rgb(225,61,41)" fg:x="388" fg:w="1"/><text x="31.0192%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="30.7692%" y="533" width="0.0793%" height="15" fill="rgb(219,154,6)" fg:x="388" fg:w="1"/><text x="31.0192%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="30.7692%" y="517" width="0.0793%" height="15" fill="rgb(227,223,44)" fg:x="388" fg:w="1"/><text x="31.0192%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="30.7692%" y="501" width="0.0793%" height="15" fill="rgb(220,188,6)" fg:x="388" fg:w="1"/><text x="31.0192%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="30.7692%" y="485" width="0.0793%" height="15" fill="rgb(216,65,22)" fg:x="388" fg:w="1"/><text x="31.0192%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="30.7692%" y="469" width="0.0793%" height="15" fill="rgb(236,66,46)" fg:x="388" fg:w="1"/><text x="31.0192%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.7692%" y="453" width="0.0793%" height="15" fill="rgb(211,150,52)" fg:x="388" fg:w="1"/><text x="31.0192%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="30.7692%" y="437" width="0.0793%" height="15" fill="rgb(253,89,19)" fg:x="388" fg:w="1"/><text x="31.0192%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.7692%" y="421" width="0.0793%" height="15" fill="rgb(245,4,1)" fg:x="388" fg:w="1"/><text x="31.0192%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="30.7692%" y="405" width="0.0793%" height="15" fill="rgb(230,109,16)" fg:x="388" fg:w="1"/><text x="31.0192%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="30.7692%" y="389" width="0.0793%" height="15" fill="rgb(213,7,47)" fg:x="388" fg:w="1"/><text x="31.0192%" y="399.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="30.7692%" y="373" width="0.0793%" height="15" fill="rgb(242,148,14)" fg:x="388" fg:w="1"/><text x="31.0192%" y="383.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="30.7692%" y="357" width="0.0793%" height="15" fill="rgb(238,51,34)" fg:x="388" fg:w="1"/><text x="31.0192%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="30.8485%" y="789" width="0.0793%" height="15" fill="rgb(222,49,22)" fg:x="389" fg:w="1"/><text x="31.0985%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="30.8485%" y="805" width="0.1586%" height="15" fill="rgb(237,102,50)" fg:x="389" fg:w="2"/><text x="31.0985%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="30.9278%" y="789" width="0.0793%" height="15" fill="rgb(237,195,8)" fg:x="390" fg:w="1"/><text x="31.1778%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.9278%" y="773" width="0.0793%" height="15" fill="rgb(245,60,18)" fg:x="390" fg:w="1"/><text x="31.1778%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="31.0864%" y="789" width="0.1586%" height="15" fill="rgb(253,74,32)" fg:x="392" fg:w="2"/><text x="31.3364%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1657%" y="773" width="0.0793%" height="15" fill="rgb(240,91,39)" fg:x="393" fg:w="1"/><text x="31.4157%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1657%" y="757" width="0.0793%" height="15" fill="rgb(221,162,34)" fg:x="393" fg:w="1"/><text x="31.4157%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.1657%" y="741" width="0.0793%" height="15" fill="rgb(223,32,2)" fg:x="393" fg:w="1"/><text x="31.4157%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.1657%" y="725" width="0.0793%" height="15" fill="rgb(245,220,46)" fg:x="393" fg:w="1"/><text x="31.4157%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.1657%" y="709" width="0.0793%" height="15" fill="rgb(216,38,33)" fg:x="393" fg:w="1"/><text x="31.4157%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1657%" y="693" width="0.0793%" height="15" fill="rgb(210,123,14)" fg:x="393" fg:w="1"/><text x="31.4157%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1657%" y="677" width="0.0793%" height="15" fill="rgb(214,38,47)" fg:x="393" fg:w="1"/><text x="31.4157%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.1657%" y="661" width="0.0793%" height="15" fill="rgb(244,180,16)" fg:x="393" fg:w="1"/><text x="31.4157%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.1657%" y="645" width="0.0793%" height="15" fill="rgb(252,21,32)" fg:x="393" fg:w="1"/><text x="31.4157%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.1657%" y="629" width="0.0793%" height="15" fill="rgb(245,218,31)" fg:x="393" fg:w="1"/><text x="31.4157%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.1657%" y="613" width="0.0793%" height="15" fill="rgb(247,81,18)" fg:x="393" fg:w="1"/><text x="31.4157%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.1657%" y="597" width="0.0793%" height="15" fill="rgb(220,151,1)" fg:x="393" fg:w="1"/><text x="31.4157%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.3243%" y="725" width="0.0793%" height="15" fill="rgb(211,157,11)" fg:x="395" fg:w="1"/><text x="31.5743%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.3243%" y="709" width="0.0793%" height="15" fill="rgb(239,46,30)" fg:x="395" fg:w="1"/><text x="31.5743%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.4036%" y="709" width="0.1586%" height="15" fill="rgb(236,144,43)" fg:x="396" fg:w="2"/><text x="31.6536%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="31.4036%" y="693" width="0.1586%" height="15" fill="rgb(206,71,45)" fg:x="396" fg:w="2"/><text x="31.6536%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.4830%" y="677" width="0.0793%" height="15" fill="rgb(240,85,31)" fg:x="397" fg:w="1"/><text x="31.7330%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.4830%" y="661" width="0.0793%" height="15" fill="rgb(221,43,52)" fg:x="397" fg:w="1"/><text x="31.7330%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.4830%" y="645" width="0.0793%" height="15" fill="rgb(243,106,22)" fg:x="397" fg:w="1"/><text x="31.7330%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.4830%" y="629" width="0.0793%" height="15" fill="rgb(209,138,38)" fg:x="397" fg:w="1"/><text x="31.7330%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.4830%" y="613" width="0.0793%" height="15" fill="rgb(216,63,40)" fg:x="397" fg:w="1"/><text x="31.7330%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.4830%" y="597" width="0.0793%" height="15" fill="rgb(206,115,21)" fg:x="397" fg:w="1"/><text x="31.7330%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.4830%" y="581" width="0.0793%" height="15" fill="rgb(235,53,44)" fg:x="397" fg:w="1"/><text x="31.7330%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.4830%" y="565" width="0.0793%" height="15" fill="rgb(244,160,14)" fg:x="397" fg:w="1"/><text x="31.7330%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.4830%" y="549" width="0.0793%" height="15" fill="rgb(223,16,19)" fg:x="397" fg:w="1"/><text x="31.7330%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.4830%" y="533" width="0.0793%" height="15" fill="rgb(242,63,42)" fg:x="397" fg:w="1"/><text x="31.7330%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.4830%" y="517" width="0.0793%" height="15" fill="rgb(209,66,49)" fg:x="397" fg:w="1"/><text x="31.7330%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="31.3243%" y="757" width="0.3172%" height="15" fill="rgb(207,126,46)" fg:x="395" fg:w="4"/><text x="31.5743%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="31.3243%" y="741" width="0.3172%" height="15" fill="rgb(218,160,41)" fg:x="395" fg:w="4"/><text x="31.5743%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="31.4036%" y="725" width="0.2379%" height="15" fill="rgb(234,125,46)" fg:x="396" fg:w="3"/><text x="31.6536%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.5623%" y="709" width="0.0793%" height="15" fill="rgb(205,66,36)" fg:x="398" fg:w="1"/><text x="31.8123%" y="719.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (14 samples, 1.11%)</title><rect x="30.6899%" y="821" width="1.1102%" height="15" fill="rgb(220,135,16)" fg:x="387" fg:w="14"/><text x="30.9399%" y="831.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (10 samples, 0.79%)</title><rect x="31.0071%" y="805" width="0.7930%" height="15" fill="rgb(214,217,54)" fg:x="391" fg:w="10"/><text x="31.2571%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="31.2450%" y="789" width="0.5551%" height="15" fill="rgb(206,30,9)" fg:x="394" fg:w="7"/><text x="31.4950%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="31.2450%" y="773" width="0.5551%" height="15" fill="rgb(207,196,5)" fg:x="394" fg:w="7"/><text x="31.4950%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.6416%" y="757" width="0.1586%" height="15" fill="rgb(227,116,12)" fg:x="399" fg:w="2"/><text x="31.8916%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.6416%" y="741" width="0.1586%" height="15" fill="rgb(235,227,13)" fg:x="399" fg:w="2"/><text x="31.8916%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="31.6416%" y="725" width="0.1586%" height="15" fill="rgb(238,212,29)" fg:x="399" fg:w="2"/><text x="31.8916%" y="735.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="31.6416%" y="709" width="0.1586%" height="15" fill="rgb(230,152,17)" fg:x="399" fg:w="2"/><text x="31.8916%" y="719.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="31.6416%" y="693" width="0.1586%" height="15" fill="rgb(220,197,1)" fg:x="399" fg:w="2"/><text x="31.8916%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.6416%" y="677" width="0.1586%" height="15" fill="rgb(229,227,40)" fg:x="399" fg:w="2"/><text x="31.8916%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.6416%" y="661" width="0.1586%" height="15" fill="rgb(227,179,16)" fg:x="399" fg:w="2"/><text x="31.8916%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Raised&gt; (1 samples, 0.08%)</title><rect x="31.8002%" y="821" width="0.0793%" height="15" fill="rgb(246,116,44)" fg:x="401" fg:w="1"/><text x="32.0502%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::carrying::model::CarryingEvent&gt; (1 samples, 0.08%)</title><rect x="31.8002%" y="805" width="0.0793%" height="15" fill="rgb(205,191,4)" fg:x="401" fg:w="1"/><text x="32.0502%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="31.8002%" y="789" width="0.0793%" height="15" fill="rgb(245,69,19)" fg:x="401" fg:w="1"/><text x="32.0502%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.8002%" y="773" width="0.0793%" height="15" fill="rgb(230,29,26)" fg:x="401" fg:w="1"/><text x="32.0502%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="31.8795%" y="789" width="0.1586%" height="15" fill="rgb(239,192,26)" fg:x="402" fg:w="2"/><text x="32.1295%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="31.8795%" y="773" width="0.1586%" height="15" fill="rgb(219,92,16)" fg:x="402" fg:w="2"/><text x="32.1295%" y="783.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="31.8795%" y="757" width="0.1586%" height="15" fill="rgb(246,147,43)" fg:x="402" fg:w="2"/><text x="32.1295%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.1174%" y="773" width="0.0793%" height="15" fill="rgb(222,147,11)" fg:x="405" fg:w="1"/><text x="32.3674%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.1174%" y="757" width="0.0793%" height="15" fill="rgb(243,71,8)" fg:x="405" fg:w="1"/><text x="32.3674%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.1174%" y="741" width="0.0793%" height="15" fill="rgb(250,36,12)" fg:x="405" fg:w="1"/><text x="32.3674%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.1174%" y="725" width="0.0793%" height="15" fill="rgb(207,168,14)" fg:x="405" fg:w="1"/><text x="32.3674%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.1174%" y="709" width="0.0793%" height="15" fill="rgb(254,210,51)" fg:x="405" fg:w="1"/><text x="32.3674%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="32.1174%" y="693" width="0.0793%" height="15" fill="rgb(236,152,38)" fg:x="405" fg:w="1"/><text x="32.3674%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="32.1174%" y="677" width="0.0793%" height="15" fill="rgb(240,164,36)" fg:x="405" fg:w="1"/><text x="32.3674%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="32.3553%" y="741" width="0.1586%" height="15" fill="rgb(210,171,36)" fg:x="408" fg:w="2"/><text x="32.6053%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.4346%" y="725" width="0.0793%" height="15" fill="rgb(254,156,34)" fg:x="409" fg:w="1"/><text x="32.6846%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.4346%" y="709" width="0.0793%" height="15" fill="rgb(216,204,23)" fg:x="409" fg:w="1"/><text x="32.6846%" y="719.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="32.2760%" y="757" width="0.4758%" height="15" fill="rgb(230,75,38)" fg:x="407" fg:w="6"/><text x="32.5260%" y="767.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="32.5139%" y="741" width="0.2379%" height="15" fill="rgb(248,197,25)" fg:x="410" fg:w="3"/><text x="32.7639%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.6725%" y="725" width="0.0793%" height="15" fill="rgb(234,121,26)" fg:x="412" fg:w="1"/><text x="32.9225%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.6725%" y="709" width="0.0793%" height="15" fill="rgb(220,41,36)" fg:x="412" fg:w="1"/><text x="32.9225%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="32.8311%" y="741" width="0.0793%" height="15" fill="rgb(227,33,32)" fg:x="414" fg:w="1"/><text x="33.0811%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="32.9104%" y="741" width="0.0793%" height="15" fill="rgb(208,214,54)" fg:x="415" fg:w="1"/><text x="33.1604%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.9104%" y="725" width="0.0793%" height="15" fill="rgb(205,37,38)" fg:x="415" fg:w="1"/><text x="33.1604%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.9104%" y="709" width="0.0793%" height="15" fill="rgb(252,2,0)" fg:x="415" fg:w="1"/><text x="33.1604%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.9104%" y="693" width="0.0793%" height="15" fill="rgb(212,171,10)" fg:x="415" fg:w="1"/><text x="33.1604%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="33.1483%" y="693" width="0.2379%" height="15" fill="rgb(239,35,46)" fg:x="418" fg:w="3"/><text x="33.3983%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="33.3069%" y="677" width="0.0793%" height="15" fill="rgb(209,34,42)" fg:x="420" fg:w="1"/><text x="33.5569%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.3069%" y="661" width="0.0793%" height="15" fill="rgb(237,9,4)" fg:x="420" fg:w="1"/><text x="33.5569%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="33.3069%" y="645" width="0.0793%" height="15" fill="rgb(254,55,38)" fg:x="420" fg:w="1"/><text x="33.5569%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="32.9897%" y="741" width="0.4758%" height="15" fill="rgb(222,95,29)" fg:x="416" fg:w="6"/><text x="33.2397%" y="751.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="33.0690%" y="725" width="0.3965%" height="15" fill="rgb(241,218,37)" fg:x="417" fg:w="5"/><text x="33.3190%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="33.1483%" y="709" width="0.3172%" height="15" fill="rgb(225,89,28)" fg:x="418" fg:w="4"/><text x="33.3983%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="33.3862%" y="693" width="0.0793%" height="15" fill="rgb(231,17,25)" fg:x="421" fg:w="1"/><text x="33.6362%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="33.7034%" y="693" width="0.1586%" height="15" fill="rgb(206,216,48)" fg:x="425" fg:w="2"/><text x="33.9534%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="33.7034%" y="677" width="0.1586%" height="15" fill="rgb(247,190,28)" fg:x="425" fg:w="2"/><text x="33.9534%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="33.7827%" y="661" width="0.0793%" height="15" fill="rgb(216,196,12)" fg:x="426" fg:w="1"/><text x="34.0327%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.7827%" y="645" width="0.0793%" height="15" fill="rgb(232,114,19)" fg:x="426" fg:w="1"/><text x="34.0327%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="33.8620%" y="693" width="0.1586%" height="15" fill="rgb(240,60,14)" fg:x="427" fg:w="2"/><text x="34.1120%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="33.8620%" y="677" width="0.1586%" height="15" fill="rgb(250,108,9)" fg:x="427" fg:w="2"/><text x="34.1120%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="33.9413%" y="661" width="0.0793%" height="15" fill="rgb(227,228,21)" fg:x="428" fg:w="1"/><text x="34.1913%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.56%)</title><rect x="33.6241%" y="725" width="0.5551%" height="15" fill="rgb(254,16,52)" fg:x="424" fg:w="7"/><text x="33.8741%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="33.6241%" y="709" width="0.5551%" height="15" fill="rgb(222,58,2)" fg:x="424" fg:w="7"/><text x="33.8741%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="34.0206%" y="693" width="0.1586%" height="15" fill="rgb(253,68,14)" fg:x="429" fg:w="2"/><text x="34.2706%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.0999%" y="677" width="0.0793%" height="15" fill="rgb(226,96,17)" fg:x="430" fg:w="1"/><text x="34.3499%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="34.1792%" y="725" width="0.3965%" height="15" fill="rgb(227,199,2)" fg:x="431" fg:w="5"/><text x="34.4292%" y="735.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="34.2585%" y="709" width="0.3172%" height="15" fill="rgb(228,227,48)" fg:x="432" fg:w="4"/><text x="34.5085%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="34.3378%" y="693" width="0.2379%" height="15" fill="rgb(249,183,0)" fg:x="433" fg:w="3"/><text x="34.5878%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="34.3378%" y="677" width="0.2379%" height="15" fill="rgb(250,89,38)" fg:x="433" fg:w="3"/><text x="34.5878%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="34.4964%" y="661" width="0.0793%" height="15" fill="rgb(240,227,8)" fg:x="435" fg:w="1"/><text x="34.7464%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.4964%" y="645" width="0.0793%" height="15" fill="rgb(242,197,35)" fg:x="435" fg:w="1"/><text x="34.7464%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="34.4964%" y="629" width="0.0793%" height="15" fill="rgb(224,37,41)" fg:x="435" fg:w="1"/><text x="34.7464%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="34.5757%" y="709" width="0.1586%" height="15" fill="rgb(236,127,7)" fg:x="436" fg:w="2"/><text x="34.8257%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.6550%" y="693" width="0.0793%" height="15" fill="rgb(230,62,52)" fg:x="437" fg:w="1"/><text x="34.9050%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.6550%" y="677" width="0.0793%" height="15" fill="rgb(235,114,23)" fg:x="437" fg:w="1"/><text x="34.9050%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.6550%" y="661" width="0.0793%" height="15" fill="rgb(211,55,40)" fg:x="437" fg:w="1"/><text x="34.9050%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="34.7343%" y="677" width="0.0793%" height="15" fill="rgb(228,123,1)" fg:x="438" fg:w="1"/><text x="34.9843%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="34.8929%" y="661" width="0.3172%" height="15" fill="rgb(244,208,8)" fg:x="440" fg:w="4"/><text x="35.1429%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="34.9722%" y="645" width="0.2379%" height="15" fill="rgb(237,118,14)" fg:x="441" fg:w="3"/><text x="35.2222%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="34.9722%" y="629" width="0.2379%" height="15" fill="rgb(219,170,13)" fg:x="441" fg:w="3"/><text x="35.2222%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.1308%" y="613" width="0.0793%" height="15" fill="rgb(212,39,43)" fg:x="443" fg:w="1"/><text x="35.3808%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.1308%" y="597" width="0.0793%" height="15" fill="rgb(244,191,2)" fg:x="443" fg:w="1"/><text x="35.3808%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.1308%" y="581" width="0.0793%" height="15" fill="rgb(219,201,46)" fg:x="443" fg:w="1"/><text x="35.3808%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="35.1308%" y="565" width="0.0793%" height="15" fill="rgb(218,82,7)" fg:x="443" fg:w="1"/><text x="35.3808%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="35.2102%" y="661" width="0.0793%" height="15" fill="rgb(208,192,8)" fg:x="444" fg:w="1"/><text x="35.4602%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.63%)</title><rect x="34.8136%" y="677" width="0.6344%" height="15" fill="rgb(244,54,32)" fg:x="439" fg:w="8"/><text x="35.0636%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="35.2895%" y="661" width="0.1586%" height="15" fill="rgb(240,43,52)" fg:x="445" fg:w="2"/><text x="35.5395%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.3688%" y="645" width="0.0793%" height="15" fill="rgb(233,134,29)" fg:x="446" fg:w="1"/><text x="35.6188%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="35.3688%" y="629" width="0.0793%" height="15" fill="rgb(236,128,10)" fg:x="446" fg:w="1"/><text x="35.6188%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.95%)</title><rect x="34.7343%" y="693" width="0.9516%" height="15" fill="rgb(207,46,54)" fg:x="438" fg:w="12"/><text x="34.9843%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="35.4481%" y="677" width="0.2379%" height="15" fill="rgb(248,140,35)" fg:x="447" fg:w="3"/><text x="35.6981%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="35.4481%" y="661" width="0.2379%" height="15" fill="rgb(241,103,35)" fg:x="447" fg:w="3"/><text x="35.6981%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="35.5274%" y="645" width="0.1586%" height="15" fill="rgb(223,19,48)" fg:x="448" fg:w="2"/><text x="35.7774%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.6067%" y="629" width="0.0793%" height="15" fill="rgb(238,177,46)" fg:x="449" fg:w="1"/><text x="35.8567%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.6067%" y="613" width="0.0793%" height="15" fill="rgb(213,102,15)" fg:x="449" fg:w="1"/><text x="35.8567%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="35.6067%" y="597" width="0.0793%" height="15" fill="rgb(254,135,52)" fg:x="449" fg:w="1"/><text x="35.8567%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.19%)</title><rect x="34.7343%" y="709" width="1.1895%" height="15" fill="rgb(240,59,6)" fg:x="438" fg:w="15"/><text x="34.9843%" y="719.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="35.6860%" y="693" width="0.2379%" height="15" fill="rgb(207,226,5)" fg:x="450" fg:w="3"/><text x="35.9360%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="35.7653%" y="677" width="0.1586%" height="15" fill="rgb(208,167,17)" fg:x="451" fg:w="2"/><text x="36.0153%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.8446%" y="661" width="0.0793%" height="15" fill="rgb(254,94,10)" fg:x="452" fg:w="1"/><text x="36.0946%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.54%)</title><rect x="33.4655%" y="741" width="2.5377%" height="15" fill="rgb(229,33,11)" fg:x="422" fg:w="32"/><text x="33.7155%" y="751.50">se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.43%)</title><rect x="34.5757%" y="725" width="1.4274%" height="15" fill="rgb(249,145,48)" fg:x="436" fg:w="18"/><text x="34.8257%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.9239%" y="709" width="0.0793%" height="15" fill="rgb(253,68,54)" fg:x="453" fg:w="1"/><text x="36.1739%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.9239%" y="693" width="0.0793%" height="15" fill="rgb(223,27,42)" fg:x="453" fg:w="1"/><text x="36.1739%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.9239%" y="677" width="0.0793%" height="15" fill="rgb(235,123,13)" fg:x="453" fg:w="1"/><text x="36.1739%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (45 samples, 3.57%)</title><rect x="32.7518%" y="757" width="3.5686%" height="15" fill="rgb(244,154,7)" fg:x="413" fg:w="45"/><text x="33.0018%" y="767.50">serd..</text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="36.0032%" y="741" width="0.3172%" height="15" fill="rgb(214,30,25)" fg:x="454" fg:w="4"/><text x="36.2532%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="36.1618%" y="725" width="0.1586%" height="15" fill="rgb(252,189,13)" fg:x="456" fg:w="2"/><text x="36.4118%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="36.1618%" y="709" width="0.1586%" height="15" fill="rgb(234,27,40)" fg:x="456" fg:w="2"/><text x="36.4118%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="36.2411%" y="693" width="0.0793%" height="15" fill="rgb(252,199,25)" fg:x="457" fg:w="1"/><text x="36.4911%" y="703.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (54 samples, 4.28%)</title><rect x="32.1967%" y="773" width="4.2823%" height="15" fill="rgb(234,207,20)" fg:x="406" fg:w="54"/><text x="32.4467%" y="783.50">&lt;serd..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="36.3204%" y="757" width="0.1586%" height="15" fill="rgb(244,220,10)" fg:x="458" fg:w="2"/><text x="36.5704%" y="767.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="36.3204%" y="741" width="0.1586%" height="15" fill="rgb(247,68,23)" fg:x="458" fg:w="2"/><text x="36.5704%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="36.3204%" y="725" width="0.1586%" height="15" fill="rgb(254,61,4)" fg:x="458" fg:w="2"/><text x="36.5704%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="36.3997%" y="709" width="0.0793%" height="15" fill="rgb(245,208,35)" fg:x="459" fg:w="1"/><text x="36.6497%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="36.3997%" y="693" width="0.0793%" height="15" fill="rgb(235,90,11)" fg:x="459" fg:w="1"/><text x="36.6497%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.4790%" y="741" width="0.0793%" height="15" fill="rgb(239,139,43)" fg:x="460" fg:w="1"/><text x="36.7290%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="36.5583%" y="741" width="0.1586%" height="15" fill="rgb(209,187,9)" fg:x="461" fg:w="2"/><text x="36.8083%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="36.7962%" y="725" width="0.1586%" height="15" fill="rgb(241,30,6)" fg:x="464" fg:w="2"/><text x="37.0462%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="36.7962%" y="709" width="0.1586%" height="15" fill="rgb(216,104,1)" fg:x="464" fg:w="2"/><text x="37.0462%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.1927%" y="693" width="0.0793%" height="15" fill="rgb(238,55,39)" fg:x="469" fg:w="1"/><text x="37.4427%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.1927%" y="677" width="0.0793%" height="15" fill="rgb(226,151,41)" fg:x="469" fg:w="1"/><text x="37.4427%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="37.2720%" y="693" width="0.1586%" height="15" fill="rgb(228,73,40)" fg:x="470" fg:w="2"/><text x="37.5220%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="37.2720%" y="677" width="0.1586%" height="15" fill="rgb(215,81,0)" fg:x="470" fg:w="2"/><text x="37.5220%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="37.2720%" y="661" width="0.1586%" height="15" fill="rgb(209,52,39)" fg:x="470" fg:w="2"/><text x="37.5220%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.5099%" y="677" width="0.0793%" height="15" fill="rgb(221,127,5)" fg:x="473" fg:w="1"/><text x="37.7599%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="37.6685%" y="661" width="0.1586%" height="15" fill="rgb(213,215,6)" fg:x="475" fg:w="2"/><text x="37.9185%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.51%)</title><rect x="36.4790%" y="773" width="1.5067%" height="15" fill="rgb(214,118,13)" fg:x="460" fg:w="19"/><text x="36.7290%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (19 samples, 1.51%)</title><rect x="36.4790%" y="757" width="1.5067%" height="15" fill="rgb(207,205,41)" fg:x="460" fg:w="19"/><text x="36.7290%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.27%)</title><rect x="36.7169%" y="741" width="1.2688%" height="15" fill="rgb(218,208,45)" fg:x="463" fg:w="16"/><text x="36.9669%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.03%)</title><rect x="36.9548%" y="725" width="1.0309%" height="15" fill="rgb(244,81,54)" fg:x="466" fg:w="13"/><text x="37.2048%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.95%)</title><rect x="37.0341%" y="709" width="0.9516%" height="15" fill="rgb(244,175,1)" fg:x="467" fg:w="12"/><text x="37.2841%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="37.4306%" y="693" width="0.5551%" height="15" fill="rgb(232,128,28)" fg:x="472" fg:w="7"/><text x="37.6806%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="37.5892%" y="677" width="0.3965%" height="15" fill="rgb(234,83,13)" fg:x="474" fg:w="5"/><text x="37.8392%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="37.8271%" y="661" width="0.1586%" height="15" fill="rgb(233,222,35)" fg:x="477" fg:w="2"/><text x="38.0771%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.9064%" y="645" width="0.0793%" height="15" fill="rgb(244,204,21)" fg:x="478" fg:w="1"/><text x="38.1564%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.0650%" y="709" width="0.0793%" height="15" fill="rgb(225,121,40)" fg:x="480" fg:w="1"/><text x="38.3150%" y="719.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="38.1443%" y="693" width="0.2379%" height="15" fill="rgb(231,89,18)" fg:x="481" fg:w="3"/><text x="38.3943%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.3822%" y="693" width="0.0793%" height="15" fill="rgb(205,41,50)" fg:x="484" fg:w="1"/><text x="38.6322%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.3822%" y="677" width="0.0793%" height="15" fill="rgb(254,25,22)" fg:x="484" fg:w="1"/><text x="38.6322%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.4615%" y="677" width="0.0793%" height="15" fill="rgb(208,44,21)" fg:x="485" fg:w="1"/><text x="38.7115%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="38.6201%" y="629" width="0.1586%" height="15" fill="rgb(237,59,53)" fg:x="487" fg:w="2"/><text x="38.8701%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.6994%" y="613" width="0.0793%" height="15" fill="rgb(233,24,36)" fg:x="488" fg:w="1"/><text x="38.9494%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.03%)</title><rect x="37.9857%" y="741" width="1.0309%" height="15" fill="rgb(216,92,41)" fg:x="479" fg:w="13"/><text x="38.2357%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.03%)</title><rect x="37.9857%" y="725" width="1.0309%" height="15" fill="rgb(225,158,49)" fg:x="479" fg:w="13"/><text x="38.2357%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.87%)</title><rect x="38.1443%" y="709" width="0.8723%" height="15" fill="rgb(244,11,16)" fg:x="481" fg:w="11"/><text x="38.3943%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="38.4615%" y="693" width="0.5551%" height="15" fill="rgb(208,215,38)" fg:x="485" fg:w="7"/><text x="38.7115%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="38.5408%" y="677" width="0.4758%" height="15" fill="rgb(250,69,53)" fg:x="486" fg:w="6"/><text x="38.7908%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="38.5408%" y="661" width="0.4758%" height="15" fill="rgb(240,187,52)" fg:x="486" fg:w="6"/><text x="38.7908%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="38.6201%" y="645" width="0.3965%" height="15" fill="rgb(235,22,25)" fg:x="487" fg:w="5"/><text x="38.8701%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="38.7787%" y="629" width="0.2379%" height="15" fill="rgb(213,173,22)" fg:x="489" fg:w="3"/><text x="39.0287%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="38.8580%" y="613" width="0.1586%" height="15" fill="rgb(218,47,0)" fg:x="490" fg:w="2"/><text x="39.1080%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.9374%" y="597" width="0.0793%" height="15" fill="rgb(254,157,11)" fg:x="491" fg:w="1"/><text x="39.1874%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="39.0167%" y="741" width="0.1586%" height="15" fill="rgb(233,154,6)" fg:x="492" fg:w="2"/><text x="39.2667%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.0167%" y="725" width="0.1586%" height="15" fill="rgb(233,207,47)" fg:x="492" fg:w="2"/><text x="39.2667%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="39.2546%" y="725" width="0.3965%" height="15" fill="rgb(249,128,18)" fg:x="495" fg:w="5"/><text x="39.5046%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="39.2546%" y="709" width="0.3965%" height="15" fill="rgb(211,27,42)" fg:x="495" fg:w="5"/><text x="39.5046%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="39.4132%" y="693" width="0.2379%" height="15" fill="rgb(240,163,26)" fg:x="497" fg:w="3"/><text x="39.6632%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="39.5718%" y="677" width="0.0793%" height="15" fill="rgb(232,118,46)" fg:x="499" fg:w="1"/><text x="39.8218%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="39.5718%" y="661" width="0.0793%" height="15" fill="rgb(238,158,34)" fg:x="499" fg:w="1"/><text x="39.8218%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="39.5718%" y="645" width="0.0793%" height="15" fill="rgb(254,99,45)" fg:x="499" fg:w="1"/><text x="39.8218%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="39.5718%" y="629" width="0.0793%" height="15" fill="rgb(247,205,20)" fg:x="499" fg:w="1"/><text x="39.8218%" y="639.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="39.5718%" y="613" width="0.0793%" height="15" fill="rgb(240,20,41)" fg:x="499" fg:w="1"/><text x="39.8218%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="39.6511%" y="725" width="0.0793%" height="15" fill="rgb(231,22,43)" fg:x="500" fg:w="1"/><text x="39.9011%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.7304%" y="725" width="0.0793%" height="15" fill="rgb(207,86,33)" fg:x="501" fg:w="1"/><text x="39.9804%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.8097%" y="725" width="0.0793%" height="15" fill="rgb(231,148,5)" fg:x="502" fg:w="1"/><text x="40.0597%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="39.8890%" y="725" width="0.0793%" height="15" fill="rgb(253,77,28)" fg:x="503" fg:w="1"/><text x="40.1390%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.8890%" y="709" width="0.0793%" height="15" fill="rgb(253,227,9)" fg:x="503" fg:w="1"/><text x="40.1390%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.8890%" y="693" width="0.0793%" height="15" fill="rgb(235,4,18)" fg:x="503" fg:w="1"/><text x="40.1390%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="39.9683%" y="709" width="0.1586%" height="15" fill="rgb(205,206,45)" fg:x="504" fg:w="2"/><text x="40.2183%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="39.9683%" y="693" width="0.1586%" height="15" fill="rgb(252,34,0)" fg:x="504" fg:w="2"/><text x="40.2183%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.1269%" y="709" width="0.0793%" height="15" fill="rgb(213,56,7)" fg:x="506" fg:w="1"/><text x="40.3769%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.2062%" y="709" width="0.0793%" height="15" fill="rgb(227,74,29)" fg:x="507" fg:w="1"/><text x="40.4562%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.2062%" y="693" width="0.0793%" height="15" fill="rgb(221,32,48)" fg:x="507" fg:w="1"/><text x="40.4562%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="40.2855%" y="709" width="0.0793%" height="15" fill="rgb(230,205,25)" fg:x="508" fg:w="1"/><text x="40.5355%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="40.2855%" y="693" width="0.0793%" height="15" fill="rgb(215,110,9)" fg:x="508" fg:w="1"/><text x="40.5355%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="40.4441%" y="693" width="0.1586%" height="15" fill="rgb(245,220,47)" fg:x="510" fg:w="2"/><text x="40.6941%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="40.4441%" y="677" width="0.1586%" height="15" fill="rgb(224,117,5)" fg:x="510" fg:w="2"/><text x="40.6941%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="40.4441%" y="661" width="0.1586%" height="15" fill="rgb(242,208,25)" fg:x="510" fg:w="2"/><text x="40.6941%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="40.5234%" y="645" width="0.0793%" height="15" fill="rgb(226,12,37)" fg:x="511" fg:w="1"/><text x="40.7734%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="40.5234%" y="629" width="0.0793%" height="15" fill="rgb(224,221,22)" fg:x="511" fg:w="1"/><text x="40.7734%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="40.6027%" y="693" width="0.0793%" height="15" fill="rgb(239,38,44)" fg:x="512" fg:w="1"/><text x="40.8527%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6820%" y="693" width="0.0793%" height="15" fill="rgb(218,25,46)" fg:x="513" fg:w="1"/><text x="40.9320%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6820%" y="677" width="0.0793%" height="15" fill="rgb(206,137,51)" fg:x="513" fg:w="1"/><text x="40.9320%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.6820%" y="661" width="0.0793%" height="15" fill="rgb(233,174,3)" fg:x="513" fg:w="1"/><text x="40.9320%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.6820%" y="645" width="0.0793%" height="15" fill="rgb(207,224,43)" fg:x="513" fg:w="1"/><text x="40.9320%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.6820%" y="629" width="0.0793%" height="15" fill="rgb(230,46,27)" fg:x="513" fg:w="1"/><text x="40.9320%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.6820%" y="613" width="0.0793%" height="15" fill="rgb(251,215,32)" fg:x="513" fg:w="1"/><text x="40.9320%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="40.6820%" y="597" width="0.0793%" height="15" fill="rgb(244,219,19)" fg:x="513" fg:w="1"/><text x="40.9320%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="40.6820%" y="581" width="0.0793%" height="15" fill="rgb(242,125,36)" fg:x="513" fg:w="1"/><text x="40.9320%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.7613%" y="693" width="0.0793%" height="15" fill="rgb(251,211,12)" fg:x="514" fg:w="1"/><text x="41.0113%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.7613%" y="677" width="0.0793%" height="15" fill="rgb(209,179,33)" fg:x="514" fg:w="1"/><text x="41.0113%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8406%" y="677" width="0.0793%" height="15" fill="rgb(205,161,48)" fg:x="515" fg:w="1"/><text x="41.0906%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.9199%" y="677" width="0.0793%" height="15" fill="rgb(241,139,8)" fg:x="516" fg:w="1"/><text x="41.1699%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.9199%" y="661" width="0.0793%" height="15" fill="rgb(246,159,53)" fg:x="516" fg:w="1"/><text x="41.1699%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.9199%" y="645" width="0.0793%" height="15" fill="rgb(212,62,27)" fg:x="516" fg:w="1"/><text x="41.1699%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.9992%" y="661" width="0.0793%" height="15" fill="rgb(216,168,18)" fg:x="517" fg:w="1"/><text x="41.2492%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.0785%" y="661" width="0.0793%" height="15" fill="rgb(228,136,50)" fg:x="518" fg:w="1"/><text x="41.3285%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.0785%" y="645" width="0.0793%" height="15" fill="rgb(237,19,45)" fg:x="518" fg:w="1"/><text x="41.3285%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.0785%" y="629" width="0.0793%" height="15" fill="rgb(249,150,28)" fg:x="518" fg:w="1"/><text x="41.3285%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.0785%" y="613" width="0.0793%" height="15" fill="rgb(236,179,39)" fg:x="518" fg:w="1"/><text x="41.3285%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.0785%" y="597" width="0.0793%" height="15" fill="rgb(250,113,27)" fg:x="518" fg:w="1"/><text x="41.3285%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.0785%" y="581" width="0.0793%" height="15" fill="rgb(223,13,14)" fg:x="518" fg:w="1"/><text x="41.3285%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.0785%" y="565" width="0.0793%" height="15" fill="rgb(226,68,24)" fg:x="518" fg:w="1"/><text x="41.3285%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.0785%" y="549" width="0.0793%" height="15" fill="rgb(239,40,50)" fg:x="518" fg:w="1"/><text x="41.3285%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.0785%" y="533" width="0.0793%" height="15" fill="rgb(209,187,0)" fg:x="518" fg:w="1"/><text x="41.3285%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.0785%" y="517" width="0.0793%" height="15" fill="rgb(240,61,8)" fg:x="518" fg:w="1"/><text x="41.3285%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.0785%" y="501" width="0.0793%" height="15" fill="rgb(236,137,5)" fg:x="518" fg:w="1"/><text x="41.3285%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.0785%" y="485" width="0.0793%" height="15" fill="rgb(247,214,21)" fg:x="518" fg:w="1"/><text x="41.3285%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.0785%" y="469" width="0.0793%" height="15" fill="rgb(244,115,25)" fg:x="518" fg:w="1"/><text x="41.3285%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.1578%" y="661" width="0.0793%" height="15" fill="rgb(230,58,38)" fg:x="519" fg:w="1"/><text x="41.4078%" y="671.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::intersection (1 samples, 0.08%)</title><rect x="41.2371%" y="661" width="0.0793%" height="15" fill="rgb(206,122,6)" fg:x="520" fg:w="1"/><text x="41.4871%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="41.3164%" y="645" width="0.0793%" height="15" fill="rgb(217,135,53)" fg:x="521" fg:w="1"/><text x="41.5664%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.3164%" y="629" width="0.0793%" height="15" fill="rgb(225,120,8)" fg:x="521" fg:w="1"/><text x="41.5664%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="41.3164%" y="613" width="0.0793%" height="15" fill="rgb(226,3,30)" fg:x="521" fg:w="1"/><text x="41.5664%" y="623.50"></text></g><g><title>treediff::diff::diff (9 samples, 0.71%)</title><rect x="40.8406%" y="693" width="0.7137%" height="15" fill="rgb(214,159,38)" fg:x="515" fg:w="9"/><text x="41.0906%" y="703.50"></text></g><g><title>treediff::diff::diff (7 samples, 0.56%)</title><rect x="40.9992%" y="677" width="0.5551%" height="15" fill="rgb(242,182,47)" fg:x="517" fg:w="7"/><text x="41.2492%" y="687.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="41.3164%" y="661" width="0.2379%" height="15" fill="rgb(245,202,26)" fg:x="521" fg:w="3"/><text x="41.5664%" y="671.50"></text></g><g><title>treediff::tools::record::mk (2 samples, 0.16%)</title><rect x="41.3957%" y="645" width="0.1586%" height="15" fill="rgb(226,163,3)" fg:x="522" fg:w="2"/><text x="41.6457%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="41.3957%" y="629" width="0.1586%" height="15" fill="rgb(219,4,4)" fg:x="522" fg:w="2"/><text x="41.6457%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="41.3957%" y="613" width="0.1586%" height="15" fill="rgb(223,85,4)" fg:x="522" fg:w="2"/><text x="41.6457%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="41.3957%" y="597" width="0.1586%" height="15" fill="rgb(242,170,11)" fg:x="522" fg:w="2"/><text x="41.6457%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="41.3957%" y="581" width="0.1586%" height="15" fill="rgb(221,97,42)" fg:x="522" fg:w="2"/><text x="41.6457%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="41.3957%" y="565" width="0.1586%" height="15" fill="rgb(231,206,45)" fg:x="522" fg:w="2"/><text x="41.6457%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="41.3957%" y="549" width="0.1586%" height="15" fill="rgb(216,23,48)" fg:x="522" fg:w="2"/><text x="41.6457%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="41.3957%" y="533" width="0.1586%" height="15" fill="rgb(225,49,9)" fg:x="522" fg:w="2"/><text x="41.6457%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="41.3957%" y="517" width="0.1586%" height="15" fill="rgb(247,24,47)" fg:x="522" fg:w="2"/><text x="41.6457%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="41.3957%" y="501" width="0.1586%" height="15" fill="rgb(253,145,10)" fg:x="522" fg:w="2"/><text x="41.6457%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="41.3957%" y="485" width="0.1586%" height="15" fill="rgb(206,62,10)" fg:x="522" fg:w="2"/><text x="41.6457%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="41.3957%" y="469" width="0.1586%" height="15" fill="rgb(224,159,31)" fg:x="522" fg:w="2"/><text x="41.6457%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="41.3957%" y="453" width="0.1586%" height="15" fill="rgb(234,184,15)" fg:x="522" fg:w="2"/><text x="41.6457%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (46 samples, 3.65%)</title><rect x="37.9857%" y="757" width="3.6479%" height="15" fill="rgb(237,101,1)" fg:x="479" fg:w="46"/><text x="38.2357%" y="767.50">&lt;ker..</text></g><g><title>treediff::diff::diff (31 samples, 2.46%)</title><rect x="39.1753%" y="741" width="2.4584%" height="15" fill="rgb(211,99,29)" fg:x="494" fg:w="31"/><text x="39.4253%" y="751.50">tr..</text></g><g><title>treediff::diff::diff (21 samples, 1.67%)</title><rect x="39.9683%" y="725" width="1.6653%" height="15" fill="rgb(250,167,3)" fg:x="504" fg:w="21"/><text x="40.2183%" y="735.50"></text></g><g><title>treediff::diff::diff (16 samples, 1.27%)</title><rect x="40.3648%" y="709" width="1.2688%" height="15" fill="rgb(225,58,6)" fg:x="509" fg:w="16"/><text x="40.6148%" y="719.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="41.5543%" y="693" width="0.0793%" height="15" fill="rgb(251,161,21)" fg:x="524" fg:w="1"/><text x="41.8043%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.5543%" y="677" width="0.0793%" height="15" fill="rgb(253,203,35)" fg:x="524" fg:w="1"/><text x="41.8043%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="41.6336%" y="757" width="0.1586%" height="15" fill="rgb(214,220,52)" fg:x="525" fg:w="2"/><text x="41.8836%" y="767.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="41.6336%" y="741" width="0.1586%" height="15" fill="rgb(235,216,33)" fg:x="525" fg:w="2"/><text x="41.8836%" y="751.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="41.9508%" y="725" width="0.1586%" height="15" fill="rgb(231,79,26)" fg:x="529" fg:w="2"/><text x="42.2008%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="42.1094%" y="725" width="0.2379%" height="15" fill="rgb(244,218,10)" fg:x="531" fg:w="3"/><text x="42.3594%" y="735.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="42.5059%" y="693" width="0.1586%" height="15" fill="rgb(238,15,9)" fg:x="536" fg:w="2"/><text x="42.7559%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (5 samples, 0.40%)</title><rect x="42.3473%" y="725" width="0.3965%" height="15" fill="rgb(235,112,15)" fg:x="534" fg:w="5"/><text x="42.5973%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="42.4266%" y="709" width="0.3172%" height="15" fill="rgb(239,126,18)" fg:x="535" fg:w="4"/><text x="42.6766%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.6646%" y="693" width="0.0793%" height="15" fill="rgb(253,171,19)" fg:x="538" fg:w="1"/><text x="42.9146%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.6646%" y="677" width="0.0793%" height="15" fill="rgb(237,218,25)" fg:x="538" fg:w="1"/><text x="42.9146%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="42.6646%" y="661" width="0.0793%" height="15" fill="rgb(213,88,46)" fg:x="538" fg:w="1"/><text x="42.9146%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="42.9818%" y="693" width="0.0793%" height="15" fill="rgb(222,124,54)" fg:x="542" fg:w="1"/><text x="43.2318%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.0611%" y="677" width="0.0793%" height="15" fill="rgb(209,206,42)" fg:x="543" fg:w="1"/><text x="43.3111%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.0611%" y="661" width="0.0793%" height="15" fill="rgb(219,25,49)" fg:x="543" fg:w="1"/><text x="43.3111%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.0611%" y="645" width="0.0793%" height="15" fill="rgb(228,207,53)" fg:x="543" fg:w="1"/><text x="43.3111%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="43.1404%" y="645" width="0.1586%" height="15" fill="rgb(224,3,4)" fg:x="544" fg:w="2"/><text x="43.3904%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="43.2990%" y="645" width="0.2379%" height="15" fill="rgb(254,206,26)" fg:x="546" fg:w="3"/><text x="43.5490%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="43.3783%" y="629" width="0.1586%" height="15" fill="rgb(209,4,26)" fg:x="547" fg:w="2"/><text x="43.6283%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.48%)</title><rect x="43.1404%" y="677" width="0.4758%" height="15" fill="rgb(243,193,32)" fg:x="544" fg:w="6"/><text x="43.3904%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="43.1404%" y="661" width="0.4758%" height="15" fill="rgb(225,150,36)" fg:x="544" fg:w="6"/><text x="43.3904%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.5369%" y="645" width="0.0793%" height="15" fill="rgb(225,131,26)" fg:x="549" fg:w="1"/><text x="43.7869%" y="655.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.7748%" y="613" width="0.1586%" height="15" fill="rgb(236,126,12)" fg:x="552" fg:w="2"/><text x="44.0248%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="43.6955%" y="645" width="0.3172%" height="15" fill="rgb(238,167,44)" fg:x="551" fg:w="4"/><text x="43.9455%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="43.6955%" y="629" width="0.3172%" height="15" fill="rgb(238,153,31)" fg:x="551" fg:w="4"/><text x="43.9455%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="43.9334%" y="613" width="0.0793%" height="15" fill="rgb(254,41,51)" fg:x="554" fg:w="1"/><text x="44.1834%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.1713%" y="581" width="0.1586%" height="15" fill="rgb(224,100,52)" fg:x="557" fg:w="2"/><text x="44.4213%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.1713%" y="565" width="0.1586%" height="15" fill="rgb(246,226,38)" fg:x="557" fg:w="2"/><text x="44.4213%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.2506%" y="549" width="0.0793%" height="15" fill="rgb(252,21,43)" fg:x="558" fg:w="1"/><text x="44.5006%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.4885%" y="549" width="0.0793%" height="15" fill="rgb(250,44,8)" fg:x="561" fg:w="1"/><text x="44.7385%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.4885%" y="533" width="0.0793%" height="15" fill="rgb(224,200,45)" fg:x="561" fg:w="1"/><text x="44.7385%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.4885%" y="517" width="0.0793%" height="15" fill="rgb(208,75,52)" fg:x="561" fg:w="1"/><text x="44.7385%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="44.0920%" y="629" width="0.5551%" height="15" fill="rgb(213,167,20)" fg:x="556" fg:w="7"/><text x="44.3420%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="44.0920%" y="613" width="0.5551%" height="15" fill="rgb(236,163,42)" fg:x="556" fg:w="7"/><text x="44.3420%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="44.0920%" y="597" width="0.5551%" height="15" fill="rgb(210,98,31)" fg:x="556" fg:w="7"/><text x="44.3420%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="44.3299%" y="581" width="0.3172%" height="15" fill="rgb(246,166,15)" fg:x="559" fg:w="4"/><text x="44.5799%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="44.4092%" y="565" width="0.2379%" height="15" fill="rgb(214,114,7)" fg:x="560" fg:w="3"/><text x="44.6592%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="44.5678%" y="549" width="0.0793%" height="15" fill="rgb(217,202,34)" fg:x="562" fg:w="1"/><text x="44.8178%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (21 samples, 1.67%)</title><rect x="43.0611%" y="693" width="1.6653%" height="15" fill="rgb(227,226,29)" fg:x="543" fg:w="21"/><text x="43.3111%" y="703.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.11%)</title><rect x="43.6162%" y="677" width="1.1102%" height="15" fill="rgb(254,65,44)" fg:x="550" fg:w="14"/><text x="43.8662%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.03%)</title><rect x="43.6955%" y="661" width="1.0309%" height="15" fill="rgb(213,150,32)" fg:x="551" fg:w="13"/><text x="43.9455%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.71%)</title><rect x="44.0127%" y="645" width="0.7137%" height="15" fill="rgb(208,86,46)" fg:x="555" fg:w="9"/><text x="44.2627%" y="655.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="44.6471%" y="629" width="0.0793%" height="15" fill="rgb(222,75,3)" fg:x="563" fg:w="1"/><text x="44.8971%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="44.6471%" y="613" width="0.0793%" height="15" fill="rgb(225,213,9)" fg:x="563" fg:w="1"/><text x="44.8971%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (23 samples, 1.82%)</title><rect x="42.9818%" y="709" width="1.8239%" height="15" fill="rgb(209,199,10)" fg:x="542" fg:w="23"/><text x="43.2318%" y="719.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="44.7264%" y="693" width="0.0793%" height="15" fill="rgb(213,18,17)" fg:x="564" fg:w="1"/><text x="44.9764%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.8057%" y="709" width="0.0793%" height="15" fill="rgb(243,79,44)" fg:x="565" fg:w="1"/><text x="45.0557%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (40 samples, 3.17%)</title><rect x="41.7922%" y="757" width="3.1721%" height="15" fill="rgb(226,20,5)" fg:x="527" fg:w="40"/><text x="42.0422%" y="767.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (39 samples, 3.09%)</title><rect x="41.8715%" y="741" width="3.0928%" height="15" fill="rgb(217,52,31)" fg:x="528" fg:w="39"/><text x="42.1215%" y="751.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (28 samples, 2.22%)</title><rect x="42.7439%" y="725" width="2.2205%" height="15" fill="rgb(229,42,7)" fg:x="539" fg:w="28"/><text x="42.9939%" y="735.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.8850%" y="709" width="0.0793%" height="15" fill="rgb(206,118,29)" fg:x="566" fg:w="1"/><text x="45.1350%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.8850%" y="693" width="0.0793%" height="15" fill="rgb(248,132,44)" fg:x="566" fg:w="1"/><text x="45.1350%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.8850%" y="677" width="0.0793%" height="15" fill="rgb(231,56,33)" fg:x="566" fg:w="1"/><text x="45.1350%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.5194%" y="613" width="0.0793%" height="15" fill="rgb(208,31,11)" fg:x="574" fg:w="1"/><text x="45.7694%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="45.5194%" y="597" width="0.0793%" height="15" fill="rgb(216,56,33)" fg:x="574" fg:w="1"/><text x="45.7694%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.5194%" y="581" width="0.0793%" height="15" fill="rgb(213,100,0)" fg:x="574" fg:w="1"/><text x="45.7694%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="45.8366%" y="533" width="0.1586%" height="15" fill="rgb(236,166,18)" fg:x="578" fg:w="2"/><text x="46.0866%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="45.8366%" y="517" width="0.1586%" height="15" fill="rgb(251,132,12)" fg:x="578" fg:w="2"/><text x="46.0866%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.9159%" y="501" width="0.0793%" height="15" fill="rgb(216,117,7)" fg:x="579" fg:w="1"/><text x="46.1659%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.9159%" y="485" width="0.0793%" height="15" fill="rgb(243,184,8)" fg:x="579" fg:w="1"/><text x="46.1659%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.9159%" y="469" width="0.0793%" height="15" fill="rgb(212,91,32)" fg:x="579" fg:w="1"/><text x="46.1659%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="45.5987%" y="565" width="0.4758%" height="15" fill="rgb(224,147,15)" fg:x="575" fg:w="6"/><text x="45.8487%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="45.5987%" y="549" width="0.4758%" height="15" fill="rgb(228,84,10)" fg:x="575" fg:w="6"/><text x="45.8487%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.9952%" y="533" width="0.0793%" height="15" fill="rgb(221,161,22)" fg:x="580" fg:w="1"/><text x="46.2452%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="45.5987%" y="581" width="0.5551%" height="15" fill="rgb(250,132,20)" fg:x="575" fg:w="7"/><text x="45.8487%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.0745%" y="565" width="0.0793%" height="15" fill="rgb(209,161,12)" fg:x="581" fg:w="1"/><text x="46.3245%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.0745%" y="549" width="0.0793%" height="15" fill="rgb(232,142,42)" fg:x="581" fg:w="1"/><text x="46.3245%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.0745%" y="533" width="0.0793%" height="15" fill="rgb(240,228,27)" fg:x="581" fg:w="1"/><text x="46.3245%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.63%)</title><rect x="45.5987%" y="597" width="0.6344%" height="15" fill="rgb(243,0,31)" fg:x="575" fg:w="8"/><text x="45.8487%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.1538%" y="581" width="0.0793%" height="15" fill="rgb(237,100,15)" fg:x="582" fg:w="1"/><text x="46.4038%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.95%)</title><rect x="45.3608%" y="629" width="0.9516%" height="15" fill="rgb(230,26,48)" fg:x="572" fg:w="12"/><text x="45.6108%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.71%)</title><rect x="45.5987%" y="613" width="0.7137%" height="15" fill="rgb(215,7,13)" fg:x="575" fg:w="9"/><text x="45.8487%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2331%" y="597" width="0.0793%" height="15" fill="rgb(227,172,5)" fg:x="583" fg:w="1"/><text x="46.4831%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2331%" y="581" width="0.0793%" height="15" fill="rgb(248,206,14)" fg:x="583" fg:w="1"/><text x="46.4831%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="46.2331%" y="565" width="0.0793%" height="15" fill="rgb(231,62,54)" fg:x="583" fg:w="1"/><text x="46.4831%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.27%)</title><rect x="45.2022%" y="661" width="1.2688%" height="15" fill="rgb(222,136,26)" fg:x="570" fg:w="16"/><text x="45.4522%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.19%)</title><rect x="45.2815%" y="645" width="1.1895%" height="15" fill="rgb(211,115,42)" fg:x="571" fg:w="15"/><text x="45.5315%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.3125%" y="629" width="0.1586%" height="15" fill="rgb(234,5,17)" fg:x="584" fg:w="2"/><text x="46.5625%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.3125%" y="613" width="0.1586%" height="15" fill="rgb(233,67,14)" fg:x="584" fg:w="2"/><text x="46.5625%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.3125%" y="597" width="0.1586%" height="15" fill="rgb(225,133,51)" fg:x="584" fg:w="2"/><text x="46.5625%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.24%)</title><rect x="46.5504%" y="645" width="0.2379%" height="15" fill="rgb(206,107,40)" fg:x="587" fg:w="3"/><text x="46.8004%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.40%)</title><rect x="46.4711%" y="661" width="0.3965%" height="15" fill="rgb(210,56,9)" fg:x="586" fg:w="5"/><text x="46.7211%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.7883%" y="645" width="0.0793%" height="15" fill="rgb(222,204,4)" fg:x="590" fg:w="1"/><text x="47.0383%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (26 samples, 2.06%)</title><rect x="45.1229%" y="693" width="2.0619%" height="15" fill="rgb(210,168,3)" fg:x="569" fg:w="26"/><text x="45.3729%" y="703.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (26 samples, 2.06%)</title><rect x="45.1229%" y="677" width="2.0619%" height="15" fill="rgb(246,183,26)" fg:x="569" fg:w="26"/><text x="45.3729%" y="687.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="46.8676%" y="661" width="0.3172%" height="15" fill="rgb(228,27,31)" fg:x="591" fg:w="4"/><text x="47.1176%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.0262%" y="645" width="0.1586%" height="15" fill="rgb(206,8,2)" fg:x="593" fg:w="2"/><text x="47.2762%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.1055%" y="629" width="0.0793%" height="15" fill="rgb(251,229,16)" fg:x="594" fg:w="1"/><text x="47.3555%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="47.1848%" y="693" width="0.1586%" height="15" fill="rgb(208,84,44)" fg:x="595" fg:w="2"/><text x="47.4348%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.2641%" y="677" width="0.0793%" height="15" fill="rgb(221,228,13)" fg:x="596" fg:w="1"/><text x="47.5141%" y="687.50"></text></g><g><title>engine::session::state::State::close (212 samples, 16.81%)</title><rect x="30.6899%" y="837" width="16.8121%" height="15" fill="rgb(248,42,47)" fg:x="387" fg:w="212"/><text x="30.9399%" y="847.50">engine::session::state::St..</text></g><g><title>engine::session::state::State::flush_entities (197 samples, 15.62%)</title><rect x="31.8795%" y="821" width="15.6225%" height="15" fill="rgb(222,124,41)" fg:x="402" fg:w="197"/><text x="32.1295%" y="831.50">engine::session::state::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (197 samples, 15.62%)</title><rect x="31.8795%" y="805" width="15.6225%" height="15" fill="rgb(244,191,35)" fg:x="402" fg:w="197"/><text x="32.1295%" y="815.50">engine::session::interna..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (195 samples, 15.46%)</title><rect x="32.0381%" y="789" width="15.4639%" height="15" fill="rgb(222,223,54)" fg:x="404" fg:w="195"/><text x="32.2881%" y="799.50">engine::session::state::..</text></g><g><title>kernel::model::any_entity_changes (120 samples, 9.52%)</title><rect x="37.9857%" y="773" width="9.5163%" height="15" fill="rgb(248,178,42)" fg:x="479" fg:w="120"/><text x="38.2357%" y="783.50">kernel::model:..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (32 samples, 2.54%)</title><rect x="44.9643%" y="757" width="2.5377%" height="15" fill="rgb(238,21,24)" fg:x="567" fg:w="32"/><text x="45.2143%" y="767.50">se..</text></g><g><title>serde_json::de::from_trait (32 samples, 2.54%)</title><rect x="44.9643%" y="741" width="2.5377%" height="15" fill="rgb(227,134,7)" fg:x="567" fg:w="32"/><text x="45.2143%" y="751.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (32 samples, 2.54%)</title><rect x="44.9643%" y="725" width="2.5377%" height="15" fill="rgb(205,191,1)" fg:x="567" fg:w="32"/><text x="45.2143%" y="735.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (31 samples, 2.46%)</title><rect x="45.0436%" y="709" width="2.4584%" height="15" fill="rgb(222,166,30)" fg:x="568" fg:w="31"/><text x="45.2936%" y="719.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.3434%" y="693" width="0.1586%" height="15" fill="rgb(229,94,26)" fg:x="597" fg:w="2"/><text x="47.5934%" y="703.50"></text></g><g><title>engine::session::Session::close (221 samples, 17.53%)</title><rect x="30.1348%" y="853" width="17.5258%" height="15" fill="rgb(246,97,2)" fg:x="380" fg:w="221"/><text x="30.3848%" y="863.50">engine::session::Session::c..</text></g><g><title>kernel::plugins::SessionPlugins::stop (2 samples, 0.16%)</title><rect x="47.5020%" y="837" width="0.1586%" height="15" fill="rgb(252,112,53)" fg:x="599" fg:w="2"/><text x="47.7520%" y="847.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::deliver (1 samples, 0.08%)</title><rect x="47.5813%" y="821" width="0.0793%" height="15" fill="rgb(225,52,38)" fg:x="600" fg:w="1"/><text x="47.8313%" y="831.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="47.7399%" y="837" width="0.0793%" height="15" fill="rgb(215,203,24)" fg:x="602" fg:w="1"/><text x="47.9899%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="48.0571%" y="709" width="0.1586%" height="15" fill="rgb(210,122,52)" fg:x="606" fg:w="2"/><text x="48.3071%" y="719.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="48.0571%" y="693" width="0.1586%" height="15" fill="rgb(209,161,44)" fg:x="606" fg:w="2"/><text x="48.3071%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="48.1364%" y="677" width="0.0793%" height="15" fill="rgb(221,97,16)" fg:x="607" fg:w="1"/><text x="48.3864%" y="687.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="48.2157%" y="501" width="0.0793%" height="15" fill="rgb(209,87,13)" fg:x="608" fg:w="1"/><text x="48.4657%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="48.2157%" y="485" width="0.0793%" height="15" fill="rgb(242,1,21)" fg:x="608" fg:w="1"/><text x="48.4657%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="48.2157%" y="469" width="0.0793%" height="15" fill="rgb(251,170,41)" fg:x="608" fg:w="1"/><text x="48.4657%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.08%)</title><rect x="48.2157%" y="453" width="0.0793%" height="15" fill="rgb(227,201,10)" fg:x="608" fg:w="1"/><text x="48.4657%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.08%)</title><rect x="48.2157%" y="437" width="0.0793%" height="15" fill="rgb(231,100,29)" fg:x="608" fg:w="1"/><text x="48.4657%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="48.0571%" y="741" width="0.3172%" height="15" fill="rgb(226,31,35)" fg:x="606" fg:w="4"/><text x="48.3071%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="48.0571%" y="725" width="0.3172%" height="15" fill="rgb(254,99,26)" fg:x="606" fg:w="4"/><text x="48.3071%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="48.2157%" y="709" width="0.1586%" height="15" fill="rgb(217,228,17)" fg:x="608" fg:w="2"/><text x="48.4657%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="48.2157%" y="693" width="0.1586%" height="15" fill="rgb(226,132,8)" fg:x="608" fg:w="2"/><text x="48.4657%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="48.2157%" y="677" width="0.1586%" height="15" fill="rgb(220,202,47)" fg:x="608" fg:w="2"/><text x="48.4657%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="48.2157%" y="661" width="0.1586%" height="15" fill="rgb(245,194,10)" fg:x="608" fg:w="2"/><text x="48.4657%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="48.2157%" y="645" width="0.1586%" height="15" fill="rgb(225,44,52)" fg:x="608" fg:w="2"/><text x="48.4657%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="48.2157%" y="629" width="0.1586%" height="15" fill="rgb(235,10,4)" fg:x="608" fg:w="2"/><text x="48.4657%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="48.2157%" y="613" width="0.1586%" height="15" fill="rgb(244,32,23)" fg:x="608" fg:w="2"/><text x="48.4657%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="48.2157%" y="597" width="0.1586%" height="15" fill="rgb(210,115,0)" fg:x="608" fg:w="2"/><text x="48.4657%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="48.2157%" y="581" width="0.1586%" height="15" fill="rgb(246,72,16)" fg:x="608" fg:w="2"/><text x="48.4657%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="48.2157%" y="565" width="0.1586%" height="15" fill="rgb(223,32,10)" fg:x="608" fg:w="2"/><text x="48.4657%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="48.2157%" y="549" width="0.1586%" height="15" fill="rgb(223,97,52)" fg:x="608" fg:w="2"/><text x="48.4657%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="48.2157%" y="533" width="0.1586%" height="15" fill="rgb(238,69,38)" fg:x="608" fg:w="2"/><text x="48.4657%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="48.2157%" y="517" width="0.1586%" height="15" fill="rgb(226,61,1)" fg:x="608" fg:w="2"/><text x="48.4657%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.2950%" y="501" width="0.0793%" height="15" fill="rgb(244,56,14)" fg:x="609" fg:w="1"/><text x="48.5450%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.2950%" y="485" width="0.0793%" height="15" fill="rgb(242,164,18)" fg:x="609" fg:w="1"/><text x="48.5450%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="48.2950%" y="469" width="0.0793%" height="15" fill="rgb(217,130,28)" fg:x="609" fg:w="1"/><text x="48.5450%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="48.2950%" y="453" width="0.0793%" height="15" fill="rgb(218,118,52)" fg:x="609" fg:w="1"/><text x="48.5450%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="48.2950%" y="437" width="0.0793%" height="15" fill="rgb(251,112,38)" fg:x="609" fg:w="1"/><text x="48.5450%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="48.2950%" y="421" width="0.0793%" height="15" fill="rgb(239,14,50)" fg:x="609" fg:w="1"/><text x="48.5450%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="48.2950%" y="405" width="0.0793%" height="15" fill="rgb(228,141,54)" fg:x="609" fg:w="1"/><text x="48.5450%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="48.2950%" y="389" width="0.0793%" height="15" fill="rgb(236,128,15)" fg:x="609" fg:w="1"/><text x="48.5450%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="48.2950%" y="373" width="0.0793%" height="15" fill="rgb(206,140,54)" fg:x="609" fg:w="1"/><text x="48.5450%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="48.2950%" y="357" width="0.0793%" height="15" fill="rgb(240,0,44)" fg:x="609" fg:w="1"/><text x="48.5450%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="48.2950%" y="341" width="0.0793%" height="15" fill="rgb(243,207,23)" fg:x="609" fg:w="1"/><text x="48.5450%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="48.2950%" y="325" width="0.0793%" height="15" fill="rgb(247,202,1)" fg:x="609" fg:w="1"/><text x="48.5450%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="48.2950%" y="309" width="0.0793%" height="15" fill="rgb(239,83,27)" fg:x="609" fg:w="1"/><text x="48.5450%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="48.2950%" y="293" width="0.0793%" height="15" fill="rgb(219,205,7)" fg:x="609" fg:w="1"/><text x="48.5450%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="48.2950%" y="277" width="0.0793%" height="15" fill="rgb(249,184,22)" fg:x="609" fg:w="1"/><text x="48.5450%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.3743%" y="741" width="0.0793%" height="15" fill="rgb(230,150,14)" fg:x="610" fg:w="1"/><text x="48.6243%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="48.4536%" y="629" width="0.0793%" height="15" fill="rgb(240,118,34)" fg:x="611" fg:w="1"/><text x="48.7036%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="48.4536%" y="613" width="0.0793%" height="15" fill="rgb(227,162,21)" fg:x="611" fg:w="1"/><text x="48.7036%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="48.4536%" y="597" width="0.0793%" height="15" fill="rgb(219,14,9)" fg:x="611" fg:w="1"/><text x="48.7036%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.4536%" y="581" width="0.0793%" height="15" fill="rgb(223,226,16)" fg:x="611" fg:w="1"/><text x="48.7036%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.4536%" y="565" width="0.0793%" height="15" fill="rgb(246,161,37)" fg:x="611" fg:w="1"/><text x="48.7036%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.4536%" y="549" width="0.0793%" height="15" fill="rgb(205,221,43)" fg:x="611" fg:w="1"/><text x="48.7036%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.4536%" y="533" width="0.0793%" height="15" fill="rgb(228,216,26)" fg:x="611" fg:w="1"/><text x="48.7036%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="48.4536%" y="517" width="0.0793%" height="15" fill="rgb(251,33,17)" fg:x="611" fg:w="1"/><text x="48.7036%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.4536%" y="501" width="0.0793%" height="15" fill="rgb(246,126,36)" fg:x="611" fg:w="1"/><text x="48.7036%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.4536%" y="485" width="0.0793%" height="15" fill="rgb(217,160,24)" fg:x="611" fg:w="1"/><text x="48.7036%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.4536%" y="469" width="0.0793%" height="15" fill="rgb(211,64,12)" fg:x="611" fg:w="1"/><text x="48.7036%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.4536%" y="453" width="0.0793%" height="15" fill="rgb(238,47,36)" fg:x="611" fg:w="1"/><text x="48.7036%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.4536%" y="437" width="0.0793%" height="15" fill="rgb(210,157,42)" fg:x="611" fg:w="1"/><text x="48.7036%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.4536%" y="421" width="0.0793%" height="15" fill="rgb(242,84,39)" fg:x="611" fg:w="1"/><text x="48.7036%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="48.4536%" y="661" width="0.1586%" height="15" fill="rgb(207,65,41)" fg:x="611" fg:w="2"/><text x="48.7036%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="48.4536%" y="645" width="0.1586%" height="15" fill="rgb(246,97,27)" fg:x="611" fg:w="2"/><text x="48.7036%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="48.5329%" y="629" width="0.0793%" height="15" fill="rgb(229,9,43)" fg:x="612" fg:w="1"/><text x="48.7829%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="48.5329%" y="613" width="0.0793%" height="15" fill="rgb(211,82,44)" fg:x="612" fg:w="1"/><text x="48.7829%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="48.5329%" y="597" width="0.0793%" height="15" fill="rgb(253,45,54)" fg:x="612" fg:w="1"/><text x="48.7829%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.5329%" y="581" width="0.0793%" height="15" fill="rgb(235,94,32)" fg:x="612" fg:w="1"/><text x="48.7829%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.5329%" y="565" width="0.0793%" height="15" fill="rgb(252,143,1)" fg:x="612" fg:w="1"/><text x="48.7829%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.5329%" y="549" width="0.0793%" height="15" fill="rgb(239,164,4)" fg:x="612" fg:w="1"/><text x="48.7829%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.5329%" y="533" width="0.0793%" height="15" fill="rgb(222,25,39)" fg:x="612" fg:w="1"/><text x="48.7829%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="48.5329%" y="517" width="0.0793%" height="15" fill="rgb(234,175,9)" fg:x="612" fg:w="1"/><text x="48.7829%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.5329%" y="501" width="0.0793%" height="15" fill="rgb(247,200,41)" fg:x="612" fg:w="1"/><text x="48.7829%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.5329%" y="485" width="0.0793%" height="15" fill="rgb(245,101,27)" fg:x="612" fg:w="1"/><text x="48.7829%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.5329%" y="469" width="0.0793%" height="15" fill="rgb(221,29,7)" fg:x="612" fg:w="1"/><text x="48.7829%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.6122%" y="597" width="0.0793%" height="15" fill="rgb(240,184,10)" fg:x="613" fg:w="1"/><text x="48.8622%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.6122%" y="581" width="0.0793%" height="15" fill="rgb(251,85,15)" fg:x="613" fg:w="1"/><text x="48.8622%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.6915%" y="597" width="0.0793%" height="15" fill="rgb(252,84,16)" fg:x="614" fg:w="1"/><text x="48.9415%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.6915%" y="581" width="0.0793%" height="15" fill="rgb(233,136,6)" fg:x="614" fg:w="1"/><text x="48.9415%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="48.6915%" y="565" width="0.0793%" height="15" fill="rgb(226,169,30)" fg:x="614" fg:w="1"/><text x="48.9415%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.7708%" y="565" width="0.0793%" height="15" fill="rgb(241,83,18)" fg:x="615" fg:w="1"/><text x="49.0208%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="48.7708%" y="549" width="0.0793%" height="15" fill="rgb(239,151,5)" fg:x="615" fg:w="1"/><text x="49.0208%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.8501%" y="533" width="0.0793%" height="15" fill="rgb(238,56,13)" fg:x="616" fg:w="1"/><text x="49.1001%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.8501%" y="517" width="0.0793%" height="15" fill="rgb(224,100,0)" fg:x="616" fg:w="1"/><text x="49.1001%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.9294%" y="501" width="0.0793%" height="15" fill="rgb(231,168,26)" fg:x="617" fg:w="1"/><text x="49.1794%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.9294%" y="485" width="0.0793%" height="15" fill="rgb(238,110,3)" fg:x="617" fg:w="1"/><text x="49.1794%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.9294%" y="469" width="0.0793%" height="15" fill="rgb(216,190,1)" fg:x="617" fg:w="1"/><text x="49.1794%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="48.9294%" y="517" width="0.1586%" height="15" fill="rgb(208,130,52)" fg:x="617" fg:w="2"/><text x="49.1794%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="49.0087%" y="501" width="0.0793%" height="15" fill="rgb(233,74,12)" fg:x="618" fg:w="1"/><text x="49.2587%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.0087%" y="485" width="0.0793%" height="15" fill="rgb(248,12,15)" fg:x="618" fg:w="1"/><text x="49.2587%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="49.0087%" y="469" width="0.0793%" height="15" fill="rgb(228,18,29)" fg:x="618" fg:w="1"/><text x="49.2587%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.0087%" y="453" width="0.0793%" height="15" fill="rgb(206,153,11)" fg:x="618" fg:w="1"/><text x="49.2587%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="49.0087%" y="437" width="0.0793%" height="15" fill="rgb(216,50,30)" fg:x="618" fg:w="1"/><text x="49.2587%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.0087%" y="421" width="0.0793%" height="15" fill="rgb(217,20,39)" fg:x="618" fg:w="1"/><text x="49.2587%" y="431.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="48.6122%" y="645" width="0.5551%" height="15" fill="rgb(232,130,46)" fg:x="613" fg:w="7"/><text x="48.8622%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="48.6122%" y="629" width="0.5551%" height="15" fill="rgb(233,141,43)" fg:x="613" fg:w="7"/><text x="48.8622%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="48.6122%" y="613" width="0.5551%" height="15" fill="rgb(240,64,34)" fg:x="613" fg:w="7"/><text x="48.8622%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="48.7708%" y="597" width="0.3965%" height="15" fill="rgb(230,28,31)" fg:x="615" fg:w="5"/><text x="49.0208%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="48.7708%" y="581" width="0.3965%" height="15" fill="rgb(223,56,30)" fg:x="615" fg:w="5"/><text x="49.0208%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="48.8501%" y="565" width="0.3172%" height="15" fill="rgb(248,134,16)" fg:x="616" fg:w="4"/><text x="49.1001%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="48.8501%" y="549" width="0.3172%" height="15" fill="rgb(206,202,4)" fg:x="616" fg:w="4"/><text x="49.1001%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="48.9294%" y="533" width="0.2379%" height="15" fill="rgb(219,116,48)" fg:x="617" fg:w="3"/><text x="49.1794%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="49.0880%" y="517" width="0.0793%" height="15" fill="rgb(224,122,46)" fg:x="619" fg:w="1"/><text x="49.3380%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.0880%" y="501" width="0.0793%" height="15" fill="rgb(219,114,47)" fg:x="619" fg:w="1"/><text x="49.3380%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.0880%" y="485" width="0.0793%" height="15" fill="rgb(244,60,44)" fg:x="619" fg:w="1"/><text x="49.3380%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.0880%" y="469" width="0.0793%" height="15" fill="rgb(243,226,25)" fg:x="619" fg:w="1"/><text x="49.3380%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.1673%" y="581" width="0.0793%" height="15" fill="rgb(243,101,52)" fg:x="620" fg:w="1"/><text x="49.4173%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.1673%" y="565" width="0.0793%" height="15" fill="rgb(207,69,25)" fg:x="620" fg:w="1"/><text x="49.4173%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.1673%" y="549" width="0.0793%" height="15" fill="rgb(222,204,53)" fg:x="620" fg:w="1"/><text x="49.4173%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="49.2466%" y="565" width="0.0793%" height="15" fill="rgb(234,84,49)" fg:x="621" fg:w="1"/><text x="49.4966%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="49.3259%" y="565" width="0.0793%" height="15" fill="rgb(233,77,41)" fg:x="622" fg:w="1"/><text x="49.5759%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="49.3259%" y="549" width="0.0793%" height="15" fill="rgb(221,200,42)" fg:x="622" fg:w="1"/><text x="49.5759%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="49.3259%" y="533" width="0.0793%" height="15" fill="rgb(221,29,35)" fg:x="622" fg:w="1"/><text x="49.5759%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="49.3259%" y="517" width="0.0793%" height="15" fill="rgb(221,71,22)" fg:x="622" fg:w="1"/><text x="49.5759%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.3259%" y="501" width="0.0793%" height="15" fill="rgb(216,162,23)" fg:x="622" fg:w="1"/><text x="49.5759%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="49.1673%" y="613" width="0.3965%" height="15" fill="rgb(248,32,48)" fg:x="620" fg:w="5"/><text x="49.4173%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="49.1673%" y="597" width="0.3965%" height="15" fill="rgb(241,156,30)" fg:x="620" fg:w="5"/><text x="49.4173%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="49.2466%" y="581" width="0.3172%" height="15" fill="rgb(237,196,46)" fg:x="621" fg:w="4"/><text x="49.4966%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.4052%" y="565" width="0.1586%" height="15" fill="rgb(216,2,6)" fg:x="623" fg:w="2"/><text x="49.6552%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.4052%" y="549" width="0.1586%" height="15" fill="rgb(214,47,16)" fg:x="623" fg:w="2"/><text x="49.6552%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="49.4052%" y="533" width="0.1586%" height="15" fill="rgb(240,123,13)" fg:x="623" fg:w="2"/><text x="49.6552%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.4052%" y="517" width="0.1586%" height="15" fill="rgb(206,47,48)" fg:x="623" fg:w="2"/><text x="49.6552%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.4845%" y="501" width="0.0793%" height="15" fill="rgb(252,88,27)" fg:x="624" fg:w="1"/><text x="49.7345%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="49.4845%" y="485" width="0.0793%" height="15" fill="rgb(218,105,30)" fg:x="624" fg:w="1"/><text x="49.7345%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.4845%" y="469" width="0.0793%" height="15" fill="rgb(227,52,46)" fg:x="624" fg:w="1"/><text x="49.7345%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.4845%" y="453" width="0.0793%" height="15" fill="rgb(222,190,21)" fg:x="624" fg:w="1"/><text x="49.7345%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="49.4845%" y="437" width="0.0793%" height="15" fill="rgb(205,86,20)" fg:x="624" fg:w="1"/><text x="49.7345%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.4845%" y="421" width="0.0793%" height="15" fill="rgb(233,45,1)" fg:x="624" fg:w="1"/><text x="49.7345%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.4845%" y="405" width="0.0793%" height="15" fill="rgb(208,39,6)" fg:x="624" fg:w="1"/><text x="49.7345%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.4845%" y="389" width="0.0793%" height="15" fill="rgb(211,178,22)" fg:x="624" fg:w="1"/><text x="49.7345%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (15 samples, 1.19%)</title><rect x="48.4536%" y="709" width="1.1895%" height="15" fill="rgb(227,112,23)" fg:x="611" fg:w="15"/><text x="48.7036%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (15 samples, 1.19%)</title><rect x="48.4536%" y="693" width="1.1895%" height="15" fill="rgb(214,41,4)" fg:x="611" fg:w="15"/><text x="48.7036%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (15 samples, 1.19%)</title><rect x="48.4536%" y="677" width="1.1895%" height="15" fill="rgb(219,144,46)" fg:x="611" fg:w="15"/><text x="48.7036%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (13 samples, 1.03%)</title><rect x="48.6122%" y="661" width="1.0309%" height="15" fill="rgb(253,176,50)" fg:x="613" fg:w="13"/><text x="48.8622%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="49.1673%" y="645" width="0.4758%" height="15" fill="rgb(206,123,1)" fg:x="620" fg:w="6"/><text x="49.4173%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="49.1673%" y="629" width="0.4758%" height="15" fill="rgb(250,111,32)" fg:x="620" fg:w="6"/><text x="49.4173%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.5638%" y="613" width="0.0793%" height="15" fill="rgb(229,17,49)" fg:x="625" fg:w="1"/><text x="49.8138%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.5638%" y="597" width="0.0793%" height="15" fill="rgb(250,123,19)" fg:x="625" fg:w="1"/><text x="49.8138%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.5638%" y="581" width="0.0793%" height="15" fill="rgb(220,124,20)" fg:x="625" fg:w="1"/><text x="49.8138%" y="591.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.6431%" y="709" width="0.0793%" height="15" fill="rgb(242,85,25)" fg:x="626" fg:w="1"/><text x="49.8931%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.6431%" y="693" width="0.0793%" height="15" fill="rgb(245,217,7)" fg:x="626" fg:w="1"/><text x="49.8931%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.6431%" y="677" width="0.0793%" height="15" fill="rgb(242,50,25)" fg:x="626" fg:w="1"/><text x="49.8931%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.6431%" y="661" width="0.0793%" height="15" fill="rgb(251,210,24)" fg:x="626" fg:w="1"/><text x="49.8931%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.6431%" y="645" width="0.0793%" height="15" fill="rgb(238,24,8)" fg:x="626" fg:w="1"/><text x="49.8931%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.6431%" y="629" width="0.0793%" height="15" fill="rgb(211,96,19)" fg:x="626" fg:w="1"/><text x="49.8931%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.6431%" y="613" width="0.0793%" height="15" fill="rgb(222,186,12)" fg:x="626" fg:w="1"/><text x="49.8931%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.6431%" y="597" width="0.0793%" height="15" fill="rgb(212,70,49)" fg:x="626" fg:w="1"/><text x="49.8931%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.6431%" y="581" width="0.0793%" height="15" fill="rgb(238,69,49)" fg:x="626" fg:w="1"/><text x="49.8931%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.6431%" y="565" width="0.0793%" height="15" fill="rgb(225,13,3)" fg:x="626" fg:w="1"/><text x="49.8931%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.6431%" y="549" width="0.0793%" height="15" fill="rgb(229,188,14)" fg:x="626" fg:w="1"/><text x="49.8931%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.6431%" y="533" width="0.0793%" height="15" fill="rgb(218,58,16)" fg:x="626" fg:w="1"/><text x="49.8931%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.6431%" y="517" width="0.0793%" height="15" fill="rgb(206,213,49)" fg:x="626" fg:w="1"/><text x="49.8931%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.6431%" y="501" width="0.0793%" height="15" fill="rgb(225,152,48)" fg:x="626" fg:w="1"/><text x="49.8931%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.6431%" y="485" width="0.0793%" height="15" fill="rgb(216,103,42)" fg:x="626" fg:w="1"/><text x="49.8931%" y="495.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (22 samples, 1.74%)</title><rect x="48.0571%" y="757" width="1.7446%" height="15" fill="rgb(212,214,39)" fg:x="606" fg:w="22"/><text x="48.3071%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (17 samples, 1.35%)</title><rect x="48.4536%" y="741" width="1.3481%" height="15" fill="rgb(249,52,41)" fg:x="611" fg:w="17"/><text x="48.7036%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (17 samples, 1.35%)</title><rect x="48.4536%" y="725" width="1.3481%" height="15" fill="rgb(212,173,53)" fg:x="611" fg:w="17"/><text x="48.7036%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.7224%" y="709" width="0.0793%" height="15" fill="rgb(232,222,21)" fg:x="627" fg:w="1"/><text x="49.9724%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.7224%" y="693" width="0.0793%" height="15" fill="rgb(206,228,31)" fg:x="627" fg:w="1"/><text x="49.9724%" y="703.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.8810%" y="517" width="0.0793%" height="15" fill="rgb(231,121,16)" fg:x="629" fg:w="1"/><text x="50.1310%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.8810%" y="501" width="0.0793%" height="15" fill="rgb(241,3,23)" fg:x="629" fg:w="1"/><text x="50.1310%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.8810%" y="485" width="0.0793%" height="15" fill="rgb(220,68,37)" fg:x="629" fg:w="1"/><text x="50.1310%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.8810%" y="469" width="0.0793%" height="15" fill="rgb(212,23,49)" fg:x="629" fg:w="1"/><text x="50.1310%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.8810%" y="453" width="0.0793%" height="15" fill="rgb(231,38,8)" fg:x="629" fg:w="1"/><text x="50.1310%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.8810%" y="437" width="0.0793%" height="15" fill="rgb(222,137,29)" fg:x="629" fg:w="1"/><text x="50.1310%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.8810%" y="421" width="0.0793%" height="15" fill="rgb(239,8,6)" fg:x="629" fg:w="1"/><text x="50.1310%" y="431.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (3 samples, 0.24%)</title><rect x="49.8017%" y="757" width="0.2379%" height="15" fill="rgb(224,142,47)" fg:x="628" fg:w="3"/><text x="50.0517%" y="767.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="49.8017%" y="741" width="0.2379%" height="15" fill="rgb(226,67,29)" fg:x="628" fg:w="3"/><text x="50.0517%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="49.8017%" y="725" width="0.2379%" height="15" fill="rgb(212,144,29)" fg:x="628" fg:w="3"/><text x="50.0517%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="49.8810%" y="709" width="0.1586%" height="15" fill="rgb(252,2,51)" fg:x="629" fg:w="2"/><text x="50.1310%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="49.8810%" y="693" width="0.1586%" height="15" fill="rgb(246,103,52)" fg:x="629" fg:w="2"/><text x="50.1310%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="49.8810%" y="677" width="0.1586%" height="15" fill="rgb(229,229,35)" fg:x="629" fg:w="2"/><text x="50.1310%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="49.8810%" y="661" width="0.1586%" height="15" fill="rgb(209,83,15)" fg:x="629" fg:w="2"/><text x="50.1310%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="49.8810%" y="645" width="0.1586%" height="15" fill="rgb(218,54,16)" fg:x="629" fg:w="2"/><text x="50.1310%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="49.8810%" y="629" width="0.1586%" height="15" fill="rgb(205,2,26)" fg:x="629" fg:w="2"/><text x="50.1310%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="49.8810%" y="613" width="0.1586%" height="15" fill="rgb(248,180,0)" fg:x="629" fg:w="2"/><text x="50.1310%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="49.8810%" y="597" width="0.1586%" height="15" fill="rgb(231,136,16)" fg:x="629" fg:w="2"/><text x="50.1310%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="49.8810%" y="581" width="0.1586%" height="15" fill="rgb(215,90,4)" fg:x="629" fg:w="2"/><text x="50.1310%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="49.8810%" y="565" width="0.1586%" height="15" fill="rgb(251,131,3)" fg:x="629" fg:w="2"/><text x="50.1310%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="49.8810%" y="549" width="0.1586%" height="15" fill="rgb(244,47,21)" fg:x="629" fg:w="2"/><text x="50.1310%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="49.8810%" y="533" width="0.1586%" height="15" fill="rgb(231,115,9)" fg:x="629" fg:w="2"/><text x="50.1310%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.9603%" y="517" width="0.0793%" height="15" fill="rgb(241,119,20)" fg:x="630" fg:w="1"/><text x="50.2103%" y="527.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="49.9603%" y="501" width="0.0793%" height="15" fill="rgb(224,99,0)" fg:x="630" fg:w="1"/><text x="50.2103%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.9603%" y="485" width="0.0793%" height="15" fill="rgb(219,213,18)" fg:x="630" fg:w="1"/><text x="50.2103%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.9603%" y="469" width="0.0793%" height="15" fill="rgb(209,71,34)" fg:x="630" fg:w="1"/><text x="50.2103%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.9603%" y="453" width="0.0793%" height="15" fill="rgb(245,203,20)" fg:x="630" fg:w="1"/><text x="50.2103%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.9603%" y="437" width="0.0793%" height="15" fill="rgb(221,44,20)" fg:x="630" fg:w="1"/><text x="50.2103%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.9603%" y="421" width="0.0793%" height="15" fill="rgb(229,97,0)" fg:x="630" fg:w="1"/><text x="50.2103%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.9603%" y="405" width="0.0793%" height="15" fill="rgb(206,56,49)" fg:x="630" fg:w="1"/><text x="50.2103%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.9603%" y="389" width="0.0793%" height="15" fill="rgb(208,216,41)" fg:x="630" fg:w="1"/><text x="50.2103%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.9603%" y="373" width="0.0793%" height="15" fill="rgb(231,31,6)" fg:x="630" fg:w="1"/><text x="50.2103%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.9603%" y="357" width="0.0793%" height="15" fill="rgb(239,88,23)" fg:x="630" fg:w="1"/><text x="50.2103%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.9603%" y="341" width="0.0793%" height="15" fill="rgb(227,111,45)" fg:x="630" fg:w="1"/><text x="50.2103%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.9603%" y="325" width="0.0793%" height="15" fill="rgb(207,167,18)" fg:x="630" fg:w="1"/><text x="50.2103%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.9603%" y="309" width="0.0793%" height="15" fill="rgb(253,127,17)" fg:x="630" fg:w="1"/><text x="50.2103%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.9603%" y="293" width="0.0793%" height="15" fill="rgb(211,229,9)" fg:x="630" fg:w="1"/><text x="50.2103%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.9603%" y="277" width="0.0793%" height="15" fill="rgb(249,25,14)" fg:x="630" fg:w="1"/><text x="50.2103%" y="287.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (27 samples, 2.14%)</title><rect x="47.9778%" y="773" width="2.1412%" height="15" fill="rgb(237,177,4)" fg:x="605" fg:w="27"/><text x="48.2278%" y="783.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="50.0397%" y="757" width="0.0793%" height="15" fill="rgb(248,163,50)" fg:x="631" fg:w="1"/><text x="50.2897%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.0397%" y="741" width="0.0793%" height="15" fill="rgb(246,67,42)" fg:x="631" fg:w="1"/><text x="50.2897%" y="751.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.1190%" y="773" width="0.0793%" height="15" fill="rgb(228,136,45)" fg:x="632" fg:w="1"/><text x="50.3690%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="50.5155%" y="597" width="0.0793%" height="15" fill="rgb(218,93,4)" fg:x="637" fg:w="1"/><text x="50.7655%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.5155%" y="581" width="0.0793%" height="15" fill="rgb(209,82,29)" fg:x="637" fg:w="1"/><text x="50.7655%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.5948%" y="565" width="0.0793%" height="15" fill="rgb(213,219,38)" fg:x="638" fg:w="1"/><text x="50.8448%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.5948%" y="549" width="0.0793%" height="15" fill="rgb(233,212,17)" fg:x="638" fg:w="1"/><text x="50.8448%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.5948%" y="533" width="0.0793%" height="15" fill="rgb(225,65,3)" fg:x="638" fg:w="1"/><text x="50.8448%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.5948%" y="517" width="0.0793%" height="15" fill="rgb(226,25,1)" fg:x="638" fg:w="1"/><text x="50.8448%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.5948%" y="501" width="0.0793%" height="15" fill="rgb(229,83,27)" fg:x="638" fg:w="1"/><text x="50.8448%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="50.6741%" y="565" width="0.0793%" height="15" fill="rgb(245,80,47)" fg:x="639" fg:w="1"/><text x="50.9241%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.7534%" y="501" width="0.0793%" height="15" fill="rgb(213,79,27)" fg:x="640" fg:w="1"/><text x="51.0034%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (5 samples, 0.40%)</title><rect x="50.5155%" y="613" width="0.3965%" height="15" fill="rgb(232,38,28)" fg:x="637" fg:w="5"/><text x="50.7655%" y="623.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="50.5948%" y="597" width="0.3172%" height="15" fill="rgb(253,63,39)" fg:x="638" fg:w="4"/><text x="50.8448%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="50.5948%" y="581" width="0.3172%" height="15" fill="rgb(222,204,17)" fg:x="638" fg:w="4"/><text x="50.8448%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.7534%" y="565" width="0.1586%" height="15" fill="rgb(254,135,49)" fg:x="640" fg:w="2"/><text x="51.0034%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.7534%" y="549" width="0.1586%" height="15" fill="rgb(226,203,24)" fg:x="640" fg:w="2"/><text x="51.0034%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.7534%" y="533" width="0.1586%" height="15" fill="rgb(225,2,17)" fg:x="640" fg:w="2"/><text x="51.0034%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.7534%" y="517" width="0.1586%" height="15" fill="rgb(234,135,43)" fg:x="640" fg:w="2"/><text x="51.0034%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="50.8327%" y="501" width="0.0793%" height="15" fill="rgb(224,14,46)" fg:x="641" fg:w="1"/><text x="51.0827%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.8327%" y="485" width="0.0793%" height="15" fill="rgb(206,42,0)" fg:x="641" fg:w="1"/><text x="51.0827%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.8327%" y="469" width="0.0793%" height="15" fill="rgb(244,38,23)" fg:x="641" fg:w="1"/><text x="51.0827%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.8327%" y="453" width="0.0793%" height="15" fill="rgb(230,25,21)" fg:x="641" fg:w="1"/><text x="51.0827%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.8327%" y="437" width="0.0793%" height="15" fill="rgb(252,217,28)" fg:x="641" fg:w="1"/><text x="51.0827%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="50.9913%" y="597" width="0.0793%" height="15" fill="rgb(251,4,49)" fg:x="643" fg:w="1"/><text x="51.2413%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.0706%" y="549" width="0.0793%" height="15" fill="rgb(217,126,31)" fg:x="644" fg:w="1"/><text x="51.3206%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.0706%" y="533" width="0.0793%" height="15" fill="rgb(242,181,33)" fg:x="644" fg:w="1"/><text x="51.3206%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.0706%" y="517" width="0.0793%" height="15" fill="rgb(241,108,6)" fg:x="644" fg:w="1"/><text x="51.3206%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.0706%" y="565" width="0.1586%" height="15" fill="rgb(238,87,39)" fg:x="644" fg:w="2"/><text x="51.3206%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.1499%" y="549" width="0.0793%" height="15" fill="rgb(244,101,49)" fg:x="645" fg:w="1"/><text x="51.3999%" y="559.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (12 samples, 0.95%)</title><rect x="50.4362%" y="629" width="0.9516%" height="15" fill="rgb(211,43,42)" fg:x="636" fg:w="12"/><text x="50.6862%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="50.9120%" y="613" width="0.4758%" height="15" fill="rgb(210,93,2)" fg:x="642" fg:w="6"/><text x="51.1620%" y="623.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="51.0706%" y="597" width="0.3172%" height="15" fill="rgb(242,149,32)" fg:x="644" fg:w="4"/><text x="51.3206%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="51.0706%" y="581" width="0.3172%" height="15" fill="rgb(228,1,6)" fg:x="644" fg:w="4"/><text x="51.3206%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.2292%" y="565" width="0.1586%" height="15" fill="rgb(221,0,20)" fg:x="646" fg:w="2"/><text x="51.4792%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.2292%" y="549" width="0.1586%" height="15" fill="rgb(230,39,32)" fg:x="646" fg:w="2"/><text x="51.4792%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.3085%" y="533" width="0.0793%" height="15" fill="rgb(240,89,38)" fg:x="647" fg:w="1"/><text x="51.5585%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.3085%" y="517" width="0.0793%" height="15" fill="rgb(208,221,23)" fg:x="647" fg:w="1"/><text x="51.5585%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="51.3085%" y="501" width="0.0793%" height="15" fill="rgb(220,145,29)" fg:x="647" fg:w="1"/><text x="51.5585%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.3085%" y="485" width="0.0793%" height="15" fill="rgb(219,146,23)" fg:x="647" fg:w="1"/><text x="51.5585%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.3085%" y="469" width="0.0793%" height="15" fill="rgb(244,114,49)" fg:x="647" fg:w="1"/><text x="51.5585%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.3085%" y="453" width="0.0793%" height="15" fill="rgb(221,17,10)" fg:x="647" fg:w="1"/><text x="51.5585%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.3085%" y="437" width="0.0793%" height="15" fill="rgb(228,133,21)" fg:x="647" fg:w="1"/><text x="51.5585%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.3085%" y="421" width="0.0793%" height="15" fill="rgb(218,81,30)" fg:x="647" fg:w="1"/><text x="51.5585%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="51.3085%" y="405" width="0.0793%" height="15" fill="rgb(240,29,36)" fg:x="647" fg:w="1"/><text x="51.5585%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="51.3085%" y="389" width="0.0793%" height="15" fill="rgb(246,0,36)" fg:x="647" fg:w="1"/><text x="51.5585%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="51.3878%" y="597" width="0.2379%" height="15" fill="rgb(217,79,8)" fg:x="648" fg:w="3"/><text x="51.6378%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="51.4671%" y="581" width="0.1586%" height="15" fill="rgb(229,124,44)" fg:x="649" fg:w="2"/><text x="51.7171%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="51.4671%" y="565" width="0.1586%" height="15" fill="rgb(210,187,22)" fg:x="649" fg:w="2"/><text x="51.7171%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.6257%" y="581" width="0.1586%" height="15" fill="rgb(212,115,40)" fg:x="651" fg:w="2"/><text x="51.8757%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7050%" y="565" width="0.0793%" height="15" fill="rgb(210,2,54)" fg:x="652" fg:w="1"/><text x="51.9550%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7050%" y="549" width="0.0793%" height="15" fill="rgb(227,168,43)" fg:x="652" fg:w="1"/><text x="51.9550%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7050%" y="533" width="0.0793%" height="15" fill="rgb(249,92,8)" fg:x="652" fg:w="1"/><text x="51.9550%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.7050%" y="517" width="0.0793%" height="15" fill="rgb(239,111,35)" fg:x="652" fg:w="1"/><text x="51.9550%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.7050%" y="501" width="0.0793%" height="15" fill="rgb(230,126,13)" fg:x="652" fg:w="1"/><text x="51.9550%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.7050%" y="485" width="0.0793%" height="15" fill="rgb(243,116,33)" fg:x="652" fg:w="1"/><text x="51.9550%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="51.7050%" y="469" width="0.0793%" height="15" fill="rgb(246,103,21)" fg:x="652" fg:w="1"/><text x="51.9550%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="51.7050%" y="453" width="0.0793%" height="15" fill="rgb(237,53,26)" fg:x="652" fg:w="1"/><text x="51.9550%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="51.7843%" y="581" width="0.1586%" height="15" fill="rgb(213,121,15)" fg:x="653" fg:w="2"/><text x="52.0343%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="51.7843%" y="565" width="0.1586%" height="15" fill="rgb(251,83,35)" fg:x="653" fg:w="2"/><text x="52.0343%" y="575.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="51.7843%" y="549" width="0.1586%" height="15" fill="rgb(222,79,8)" fg:x="653" fg:w="2"/><text x="52.0343%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="52.0222%" y="533" width="0.0793%" height="15" fill="rgb(217,74,36)" fg:x="656" fg:w="1"/><text x="52.2722%" y="543.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="52.0222%" y="517" width="0.0793%" height="15" fill="rgb(221,14,30)" fg:x="656" fg:w="1"/><text x="52.2722%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.1015%" y="373" width="0.0793%" height="15" fill="rgb(216,221,5)" fg:x="657" fg:w="1"/><text x="52.3515%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="51.9429%" y="565" width="0.3172%" height="15" fill="rgb(236,118,16)" fg:x="655" fg:w="4"/><text x="52.1929%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="51.9429%" y="549" width="0.3172%" height="15" fill="rgb(243,91,43)" fg:x="655" fg:w="4"/><text x="52.1929%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="52.1015%" y="533" width="0.1586%" height="15" fill="rgb(231,110,7)" fg:x="657" fg:w="2"/><text x="52.3515%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="52.1015%" y="517" width="0.1586%" height="15" fill="rgb(217,80,6)" fg:x="657" fg:w="2"/><text x="52.3515%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="52.1015%" y="501" width="0.1586%" height="15" fill="rgb(251,116,7)" fg:x="657" fg:w="2"/><text x="52.3515%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="52.1015%" y="485" width="0.1586%" height="15" fill="rgb(236,70,22)" fg:x="657" fg:w="2"/><text x="52.3515%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="52.1015%" y="469" width="0.1586%" height="15" fill="rgb(245,13,10)" fg:x="657" fg:w="2"/><text x="52.3515%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="52.1015%" y="453" width="0.1586%" height="15" fill="rgb(233,146,34)" fg:x="657" fg:w="2"/><text x="52.3515%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="52.1015%" y="437" width="0.1586%" height="15" fill="rgb(241,196,34)" fg:x="657" fg:w="2"/><text x="52.3515%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="52.1015%" y="421" width="0.1586%" height="15" fill="rgb(207,150,20)" fg:x="657" fg:w="2"/><text x="52.3515%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="52.1015%" y="405" width="0.1586%" height="15" fill="rgb(251,27,52)" fg:x="657" fg:w="2"/><text x="52.3515%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="52.1015%" y="389" width="0.1586%" height="15" fill="rgb(221,76,2)" fg:x="657" fg:w="2"/><text x="52.3515%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="52.1808%" y="373" width="0.0793%" height="15" fill="rgb(242,94,41)" fg:x="658" fg:w="1"/><text x="52.4308%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.1808%" y="357" width="0.0793%" height="15" fill="rgb(245,9,8)" fg:x="658" fg:w="1"/><text x="52.4308%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.1808%" y="341" width="0.0793%" height="15" fill="rgb(236,139,26)" fg:x="658" fg:w="1"/><text x="52.4308%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="52.1808%" y="325" width="0.0793%" height="15" fill="rgb(249,11,18)" fg:x="658" fg:w="1"/><text x="52.4308%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="52.1808%" y="309" width="0.0793%" height="15" fill="rgb(206,175,35)" fg:x="658" fg:w="1"/><text x="52.4308%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.1808%" y="293" width="0.0793%" height="15" fill="rgb(231,3,46)" fg:x="658" fg:w="1"/><text x="52.4308%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.1808%" y="277" width="0.0793%" height="15" fill="rgb(243,27,8)" fg:x="658" fg:w="1"/><text x="52.4308%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.1808%" y="261" width="0.0793%" height="15" fill="rgb(223,53,13)" fg:x="658" fg:w="1"/><text x="52.4308%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.1808%" y="245" width="0.0793%" height="15" fill="rgb(248,68,15)" fg:x="658" fg:w="1"/><text x="52.4308%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="52.1808%" y="229" width="0.0793%" height="15" fill="rgb(216,61,26)" fg:x="658" fg:w="1"/><text x="52.4308%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="52.1808%" y="213" width="0.0793%" height="15" fill="rgb(213,201,24)" fg:x="658" fg:w="1"/><text x="52.4308%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="52.1808%" y="197" width="0.0793%" height="15" fill="rgb(214,20,17)" fg:x="658" fg:w="1"/><text x="52.4308%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="52.1808%" y="181" width="0.0793%" height="15" fill="rgb(206,21,46)" fg:x="658" fg:w="1"/><text x="52.4308%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.1808%" y="165" width="0.0793%" height="15" fill="rgb(234,222,24)" fg:x="658" fg:w="1"/><text x="52.4308%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.1808%" y="149" width="0.0793%" height="15" fill="rgb(221,25,26)" fg:x="658" fg:w="1"/><text x="52.4308%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="52.1808%" y="133" width="0.0793%" height="15" fill="rgb(241,148,26)" fg:x="658" fg:w="1"/><text x="52.4308%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="52.1808%" y="117" width="0.0793%" height="15" fill="rgb(248,119,35)" fg:x="658" fg:w="1"/><text x="52.4308%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="52.1808%" y="101" width="0.0793%" height="15" fill="rgb(239,126,23)" fg:x="658" fg:w="1"/><text x="52.4308%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="52.1808%" y="85" width="0.0793%" height="15" fill="rgb(247,120,25)" fg:x="658" fg:w="1"/><text x="52.4308%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="52.1808%" y="69" width="0.0793%" height="15" fill="rgb(220,93,32)" fg:x="658" fg:w="1"/><text x="52.4308%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="52.1808%" y="53" width="0.0793%" height="15" fill="rgb(236,46,26)" fg:x="658" fg:w="1"/><text x="52.4308%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="52.1808%" y="37" width="0.0793%" height="15" fill="rgb(229,20,45)" fg:x="658" fg:w="1"/><text x="52.4308%" y="47.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="52.2601%" y="533" width="0.3172%" height="15" fill="rgb(225,168,41)" fg:x="659" fg:w="4"/><text x="52.5101%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="52.2601%" y="517" width="0.3172%" height="15" fill="rgb(253,123,20)" fg:x="659" fg:w="4"/><text x="52.5101%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.4187%" y="501" width="0.1586%" height="15" fill="rgb(244,17,29)" fg:x="661" fg:w="2"/><text x="52.6687%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="52.4187%" y="485" width="0.1586%" height="15" fill="rgb(242,196,24)" fg:x="661" fg:w="2"/><text x="52.6687%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4980%" y="469" width="0.0793%" height="15" fill="rgb(210,113,45)" fg:x="662" fg:w="1"/><text x="52.7480%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4980%" y="453" width="0.0793%" height="15" fill="rgb(205,129,3)" fg:x="662" fg:w="1"/><text x="52.7480%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.4980%" y="437" width="0.0793%" height="15" fill="rgb(232,74,10)" fg:x="662" fg:w="1"/><text x="52.7480%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.4980%" y="421" width="0.0793%" height="15" fill="rgb(251,63,43)" fg:x="662" fg:w="1"/><text x="52.7480%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.4980%" y="405" width="0.0793%" height="15" fill="rgb(228,215,15)" fg:x="662" fg:w="1"/><text x="52.7480%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.4980%" y="389" width="0.0793%" height="15" fill="rgb(233,179,38)" fg:x="662" fg:w="1"/><text x="52.7480%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.4980%" y="373" width="0.0793%" height="15" fill="rgb(227,187,9)" fg:x="662" fg:w="1"/><text x="52.7480%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.4980%" y="357" width="0.0793%" height="15" fill="rgb(231,89,27)" fg:x="662" fg:w="1"/><text x="52.7480%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.4980%" y="341" width="0.0793%" height="15" fill="rgb(225,117,1)" fg:x="662" fg:w="1"/><text x="52.7480%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.4980%" y="325" width="0.0793%" height="15" fill="rgb(239,120,49)" fg:x="662" fg:w="1"/><text x="52.7480%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.4980%" y="309" width="0.0793%" height="15" fill="rgb(236,137,37)" fg:x="662" fg:w="1"/><text x="52.7480%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.4980%" y="293" width="0.0793%" height="15" fill="rgb(239,73,42)" fg:x="662" fg:w="1"/><text x="52.7480%" y="303.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="52.7359%" y="437" width="0.0793%" height="15" fill="rgb(207,169,6)" fg:x="665" fg:w="1"/><text x="52.9859%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.7359%" y="421" width="0.0793%" height="15" fill="rgb(228,171,10)" fg:x="665" fg:w="1"/><text x="52.9859%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.7359%" y="405" width="0.0793%" height="15" fill="rgb(217,228,47)" fg:x="665" fg:w="1"/><text x="52.9859%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.7359%" y="389" width="0.0793%" height="15" fill="rgb(227,116,17)" fg:x="665" fg:w="1"/><text x="52.9859%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.7359%" y="373" width="0.0793%" height="15" fill="rgb(245,128,36)" fg:x="665" fg:w="1"/><text x="52.9859%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.7359%" y="357" width="0.0793%" height="15" fill="rgb(221,139,3)" fg:x="665" fg:w="1"/><text x="52.9859%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="52.7359%" y="341" width="0.0793%" height="15" fill="rgb(207,59,54)" fg:x="665" fg:w="1"/><text x="52.9859%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="52.7359%" y="325" width="0.0793%" height="15" fill="rgb(231,129,12)" fg:x="665" fg:w="1"/><text x="52.9859%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="52.8152%" y="389" width="0.0793%" height="15" fill="rgb(235,49,17)" fg:x="666" fg:w="1"/><text x="53.0652%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="52.8152%" y="373" width="0.0793%" height="15" fill="rgb(229,175,11)" fg:x="666" fg:w="1"/><text x="53.0652%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="52.8152%" y="357" width="0.0793%" height="15" fill="rgb(206,187,30)" fg:x="666" fg:w="1"/><text x="53.0652%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.8152%" y="341" width="0.0793%" height="15" fill="rgb(214,39,19)" fg:x="666" fg:w="1"/><text x="53.0652%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.8152%" y="325" width="0.0793%" height="15" fill="rgb(243,92,46)" fg:x="666" fg:w="1"/><text x="53.0652%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.8152%" y="309" width="0.0793%" height="15" fill="rgb(240,125,36)" fg:x="666" fg:w="1"/><text x="53.0652%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.8152%" y="293" width="0.0793%" height="15" fill="rgb(217,193,45)" fg:x="666" fg:w="1"/><text x="53.0652%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="52.8152%" y="277" width="0.0793%" height="15" fill="rgb(230,127,16)" fg:x="666" fg:w="1"/><text x="53.0652%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.8152%" y="261" width="0.0793%" height="15" fill="rgb(208,161,0)" fg:x="666" fg:w="1"/><text x="53.0652%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.8152%" y="245" width="0.0793%" height="15" fill="rgb(251,69,39)" fg:x="666" fg:w="1"/><text x="53.0652%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.8152%" y="229" width="0.0793%" height="15" fill="rgb(229,86,22)" fg:x="666" fg:w="1"/><text x="53.0652%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="52.8152%" y="213" width="0.0793%" height="15" fill="rgb(223,67,43)" fg:x="666" fg:w="1"/><text x="53.0652%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.8152%" y="197" width="0.0793%" height="15" fill="rgb(254,80,31)" fg:x="666" fg:w="1"/><text x="53.0652%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="52.8152%" y="181" width="0.0793%" height="15" fill="rgb(225,149,52)" fg:x="666" fg:w="1"/><text x="53.0652%" y="191.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="52.8152%" y="165" width="0.0793%" height="15" fill="rgb(214,169,18)" fg:x="666" fg:w="1"/><text x="53.0652%" y="175.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="52.8152%" y="421" width="0.1586%" height="15" fill="rgb(236,224,43)" fg:x="666" fg:w="2"/><text x="53.0652%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="52.8152%" y="405" width="0.1586%" height="15" fill="rgb(251,125,34)" fg:x="666" fg:w="2"/><text x="53.0652%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="52.8945%" y="389" width="0.0793%" height="15" fill="rgb(224,39,44)" fg:x="667" fg:w="1"/><text x="53.1445%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="52.8945%" y="373" width="0.0793%" height="15" fill="rgb(206,111,46)" fg:x="667" fg:w="1"/><text x="53.1445%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="52.8945%" y="357" width="0.0793%" height="15" fill="rgb(227,147,50)" fg:x="667" fg:w="1"/><text x="53.1445%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.8945%" y="341" width="0.0793%" height="15" fill="rgb(239,144,36)" fg:x="667" fg:w="1"/><text x="53.1445%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.8945%" y="325" width="0.0793%" height="15" fill="rgb(216,17,19)" fg:x="667" fg:w="1"/><text x="53.1445%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.8945%" y="309" width="0.0793%" height="15" fill="rgb(211,192,29)" fg:x="667" fg:w="1"/><text x="53.1445%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.8945%" y="293" width="0.0793%" height="15" fill="rgb(238,195,20)" fg:x="667" fg:w="1"/><text x="53.1445%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.8945%" y="277" width="0.0793%" height="15" fill="rgb(213,210,42)" fg:x="667" fg:w="1"/><text x="53.1445%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.8945%" y="261" width="0.0793%" height="15" fill="rgb(244,4,49)" fg:x="667" fg:w="1"/><text x="53.1445%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="52.9738%" y="357" width="0.0793%" height="15" fill="rgb(254,106,42)" fg:x="668" fg:w="1"/><text x="53.2238%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="52.9738%" y="341" width="0.0793%" height="15" fill="rgb(222,182,12)" fg:x="668" fg:w="1"/><text x="53.2238%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.0531%" y="245" width="0.0793%" height="15" fill="rgb(228,160,15)" fg:x="669" fg:w="1"/><text x="53.3031%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="53.0531%" y="261" width="0.1586%" height="15" fill="rgb(243,149,43)" fg:x="669" fg:w="2"/><text x="53.3031%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.1324%" y="245" width="0.0793%" height="15" fill="rgb(245,150,32)" fg:x="670" fg:w="1"/><text x="53.3824%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.2117%" y="197" width="0.0793%" height="15" fill="rgb(205,43,19)" fg:x="671" fg:w="1"/><text x="53.4617%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.2117%" y="181" width="0.0793%" height="15" fill="rgb(249,189,35)" fg:x="671" fg:w="1"/><text x="53.4617%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.2117%" y="165" width="0.0793%" height="15" fill="rgb(223,9,0)" fg:x="671" fg:w="1"/><text x="53.4617%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="53.0531%" y="277" width="0.3172%" height="15" fill="rgb(213,142,45)" fg:x="669" fg:w="4"/><text x="53.3031%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="53.2117%" y="261" width="0.1586%" height="15" fill="rgb(208,148,2)" fg:x="671" fg:w="2"/><text x="53.4617%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.2117%" y="245" width="0.1586%" height="15" fill="rgb(207,191,42)" fg:x="671" fg:w="2"/><text x="53.4617%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="53.2117%" y="229" width="0.1586%" height="15" fill="rgb(215,218,38)" fg:x="671" fg:w="2"/><text x="53.4617%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.2117%" y="213" width="0.1586%" height="15" fill="rgb(223,195,24)" fg:x="671" fg:w="2"/><text x="53.4617%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="53.2910%" y="197" width="0.0793%" height="15" fill="rgb(254,60,30)" fg:x="672" fg:w="1"/><text x="53.5410%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.2910%" y="181" width="0.0793%" height="15" fill="rgb(223,2,9)" fg:x="672" fg:w="1"/><text x="53.5410%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.2910%" y="165" width="0.0793%" height="15" fill="rgb(253,134,46)" fg:x="672" fg:w="1"/><text x="53.5410%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.2910%" y="149" width="0.0793%" height="15" fill="rgb(206,209,20)" fg:x="672" fg:w="1"/><text x="53.5410%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.2910%" y="133" width="0.0793%" height="15" fill="rgb(253,104,42)" fg:x="672" fg:w="1"/><text x="53.5410%" y="143.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="52.9738%" y="405" width="0.4758%" height="15" fill="rgb(223,47,23)" fg:x="668" fg:w="6"/><text x="53.2238%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="52.9738%" y="389" width="0.4758%" height="15" fill="rgb(247,148,44)" fg:x="668" fg:w="6"/><text x="53.2238%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="52.9738%" y="373" width="0.4758%" height="15" fill="rgb(221,224,16)" fg:x="668" fg:w="6"/><text x="53.2238%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="53.0531%" y="357" width="0.3965%" height="15" fill="rgb(252,103,29)" fg:x="669" fg:w="5"/><text x="53.3031%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="53.0531%" y="341" width="0.3965%" height="15" fill="rgb(244,185,34)" fg:x="669" fg:w="5"/><text x="53.3031%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="53.0531%" y="325" width="0.3965%" height="15" fill="rgb(218,18,50)" fg:x="669" fg:w="5"/><text x="53.3031%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="53.0531%" y="309" width="0.3965%" height="15" fill="rgb(234,105,8)" fg:x="669" fg:w="5"/><text x="53.3031%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="53.0531%" y="293" width="0.3965%" height="15" fill="rgb(249,51,19)" fg:x="669" fg:w="5"/><text x="53.3031%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="53.3703%" y="277" width="0.0793%" height="15" fill="rgb(233,132,7)" fg:x="673" fg:w="1"/><text x="53.6203%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.3703%" y="261" width="0.0793%" height="15" fill="rgb(229,181,43)" fg:x="673" fg:w="1"/><text x="53.6203%" y="271.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="53.6082%" y="373" width="0.1586%" height="15" fill="rgb(223,20,7)" fg:x="676" fg:w="2"/><text x="53.8582%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.8462%" y="325" width="0.0793%" height="15" fill="rgb(245,13,34)" fg:x="679" fg:w="1"/><text x="54.0962%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.8462%" y="309" width="0.0793%" height="15" fill="rgb(242,0,53)" fg:x="679" fg:w="1"/><text x="54.0962%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.8462%" y="293" width="0.0793%" height="15" fill="rgb(233,115,19)" fg:x="679" fg:w="1"/><text x="54.0962%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.8462%" y="277" width="0.0793%" height="15" fill="rgb(216,170,26)" fg:x="679" fg:w="1"/><text x="54.0962%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="53.8462%" y="261" width="0.0793%" height="15" fill="rgb(233,13,0)" fg:x="679" fg:w="1"/><text x="54.0962%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="53.7669%" y="373" width="0.2379%" height="15" fill="rgb(228,79,21)" fg:x="678" fg:w="3"/><text x="54.0169%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="53.7669%" y="357" width="0.2379%" height="15" fill="rgb(244,17,41)" fg:x="678" fg:w="3"/><text x="54.0169%" y="367.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="53.7669%" y="341" width="0.2379%" height="15" fill="rgb(253,152,11)" fg:x="678" fg:w="3"/><text x="54.0169%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.9255%" y="325" width="0.0793%" height="15" fill="rgb(254,94,47)" fg:x="680" fg:w="1"/><text x="54.1755%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.9255%" y="309" width="0.0793%" height="15" fill="rgb(239,66,43)" fg:x="680" fg:w="1"/><text x="54.1755%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="53.9255%" y="293" width="0.0793%" height="15" fill="rgb(251,25,22)" fg:x="680" fg:w="1"/><text x="54.1755%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.9255%" y="277" width="0.0793%" height="15" fill="rgb(227,65,46)" fg:x="680" fg:w="1"/><text x="54.1755%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.9255%" y="261" width="0.0793%" height="15" fill="rgb(240,180,32)" fg:x="680" fg:w="1"/><text x="54.1755%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="53.9255%" y="245" width="0.0793%" height="15" fill="rgb(242,11,35)" fg:x="680" fg:w="1"/><text x="54.1755%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.9255%" y="229" width="0.0793%" height="15" fill="rgb(221,41,49)" fg:x="680" fg:w="1"/><text x="54.1755%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.9255%" y="213" width="0.0793%" height="15" fill="rgb(253,80,52)" fg:x="680" fg:w="1"/><text x="54.1755%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="53.9255%" y="197" width="0.0793%" height="15" fill="rgb(232,152,28)" fg:x="680" fg:w="1"/><text x="54.1755%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.9255%" y="181" width="0.0793%" height="15" fill="rgb(219,110,12)" fg:x="680" fg:w="1"/><text x="54.1755%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (14 samples, 1.11%)</title><rect x="52.9738%" y="421" width="1.1102%" height="15" fill="rgb(218,98,43)" fg:x="668" fg:w="14"/><text x="53.2238%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.63%)</title><rect x="53.4496%" y="405" width="0.6344%" height="15" fill="rgb(253,96,49)" fg:x="674" fg:w="8"/><text x="53.6996%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.63%)</title><rect x="53.4496%" y="389" width="0.6344%" height="15" fill="rgb(238,132,17)" fg:x="674" fg:w="8"/><text x="53.6996%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.0048%" y="373" width="0.0793%" height="15" fill="rgb(208,82,25)" fg:x="681" fg:w="1"/><text x="54.2548%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.0048%" y="357" width="0.0793%" height="15" fill="rgb(237,77,13)" fg:x="681" fg:w="1"/><text x="54.2548%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.0048%" y="341" width="0.0793%" height="15" fill="rgb(230,6,11)" fg:x="681" fg:w="1"/><text x="54.2548%" y="351.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="54.0841%" y="405" width="0.0793%" height="15" fill="rgb(207,29,48)" fg:x="682" fg:w="1"/><text x="54.3341%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="54.0841%" y="421" width="0.2379%" height="15" fill="rgb(247,105,22)" fg:x="682" fg:w="3"/><text x="54.3341%" y="431.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="54.1634%" y="405" width="0.1586%" height="15" fill="rgb(223,114,44)" fg:x="683" fg:w="2"/><text x="54.4134%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="54.2427%" y="389" width="0.0793%" height="15" fill="rgb(242,3,46)" fg:x="684" fg:w="1"/><text x="54.4927%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.2427%" y="373" width="0.0793%" height="15" fill="rgb(243,197,8)" fg:x="684" fg:w="1"/><text x="54.4927%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.2427%" y="357" width="0.0793%" height="15" fill="rgb(238,171,27)" fg:x="684" fg:w="1"/><text x="54.4927%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.2427%" y="341" width="0.0793%" height="15" fill="rgb(254,144,27)" fg:x="684" fg:w="1"/><text x="54.4927%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.2427%" y="325" width="0.0793%" height="15" fill="rgb(216,203,36)" fg:x="684" fg:w="1"/><text x="54.4927%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="54.2427%" y="309" width="0.0793%" height="15" fill="rgb(247,27,26)" fg:x="684" fg:w="1"/><text x="54.4927%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.2427%" y="293" width="0.0793%" height="15" fill="rgb(234,180,24)" fg:x="684" fg:w="1"/><text x="54.4927%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.2427%" y="277" width="0.0793%" height="15" fill="rgb(221,50,43)" fg:x="684" fg:w="1"/><text x="54.4927%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.2427%" y="261" width="0.0793%" height="15" fill="rgb(236,50,6)" fg:x="684" fg:w="1"/><text x="54.4927%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (25 samples, 1.98%)</title><rect x="52.7359%" y="453" width="1.9826%" height="15" fill="rgb(245,172,32)" fg:x="665" fg:w="25"/><text x="52.9859%" y="463.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (24 samples, 1.90%)</title><rect x="52.8152%" y="437" width="1.9033%" height="15" fill="rgb(207,54,46)" fg:x="666" fg:w="24"/><text x="53.0652%" y="447.50">e..</text></g><g><title>engine::session::internal::EntityMap::add_entity (5 samples, 0.40%)</title><rect x="54.3220%" y="421" width="0.3965%" height="15" fill="rgb(218,67,44)" fg:x="685" fg:w="5"/><text x="54.5720%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="54.3220%" y="405" width="0.3965%" height="15" fill="rgb(208,152,22)" fg:x="685" fg:w="5"/><text x="54.5720%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.40%)</title><rect x="54.3220%" y="389" width="0.3965%" height="15" fill="rgb(243,177,0)" fg:x="685" fg:w="5"/><text x="54.5720%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="54.3220%" y="373" width="0.3965%" height="15" fill="rgb(212,75,12)" fg:x="685" fg:w="5"/><text x="54.5720%" y="383.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="54.3220%" y="357" width="0.3965%" height="15" fill="rgb(212,129,29)" fg:x="685" fg:w="5"/><text x="54.5720%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (28 samples, 2.22%)</title><rect x="52.5773%" y="517" width="2.2205%" height="15" fill="rgb(241,229,35)" fg:x="663" fg:w="28"/><text x="52.8273%" y="527.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 2.22%)</title><rect x="52.5773%" y="501" width="2.2205%" height="15" fill="rgb(232,49,32)" fg:x="663" fg:w="28"/><text x="52.8273%" y="511.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 2.14%)</title><rect x="52.6566%" y="485" width="2.1412%" height="15" fill="rgb(243,119,48)" fg:x="664" fg:w="27"/><text x="52.9066%" y="495.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (27 samples, 2.14%)</title><rect x="52.6566%" y="469" width="2.1412%" height="15" fill="rgb(212,205,30)" fg:x="664" fg:w="27"/><text x="52.9066%" y="479.50">&lt;..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="54.7185%" y="453" width="0.0793%" height="15" fill="rgb(218,175,42)" fg:x="690" fg:w="1"/><text x="54.9685%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.7185%" y="437" width="0.0793%" height="15" fill="rgb(230,156,27)" fg:x="690" fg:w="1"/><text x="54.9685%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.7185%" y="421" width="0.0793%" height="15" fill="rgb(254,32,43)" fg:x="690" fg:w="1"/><text x="54.9685%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.7185%" y="405" width="0.0793%" height="15" fill="rgb(246,89,34)" fg:x="690" fg:w="1"/><text x="54.9685%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.7185%" y="389" width="0.0793%" height="15" fill="rgb(247,162,17)" fg:x="690" fg:w="1"/><text x="54.9685%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.7185%" y="373" width="0.0793%" height="15" fill="rgb(219,71,37)" fg:x="690" fg:w="1"/><text x="54.9685%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.7185%" y="357" width="0.0793%" height="15" fill="rgb(210,184,7)" fg:x="690" fg:w="1"/><text x="54.9685%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.7185%" y="341" width="0.0793%" height="15" fill="rgb(245,16,32)" fg:x="690" fg:w="1"/><text x="54.9685%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.7185%" y="325" width="0.0793%" height="15" fill="rgb(209,62,7)" fg:x="690" fg:w="1"/><text x="54.9685%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.7185%" y="309" width="0.0793%" height="15" fill="rgb(215,16,15)" fg:x="690" fg:w="1"/><text x="54.9685%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.7185%" y="293" width="0.0793%" height="15" fill="rgb(223,60,14)" fg:x="690" fg:w="1"/><text x="54.9685%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.7185%" y="277" width="0.0793%" height="15" fill="rgb(244,134,12)" fg:x="690" fg:w="1"/><text x="54.9685%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.7185%" y="261" width="0.0793%" height="15" fill="rgb(224,3,41)" fg:x="690" fg:w="1"/><text x="54.9685%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (29 samples, 2.30%)</title><rect x="52.5773%" y="533" width="2.2998%" height="15" fill="rgb(213,84,2)" fg:x="663" fg:w="29"/><text x="52.8273%" y="543.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="54.7978%" y="517" width="0.0793%" height="15" fill="rgb(213,216,27)" fg:x="691" fg:w="1"/><text x="55.0478%" y="527.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (42 samples, 3.33%)</title><rect x="51.6257%" y="597" width="3.3307%" height="15" fill="rgb(218,76,35)" fg:x="651" fg:w="42"/><text x="51.8757%" y="607.50">plu..</text></g><g><title>plugins_core::tools::contained_by (38 samples, 3.01%)</title><rect x="51.9429%" y="581" width="3.0135%" height="15" fill="rgb(253,89,24)" fg:x="655" fg:w="38"/><text x="52.1929%" y="591.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (34 samples, 2.70%)</title><rect x="52.2601%" y="565" width="2.6963%" height="15" fill="rgb(217,188,40)" fg:x="659" fg:w="34"/><text x="52.5101%" y="575.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (34 samples, 2.70%)</title><rect x="52.2601%" y="549" width="2.6963%" height="15" fill="rgb(237,79,38)" fg:x="659" fg:w="34"/><text x="52.5101%" y="559.50">ke..</text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="54.8771%" y="533" width="0.0793%" height="15" fill="rgb(215,116,13)" fg:x="692" fg:w="1"/><text x="55.1271%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="54.9564%" y="581" width="0.0793%" height="15" fill="rgb(249,66,35)" fg:x="693" fg:w="1"/><text x="55.2064%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="54.9564%" y="565" width="0.0793%" height="15" fill="rgb(253,86,18)" fg:x="693" fg:w="1"/><text x="55.2064%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.9564%" y="549" width="0.0793%" height="15" fill="rgb(209,175,36)" fg:x="693" fg:w="1"/><text x="55.2064%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="55.0357%" y="469" width="0.2379%" height="15" fill="rgb(253,149,3)" fg:x="694" fg:w="3"/><text x="55.2857%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="55.0357%" y="453" width="0.2379%" height="15" fill="rgb(242,124,49)" fg:x="694" fg:w="3"/><text x="55.2857%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.1150%" y="437" width="0.1586%" height="15" fill="rgb(219,171,24)" fg:x="695" fg:w="2"/><text x="55.3650%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="55.1150%" y="421" width="0.1586%" height="15" fill="rgb(216,121,30)" fg:x="695" fg:w="2"/><text x="55.3650%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="55.1150%" y="405" width="0.1586%" height="15" fill="rgb(234,165,21)" fg:x="695" fg:w="2"/><text x="55.3650%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="55.1150%" y="389" width="0.1586%" height="15" fill="rgb(234,103,40)" fg:x="695" fg:w="2"/><text x="55.3650%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="55.1150%" y="373" width="0.1586%" height="15" fill="rgb(250,137,24)" fg:x="695" fg:w="2"/><text x="55.3650%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="55.1150%" y="357" width="0.1586%" height="15" fill="rgb(253,22,21)" fg:x="695" fg:w="2"/><text x="55.3650%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="55.1150%" y="341" width="0.1586%" height="15" fill="rgb(243,22,5)" fg:x="695" fg:w="2"/><text x="55.3650%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="55.1150%" y="325" width="0.1586%" height="15" fill="rgb(212,56,7)" fg:x="695" fg:w="2"/><text x="55.3650%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="55.1150%" y="309" width="0.1586%" height="15" fill="rgb(223,190,49)" fg:x="695" fg:w="2"/><text x="55.3650%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="55.1150%" y="293" width="0.1586%" height="15" fill="rgb(221,110,35)" fg:x="695" fg:w="2"/><text x="55.3650%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="55.1150%" y="277" width="0.1586%" height="15" fill="rgb(212,113,34)" fg:x="695" fg:w="2"/><text x="55.3650%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="55.1150%" y="261" width="0.1586%" height="15" fill="rgb(216,125,47)" fg:x="695" fg:w="2"/><text x="55.3650%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.1150%" y="245" width="0.1586%" height="15" fill="rgb(251,112,19)" fg:x="695" fg:w="2"/><text x="55.3650%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="55.0357%" y="485" width="0.3172%" height="15" fill="rgb(254,200,41)" fg:x="694" fg:w="4"/><text x="55.2857%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.2736%" y="469" width="0.0793%" height="15" fill="rgb(225,17,42)" fg:x="697" fg:w="1"/><text x="55.5236%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.3529%" y="485" width="0.0793%" height="15" fill="rgb(208,105,35)" fg:x="698" fg:w="1"/><text x="55.6029%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="55.3529%" y="469" width="0.0793%" height="15" fill="rgb(210,125,51)" fg:x="698" fg:w="1"/><text x="55.6029%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.3529%" y="453" width="0.0793%" height="15" fill="rgb(227,213,18)" fg:x="698" fg:w="1"/><text x="55.6029%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.3529%" y="437" width="0.0793%" height="15" fill="rgb(221,174,32)" fg:x="698" fg:w="1"/><text x="55.6029%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::name (6 samples, 0.48%)</title><rect x="55.0357%" y="549" width="0.4758%" height="15" fill="rgb(234,23,1)" fg:x="694" fg:w="6"/><text x="55.2857%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="55.0357%" y="533" width="0.4758%" height="15" fill="rgb(209,65,17)" fg:x="694" fg:w="6"/><text x="55.2857%" y="543.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="55.0357%" y="517" width="0.4758%" height="15" fill="rgb(206,224,31)" fg:x="694" fg:w="6"/><text x="55.2857%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="55.0357%" y="501" width="0.4758%" height="15" fill="rgb(230,20,38)" fg:x="694" fg:w="6"/><text x="55.2857%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.4322%" y="485" width="0.0793%" height="15" fill="rgb(211,9,41)" fg:x="699" fg:w="1"/><text x="55.6822%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.4322%" y="469" width="0.0793%" height="15" fill="rgb(233,214,4)" fg:x="699" fg:w="1"/><text x="55.6822%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.4322%" y="453" width="0.0793%" height="15" fill="rgb(225,60,54)" fg:x="699" fg:w="1"/><text x="55.6822%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.4322%" y="437" width="0.0793%" height="15" fill="rgb(206,228,35)" fg:x="699" fg:w="1"/><text x="55.6822%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="55.4322%" y="421" width="0.0793%" height="15" fill="rgb(212,178,50)" fg:x="699" fg:w="1"/><text x="55.6822%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.4322%" y="405" width="0.0793%" height="15" fill="rgb(206,192,33)" fg:x="699" fg:w="1"/><text x="55.6822%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.4322%" y="389" width="0.0793%" height="15" fill="rgb(238,210,1)" fg:x="699" fg:w="1"/><text x="55.6822%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.4322%" y="373" width="0.0793%" height="15" fill="rgb(205,65,52)" fg:x="699" fg:w="1"/><text x="55.6822%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.4322%" y="357" width="0.0793%" height="15" fill="rgb(237,204,51)" fg:x="699" fg:w="1"/><text x="55.6822%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.4322%" y="341" width="0.0793%" height="15" fill="rgb(213,119,51)" fg:x="699" fg:w="1"/><text x="55.6822%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="55.4322%" y="325" width="0.0793%" height="15" fill="rgb(244,156,37)" fg:x="699" fg:w="1"/><text x="55.6822%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.4322%" y="309" width="0.0793%" height="15" fill="rgb(249,96,18)" fg:x="699" fg:w="1"/><text x="55.6822%" y="319.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (10 samples, 0.79%)</title><rect x="54.9564%" y="597" width="0.7930%" height="15" fill="rgb(231,65,11)" fg:x="693" fg:w="10"/><text x="55.2064%" y="607.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (9 samples, 0.71%)</title><rect x="55.0357%" y="581" width="0.7137%" height="15" fill="rgb(240,187,2)" fg:x="694" fg:w="9"/><text x="55.2857%" y="591.50"></text></g><g><title>plugins_core::finding::matches_description (9 samples, 0.71%)</title><rect x="55.0357%" y="565" width="0.7137%" height="15" fill="rgb(242,121,39)" fg:x="694" fg:w="9"/><text x="55.2857%" y="575.50"></text></g><g><title>plugins_core::finding::matches_string (3 samples, 0.24%)</title><rect x="55.5115%" y="549" width="0.2379%" height="15" fill="rgb(233,205,18)" fg:x="700" fg:w="3"/><text x="55.7615%" y="559.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (2 samples, 0.16%)</title><rect x="55.5908%" y="533" width="0.1586%" height="15" fill="rgb(219,67,33)" fg:x="701" fg:w="2"/><text x="55.8408%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (56 samples, 4.44%)</title><rect x="51.3878%" y="629" width="4.4409%" height="15" fill="rgb(227,84,12)" fg:x="648" fg:w="56"/><text x="51.6378%" y="639.50">&lt;engi..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (56 samples, 4.44%)</title><rect x="51.3878%" y="613" width="4.4409%" height="15" fill="rgb(227,42,52)" fg:x="648" fg:w="56"/><text x="51.6378%" y="623.50">&lt;plug..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="55.7494%" y="597" width="0.0793%" height="15" fill="rgb(231,27,28)" fg:x="703" fg:w="1"/><text x="55.9994%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.7494%" y="581" width="0.0793%" height="15" fill="rgb(238,42,2)" fg:x="703" fg:w="1"/><text x="55.9994%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.8287%" y="613" width="0.0793%" height="15" fill="rgb(215,15,9)" fg:x="704" fg:w="1"/><text x="56.0787%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="55.8287%" y="629" width="0.1586%" height="15" fill="rgb(205,195,15)" fg:x="704" fg:w="2"/><text x="56.0787%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="55.9080%" y="613" width="0.0793%" height="15" fill="rgb(233,143,2)" fg:x="705" fg:w="1"/><text x="56.1580%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.9080%" y="597" width="0.0793%" height="15" fill="rgb(207,108,8)" fg:x="705" fg:w="1"/><text x="56.1580%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="55.9873%" y="581" width="0.0793%" height="15" fill="rgb(214,53,21)" fg:x="706" fg:w="1"/><text x="56.2373%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.9873%" y="565" width="0.0793%" height="15" fill="rgb(238,212,36)" fg:x="706" fg:w="1"/><text x="56.2373%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="56.2252%" y="501" width="0.2379%" height="15" fill="rgb(218,151,47)" fg:x="709" fg:w="3"/><text x="56.4752%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.2252%" y="485" width="0.2379%" height="15" fill="rgb(245,160,3)" fg:x="709" fg:w="3"/><text x="56.4752%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="56.2252%" y="469" width="0.2379%" height="15" fill="rgb(238,106,19)" fg:x="709" fg:w="3"/><text x="56.4752%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="56.2252%" y="453" width="0.2379%" height="15" fill="rgb(207,206,9)" fg:x="709" fg:w="3"/><text x="56.4752%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="56.2252%" y="437" width="0.2379%" height="15" fill="rgb(254,40,10)" fg:x="709" fg:w="3"/><text x="56.4752%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="56.2252%" y="421" width="0.2379%" height="15" fill="rgb(245,81,8)" fg:x="709" fg:w="3"/><text x="56.4752%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="56.2252%" y="405" width="0.2379%" height="15" fill="rgb(214,119,17)" fg:x="709" fg:w="3"/><text x="56.4752%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="56.2252%" y="389" width="0.2379%" height="15" fill="rgb(245,100,39)" fg:x="709" fg:w="3"/><text x="56.4752%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="56.2252%" y="373" width="0.2379%" height="15" fill="rgb(243,105,16)" fg:x="709" fg:w="3"/><text x="56.4752%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="56.2252%" y="357" width="0.2379%" height="15" fill="rgb(214,53,2)" fg:x="709" fg:w="3"/><text x="56.4752%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="56.2252%" y="341" width="0.2379%" height="15" fill="rgb(251,54,50)" fg:x="709" fg:w="3"/><text x="56.4752%" y="351.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="56.2252%" y="325" width="0.2379%" height="15" fill="rgb(244,121,37)" fg:x="709" fg:w="3"/><text x="56.4752%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.3045%" y="309" width="0.1586%" height="15" fill="rgb(236,158,39)" fg:x="710" fg:w="2"/><text x="56.5545%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="56.0666%" y="517" width="0.4758%" height="15" fill="rgb(226,25,37)" fg:x="707" fg:w="6"/><text x="56.3166%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.4631%" y="501" width="0.0793%" height="15" fill="rgb(222,71,46)" fg:x="712" fg:w="1"/><text x="56.7131%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.4631%" y="485" width="0.0793%" height="15" fill="rgb(209,27,29)" fg:x="712" fg:w="1"/><text x="56.7131%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.4631%" y="469" width="0.0793%" height="15" fill="rgb(210,196,17)" fg:x="712" fg:w="1"/><text x="56.7131%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.4631%" y="453" width="0.0793%" height="15" fill="rgb(236,76,23)" fg:x="712" fg:w="1"/><text x="56.7131%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.4631%" y="437" width="0.0793%" height="15" fill="rgb(214,33,32)" fg:x="712" fg:w="1"/><text x="56.7131%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.4631%" y="421" width="0.0793%" height="15" fill="rgb(243,16,26)" fg:x="712" fg:w="1"/><text x="56.7131%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.4631%" y="405" width="0.0793%" height="15" fill="rgb(241,30,48)" fg:x="712" fg:w="1"/><text x="56.7131%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.4631%" y="389" width="0.0793%" height="15" fill="rgb(241,106,1)" fg:x="712" fg:w="1"/><text x="56.7131%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.4631%" y="373" width="0.0793%" height="15" fill="rgb(230,62,29)" fg:x="712" fg:w="1"/><text x="56.7131%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.4631%" y="357" width="0.0793%" height="15" fill="rgb(207,166,53)" fg:x="712" fg:w="1"/><text x="56.7131%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.4631%" y="341" width="0.0793%" height="15" fill="rgb(244,54,13)" fg:x="712" fg:w="1"/><text x="56.7131%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.4631%" y="325" width="0.0793%" height="15" fill="rgb(205,144,19)" fg:x="712" fg:w="1"/><text x="56.7131%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="56.0666%" y="533" width="0.5551%" height="15" fill="rgb(225,165,45)" fg:x="707" fg:w="7"/><text x="56.3166%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5424%" y="517" width="0.0793%" height="15" fill="rgb(220,140,6)" fg:x="713" fg:w="1"/><text x="56.7924%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.63%)</title><rect x="56.0666%" y="549" width="0.6344%" height="15" fill="rgb(234,69,14)" fg:x="707" fg:w="8"/><text x="56.3166%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.6217%" y="533" width="0.0793%" height="15" fill="rgb(243,24,33)" fg:x="714" fg:w="1"/><text x="56.8717%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.7010%" y="549" width="0.0793%" height="15" fill="rgb(253,100,43)" fg:x="715" fg:w="1"/><text x="56.9510%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.7803%" y="549" width="0.0793%" height="15" fill="rgb(221,168,15)" fg:x="716" fg:w="1"/><text x="57.0303%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="56.7803%" y="533" width="0.0793%" height="15" fill="rgb(237,15,11)" fg:x="716" fg:w="1"/><text x="57.0303%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.7803%" y="517" width="0.0793%" height="15" fill="rgb(229,207,40)" fg:x="716" fg:w="1"/><text x="57.0303%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="56.7803%" y="501" width="0.0793%" height="15" fill="rgb(246,125,48)" fg:x="716" fg:w="1"/><text x="57.0303%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.8596%" y="517" width="0.0793%" height="15" fill="rgb(231,65,10)" fg:x="717" fg:w="1"/><text x="57.1096%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.8596%" y="501" width="0.0793%" height="15" fill="rgb(222,152,40)" fg:x="717" fg:w="1"/><text x="57.1096%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (14 samples, 1.11%)</title><rect x="55.9873%" y="597" width="1.1102%" height="15" fill="rgb(214,12,30)" fg:x="706" fg:w="14"/><text x="56.2373%" y="607.50"></text></g><g><title>kernel::model::props::load_props (13 samples, 1.03%)</title><rect x="56.0666%" y="581" width="1.0309%" height="15" fill="rgb(239,80,41)" fg:x="707" fg:w="13"/><text x="56.3166%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.03%)</title><rect x="56.0666%" y="565" width="1.0309%" height="15" fill="rgb(206,175,27)" fg:x="707" fg:w="13"/><text x="56.3166%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="56.8596%" y="549" width="0.2379%" height="15" fill="rgb(222,43,39)" fg:x="717" fg:w="3"/><text x="57.1096%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.8596%" y="533" width="0.2379%" height="15" fill="rgb(243,47,50)" fg:x="717" fg:w="3"/><text x="57.1096%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.9389%" y="517" width="0.1586%" height="15" fill="rgb(243,61,21)" fg:x="718" fg:w="2"/><text x="57.1889%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.9389%" y="501" width="0.1586%" height="15" fill="rgb(208,172,5)" fg:x="718" fg:w="2"/><text x="57.1889%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="56.9389%" y="485" width="0.1586%" height="15" fill="rgb(219,24,25)" fg:x="718" fg:w="2"/><text x="57.1889%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.9389%" y="469" width="0.1586%" height="15" fill="rgb(235,42,41)" fg:x="718" fg:w="2"/><text x="57.1889%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.9389%" y="453" width="0.1586%" height="15" fill="rgb(226,190,24)" fg:x="718" fg:w="2"/><text x="57.1889%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.9389%" y="437" width="0.1586%" height="15" fill="rgb(216,55,27)" fg:x="718" fg:w="2"/><text x="57.1889%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.0182%" y="421" width="0.0793%" height="15" fill="rgb(231,77,14)" fg:x="719" fg:w="1"/><text x="57.2682%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.0182%" y="405" width="0.0793%" height="15" fill="rgb(208,108,34)" fg:x="719" fg:w="1"/><text x="57.2682%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.0182%" y="389" width="0.0793%" height="15" fill="rgb(228,183,52)" fg:x="719" fg:w="1"/><text x="57.2682%" y="399.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="57.0975%" y="581" width="0.0793%" height="15" fill="rgb(224,152,1)" fg:x="720" fg:w="1"/><text x="57.3475%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="57.1768%" y="501" width="0.2379%" height="15" fill="rgb(246,115,8)" fg:x="721" fg:w="3"/><text x="57.4268%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="57.1768%" y="485" width="0.2379%" height="15" fill="rgb(211,76,13)" fg:x="721" fg:w="3"/><text x="57.4268%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="57.1768%" y="469" width="0.2379%" height="15" fill="rgb(233,214,49)" fg:x="721" fg:w="3"/><text x="57.4268%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="57.1768%" y="453" width="0.2379%" height="15" fill="rgb(223,44,51)" fg:x="721" fg:w="3"/><text x="57.4268%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="57.1768%" y="437" width="0.2379%" height="15" fill="rgb(225,111,51)" fg:x="721" fg:w="3"/><text x="57.4268%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="57.1768%" y="421" width="0.2379%" height="15" fill="rgb(231,185,26)" fg:x="721" fg:w="3"/><text x="57.4268%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="57.1768%" y="405" width="0.2379%" height="15" fill="rgb(233,111,30)" fg:x="721" fg:w="3"/><text x="57.4268%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="57.1768%" y="389" width="0.2379%" height="15" fill="rgb(250,1,47)" fg:x="721" fg:w="3"/><text x="57.4268%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="57.1768%" y="373" width="0.2379%" height="15" fill="rgb(254,210,3)" fg:x="721" fg:w="3"/><text x="57.4268%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="57.1768%" y="357" width="0.2379%" height="15" fill="rgb(234,14,22)" fg:x="721" fg:w="3"/><text x="57.4268%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="57.1768%" y="341" width="0.2379%" height="15" fill="rgb(221,117,4)" fg:x="721" fg:w="3"/><text x="57.4268%" y="351.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="57.1768%" y="325" width="0.2379%" height="15" fill="rgb(251,147,27)" fg:x="721" fg:w="3"/><text x="57.4268%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.2561%" y="309" width="0.1586%" height="15" fill="rgb(226,52,11)" fg:x="722" fg:w="2"/><text x="57.5061%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="57.1768%" y="517" width="0.3172%" height="15" fill="rgb(229,222,5)" fg:x="721" fg:w="4"/><text x="57.4268%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.4148%" y="501" width="0.0793%" height="15" fill="rgb(232,76,2)" fg:x="724" fg:w="1"/><text x="57.6648%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="57.1768%" y="549" width="0.3965%" height="15" fill="rgb(242,108,2)" fg:x="721" fg:w="5"/><text x="57.4268%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="57.1768%" y="533" width="0.3965%" height="15" fill="rgb(213,165,6)" fg:x="721" fg:w="5"/><text x="57.4268%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.4941%" y="517" width="0.0793%" height="15" fill="rgb(222,24,42)" fg:x="725" fg:w="1"/><text x="57.7441%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (22 samples, 1.74%)</title><rect x="55.9873%" y="629" width="1.7446%" height="15" fill="rgb(242,170,24)" fg:x="706" fg:w="22"/><text x="56.2373%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (22 samples, 1.74%)</title><rect x="55.9873%" y="613" width="1.7446%" height="15" fill="rgb(209,110,40)" fg:x="706" fg:w="22"/><text x="56.2373%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.63%)</title><rect x="57.0975%" y="597" width="0.6344%" height="15" fill="rgb(233,146,36)" fg:x="720" fg:w="8"/><text x="57.3475%" y="607.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="57.1768%" y="581" width="0.5551%" height="15" fill="rgb(229,33,32)" fg:x="721" fg:w="7"/><text x="57.4268%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="57.1768%" y="565" width="0.5551%" height="15" fill="rgb(225,55,34)" fg:x="721" fg:w="7"/><text x="57.4268%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.5734%" y="549" width="0.1586%" height="15" fill="rgb(217,32,50)" fg:x="726" fg:w="2"/><text x="57.8234%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.5734%" y="533" width="0.1586%" height="15" fill="rgb(206,110,53)" fg:x="726" fg:w="2"/><text x="57.8234%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.5734%" y="517" width="0.1586%" height="15" fill="rgb(247,25,10)" fg:x="726" fg:w="2"/><text x="57.8234%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.5734%" y="501" width="0.1586%" height="15" fill="rgb(226,67,48)" fg:x="726" fg:w="2"/><text x="57.8234%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="57.5734%" y="485" width="0.1586%" height="15" fill="rgb(239,73,28)" fg:x="726" fg:w="2"/><text x="57.8234%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.5734%" y="469" width="0.1586%" height="15" fill="rgb(234,200,41)" fg:x="726" fg:w="2"/><text x="57.8234%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.6527%" y="453" width="0.0793%" height="15" fill="rgb(233,76,35)" fg:x="727" fg:w="1"/><text x="57.9027%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.6527%" y="437" width="0.0793%" height="15" fill="rgb(238,166,31)" fg:x="727" fg:w="1"/><text x="57.9027%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.6527%" y="421" width="0.0793%" height="15" fill="rgb(219,218,51)" fg:x="727" fg:w="1"/><text x="57.9027%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.6527%" y="405" width="0.0793%" height="15" fill="rgb(221,82,53)" fg:x="727" fg:w="1"/><text x="57.9027%" y="415.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="57.7320%" y="629" width="0.1586%" height="15" fill="rgb(218,179,13)" fg:x="728" fg:w="2"/><text x="57.9820%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.7320%" y="613" width="0.1586%" height="15" fill="rgb(210,53,38)" fg:x="728" fg:w="2"/><text x="57.9820%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.8113%" y="597" width="0.0793%" height="15" fill="rgb(214,167,31)" fg:x="729" fg:w="1"/><text x="58.0613%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.8113%" y="581" width="0.0793%" height="15" fill="rgb(223,26,5)" fg:x="729" fg:w="1"/><text x="58.0613%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.8113%" y="565" width="0.0793%" height="15" fill="rgb(218,95,23)" fg:x="729" fg:w="1"/><text x="58.0613%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.8113%" y="549" width="0.0793%" height="15" fill="rgb(248,205,45)" fg:x="729" fg:w="1"/><text x="58.0613%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.8113%" y="533" width="0.0793%" height="15" fill="rgb(211,76,6)" fg:x="729" fg:w="1"/><text x="58.0613%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.8113%" y="517" width="0.0793%" height="15" fill="rgb(250,176,29)" fg:x="729" fg:w="1"/><text x="58.0613%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.8113%" y="501" width="0.0793%" height="15" fill="rgb(240,107,31)" fg:x="729" fg:w="1"/><text x="58.0613%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.8906%" y="597" width="0.0793%" height="15" fill="rgb(229,215,17)" fg:x="730" fg:w="1"/><text x="58.1406%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="57.8906%" y="613" width="0.1586%" height="15" fill="rgb(240,79,8)" fg:x="730" fg:w="2"/><text x="58.1406%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="57.9699%" y="597" width="0.0793%" height="15" fill="rgb(243,110,48)" fg:x="731" fg:w="1"/><text x="58.2199%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.9699%" y="581" width="0.0793%" height="15" fill="rgb(236,201,9)" fg:x="731" fg:w="1"/><text x="58.2199%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.0492%" y="565" width="0.0793%" height="15" fill="rgb(220,87,26)" fg:x="732" fg:w="1"/><text x="58.2992%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="58.0492%" y="581" width="0.1586%" height="15" fill="rgb(212,118,27)" fg:x="732" fg:w="2"/><text x="58.2992%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="58.1285%" y="565" width="0.0793%" height="15" fill="rgb(244,178,50)" fg:x="733" fg:w="1"/><text x="58.3785%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="58.1285%" y="549" width="0.0793%" height="15" fill="rgb(215,204,7)" fg:x="733" fg:w="1"/><text x="58.3785%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.1285%" y="533" width="0.0793%" height="15" fill="rgb(214,122,43)" fg:x="733" fg:w="1"/><text x="58.3785%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.1285%" y="517" width="0.0793%" height="15" fill="rgb(251,178,26)" fg:x="733" fg:w="1"/><text x="58.3785%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.1285%" y="501" width="0.0793%" height="15" fill="rgb(210,7,35)" fg:x="733" fg:w="1"/><text x="58.3785%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.1285%" y="485" width="0.0793%" height="15" fill="rgb(227,164,54)" fg:x="733" fg:w="1"/><text x="58.3785%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.1285%" y="469" width="0.0793%" height="15" fill="rgb(205,18,34)" fg:x="733" fg:w="1"/><text x="58.3785%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.1285%" y="453" width="0.0793%" height="15" fill="rgb(239,50,19)" fg:x="733" fg:w="1"/><text x="58.3785%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.1285%" y="437" width="0.0793%" height="15" fill="rgb(224,85,6)" fg:x="733" fg:w="1"/><text x="58.3785%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.1285%" y="421" width="0.0793%" height="15" fill="rgb(252,167,34)" fg:x="733" fg:w="1"/><text x="58.3785%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.1285%" y="405" width="0.0793%" height="15" fill="rgb(243,180,35)" fg:x="733" fg:w="1"/><text x="58.3785%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.1285%" y="389" width="0.0793%" height="15" fill="rgb(213,214,53)" fg:x="733" fg:w="1"/><text x="58.3785%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.1285%" y="373" width="0.0793%" height="15" fill="rgb(244,39,37)" fg:x="733" fg:w="1"/><text x="58.3785%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.1285%" y="357" width="0.0793%" height="15" fill="rgb(215,141,14)" fg:x="733" fg:w="1"/><text x="58.3785%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.1285%" y="341" width="0.0793%" height="15" fill="rgb(210,2,42)" fg:x="733" fg:w="1"/><text x="58.3785%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.2871%" y="533" width="0.1586%" height="15" fill="rgb(252,189,47)" fg:x="735" fg:w="2"/><text x="58.5371%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.2871%" y="517" width="0.1586%" height="15" fill="rgb(222,154,47)" fg:x="735" fg:w="2"/><text x="58.5371%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.2871%" y="501" width="0.1586%" height="15" fill="rgb(228,20,37)" fg:x="735" fg:w="2"/><text x="58.5371%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="58.0492%" y="613" width="0.4758%" height="15" fill="rgb(236,17,4)" fg:x="732" fg:w="6"/><text x="58.2992%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="58.0492%" y="597" width="0.4758%" height="15" fill="rgb(222,211,31)" fg:x="732" fg:w="6"/><text x="58.2992%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="58.2078%" y="581" width="0.3172%" height="15" fill="rgb(218,134,25)" fg:x="734" fg:w="4"/><text x="58.4578%" y="591.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="58.2078%" y="565" width="0.3172%" height="15" fill="rgb(218,97,43)" fg:x="734" fg:w="4"/><text x="58.4578%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="58.2078%" y="549" width="0.3172%" height="15" fill="rgb(234,163,32)" fg:x="734" fg:w="4"/><text x="58.4578%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.4457%" y="533" width="0.0793%" height="15" fill="rgb(251,171,42)" fg:x="737" fg:w="1"/><text x="58.6957%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.4457%" y="517" width="0.0793%" height="15" fill="rgb(223,104,12)" fg:x="737" fg:w="1"/><text x="58.6957%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.4457%" y="501" width="0.0793%" height="15" fill="rgb(225,29,49)" fg:x="737" fg:w="1"/><text x="58.6957%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.4457%" y="485" width="0.0793%" height="15" fill="rgb(253,77,7)" fg:x="737" fg:w="1"/><text x="58.6957%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="58.4457%" y="469" width="0.0793%" height="15" fill="rgb(213,81,26)" fg:x="737" fg:w="1"/><text x="58.6957%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.4457%" y="453" width="0.0793%" height="15" fill="rgb(246,126,6)" fg:x="737" fg:w="1"/><text x="58.6957%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="58.4457%" y="437" width="0.0793%" height="15" fill="rgb(232,186,21)" fg:x="737" fg:w="1"/><text x="58.6957%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.6043%" y="597" width="0.0793%" height="15" fill="rgb(215,126,18)" fg:x="739" fg:w="1"/><text x="58.8543%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.7629%" y="437" width="0.0793%" height="15" fill="rgb(210,47,5)" fg:x="741" fg:w="1"/><text x="59.0129%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.7629%" y="421" width="0.0793%" height="15" fill="rgb(240,70,6)" fg:x="741" fg:w="1"/><text x="59.0129%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.7629%" y="405" width="0.0793%" height="15" fill="rgb(230,99,49)" fg:x="741" fg:w="1"/><text x="59.0129%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.7629%" y="389" width="0.0793%" height="15" fill="rgb(212,57,36)" fg:x="741" fg:w="1"/><text x="59.0129%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.7629%" y="373" width="0.0793%" height="15" fill="rgb(243,14,50)" fg:x="741" fg:w="1"/><text x="59.0129%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.7629%" y="357" width="0.0793%" height="15" fill="rgb(240,2,53)" fg:x="741" fg:w="1"/><text x="59.0129%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.7629%" y="341" width="0.0793%" height="15" fill="rgb(208,47,53)" fg:x="741" fg:w="1"/><text x="59.0129%" y="351.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="58.6836%" y="581" width="0.3172%" height="15" fill="rgb(235,186,39)" fg:x="740" fg:w="4"/><text x="58.9336%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="58.6836%" y="565" width="0.3172%" height="15" fill="rgb(212,35,47)" fg:x="740" fg:w="4"/><text x="58.9336%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="58.7629%" y="549" width="0.2379%" height="15" fill="rgb(248,59,37)" fg:x="741" fg:w="3"/><text x="59.0129%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.7629%" y="533" width="0.2379%" height="15" fill="rgb(223,186,16)" fg:x="741" fg:w="3"/><text x="59.0129%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="58.7629%" y="517" width="0.2379%" height="15" fill="rgb(215,106,35)" fg:x="741" fg:w="3"/><text x="59.0129%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="58.7629%" y="501" width="0.2379%" height="15" fill="rgb(217,141,29)" fg:x="741" fg:w="3"/><text x="59.0129%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="58.7629%" y="485" width="0.2379%" height="15" fill="rgb(221,227,46)" fg:x="741" fg:w="3"/><text x="59.0129%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="58.7629%" y="469" width="0.2379%" height="15" fill="rgb(212,36,41)" fg:x="741" fg:w="3"/><text x="59.0129%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="58.7629%" y="453" width="0.2379%" height="15" fill="rgb(222,35,11)" fg:x="741" fg:w="3"/><text x="59.0129%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="58.8422%" y="437" width="0.1586%" height="15" fill="rgb(232,165,33)" fg:x="742" fg:w="2"/><text x="59.0922%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="58.8422%" y="421" width="0.1586%" height="15" fill="rgb(211,38,20)" fg:x="742" fg:w="2"/><text x="59.0922%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="59.0008%" y="581" width="0.0793%" height="15" fill="rgb(230,7,36)" fg:x="744" fg:w="1"/><text x="59.2508%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="59.0008%" y="565" width="0.0793%" height="15" fill="rgb(213,128,35)" fg:x="744" fg:w="1"/><text x="59.2508%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="59.0008%" y="549" width="0.0793%" height="15" fill="rgb(218,11,14)" fg:x="744" fg:w="1"/><text x="59.2508%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="59.0008%" y="533" width="0.0793%" height="15" fill="rgb(249,105,7)" fg:x="744" fg:w="1"/><text x="59.2508%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (9 samples, 0.71%)</title><rect x="58.5250%" y="613" width="0.7137%" height="15" fill="rgb(226,125,21)" fg:x="738" fg:w="9"/><text x="58.7750%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="58.6836%" y="597" width="0.5551%" height="15" fill="rgb(239,90,47)" fg:x="740" fg:w="7"/><text x="58.9336%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.0801%" y="581" width="0.1586%" height="15" fill="rgb(226,19,1)" fg:x="745" fg:w="2"/><text x="59.3301%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.0801%" y="565" width="0.1586%" height="15" fill="rgb(205,117,40)" fg:x="745" fg:w="2"/><text x="59.3301%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="59.0801%" y="549" width="0.1586%" height="15" fill="rgb(234,6,54)" fg:x="745" fg:w="2"/><text x="59.3301%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="59.0801%" y="533" width="0.1586%" height="15" fill="rgb(239,73,32)" fg:x="745" fg:w="2"/><text x="59.3301%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="59.0801%" y="517" width="0.1586%" height="15" fill="rgb(226,197,12)" fg:x="745" fg:w="2"/><text x="59.3301%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.0801%" y="501" width="0.1586%" height="15" fill="rgb(226,53,42)" fg:x="745" fg:w="2"/><text x="59.3301%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.0801%" y="485" width="0.1586%" height="15" fill="rgb(234,99,30)" fg:x="745" fg:w="2"/><text x="59.3301%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.3180%" y="581" width="0.1586%" height="15" fill="rgb(237,175,49)" fg:x="748" fg:w="2"/><text x="59.5680%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.3180%" y="565" width="0.1586%" height="15" fill="rgb(228,75,42)" fg:x="748" fg:w="2"/><text x="59.5680%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.3180%" y="549" width="0.1586%" height="15" fill="rgb(223,162,48)" fg:x="748" fg:w="2"/><text x="59.5680%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.3180%" y="533" width="0.1586%" height="15" fill="rgb(221,192,29)" fg:x="748" fg:w="2"/><text x="59.5680%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.3180%" y="517" width="0.1586%" height="15" fill="rgb(249,150,41)" fg:x="748" fg:w="2"/><text x="59.5680%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="59.3180%" y="501" width="0.1586%" height="15" fill="rgb(243,107,34)" fg:x="748" fg:w="2"/><text x="59.5680%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="59.3180%" y="485" width="0.1586%" height="15" fill="rgb(214,227,11)" fg:x="748" fg:w="2"/><text x="59.5680%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="59.3180%" y="469" width="0.1586%" height="15" fill="rgb(209,37,13)" fg:x="748" fg:w="2"/><text x="59.5680%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="59.3180%" y="453" width="0.1586%" height="15" fill="rgb(249,124,20)" fg:x="748" fg:w="2"/><text x="59.5680%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="59.3180%" y="437" width="0.1586%" height="15" fill="rgb(228,28,2)" fg:x="748" fg:w="2"/><text x="59.5680%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.4766%" y="581" width="0.0793%" height="15" fill="rgb(244,55,1)" fg:x="750" fg:w="1"/><text x="59.7266%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="59.5559%" y="581" width="0.1586%" height="15" fill="rgb(216,26,19)" fg:x="751" fg:w="2"/><text x="59.8059%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="59.5559%" y="565" width="0.1586%" height="15" fill="rgb(209,162,10)" fg:x="751" fg:w="2"/><text x="59.8059%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.6352%" y="549" width="0.0793%" height="15" fill="rgb(235,168,42)" fg:x="752" fg:w="1"/><text x="59.8852%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="59.6352%" y="533" width="0.0793%" height="15" fill="rgb(240,24,14)" fg:x="752" fg:w="1"/><text x="59.8852%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="59.6352%" y="517" width="0.0793%" height="15" fill="rgb(224,107,11)" fg:x="752" fg:w="1"/><text x="59.8852%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.6352%" y="501" width="0.0793%" height="15" fill="rgb(226,48,4)" fg:x="752" fg:w="1"/><text x="59.8852%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.7145%" y="581" width="0.1586%" height="15" fill="rgb(254,31,21)" fg:x="753" fg:w="2"/><text x="59.9645%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="59.7145%" y="565" width="0.1586%" height="15" fill="rgb(205,156,19)" fg:x="753" fg:w="2"/><text x="59.9645%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="59.7938%" y="549" width="0.0793%" height="15" fill="rgb(216,73,31)" fg:x="754" fg:w="1"/><text x="60.0438%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="59.8731%" y="549" width="0.0793%" height="15" fill="rgb(237,88,35)" fg:x="755" fg:w="1"/><text x="60.1231%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.9524%" y="549" width="0.0793%" height="15" fill="rgb(254,79,48)" fg:x="756" fg:w="1"/><text x="60.2024%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (13 samples, 1.03%)</title><rect x="59.2387%" y="613" width="1.0309%" height="15" fill="rgb(211,66,36)" fg:x="747" fg:w="13"/><text x="59.4887%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (13 samples, 1.03%)</title><rect x="59.2387%" y="597" width="1.0309%" height="15" fill="rgb(222,13,1)" fg:x="747" fg:w="13"/><text x="59.4887%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (5 samples, 0.40%)</title><rect x="59.8731%" y="581" width="0.3965%" height="15" fill="rgb(221,216,41)" fg:x="755" fg:w="5"/><text x="60.1231%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="59.8731%" y="565" width="0.3965%" height="15" fill="rgb(220,10,17)" fg:x="755" fg:w="5"/><text x="60.1231%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="60.0317%" y="549" width="0.2379%" height="15" fill="rgb(242,43,35)" fg:x="757" fg:w="3"/><text x="60.2817%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="60.0317%" y="533" width="0.2379%" height="15" fill="rgb(216,182,18)" fg:x="757" fg:w="3"/><text x="60.2817%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="60.0317%" y="517" width="0.2379%" height="15" fill="rgb(246,217,36)" fg:x="757" fg:w="3"/><text x="60.2817%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.1903%" y="501" width="0.0793%" height="15" fill="rgb(208,107,8)" fg:x="759" fg:w="1"/><text x="60.4403%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="60.2696%" y="517" width="0.0793%" height="15" fill="rgb(208,189,15)" fg:x="760" fg:w="1"/><text x="60.5196%" y="527.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="60.2696%" y="501" width="0.0793%" height="15" fill="rgb(211,70,9)" fg:x="760" fg:w="1"/><text x="60.5196%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.2696%" y="485" width="0.0793%" height="15" fill="rgb(217,95,34)" fg:x="760" fg:w="1"/><text x="60.5196%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.2696%" y="469" width="0.0793%" height="15" fill="rgb(240,223,2)" fg:x="760" fg:w="1"/><text x="60.5196%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.2696%" y="453" width="0.0793%" height="15" fill="rgb(231,18,6)" fg:x="760" fg:w="1"/><text x="60.5196%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.2696%" y="437" width="0.0793%" height="15" fill="rgb(254,44,46)" fg:x="760" fg:w="1"/><text x="60.5196%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.2696%" y="421" width="0.0793%" height="15" fill="rgb(223,222,46)" fg:x="760" fg:w="1"/><text x="60.5196%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.2696%" y="405" width="0.0793%" height="15" fill="rgb(229,163,13)" fg:x="760" fg:w="1"/><text x="60.5196%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.2696%" y="389" width="0.0793%" height="15" fill="rgb(220,208,13)" fg:x="760" fg:w="1"/><text x="60.5196%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.2696%" y="373" width="0.0793%" height="15" fill="rgb(244,28,53)" fg:x="760" fg:w="1"/><text x="60.5196%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.2696%" y="357" width="0.0793%" height="15" fill="rgb(243,138,0)" fg:x="760" fg:w="1"/><text x="60.5196%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.2696%" y="341" width="0.0793%" height="15" fill="rgb(209,90,49)" fg:x="760" fg:w="1"/><text x="60.5196%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.2696%" y="325" width="0.0793%" height="15" fill="rgb(247,114,18)" fg:x="760" fg:w="1"/><text x="60.5196%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.2696%" y="309" width="0.0793%" height="15" fill="rgb(221,14,46)" fg:x="760" fg:w="1"/><text x="60.5196%" y="319.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="60.2696%" y="597" width="0.1586%" height="15" fill="rgb(215,29,23)" fg:x="760" fg:w="2"/><text x="60.5196%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="60.2696%" y="581" width="0.1586%" height="15" fill="rgb(241,37,25)" fg:x="760" fg:w="2"/><text x="60.5196%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="60.2696%" y="565" width="0.1586%" height="15" fill="rgb(225,17,22)" fg:x="760" fg:w="2"/><text x="60.5196%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="60.2696%" y="549" width="0.1586%" height="15" fill="rgb(241,182,7)" fg:x="760" fg:w="2"/><text x="60.5196%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="60.2696%" y="533" width="0.1586%" height="15" fill="rgb(248,125,10)" fg:x="760" fg:w="2"/><text x="60.5196%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="60.3489%" y="517" width="0.0793%" height="15" fill="rgb(250,3,37)" fg:x="761" fg:w="1"/><text x="60.5989%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="60.3489%" y="501" width="0.0793%" height="15" fill="rgb(237,102,7)" fg:x="761" fg:w="1"/><text x="60.5989%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="60.3489%" y="485" width="0.0793%" height="15" fill="rgb(235,5,5)" fg:x="761" fg:w="1"/><text x="60.5989%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="60.3489%" y="469" width="0.0793%" height="15" fill="rgb(249,147,38)" fg:x="761" fg:w="1"/><text x="60.5989%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="60.3489%" y="453" width="0.0793%" height="15" fill="rgb(221,25,18)" fg:x="761" fg:w="1"/><text x="60.5989%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="60.3489%" y="437" width="0.0793%" height="15" fill="rgb(211,88,9)" fg:x="761" fg:w="1"/><text x="60.5989%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="60.3489%" y="421" width="0.0793%" height="15" fill="rgb(219,62,54)" fg:x="761" fg:w="1"/><text x="60.5989%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="60.3489%" y="405" width="0.0793%" height="15" fill="rgb(243,133,46)" fg:x="761" fg:w="1"/><text x="60.5989%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="60.3489%" y="389" width="0.0793%" height="15" fill="rgb(214,168,53)" fg:x="761" fg:w="1"/><text x="60.5989%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="60.3489%" y="373" width="0.0793%" height="15" fill="rgb(250,58,7)" fg:x="761" fg:w="1"/><text x="60.5989%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="60.3489%" y="357" width="0.0793%" height="15" fill="rgb(249,131,5)" fg:x="761" fg:w="1"/><text x="60.5989%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="60.3489%" y="341" width="0.0793%" height="15" fill="rgb(234,40,44)" fg:x="761" fg:w="1"/><text x="60.5989%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="60.3489%" y="325" width="0.0793%" height="15" fill="rgb(225,188,42)" fg:x="761" fg:w="1"/><text x="60.5989%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="60.3489%" y="309" width="0.0793%" height="15" fill="rgb(218,201,51)" fg:x="761" fg:w="1"/><text x="60.5989%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="60.3489%" y="293" width="0.0793%" height="15" fill="rgb(214,209,38)" fg:x="761" fg:w="1"/><text x="60.5989%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="60.3489%" y="277" width="0.0793%" height="15" fill="rgb(217,0,20)" fg:x="761" fg:w="1"/><text x="60.5989%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="60.3489%" y="261" width="0.0793%" height="15" fill="rgb(248,183,46)" fg:x="761" fg:w="1"/><text x="60.5989%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="60.3489%" y="245" width="0.0793%" height="15" fill="rgb(208,99,41)" fg:x="761" fg:w="1"/><text x="60.5989%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="60.3489%" y="229" width="0.0793%" height="15" fill="rgb(210,189,49)" fg:x="761" fg:w="1"/><text x="60.5989%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="60.3489%" y="213" width="0.0793%" height="15" fill="rgb(239,191,42)" fg:x="761" fg:w="1"/><text x="60.5989%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="60.3489%" y="197" width="0.0793%" height="15" fill="rgb(240,138,26)" fg:x="761" fg:w="1"/><text x="60.5989%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="60.3489%" y="181" width="0.0793%" height="15" fill="rgb(234,45,22)" fg:x="761" fg:w="1"/><text x="60.5989%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="60.3489%" y="165" width="0.0793%" height="15" fill="rgb(228,43,35)" fg:x="761" fg:w="1"/><text x="60.5989%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="60.3489%" y="149" width="0.0793%" height="15" fill="rgb(215,201,54)" fg:x="761" fg:w="1"/><text x="60.5989%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="60.3489%" y="133" width="0.0793%" height="15" fill="rgb(209,60,31)" fg:x="761" fg:w="1"/><text x="60.5989%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="60.3489%" y="117" width="0.0793%" height="15" fill="rgb(232,66,12)" fg:x="761" fg:w="1"/><text x="60.5989%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="60.3489%" y="101" width="0.0793%" height="15" fill="rgb(244,78,24)" fg:x="761" fg:w="1"/><text x="60.5989%" y="111.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.4282%" y="549" width="0.0793%" height="15" fill="rgb(249,65,27)" fg:x="762" fg:w="1"/><text x="60.6782%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="60.5075%" y="549" width="0.0793%" height="15" fill="rgb(208,218,19)" fg:x="763" fg:w="1"/><text x="60.7575%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.5075%" y="533" width="0.0793%" height="15" fill="rgb(212,181,38)" fg:x="763" fg:w="1"/><text x="60.7575%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="60.5868%" y="549" width="0.0793%" height="15" fill="rgb(207,118,40)" fg:x="764" fg:w="1"/><text x="60.8368%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="60.5868%" y="533" width="0.0793%" height="15" fill="rgb(207,126,20)" fg:x="764" fg:w="1"/><text x="60.8368%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.7454%" y="453" width="0.0793%" height="15" fill="rgb(232,15,46)" fg:x="766" fg:w="1"/><text x="60.9954%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7454%" y="437" width="0.0793%" height="15" fill="rgb(254,33,30)" fg:x="766" fg:w="1"/><text x="60.9954%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7454%" y="421" width="0.0793%" height="15" fill="rgb(233,92,20)" fg:x="766" fg:w="1"/><text x="60.9954%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.7454%" y="405" width="0.0793%" height="15" fill="rgb(225,195,54)" fg:x="766" fg:w="1"/><text x="60.9954%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.7454%" y="389" width="0.0793%" height="15" fill="rgb(208,196,7)" fg:x="766" fg:w="1"/><text x="60.9954%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.7454%" y="373" width="0.0793%" height="15" fill="rgb(253,19,35)" fg:x="766" fg:w="1"/><text x="60.9954%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.7454%" y="357" width="0.0793%" height="15" fill="rgb(228,180,1)" fg:x="766" fg:w="1"/><text x="60.9954%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.7454%" y="341" width="0.0793%" height="15" fill="rgb(248,35,18)" fg:x="766" fg:w="1"/><text x="60.9954%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.7454%" y="325" width="0.0793%" height="15" fill="rgb(220,34,8)" fg:x="766" fg:w="1"/><text x="60.9954%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.7454%" y="309" width="0.0793%" height="15" fill="rgb(219,223,17)" fg:x="766" fg:w="1"/><text x="60.9954%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.7454%" y="293" width="0.0793%" height="15" fill="rgb(223,183,15)" fg:x="766" fg:w="1"/><text x="60.9954%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.7454%" y="277" width="0.0793%" height="15" fill="rgb(253,184,45)" fg:x="766" fg:w="1"/><text x="60.9954%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.7454%" y="261" width="0.0793%" height="15" fill="rgb(207,97,29)" fg:x="766" fg:w="1"/><text x="60.9954%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.7454%" y="501" width="0.1586%" height="15" fill="rgb(250,170,27)" fg:x="766" fg:w="2"/><text x="60.9954%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.7454%" y="485" width="0.1586%" height="15" fill="rgb(206,178,17)" fg:x="766" fg:w="2"/><text x="60.9954%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.7454%" y="469" width="0.1586%" height="15" fill="rgb(213,92,46)" fg:x="766" fg:w="2"/><text x="60.9954%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8247%" y="453" width="0.0793%" height="15" fill="rgb(223,114,30)" fg:x="767" fg:w="1"/><text x="61.0747%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8247%" y="437" width="0.0793%" height="15" fill="rgb(207,228,9)" fg:x="767" fg:w="1"/><text x="61.0747%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.8247%" y="421" width="0.0793%" height="15" fill="rgb(205,70,25)" fg:x="767" fg:w="1"/><text x="61.0747%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.8247%" y="405" width="0.0793%" height="15" fill="rgb(252,45,30)" fg:x="767" fg:w="1"/><text x="61.0747%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.8247%" y="389" width="0.0793%" height="15" fill="rgb(219,185,54)" fg:x="767" fg:w="1"/><text x="61.0747%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8247%" y="373" width="0.0793%" height="15" fill="rgb(219,208,54)" fg:x="767" fg:w="1"/><text x="61.0747%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8247%" y="357" width="0.0793%" height="15" fill="rgb(207,164,54)" fg:x="767" fg:w="1"/><text x="61.0747%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.8247%" y="341" width="0.0793%" height="15" fill="rgb(240,155,22)" fg:x="767" fg:w="1"/><text x="61.0747%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.8247%" y="325" width="0.0793%" height="15" fill="rgb(217,127,14)" fg:x="767" fg:w="1"/><text x="61.0747%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.8247%" y="309" width="0.0793%" height="15" fill="rgb(232,179,42)" fg:x="767" fg:w="1"/><text x="61.0747%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.8247%" y="293" width="0.0793%" height="15" fill="rgb(247,55,45)" fg:x="767" fg:w="1"/><text x="61.0747%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8247%" y="277" width="0.0793%" height="15" fill="rgb(217,11,18)" fg:x="767" fg:w="1"/><text x="61.0747%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="60.7454%" y="517" width="0.2379%" height="15" fill="rgb(227,127,4)" fg:x="766" fg:w="3"/><text x="60.9954%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.9040%" y="501" width="0.0793%" height="15" fill="rgb(217,97,45)" fg:x="768" fg:w="1"/><text x="61.1540%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.9040%" y="485" width="0.0793%" height="15" fill="rgb(250,135,20)" fg:x="768" fg:w="1"/><text x="61.1540%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.9040%" y="469" width="0.0793%" height="15" fill="rgb(224,213,26)" fg:x="768" fg:w="1"/><text x="61.1540%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.9040%" y="453" width="0.0793%" height="15" fill="rgb(237,86,25)" fg:x="768" fg:w="1"/><text x="61.1540%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.9040%" y="437" width="0.0793%" height="15" fill="rgb(251,105,18)" fg:x="768" fg:w="1"/><text x="61.1540%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.9040%" y="421" width="0.0793%" height="15" fill="rgb(246,124,25)" fg:x="768" fg:w="1"/><text x="61.1540%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.9040%" y="405" width="0.0793%" height="15" fill="rgb(210,90,3)" fg:x="768" fg:w="1"/><text x="61.1540%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.9040%" y="389" width="0.0793%" height="15" fill="rgb(249,40,31)" fg:x="768" fg:w="1"/><text x="61.1540%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.9040%" y="373" width="0.0793%" height="15" fill="rgb(231,228,1)" fg:x="768" fg:w="1"/><text x="61.1540%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.9040%" y="357" width="0.0793%" height="15" fill="rgb(242,25,49)" fg:x="768" fg:w="1"/><text x="61.1540%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.9040%" y="341" width="0.0793%" height="15" fill="rgb(224,142,22)" fg:x="768" fg:w="1"/><text x="61.1540%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.9040%" y="325" width="0.0793%" height="15" fill="rgb(228,106,29)" fg:x="768" fg:w="1"/><text x="61.1540%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.63%)</title><rect x="60.4282%" y="565" width="0.6344%" height="15" fill="rgb(207,2,15)" fg:x="762" fg:w="8"/><text x="60.6782%" y="575.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="60.6661%" y="549" width="0.3965%" height="15" fill="rgb(231,43,37)" fg:x="765" fg:w="5"/><text x="60.9161%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="60.6661%" y="533" width="0.3965%" height="15" fill="rgb(245,193,12)" fg:x="765" fg:w="5"/><text x="60.9161%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.9833%" y="517" width="0.0793%" height="15" fill="rgb(246,9,49)" fg:x="769" fg:w="1"/><text x="61.2333%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.9833%" y="501" width="0.0793%" height="15" fill="rgb(218,50,36)" fg:x="769" fg:w="1"/><text x="61.2333%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.9833%" y="485" width="0.0793%" height="15" fill="rgb(225,206,16)" fg:x="769" fg:w="1"/><text x="61.2333%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.9833%" y="469" width="0.0793%" height="15" fill="rgb(242,52,5)" fg:x="769" fg:w="1"/><text x="61.2333%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="60.9833%" y="453" width="0.0793%" height="15" fill="rgb(217,158,11)" fg:x="769" fg:w="1"/><text x="61.2333%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.9833%" y="437" width="0.0793%" height="15" fill="rgb(242,144,22)" fg:x="769" fg:w="1"/><text x="61.2333%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.9833%" y="421" width="0.0793%" height="15" fill="rgb(236,191,3)" fg:x="769" fg:w="1"/><text x="61.2333%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.9833%" y="405" width="0.0793%" height="15" fill="rgb(241,22,19)" fg:x="769" fg:w="1"/><text x="61.2333%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.9833%" y="389" width="0.0793%" height="15" fill="rgb(205,217,44)" fg:x="769" fg:w="1"/><text x="61.2333%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.9833%" y="373" width="0.0793%" height="15" fill="rgb(231,53,3)" fg:x="769" fg:w="1"/><text x="61.2333%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="60.9833%" y="357" width="0.0793%" height="15" fill="rgb(207,13,22)" fg:x="769" fg:w="1"/><text x="61.2333%" y="367.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="60.9833%" y="341" width="0.0793%" height="15" fill="rgb(234,62,29)" fg:x="769" fg:w="1"/><text x="61.2333%" y="351.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="60.9833%" y="325" width="0.0793%" height="15" fill="rgb(226,175,44)" fg:x="769" fg:w="1"/><text x="61.2333%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="61.0626%" y="549" width="0.0793%" height="15" fill="rgb(239,177,6)" fg:x="770" fg:w="1"/><text x="61.3126%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.0626%" y="533" width="0.0793%" height="15" fill="rgb(249,125,15)" fg:x="770" fg:w="1"/><text x="61.3126%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.1420%" y="469" width="0.0793%" height="15" fill="rgb(210,201,5)" fg:x="771" fg:w="1"/><text x="61.3920%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.1420%" y="453" width="0.0793%" height="15" fill="rgb(210,14,6)" fg:x="771" fg:w="1"/><text x="61.3920%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.1420%" y="437" width="0.0793%" height="15" fill="rgb(239,141,15)" fg:x="771" fg:w="1"/><text x="61.3920%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.1420%" y="421" width="0.0793%" height="15" fill="rgb(235,75,9)" fg:x="771" fg:w="1"/><text x="61.3920%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.1420%" y="405" width="0.0793%" height="15" fill="rgb(246,122,37)" fg:x="771" fg:w="1"/><text x="61.3920%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.1420%" y="389" width="0.0793%" height="15" fill="rgb(235,75,52)" fg:x="771" fg:w="1"/><text x="61.3920%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.1420%" y="373" width="0.0793%" height="15" fill="rgb(235,179,12)" fg:x="771" fg:w="1"/><text x="61.3920%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.1420%" y="357" width="0.0793%" height="15" fill="rgb(223,20,9)" fg:x="771" fg:w="1"/><text x="61.3920%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.1420%" y="341" width="0.0793%" height="15" fill="rgb(223,75,22)" fg:x="771" fg:w="1"/><text x="61.3920%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.1420%" y="325" width="0.0793%" height="15" fill="rgb(248,148,18)" fg:x="771" fg:w="1"/><text x="61.3920%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.1420%" y="309" width="0.0793%" height="15" fill="rgb(225,103,8)" fg:x="771" fg:w="1"/><text x="61.3920%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.1420%" y="293" width="0.0793%" height="15" fill="rgb(237,168,17)" fg:x="771" fg:w="1"/><text x="61.3920%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.1420%" y="277" width="0.0793%" height="15" fill="rgb(215,192,38)" fg:x="771" fg:w="1"/><text x="61.3920%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.1420%" y="261" width="0.0793%" height="15" fill="rgb(237,69,28)" fg:x="771" fg:w="1"/><text x="61.3920%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.1420%" y="501" width="0.1586%" height="15" fill="rgb(254,167,32)" fg:x="771" fg:w="2"/><text x="61.3920%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.1420%" y="485" width="0.1586%" height="15" fill="rgb(250,81,30)" fg:x="771" fg:w="2"/><text x="61.3920%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.2213%" y="469" width="0.0793%" height="15" fill="rgb(240,68,52)" fg:x="772" fg:w="1"/><text x="61.4713%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.2213%" y="453" width="0.0793%" height="15" fill="rgb(205,97,42)" fg:x="772" fg:w="1"/><text x="61.4713%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.2213%" y="437" width="0.0793%" height="15" fill="rgb(217,10,22)" fg:x="772" fg:w="1"/><text x="61.4713%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.2213%" y="421" width="0.0793%" height="15" fill="rgb(216,21,26)" fg:x="772" fg:w="1"/><text x="61.4713%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.2213%" y="405" width="0.0793%" height="15" fill="rgb(239,0,36)" fg:x="772" fg:w="1"/><text x="61.4713%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.2213%" y="389" width="0.0793%" height="15" fill="rgb(216,162,28)" fg:x="772" fg:w="1"/><text x="61.4713%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.2213%" y="373" width="0.0793%" height="15" fill="rgb(246,22,39)" fg:x="772" fg:w="1"/><text x="61.4713%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.2213%" y="357" width="0.0793%" height="15" fill="rgb(222,84,49)" fg:x="772" fg:w="1"/><text x="61.4713%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.2213%" y="341" width="0.0793%" height="15" fill="rgb(250,38,34)" fg:x="772" fg:w="1"/><text x="61.4713%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.2213%" y="325" width="0.0793%" height="15" fill="rgb(236,0,38)" fg:x="772" fg:w="1"/><text x="61.4713%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.2213%" y="309" width="0.0793%" height="15" fill="rgb(237,205,54)" fg:x="772" fg:w="1"/><text x="61.4713%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.2213%" y="293" width="0.0793%" height="15" fill="rgb(221,80,35)" fg:x="772" fg:w="1"/><text x="61.4713%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.1420%" y="517" width="0.2379%" height="15" fill="rgb(237,204,22)" fg:x="771" fg:w="3"/><text x="61.3920%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.3006%" y="501" width="0.0793%" height="15" fill="rgb(213,108,15)" fg:x="773" fg:w="1"/><text x="61.5506%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.3006%" y="485" width="0.0793%" height="15" fill="rgb(251,187,9)" fg:x="773" fg:w="1"/><text x="61.5506%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.3006%" y="469" width="0.0793%" height="15" fill="rgb(250,61,9)" fg:x="773" fg:w="1"/><text x="61.5506%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.3006%" y="453" width="0.0793%" height="15" fill="rgb(230,131,33)" fg:x="773" fg:w="1"/><text x="61.5506%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.3006%" y="437" width="0.0793%" height="15" fill="rgb(239,117,11)" fg:x="773" fg:w="1"/><text x="61.5506%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.3006%" y="421" width="0.0793%" height="15" fill="rgb(222,112,44)" fg:x="773" fg:w="1"/><text x="61.5506%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.3006%" y="405" width="0.0793%" height="15" fill="rgb(251,33,25)" fg:x="773" fg:w="1"/><text x="61.5506%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.3006%" y="389" width="0.0793%" height="15" fill="rgb(208,171,34)" fg:x="773" fg:w="1"/><text x="61.5506%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.3006%" y="373" width="0.0793%" height="15" fill="rgb(250,166,54)" fg:x="773" fg:w="1"/><text x="61.5506%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.3006%" y="357" width="0.0793%" height="15" fill="rgb(212,148,2)" fg:x="773" fg:w="1"/><text x="61.5506%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.3006%" y="341" width="0.0793%" height="15" fill="rgb(224,92,39)" fg:x="773" fg:w="1"/><text x="61.5506%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.3006%" y="325" width="0.0793%" height="15" fill="rgb(250,28,16)" fg:x="773" fg:w="1"/><text x="61.5506%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.3799%" y="517" width="0.0793%" height="15" fill="rgb(227,128,26)" fg:x="774" fg:w="1"/><text x="61.6299%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="61.3799%" y="501" width="0.0793%" height="15" fill="rgb(248,66,7)" fg:x="774" fg:w="1"/><text x="61.6299%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.3799%" y="485" width="0.0793%" height="15" fill="rgb(215,124,51)" fg:x="774" fg:w="1"/><text x="61.6299%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.3799%" y="469" width="0.0793%" height="15" fill="rgb(207,91,1)" fg:x="774" fg:w="1"/><text x="61.6299%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (14 samples, 1.11%)</title><rect x="60.4282%" y="597" width="1.1102%" height="15" fill="rgb(217,207,38)" fg:x="762" fg:w="14"/><text x="60.6782%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (14 samples, 1.11%)</title><rect x="60.4282%" y="581" width="1.1102%" height="15" fill="rgb(240,118,9)" fg:x="762" fg:w="14"/><text x="60.6782%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="61.0626%" y="565" width="0.4758%" height="15" fill="rgb(224,147,4)" fg:x="770" fg:w="6"/><text x="61.3126%" y="575.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="61.1420%" y="549" width="0.3965%" height="15" fill="rgb(205,105,13)" fg:x="771" fg:w="5"/><text x="61.3920%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="61.1420%" y="533" width="0.3965%" height="15" fill="rgb(251,78,39)" fg:x="771" fg:w="5"/><text x="61.3920%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.4592%" y="517" width="0.0793%" height="15" fill="rgb(225,60,44)" fg:x="775" fg:w="1"/><text x="61.7092%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.4592%" y="501" width="0.0793%" height="15" fill="rgb(221,228,40)" fg:x="775" fg:w="1"/><text x="61.7092%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.4592%" y="485" width="0.0793%" height="15" fill="rgb(215,104,30)" fg:x="775" fg:w="1"/><text x="61.7092%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.4592%" y="469" width="0.0793%" height="15" fill="rgb(206,183,3)" fg:x="775" fg:w="1"/><text x="61.7092%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="61.4592%" y="453" width="0.0793%" height="15" fill="rgb(236,199,25)" fg:x="775" fg:w="1"/><text x="61.7092%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.4592%" y="437" width="0.0793%" height="15" fill="rgb(230,107,29)" fg:x="775" fg:w="1"/><text x="61.7092%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.4592%" y="421" width="0.0793%" height="15" fill="rgb(216,12,37)" fg:x="775" fg:w="1"/><text x="61.7092%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.4592%" y="405" width="0.0793%" height="15" fill="rgb(238,165,28)" fg:x="775" fg:w="1"/><text x="61.7092%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (17 samples, 1.35%)</title><rect x="60.2696%" y="613" width="1.3481%" height="15" fill="rgb(226,173,5)" fg:x="760" fg:w="17"/><text x="60.5196%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="61.5385%" y="597" width="0.0793%" height="15" fill="rgb(229,9,37)" fg:x="776" fg:w="1"/><text x="61.7885%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="61.5385%" y="581" width="0.0793%" height="15" fill="rgb(252,194,43)" fg:x="776" fg:w="1"/><text x="61.7885%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="61.5385%" y="565" width="0.0793%" height="15" fill="rgb(215,58,45)" fg:x="776" fg:w="1"/><text x="61.7885%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="61.6178%" y="613" width="0.0793%" height="15" fill="rgb(218,34,51)" fg:x="777" fg:w="1"/><text x="61.8678%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="61.6971%" y="597" width="0.0793%" height="15" fill="rgb(230,104,27)" fg:x="778" fg:w="1"/><text x="61.9471%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="61.6971%" y="581" width="0.0793%" height="15" fill="rgb(250,9,6)" fg:x="778" fg:w="1"/><text x="61.9471%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.6971%" y="565" width="0.0793%" height="15" fill="rgb(245,10,16)" fg:x="778" fg:w="1"/><text x="61.9471%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="61.7764%" y="597" width="0.3172%" height="15" fill="rgb(227,182,27)" fg:x="779" fg:w="4"/><text x="62.0264%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="61.9350%" y="581" width="0.1586%" height="15" fill="rgb(225,91,37)" fg:x="781" fg:w="2"/><text x="62.1850%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.9350%" y="565" width="0.1586%" height="15" fill="rgb(240,16,41)" fg:x="781" fg:w="2"/><text x="62.1850%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.9350%" y="549" width="0.1586%" height="15" fill="rgb(214,108,54)" fg:x="781" fg:w="2"/><text x="62.1850%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.9350%" y="533" width="0.1586%" height="15" fill="rgb(253,65,28)" fg:x="781" fg:w="2"/><text x="62.1850%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.9350%" y="517" width="0.1586%" height="15" fill="rgb(246,105,4)" fg:x="781" fg:w="2"/><text x="62.1850%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.0936%" y="581" width="0.0793%" height="15" fill="rgb(223,163,37)" fg:x="783" fg:w="1"/><text x="62.3436%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.0936%" y="565" width="0.0793%" height="15" fill="rgb(206,202,31)" fg:x="783" fg:w="1"/><text x="62.3436%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="62.1729%" y="533" width="0.0793%" height="15" fill="rgb(241,202,54)" fg:x="784" fg:w="1"/><text x="62.4229%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (152 samples, 12.05%)</title><rect x="50.4362%" y="645" width="12.0539%" height="15" fill="rgb(220,22,45)" fg:x="636" fg:w="152"/><text x="50.6862%" y="655.50">&lt;plugins_core::car..</text></g><g><title>plugins_core::location::change_location (58 samples, 4.60%)</title><rect x="57.8906%" y="629" width="4.5995%" height="15" fill="rgb(234,215,40)" fg:x="730" fg:w="58"/><text x="58.1406%" y="639.50">plugi..</text></g><g><title>plugins_core::location::Location::set (10 samples, 0.79%)</title><rect x="61.6971%" y="613" width="0.7930%" height="15" fill="rgb(220,3,5)" fg:x="778" fg:w="10"/><text x="61.9471%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="62.0936%" y="597" width="0.3965%" height="15" fill="rgb(210,8,15)" fg:x="783" fg:w="5"/><text x="62.3436%" y="607.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (4 samples, 0.32%)</title><rect x="62.1729%" y="581" width="0.3172%" height="15" fill="rgb(218,113,45)" fg:x="784" fg:w="4"/><text x="62.4229%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="62.1729%" y="565" width="0.3172%" height="15" fill="rgb(249,208,10)" fg:x="784" fg:w="4"/><text x="62.4229%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (4 samples, 0.32%)</title><rect x="62.1729%" y="549" width="0.3172%" height="15" fill="rgb(250,145,17)" fg:x="784" fg:w="4"/><text x="62.4229%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="62.2522%" y="533" width="0.2379%" height="15" fill="rgb(254,24,13)" fg:x="785" fg:w="3"/><text x="62.5022%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="62.3315%" y="517" width="0.1586%" height="15" fill="rgb(244,36,15)" fg:x="786" fg:w="2"/><text x="62.5815%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.7280%" y="565" width="0.0793%" height="15" fill="rgb(228,168,26)" fg:x="791" fg:w="1"/><text x="62.9780%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.7280%" y="549" width="0.0793%" height="15" fill="rgb(214,145,10)" fg:x="791" fg:w="1"/><text x="62.9780%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.7280%" y="533" width="0.0793%" height="15" fill="rgb(232,59,25)" fg:x="791" fg:w="1"/><text x="62.9780%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.7280%" y="517" width="0.0793%" height="15" fill="rgb(254,181,2)" fg:x="791" fg:w="1"/><text x="62.9780%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.7280%" y="501" width="0.0793%" height="15" fill="rgb(221,139,49)" fg:x="791" fg:w="1"/><text x="62.9780%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.7280%" y="485" width="0.0793%" height="15" fill="rgb(235,84,36)" fg:x="791" fg:w="1"/><text x="62.9780%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.7280%" y="469" width="0.0793%" height="15" fill="rgb(254,32,49)" fg:x="791" fg:w="1"/><text x="62.9780%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.7280%" y="453" width="0.0793%" height="15" fill="rgb(214,136,49)" fg:x="791" fg:w="1"/><text x="62.9780%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.7280%" y="437" width="0.0793%" height="15" fill="rgb(206,113,54)" fg:x="791" fg:w="1"/><text x="62.9780%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="62.7280%" y="421" width="0.0793%" height="15" fill="rgb(226,78,17)" fg:x="791" fg:w="1"/><text x="62.9780%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.7280%" y="405" width="0.0793%" height="15" fill="rgb(249,189,19)" fg:x="791" fg:w="1"/><text x="62.9780%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (4 samples, 0.32%)</title><rect x="62.5694%" y="613" width="0.3172%" height="15" fill="rgb(211,82,26)" fg:x="789" fg:w="4"/><text x="62.8194%" y="623.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="62.6487%" y="597" width="0.2379%" height="15" fill="rgb(206,131,52)" fg:x="790" fg:w="3"/><text x="62.8987%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="62.6487%" y="581" width="0.2379%" height="15" fill="rgb(223,51,24)" fg:x="790" fg:w="3"/><text x="62.8987%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.8073%" y="565" width="0.0793%" height="15" fill="rgb(235,93,36)" fg:x="792" fg:w="1"/><text x="63.0573%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.8073%" y="549" width="0.0793%" height="15" fill="rgb(219,118,14)" fg:x="792" fg:w="1"/><text x="63.0573%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.8073%" y="533" width="0.0793%" height="15" fill="rgb(240,145,10)" fg:x="792" fg:w="1"/><text x="63.0573%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.8073%" y="517" width="0.0793%" height="15" fill="rgb(241,104,15)" fg:x="792" fg:w="1"/><text x="63.0573%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.8073%" y="501" width="0.0793%" height="15" fill="rgb(248,117,21)" fg:x="792" fg:w="1"/><text x="63.0573%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.8073%" y="485" width="0.0793%" height="15" fill="rgb(250,184,34)" fg:x="792" fg:w="1"/><text x="63.0573%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.8073%" y="469" width="0.0793%" height="15" fill="rgb(218,169,23)" fg:x="792" fg:w="1"/><text x="63.0573%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.8073%" y="453" width="0.0793%" height="15" fill="rgb(214,33,53)" fg:x="792" fg:w="1"/><text x="63.0573%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.8073%" y="437" width="0.0793%" height="15" fill="rgb(239,78,4)" fg:x="792" fg:w="1"/><text x="63.0573%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.8073%" y="421" width="0.0793%" height="15" fill="rgb(250,25,23)" fg:x="792" fg:w="1"/><text x="63.0573%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="62.8073%" y="405" width="0.0793%" height="15" fill="rgb(220,205,51)" fg:x="792" fg:w="1"/><text x="63.0573%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.8866%" y="565" width="0.0793%" height="15" fill="rgb(252,115,2)" fg:x="793" fg:w="1"/><text x="63.1366%" y="575.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="62.8866%" y="549" width="0.0793%" height="15" fill="rgb(222,106,48)" fg:x="793" fg:w="1"/><text x="63.1366%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="62.8866%" y="533" width="0.0793%" height="15" fill="rgb(225,77,33)" fg:x="793" fg:w="1"/><text x="63.1366%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.9659%" y="565" width="0.0793%" height="15" fill="rgb(250,135,2)" fg:x="794" fg:w="1"/><text x="63.2159%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="62.9659%" y="549" width="0.0793%" height="15" fill="rgb(221,217,54)" fg:x="794" fg:w="1"/><text x="63.2159%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.9659%" y="533" width="0.0793%" height="15" fill="rgb(233,12,6)" fg:x="794" fg:w="1"/><text x="63.2159%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.0452%" y="501" width="0.0793%" height="15" fill="rgb(251,10,27)" fg:x="795" fg:w="1"/><text x="63.2952%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.0452%" y="485" width="0.0793%" height="15" fill="rgb(214,20,35)" fg:x="795" fg:w="1"/><text x="63.2952%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.2038%" y="469" width="0.0793%" height="15" fill="rgb(249,13,18)" fg:x="797" fg:w="1"/><text x="63.4538%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.2038%" y="453" width="0.0793%" height="15" fill="rgb(251,115,18)" fg:x="797" fg:w="1"/><text x="63.4538%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="62.8866%" y="613" width="0.4758%" height="15" fill="rgb(219,91,11)" fg:x="793" fg:w="6"/><text x="63.1366%" y="623.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="62.8866%" y="597" width="0.4758%" height="15" fill="rgb(238,130,14)" fg:x="793" fg:w="6"/><text x="63.1366%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="62.8866%" y="581" width="0.4758%" height="15" fill="rgb(216,197,46)" fg:x="793" fg:w="6"/><text x="63.1366%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="63.0452%" y="565" width="0.3172%" height="15" fill="rgb(239,113,46)" fg:x="795" fg:w="4"/><text x="63.2952%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="63.0452%" y="549" width="0.3172%" height="15" fill="rgb(220,76,52)" fg:x="795" fg:w="4"/><text x="63.2952%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="63.0452%" y="533" width="0.3172%" height="15" fill="rgb(247,167,28)" fg:x="795" fg:w="4"/><text x="63.2952%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="63.0452%" y="517" width="0.3172%" height="15" fill="rgb(228,6,44)" fg:x="795" fg:w="4"/><text x="63.2952%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="63.1245%" y="501" width="0.2379%" height="15" fill="rgb(214,75,23)" fg:x="796" fg:w="3"/><text x="63.3745%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.1245%" y="485" width="0.2379%" height="15" fill="rgb(241,211,28)" fg:x="796" fg:w="3"/><text x="63.3745%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.2831%" y="469" width="0.0793%" height="15" fill="rgb(216,147,39)" fg:x="798" fg:w="1"/><text x="63.5331%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.2831%" y="453" width="0.0793%" height="15" fill="rgb(237,121,45)" fg:x="798" fg:w="1"/><text x="63.5331%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.2831%" y="437" width="0.0793%" height="15" fill="rgb(214,115,15)" fg:x="798" fg:w="1"/><text x="63.5331%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.2831%" y="421" width="0.0793%" height="15" fill="rgb(253,132,27)" fg:x="798" fg:w="1"/><text x="63.5331%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.2831%" y="405" width="0.0793%" height="15" fill="rgb(222,56,1)" fg:x="798" fg:w="1"/><text x="63.5331%" y="415.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (11 samples, 0.87%)</title><rect x="62.5694%" y="629" width="0.8723%" height="15" fill="rgb(216,99,46)" fg:x="789" fg:w="11"/><text x="62.8194%" y="639.50"></text></g><g><title>plugins_core::looking::model::Unqualified::qualify (1 samples, 0.08%)</title><rect x="63.3624%" y="613" width="0.0793%" height="15" fill="rgb(232,1,9)" fg:x="799" fg:w="1"/><text x="63.6124%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="63.3624%" y="597" width="0.0793%" height="15" fill="rgb(215,41,52)" fg:x="799" fg:w="1"/><text x="63.6124%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.4417%" y="597" width="0.0793%" height="15" fill="rgb(223,107,41)" fg:x="800" fg:w="1"/><text x="63.6917%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.5210%" y="581" width="0.0793%" height="15" fill="rgb(208,151,32)" fg:x="801" fg:w="1"/><text x="63.7710%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="63.5210%" y="597" width="0.1586%" height="15" fill="rgb(229,32,3)" fg:x="801" fg:w="2"/><text x="63.7710%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.6003%" y="581" width="0.0793%" height="15" fill="rgb(234,186,36)" fg:x="802" fg:w="1"/><text x="63.8503%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="63.7589%" y="69" width="0.0793%" height="15" fill="rgb(216,9,5)" fg:x="804" fg:w="1"/><text x="64.0089%" y="79.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="63.7589%" y="53" width="0.0793%" height="15" fill="rgb(226,151,21)" fg:x="804" fg:w="1"/><text x="64.0089%" y="63.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="63.6796%" y="565" width="0.2379%" height="15" fill="rgb(210,130,28)" fg:x="803" fg:w="3"/><text x="63.9296%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="63.6796%" y="549" width="0.2379%" height="15" fill="rgb(239,58,31)" fg:x="803" fg:w="3"/><text x="63.9296%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="63.6796%" y="533" width="0.2379%" height="15" fill="rgb(213,14,0)" fg:x="803" fg:w="3"/><text x="63.9296%" y="543.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="63.6796%" y="517" width="0.2379%" height="15" fill="rgb(228,97,38)" fg:x="803" fg:w="3"/><text x="63.9296%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="63.6796%" y="501" width="0.2379%" height="15" fill="rgb(248,9,13)" fg:x="803" fg:w="3"/><text x="63.9296%" y="511.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="63.6796%" y="485" width="0.2379%" height="15" fill="rgb(233,149,17)" fg:x="803" fg:w="3"/><text x="63.9296%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="63.6796%" y="469" width="0.2379%" height="15" fill="rgb(233,127,53)" fg:x="803" fg:w="3"/><text x="63.9296%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="63.6796%" y="453" width="0.2379%" height="15" fill="rgb(207,120,37)" fg:x="803" fg:w="3"/><text x="63.9296%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="63.6796%" y="437" width="0.2379%" height="15" fill="rgb(210,65,38)" fg:x="803" fg:w="3"/><text x="63.9296%" y="447.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="63.6796%" y="421" width="0.2379%" height="15" fill="rgb(229,206,39)" fg:x="803" fg:w="3"/><text x="63.9296%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="63.6796%" y="405" width="0.2379%" height="15" fill="rgb(237,11,35)" fg:x="803" fg:w="3"/><text x="63.9296%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="63.6796%" y="389" width="0.2379%" height="15" fill="rgb(237,159,38)" fg:x="803" fg:w="3"/><text x="63.9296%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="63.6796%" y="373" width="0.2379%" height="15" fill="rgb(239,79,36)" fg:x="803" fg:w="3"/><text x="63.9296%" y="383.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="63.6796%" y="357" width="0.2379%" height="15" fill="rgb(231,163,51)" fg:x="803" fg:w="3"/><text x="63.9296%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="63.7589%" y="341" width="0.1586%" height="15" fill="rgb(226,68,29)" fg:x="804" fg:w="2"/><text x="64.0089%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="63.7589%" y="325" width="0.1586%" height="15" fill="rgb(250,192,3)" fg:x="804" fg:w="2"/><text x="64.0089%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="63.7589%" y="309" width="0.1586%" height="15" fill="rgb(206,11,13)" fg:x="804" fg:w="2"/><text x="64.0089%" y="319.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="63.7589%" y="293" width="0.1586%" height="15" fill="rgb(234,128,26)" fg:x="804" fg:w="2"/><text x="64.0089%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="63.7589%" y="277" width="0.1586%" height="15" fill="rgb(226,134,12)" fg:x="804" fg:w="2"/><text x="64.0089%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.16%)</title><rect x="63.7589%" y="261" width="0.1586%" height="15" fill="rgb(240,60,15)" fg:x="804" fg:w="2"/><text x="64.0089%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.16%)</title><rect x="63.7589%" y="245" width="0.1586%" height="15" fill="rgb(222,112,11)" fg:x="804" fg:w="2"/><text x="64.0089%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="63.7589%" y="229" width="0.1586%" height="15" fill="rgb(231,207,44)" fg:x="804" fg:w="2"/><text x="64.0089%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="63.7589%" y="213" width="0.1586%" height="15" fill="rgb(250,222,54)" fg:x="804" fg:w="2"/><text x="64.0089%" y="223.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="63.7589%" y="197" width="0.1586%" height="15" fill="rgb(243,223,15)" fg:x="804" fg:w="2"/><text x="64.0089%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="63.7589%" y="181" width="0.1586%" height="15" fill="rgb(239,2,5)" fg:x="804" fg:w="2"/><text x="64.0089%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="63.7589%" y="165" width="0.1586%" height="15" fill="rgb(241,83,27)" fg:x="804" fg:w="2"/><text x="64.0089%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="63.7589%" y="149" width="0.1586%" height="15" fill="rgb(223,175,51)" fg:x="804" fg:w="2"/><text x="64.0089%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="63.7589%" y="133" width="0.1586%" height="15" fill="rgb(209,11,47)" fg:x="804" fg:w="2"/><text x="64.0089%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="63.7589%" y="117" width="0.1586%" height="15" fill="rgb(249,60,43)" fg:x="804" fg:w="2"/><text x="64.0089%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="63.7589%" y="101" width="0.1586%" height="15" fill="rgb(244,84,47)" fg:x="804" fg:w="2"/><text x="64.0089%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="63.7589%" y="85" width="0.1586%" height="15" fill="rgb(241,110,24)" fg:x="804" fg:w="2"/><text x="64.0089%" y="95.50"></text></g><g><title>core::cmp::max (1 samples, 0.08%)</title><rect x="63.8382%" y="69" width="0.0793%" height="15" fill="rgb(236,79,1)" fg:x="805" fg:w="1"/><text x="64.0882%" y="79.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.08%)</title><rect x="63.8382%" y="53" width="0.0793%" height="15" fill="rgb(210,152,4)" fg:x="805" fg:w="1"/><text x="64.0882%" y="63.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.08%)</title><rect x="63.8382%" y="37" width="0.0793%" height="15" fill="rgb(218,71,19)" fg:x="805" fg:w="1"/><text x="64.0882%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="64.0761%" y="501" width="0.2379%" height="15" fill="rgb(207,161,51)" fg:x="808" fg:w="3"/><text x="64.3261%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="64.0761%" y="485" width="0.2379%" height="15" fill="rgb(219,84,54)" fg:x="808" fg:w="3"/><text x="64.3261%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="64.0761%" y="469" width="0.2379%" height="15" fill="rgb(243,172,34)" fg:x="808" fg:w="3"/><text x="64.3261%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="64.0761%" y="453" width="0.2379%" height="15" fill="rgb(233,181,1)" fg:x="808" fg:w="3"/><text x="64.3261%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="64.0761%" y="437" width="0.2379%" height="15" fill="rgb(236,21,18)" fg:x="808" fg:w="3"/><text x="64.3261%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="64.0761%" y="421" width="0.2379%" height="15" fill="rgb(244,165,15)" fg:x="808" fg:w="3"/><text x="64.3261%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="64.0761%" y="405" width="0.2379%" height="15" fill="rgb(235,75,19)" fg:x="808" fg:w="3"/><text x="64.3261%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="64.0761%" y="389" width="0.2379%" height="15" fill="rgb(217,229,29)" fg:x="808" fg:w="3"/><text x="64.3261%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="64.0761%" y="373" width="0.2379%" height="15" fill="rgb(250,200,19)" fg:x="808" fg:w="3"/><text x="64.3261%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="64.0761%" y="357" width="0.2379%" height="15" fill="rgb(218,195,36)" fg:x="808" fg:w="3"/><text x="64.3261%" y="367.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="64.0761%" y="341" width="0.2379%" height="15" fill="rgb(206,183,32)" fg:x="808" fg:w="3"/><text x="64.3261%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="64.0761%" y="325" width="0.2379%" height="15" fill="rgb(235,151,53)" fg:x="808" fg:w="3"/><text x="64.3261%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="63.9175%" y="533" width="0.4758%" height="15" fill="rgb(244,120,37)" fg:x="806" fg:w="6"/><text x="64.1675%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="63.9968%" y="517" width="0.3965%" height="15" fill="rgb(209,96,41)" fg:x="807" fg:w="5"/><text x="64.2468%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.3140%" y="501" width="0.0793%" height="15" fill="rgb(208,229,20)" fg:x="811" fg:w="1"/><text x="64.5640%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.3140%" y="485" width="0.0793%" height="15" fill="rgb(208,153,33)" fg:x="811" fg:w="1"/><text x="64.5640%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="64.3933%" y="533" width="0.1586%" height="15" fill="rgb(223,196,8)" fg:x="812" fg:w="2"/><text x="64.6433%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="64.3933%" y="517" width="0.1586%" height="15" fill="rgb(241,75,49)" fg:x="812" fg:w="2"/><text x="64.6433%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="64.3933%" y="501" width="0.1586%" height="15" fill="rgb(212,52,42)" fg:x="812" fg:w="2"/><text x="64.6433%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="64.3933%" y="485" width="0.1586%" height="15" fill="rgb(220,148,43)" fg:x="812" fg:w="2"/><text x="64.6433%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="64.3933%" y="469" width="0.1586%" height="15" fill="rgb(228,88,15)" fg:x="812" fg:w="2"/><text x="64.6433%" y="479.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (2 samples, 0.16%)</title><rect x="64.3933%" y="453" width="0.1586%" height="15" fill="rgb(213,87,14)" fg:x="812" fg:w="2"/><text x="64.6433%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.3933%" y="437" width="0.1586%" height="15" fill="rgb(220,198,31)" fg:x="812" fg:w="2"/><text x="64.6433%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.3933%" y="421" width="0.1586%" height="15" fill="rgb(223,165,38)" fg:x="812" fg:w="2"/><text x="64.6433%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="64.3933%" y="405" width="0.1586%" height="15" fill="rgb(247,56,48)" fg:x="812" fg:w="2"/><text x="64.6433%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="64.3933%" y="389" width="0.1586%" height="15" fill="rgb(222,150,13)" fg:x="812" fg:w="2"/><text x="64.6433%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="64.3933%" y="373" width="0.1586%" height="15" fill="rgb(218,214,11)" fg:x="812" fg:w="2"/><text x="64.6433%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.3933%" y="357" width="0.1586%" height="15" fill="rgb(246,111,16)" fg:x="812" fg:w="2"/><text x="64.6433%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.3933%" y="341" width="0.1586%" height="15" fill="rgb(250,127,26)" fg:x="812" fg:w="2"/><text x="64.6433%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="64.3933%" y="325" width="0.1586%" height="15" fill="rgb(237,156,23)" fg:x="812" fg:w="2"/><text x="64.6433%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="64.3933%" y="309" width="0.1586%" height="15" fill="rgb(215,143,51)" fg:x="812" fg:w="2"/><text x="64.6433%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="64.3933%" y="293" width="0.1586%" height="15" fill="rgb(209,119,39)" fg:x="812" fg:w="2"/><text x="64.6433%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="64.3933%" y="277" width="0.1586%" height="15" fill="rgb(228,181,16)" fg:x="812" fg:w="2"/><text x="64.6433%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.3933%" y="261" width="0.1586%" height="15" fill="rgb(236,113,51)" fg:x="812" fg:w="2"/><text x="64.6433%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="64.5519%" y="533" width="0.0793%" height="15" fill="rgb(223,132,1)" fg:x="814" fg:w="1"/><text x="64.8019%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="64.5519%" y="517" width="0.0793%" height="15" fill="rgb(227,4,54)" fg:x="814" fg:w="1"/><text x="64.8019%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.5519%" y="501" width="0.0793%" height="15" fill="rgb(254,72,52)" fg:x="814" fg:w="1"/><text x="64.8019%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="64.5519%" y="485" width="0.0793%" height="15" fill="rgb(252,104,52)" fg:x="814" fg:w="1"/><text x="64.8019%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="64.5519%" y="469" width="0.0793%" height="15" fill="rgb(251,146,26)" fg:x="814" fg:w="1"/><text x="64.8019%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.5519%" y="453" width="0.0793%" height="15" fill="rgb(214,146,19)" fg:x="814" fg:w="1"/><text x="64.8019%" y="463.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (13 samples, 1.03%)</title><rect x="63.6796%" y="597" width="1.0309%" height="15" fill="rgb(242,222,1)" fg:x="803" fg:w="13"/><text x="63.9296%" y="607.50"></text></g><g><title>plugins_core::tools::contained_by (13 samples, 1.03%)</title><rect x="63.6796%" y="581" width="1.0309%" height="15" fill="rgb(220,178,32)" fg:x="803" fg:w="13"/><text x="63.9296%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.79%)</title><rect x="63.9175%" y="565" width="0.7930%" height="15" fill="rgb(220,50,48)" fg:x="806" fg:w="10"/><text x="64.1675%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.79%)</title><rect x="63.9175%" y="549" width="0.7930%" height="15" fill="rgb(207,117,22)" fg:x="806" fg:w="10"/><text x="64.1675%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.6312%" y="533" width="0.0793%" height="15" fill="rgb(247,195,50)" fg:x="815" fg:w="1"/><text x="64.8812%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.6312%" y="517" width="0.0793%" height="15" fill="rgb(206,50,39)" fg:x="815" fg:w="1"/><text x="64.8812%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="64.6312%" y="501" width="0.0793%" height="15" fill="rgb(236,141,29)" fg:x="815" fg:w="1"/><text x="64.8812%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="64.6312%" y="485" width="0.0793%" height="15" fill="rgb(247,18,44)" fg:x="815" fg:w="1"/><text x="64.8812%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="64.6312%" y="469" width="0.0793%" height="15" fill="rgb(243,179,46)" fg:x="815" fg:w="1"/><text x="64.8812%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.6312%" y="453" width="0.0793%" height="15" fill="rgb(241,178,53)" fg:x="815" fg:w="1"/><text x="64.8812%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.6312%" y="437" width="0.0793%" height="15" fill="rgb(236,100,9)" fg:x="815" fg:w="1"/><text x="64.8812%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.6312%" y="421" width="0.0793%" height="15" fill="rgb(208,180,29)" fg:x="815" fg:w="1"/><text x="64.8812%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="64.7105%" y="533" width="0.0793%" height="15" fill="rgb(241,204,36)" fg:x="816" fg:w="1"/><text x="64.9605%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.7105%" y="517" width="0.0793%" height="15" fill="rgb(248,106,5)" fg:x="816" fg:w="1"/><text x="64.9605%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.7105%" y="501" width="0.0793%" height="15" fill="rgb(245,13,49)" fg:x="816" fg:w="1"/><text x="64.9605%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.8692%" y="485" width="0.1586%" height="15" fill="rgb(221,209,34)" fg:x="818" fg:w="2"/><text x="65.1192%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.8692%" y="469" width="0.1586%" height="15" fill="rgb(224,83,31)" fg:x="818" fg:w="2"/><text x="65.1192%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.8692%" y="453" width="0.1586%" height="15" fill="rgb(218,63,22)" fg:x="818" fg:w="2"/><text x="65.1192%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.9485%" y="437" width="0.0793%" height="15" fill="rgb(214,167,5)" fg:x="819" fg:w="1"/><text x="65.1985%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="64.8692%" y="501" width="0.3172%" height="15" fill="rgb(243,13,0)" fg:x="818" fg:w="4"/><text x="65.1192%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.0278%" y="485" width="0.1586%" height="15" fill="rgb(237,20,46)" fg:x="820" fg:w="2"/><text x="65.2778%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.1864%" y="501" width="0.0793%" height="15" fill="rgb(240,94,48)" fg:x="822" fg:w="1"/><text x="65.4364%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.3450%" y="373" width="0.0793%" height="15" fill="rgb(205,160,17)" fg:x="824" fg:w="1"/><text x="65.5950%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::name (10 samples, 0.79%)</title><rect x="64.7105%" y="565" width="0.7930%" height="15" fill="rgb(234,42,33)" fg:x="816" fg:w="10"/><text x="64.9605%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.79%)</title><rect x="64.7105%" y="549" width="0.7930%" height="15" fill="rgb(215,166,5)" fg:x="816" fg:w="10"/><text x="64.9605%" y="559.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.71%)</title><rect x="64.7898%" y="533" width="0.7137%" height="15" fill="rgb(215,9,6)" fg:x="817" fg:w="9"/><text x="65.0398%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.71%)</title><rect x="64.7898%" y="517" width="0.7137%" height="15" fill="rgb(212,53,6)" fg:x="817" fg:w="9"/><text x="65.0398%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="65.2657%" y="501" width="0.2379%" height="15" fill="rgb(249,157,19)" fg:x="823" fg:w="3"/><text x="65.5157%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.2657%" y="485" width="0.2379%" height="15" fill="rgb(222,212,45)" fg:x="823" fg:w="3"/><text x="65.5157%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.3450%" y="469" width="0.1586%" height="15" fill="rgb(232,155,17)" fg:x="824" fg:w="2"/><text x="65.5950%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.3450%" y="453" width="0.1586%" height="15" fill="rgb(212,159,50)" fg:x="824" fg:w="2"/><text x="65.5950%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="65.3450%" y="437" width="0.1586%" height="15" fill="rgb(247,71,8)" fg:x="824" fg:w="2"/><text x="65.5950%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.3450%" y="421" width="0.1586%" height="15" fill="rgb(239,128,29)" fg:x="824" fg:w="2"/><text x="65.5950%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.3450%" y="405" width="0.1586%" height="15" fill="rgb(227,117,11)" fg:x="824" fg:w="2"/><text x="65.5950%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.3450%" y="389" width="0.1586%" height="15" fill="rgb(247,183,4)" fg:x="824" fg:w="2"/><text x="65.5950%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.4243%" y="373" width="0.0793%" height="15" fill="rgb(211,161,41)" fg:x="825" fg:w="1"/><text x="65.6743%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.4243%" y="357" width="0.0793%" height="15" fill="rgb(250,157,52)" fg:x="825" fg:w="1"/><text x="65.6743%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="65.4243%" y="341" width="0.0793%" height="15" fill="rgb(249,118,26)" fg:x="825" fg:w="1"/><text x="65.6743%" y="351.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (12 samples, 0.95%)</title><rect x="64.7105%" y="597" width="0.9516%" height="15" fill="rgb(234,52,37)" fg:x="816" fg:w="12"/><text x="64.9605%" y="607.50"></text></g><g><title>plugins_core::finding::matches_description (12 samples, 0.95%)</title><rect x="64.7105%" y="581" width="0.9516%" height="15" fill="rgb(237,188,45)" fg:x="816" fg:w="12"/><text x="64.9605%" y="591.50"></text></g><g><title>plugins_core::finding::matches_string (2 samples, 0.16%)</title><rect x="65.5036%" y="565" width="0.1586%" height="15" fill="rgb(241,3,40)" fg:x="826" fg:w="2"/><text x="65.7536%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="65.5829%" y="549" width="0.0793%" height="15" fill="rgb(246,192,7)" fg:x="827" fg:w="1"/><text x="65.8329%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.6622%" y="581" width="0.1586%" height="15" fill="rgb(206,168,17)" fg:x="828" fg:w="2"/><text x="65.9122%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.6622%" y="565" width="0.1586%" height="15" fill="rgb(208,124,33)" fg:x="828" fg:w="2"/><text x="65.9122%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7415%" y="549" width="0.0793%" height="15" fill="rgb(226,186,11)" fg:x="829" fg:w="1"/><text x="65.9915%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.7415%" y="533" width="0.0793%" height="15" fill="rgb(218,223,1)" fg:x="829" fg:w="1"/><text x="65.9915%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.7415%" y="517" width="0.0793%" height="15" fill="rgb(254,65,21)" fg:x="829" fg:w="1"/><text x="65.9915%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.7415%" y="501" width="0.0793%" height="15" fill="rgb(239,63,32)" fg:x="829" fg:w="1"/><text x="65.9915%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7415%" y="485" width="0.0793%" height="15" fill="rgb(219,85,29)" fg:x="829" fg:w="1"/><text x="65.9915%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.7415%" y="469" width="0.0793%" height="15" fill="rgb(246,74,32)" fg:x="829" fg:w="1"/><text x="65.9915%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.7415%" y="453" width="0.0793%" height="15" fill="rgb(251,20,52)" fg:x="829" fg:w="1"/><text x="65.9915%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.7415%" y="437" width="0.0793%" height="15" fill="rgb(222,160,46)" fg:x="829" fg:w="1"/><text x="65.9915%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.7415%" y="421" width="0.0793%" height="15" fill="rgb(230,68,24)" fg:x="829" fg:w="1"/><text x="65.9915%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.7415%" y="405" width="0.0793%" height="15" fill="rgb(233,83,32)" fg:x="829" fg:w="1"/><text x="65.9915%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.7415%" y="389" width="0.0793%" height="15" fill="rgb(253,79,36)" fg:x="829" fg:w="1"/><text x="65.9915%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (31 samples, 2.46%)</title><rect x="63.4417%" y="629" width="2.4584%" height="15" fill="rgb(224,125,51)" fg:x="800" fg:w="31"/><text x="63.6917%" y="639.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (31 samples, 2.46%)</title><rect x="63.4417%" y="613" width="2.4584%" height="15" fill="rgb(254,158,3)" fg:x="800" fg:w="31"/><text x="63.6917%" y="623.50">&lt;p..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (3 samples, 0.24%)</title><rect x="65.6622%" y="597" width="0.2379%" height="15" fill="rgb(243,226,3)" fg:x="828" fg:w="3"/><text x="65.9122%" y="607.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="65.8208%" y="581" width="0.0793%" height="15" fill="rgb(208,37,10)" fg:x="830" fg:w="1"/><text x="66.0708%" y="591.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="65.8208%" y="565" width="0.0793%" height="15" fill="rgb(227,35,6)" fg:x="830" fg:w="1"/><text x="66.0708%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="65.9001%" y="629" width="0.0793%" height="15" fill="rgb(236,35,38)" fg:x="831" fg:w="1"/><text x="66.1501%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="65.9001%" y="613" width="0.0793%" height="15" fill="rgb(247,165,26)" fg:x="831" fg:w="1"/><text x="66.1501%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.9001%" y="597" width="0.0793%" height="15" fill="rgb(251,131,20)" fg:x="831" fg:w="1"/><text x="66.1501%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="65.9794%" y="581" width="0.0793%" height="15" fill="rgb(248,168,52)" fg:x="832" fg:w="1"/><text x="66.2294%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.9794%" y="565" width="0.0793%" height="15" fill="rgb(241,220,45)" fg:x="832" fg:w="1"/><text x="66.2294%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.2173%" y="485" width="0.0793%" height="15" fill="rgb(240,85,44)" fg:x="835" fg:w="1"/><text x="66.4673%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.2173%" y="469" width="0.0793%" height="15" fill="rgb(223,69,47)" fg:x="835" fg:w="1"/><text x="66.4673%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.1380%" y="549" width="0.2379%" height="15" fill="rgb(221,209,17)" fg:x="834" fg:w="3"/><text x="66.3880%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.1380%" y="533" width="0.2379%" height="15" fill="rgb(224,194,24)" fg:x="834" fg:w="3"/><text x="66.3880%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.1380%" y="517" width="0.2379%" height="15" fill="rgb(249,43,24)" fg:x="834" fg:w="3"/><text x="66.3880%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.1380%" y="501" width="0.2379%" height="15" fill="rgb(245,78,29)" fg:x="834" fg:w="3"/><text x="66.3880%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.2966%" y="485" width="0.0793%" height="15" fill="rgb(241,167,34)" fg:x="836" fg:w="1"/><text x="66.5466%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.3759%" y="549" width="0.0793%" height="15" fill="rgb(225,91,27)" fg:x="837" fg:w="1"/><text x="66.6259%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="66.3759%" y="533" width="0.0793%" height="15" fill="rgb(249,82,49)" fg:x="837" fg:w="1"/><text x="66.6259%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.3759%" y="517" width="0.0793%" height="15" fill="rgb(215,90,36)" fg:x="837" fg:w="1"/><text x="66.6259%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.3759%" y="501" width="0.0793%" height="15" fill="rgb(209,128,1)" fg:x="837" fg:w="1"/><text x="66.6259%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.3759%" y="485" width="0.0793%" height="15" fill="rgb(233,184,1)" fg:x="837" fg:w="1"/><text x="66.6259%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="66.4552%" y="453" width="0.0793%" height="15" fill="rgb(240,59,32)" fg:x="838" fg:w="1"/><text x="66.7052%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.5345%" y="421" width="0.0793%" height="15" fill="rgb(249,163,0)" fg:x="839" fg:w="1"/><text x="66.7845%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (9 samples, 0.71%)</title><rect x="65.9794%" y="597" width="0.7137%" height="15" fill="rgb(249,220,13)" fg:x="832" fg:w="9"/><text x="66.2294%" y="607.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.63%)</title><rect x="66.0587%" y="581" width="0.6344%" height="15" fill="rgb(235,127,52)" fg:x="833" fg:w="8"/><text x="66.3087%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.63%)</title><rect x="66.0587%" y="565" width="0.6344%" height="15" fill="rgb(229,172,26)" fg:x="833" fg:w="8"/><text x="66.3087%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="66.4552%" y="549" width="0.2379%" height="15" fill="rgb(217,37,29)" fg:x="838" fg:w="3"/><text x="66.7052%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.4552%" y="533" width="0.2379%" height="15" fill="rgb(208,66,47)" fg:x="838" fg:w="3"/><text x="66.7052%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="66.4552%" y="517" width="0.2379%" height="15" fill="rgb(221,99,19)" fg:x="838" fg:w="3"/><text x="66.7052%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.4552%" y="501" width="0.2379%" height="15" fill="rgb(214,149,49)" fg:x="838" fg:w="3"/><text x="66.7052%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="66.4552%" y="485" width="0.2379%" height="15" fill="rgb(229,91,37)" fg:x="838" fg:w="3"/><text x="66.7052%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="66.4552%" y="469" width="0.2379%" height="15" fill="rgb(207,159,48)" fg:x="838" fg:w="3"/><text x="66.7052%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.5345%" y="453" width="0.1586%" height="15" fill="rgb(209,125,46)" fg:x="839" fg:w="2"/><text x="66.7845%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.5345%" y="437" width="0.1586%" height="15" fill="rgb(211,188,18)" fg:x="839" fg:w="2"/><text x="66.7845%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.6138%" y="421" width="0.0793%" height="15" fill="rgb(207,203,34)" fg:x="840" fg:w="1"/><text x="66.8638%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="66.7724%" y="581" width="0.0793%" height="15" fill="rgb(245,182,16)" fg:x="842" fg:w="1"/><text x="67.0224%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.7724%" y="565" width="0.0793%" height="15" fill="rgb(210,66,30)" fg:x="842" fg:w="1"/><text x="67.0224%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.9310%" y="533" width="0.1586%" height="15" fill="rgb(230,110,14)" fg:x="844" fg:w="2"/><text x="67.1810%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.9310%" y="517" width="0.1586%" height="15" fill="rgb(242,198,32)" fg:x="844" fg:w="2"/><text x="67.1810%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.9310%" y="501" width="0.1586%" height="15" fill="rgb(213,45,23)" fg:x="844" fg:w="2"/><text x="67.1810%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.9310%" y="485" width="0.1586%" height="15" fill="rgb(205,76,9)" fg:x="844" fg:w="2"/><text x="67.1810%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0103%" y="469" width="0.0793%" height="15" fill="rgb(250,200,25)" fg:x="845" fg:w="1"/><text x="67.2603%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0103%" y="453" width="0.0793%" height="15" fill="rgb(221,161,23)" fg:x="845" fg:w="1"/><text x="67.2603%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.0103%" y="437" width="0.0793%" height="15" fill="rgb(226,135,48)" fg:x="845" fg:w="1"/><text x="67.2603%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.0103%" y="421" width="0.0793%" height="15" fill="rgb(228,33,6)" fg:x="845" fg:w="1"/><text x="67.2603%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.0103%" y="405" width="0.0793%" height="15" fill="rgb(237,224,9)" fg:x="845" fg:w="1"/><text x="67.2603%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.0103%" y="389" width="0.0793%" height="15" fill="rgb(251,61,40)" fg:x="845" fg:w="1"/><text x="67.2603%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.0103%" y="373" width="0.0793%" height="15" fill="rgb(220,222,2)" fg:x="845" fg:w="1"/><text x="67.2603%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.0103%" y="357" width="0.0793%" height="15" fill="rgb(238,4,8)" fg:x="845" fg:w="1"/><text x="67.2603%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.0103%" y="341" width="0.0793%" height="15" fill="rgb(240,153,3)" fg:x="845" fg:w="1"/><text x="67.2603%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.0103%" y="325" width="0.0793%" height="15" fill="rgb(245,29,24)" fg:x="845" fg:w="1"/><text x="67.2603%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.0103%" y="309" width="0.0793%" height="15" fill="rgb(231,220,37)" fg:x="845" fg:w="1"/><text x="67.2603%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.0103%" y="293" width="0.0793%" height="15" fill="rgb(245,33,10)" fg:x="845" fg:w="1"/><text x="67.2603%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (15 samples, 1.19%)</title><rect x="65.9794%" y="629" width="1.1895%" height="15" fill="rgb(220,227,43)" fg:x="832" fg:w="15"/><text x="66.2294%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (15 samples, 1.19%)</title><rect x="65.9794%" y="613" width="1.1895%" height="15" fill="rgb(215,183,54)" fg:x="832" fg:w="15"/><text x="66.2294%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="66.6931%" y="597" width="0.4758%" height="15" fill="rgb(242,80,26)" fg:x="841" fg:w="6"/><text x="66.9431%" y="607.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="66.8517%" y="581" width="0.3172%" height="15" fill="rgb(206,172,49)" fg:x="843" fg:w="4"/><text x="67.1017%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="66.8517%" y="565" width="0.3172%" height="15" fill="rgb(249,0,10)" fg:x="843" fg:w="4"/><text x="67.1017%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="66.9310%" y="549" width="0.2379%" height="15" fill="rgb(246,171,19)" fg:x="844" fg:w="3"/><text x="67.1810%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0896%" y="533" width="0.0793%" height="15" fill="rgb(236,25,43)" fg:x="846" fg:w="1"/><text x="67.3396%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.0896%" y="517" width="0.0793%" height="15" fill="rgb(225,146,20)" fg:x="846" fg:w="1"/><text x="67.3396%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.0896%" y="501" width="0.0793%" height="15" fill="rgb(243,50,39)" fg:x="846" fg:w="1"/><text x="67.3396%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.0896%" y="485" width="0.0793%" height="15" fill="rgb(239,153,27)" fg:x="846" fg:w="1"/><text x="67.3396%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.0896%" y="469" width="0.0793%" height="15" fill="rgb(208,164,31)" fg:x="846" fg:w="1"/><text x="67.3396%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.0896%" y="453" width="0.0793%" height="15" fill="rgb(231,32,38)" fg:x="846" fg:w="1"/><text x="67.3396%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.0896%" y="437" width="0.0793%" height="15" fill="rgb(247,158,12)" fg:x="846" fg:w="1"/><text x="67.3396%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.0896%" y="421" width="0.0793%" height="15" fill="rgb(254,126,16)" fg:x="846" fg:w="1"/><text x="67.3396%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.0896%" y="405" width="0.0793%" height="15" fill="rgb(246,12,32)" fg:x="846" fg:w="1"/><text x="67.3396%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.0896%" y="389" width="0.0793%" height="15" fill="rgb(245,190,44)" fg:x="846" fg:w="1"/><text x="67.3396%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.0896%" y="373" width="0.0793%" height="15" fill="rgb(253,148,49)" fg:x="846" fg:w="1"/><text x="67.3396%" y="383.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="67.1689%" y="629" width="0.0793%" height="15" fill="rgb(232,193,44)" fg:x="847" fg:w="1"/><text x="67.4189%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="67.1689%" y="613" width="0.0793%" height="15" fill="rgb(212,67,50)" fg:x="847" fg:w="1"/><text x="67.4189%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="67.1689%" y="597" width="0.0793%" height="15" fill="rgb(235,109,24)" fg:x="847" fg:w="1"/><text x="67.4189%" y="607.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="67.1689%" y="581" width="0.0793%" height="15" fill="rgb(242,228,23)" fg:x="847" fg:w="1"/><text x="67.4189%" y="591.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="67.1689%" y="565" width="0.0793%" height="15" fill="rgb(232,48,19)" fg:x="847" fg:w="1"/><text x="67.4189%" y="575.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="67.1689%" y="549" width="0.0793%" height="15" fill="rgb(221,167,25)" fg:x="847" fg:w="1"/><text x="67.4189%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.3275%" y="469" width="0.0793%" height="15" fill="rgb(220,29,38)" fg:x="849" fg:w="1"/><text x="67.5775%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3275%" y="453" width="0.0793%" height="15" fill="rgb(245,95,26)" fg:x="849" fg:w="1"/><text x="67.5775%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3275%" y="437" width="0.0793%" height="15" fill="rgb(227,189,38)" fg:x="849" fg:w="1"/><text x="67.5775%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.3275%" y="421" width="0.0793%" height="15" fill="rgb(231,212,22)" fg:x="849" fg:w="1"/><text x="67.5775%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.3275%" y="405" width="0.0793%" height="15" fill="rgb(246,25,46)" fg:x="849" fg:w="1"/><text x="67.5775%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.3275%" y="389" width="0.0793%" height="15" fill="rgb(218,90,32)" fg:x="849" fg:w="1"/><text x="67.5775%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="67.3275%" y="373" width="0.0793%" height="15" fill="rgb(207,89,34)" fg:x="849" fg:w="1"/><text x="67.5775%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="67.3275%" y="357" width="0.0793%" height="15" fill="rgb(222,30,54)" fg:x="849" fg:w="1"/><text x="67.5775%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.4068%" y="389" width="0.0793%" height="15" fill="rgb(224,229,32)" fg:x="850" fg:w="1"/><text x="67.6568%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.4068%" y="373" width="0.0793%" height="15" fill="rgb(209,188,44)" fg:x="850" fg:w="1"/><text x="67.6568%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.4068%" y="357" width="0.0793%" height="15" fill="rgb(215,174,23)" fg:x="850" fg:w="1"/><text x="67.6568%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.4068%" y="341" width="0.0793%" height="15" fill="rgb(242,104,18)" fg:x="850" fg:w="1"/><text x="67.6568%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.4068%" y="325" width="0.0793%" height="15" fill="rgb(240,173,53)" fg:x="850" fg:w="1"/><text x="67.6568%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.4068%" y="309" width="0.0793%" height="15" fill="rgb(240,105,45)" fg:x="850" fg:w="1"/><text x="67.6568%" y="319.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="67.4068%" y="293" width="0.0793%" height="15" fill="rgb(252,164,29)" fg:x="850" fg:w="1"/><text x="67.6568%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="67.3275%" y="533" width="0.2379%" height="15" fill="rgb(217,17,6)" fg:x="849" fg:w="3"/><text x="67.5775%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="67.3275%" y="517" width="0.2379%" height="15" fill="rgb(245,27,23)" fg:x="849" fg:w="3"/><text x="67.5775%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="67.3275%" y="501" width="0.2379%" height="15" fill="rgb(239,73,33)" fg:x="849" fg:w="3"/><text x="67.5775%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="67.3275%" y="485" width="0.2379%" height="15" fill="rgb(209,140,21)" fg:x="849" fg:w="3"/><text x="67.5775%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.4068%" y="469" width="0.1586%" height="15" fill="rgb(206,36,53)" fg:x="850" fg:w="2"/><text x="67.6568%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="67.4068%" y="453" width="0.1586%" height="15" fill="rgb(238,134,8)" fg:x="850" fg:w="2"/><text x="67.6568%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="67.4068%" y="437" width="0.1586%" height="15" fill="rgb(209,3,20)" fg:x="850" fg:w="2"/><text x="67.6568%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="67.4068%" y="421" width="0.1586%" height="15" fill="rgb(208,101,32)" fg:x="850" fg:w="2"/><text x="67.6568%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="67.4068%" y="405" width="0.1586%" height="15" fill="rgb(253,56,38)" fg:x="850" fg:w="2"/><text x="67.6568%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="67.4861%" y="389" width="0.0793%" height="15" fill="rgb(209,85,49)" fg:x="851" fg:w="1"/><text x="67.7361%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="67.4861%" y="373" width="0.0793%" height="15" fill="rgb(234,177,21)" fg:x="851" fg:w="1"/><text x="67.7361%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="67.3275%" y="581" width="0.3172%" height="15" fill="rgb(250,4,6)" fg:x="849" fg:w="4"/><text x="67.5775%" y="591.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="67.3275%" y="565" width="0.3172%" height="15" fill="rgb(240,153,10)" fg:x="849" fg:w="4"/><text x="67.5775%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="67.3275%" y="549" width="0.3172%" height="15" fill="rgb(205,136,51)" fg:x="849" fg:w="4"/><text x="67.5775%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.5654%" y="533" width="0.0793%" height="15" fill="rgb(245,165,50)" fg:x="852" fg:w="1"/><text x="67.8154%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5654%" y="517" width="0.0793%" height="15" fill="rgb(211,28,10)" fg:x="852" fg:w="1"/><text x="67.8154%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.5654%" y="501" width="0.0793%" height="15" fill="rgb(218,155,54)" fg:x="852" fg:w="1"/><text x="67.8154%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5654%" y="485" width="0.0793%" height="15" fill="rgb(254,214,30)" fg:x="852" fg:w="1"/><text x="67.8154%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.5654%" y="469" width="0.0793%" height="15" fill="rgb(248,200,10)" fg:x="852" fg:w="1"/><text x="67.8154%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5654%" y="453" width="0.0793%" height="15" fill="rgb(238,219,45)" fg:x="852" fg:w="1"/><text x="67.8154%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.5654%" y="437" width="0.0793%" height="15" fill="rgb(227,35,34)" fg:x="852" fg:w="1"/><text x="67.8154%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5654%" y="421" width="0.0793%" height="15" fill="rgb(214,187,37)" fg:x="852" fg:w="1"/><text x="67.8154%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.5654%" y="405" width="0.0793%" height="15" fill="rgb(247,164,44)" fg:x="852" fg:w="1"/><text x="67.8154%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.5654%" y="389" width="0.0793%" height="15" fill="rgb(238,198,10)" fg:x="852" fg:w="1"/><text x="67.8154%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.6447%" y="485" width="0.0793%" height="15" fill="rgb(213,69,8)" fg:x="853" fg:w="1"/><text x="67.8947%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.6447%" y="469" width="0.0793%" height="15" fill="rgb(222,82,16)" fg:x="853" fg:w="1"/><text x="67.8947%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.6447%" y="453" width="0.0793%" height="15" fill="rgb(205,172,30)" fg:x="853" fg:w="1"/><text x="67.8947%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.6447%" y="437" width="0.0793%" height="15" fill="rgb(227,39,8)" fg:x="853" fg:w="1"/><text x="67.8947%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.6447%" y="421" width="0.0793%" height="15" fill="rgb(249,10,19)" fg:x="853" fg:w="1"/><text x="67.8947%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.6447%" y="405" width="0.0793%" height="15" fill="rgb(205,158,53)" fg:x="853" fg:w="1"/><text x="67.8947%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.6447%" y="389" width="0.0793%" height="15" fill="rgb(237,229,35)" fg:x="853" fg:w="1"/><text x="67.8947%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.6447%" y="373" width="0.0793%" height="15" fill="rgb(238,129,14)" fg:x="853" fg:w="1"/><text x="67.8947%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.6447%" y="357" width="0.0793%" height="15" fill="rgb(218,217,40)" fg:x="853" fg:w="1"/><text x="67.8947%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.6447%" y="341" width="0.0793%" height="15" fill="rgb(221,187,9)" fg:x="853" fg:w="1"/><text x="67.8947%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.6447%" y="325" width="0.0793%" height="15" fill="rgb(214,108,19)" fg:x="853" fg:w="1"/><text x="67.8947%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.6447%" y="309" width="0.0793%" height="15" fill="rgb(216,86,23)" fg:x="853" fg:w="1"/><text x="67.8947%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.6447%" y="293" width="0.0793%" height="15" fill="rgb(209,116,23)" fg:x="853" fg:w="1"/><text x="67.8947%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.6447%" y="277" width="0.0793%" height="15" fill="rgb(222,185,40)" fg:x="853" fg:w="1"/><text x="67.8947%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.6447%" y="533" width="0.1586%" height="15" fill="rgb(238,150,2)" fg:x="853" fg:w="2"/><text x="67.8947%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.6447%" y="517" width="0.1586%" height="15" fill="rgb(229,132,47)" fg:x="853" fg:w="2"/><text x="67.8947%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.6447%" y="501" width="0.1586%" height="15" fill="rgb(231,7,23)" fg:x="853" fg:w="2"/><text x="67.8947%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.7240%" y="485" width="0.0793%" height="15" fill="rgb(235,12,37)" fg:x="854" fg:w="1"/><text x="67.9740%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.7240%" y="469" width="0.0793%" height="15" fill="rgb(247,170,51)" fg:x="854" fg:w="1"/><text x="67.9740%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.7240%" y="453" width="0.0793%" height="15" fill="rgb(210,62,49)" fg:x="854" fg:w="1"/><text x="67.9740%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.7240%" y="437" width="0.0793%" height="15" fill="rgb(248,30,8)" fg:x="854" fg:w="1"/><text x="67.9740%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.7240%" y="421" width="0.0793%" height="15" fill="rgb(252,11,2)" fg:x="854" fg:w="1"/><text x="67.9740%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="67.7240%" y="405" width="0.0793%" height="15" fill="rgb(249,65,4)" fg:x="854" fg:w="1"/><text x="67.9740%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="67.7240%" y="389" width="0.0793%" height="15" fill="rgb(217,219,7)" fg:x="854" fg:w="1"/><text x="67.9740%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.8033%" y="533" width="0.0793%" height="15" fill="rgb(222,186,36)" fg:x="855" fg:w="1"/><text x="68.0533%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.71%)</title><rect x="67.2482%" y="613" width="0.7137%" height="15" fill="rgb(247,184,5)" fg:x="848" fg:w="9"/><text x="67.4982%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.71%)</title><rect x="67.2482%" y="597" width="0.7137%" height="15" fill="rgb(221,108,7)" fg:x="848" fg:w="9"/><text x="67.4982%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="67.6447%" y="581" width="0.3172%" height="15" fill="rgb(209,208,22)" fg:x="853" fg:w="4"/><text x="67.8947%" y="591.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="67.6447%" y="565" width="0.3172%" height="15" fill="rgb(247,106,21)" fg:x="853" fg:w="4"/><text x="67.8947%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="67.6447%" y="549" width="0.3172%" height="15" fill="rgb(223,2,44)" fg:x="853" fg:w="4"/><text x="67.8947%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.8826%" y="533" width="0.0793%" height="15" fill="rgb(208,190,12)" fg:x="856" fg:w="1"/><text x="68.1326%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.8826%" y="517" width="0.0793%" height="15" fill="rgb(250,221,0)" fg:x="856" fg:w="1"/><text x="68.1326%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.8826%" y="501" width="0.0793%" height="15" fill="rgb(212,210,16)" fg:x="856" fg:w="1"/><text x="68.1326%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.8826%" y="485" width="0.0793%" height="15" fill="rgb(212,224,21)" fg:x="856" fg:w="1"/><text x="68.1326%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.8826%" y="469" width="0.0793%" height="15" fill="rgb(206,186,54)" fg:x="856" fg:w="1"/><text x="68.1326%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.8826%" y="453" width="0.0793%" height="15" fill="rgb(213,211,25)" fg:x="856" fg:w="1"/><text x="68.1326%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.8826%" y="437" width="0.0793%" height="15" fill="rgb(243,78,36)" fg:x="856" fg:w="1"/><text x="68.1326%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.8826%" y="421" width="0.0793%" height="15" fill="rgb(236,105,24)" fg:x="856" fg:w="1"/><text x="68.1326%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="68.0412%" y="501" width="0.0793%" height="15" fill="rgb(223,46,45)" fg:x="858" fg:w="1"/><text x="68.2912%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="68.0412%" y="565" width="0.1586%" height="15" fill="rgb(249,65,35)" fg:x="858" fg:w="2"/><text x="68.2912%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="68.0412%" y="549" width="0.1586%" height="15" fill="rgb(226,122,19)" fg:x="858" fg:w="2"/><text x="68.2912%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="68.0412%" y="533" width="0.1586%" height="15" fill="rgb(253,17,37)" fg:x="858" fg:w="2"/><text x="68.2912%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="68.0412%" y="517" width="0.1586%" height="15" fill="rgb(223,138,24)" fg:x="858" fg:w="2"/><text x="68.2912%" y="527.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="68.1205%" y="501" width="0.0793%" height="15" fill="rgb(227,89,20)" fg:x="859" fg:w="1"/><text x="68.3705%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.1205%" y="485" width="0.0793%" height="15" fill="rgb(239,140,41)" fg:x="859" fg:w="1"/><text x="68.3705%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.1205%" y="469" width="0.0793%" height="15" fill="rgb(237,29,24)" fg:x="859" fg:w="1"/><text x="68.3705%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.1205%" y="453" width="0.0793%" height="15" fill="rgb(212,123,27)" fg:x="859" fg:w="1"/><text x="68.3705%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.1205%" y="437" width="0.0793%" height="15" fill="rgb(236,173,10)" fg:x="859" fg:w="1"/><text x="68.3705%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.1205%" y="421" width="0.0793%" height="15" fill="rgb(244,17,3)" fg:x="859" fg:w="1"/><text x="68.3705%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.1205%" y="405" width="0.0793%" height="15" fill="rgb(220,73,21)" fg:x="859" fg:w="1"/><text x="68.3705%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.1205%" y="389" width="0.0793%" height="15" fill="rgb(220,187,17)" fg:x="859" fg:w="1"/><text x="68.3705%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.1205%" y="373" width="0.0793%" height="15" fill="rgb(236,64,13)" fg:x="859" fg:w="1"/><text x="68.3705%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.1205%" y="357" width="0.0793%" height="15" fill="rgb(214,111,25)" fg:x="859" fg:w="1"/><text x="68.3705%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.1205%" y="341" width="0.0793%" height="15" fill="rgb(251,123,0)" fg:x="859" fg:w="1"/><text x="68.3705%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.1205%" y="325" width="0.0793%" height="15" fill="rgb(210,8,32)" fg:x="859" fg:w="1"/><text x="68.3705%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.1205%" y="309" width="0.0793%" height="15" fill="rgb(221,27,44)" fg:x="859" fg:w="1"/><text x="68.3705%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="68.0412%" y="581" width="0.2379%" height="15" fill="rgb(233,207,54)" fg:x="858" fg:w="3"/><text x="68.2912%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="68.1998%" y="565" width="0.0793%" height="15" fill="rgb(219,217,1)" fg:x="860" fg:w="1"/><text x="68.4498%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.1998%" y="549" width="0.0793%" height="15" fill="rgb(236,150,15)" fg:x="860" fg:w="1"/><text x="68.4498%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="68.2791%" y="581" width="0.1586%" height="15" fill="rgb(244,119,54)" fg:x="861" fg:w="2"/><text x="68.5291%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="68.2791%" y="565" width="0.1586%" height="15" fill="rgb(218,116,36)" fg:x="861" fg:w="2"/><text x="68.5291%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.3584%" y="549" width="0.0793%" height="15" fill="rgb(215,42,32)" fg:x="862" fg:w="1"/><text x="68.6084%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="68.3584%" y="533" width="0.0793%" height="15" fill="rgb(254,87,2)" fg:x="862" fg:w="1"/><text x="68.6084%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.3584%" y="517" width="0.0793%" height="15" fill="rgb(241,195,45)" fg:x="862" fg:w="1"/><text x="68.6084%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.3584%" y="501" width="0.0793%" height="15" fill="rgb(252,11,14)" fg:x="862" fg:w="1"/><text x="68.6084%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.4377%" y="549" width="0.0793%" height="15" fill="rgb(233,199,43)" fg:x="863" fg:w="1"/><text x="68.6877%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (9 samples, 0.71%)</title><rect x="67.9619%" y="613" width="0.7137%" height="15" fill="rgb(243,170,27)" fg:x="857" fg:w="9"/><text x="68.2119%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.63%)</title><rect x="68.0412%" y="597" width="0.6344%" height="15" fill="rgb(236,178,54)" fg:x="858" fg:w="8"/><text x="68.2912%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="68.4377%" y="581" width="0.2379%" height="15" fill="rgb(230,38,12)" fg:x="863" fg:w="3"/><text x="68.6877%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.4377%" y="565" width="0.2379%" height="15" fill="rgb(241,44,47)" fg:x="863" fg:w="3"/><text x="68.6877%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="68.5170%" y="549" width="0.1586%" height="15" fill="rgb(218,99,12)" fg:x="864" fg:w="2"/><text x="68.7670%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="68.5170%" y="533" width="0.1586%" height="15" fill="rgb(211,48,36)" fg:x="864" fg:w="2"/><text x="68.7670%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="68.5964%" y="517" width="0.0793%" height="15" fill="rgb(220,81,29)" fg:x="865" fg:w="1"/><text x="68.8464%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.5964%" y="501" width="0.0793%" height="15" fill="rgb(232,121,54)" fg:x="865" fg:w="1"/><text x="68.8464%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.5964%" y="485" width="0.0793%" height="15" fill="rgb(236,227,37)" fg:x="865" fg:w="1"/><text x="68.8464%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.5964%" y="469" width="0.0793%" height="15" fill="rgb(207,43,26)" fg:x="865" fg:w="1"/><text x="68.8464%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.7550%" y="581" width="0.0793%" height="15" fill="rgb(224,163,34)" fg:x="867" fg:w="1"/><text x="69.0050%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.7550%" y="565" width="0.0793%" height="15" fill="rgb(228,127,11)" fg:x="867" fg:w="1"/><text x="69.0050%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.7550%" y="549" width="0.0793%" height="15" fill="rgb(215,32,51)" fg:x="867" fg:w="1"/><text x="69.0050%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.7550%" y="533" width="0.0793%" height="15" fill="rgb(206,180,37)" fg:x="867" fg:w="1"/><text x="69.0050%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.7550%" y="517" width="0.0793%" height="15" fill="rgb(245,217,39)" fg:x="867" fg:w="1"/><text x="69.0050%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.7550%" y="501" width="0.0793%" height="15" fill="rgb(237,179,18)" fg:x="867" fg:w="1"/><text x="69.0050%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.7550%" y="485" width="0.0793%" height="15" fill="rgb(248,177,3)" fg:x="867" fg:w="1"/><text x="69.0050%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.7550%" y="469" width="0.0793%" height="15" fill="rgb(208,31,45)" fg:x="867" fg:w="1"/><text x="69.0050%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.7550%" y="453" width="0.0793%" height="15" fill="rgb(231,16,43)" fg:x="867" fg:w="1"/><text x="69.0050%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.7550%" y="437" width="0.0793%" height="15" fill="rgb(246,12,20)" fg:x="867" fg:w="1"/><text x="69.0050%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.7550%" y="421" width="0.0793%" height="15" fill="rgb(214,40,41)" fg:x="867" fg:w="1"/><text x="69.0050%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.7550%" y="405" width="0.0793%" height="15" fill="rgb(225,183,42)" fg:x="867" fg:w="1"/><text x="69.0050%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.7550%" y="389" width="0.0793%" height="15" fill="rgb(229,88,50)" fg:x="867" fg:w="1"/><text x="69.0050%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.7550%" y="373" width="0.0793%" height="15" fill="rgb(247,34,33)" fg:x="867" fg:w="1"/><text x="69.0050%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.7550%" y="357" width="0.0793%" height="15" fill="rgb(246,163,52)" fg:x="867" fg:w="1"/><text x="69.0050%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.8343%" y="581" width="0.0793%" height="15" fill="rgb(251,13,27)" fg:x="868" fg:w="1"/><text x="69.0843%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="68.9136%" y="549" width="0.1586%" height="15" fill="rgb(218,127,46)" fg:x="869" fg:w="2"/><text x="69.1636%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (5 samples, 0.40%)</title><rect x="68.9136%" y="581" width="0.3965%" height="15" fill="rgb(215,155,29)" fg:x="869" fg:w="5"/><text x="69.1636%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="68.9136%" y="565" width="0.3965%" height="15" fill="rgb(251,180,13)" fg:x="869" fg:w="5"/><text x="69.1636%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="69.0722%" y="549" width="0.2379%" height="15" fill="rgb(246,215,19)" fg:x="871" fg:w="3"/><text x="69.3222%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="69.0722%" y="533" width="0.2379%" height="15" fill="rgb(210,47,28)" fg:x="871" fg:w="3"/><text x="69.3222%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="69.0722%" y="517" width="0.2379%" height="15" fill="rgb(231,175,40)" fg:x="871" fg:w="3"/><text x="69.3222%" y="527.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="69.0722%" y="501" width="0.2379%" height="15" fill="rgb(207,138,24)" fg:x="871" fg:w="3"/><text x="69.3222%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.3101%" y="581" width="0.0793%" height="15" fill="rgb(216,44,38)" fg:x="874" fg:w="1"/><text x="69.5601%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.5480%" y="549" width="0.0793%" height="15" fill="rgb(206,81,53)" fg:x="877" fg:w="1"/><text x="69.7980%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (13 samples, 1.03%)</title><rect x="68.6757%" y="613" width="1.0309%" height="15" fill="rgb(246,139,21)" fg:x="866" fg:w="13"/><text x="68.9257%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (12 samples, 0.95%)</title><rect x="68.7550%" y="597" width="0.9516%" height="15" fill="rgb(212,163,26)" fg:x="867" fg:w="12"/><text x="69.0050%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.32%)</title><rect x="69.3894%" y="581" width="0.3172%" height="15" fill="rgb(223,82,35)" fg:x="875" fg:w="4"/><text x="69.6394%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="69.5480%" y="565" width="0.1586%" height="15" fill="rgb(224,76,13)" fg:x="877" fg:w="2"/><text x="69.7980%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="69.6273%" y="549" width="0.0793%" height="15" fill="rgb(240,2,40)" fg:x="878" fg:w="1"/><text x="69.8773%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.7066%" y="597" width="0.0793%" height="15" fill="rgb(232,188,36)" fg:x="879" fg:w="1"/><text x="69.9566%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.7859%" y="517" width="0.0793%" height="15" fill="rgb(249,34,46)" fg:x="880" fg:w="1"/><text x="70.0359%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.7859%" y="501" width="0.0793%" height="15" fill="rgb(226,99,19)" fg:x="880" fg:w="1"/><text x="70.0359%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.7859%" y="485" width="0.0793%" height="15" fill="rgb(207,78,52)" fg:x="880" fg:w="1"/><text x="70.0359%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.7859%" y="469" width="0.0793%" height="15" fill="rgb(241,119,8)" fg:x="880" fg:w="1"/><text x="70.0359%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.7859%" y="453" width="0.0793%" height="15" fill="rgb(238,31,9)" fg:x="880" fg:w="1"/><text x="70.0359%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.7859%" y="437" width="0.0793%" height="15" fill="rgb(223,165,6)" fg:x="880" fg:w="1"/><text x="70.0359%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.7859%" y="421" width="0.0793%" height="15" fill="rgb(227,228,21)" fg:x="880" fg:w="1"/><text x="70.0359%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.7859%" y="405" width="0.0793%" height="15" fill="rgb(206,188,51)" fg:x="880" fg:w="1"/><text x="70.0359%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.7859%" y="389" width="0.0793%" height="15" fill="rgb(225,207,23)" fg:x="880" fg:w="1"/><text x="70.0359%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.7859%" y="373" width="0.0793%" height="15" fill="rgb(232,197,54)" fg:x="880" fg:w="1"/><text x="70.0359%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.7859%" y="357" width="0.0793%" height="15" fill="rgb(229,149,21)" fg:x="880" fg:w="1"/><text x="70.0359%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.7859%" y="341" width="0.0793%" height="15" fill="rgb(209,197,1)" fg:x="880" fg:w="1"/><text x="70.0359%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.7859%" y="325" width="0.0793%" height="15" fill="rgb(227,82,17)" fg:x="880" fg:w="1"/><text x="70.0359%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.7859%" y="309" width="0.0793%" height="15" fill="rgb(237,201,43)" fg:x="880" fg:w="1"/><text x="70.0359%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="69.7859%" y="565" width="0.2379%" height="15" fill="rgb(221,91,37)" fg:x="880" fg:w="3"/><text x="70.0359%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="69.7859%" y="549" width="0.2379%" height="15" fill="rgb(239,35,7)" fg:x="880" fg:w="3"/><text x="70.0359%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="69.7859%" y="533" width="0.2379%" height="15" fill="rgb(234,145,45)" fg:x="880" fg:w="3"/><text x="70.0359%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.8652%" y="517" width="0.1586%" height="15" fill="rgb(214,151,47)" fg:x="881" fg:w="2"/><text x="70.1152%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.8652%" y="501" width="0.1586%" height="15" fill="rgb(248,62,54)" fg:x="881" fg:w="2"/><text x="70.1152%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.8652%" y="485" width="0.1586%" height="15" fill="rgb(236,99,21)" fg:x="881" fg:w="2"/><text x="70.1152%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.8652%" y="469" width="0.1586%" height="15" fill="rgb(223,94,43)" fg:x="881" fg:w="2"/><text x="70.1152%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="69.8652%" y="453" width="0.1586%" height="15" fill="rgb(214,66,6)" fg:x="881" fg:w="2"/><text x="70.1152%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.8652%" y="437" width="0.1586%" height="15" fill="rgb(231,152,46)" fg:x="881" fg:w="2"/><text x="70.1152%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.9445%" y="421" width="0.0793%" height="15" fill="rgb(254,0,48)" fg:x="882" fg:w="1"/><text x="70.1945%" y="431.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="70.0238%" y="517" width="0.0793%" height="15" fill="rgb(225,136,42)" fg:x="883" fg:w="1"/><text x="70.2738%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="69.7859%" y="597" width="0.4758%" height="15" fill="rgb(231,194,28)" fg:x="880" fg:w="6"/><text x="70.0359%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="69.7859%" y="581" width="0.4758%" height="15" fill="rgb(248,141,22)" fg:x="880" fg:w="6"/><text x="70.0359%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="70.0238%" y="565" width="0.2379%" height="15" fill="rgb(222,133,1)" fg:x="883" fg:w="3"/><text x="70.2738%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="70.0238%" y="549" width="0.2379%" height="15" fill="rgb(222,50,8)" fg:x="883" fg:w="3"/><text x="70.2738%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="70.0238%" y="533" width="0.2379%" height="15" fill="rgb(215,67,27)" fg:x="883" fg:w="3"/><text x="70.2738%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.1031%" y="517" width="0.1586%" height="15" fill="rgb(220,102,37)" fg:x="884" fg:w="2"/><text x="70.3531%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.1031%" y="501" width="0.1586%" height="15" fill="rgb(222,64,25)" fg:x="884" fg:w="2"/><text x="70.3531%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.1031%" y="485" width="0.1586%" height="15" fill="rgb(215,40,16)" fg:x="884" fg:w="2"/><text x="70.3531%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.1031%" y="469" width="0.1586%" height="15" fill="rgb(252,171,3)" fg:x="884" fg:w="2"/><text x="70.3531%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="70.1031%" y="453" width="0.1586%" height="15" fill="rgb(252,199,51)" fg:x="884" fg:w="2"/><text x="70.3531%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.1031%" y="437" width="0.1586%" height="15" fill="rgb(244,42,10)" fg:x="884" fg:w="2"/><text x="70.3531%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.1031%" y="421" width="0.1586%" height="15" fill="rgb(243,169,37)" fg:x="884" fg:w="2"/><text x="70.3531%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.1031%" y="405" width="0.1586%" height="15" fill="rgb(241,140,9)" fg:x="884" fg:w="2"/><text x="70.3531%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1824%" y="389" width="0.0793%" height="15" fill="rgb(241,66,40)" fg:x="885" fg:w="1"/><text x="70.4324%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (8 samples, 0.63%)</title><rect x="69.7066%" y="613" width="0.6344%" height="15" fill="rgb(220,50,41)" fg:x="879" fg:w="8"/><text x="69.9566%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="70.2617%" y="597" width="0.0793%" height="15" fill="rgb(214,104,9)" fg:x="886" fg:w="1"/><text x="70.5117%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.2617%" y="581" width="0.0793%" height="15" fill="rgb(241,227,25)" fg:x="886" fg:w="1"/><text x="70.5117%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.3410%" y="597" width="0.1586%" height="15" fill="rgb(248,37,46)" fg:x="887" fg:w="2"/><text x="70.5910%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.3410%" y="581" width="0.1586%" height="15" fill="rgb(243,52,43)" fg:x="887" fg:w="2"/><text x="70.5910%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="70.3410%" y="565" width="0.1586%" height="15" fill="rgb(232,122,17)" fg:x="887" fg:w="2"/><text x="70.5910%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="70.3410%" y="549" width="0.1586%" height="15" fill="rgb(242,15,36)" fg:x="887" fg:w="2"/><text x="70.5910%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="70.3410%" y="533" width="0.1586%" height="15" fill="rgb(232,63,30)" fg:x="887" fg:w="2"/><text x="70.5910%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="70.3410%" y="517" width="0.1586%" height="15" fill="rgb(237,86,45)" fg:x="887" fg:w="2"/><text x="70.5910%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="70.3410%" y="501" width="0.1586%" height="15" fill="rgb(245,123,47)" fg:x="887" fg:w="2"/><text x="70.5910%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="70.3410%" y="485" width="0.1586%" height="15" fill="rgb(252,85,3)" fg:x="887" fg:w="2"/><text x="70.5910%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="70.3410%" y="469" width="0.1586%" height="15" fill="rgb(249,171,16)" fg:x="887" fg:w="2"/><text x="70.5910%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="70.3410%" y="453" width="0.1586%" height="15" fill="rgb(225,146,54)" fg:x="887" fg:w="2"/><text x="70.5910%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="70.3410%" y="437" width="0.1586%" height="15" fill="rgb(213,216,54)" fg:x="887" fg:w="2"/><text x="70.5910%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="70.3410%" y="421" width="0.1586%" height="15" fill="rgb(236,60,6)" fg:x="887" fg:w="2"/><text x="70.5910%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (4 samples, 0.32%)</title><rect x="70.3410%" y="613" width="0.3172%" height="15" fill="rgb(227,93,24)" fg:x="887" fg:w="4"/><text x="70.5910%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="70.4996%" y="597" width="0.1586%" height="15" fill="rgb(219,41,42)" fg:x="889" fg:w="2"/><text x="70.7496%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.4996%" y="581" width="0.1586%" height="15" fill="rgb(229,52,32)" fg:x="889" fg:w="2"/><text x="70.7496%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="70.4996%" y="565" width="0.1586%" height="15" fill="rgb(221,33,40)" fg:x="889" fg:w="2"/><text x="70.7496%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="70.5789%" y="549" width="0.0793%" height="15" fill="rgb(216,109,23)" fg:x="890" fg:w="1"/><text x="70.8289%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="70.5789%" y="533" width="0.0793%" height="15" fill="rgb(214,39,24)" fg:x="890" fg:w="1"/><text x="70.8289%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="70.5789%" y="517" width="0.0793%" height="15" fill="rgb(205,36,6)" fg:x="890" fg:w="1"/><text x="70.8289%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="70.5789%" y="501" width="0.0793%" height="15" fill="rgb(222,146,34)" fg:x="890" fg:w="1"/><text x="70.8289%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.5789%" y="485" width="0.0793%" height="15" fill="rgb(214,72,53)" fg:x="890" fg:w="1"/><text x="70.8289%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.5789%" y="469" width="0.0793%" height="15" fill="rgb(250,157,2)" fg:x="890" fg:w="1"/><text x="70.8289%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="70.5789%" y="453" width="0.0793%" height="15" fill="rgb(248,5,23)" fg:x="890" fg:w="1"/><text x="70.8289%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="70.5789%" y="437" width="0.0793%" height="15" fill="rgb(207,146,36)" fg:x="890" fg:w="1"/><text x="70.8289%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="70.5789%" y="421" width="0.0793%" height="15" fill="rgb(205,184,43)" fg:x="890" fg:w="1"/><text x="70.8289%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="70.5789%" y="405" width="0.0793%" height="15" fill="rgb(251,150,46)" fg:x="890" fg:w="1"/><text x="70.8289%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="70.5789%" y="389" width="0.0793%" height="15" fill="rgb(227,224,12)" fg:x="890" fg:w="1"/><text x="70.8289%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.6582%" y="565" width="0.1586%" height="15" fill="rgb(215,26,26)" fg:x="891" fg:w="2"/><text x="70.9082%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.6582%" y="549" width="0.1586%" height="15" fill="rgb(238,180,42)" fg:x="891" fg:w="2"/><text x="70.9082%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.6582%" y="533" width="0.1586%" height="15" fill="rgb(218,148,48)" fg:x="891" fg:w="2"/><text x="70.9082%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7375%" y="517" width="0.0793%" height="15" fill="rgb(252,14,36)" fg:x="892" fg:w="1"/><text x="70.9875%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7375%" y="501" width="0.0793%" height="15" fill="rgb(224,35,37)" fg:x="892" fg:w="1"/><text x="70.9875%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.7375%" y="485" width="0.0793%" height="15" fill="rgb(245,177,29)" fg:x="892" fg:w="1"/><text x="70.9875%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.7375%" y="469" width="0.0793%" height="15" fill="rgb(221,149,34)" fg:x="892" fg:w="1"/><text x="70.9875%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.7375%" y="453" width="0.0793%" height="15" fill="rgb(239,115,36)" fg:x="892" fg:w="1"/><text x="70.9875%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7375%" y="437" width="0.0793%" height="15" fill="rgb(226,196,40)" fg:x="892" fg:w="1"/><text x="70.9875%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7375%" y="421" width="0.0793%" height="15" fill="rgb(209,206,26)" fg:x="892" fg:w="1"/><text x="70.9875%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.7375%" y="405" width="0.0793%" height="15" fill="rgb(225,13,33)" fg:x="892" fg:w="1"/><text x="70.9875%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.7375%" y="389" width="0.0793%" height="15" fill="rgb(244,126,22)" fg:x="892" fg:w="1"/><text x="70.9875%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.7375%" y="373" width="0.0793%" height="15" fill="rgb(248,213,25)" fg:x="892" fg:w="1"/><text x="70.9875%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.7375%" y="357" width="0.0793%" height="15" fill="rgb(222,94,36)" fg:x="892" fg:w="1"/><text x="70.9875%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7375%" y="341" width="0.0793%" height="15" fill="rgb(212,114,20)" fg:x="892" fg:w="1"/><text x="70.9875%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="70.8168%" y="565" width="0.0793%" height="15" fill="rgb(213,157,26)" fg:x="893" fg:w="1"/><text x="71.0668%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.8168%" y="549" width="0.0793%" height="15" fill="rgb(211,130,1)" fg:x="893" fg:w="1"/><text x="71.0668%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.8168%" y="533" width="0.0793%" height="15" fill="rgb(212,83,53)" fg:x="893" fg:w="1"/><text x="71.0668%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.8168%" y="517" width="0.0793%" height="15" fill="rgb(238,129,10)" fg:x="893" fg:w="1"/><text x="71.0668%" y="527.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="70.8961%" y="565" width="0.0793%" height="15" fill="rgb(213,76,2)" fg:x="894" fg:w="1"/><text x="71.1461%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="70.8961%" y="549" width="0.0793%" height="15" fill="rgb(220,189,22)" fg:x="894" fg:w="1"/><text x="71.1461%" y="559.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="70.8961%" y="533" width="0.0793%" height="15" fill="rgb(250,155,31)" fg:x="894" fg:w="1"/><text x="71.1461%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (7 samples, 0.56%)</title><rect x="70.6582%" y="597" width="0.5551%" height="15" fill="rgb(218,184,22)" fg:x="891" fg:w="7"/><text x="70.9082%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="70.6582%" y="581" width="0.5551%" height="15" fill="rgb(247,117,4)" fg:x="891" fg:w="7"/><text x="70.9082%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="70.9754%" y="565" width="0.2379%" height="15" fill="rgb(253,185,37)" fg:x="895" fg:w="3"/><text x="71.2254%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.9754%" y="549" width="0.2379%" height="15" fill="rgb(226,36,44)" fg:x="895" fg:w="3"/><text x="71.2254%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="70.9754%" y="533" width="0.2379%" height="15" fill="rgb(224,7,24)" fg:x="895" fg:w="3"/><text x="71.2254%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.9754%" y="517" width="0.2379%" height="15" fill="rgb(239,201,0)" fg:x="895" fg:w="3"/><text x="71.2254%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2133%" y="581" width="0.0793%" height="15" fill="rgb(218,56,33)" fg:x="898" fg:w="1"/><text x="71.4633%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2133%" y="565" width="0.0793%" height="15" fill="rgb(210,187,29)" fg:x="898" fg:w="1"/><text x="71.4633%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.2133%" y="549" width="0.0793%" height="15" fill="rgb(206,158,49)" fg:x="898" fg:w="1"/><text x="71.4633%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.2133%" y="533" width="0.0793%" height="15" fill="rgb(234,36,5)" fg:x="898" fg:w="1"/><text x="71.4633%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.2133%" y="517" width="0.0793%" height="15" fill="rgb(239,79,15)" fg:x="898" fg:w="1"/><text x="71.4633%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.2133%" y="501" width="0.0793%" height="15" fill="rgb(240,136,17)" fg:x="898" fg:w="1"/><text x="71.4633%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.2133%" y="485" width="0.0793%" height="15" fill="rgb(227,83,12)" fg:x="898" fg:w="1"/><text x="71.4633%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="71.2133%" y="469" width="0.0793%" height="15" fill="rgb(212,2,8)" fg:x="898" fg:w="1"/><text x="71.4633%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="71.2133%" y="453" width="0.0793%" height="15" fill="rgb(219,144,5)" fg:x="898" fg:w="1"/><text x="71.4633%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="71.2926%" y="581" width="0.1586%" height="15" fill="rgb(253,204,27)" fg:x="899" fg:w="2"/><text x="71.5426%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="71.2926%" y="565" width="0.1586%" height="15" fill="rgb(228,188,17)" fg:x="899" fg:w="2"/><text x="71.5426%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.2926%" y="549" width="0.1586%" height="15" fill="rgb(208,198,33)" fg:x="899" fg:w="2"/><text x="71.5426%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="71.2926%" y="533" width="0.1586%" height="15" fill="rgb(249,153,19)" fg:x="899" fg:w="2"/><text x="71.5426%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.4512%" y="581" width="0.0793%" height="15" fill="rgb(222,193,37)" fg:x="901" fg:w="1"/><text x="71.7012%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.4512%" y="565" width="0.0793%" height="15" fill="rgb(215,168,16)" fg:x="901" fg:w="1"/><text x="71.7012%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (115 samples, 9.12%)</title><rect x="62.4901%" y="645" width="9.1197%" height="15" fill="rgb(238,69,36)" fg:x="788" fg:w="115"/><text x="62.7401%" y="655.50">&lt;plugins_core..</text></g><g><title>plugins_core::location::change_location (55 samples, 4.36%)</title><rect x="67.2482%" y="629" width="4.3616%" height="15" fill="rgb(227,11,51)" fg:x="848" fg:w="55"/><text x="67.4982%" y="639.50">plugi..</text></g><g><title>plugins_core::location::Location::set (12 samples, 0.95%)</title><rect x="70.6582%" y="613" width="0.9516%" height="15" fill="rgb(214,204,5)" fg:x="891" fg:w="12"/><text x="70.9082%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="71.2133%" y="597" width="0.3965%" height="15" fill="rgb(242,182,42)" fg:x="898" fg:w="5"/><text x="71.4633%" y="607.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="71.5305%" y="581" width="0.0793%" height="15" fill="rgb(212,208,46)" fg:x="902" fg:w="1"/><text x="71.7805%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.5305%" y="565" width="0.0793%" height="15" fill="rgb(249,22,49)" fg:x="902" fg:w="1"/><text x="71.7805%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="71.5305%" y="549" width="0.0793%" height="15" fill="rgb(226,130,52)" fg:x="902" fg:w="1"/><text x="71.7805%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.5305%" y="533" width="0.0793%" height="15" fill="rgb(209,156,10)" fg:x="902" fg:w="1"/><text x="71.7805%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::Item&gt; (1 samples, 0.08%)</title><rect x="71.6098%" y="645" width="0.0793%" height="15" fill="rgb(207,125,47)" fg:x="903" fg:w="1"/><text x="71.8598%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="71.6891%" y="629" width="0.1586%" height="15" fill="rgb(221,117,28)" fg:x="904" fg:w="2"/><text x="71.9391%" y="639.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (272 samples, 21.57%)</title><rect x="50.3569%" y="661" width="21.5702%" height="15" fill="rgb(221,170,12)" fg:x="635" fg:w="272"/><text x="50.6069%" y="671.50">&lt;engine::session::state::State as ..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="71.6891%" y="645" width="0.2379%" height="15" fill="rgb(241,222,52)" fg:x="904" fg:w="3"/><text x="71.9391%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="71.8477%" y="629" width="0.0793%" height="15" fill="rgb(219,52,6)" fg:x="906" fg:w="1"/><text x="72.0977%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.8477%" y="613" width="0.0793%" height="15" fill="rgb(226,144,34)" fg:x="906" fg:w="1"/><text x="72.0977%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (305 samples, 24.19%)</title><rect x="47.8192%" y="837" width="24.1872%" height="15" fill="rgb(231,179,27)" fg:x="603" fg:w="305"/><text x="48.0692%" y="847.50">&lt;engine::session::Session as kernel::a..</text></g><g><title>kernel::plugins::mw::apply_middleware (305 samples, 24.19%)</title><rect x="47.8192%" y="821" width="24.1872%" height="15" fill="rgb(211,178,51)" fg:x="603" fg:w="305"/><text x="48.0692%" y="831.50">kernel::plugins::mw::apply_middleware</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (305 samples, 24.19%)</title><rect x="47.8192%" y="805" width="24.1872%" height="15" fill="rgb(233,141,5)" fg:x="603" fg:w="305"/><text x="48.0692%" y="815.50">kernel::plugins::mw::MiddlewareNext::h..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (305 samples, 24.19%)</title><rect x="47.8192%" y="789" width="24.1872%" height="15" fill="rgb(214,10,9)" fg:x="603" fg:w="305"/><text x="48.0692%" y="799.50">&lt;engine::session::ExpandSurroundingsMi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (275 samples, 21.81%)</title><rect x="50.1983%" y="773" width="21.8081%" height="15" fill="rgb(209,0,1)" fg:x="633" fg:w="275"/><text x="50.4483%" y="783.50">kernel::plugins::mw::MiddlewareNex..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (275 samples, 21.81%)</title><rect x="50.1983%" y="757" width="21.8081%" height="15" fill="rgb(207,82,30)" fg:x="633" fg:w="275"/><text x="50.4483%" y="767.50">&lt;plugins_dynlib::DynamicMiddleware..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (275 samples, 21.81%)</title><rect x="50.1983%" y="741" width="21.8081%" height="15" fill="rgb(224,214,13)" fg:x="633" fg:w="275"/><text x="50.4483%" y="751.50">kernel::plugins::mw::MiddlewareNex..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (274 samples, 21.73%)</title><rect x="50.2776%" y="725" width="21.7288%" height="15" fill="rgb(237,84,33)" fg:x="634" fg:w="274"/><text x="50.5276%" y="735.50">core::ops::function::FnOnce::call_..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (274 samples, 21.73%)</title><rect x="50.2776%" y="709" width="21.7288%" height="15" fill="rgb(231,25,9)" fg:x="634" fg:w="274"/><text x="50.5276%" y="719.50">kernel::plugins::mw::MiddlewareNex..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (274 samples, 21.73%)</title><rect x="50.2776%" y="693" width="21.7288%" height="15" fill="rgb(207,51,8)" fg:x="634" fg:w="274"/><text x="50.5276%" y="703.50">core::ops::function::FnOnce::call_..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (274 samples, 21.73%)</title><rect x="50.2776%" y="677" width="21.7288%" height="15" fill="rgb(234,189,54)" fg:x="634" fg:w="274"/><text x="50.5276%" y="687.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::o..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.9270%" y="661" width="0.0793%" height="15" fill="rgb(214,188,52)" fg:x="907" fg:w="1"/><text x="72.1770%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.0063%" y="773" width="0.0793%" height="15" fill="rgb(214,17,11)" fg:x="908" fg:w="1"/><text x="72.2563%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="72.0063%" y="757" width="0.0793%" height="15" fill="rgb(250,31,36)" fg:x="908" fg:w="1"/><text x="72.2563%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.0063%" y="741" width="0.0793%" height="15" fill="rgb(244,57,44)" fg:x="908" fg:w="1"/><text x="72.2563%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.0063%" y="725" width="0.0793%" height="15" fill="rgb(209,209,31)" fg:x="908" fg:w="1"/><text x="72.2563%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.0063%" y="709" width="0.0793%" height="15" fill="rgb(217,47,5)" fg:x="908" fg:w="1"/><text x="72.2563%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.0063%" y="693" width="0.0793%" height="15" fill="rgb(214,78,42)" fg:x="908" fg:w="1"/><text x="72.2563%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.0063%" y="677" width="0.0793%" height="15" fill="rgb(226,15,23)" fg:x="908" fg:w="1"/><text x="72.2563%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.0063%" y="661" width="0.0793%" height="15" fill="rgb(230,171,7)" fg:x="908" fg:w="1"/><text x="72.2563%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.0856%" y="757" width="0.0793%" height="15" fill="rgb(229,71,9)" fg:x="909" fg:w="1"/><text x="72.3356%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="72.0063%" y="805" width="0.2379%" height="15" fill="rgb(221,111,31)" fg:x="908" fg:w="3"/><text x="72.2563%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="72.0063%" y="789" width="0.2379%" height="15" fill="rgb(237,86,50)" fg:x="908" fg:w="3"/><text x="72.2563%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="72.0856%" y="773" width="0.1586%" height="15" fill="rgb(234,49,32)" fg:x="909" fg:w="2"/><text x="72.3356%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="72.1649%" y="757" width="0.0793%" height="15" fill="rgb(225,144,27)" fg:x="910" fg:w="1"/><text x="72.4149%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.1649%" y="741" width="0.0793%" height="15" fill="rgb(225,209,36)" fg:x="910" fg:w="1"/><text x="72.4149%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1649%" y="725" width="0.0793%" height="15" fill="rgb(218,109,14)" fg:x="910" fg:w="1"/><text x="72.4149%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1649%" y="709" width="0.0793%" height="15" fill="rgb(238,186,42)" fg:x="910" fg:w="1"/><text x="72.4149%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1649%" y="693" width="0.0793%" height="15" fill="rgb(236,143,10)" fg:x="910" fg:w="1"/><text x="72.4149%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1649%" y="677" width="0.0793%" height="15" fill="rgb(205,147,7)" fg:x="910" fg:w="1"/><text x="72.4149%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.1649%" y="661" width="0.0793%" height="15" fill="rgb(245,224,0)" fg:x="910" fg:w="1"/><text x="72.4149%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.1649%" y="645" width="0.0793%" height="15" fill="rgb(213,208,32)" fg:x="910" fg:w="1"/><text x="72.4149%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.1649%" y="629" width="0.0793%" height="15" fill="rgb(208,212,4)" fg:x="910" fg:w="1"/><text x="72.4149%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.1649%" y="613" width="0.0793%" height="15" fill="rgb(236,143,49)" fg:x="910" fg:w="1"/><text x="72.4149%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.1649%" y="597" width="0.0793%" height="15" fill="rgb(228,152,33)" fg:x="910" fg:w="1"/><text x="72.4149%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.1649%" y="581" width="0.0793%" height="15" fill="rgb(236,132,39)" fg:x="910" fg:w="1"/><text x="72.4149%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.1649%" y="565" width="0.0793%" height="15" fill="rgb(228,176,23)" fg:x="910" fg:w="1"/><text x="72.4149%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.1649%" y="549" width="0.0793%" height="15" fill="rgb(229,34,18)" fg:x="910" fg:w="1"/><text x="72.4149%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.1649%" y="533" width="0.0793%" height="15" fill="rgb(244,81,37)" fg:x="910" fg:w="1"/><text x="72.4149%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.1649%" y="517" width="0.0793%" height="15" fill="rgb(242,79,32)" fg:x="910" fg:w="1"/><text x="72.4149%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.1649%" y="501" width="0.0793%" height="15" fill="rgb(245,15,51)" fg:x="910" fg:w="1"/><text x="72.4149%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.1649%" y="485" width="0.0793%" height="15" fill="rgb(209,82,8)" fg:x="910" fg:w="1"/><text x="72.4149%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="72.2443%" y="741" width="0.2379%" height="15" fill="rgb(248,65,42)" fg:x="911" fg:w="3"/><text x="72.4943%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.4029%" y="725" width="0.0793%" height="15" fill="rgb(216,132,33)" fg:x="913" fg:w="1"/><text x="72.6529%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.4822%" y="709" width="0.0793%" height="15" fill="rgb(207,21,32)" fg:x="914" fg:w="1"/><text x="72.7322%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="72.6408%" y="677" width="0.1586%" height="15" fill="rgb(247,27,22)" fg:x="916" fg:w="2"/><text x="72.8908%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="72.6408%" y="661" width="0.1586%" height="15" fill="rgb(254,72,41)" fg:x="916" fg:w="2"/><text x="72.8908%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="72.6408%" y="645" width="0.1586%" height="15" fill="rgb(250,6,31)" fg:x="916" fg:w="2"/><text x="72.8908%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="72.7994%" y="661" width="0.0793%" height="15" fill="rgb(224,124,0)" fg:x="918" fg:w="1"/><text x="73.0494%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="72.7994%" y="645" width="0.0793%" height="15" fill="rgb(228,7,24)" fg:x="918" fg:w="1"/><text x="73.0494%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.7994%" y="629" width="0.0793%" height="15" fill="rgb(250,202,22)" fg:x="918" fg:w="1"/><text x="73.0494%" y="639.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.71%)</title><rect x="72.2443%" y="789" width="0.7137%" height="15" fill="rgb(214,89,5)" fg:x="911" fg:w="9"/><text x="72.4943%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.71%)</title><rect x="72.2443%" y="773" width="0.7137%" height="15" fill="rgb(228,82,34)" fg:x="911" fg:w="9"/><text x="72.4943%" y="783.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.71%)</title><rect x="72.2443%" y="757" width="0.7137%" height="15" fill="rgb(212,164,18)" fg:x="911" fg:w="9"/><text x="72.4943%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="72.4822%" y="741" width="0.4758%" height="15" fill="rgb(210,75,6)" fg:x="914" fg:w="6"/><text x="72.7322%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="72.4822%" y="725" width="0.4758%" height="15" fill="rgb(251,11,45)" fg:x="914" fg:w="6"/><text x="72.7322%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="72.5615%" y="709" width="0.3965%" height="15" fill="rgb(234,105,14)" fg:x="915" fg:w="5"/><text x="72.8115%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="72.6408%" y="693" width="0.3172%" height="15" fill="rgb(220,123,16)" fg:x="916" fg:w="4"/><text x="72.8908%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="72.7994%" y="677" width="0.1586%" height="15" fill="rgb(238,16,42)" fg:x="918" fg:w="2"/><text x="73.0494%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.8787%" y="661" width="0.0793%" height="15" fill="rgb(239,101,26)" fg:x="919" fg:w="1"/><text x="73.1287%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="72.8787%" y="645" width="0.0793%" height="15" fill="rgb(228,12,27)" fg:x="919" fg:w="1"/><text x="73.1287%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="72.8787%" y="629" width="0.0793%" height="15" fill="rgb(218,165,53)" fg:x="919" fg:w="1"/><text x="73.1287%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="73.0373%" y="645" width="0.0793%" height="15" fill="rgb(250,44,27)" fg:x="921" fg:w="1"/><text x="73.2873%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="73.0373%" y="629" width="0.0793%" height="15" fill="rgb(229,69,35)" fg:x="921" fg:w="1"/><text x="73.2873%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="73.0373%" y="613" width="0.0793%" height="15" fill="rgb(241,38,31)" fg:x="921" fg:w="1"/><text x="73.2873%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="73.0373%" y="677" width="0.1586%" height="15" fill="rgb(224,152,13)" fg:x="921" fg:w="2"/><text x="73.2873%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.0373%" y="661" width="0.1586%" height="15" fill="rgb(207,225,8)" fg:x="921" fg:w="2"/><text x="73.2873%" y="671.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="73.1166%" y="645" width="0.0793%" height="15" fill="rgb(222,135,50)" fg:x="922" fg:w="1"/><text x="73.3666%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="73.0373%" y="709" width="0.3172%" height="15" fill="rgb(245,39,15)" fg:x="921" fg:w="4"/><text x="73.2873%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="73.0373%" y="693" width="0.3172%" height="15" fill="rgb(233,22,17)" fg:x="921" fg:w="4"/><text x="73.2873%" y="703.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="73.1959%" y="677" width="0.1586%" height="15" fill="rgb(227,152,49)" fg:x="923" fg:w="2"/><text x="73.4459%" y="687.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="73.1959%" y="661" width="0.1586%" height="15" fill="rgb(233,162,45)" fg:x="923" fg:w="2"/><text x="73.4459%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="73.1959%" y="645" width="0.1586%" height="15" fill="rgb(217,44,48)" fg:x="923" fg:w="2"/><text x="73.4459%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.1959%" y="629" width="0.1586%" height="15" fill="rgb(253,41,35)" fg:x="923" fg:w="2"/><text x="73.4459%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="73.1959%" y="613" width="0.1586%" height="15" fill="rgb(254,32,37)" fg:x="923" fg:w="2"/><text x="73.4459%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.2752%" y="597" width="0.0793%" height="15" fill="rgb(250,9,9)" fg:x="924" fg:w="1"/><text x="73.5252%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="73.2752%" y="581" width="0.0793%" height="15" fill="rgb(212,37,16)" fg:x="924" fg:w="1"/><text x="73.5252%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="73.3545%" y="709" width="0.1586%" height="15" fill="rgb(235,142,51)" fg:x="925" fg:w="2"/><text x="73.6045%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="73.3545%" y="693" width="0.1586%" height="15" fill="rgb(250,225,53)" fg:x="925" fg:w="2"/><text x="73.6045%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="73.3545%" y="677" width="0.1586%" height="15" fill="rgb(207,188,48)" fg:x="925" fg:w="2"/><text x="73.6045%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.4338%" y="661" width="0.0793%" height="15" fill="rgb(222,25,21)" fg:x="926" fg:w="1"/><text x="73.6838%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.5924%" y="677" width="0.0793%" height="15" fill="rgb(249,112,5)" fg:x="928" fg:w="1"/><text x="73.8424%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.7510%" y="533" width="0.0793%" height="15" fill="rgb(242,11,22)" fg:x="930" fg:w="1"/><text x="74.0010%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.87%)</title><rect x="73.0373%" y="757" width="0.8723%" height="15" fill="rgb(217,125,14)" fg:x="921" fg:w="11"/><text x="73.2873%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.87%)</title><rect x="73.0373%" y="741" width="0.8723%" height="15" fill="rgb(239,92,14)" fg:x="921" fg:w="11"/><text x="73.2873%" y="751.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (11 samples, 0.87%)</title><rect x="73.0373%" y="725" width="0.8723%" height="15" fill="rgb(232,145,17)" fg:x="921" fg:w="11"/><text x="73.2873%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="73.5131%" y="709" width="0.3965%" height="15" fill="rgb(250,158,16)" fg:x="927" fg:w="5"/><text x="73.7631%" y="719.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="73.5924%" y="693" width="0.3172%" height="15" fill="rgb(247,30,22)" fg:x="928" fg:w="4"/><text x="73.8424%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="73.6717%" y="677" width="0.2379%" height="15" fill="rgb(219,215,46)" fg:x="929" fg:w="3"/><text x="73.9217%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="73.6717%" y="661" width="0.2379%" height="15" fill="rgb(237,40,53)" fg:x="929" fg:w="3"/><text x="73.9217%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="73.6717%" y="645" width="0.2379%" height="15" fill="rgb(253,207,11)" fg:x="929" fg:w="3"/><text x="73.9217%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="73.7510%" y="629" width="0.1586%" height="15" fill="rgb(242,16,9)" fg:x="930" fg:w="2"/><text x="74.0010%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.7510%" y="613" width="0.1586%" height="15" fill="rgb(237,94,35)" fg:x="930" fg:w="2"/><text x="74.0010%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.7510%" y="597" width="0.1586%" height="15" fill="rgb(244,145,23)" fg:x="930" fg:w="2"/><text x="74.0010%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="73.7510%" y="581" width="0.1586%" height="15" fill="rgb(209,93,17)" fg:x="930" fg:w="2"/><text x="74.0010%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.7510%" y="565" width="0.1586%" height="15" fill="rgb(205,201,0)" fg:x="930" fg:w="2"/><text x="74.0010%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="73.7510%" y="549" width="0.1586%" height="15" fill="rgb(225,198,48)" fg:x="930" fg:w="2"/><text x="74.0010%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="73.8303%" y="533" width="0.0793%" height="15" fill="rgb(211,131,51)" fg:x="931" fg:w="1"/><text x="74.0803%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.8303%" y="517" width="0.0793%" height="15" fill="rgb(237,196,37)" fg:x="931" fg:w="1"/><text x="74.0803%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.8303%" y="501" width="0.0793%" height="15" fill="rgb(218,204,52)" fg:x="931" fg:w="1"/><text x="74.0803%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.8303%" y="485" width="0.0793%" height="15" fill="rgb(251,67,25)" fg:x="931" fg:w="1"/><text x="74.0803%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (22 samples, 1.74%)</title><rect x="72.2443%" y="805" width="1.7446%" height="15" fill="rgb(219,87,2)" fg:x="911" fg:w="22"/><text x="72.4943%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.03%)</title><rect x="72.9580%" y="789" width="1.0309%" height="15" fill="rgb(224,171,9)" fg:x="920" fg:w="13"/><text x="73.2080%" y="799.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.03%)</title><rect x="72.9580%" y="773" width="1.0309%" height="15" fill="rgb(215,98,45)" fg:x="920" fg:w="13"/><text x="73.2080%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.9096%" y="757" width="0.0793%" height="15" fill="rgb(231,48,23)" fg:x="932" fg:w="1"/><text x="74.1596%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.9096%" y="741" width="0.0793%" height="15" fill="rgb(233,138,42)" fg:x="932" fg:w="1"/><text x="74.1596%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="73.9096%" y="725" width="0.0793%" height="15" fill="rgb(244,107,0)" fg:x="932" fg:w="1"/><text x="74.1596%" y="735.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="73.9096%" y="709" width="0.0793%" height="15" fill="rgb(224,15,0)" fg:x="932" fg:w="1"/><text x="74.1596%" y="719.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="73.9096%" y="693" width="0.0793%" height="15" fill="rgb(218,71,35)" fg:x="932" fg:w="1"/><text x="74.1596%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.9889%" y="757" width="0.1586%" height="15" fill="rgb(244,32,22)" fg:x="933" fg:w="2"/><text x="74.2389%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.9889%" y="741" width="0.1586%" height="15" fill="rgb(232,209,34)" fg:x="933" fg:w="2"/><text x="74.2389%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.9889%" y="725" width="0.1586%" height="15" fill="rgb(232,54,38)" fg:x="933" fg:w="2"/><text x="74.2389%" y="735.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="73.9889%" y="709" width="0.1586%" height="15" fill="rgb(208,83,16)" fg:x="933" fg:w="2"/><text x="74.2389%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="73.9889%" y="805" width="0.2379%" height="15" fill="rgb(208,70,33)" fg:x="933" fg:w="3"/><text x="74.2389%" y="815.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="73.9889%" y="789" width="0.2379%" height="15" fill="rgb(247,38,12)" fg:x="933" fg:w="3"/><text x="74.2389%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="73.9889%" y="773" width="0.2379%" height="15" fill="rgb(206,34,42)" fg:x="933" fg:w="3"/><text x="74.2389%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1475%" y="757" width="0.0793%" height="15" fill="rgb(226,75,43)" fg:x="935" fg:w="1"/><text x="74.3975%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1475%" y="741" width="0.0793%" height="15" fill="rgb(223,109,12)" fg:x="935" fg:w="1"/><text x="74.3975%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1475%" y="725" width="0.0793%" height="15" fill="rgb(218,53,16)" fg:x="935" fg:w="1"/><text x="74.3975%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1475%" y="709" width="0.0793%" height="15" fill="rgb(236,44,50)" fg:x="935" fg:w="1"/><text x="74.3975%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.1475%" y="693" width="0.0793%" height="15" fill="rgb(211,163,12)" fg:x="935" fg:w="1"/><text x="74.3975%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1475%" y="677" width="0.0793%" height="15" fill="rgb(230,67,52)" fg:x="935" fg:w="1"/><text x="74.3975%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.1475%" y="661" width="0.0793%" height="15" fill="rgb(224,204,24)" fg:x="935" fg:w="1"/><text x="74.3975%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.1475%" y="645" width="0.0793%" height="15" fill="rgb(210,50,27)" fg:x="935" fg:w="1"/><text x="74.3975%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (29 samples, 2.30%)</title><rect x="72.0063%" y="821" width="2.2998%" height="15" fill="rgb(251,202,23)" fg:x="908" fg:w="29"/><text x="72.2563%" y="831.50">e..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="74.2268%" y="805" width="0.0793%" height="15" fill="rgb(230,210,21)" fg:x="936" fg:w="1"/><text x="74.4768%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.2268%" y="789" width="0.0793%" height="15" fill="rgb(222,72,44)" fg:x="936" fg:w="1"/><text x="74.4768%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.2268%" y="773" width="0.0793%" height="15" fill="rgb(223,182,13)" fg:x="936" fg:w="1"/><text x="74.4768%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (30 samples, 2.38%)</title><rect x="72.0063%" y="837" width="2.3791%" height="15" fill="rgb(228,61,15)" fg:x="908" fg:w="30"/><text x="72.2563%" y="847.50">&lt;e..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="74.3061%" y="821" width="0.0793%" height="15" fill="rgb(253,207,22)" fg:x="937" fg:w="1"/><text x="74.5561%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.3061%" y="805" width="0.0793%" height="15" fill="rgb(232,10,15)" fg:x="937" fg:w="1"/><text x="74.5561%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="74.3061%" y="789" width="0.0793%" height="15" fill="rgb(227,207,39)" fg:x="937" fg:w="1"/><text x="74.5561%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.4647%" y="645" width="0.0793%" height="15" fill="rgb(228,187,3)" fg:x="939" fg:w="1"/><text x="74.7147%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.4647%" y="629" width="0.0793%" height="15" fill="rgb(246,45,9)" fg:x="939" fg:w="1"/><text x="74.7147%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.4647%" y="709" width="0.1586%" height="15" fill="rgb(249,10,17)" fg:x="939" fg:w="2"/><text x="74.7147%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.4647%" y="693" width="0.1586%" height="15" fill="rgb(251,56,51)" fg:x="939" fg:w="2"/><text x="74.7147%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.4647%" y="677" width="0.1586%" height="15" fill="rgb(232,51,36)" fg:x="939" fg:w="2"/><text x="74.7147%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.4647%" y="661" width="0.1586%" height="15" fill="rgb(215,38,28)" fg:x="939" fg:w="2"/><text x="74.7147%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.5440%" y="645" width="0.0793%" height="15" fill="rgb(218,5,35)" fg:x="940" fg:w="1"/><text x="74.7940%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.5440%" y="629" width="0.0793%" height="15" fill="rgb(232,219,8)" fg:x="940" fg:w="1"/><text x="74.7940%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.5440%" y="613" width="0.0793%" height="15" fill="rgb(243,162,8)" fg:x="940" fg:w="1"/><text x="74.7940%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.5440%" y="597" width="0.0793%" height="15" fill="rgb(218,86,32)" fg:x="940" fg:w="1"/><text x="74.7940%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.5440%" y="581" width="0.0793%" height="15" fill="rgb(218,179,51)" fg:x="940" fg:w="1"/><text x="74.7940%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.5440%" y="565" width="0.0793%" height="15" fill="rgb(237,42,52)" fg:x="940" fg:w="1"/><text x="74.7940%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.5440%" y="549" width="0.0793%" height="15" fill="rgb(229,12,4)" fg:x="940" fg:w="1"/><text x="74.7940%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.5440%" y="533" width="0.0793%" height="15" fill="rgb(214,203,2)" fg:x="940" fg:w="1"/><text x="74.7940%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.5440%" y="517" width="0.0793%" height="15" fill="rgb(241,11,44)" fg:x="940" fg:w="1"/><text x="74.7940%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.5440%" y="501" width="0.0793%" height="15" fill="rgb(221,106,48)" fg:x="940" fg:w="1"/><text x="74.7940%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.5440%" y="485" width="0.0793%" height="15" fill="rgb(220,220,10)" fg:x="940" fg:w="1"/><text x="74.7940%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.5440%" y="469" width="0.0793%" height="15" fill="rgb(228,220,44)" fg:x="940" fg:w="1"/><text x="74.7940%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="74.4647%" y="757" width="0.2379%" height="15" fill="rgb(214,144,45)" fg:x="939" fg:w="3"/><text x="74.7147%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="74.4647%" y="741" width="0.2379%" height="15" fill="rgb(224,142,28)" fg:x="939" fg:w="3"/><text x="74.7147%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="74.4647%" y="725" width="0.2379%" height="15" fill="rgb(214,79,27)" fg:x="939" fg:w="3"/><text x="74.7147%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6233%" y="709" width="0.0793%" height="15" fill="rgb(208,173,30)" fg:x="941" fg:w="1"/><text x="74.8733%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6233%" y="693" width="0.0793%" height="15" fill="rgb(222,81,9)" fg:x="941" fg:w="1"/><text x="74.8733%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.6233%" y="677" width="0.0793%" height="15" fill="rgb(217,152,25)" fg:x="941" fg:w="1"/><text x="74.8733%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6233%" y="661" width="0.0793%" height="15" fill="rgb(248,170,26)" fg:x="941" fg:w="1"/><text x="74.8733%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.6233%" y="645" width="0.0793%" height="15" fill="rgb(206,151,5)" fg:x="941" fg:w="1"/><text x="74.8733%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.6233%" y="629" width="0.0793%" height="15" fill="rgb(216,7,52)" fg:x="941" fg:w="1"/><text x="74.8733%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="74.7026%" y="741" width="0.0793%" height="15" fill="rgb(228,27,44)" fg:x="942" fg:w="1"/><text x="74.9526%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.7026%" y="725" width="0.0793%" height="15" fill="rgb(208,221,38)" fg:x="942" fg:w="1"/><text x="74.9526%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7819%" y="709" width="0.0793%" height="15" fill="rgb(240,59,23)" fg:x="943" fg:w="1"/><text x="75.0319%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7819%" y="693" width="0.0793%" height="15" fill="rgb(210,127,41)" fg:x="943" fg:w="1"/><text x="75.0319%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7819%" y="677" width="0.0793%" height="15" fill="rgb(224,160,3)" fg:x="943" fg:w="1"/><text x="75.0319%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.7819%" y="661" width="0.0793%" height="15" fill="rgb(215,228,26)" fg:x="943" fg:w="1"/><text x="75.0319%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.7819%" y="645" width="0.0793%" height="15" fill="rgb(218,107,38)" fg:x="943" fg:w="1"/><text x="75.0319%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.7819%" y="629" width="0.0793%" height="15" fill="rgb(246,159,42)" fg:x="943" fg:w="1"/><text x="75.0319%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.7819%" y="613" width="0.0793%" height="15" fill="rgb(251,23,41)" fg:x="943" fg:w="1"/><text x="75.0319%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.7819%" y="597" width="0.0793%" height="15" fill="rgb(246,94,53)" fg:x="943" fg:w="1"/><text x="75.0319%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.7819%" y="581" width="0.0793%" height="15" fill="rgb(241,212,46)" fg:x="943" fg:w="1"/><text x="75.0319%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.7819%" y="565" width="0.0793%" height="15" fill="rgb(231,79,30)" fg:x="943" fg:w="1"/><text x="75.0319%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.7819%" y="549" width="0.0793%" height="15" fill="rgb(208,202,21)" fg:x="943" fg:w="1"/><text x="75.0319%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.7819%" y="533" width="0.0793%" height="15" fill="rgb(226,136,22)" fg:x="943" fg:w="1"/><text x="75.0319%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.7819%" y="517" width="0.0793%" height="15" fill="rgb(214,87,0)" fg:x="943" fg:w="1"/><text x="75.0319%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.7819%" y="501" width="0.0793%" height="15" fill="rgb(239,176,44)" fg:x="943" fg:w="1"/><text x="75.0319%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.7819%" y="485" width="0.0793%" height="15" fill="rgb(230,102,31)" fg:x="943" fg:w="1"/><text x="75.0319%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.7819%" y="469" width="0.0793%" height="15" fill="rgb(219,40,19)" fg:x="943" fg:w="1"/><text x="75.0319%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.48%)</title><rect x="74.4647%" y="789" width="0.4758%" height="15" fill="rgb(228,55,4)" fg:x="939" fg:w="6"/><text x="74.7147%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="74.4647%" y="773" width="0.4758%" height="15" fill="rgb(239,120,21)" fg:x="939" fg:w="6"/><text x="74.7147%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="74.7026%" y="757" width="0.2379%" height="15" fill="rgb(243,136,1)" fg:x="942" fg:w="3"/><text x="74.9526%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.7819%" y="741" width="0.1586%" height="15" fill="rgb(237,12,45)" fg:x="943" fg:w="2"/><text x="75.0319%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.7819%" y="725" width="0.1586%" height="15" fill="rgb(245,142,47)" fg:x="943" fg:w="2"/><text x="75.0319%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.8612%" y="709" width="0.0793%" height="15" fill="rgb(237,24,54)" fg:x="944" fg:w="1"/><text x="75.1112%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8612%" y="693" width="0.0793%" height="15" fill="rgb(234,164,40)" fg:x="944" fg:w="1"/><text x="75.1112%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.8612%" y="677" width="0.0793%" height="15" fill="rgb(242,95,12)" fg:x="944" fg:w="1"/><text x="75.1112%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8612%" y="661" width="0.0793%" height="15" fill="rgb(238,75,28)" fg:x="944" fg:w="1"/><text x="75.1112%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.8612%" y="645" width="0.0793%" height="15" fill="rgb(236,4,26)" fg:x="944" fg:w="1"/><text x="75.1112%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8612%" y="629" width="0.0793%" height="15" fill="rgb(252,158,20)" fg:x="944" fg:w="1"/><text x="75.1112%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.8612%" y="613" width="0.0793%" height="15" fill="rgb(231,67,31)" fg:x="944" fg:w="1"/><text x="75.1112%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.9405%" y="725" width="0.1586%" height="15" fill="rgb(241,151,13)" fg:x="945" fg:w="2"/><text x="75.1905%" y="735.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="75.1784%" y="693" width="0.0793%" height="15" fill="rgb(242,25,36)" fg:x="948" fg:w="1"/><text x="75.4284%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2577%" y="629" width="0.0793%" height="15" fill="rgb(205,222,34)" fg:x="949" fg:w="1"/><text x="75.5077%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.2577%" y="613" width="0.0793%" height="15" fill="rgb(235,154,26)" fg:x="949" fg:w="1"/><text x="75.5077%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.2577%" y="597" width="0.0793%" height="15" fill="rgb(233,17,9)" fg:x="949" fg:w="1"/><text x="75.5077%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.4163%" y="565" width="0.0793%" height="15" fill="rgb(245,113,50)" fg:x="951" fg:w="1"/><text x="75.6663%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.4163%" y="549" width="0.0793%" height="15" fill="rgb(247,105,34)" fg:x="951" fg:w="1"/><text x="75.6663%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.4163%" y="533" width="0.0793%" height="15" fill="rgb(225,50,23)" fg:x="951" fg:w="1"/><text x="75.6663%" y="543.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.63%)</title><rect x="74.9405%" y="773" width="0.6344%" height="15" fill="rgb(253,189,32)" fg:x="945" fg:w="8"/><text x="75.1905%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.63%)</title><rect x="74.9405%" y="757" width="0.6344%" height="15" fill="rgb(208,159,41)" fg:x="945" fg:w="8"/><text x="75.1905%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.63%)</title><rect x="74.9405%" y="741" width="0.6344%" height="15" fill="rgb(222,135,10)" fg:x="945" fg:w="8"/><text x="75.1905%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="75.0991%" y="725" width="0.4758%" height="15" fill="rgb(214,75,20)" fg:x="947" fg:w="6"/><text x="75.3491%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="75.0991%" y="709" width="0.4758%" height="15" fill="rgb(231,65,33)" fg:x="947" fg:w="6"/><text x="75.3491%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="75.2577%" y="693" width="0.3172%" height="15" fill="rgb(251,139,6)" fg:x="949" fg:w="4"/><text x="75.5077%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="75.2577%" y="677" width="0.3172%" height="15" fill="rgb(225,220,53)" fg:x="949" fg:w="4"/><text x="75.5077%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="75.2577%" y="661" width="0.3172%" height="15" fill="rgb(244,73,26)" fg:x="949" fg:w="4"/><text x="75.5077%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="75.2577%" y="645" width="0.3172%" height="15" fill="rgb(244,98,34)" fg:x="949" fg:w="4"/><text x="75.5077%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.3370%" y="629" width="0.2379%" height="15" fill="rgb(211,131,5)" fg:x="950" fg:w="3"/><text x="75.5870%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.4163%" y="613" width="0.1586%" height="15" fill="rgb(238,14,50)" fg:x="951" fg:w="2"/><text x="75.6663%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.4163%" y="597" width="0.1586%" height="15" fill="rgb(206,132,52)" fg:x="951" fg:w="2"/><text x="75.6663%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.4163%" y="581" width="0.1586%" height="15" fill="rgb(228,200,17)" fg:x="951" fg:w="2"/><text x="75.6663%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.4956%" y="565" width="0.0793%" height="15" fill="rgb(209,53,28)" fg:x="952" fg:w="1"/><text x="75.7456%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.4956%" y="549" width="0.0793%" height="15" fill="rgb(240,214,22)" fg:x="952" fg:w="1"/><text x="75.7456%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.5749%" y="741" width="0.0793%" height="15" fill="rgb(213,217,46)" fg:x="953" fg:w="1"/><text x="75.8249%" y="751.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="75.7335%" y="693" width="0.1586%" height="15" fill="rgb(241,159,53)" fg:x="955" fg:w="2"/><text x="75.9835%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.7335%" y="677" width="0.1586%" height="15" fill="rgb(241,70,32)" fg:x="955" fg:w="2"/><text x="75.9835%" y="687.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.8128%" y="661" width="0.0793%" height="15" fill="rgb(233,117,50)" fg:x="956" fg:w="1"/><text x="76.0628%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.8128%" y="645" width="0.0793%" height="15" fill="rgb(211,114,15)" fg:x="956" fg:w="1"/><text x="76.0628%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.8128%" y="629" width="0.0793%" height="15" fill="rgb(254,0,36)" fg:x="956" fg:w="1"/><text x="76.0628%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.8128%" y="613" width="0.0793%" height="15" fill="rgb(221,74,12)" fg:x="956" fg:w="1"/><text x="76.0628%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.8128%" y="597" width="0.0793%" height="15" fill="rgb(241,221,3)" fg:x="956" fg:w="1"/><text x="76.0628%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.8921%" y="693" width="0.0793%" height="15" fill="rgb(252,91,23)" fg:x="957" fg:w="1"/><text x="76.1421%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="75.6542%" y="741" width="0.3965%" height="15" fill="rgb(232,1,25)" fg:x="954" fg:w="5"/><text x="75.9042%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="75.6542%" y="725" width="0.3965%" height="15" fill="rgb(253,145,25)" fg:x="954" fg:w="5"/><text x="75.9042%" y="735.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="75.7335%" y="709" width="0.3172%" height="15" fill="rgb(226,43,53)" fg:x="955" fg:w="4"/><text x="75.9835%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9715%" y="693" width="0.0793%" height="15" fill="rgb(245,116,39)" fg:x="958" fg:w="1"/><text x="76.2215%" y="703.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.9715%" y="677" width="0.0793%" height="15" fill="rgb(231,205,33)" fg:x="958" fg:w="1"/><text x="76.2215%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.9715%" y="661" width="0.0793%" height="15" fill="rgb(238,96,15)" fg:x="958" fg:w="1"/><text x="76.2215%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9715%" y="645" width="0.0793%" height="15" fill="rgb(212,80,14)" fg:x="958" fg:w="1"/><text x="76.2215%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.9715%" y="629" width="0.0793%" height="15" fill="rgb(209,118,24)" fg:x="958" fg:w="1"/><text x="76.2215%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.9715%" y="613" width="0.0793%" height="15" fill="rgb(234,176,14)" fg:x="958" fg:w="1"/><text x="76.2215%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.9715%" y="597" width="0.0793%" height="15" fill="rgb(207,145,21)" fg:x="958" fg:w="1"/><text x="76.2215%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.2887%" y="709" width="0.0793%" height="15" fill="rgb(218,58,54)" fg:x="962" fg:w="1"/><text x="76.5387%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (19 samples, 1.51%)</title><rect x="74.9405%" y="789" width="1.5067%" height="15" fill="rgb(229,11,50)" fg:x="945" fg:w="19"/><text x="75.1905%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (11 samples, 0.87%)</title><rect x="75.5749%" y="773" width="0.8723%" height="15" fill="rgb(221,170,33)" fg:x="953" fg:w="11"/><text x="75.8249%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.87%)</title><rect x="75.5749%" y="757" width="0.8723%" height="15" fill="rgb(221,121,40)" fg:x="953" fg:w="11"/><text x="75.8249%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="76.0508%" y="741" width="0.3965%" height="15" fill="rgb(214,165,32)" fg:x="959" fg:w="5"/><text x="76.3008%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="76.0508%" y="725" width="0.3965%" height="15" fill="rgb(243,195,30)" fg:x="959" fg:w="5"/><text x="76.3008%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.3680%" y="709" width="0.0793%" height="15" fill="rgb(238,0,27)" fg:x="963" fg:w="1"/><text x="76.6180%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.4473%" y="693" width="0.0793%" height="15" fill="rgb(226,0,50)" fg:x="964" fg:w="1"/><text x="76.6973%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.4473%" y="709" width="0.1586%" height="15" fill="rgb(222,93,46)" fg:x="964" fg:w="2"/><text x="76.6973%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.5266%" y="693" width="0.0793%" height="15" fill="rgb(210,34,24)" fg:x="965" fg:w="1"/><text x="76.7766%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="76.4473%" y="741" width="0.2379%" height="15" fill="rgb(217,47,8)" fg:x="964" fg:w="3"/><text x="76.6973%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="76.4473%" y="725" width="0.2379%" height="15" fill="rgb(217,0,26)" fg:x="964" fg:w="3"/><text x="76.6973%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.6059%" y="709" width="0.0793%" height="15" fill="rgb(218,228,31)" fg:x="966" fg:w="1"/><text x="76.8559%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.6059%" y="693" width="0.0793%" height="15" fill="rgb(208,101,40)" fg:x="966" fg:w="1"/><text x="76.8559%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.6059%" y="677" width="0.0793%" height="15" fill="rgb(225,134,0)" fg:x="966" fg:w="1"/><text x="76.8559%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.6059%" y="661" width="0.0793%" height="15" fill="rgb(241,37,25)" fg:x="966" fg:w="1"/><text x="76.8559%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.6059%" y="645" width="0.0793%" height="15" fill="rgb(251,149,9)" fg:x="966" fg:w="1"/><text x="76.8559%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="76.6059%" y="629" width="0.0793%" height="15" fill="rgb(225,196,54)" fg:x="966" fg:w="1"/><text x="76.8559%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="76.6059%" y="613" width="0.0793%" height="15" fill="rgb(240,46,24)" fg:x="966" fg:w="1"/><text x="76.8559%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="76.4473%" y="789" width="0.3965%" height="15" fill="rgb(214,189,4)" fg:x="964" fg:w="5"/><text x="76.6973%" y="799.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="76.4473%" y="773" width="0.3965%" height="15" fill="rgb(222,3,8)" fg:x="964" fg:w="5"/><text x="76.6973%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="76.4473%" y="757" width="0.3965%" height="15" fill="rgb(250,163,6)" fg:x="964" fg:w="5"/><text x="76.6973%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.6852%" y="741" width="0.1586%" height="15" fill="rgb(225,23,45)" fg:x="967" fg:w="2"/><text x="76.9352%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.6852%" y="725" width="0.1586%" height="15" fill="rgb(225,177,23)" fg:x="967" fg:w="2"/><text x="76.9352%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.6852%" y="709" width="0.1586%" height="15" fill="rgb(253,75,3)" fg:x="967" fg:w="2"/><text x="76.9352%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.6852%" y="693" width="0.1586%" height="15" fill="rgb(237,85,4)" fg:x="967" fg:w="2"/><text x="76.9352%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="76.6852%" y="677" width="0.1586%" height="15" fill="rgb(212,23,3)" fg:x="967" fg:w="2"/><text x="76.9352%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.6852%" y="661" width="0.1586%" height="15" fill="rgb(250,127,19)" fg:x="967" fg:w="2"/><text x="76.9352%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.6852%" y="645" width="0.1586%" height="15" fill="rgb(222,82,14)" fg:x="967" fg:w="2"/><text x="76.9352%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.6852%" y="629" width="0.1586%" height="15" fill="rgb(213,63,47)" fg:x="967" fg:w="2"/><text x="76.9352%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.6852%" y="613" width="0.1586%" height="15" fill="rgb(219,132,41)" fg:x="967" fg:w="2"/><text x="76.9352%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7645%" y="597" width="0.0793%" height="15" fill="rgb(251,205,16)" fg:x="968" fg:w="1"/><text x="77.0145%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.8438%" y="773" width="0.1586%" height="15" fill="rgb(239,102,23)" fg:x="969" fg:w="2"/><text x="77.0938%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.8438%" y="757" width="0.1586%" height="15" fill="rgb(222,218,4)" fg:x="969" fg:w="2"/><text x="77.0938%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="76.8438%" y="741" width="0.1586%" height="15" fill="rgb(232,91,40)" fg:x="969" fg:w="2"/><text x="77.0938%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (34 samples, 2.70%)</title><rect x="74.3854%" y="837" width="2.6963%" height="15" fill="rgb(238,170,50)" fg:x="938" fg:w="34"/><text x="74.6354%" y="847.50">&lt;e..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (34 samples, 2.70%)</title><rect x="74.3854%" y="821" width="2.6963%" height="15" fill="rgb(243,52,25)" fg:x="938" fg:w="34"/><text x="74.6354%" y="831.50">&lt;e..</text></g><g><title>engine::session::internal::Entities::add_persisted (34 samples, 2.70%)</title><rect x="74.3854%" y="805" width="2.6963%" height="15" fill="rgb(236,151,10)" fg:x="938" fg:w="34"/><text x="74.6354%" y="815.50">en..</text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="76.8438%" y="789" width="0.2379%" height="15" fill="rgb(216,123,7)" fg:x="969" fg:w="3"/><text x="77.0938%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.0024%" y="773" width="0.0793%" height="15" fill="rgb(247,115,15)" fg:x="971" fg:w="1"/><text x="77.2524%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="77.0024%" y="757" width="0.0793%" height="15" fill="rgb(249,65,46)" fg:x="971" fg:w="1"/><text x="77.2524%" y="767.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="77.1610%" y="805" width="0.0793%" height="15" fill="rgb(230,132,24)" fg:x="973" fg:w="1"/><text x="77.4110%" y="815.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="77.1610%" y="789" width="0.0793%" height="15" fill="rgb(253,115,7)" fg:x="973" fg:w="1"/><text x="77.4110%" y="799.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="77.1610%" y="773" width="0.0793%" height="15" fill="rgb(233,23,21)" fg:x="973" fg:w="1"/><text x="77.4110%" y="783.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="77.1610%" y="757" width="0.0793%" height="15" fill="rgb(231,203,18)" fg:x="973" fg:w="1"/><text x="77.4110%" y="767.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (1 samples, 0.08%)</title><rect x="77.1610%" y="741" width="0.0793%" height="15" fill="rgb(233,19,15)" fg:x="973" fg:w="1"/><text x="77.4110%" y="751.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="77.1610%" y="725" width="0.0793%" height="15" fill="rgb(213,12,4)" fg:x="973" fg:w="1"/><text x="77.4110%" y="735.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="77.1610%" y="709" width="0.0793%" height="15" fill="rgb(221,198,54)" fg:x="973" fg:w="1"/><text x="77.4110%" y="719.50"></text></g><g><title>&lt;plugins_core::chat::ChatPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="77.2403%" y="805" width="0.0793%" height="15" fill="rgb(247,189,16)" fg:x="974" fg:w="1"/><text x="77.4903%" y="815.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (4 samples, 0.32%)</title><rect x="77.0817%" y="837" width="0.3172%" height="15" fill="rgb(213,82,46)" fg:x="972" fg:w="4"/><text x="77.3317%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="77.0817%" y="821" width="0.3172%" height="15" fill="rgb(216,129,40)" fg:x="972" fg:w="4"/><text x="77.3317%" y="831.50"></text></g><g><title>&lt;plugins_core::emote::EmotePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="77.3196%" y="805" width="0.0793%" height="15" fill="rgb(222,154,45)" fg:x="975" fg:w="1"/><text x="77.5696%" y="815.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="77.3196%" y="789" width="0.0793%" height="15" fill="rgb(214,223,41)" fg:x="975" fg:w="1"/><text x="77.5696%" y="799.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="77.3989%" y="837" width="0.3172%" height="15" fill="rgb(212,167,3)" fg:x="976" fg:w="4"/><text x="77.6489%" y="847.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.7161%" y="821" width="0.0793%" height="15" fill="rgb(219,226,20)" fg:x="980" fg:w="1"/><text x="77.9661%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="77.8747%" y="789" width="0.0793%" height="15" fill="rgb(231,29,48)" fg:x="982" fg:w="1"/><text x="78.1247%" y="799.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="77.9540%" y="789" width="0.1586%" height="15" fill="rgb(224,12,4)" fg:x="983" fg:w="2"/><text x="78.2040%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.9540%" y="773" width="0.1586%" height="15" fill="rgb(217,180,30)" fg:x="983" fg:w="2"/><text x="78.2040%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0333%" y="757" width="0.0793%" height="15" fill="rgb(237,137,17)" fg:x="984" fg:w="1"/><text x="78.2833%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0333%" y="741" width="0.0793%" height="15" fill="rgb(252,225,18)" fg:x="984" fg:w="1"/><text x="78.2833%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0333%" y="725" width="0.0793%" height="15" fill="rgb(209,177,11)" fg:x="984" fg:w="1"/><text x="78.2833%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.0333%" y="709" width="0.0793%" height="15" fill="rgb(214,147,8)" fg:x="984" fg:w="1"/><text x="78.2833%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.0333%" y="693" width="0.0793%" height="15" fill="rgb(213,225,52)" fg:x="984" fg:w="1"/><text x="78.2833%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.0333%" y="677" width="0.0793%" height="15" fill="rgb(205,99,43)" fg:x="984" fg:w="1"/><text x="78.2833%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.0333%" y="661" width="0.0793%" height="15" fill="rgb(248,141,45)" fg:x="984" fg:w="1"/><text x="78.2833%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.0333%" y="645" width="0.0793%" height="15" fill="rgb(233,198,44)" fg:x="984" fg:w="1"/><text x="78.2833%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.0333%" y="629" width="0.0793%" height="15" fill="rgb(231,176,38)" fg:x="984" fg:w="1"/><text x="78.2833%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.0333%" y="613" width="0.0793%" height="15" fill="rgb(209,31,1)" fg:x="984" fg:w="1"/><text x="78.2833%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.0333%" y="597" width="0.0793%" height="15" fill="rgb(246,42,27)" fg:x="984" fg:w="1"/><text x="78.2833%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.0333%" y="581" width="0.0793%" height="15" fill="rgb(244,104,27)" fg:x="984" fg:w="1"/><text x="78.2833%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.0333%" y="565" width="0.0793%" height="15" fill="rgb(209,14,27)" fg:x="984" fg:w="1"/><text x="78.2833%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.1126%" y="757" width="0.0793%" height="15" fill="rgb(205,170,50)" fg:x="985" fg:w="1"/><text x="78.3626%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.1126%" y="741" width="0.0793%" height="15" fill="rgb(241,127,20)" fg:x="985" fg:w="1"/><text x="78.3626%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.1919%" y="757" width="0.0793%" height="15" fill="rgb(230,72,5)" fg:x="986" fg:w="1"/><text x="78.4419%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.1919%" y="741" width="0.0793%" height="15" fill="rgb(231,221,3)" fg:x="986" fg:w="1"/><text x="78.4419%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.1919%" y="725" width="0.0793%" height="15" fill="rgb(232,150,49)" fg:x="986" fg:w="1"/><text x="78.4419%" y="735.50"></text></g><g><title>engine::users::model::username_to_key (8 samples, 0.63%)</title><rect x="77.7161%" y="837" width="0.6344%" height="15" fill="rgb(225,13,46)" fg:x="980" fg:w="8"/><text x="77.9661%" y="847.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="77.7954%" y="821" width="0.5551%" height="15" fill="rgb(236,192,49)" fg:x="981" fg:w="7"/><text x="78.0454%" y="831.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="77.7954%" y="805" width="0.5551%" height="15" fill="rgb(242,107,14)" fg:x="981" fg:w="7"/><text x="78.0454%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="78.1126%" y="789" width="0.2379%" height="15" fill="rgb(251,185,35)" fg:x="985" fg:w="3"/><text x="78.3626%" y="799.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="78.1126%" y="773" width="0.2379%" height="15" fill="rgb(212,128,8)" fg:x="985" fg:w="3"/><text x="78.3626%" y="783.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="78.2712%" y="757" width="0.0793%" height="15" fill="rgb(215,223,6)" fg:x="987" fg:w="1"/><text x="78.5212%" y="767.50"></text></g><g><title>&lt;core::cell::Ref&lt;T&gt; as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.4298%" y="693" width="0.0793%" height="15" fill="rgb(216,23,45)" fg:x="989" fg:w="1"/><text x="78.6798%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (991 samples, 78.59%)</title><rect x="0.0000%" y="901" width="78.5884%" height="15" fill="rgb(215,71,45)" fg:x="0" fg:w="991"/><text x="0.2500%" y="911.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (991 samples, 78.59%)</title><rect x="0.0000%" y="885" width="78.5884%" height="15" fill="rgb(224,2,48)" fg:x="0" fg:w="991"/><text x="0.2500%" y="895.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (991 samples, 78.59%)</title><rect x="0.0000%" y="869" width="78.5884%" height="15" fill="rgb(218,48,8)" fg:x="0" fg:w="991"/><text x="0.2500%" y="879.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (390 samples, 30.93%)</title><rect x="47.6606%" y="853" width="30.9278%" height="15" fill="rgb(254,37,27)" fg:x="601" fg:w="390"/><text x="47.9106%" y="863.50">engine::session::Session::evaluate_and_perform</text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="78.3505%" y="837" width="0.2379%" height="15" fill="rgb(237,112,2)" fg:x="988" fg:w="3"/><text x="78.6005%" y="847.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="78.4298%" y="821" width="0.1586%" height="15" fill="rgb(243,64,54)" fg:x="989" fg:w="2"/><text x="78.6798%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="78.4298%" y="805" width="0.1586%" height="15" fill="rgb(211,93,4)" fg:x="989" fg:w="2"/><text x="78.6798%" y="815.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.4298%" y="789" width="0.1586%" height="15" fill="rgb(249,127,30)" fg:x="989" fg:w="2"/><text x="78.6798%" y="799.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.4298%" y="773" width="0.1586%" height="15" fill="rgb(248,76,17)" fg:x="989" fg:w="2"/><text x="78.6798%" y="783.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="78.4298%" y="757" width="0.1586%" height="15" fill="rgb(244,153,49)" fg:x="989" fg:w="2"/><text x="78.6798%" y="767.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="78.4298%" y="741" width="0.1586%" height="15" fill="rgb(231,94,34)" fg:x="989" fg:w="2"/><text x="78.6798%" y="751.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.4298%" y="725" width="0.1586%" height="15" fill="rgb(253,162,40)" fg:x="989" fg:w="2"/><text x="78.6798%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.4298%" y="709" width="0.1586%" height="15" fill="rgb(219,194,14)" fg:x="989" fg:w="2"/><text x="78.6798%" y="719.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="78.5091%" y="693" width="0.0793%" height="15" fill="rgb(226,80,42)" fg:x="990" fg:w="1"/><text x="78.7591%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="78.6677%" y="693" width="0.1586%" height="15" fill="rgb(208,108,5)" fg:x="992" fg:w="2"/><text x="78.9177%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.8263%" y="693" width="0.0793%" height="15" fill="rgb(209,204,33)" fg:x="994" fg:w="1"/><text x="79.0763%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="78.6677%" y="757" width="0.3965%" height="15" fill="rgb(232,22,14)" fg:x="992" fg:w="5"/><text x="78.9177%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.6677%" y="741" width="0.3965%" height="15" fill="rgb(236,139,41)" fg:x="992" fg:w="5"/><text x="78.9177%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.6677%" y="725" width="0.3965%" height="15" fill="rgb(220,91,0)" fg:x="992" fg:w="5"/><text x="78.9177%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="78.6677%" y="709" width="0.3965%" height="15" fill="rgb(243,200,48)" fg:x="992" fg:w="5"/><text x="78.9177%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.9056%" y="693" width="0.1586%" height="15" fill="rgb(237,172,41)" fg:x="995" fg:w="2"/><text x="79.1556%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.9849%" y="677" width="0.0793%" height="15" fill="rgb(247,152,34)" fg:x="996" fg:w="1"/><text x="79.2349%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="78.5884%" y="821" width="0.5551%" height="15" fill="rgb(205,88,40)" fg:x="991" fg:w="7"/><text x="78.8384%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (7 samples, 0.56%)</title><rect x="78.5884%" y="805" width="0.5551%" height="15" fill="rgb(223,30,13)" fg:x="991" fg:w="7"/><text x="78.8384%" y="815.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="78.5884%" y="789" width="0.5551%" height="15" fill="rgb(249,7,18)" fg:x="991" fg:w="7"/><text x="78.8384%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="78.5884%" y="773" width="0.5551%" height="15" fill="rgb(242,185,6)" fg:x="991" fg:w="7"/><text x="78.8384%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.0642%" y="757" width="0.0793%" height="15" fill="rgb(234,115,47)" fg:x="997" fg:w="1"/><text x="79.3142%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.63%)</title><rect x="78.5884%" y="853" width="0.6344%" height="15" fill="rgb(213,98,2)" fg:x="991" fg:w="8"/><text x="78.8384%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (8 samples, 0.63%)</title><rect x="78.5884%" y="837" width="0.6344%" height="15" fill="rgb(237,162,23)" fg:x="991" fg:w="8"/><text x="78.8384%" y="847.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.1435%" y="821" width="0.0793%" height="15" fill="rgb(240,174,26)" fg:x="998" fg:w="1"/><text x="79.3935%" y="831.50"></text></g><g><title>libloading::safe::Library::new (5 samples, 0.40%)</title><rect x="79.2228%" y="757" width="0.3965%" height="15" fill="rgb(249,90,45)" fg:x="999" fg:w="5"/><text x="79.4728%" y="767.50"></text></g><g><title>dlopen (5 samples, 0.40%)</title><rect x="79.2228%" y="741" width="0.3965%" height="15" fill="rgb(212,126,4)" fg:x="999" fg:w="5"/><text x="79.4728%" y="751.50"></text></g><g><title>_dl_catch_error (5 samples, 0.40%)</title><rect x="79.2228%" y="725" width="0.3965%" height="15" fill="rgb(236,98,48)" fg:x="999" fg:w="5"/><text x="79.4728%" y="735.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="79.2228%" y="709" width="0.3965%" height="15" fill="rgb(250,14,51)" fg:x="999" fg:w="5"/><text x="79.4728%" y="719.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="79.2228%" y="693" width="0.3965%" height="15" fill="rgb(236,2,16)" fg:x="999" fg:w="5"/><text x="79.4728%" y="703.50"></text></g><g><title>_dl_catch_exception (5 samples, 0.40%)</title><rect x="79.2228%" y="677" width="0.3965%" height="15" fill="rgb(250,146,3)" fg:x="999" fg:w="5"/><text x="79.4728%" y="687.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (6 samples, 0.48%)</title><rect x="79.2228%" y="789" width="0.4758%" height="15" fill="rgb(233,72,0)" fg:x="999" fg:w="6"/><text x="79.4728%" y="799.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (6 samples, 0.48%)</title><rect x="79.2228%" y="773" width="0.4758%" height="15" fill="rgb(249,172,7)" fg:x="999" fg:w="6"/><text x="79.4728%" y="783.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="79.6193%" y="757" width="0.0793%" height="15" fill="rgb(224,213,17)" fg:x="1004" fg:w="1"/><text x="79.8693%" y="767.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="79.6193%" y="741" width="0.0793%" height="15" fill="rgb(221,52,2)" fg:x="1004" fg:w="1"/><text x="79.8693%" y="751.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (7 samples, 0.56%)</title><rect x="79.2228%" y="853" width="0.5551%" height="15" fill="rgb(220,8,41)" fg:x="999" fg:w="7"/><text x="79.4728%" y="863.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (7 samples, 0.56%)</title><rect x="79.2228%" y="837" width="0.5551%" height="15" fill="rgb(230,207,34)" fg:x="999" fg:w="7"/><text x="79.4728%" y="847.50"></text></g><g><title>engine::session::Session::new (7 samples, 0.56%)</title><rect x="79.2228%" y="821" width="0.5551%" height="15" fill="rgb(240,157,11)" fg:x="999" fg:w="7"/><text x="79.4728%" y="831.50"></text></g><g><title>engine::session::Session::initialize (7 samples, 0.56%)</title><rect x="79.2228%" y="805" width="0.5551%" height="15" fill="rgb(243,209,15)" fg:x="999" fg:w="7"/><text x="79.4728%" y="815.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="79.6987%" y="789" width="0.0793%" height="15" fill="rgb(251,191,33)" fg:x="1005" fg:w="1"/><text x="79.9487%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="79.6987%" y="773" width="0.0793%" height="15" fill="rgb(217,58,8)" fg:x="1005" fg:w="1"/><text x="79.9487%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="79.6987%" y="757" width="0.0793%" height="15" fill="rgb(210,35,1)" fg:x="1005" fg:w="1"/><text x="79.9487%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="79.9366%" y="757" width="0.0793%" height="15" fill="rgb(231,62,7)" fg:x="1008" fg:w="1"/><text x="80.1866%" y="767.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="79.9366%" y="741" width="0.0793%" height="15" fill="rgb(207,73,10)" fg:x="1008" fg:w="1"/><text x="80.1866%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.9366%" y="725" width="0.0793%" height="15" fill="rgb(216,178,40)" fg:x="1008" fg:w="1"/><text x="80.1866%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.9366%" y="709" width="0.0793%" height="15" fill="rgb(238,220,1)" fg:x="1008" fg:w="1"/><text x="80.1866%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.9366%" y="693" width="0.0793%" height="15" fill="rgb(246,169,39)" fg:x="1008" fg:w="1"/><text x="80.1866%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.9366%" y="677" width="0.0793%" height="15" fill="rgb(240,186,45)" fg:x="1008" fg:w="1"/><text x="80.1866%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.0159%" y="741" width="0.0793%" height="15" fill="rgb(225,14,29)" fg:x="1009" fg:w="1"/><text x="80.2659%" y="751.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.0159%" y="725" width="0.0793%" height="15" fill="rgb(243,96,26)" fg:x="1009" fg:w="1"/><text x="80.2659%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.0159%" y="709" width="0.0793%" height="15" fill="rgb(234,139,10)" fg:x="1009" fg:w="1"/><text x="80.2659%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.0159%" y="693" width="0.0793%" height="15" fill="rgb(235,208,23)" fg:x="1009" fg:w="1"/><text x="80.2659%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="80.0159%" y="677" width="0.0793%" height="15" fill="rgb(230,140,47)" fg:x="1009" fg:w="1"/><text x="80.2659%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.2538%" y="725" width="0.1586%" height="15" fill="rgb(241,227,54)" fg:x="1012" fg:w="2"/><text x="80.5038%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.3331%" y="709" width="0.0793%" height="15" fill="rgb(221,210,40)" fg:x="1013" fg:w="1"/><text x="80.5831%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.3331%" y="693" width="0.0793%" height="15" fill="rgb(207,52,1)" fg:x="1013" fg:w="1"/><text x="80.5831%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.3331%" y="677" width="0.0793%" height="15" fill="rgb(243,147,42)" fg:x="1013" fg:w="1"/><text x="80.5831%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.3331%" y="661" width="0.0793%" height="15" fill="rgb(245,93,7)" fg:x="1013" fg:w="1"/><text x="80.5831%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.3331%" y="645" width="0.0793%" height="15" fill="rgb(243,119,13)" fg:x="1013" fg:w="1"/><text x="80.5831%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.3331%" y="629" width="0.0793%" height="15" fill="rgb(228,164,28)" fg:x="1013" fg:w="1"/><text x="80.5831%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.4917%" y="709" width="0.0793%" height="15" fill="rgb(234,37,39)" fg:x="1015" fg:w="1"/><text x="80.7417%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.4917%" y="693" width="0.0793%" height="15" fill="rgb(246,155,10)" fg:x="1015" fg:w="1"/><text x="80.7417%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.4917%" y="677" width="0.0793%" height="15" fill="rgb(208,140,53)" fg:x="1015" fg:w="1"/><text x="80.7417%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.5710%" y="661" width="0.1586%" height="15" fill="rgb(234,107,29)" fg:x="1016" fg:w="2"/><text x="80.8210%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.5710%" y="645" width="0.1586%" height="15" fill="rgb(217,45,5)" fg:x="1016" fg:w="2"/><text x="80.8210%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="80.4124%" y="725" width="0.3965%" height="15" fill="rgb(251,168,5)" fg:x="1014" fg:w="5"/><text x="80.6624%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="80.5710%" y="709" width="0.2379%" height="15" fill="rgb(242,96,14)" fg:x="1016" fg:w="3"/><text x="80.8210%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="80.5710%" y="693" width="0.2379%" height="15" fill="rgb(231,148,6)" fg:x="1016" fg:w="3"/><text x="80.8210%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="80.5710%" y="677" width="0.2379%" height="15" fill="rgb(249,100,2)" fg:x="1016" fg:w="3"/><text x="80.8210%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.7296%" y="661" width="0.0793%" height="15" fill="rgb(212,22,52)" fg:x="1018" fg:w="1"/><text x="80.9796%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.7296%" y="645" width="0.0793%" height="15" fill="rgb(212,97,14)" fg:x="1018" fg:w="1"/><text x="80.9796%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.7296%" y="629" width="0.0793%" height="15" fill="rgb(212,24,14)" fg:x="1018" fg:w="1"/><text x="80.9796%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.87%)</title><rect x="80.0159%" y="757" width="0.8723%" height="15" fill="rgb(239,209,43)" fg:x="1009" fg:w="11"/><text x="80.2659%" y="767.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.79%)</title><rect x="80.0952%" y="741" width="0.7930%" height="15" fill="rgb(226,211,38)" fg:x="1010" fg:w="10"/><text x="80.3452%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8089%" y="725" width="0.0793%" height="15" fill="rgb(216,118,11)" fg:x="1019" fg:w="1"/><text x="81.0589%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.8089%" y="709" width="0.0793%" height="15" fill="rgb(223,214,43)" fg:x="1019" fg:w="1"/><text x="81.0589%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.8089%" y="693" width="0.0793%" height="15" fill="rgb(213,225,15)" fg:x="1019" fg:w="1"/><text x="81.0589%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.8089%" y="677" width="0.0793%" height="15" fill="rgb(233,115,42)" fg:x="1019" fg:w="1"/><text x="81.0589%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.8089%" y="661" width="0.0793%" height="15" fill="rgb(229,93,16)" fg:x="1019" fg:w="1"/><text x="81.0589%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.8089%" y="645" width="0.0793%" height="15" fill="rgb(220,114,48)" fg:x="1019" fg:w="1"/><text x="81.0589%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.8882%" y="709" width="0.0793%" height="15" fill="rgb(253,78,24)" fg:x="1020" fg:w="1"/><text x="81.1382%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.8882%" y="757" width="0.1586%" height="15" fill="rgb(206,29,19)" fg:x="1020" fg:w="2"/><text x="81.1382%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="80.8882%" y="741" width="0.1586%" height="15" fill="rgb(220,96,19)" fg:x="1020" fg:w="2"/><text x="81.1382%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.8882%" y="725" width="0.1586%" height="15" fill="rgb(222,62,18)" fg:x="1020" fg:w="2"/><text x="81.1382%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.9675%" y="709" width="0.0793%" height="15" fill="rgb(243,4,41)" fg:x="1021" fg:w="1"/><text x="81.2175%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.9675%" y="693" width="0.0793%" height="15" fill="rgb(232,199,53)" fg:x="1021" fg:w="1"/><text x="81.2175%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.9675%" y="677" width="0.0793%" height="15" fill="rgb(212,18,26)" fg:x="1021" fg:w="1"/><text x="81.2175%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.9675%" y="661" width="0.0793%" height="15" fill="rgb(218,30,49)" fg:x="1021" fg:w="1"/><text x="81.2175%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0468%" y="709" width="0.0793%" height="15" fill="rgb(250,154,52)" fg:x="1022" fg:w="1"/><text x="81.2968%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0468%" y="693" width="0.0793%" height="15" fill="rgb(218,176,16)" fg:x="1022" fg:w="1"/><text x="81.2968%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.0468%" y="677" width="0.0793%" height="15" fill="rgb(215,61,51)" fg:x="1022" fg:w="1"/><text x="81.2968%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="81.1261%" y="709" width="0.1586%" height="15" fill="rgb(234,40,53)" fg:x="1023" fg:w="2"/><text x="81.3761%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.2054%" y="693" width="0.0793%" height="15" fill="rgb(214,142,25)" fg:x="1024" fg:w="1"/><text x="81.4554%" y="703.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="81.2054%" y="677" width="0.0793%" height="15" fill="rgb(206,61,7)" fg:x="1024" fg:w="1"/><text x="81.4554%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="81.2054%" y="661" width="0.0793%" height="15" fill="rgb(245,225,1)" fg:x="1024" fg:w="1"/><text x="81.4554%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="81.2847%" y="709" width="0.0793%" height="15" fill="rgb(224,122,37)" fg:x="1025" fg:w="1"/><text x="81.5347%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.2847%" y="693" width="0.0793%" height="15" fill="rgb(209,221,12)" fg:x="1025" fg:w="1"/><text x="81.5347%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.2847%" y="677" width="0.0793%" height="15" fill="rgb(248,70,2)" fg:x="1025" fg:w="1"/><text x="81.5347%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="81.3640%" y="677" width="0.0793%" height="15" fill="rgb(227,173,19)" fg:x="1026" fg:w="1"/><text x="81.6140%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.4433%" y="629" width="0.0793%" height="15" fill="rgb(228,217,53)" fg:x="1027" fg:w="1"/><text x="81.6933%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.4433%" y="613" width="0.0793%" height="15" fill="rgb(248,43,46)" fg:x="1027" fg:w="1"/><text x="81.6933%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.5226%" y="597" width="0.0793%" height="15" fill="rgb(236,202,32)" fg:x="1028" fg:w="1"/><text x="81.7726%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.5226%" y="581" width="0.0793%" height="15" fill="rgb(231,220,0)" fg:x="1028" fg:w="1"/><text x="81.7726%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.5226%" y="565" width="0.0793%" height="15" fill="rgb(235,11,31)" fg:x="1028" fg:w="1"/><text x="81.7726%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.6019%" y="581" width="0.0793%" height="15" fill="rgb(247,159,37)" fg:x="1029" fg:w="1"/><text x="81.8519%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.6019%" y="565" width="0.0793%" height="15" fill="rgb(246,179,15)" fg:x="1029" fg:w="1"/><text x="81.8519%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.6019%" y="549" width="0.0793%" height="15" fill="rgb(221,193,41)" fg:x="1029" fg:w="1"/><text x="81.8519%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.6019%" y="533" width="0.0793%" height="15" fill="rgb(228,30,1)" fg:x="1029" fg:w="1"/><text x="81.8519%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="81.3640%" y="693" width="0.3965%" height="15" fill="rgb(233,226,32)" fg:x="1026" fg:w="5"/><text x="81.6140%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="81.4433%" y="677" width="0.3172%" height="15" fill="rgb(238,110,42)" fg:x="1027" fg:w="4"/><text x="81.6933%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="81.4433%" y="661" width="0.3172%" height="15" fill="rgb(233,141,16)" fg:x="1027" fg:w="4"/><text x="81.6933%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="81.4433%" y="645" width="0.3172%" height="15" fill="rgb(212,227,9)" fg:x="1027" fg:w="4"/><text x="81.6933%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="81.5226%" y="629" width="0.2379%" height="15" fill="rgb(247,119,37)" fg:x="1028" fg:w="3"/><text x="81.7726%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="81.5226%" y="613" width="0.2379%" height="15" fill="rgb(219,101,42)" fg:x="1028" fg:w="3"/><text x="81.7726%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.6019%" y="597" width="0.1586%" height="15" fill="rgb(252,226,3)" fg:x="1029" fg:w="2"/><text x="81.8519%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.6812%" y="581" width="0.0793%" height="15" fill="rgb(229,50,28)" fg:x="1030" fg:w="1"/><text x="81.9312%" y="591.50"></text></g><g><title>engine::session::Session::flush (25 samples, 1.98%)</title><rect x="79.8573%" y="837" width="1.9826%" height="15" fill="rgb(249,122,7)" fg:x="1007" fg:w="25"/><text x="80.1073%" y="847.50">e..</text></g><g><title>engine::session::state::State::close (25 samples, 1.98%)</title><rect x="79.8573%" y="821" width="1.9826%" height="15" fill="rgb(207,101,46)" fg:x="1007" fg:w="25"/><text x="80.1073%" y="831.50">e..</text></g><g><title>engine::session::state::State::flush_entities (25 samples, 1.98%)</title><rect x="79.8573%" y="805" width="1.9826%" height="15" fill="rgb(249,90,48)" fg:x="1007" fg:w="25"/><text x="80.1073%" y="815.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (25 samples, 1.98%)</title><rect x="79.8573%" y="789" width="1.9826%" height="15" fill="rgb(231,10,48)" fg:x="1007" fg:w="25"/><text x="80.1073%" y="799.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (25 samples, 1.98%)</title><rect x="79.8573%" y="773" width="1.9826%" height="15" fill="rgb(234,120,19)" fg:x="1007" fg:w="25"/><text x="80.1073%" y="783.50">e..</text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.79%)</title><rect x="81.0468%" y="757" width="0.7930%" height="15" fill="rgb(212,221,36)" fg:x="1022" fg:w="10"/><text x="81.2968%" y="767.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (10 samples, 0.79%)</title><rect x="81.0468%" y="741" width="0.7930%" height="15" fill="rgb(230,151,52)" fg:x="1022" fg:w="10"/><text x="81.2968%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.79%)</title><rect x="81.0468%" y="725" width="0.7930%" height="15" fill="rgb(246,35,38)" fg:x="1022" fg:w="10"/><text x="81.2968%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="81.3640%" y="709" width="0.4758%" height="15" fill="rgb(208,110,54)" fg:x="1026" fg:w="6"/><text x="81.6140%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7605%" y="693" width="0.0793%" height="15" fill="rgb(250,206,40)" fg:x="1031" fg:w="1"/><text x="82.0105%" y="703.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="81.8398%" y="805" width="0.1586%" height="15" fill="rgb(225,204,22)" fg:x="1032" fg:w="2"/><text x="82.0898%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="81.8398%" y="789" width="0.1586%" height="15" fill="rgb(220,29,11)" fg:x="1032" fg:w="2"/><text x="82.0898%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="81.8398%" y="773" width="0.1586%" height="15" fill="rgb(254,133,9)" fg:x="1032" fg:w="2"/><text x="82.0898%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9191%" y="757" width="0.0793%" height="15" fill="rgb(254,178,33)" fg:x="1033" fg:w="1"/><text x="82.1691%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.9984%" y="757" width="0.0793%" height="15" fill="rgb(239,217,37)" fg:x="1034" fg:w="1"/><text x="82.2484%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.9984%" y="741" width="0.0793%" height="15" fill="rgb(210,41,5)" fg:x="1034" fg:w="1"/><text x="82.2484%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.9984%" y="725" width="0.0793%" height="15" fill="rgb(227,23,47)" fg:x="1034" fg:w="1"/><text x="82.2484%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.9984%" y="709" width="0.0793%" height="15" fill="rgb(215,18,46)" fg:x="1034" fg:w="1"/><text x="82.2484%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.9984%" y="693" width="0.0793%" height="15" fill="rgb(247,172,0)" fg:x="1034" fg:w="1"/><text x="82.2484%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.9984%" y="677" width="0.0793%" height="15" fill="rgb(254,23,27)" fg:x="1034" fg:w="1"/><text x="82.2484%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.9984%" y="661" width="0.0793%" height="15" fill="rgb(223,61,6)" fg:x="1034" fg:w="1"/><text x="82.2484%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.9984%" y="645" width="0.0793%" height="15" fill="rgb(237,65,24)" fg:x="1034" fg:w="1"/><text x="82.2484%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.9984%" y="629" width="0.0793%" height="15" fill="rgb(238,133,22)" fg:x="1034" fg:w="1"/><text x="82.2484%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.9984%" y="613" width="0.0793%" height="15" fill="rgb(217,219,5)" fg:x="1034" fg:w="1"/><text x="82.2484%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.9984%" y="597" width="0.0793%" height="15" fill="rgb(254,24,44)" fg:x="1034" fg:w="1"/><text x="82.2484%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.9984%" y="581" width="0.0793%" height="15" fill="rgb(217,136,50)" fg:x="1034" fg:w="1"/><text x="82.2484%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.9984%" y="565" width="0.0793%" height="15" fill="rgb(243,85,15)" fg:x="1034" fg:w="1"/><text x="82.2484%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.9984%" y="549" width="0.0793%" height="15" fill="rgb(224,85,42)" fg:x="1034" fg:w="1"/><text x="82.2484%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.9984%" y="533" width="0.0793%" height="15" fill="rgb(237,142,36)" fg:x="1034" fg:w="1"/><text x="82.2484%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="81.9984%" y="789" width="0.1586%" height="15" fill="rgb(215,131,52)" fg:x="1034" fg:w="2"/><text x="82.2484%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="81.9984%" y="773" width="0.1586%" height="15" fill="rgb(216,124,50)" fg:x="1034" fg:w="2"/><text x="82.2484%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.0777%" y="757" width="0.0793%" height="15" fill="rgb(223,61,20)" fg:x="1035" fg:w="1"/><text x="82.3277%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.0777%" y="741" width="0.0793%" height="15" fill="rgb(250,62,47)" fg:x="1035" fg:w="1"/><text x="82.3277%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="82.0777%" y="725" width="0.0793%" height="15" fill="rgb(225,180,21)" fg:x="1035" fg:w="1"/><text x="82.3277%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.0777%" y="709" width="0.0793%" height="15" fill="rgb(210,89,33)" fg:x="1035" fg:w="1"/><text x="82.3277%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="81.8398%" y="821" width="0.3965%" height="15" fill="rgb(205,215,50)" fg:x="1032" fg:w="5"/><text x="82.0898%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="81.9984%" y="805" width="0.2379%" height="15" fill="rgb(207,191,48)" fg:x="1034" fg:w="3"/><text x="82.2484%" y="815.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="82.1570%" y="789" width="0.0793%" height="15" fill="rgb(247,32,5)" fg:x="1036" fg:w="1"/><text x="82.4070%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1570%" y="773" width="0.0793%" height="15" fill="rgb(210,113,39)" fg:x="1036" fg:w="1"/><text x="82.4070%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.1570%" y="757" width="0.0793%" height="15" fill="rgb(242,181,23)" fg:x="1036" fg:w="1"/><text x="82.4070%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="82.1570%" y="741" width="0.0793%" height="15" fill="rgb(215,58,22)" fg:x="1036" fg:w="1"/><text x="82.4070%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1570%" y="725" width="0.0793%" height="15" fill="rgb(236,31,11)" fg:x="1036" fg:w="1"/><text x="82.4070%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="82.2363%" y="805" width="0.1586%" height="15" fill="rgb(244,198,15)" fg:x="1037" fg:w="2"/><text x="82.4863%" y="815.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="82.2363%" y="789" width="0.1586%" height="15" fill="rgb(230,142,36)" fg:x="1037" fg:w="2"/><text x="82.4863%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="82.2363%" y="773" width="0.1586%" height="15" fill="rgb(219,48,29)" fg:x="1037" fg:w="2"/><text x="82.4863%" y="783.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.3156%" y="757" width="0.0793%" height="15" fill="rgb(237,179,43)" fg:x="1038" fg:w="1"/><text x="82.5656%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.3156%" y="741" width="0.0793%" height="15" fill="rgb(221,67,37)" fg:x="1038" fg:w="1"/><text x="82.5656%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.3156%" y="725" width="0.0793%" height="15" fill="rgb(222,217,18)" fg:x="1038" fg:w="1"/><text x="82.5656%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="82.3156%" y="709" width="0.0793%" height="15" fill="rgb(235,107,38)" fg:x="1038" fg:w="1"/><text x="82.5656%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.3949%" y="805" width="0.0793%" height="15" fill="rgb(227,110,50)" fg:x="1039" fg:w="1"/><text x="82.6449%" y="815.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="82.3949%" y="789" width="0.0793%" height="15" fill="rgb(224,176,42)" fg:x="1039" fg:w="1"/><text x="82.6449%" y="799.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.3949%" y="773" width="0.0793%" height="15" fill="rgb(250,34,11)" fg:x="1039" fg:w="1"/><text x="82.6449%" y="783.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="82.3949%" y="757" width="0.0793%" height="15" fill="rgb(253,107,24)" fg:x="1039" fg:w="1"/><text x="82.6449%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.4742%" y="757" width="0.0793%" height="15" fill="rgb(213,146,11)" fg:x="1040" fg:w="1"/><text x="82.7242%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.4742%" y="741" width="0.0793%" height="15" fill="rgb(216,88,42)" fg:x="1040" fg:w="1"/><text x="82.7242%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.4742%" y="725" width="0.0793%" height="15" fill="rgb(231,37,19)" fg:x="1040" fg:w="1"/><text x="82.7242%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4742%" y="709" width="0.0793%" height="15" fill="rgb(213,154,5)" fg:x="1040" fg:w="1"/><text x="82.7242%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4742%" y="693" width="0.0793%" height="15" fill="rgb(234,102,6)" fg:x="1040" fg:w="1"/><text x="82.7242%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4742%" y="677" width="0.0793%" height="15" fill="rgb(206,125,39)" fg:x="1040" fg:w="1"/><text x="82.7242%" y="687.50"></text></g><g><title>plugins_core::build::Build::holding (10 samples, 0.79%)</title><rect x="81.8398%" y="837" width="0.7930%" height="15" fill="rgb(254,216,50)" fg:x="1032" fg:w="10"/><text x="82.0898%" y="847.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="82.2363%" y="821" width="0.3965%" height="15" fill="rgb(205,65,40)" fg:x="1037" fg:w="5"/><text x="82.4863%" y="831.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="82.4742%" y="805" width="0.1586%" height="15" fill="rgb(244,217,7)" fg:x="1040" fg:w="2"/><text x="82.7242%" y="815.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="82.4742%" y="789" width="0.1586%" height="15" fill="rgb(220,203,19)" fg:x="1040" fg:w="2"/><text x="82.7242%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="82.4742%" y="773" width="0.1586%" height="15" fill="rgb(254,124,45)" fg:x="1040" fg:w="2"/><text x="82.7242%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.5535%" y="757" width="0.0793%" height="15" fill="rgb(236,111,39)" fg:x="1041" fg:w="1"/><text x="82.8035%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.5535%" y="741" width="0.0793%" height="15" fill="rgb(243,49,31)" fg:x="1041" fg:w="1"/><text x="82.8035%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.5535%" y="725" width="0.0793%" height="15" fill="rgb(252,80,32)" fg:x="1041" fg:w="1"/><text x="82.8035%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5535%" y="709" width="0.0793%" height="15" fill="rgb(221,67,33)" fg:x="1041" fg:w="1"/><text x="82.8035%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5535%" y="693" width="0.0793%" height="15" fill="rgb(225,12,36)" fg:x="1041" fg:w="1"/><text x="82.8035%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5535%" y="677" width="0.0793%" height="15" fill="rgb(210,14,38)" fg:x="1041" fg:w="1"/><text x="82.8035%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5535%" y="661" width="0.0793%" height="15" fill="rgb(251,82,7)" fg:x="1041" fg:w="1"/><text x="82.8035%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6328%" y="725" width="0.0793%" height="15" fill="rgb(253,73,22)" fg:x="1042" fg:w="1"/><text x="82.8828%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6328%" y="709" width="0.0793%" height="15" fill="rgb(237,31,38)" fg:x="1042" fg:w="1"/><text x="82.8828%" y="719.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="82.6328%" y="837" width="0.1586%" height="15" fill="rgb(234,184,33)" fg:x="1042" fg:w="2"/><text x="82.8828%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="82.6328%" y="821" width="0.1586%" height="15" fill="rgb(219,43,13)" fg:x="1042" fg:w="2"/><text x="82.8828%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="82.6328%" y="805" width="0.1586%" height="15" fill="rgb(252,139,13)" fg:x="1042" fg:w="2"/><text x="82.8828%" y="815.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="82.6328%" y="789" width="0.1586%" height="15" fill="rgb(229,79,33)" fg:x="1042" fg:w="2"/><text x="82.8828%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="82.6328%" y="773" width="0.1586%" height="15" fill="rgb(248,8,21)" fg:x="1042" fg:w="2"/><text x="82.8828%" y="783.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="82.6328%" y="757" width="0.1586%" height="15" fill="rgb(225,124,31)" fg:x="1042" fg:w="2"/><text x="82.8828%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.6328%" y="741" width="0.1586%" height="15" fill="rgb(248,141,9)" fg:x="1042" fg:w="2"/><text x="82.8828%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.7121%" y="725" width="0.0793%" height="15" fill="rgb(251,223,32)" fg:x="1043" fg:w="1"/><text x="82.9621%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7121%" y="709" width="0.0793%" height="15" fill="rgb(251,8,33)" fg:x="1043" fg:w="1"/><text x="82.9621%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.7121%" y="693" width="0.0793%" height="15" fill="rgb(205,95,13)" fg:x="1043" fg:w="1"/><text x="82.9621%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7121%" y="677" width="0.0793%" height="15" fill="rgb(235,208,38)" fg:x="1043" fg:w="1"/><text x="82.9621%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.7121%" y="661" width="0.0793%" height="15" fill="rgb(222,33,24)" fg:x="1043" fg:w="1"/><text x="82.9621%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7121%" y="645" width="0.0793%" height="15" fill="rgb(219,97,3)" fg:x="1043" fg:w="1"/><text x="82.9621%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.7121%" y="629" width="0.0793%" height="15" fill="rgb(209,15,37)" fg:x="1043" fg:w="1"/><text x="82.9621%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7121%" y="613" width="0.0793%" height="15" fill="rgb(206,100,16)" fg:x="1043" fg:w="1"/><text x="82.9621%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.7121%" y="597" width="0.0793%" height="15" fill="rgb(208,61,41)" fg:x="1043" fg:w="1"/><text x="82.9621%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7121%" y="581" width="0.0793%" height="15" fill="rgb(226,154,13)" fg:x="1043" fg:w="1"/><text x="82.9621%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="82.7914%" y="821" width="0.0793%" height="15" fill="rgb(226,113,19)" fg:x="1044" fg:w="1"/><text x="83.0414%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.7914%" y="805" width="0.0793%" height="15" fill="rgb(209,115,46)" fg:x="1044" fg:w="1"/><text x="83.0414%" y="815.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.7914%" y="789" width="0.0793%" height="15" fill="rgb(234,170,38)" fg:x="1044" fg:w="1"/><text x="83.0414%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.7914%" y="773" width="0.0793%" height="15" fill="rgb(228,23,37)" fg:x="1044" fg:w="1"/><text x="83.0414%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7914%" y="757" width="0.0793%" height="15" fill="rgb(243,83,27)" fg:x="1044" fg:w="1"/><text x="83.0414%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7914%" y="741" width="0.0793%" height="15" fill="rgb(251,121,22)" fg:x="1044" fg:w="1"/><text x="83.0414%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7914%" y="725" width="0.0793%" height="15" fill="rgb(205,106,26)" fg:x="1044" fg:w="1"/><text x="83.0414%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7914%" y="709" width="0.0793%" height="15" fill="rgb(251,23,10)" fg:x="1044" fg:w="1"/><text x="83.0414%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7914%" y="693" width="0.0793%" height="15" fill="rgb(250,218,35)" fg:x="1044" fg:w="1"/><text x="83.0414%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="82.8707%" y="773" width="0.0793%" height="15" fill="rgb(211,16,34)" fg:x="1045" fg:w="1"/><text x="83.1207%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="82.8707%" y="757" width="0.0793%" height="15" fill="rgb(238,148,30)" fg:x="1045" fg:w="1"/><text x="83.1207%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.8707%" y="741" width="0.0793%" height="15" fill="rgb(236,171,40)" fg:x="1045" fg:w="1"/><text x="83.1207%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.8707%" y="725" width="0.0793%" height="15" fill="rgb(237,128,15)" fg:x="1045" fg:w="1"/><text x="83.1207%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.8707%" y="709" width="0.0793%" height="15" fill="rgb(222,8,10)" fg:x="1045" fg:w="1"/><text x="83.1207%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.8707%" y="693" width="0.0793%" height="15" fill="rgb(244,223,11)" fg:x="1045" fg:w="1"/><text x="83.1207%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.8707%" y="677" width="0.0793%" height="15" fill="rgb(230,23,54)" fg:x="1045" fg:w="1"/><text x="83.1207%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.8707%" y="661" width="0.0793%" height="15" fill="rgb(206,71,18)" fg:x="1045" fg:w="1"/><text x="83.1207%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.8707%" y="645" width="0.0793%" height="15" fill="rgb(221,190,41)" fg:x="1045" fg:w="1"/><text x="83.1207%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.8707%" y="629" width="0.0793%" height="15" fill="rgb(242,202,19)" fg:x="1045" fg:w="1"/><text x="83.1207%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.8707%" y="613" width="0.0793%" height="15" fill="rgb(242,213,28)" fg:x="1045" fg:w="1"/><text x="83.1207%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="82.9500%" y="757" width="0.0793%" height="15" fill="rgb(224,77,34)" fg:x="1046" fg:w="1"/><text x="83.2000%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="82.9500%" y="741" width="0.0793%" height="15" fill="rgb(231,13,30)" fg:x="1046" fg:w="1"/><text x="83.2000%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="82.9500%" y="725" width="0.0793%" height="15" fill="rgb(231,126,46)" fg:x="1046" fg:w="1"/><text x="83.2000%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="82.9500%" y="709" width="0.0793%" height="15" fill="rgb(237,50,16)" fg:x="1046" fg:w="1"/><text x="83.2000%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.9500%" y="693" width="0.0793%" height="15" fill="rgb(250,0,53)" fg:x="1046" fg:w="1"/><text x="83.2000%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.9500%" y="677" width="0.0793%" height="15" fill="rgb(206,168,4)" fg:x="1046" fg:w="1"/><text x="83.2000%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9500%" y="661" width="0.0793%" height="15" fill="rgb(237,195,30)" fg:x="1046" fg:w="1"/><text x="83.2000%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.9500%" y="645" width="0.0793%" height="15" fill="rgb(250,185,28)" fg:x="1046" fg:w="1"/><text x="83.2000%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9500%" y="629" width="0.0793%" height="15" fill="rgb(236,31,48)" fg:x="1046" fg:w="1"/><text x="83.2000%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9500%" y="613" width="0.0793%" height="15" fill="rgb(240,210,1)" fg:x="1046" fg:w="1"/><text x="83.2000%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9500%" y="597" width="0.0793%" height="15" fill="rgb(211,67,10)" fg:x="1046" fg:w="1"/><text x="83.2000%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9500%" y="581" width="0.0793%" height="15" fill="rgb(224,37,37)" fg:x="1046" fg:w="1"/><text x="83.2000%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.9500%" y="565" width="0.0793%" height="15" fill="rgb(211,57,29)" fg:x="1046" fg:w="1"/><text x="83.2000%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.9500%" y="549" width="0.0793%" height="15" fill="rgb(222,128,38)" fg:x="1046" fg:w="1"/><text x="83.2000%" y="559.50"></text></g><g><title>plugins_core::build::Build::leads_to (2 samples, 0.16%)</title><rect x="82.9500%" y="773" width="0.1586%" height="15" fill="rgb(222,119,2)" fg:x="1046" fg:w="2"/><text x="83.2000%" y="783.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="83.0293%" y="757" width="0.0793%" height="15" fill="rgb(207,185,13)" fg:x="1047" fg:w="1"/><text x="83.2793%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="83.0293%" y="741" width="0.0793%" height="15" fill="rgb(234,134,26)" fg:x="1047" fg:w="1"/><text x="83.2793%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="83.0293%" y="725" width="0.0793%" height="15" fill="rgb(236,28,54)" fg:x="1047" fg:w="1"/><text x="83.2793%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.0293%" y="709" width="0.0793%" height="15" fill="rgb(218,4,16)" fg:x="1047" fg:w="1"/><text x="83.2793%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.0293%" y="693" width="0.0793%" height="15" fill="rgb(206,115,32)" fg:x="1047" fg:w="1"/><text x="83.2793%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.0293%" y="677" width="0.0793%" height="15" fill="rgb(221,12,8)" fg:x="1047" fg:w="1"/><text x="83.2793%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.0293%" y="661" width="0.0793%" height="15" fill="rgb(239,207,6)" fg:x="1047" fg:w="1"/><text x="83.2793%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0293%" y="645" width="0.0793%" height="15" fill="rgb(217,119,6)" fg:x="1047" fg:w="1"/><text x="83.2793%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.0293%" y="629" width="0.0793%" height="15" fill="rgb(230,27,1)" fg:x="1047" fg:w="1"/><text x="83.2793%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0293%" y="613" width="0.0793%" height="15" fill="rgb(237,155,1)" fg:x="1047" fg:w="1"/><text x="83.2793%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.0293%" y="597" width="0.0793%" height="15" fill="rgb(248,66,50)" fg:x="1047" fg:w="1"/><text x="83.2793%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0293%" y="581" width="0.0793%" height="15" fill="rgb(218,66,19)" fg:x="1047" fg:w="1"/><text x="83.2793%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.0293%" y="565" width="0.0793%" height="15" fill="rgb(229,19,7)" fg:x="1047" fg:w="1"/><text x="83.2793%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0293%" y="549" width="0.0793%" height="15" fill="rgb(223,65,18)" fg:x="1047" fg:w="1"/><text x="83.2793%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="82.8707%" y="821" width="0.3172%" height="15" fill="rgb(216,100,6)" fg:x="1045" fg:w="4"/><text x="83.1207%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="82.8707%" y="805" width="0.3172%" height="15" fill="rgb(215,16,2)" fg:x="1045" fg:w="4"/><text x="83.1207%" y="815.50"></text></g><g><title>plugins_core::build::QuickThing::make (4 samples, 0.32%)</title><rect x="82.8707%" y="789" width="0.3172%" height="15" fill="rgb(219,20,33)" fg:x="1045" fg:w="4"/><text x="83.1207%" y="799.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="83.1086%" y="773" width="0.0793%" height="15" fill="rgb(215,120,26)" fg:x="1048" fg:w="1"/><text x="83.3586%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="83.1086%" y="757" width="0.0793%" height="15" fill="rgb(240,175,31)" fg:x="1048" fg:w="1"/><text x="83.3586%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.1086%" y="741" width="0.0793%" height="15" fill="rgb(245,165,43)" fg:x="1048" fg:w="1"/><text x="83.3586%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.1086%" y="725" width="0.0793%" height="15" fill="rgb(228,92,16)" fg:x="1048" fg:w="1"/><text x="83.3586%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1086%" y="709" width="0.0793%" height="15" fill="rgb(252,37,37)" fg:x="1048" fg:w="1"/><text x="83.3586%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.1086%" y="693" width="0.0793%" height="15" fill="rgb(220,96,32)" fg:x="1048" fg:w="1"/><text x="83.3586%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1086%" y="677" width="0.0793%" height="15" fill="rgb(206,224,2)" fg:x="1048" fg:w="1"/><text x="83.3586%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.1086%" y="661" width="0.0793%" height="15" fill="rgb(221,63,25)" fg:x="1048" fg:w="1"/><text x="83.3586%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="83.1086%" y="645" width="0.0793%" height="15" fill="rgb(244,60,40)" fg:x="1048" fg:w="1"/><text x="83.3586%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="83.1086%" y="629" width="0.0793%" height="15" fill="rgb(209,102,13)" fg:x="1048" fg:w="1"/><text x="83.3586%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.1086%" y="613" width="0.0793%" height="15" fill="rgb(216,127,17)" fg:x="1048" fg:w="1"/><text x="83.3586%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1086%" y="597" width="0.0793%" height="15" fill="rgb(242,182,26)" fg:x="1048" fg:w="1"/><text x="83.3586%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.1086%" y="581" width="0.0793%" height="15" fill="rgb(233,22,19)" fg:x="1048" fg:w="1"/><text x="83.3586%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="83.1879%" y="805" width="0.0793%" height="15" fill="rgb(238,173,31)" fg:x="1049" fg:w="1"/><text x="83.4379%" y="815.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="83.1879%" y="789" width="0.0793%" height="15" fill="rgb(244,165,10)" fg:x="1049" fg:w="1"/><text x="83.4379%" y="799.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1879%" y="773" width="0.0793%" height="15" fill="rgb(251,138,36)" fg:x="1049" fg:w="1"/><text x="83.4379%" y="783.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="83.2672%" y="757" width="0.0793%" height="15" fill="rgb(233,2,19)" fg:x="1050" fg:w="1"/><text x="83.5172%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="83.2672%" y="741" width="0.0793%" height="15" fill="rgb(206,178,31)" fg:x="1050" fg:w="1"/><text x="83.5172%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="83.2672%" y="725" width="0.0793%" height="15" fill="rgb(223,128,44)" fg:x="1050" fg:w="1"/><text x="83.5172%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="83.3466%" y="725" width="0.0793%" height="15" fill="rgb(238,24,5)" fg:x="1051" fg:w="1"/><text x="83.5966%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="83.3466%" y="709" width="0.0793%" height="15" fill="rgb(217,140,4)" fg:x="1051" fg:w="1"/><text x="83.5966%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="83.4259%" y="677" width="0.1586%" height="15" fill="rgb(250,89,54)" fg:x="1052" fg:w="2"/><text x="83.6759%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="83.4259%" y="661" width="0.1586%" height="15" fill="rgb(223,199,30)" fg:x="1052" fg:w="2"/><text x="83.6759%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="83.4259%" y="645" width="0.1586%" height="15" fill="rgb(220,47,34)" fg:x="1052" fg:w="2"/><text x="83.6759%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="83.4259%" y="629" width="0.1586%" height="15" fill="rgb(206,12,44)" fg:x="1052" fg:w="2"/><text x="83.6759%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.5052%" y="613" width="0.0793%" height="15" fill="rgb(226,159,9)" fg:x="1053" fg:w="1"/><text x="83.7552%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.5052%" y="597" width="0.0793%" height="15" fill="rgb(224,150,25)" fg:x="1053" fg:w="1"/><text x="83.7552%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.5052%" y="581" width="0.0793%" height="15" fill="rgb(248,214,17)" fg:x="1053" fg:w="1"/><text x="83.7552%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.5845%" y="677" width="0.0793%" height="15" fill="rgb(208,189,54)" fg:x="1054" fg:w="1"/><text x="83.8345%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.5845%" y="661" width="0.0793%" height="15" fill="rgb(233,78,33)" fg:x="1054" fg:w="1"/><text x="83.8345%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.6638%" y="661" width="0.0793%" height="15" fill="rgb(244,217,34)" fg:x="1055" fg:w="1"/><text x="83.9138%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.6638%" y="645" width="0.0793%" height="15" fill="rgb(221,41,46)" fg:x="1055" fg:w="1"/><text x="83.9138%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.6638%" y="629" width="0.0793%" height="15" fill="rgb(216,152,46)" fg:x="1055" fg:w="1"/><text x="83.9138%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.6638%" y="613" width="0.0793%" height="15" fill="rgb(235,72,49)" fg:x="1055" fg:w="1"/><text x="83.9138%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.7431%" y="613" width="0.0793%" height="15" fill="rgb(214,12,0)" fg:x="1056" fg:w="1"/><text x="83.9931%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.7431%" y="597" width="0.0793%" height="15" fill="rgb(254,8,3)" fg:x="1056" fg:w="1"/><text x="83.9931%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.8224%" y="565" width="0.0793%" height="15" fill="rgb(238,167,16)" fg:x="1057" fg:w="1"/><text x="84.0724%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.8224%" y="549" width="0.0793%" height="15" fill="rgb(236,220,0)" fg:x="1057" fg:w="1"/><text x="84.0724%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.8224%" y="533" width="0.0793%" height="15" fill="rgb(207,8,20)" fg:x="1057" fg:w="1"/><text x="84.0724%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.8224%" y="517" width="0.0793%" height="15" fill="rgb(236,113,14)" fg:x="1057" fg:w="1"/><text x="84.0724%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="83.7431%" y="661" width="0.2379%" height="15" fill="rgb(207,6,6)" fg:x="1056" fg:w="3"/><text x="83.9931%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="83.7431%" y="645" width="0.2379%" height="15" fill="rgb(225,92,41)" fg:x="1056" fg:w="3"/><text x="83.9931%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="83.7431%" y="629" width="0.2379%" height="15" fill="rgb(234,224,18)" fg:x="1056" fg:w="3"/><text x="83.9931%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="83.8224%" y="613" width="0.1586%" height="15" fill="rgb(248,195,4)" fg:x="1057" fg:w="2"/><text x="84.0724%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="83.8224%" y="597" width="0.1586%" height="15" fill="rgb(229,146,7)" fg:x="1057" fg:w="2"/><text x="84.0724%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="83.8224%" y="581" width="0.1586%" height="15" fill="rgb(249,192,15)" fg:x="1057" fg:w="2"/><text x="84.0724%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="83.9017%" y="565" width="0.0793%" height="15" fill="rgb(253,77,34)" fg:x="1058" fg:w="1"/><text x="84.1517%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="83.6638%" y="677" width="0.3965%" height="15" fill="rgb(236,228,3)" fg:x="1055" fg:w="5"/><text x="83.9138%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.9810%" y="661" width="0.0793%" height="15" fill="rgb(233,71,16)" fg:x="1059" fg:w="1"/><text x="84.2310%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.9810%" y="645" width="0.0793%" height="15" fill="rgb(239,41,1)" fg:x="1059" fg:w="1"/><text x="84.2310%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="83.9810%" y="629" width="0.0793%" height="15" fill="rgb(214,119,41)" fg:x="1059" fg:w="1"/><text x="84.2310%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.71%)</title><rect x="83.4259%" y="693" width="0.7137%" height="15" fill="rgb(213,17,39)" fg:x="1052" fg:w="9"/><text x="83.6759%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.0603%" y="677" width="0.0793%" height="15" fill="rgb(245,42,20)" fg:x="1060" fg:w="1"/><text x="84.3103%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.0603%" y="661" width="0.0793%" height="15" fill="rgb(252,18,22)" fg:x="1060" fg:w="1"/><text x="84.3103%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.87%)</title><rect x="83.4259%" y="709" width="0.8723%" height="15" fill="rgb(219,125,29)" fg:x="1052" fg:w="11"/><text x="83.6759%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="84.1396%" y="693" width="0.1586%" height="15" fill="rgb(215,56,47)" fg:x="1061" fg:w="2"/><text x="84.3896%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="84.1396%" y="677" width="0.1586%" height="15" fill="rgb(212,211,43)" fg:x="1061" fg:w="2"/><text x="84.3896%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="84.1396%" y="661" width="0.1586%" height="15" fill="rgb(225,24,34)" fg:x="1061" fg:w="2"/><text x="84.3896%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="84.1396%" y="645" width="0.1586%" height="15" fill="rgb(229,104,27)" fg:x="1061" fg:w="2"/><text x="84.3896%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="84.1396%" y="629" width="0.1586%" height="15" fill="rgb(208,56,42)" fg:x="1061" fg:w="2"/><text x="84.3896%" y="639.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="84.1396%" y="613" width="0.1586%" height="15" fill="rgb(210,79,18)" fg:x="1061" fg:w="2"/><text x="84.3896%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.95%)</title><rect x="83.4259%" y="725" width="0.9516%" height="15" fill="rgb(236,125,53)" fg:x="1052" fg:w="12"/><text x="83.6759%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.2982%" y="709" width="0.0793%" height="15" fill="rgb(207,101,52)" fg:x="1063" fg:w="1"/><text x="84.5482%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.4568%" y="677" width="0.0793%" height="15" fill="rgb(248,51,10)" fg:x="1065" fg:w="1"/><text x="84.7068%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="84.5361%" y="645" width="0.0793%" height="15" fill="rgb(222,184,26)" fg:x="1066" fg:w="1"/><text x="84.7861%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.5361%" y="629" width="0.0793%" height="15" fill="rgb(226,13,15)" fg:x="1066" fg:w="1"/><text x="84.7861%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.5361%" y="613" width="0.0793%" height="15" fill="rgb(238,108,43)" fg:x="1066" fg:w="1"/><text x="84.7861%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="84.3775%" y="725" width="0.3172%" height="15" fill="rgb(252,6,18)" fg:x="1064" fg:w="4"/><text x="84.6275%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="84.3775%" y="709" width="0.3172%" height="15" fill="rgb(215,206,11)" fg:x="1064" fg:w="4"/><text x="84.6275%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="84.4568%" y="693" width="0.2379%" height="15" fill="rgb(243,20,18)" fg:x="1065" fg:w="3"/><text x="84.7068%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.5361%" y="677" width="0.1586%" height="15" fill="rgb(213,39,51)" fg:x="1066" fg:w="2"/><text x="84.7861%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.5361%" y="661" width="0.1586%" height="15" fill="rgb(225,153,38)" fg:x="1066" fg:w="2"/><text x="84.7861%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.6154%" y="645" width="0.0793%" height="15" fill="rgb(235,8,28)" fg:x="1067" fg:w="1"/><text x="84.8654%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.6154%" y="629" width="0.0793%" height="15" fill="rgb(215,0,21)" fg:x="1067" fg:w="1"/><text x="84.8654%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.6154%" y="613" width="0.0793%" height="15" fill="rgb(205,153,39)" fg:x="1067" fg:w="1"/><text x="84.8654%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.6154%" y="597" width="0.0793%" height="15" fill="rgb(231,172,8)" fg:x="1067" fg:w="1"/><text x="84.8654%" y="607.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="84.7740%" y="709" width="0.0793%" height="15" fill="rgb(251,142,40)" fg:x="1069" fg:w="1"/><text x="85.0240%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.7740%" y="693" width="0.0793%" height="15" fill="rgb(214,48,45)" fg:x="1069" fg:w="1"/><text x="85.0240%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.7740%" y="677" width="0.0793%" height="15" fill="rgb(231,29,28)" fg:x="1069" fg:w="1"/><text x="85.0240%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8533%" y="677" width="0.0793%" height="15" fill="rgb(245,57,8)" fg:x="1070" fg:w="1"/><text x="85.1033%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9326%" y="677" width="0.0793%" height="15" fill="rgb(236,199,39)" fg:x="1071" fg:w="1"/><text x="85.1826%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9326%" y="661" width="0.0793%" height="15" fill="rgb(208,132,35)" fg:x="1071" fg:w="1"/><text x="85.1826%" y="671.50"></text></g><g><title>engine::session::Session::flush (25 samples, 1.98%)</title><rect x="83.1879%" y="821" width="1.9826%" height="15" fill="rgb(225,217,34)" fg:x="1049" fg:w="25"/><text x="83.4379%" y="831.50">e..</text></g><g><title>engine::session::Session::save_changes (24 samples, 1.90%)</title><rect x="83.2672%" y="805" width="1.9033%" height="15" fill="rgb(252,227,26)" fg:x="1050" fg:w="24"/><text x="83.5172%" y="815.50">e..</text></g><g><title>engine::session::state::State::close (24 samples, 1.90%)</title><rect x="83.2672%" y="789" width="1.9033%" height="15" fill="rgb(250,228,18)" fg:x="1050" fg:w="24"/><text x="83.5172%" y="799.50">e..</text></g><g><title>engine::session::state::State::flush_entities (24 samples, 1.90%)</title><rect x="83.2672%" y="773" width="1.9033%" height="15" fill="rgb(222,176,49)" fg:x="1050" fg:w="24"/><text x="83.5172%" y="783.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (23 samples, 1.82%)</title><rect x="83.3466%" y="757" width="1.8239%" height="15" fill="rgb(212,89,5)" fg:x="1051" fg:w="23"/><text x="83.5966%" y="767.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (23 samples, 1.82%)</title><rect x="83.3466%" y="741" width="1.8239%" height="15" fill="rgb(211,131,11)" fg:x="1051" fg:w="23"/><text x="83.5966%" y="751.50">e..</text></g><g><title>kernel::model::any_entity_changes (6 samples, 0.48%)</title><rect x="84.6947%" y="725" width="0.4758%" height="15" fill="rgb(226,185,34)" fg:x="1068" fg:w="6"/><text x="84.9447%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (4 samples, 0.32%)</title><rect x="84.8533%" y="709" width="0.3172%" height="15" fill="rgb(239,228,52)" fg:x="1070" fg:w="4"/><text x="85.1033%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="84.8533%" y="693" width="0.3172%" height="15" fill="rgb(213,126,26)" fg:x="1070" fg:w="4"/><text x="85.1033%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="85.0119%" y="677" width="0.1586%" height="15" fill="rgb(248,59,21)" fg:x="1072" fg:w="2"/><text x="85.2619%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0912%" y="661" width="0.0793%" height="15" fill="rgb(207,10,1)" fg:x="1073" fg:w="1"/><text x="85.3412%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0912%" y="645" width="0.0793%" height="15" fill="rgb(240,122,43)" fg:x="1073" fg:w="1"/><text x="85.3412%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0912%" y="629" width="0.0793%" height="15" fill="rgb(250,158,39)" fg:x="1073" fg:w="1"/><text x="85.3412%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="85.1705%" y="789" width="0.0793%" height="15" fill="rgb(212,108,0)" fg:x="1074" fg:w="1"/><text x="85.4205%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="85.1705%" y="773" width="0.0793%" height="15" fill="rgb(231,150,38)" fg:x="1074" fg:w="1"/><text x="85.4205%" y="783.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="85.1705%" y="757" width="0.0793%" height="15" fill="rgb(249,154,4)" fg:x="1074" fg:w="1"/><text x="85.4205%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.1705%" y="741" width="0.0793%" height="15" fill="rgb(219,46,1)" fg:x="1074" fg:w="1"/><text x="85.4205%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="85.1705%" y="805" width="0.1586%" height="15" fill="rgb(227,68,4)" fg:x="1074" fg:w="2"/><text x="85.4205%" y="815.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="85.2498%" y="789" width="0.0793%" height="15" fill="rgb(254,224,51)" fg:x="1075" fg:w="1"/><text x="85.4998%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="85.2498%" y="773" width="0.0793%" height="15" fill="rgb(220,89,20)" fg:x="1075" fg:w="1"/><text x="85.4998%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.2498%" y="757" width="0.0793%" height="15" fill="rgb(245,148,36)" fg:x="1075" fg:w="1"/><text x="85.4998%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3291%" y="677" width="0.0793%" height="15" fill="rgb(216,50,30)" fg:x="1076" fg:w="1"/><text x="85.5791%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3291%" y="661" width="0.0793%" height="15" fill="rgb(254,186,48)" fg:x="1076" fg:w="1"/><text x="85.5791%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3291%" y="645" width="0.0793%" height="15" fill="rgb(237,78,54)" fg:x="1076" fg:w="1"/><text x="85.5791%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.3291%" y="629" width="0.0793%" height="15" fill="rgb(208,122,28)" fg:x="1076" fg:w="1"/><text x="85.5791%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.3291%" y="693" width="0.1586%" height="15" fill="rgb(237,71,0)" fg:x="1076" fg:w="2"/><text x="85.5791%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.4084%" y="677" width="0.0793%" height="15" fill="rgb(241,168,21)" fg:x="1077" fg:w="1"/><text x="85.6584%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="85.3291%" y="709" width="0.2379%" height="15" fill="rgb(252,223,14)" fg:x="1076" fg:w="3"/><text x="85.5791%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.4877%" y="693" width="0.0793%" height="15" fill="rgb(228,172,14)" fg:x="1078" fg:w="1"/><text x="85.7377%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5670%" y="709" width="0.0793%" height="15" fill="rgb(236,44,24)" fg:x="1079" fg:w="1"/><text x="85.8170%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.5670%" y="693" width="0.0793%" height="15" fill="rgb(211,153,1)" fg:x="1079" fg:w="1"/><text x="85.8170%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5670%" y="677" width="0.0793%" height="15" fill="rgb(242,70,19)" fg:x="1079" fg:w="1"/><text x="85.8170%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5670%" y="661" width="0.0793%" height="15" fill="rgb(237,172,13)" fg:x="1079" fg:w="1"/><text x="85.8170%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.5670%" y="645" width="0.0793%" height="15" fill="rgb(215,222,51)" fg:x="1079" fg:w="1"/><text x="85.8170%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.5670%" y="629" width="0.0793%" height="15" fill="rgb(227,136,3)" fg:x="1079" fg:w="1"/><text x="85.8170%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.5670%" y="613" width="0.0793%" height="15" fill="rgb(234,107,46)" fg:x="1079" fg:w="1"/><text x="85.8170%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="85.3291%" y="789" width="0.3965%" height="15" fill="rgb(224,56,35)" fg:x="1076" fg:w="5"/><text x="85.5791%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="85.3291%" y="773" width="0.3965%" height="15" fill="rgb(253,132,31)" fg:x="1076" fg:w="5"/><text x="85.5791%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="85.3291%" y="757" width="0.3965%" height="15" fill="rgb(249,97,5)" fg:x="1076" fg:w="5"/><text x="85.5791%" y="767.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="85.3291%" y="741" width="0.3965%" height="15" fill="rgb(225,135,20)" fg:x="1076" fg:w="5"/><text x="85.5791%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="85.3291%" y="725" width="0.3965%" height="15" fill="rgb(220,48,27)" fg:x="1076" fg:w="5"/><text x="85.5791%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.6463%" y="709" width="0.0793%" height="15" fill="rgb(214,91,28)" fg:x="1080" fg:w="1"/><text x="85.8963%" y="719.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.63%)</title><rect x="85.1705%" y="821" width="0.6344%" height="15" fill="rgb(232,51,16)" fg:x="1074" fg:w="8"/><text x="85.4205%" y="831.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.48%)</title><rect x="85.3291%" y="805" width="0.4758%" height="15" fill="rgb(254,38,15)" fg:x="1076" fg:w="6"/><text x="85.5791%" y="815.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="85.7256%" y="789" width="0.0793%" height="15" fill="rgb(243,186,4)" fg:x="1081" fg:w="1"/><text x="85.9756%" y="799.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="85.7256%" y="773" width="0.0793%" height="15" fill="rgb(222,210,21)" fg:x="1081" fg:w="1"/><text x="85.9756%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.7256%" y="757" width="0.0793%" height="15" fill="rgb(228,132,3)" fg:x="1081" fg:w="1"/><text x="85.9756%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.7256%" y="741" width="0.0793%" height="15" fill="rgb(253,188,15)" fg:x="1081" fg:w="1"/><text x="85.9756%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.7256%" y="725" width="0.0793%" height="15" fill="rgb(216,192,40)" fg:x="1081" fg:w="1"/><text x="85.9756%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.7256%" y="709" width="0.0793%" height="15" fill="rgb(230,126,2)" fg:x="1081" fg:w="1"/><text x="85.9756%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.7256%" y="693" width="0.0793%" height="15" fill="rgb(246,23,15)" fg:x="1081" fg:w="1"/><text x="85.9756%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.7256%" y="677" width="0.0793%" height="15" fill="rgb(250,224,8)" fg:x="1081" fg:w="1"/><text x="85.9756%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.7256%" y="661" width="0.0793%" height="15" fill="rgb(247,226,46)" fg:x="1081" fg:w="1"/><text x="85.9756%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.7256%" y="645" width="0.0793%" height="15" fill="rgb(226,67,43)" fg:x="1081" fg:w="1"/><text x="85.9756%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.7256%" y="629" width="0.0793%" height="15" fill="rgb(239,37,7)" fg:x="1081" fg:w="1"/><text x="85.9756%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.7256%" y="613" width="0.0793%" height="15" fill="rgb(239,125,3)" fg:x="1081" fg:w="1"/><text x="85.9756%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.8049%" y="741" width="0.0793%" height="15" fill="rgb(235,59,37)" fg:x="1082" fg:w="1"/><text x="86.0549%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.8049%" y="725" width="0.0793%" height="15" fill="rgb(241,214,47)" fg:x="1082" fg:w="1"/><text x="86.0549%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8049%" y="709" width="0.0793%" height="15" fill="rgb(214,114,51)" fg:x="1082" fg:w="1"/><text x="86.0549%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8049%" y="693" width="0.0793%" height="15" fill="rgb(221,180,19)" fg:x="1082" fg:w="1"/><text x="86.0549%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8049%" y="677" width="0.0793%" height="15" fill="rgb(223,66,32)" fg:x="1082" fg:w="1"/><text x="86.0549%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="85.8049%" y="805" width="0.1586%" height="15" fill="rgb(218,134,38)" fg:x="1082" fg:w="2"/><text x="86.0549%" y="815.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="85.8049%" y="789" width="0.1586%" height="15" fill="rgb(250,83,11)" fg:x="1082" fg:w="2"/><text x="86.0549%" y="799.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="85.8049%" y="773" width="0.1586%" height="15" fill="rgb(239,137,18)" fg:x="1082" fg:w="2"/><text x="86.0549%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="85.8049%" y="757" width="0.1586%" height="15" fill="rgb(242,185,53)" fg:x="1082" fg:w="2"/><text x="86.0549%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.8842%" y="741" width="0.0793%" height="15" fill="rgb(244,165,31)" fg:x="1083" fg:w="1"/><text x="86.1342%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.8842%" y="725" width="0.0793%" height="15" fill="rgb(223,129,30)" fg:x="1083" fg:w="1"/><text x="86.1342%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8842%" y="709" width="0.0793%" height="15" fill="rgb(240,148,35)" fg:x="1083" fg:w="1"/><text x="86.1342%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8842%" y="693" width="0.0793%" height="15" fill="rgb(231,3,24)" fg:x="1083" fg:w="1"/><text x="86.1342%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8842%" y="677" width="0.0793%" height="15" fill="rgb(227,197,42)" fg:x="1083" fg:w="1"/><text x="86.1342%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8842%" y="661" width="0.0793%" height="15" fill="rgb(251,41,31)" fg:x="1083" fg:w="1"/><text x="86.1342%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.8842%" y="645" width="0.0793%" height="15" fill="rgb(207,92,5)" fg:x="1083" fg:w="1"/><text x="86.1342%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.8842%" y="629" width="0.0793%" height="15" fill="rgb(236,62,31)" fg:x="1083" fg:w="1"/><text x="86.1342%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9635%" y="645" width="0.0793%" height="15" fill="rgb(248,218,41)" fg:x="1084" fg:w="1"/><text x="86.2135%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.9635%" y="629" width="0.0793%" height="15" fill="rgb(250,128,19)" fg:x="1084" fg:w="1"/><text x="86.2135%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.9635%" y="613" width="0.0793%" height="15" fill="rgb(239,216,33)" fg:x="1084" fg:w="1"/><text x="86.2135%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.9635%" y="597" width="0.0793%" height="15" fill="rgb(216,44,26)" fg:x="1084" fg:w="1"/><text x="86.2135%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.9635%" y="581" width="0.0793%" height="15" fill="rgb(207,69,29)" fg:x="1084" fg:w="1"/><text x="86.2135%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.9635%" y="565" width="0.0793%" height="15" fill="rgb(246,182,38)" fg:x="1084" fg:w="1"/><text x="86.2135%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="85.9635%" y="549" width="0.0793%" height="15" fill="rgb(252,219,28)" fg:x="1084" fg:w="1"/><text x="86.2135%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="85.9635%" y="533" width="0.0793%" height="15" fill="rgb(209,164,16)" fg:x="1084" fg:w="1"/><text x="86.2135%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="85.9635%" y="789" width="0.1586%" height="15" fill="rgb(208,49,15)" fg:x="1084" fg:w="2"/><text x="86.2135%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="85.9635%" y="773" width="0.1586%" height="15" fill="rgb(235,42,45)" fg:x="1084" fg:w="2"/><text x="86.2135%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="85.9635%" y="757" width="0.1586%" height="15" fill="rgb(246,198,8)" fg:x="1084" fg:w="2"/><text x="86.2135%" y="767.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="85.9635%" y="741" width="0.1586%" height="15" fill="rgb(237,205,33)" fg:x="1084" fg:w="2"/><text x="86.2135%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.9635%" y="725" width="0.1586%" height="15" fill="rgb(249,116,21)" fg:x="1084" fg:w="2"/><text x="86.2135%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.9635%" y="709" width="0.1586%" height="15" fill="rgb(230,35,49)" fg:x="1084" fg:w="2"/><text x="86.2135%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.9635%" y="693" width="0.1586%" height="15" fill="rgb(207,8,52)" fg:x="1084" fg:w="2"/><text x="86.2135%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.9635%" y="677" width="0.1586%" height="15" fill="rgb(218,173,0)" fg:x="1084" fg:w="2"/><text x="86.2135%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.9635%" y="661" width="0.1586%" height="15" fill="rgb(248,106,34)" fg:x="1084" fg:w="2"/><text x="86.2135%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0428%" y="645" width="0.0793%" height="15" fill="rgb(232,50,11)" fg:x="1085" fg:w="1"/><text x="86.2928%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0428%" y="629" width="0.0793%" height="15" fill="rgb(213,142,18)" fg:x="1085" fg:w="1"/><text x="86.2928%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.0428%" y="613" width="0.0793%" height="15" fill="rgb(246,117,38)" fg:x="1085" fg:w="1"/><text x="86.2928%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.0428%" y="597" width="0.0793%" height="15" fill="rgb(218,133,54)" fg:x="1085" fg:w="1"/><text x="86.2928%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.0428%" y="581" width="0.0793%" height="15" fill="rgb(216,154,35)" fg:x="1085" fg:w="1"/><text x="86.2928%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0428%" y="565" width="0.0793%" height="15" fill="rgb(219,175,36)" fg:x="1085" fg:w="1"/><text x="86.2928%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0428%" y="549" width="0.0793%" height="15" fill="rgb(224,0,16)" fg:x="1085" fg:w="1"/><text x="86.2928%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.0428%" y="533" width="0.0793%" height="15" fill="rgb(221,186,40)" fg:x="1085" fg:w="1"/><text x="86.2928%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.0428%" y="517" width="0.0793%" height="15" fill="rgb(254,0,31)" fg:x="1085" fg:w="1"/><text x="86.2928%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.0428%" y="501" width="0.0793%" height="15" fill="rgb(206,138,52)" fg:x="1085" fg:w="1"/><text x="86.2928%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.0428%" y="485" width="0.0793%" height="15" fill="rgb(229,99,30)" fg:x="1085" fg:w="1"/><text x="86.2928%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0428%" y="469" width="0.0793%" height="15" fill="rgb(205,131,29)" fg:x="1085" fg:w="1"/><text x="86.2928%" y="479.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="86.1221%" y="789" width="0.1586%" height="15" fill="rgb(232,114,46)" fg:x="1086" fg:w="2"/><text x="86.3721%" y="799.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="86.2014%" y="773" width="0.0793%" height="15" fill="rgb(206,181,31)" fg:x="1087" fg:w="1"/><text x="86.4514%" y="783.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.2014%" y="757" width="0.0793%" height="15" fill="rgb(251,142,12)" fg:x="1087" fg:w="1"/><text x="86.4514%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.2014%" y="741" width="0.0793%" height="15" fill="rgb(252,128,47)" fg:x="1087" fg:w="1"/><text x="86.4514%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.2807%" y="741" width="0.0793%" height="15" fill="rgb(208,51,33)" fg:x="1088" fg:w="1"/><text x="86.5307%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.2807%" y="725" width="0.0793%" height="15" fill="rgb(240,36,11)" fg:x="1088" fg:w="1"/><text x="86.5307%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.2807%" y="709" width="0.0793%" height="15" fill="rgb(245,160,28)" fg:x="1088" fg:w="1"/><text x="86.5307%" y="719.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (46 samples, 3.65%)</title><rect x="82.7914%" y="837" width="3.6479%" height="15" fill="rgb(230,37,49)" fg:x="1044" fg:w="46"/><text x="83.0414%" y="847.50">plug..</text></g><g><title>plugins_core::build::Build::occupying (8 samples, 0.63%)</title><rect x="85.8049%" y="821" width="0.6344%" height="15" fill="rgb(227,40,34)" fg:x="1082" fg:w="8"/><text x="86.0549%" y="831.50"></text></g><g><title>plugins_core::tools::set_occupying (6 samples, 0.48%)</title><rect x="85.9635%" y="805" width="0.4758%" height="15" fill="rgb(253,212,23)" fg:x="1084" fg:w="6"/><text x="86.2135%" y="815.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="86.2807%" y="789" width="0.1586%" height="15" fill="rgb(230,155,36)" fg:x="1088" fg:w="2"/><text x="86.5307%" y="799.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="86.2807%" y="773" width="0.1586%" height="15" fill="rgb(221,176,6)" fg:x="1088" fg:w="2"/><text x="86.5307%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="86.2807%" y="757" width="0.1586%" height="15" fill="rgb(207,203,40)" fg:x="1088" fg:w="2"/><text x="86.5307%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.3600%" y="741" width="0.0793%" height="15" fill="rgb(215,88,16)" fg:x="1089" fg:w="1"/><text x="86.6100%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.3600%" y="725" width="0.0793%" height="15" fill="rgb(233,52,54)" fg:x="1089" fg:w="1"/><text x="86.6100%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.3600%" y="709" width="0.0793%" height="15" fill="rgb(205,47,52)" fg:x="1089" fg:w="1"/><text x="86.6100%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3600%" y="693" width="0.0793%" height="15" fill="rgb(218,56,43)" fg:x="1089" fg:w="1"/><text x="86.6100%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3600%" y="677" width="0.0793%" height="15" fill="rgb(251,225,48)" fg:x="1089" fg:w="1"/><text x="86.6100%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3600%" y="661" width="0.0793%" height="15" fill="rgb(244,56,1)" fg:x="1089" fg:w="1"/><text x="86.6100%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3600%" y="645" width="0.0793%" height="15" fill="rgb(215,46,3)" fg:x="1089" fg:w="1"/><text x="86.6100%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3600%" y="629" width="0.0793%" height="15" fill="rgb(252,25,51)" fg:x="1089" fg:w="1"/><text x="86.6100%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="86.4393%" y="805" width="0.0793%" height="15" fill="rgb(243,86,25)" fg:x="1090" fg:w="1"/><text x="86.6893%" y="815.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="86.4393%" y="789" width="0.0793%" height="15" fill="rgb(223,57,49)" fg:x="1090" fg:w="1"/><text x="86.6893%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.4393%" y="773" width="0.0793%" height="15" fill="rgb(226,26,11)" fg:x="1090" fg:w="1"/><text x="86.6893%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.4393%" y="757" width="0.0793%" height="15" fill="rgb(233,166,51)" fg:x="1090" fg:w="1"/><text x="86.6893%" y="767.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (2 samples, 0.16%)</title><rect x="86.4393%" y="837" width="0.1586%" height="15" fill="rgb(232,145,44)" fg:x="1090" fg:w="2"/><text x="86.6893%" y="847.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="86.4393%" y="821" width="0.1586%" height="15" fill="rgb(246,98,4)" fg:x="1090" fg:w="2"/><text x="86.6893%" y="831.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="86.5186%" y="805" width="0.0793%" height="15" fill="rgb(223,187,1)" fg:x="1091" fg:w="1"/><text x="86.7686%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.5186%" y="789" width="0.0793%" height="15" fill="rgb(245,183,34)" fg:x="1091" fg:w="1"/><text x="86.7686%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.5186%" y="773" width="0.0793%" height="15" fill="rgb(223,6,23)" fg:x="1091" fg:w="1"/><text x="86.7686%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.5186%" y="757" width="0.0793%" height="15" fill="rgb(226,63,21)" fg:x="1091" fg:w="1"/><text x="86.7686%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.5186%" y="741" width="0.0793%" height="15" fill="rgb(244,58,43)" fg:x="1091" fg:w="1"/><text x="86.7686%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.5186%" y="725" width="0.0793%" height="15" fill="rgb(221,65,27)" fg:x="1091" fg:w="1"/><text x="86.7686%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.5186%" y="709" width="0.0793%" height="15" fill="rgb(231,17,48)" fg:x="1091" fg:w="1"/><text x="86.7686%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.5186%" y="693" width="0.0793%" height="15" fill="rgb(229,198,23)" fg:x="1091" fg:w="1"/><text x="86.7686%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.5186%" y="677" width="0.0793%" height="15" fill="rgb(220,192,38)" fg:x="1091" fg:w="1"/><text x="86.7686%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="86.6772%" y="789" width="0.0793%" height="15" fill="rgb(224,157,12)" fg:x="1093" fg:w="1"/><text x="86.9272%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="86.6772%" y="773" width="0.0793%" height="15" fill="rgb(210,74,7)" fg:x="1093" fg:w="1"/><text x="86.9272%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="86.6772%" y="757" width="0.0793%" height="15" fill="rgb(233,184,31)" fg:x="1093" fg:w="1"/><text x="86.9272%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.6772%" y="741" width="0.0793%" height="15" fill="rgb(246,44,22)" fg:x="1093" fg:w="1"/><text x="86.9272%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.6772%" y="725" width="0.0793%" height="15" fill="rgb(236,102,41)" fg:x="1093" fg:w="1"/><text x="86.9272%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.6772%" y="709" width="0.0793%" height="15" fill="rgb(245,17,40)" fg:x="1093" fg:w="1"/><text x="86.9272%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.6772%" y="693" width="0.0793%" height="15" fill="rgb(227,165,9)" fg:x="1093" fg:w="1"/><text x="86.9272%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.6772%" y="677" width="0.0793%" height="15" fill="rgb(220,123,37)" fg:x="1093" fg:w="1"/><text x="86.9272%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.6772%" y="661" width="0.0793%" height="15" fill="rgb(239,124,16)" fg:x="1093" fg:w="1"/><text x="86.9272%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.6772%" y="645" width="0.0793%" height="15" fill="rgb(214,215,39)" fg:x="1093" fg:w="1"/><text x="86.9272%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="86.6772%" y="629" width="0.0793%" height="15" fill="rgb(224,72,47)" fg:x="1093" fg:w="1"/><text x="86.9272%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.6772%" y="613" width="0.0793%" height="15" fill="rgb(252,112,7)" fg:x="1093" fg:w="1"/><text x="86.9272%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.7565%" y="741" width="0.0793%" height="15" fill="rgb(228,116,35)" fg:x="1094" fg:w="1"/><text x="87.0065%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.7565%" y="789" width="0.1586%" height="15" fill="rgb(246,125,25)" fg:x="1094" fg:w="2"/><text x="87.0065%" y="799.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.7565%" y="773" width="0.1586%" height="15" fill="rgb(230,220,33)" fg:x="1094" fg:w="2"/><text x="87.0065%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.7565%" y="757" width="0.1586%" height="15" fill="rgb(220,48,47)" fg:x="1094" fg:w="2"/><text x="87.0065%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.8358%" y="741" width="0.0793%" height="15" fill="rgb(240,130,32)" fg:x="1095" fg:w="1"/><text x="87.0858%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.8358%" y="725" width="0.0793%" height="15" fill="rgb(252,97,40)" fg:x="1095" fg:w="1"/><text x="87.0858%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.8358%" y="709" width="0.0793%" height="15" fill="rgb(211,117,15)" fg:x="1095" fg:w="1"/><text x="87.0858%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.8358%" y="693" width="0.0793%" height="15" fill="rgb(223,47,44)" fg:x="1095" fg:w="1"/><text x="87.0858%" y="703.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="86.9151%" y="789" width="0.0793%" height="15" fill="rgb(239,53,20)" fg:x="1096" fg:w="1"/><text x="87.1651%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.9151%" y="773" width="0.0793%" height="15" fill="rgb(242,71,22)" fg:x="1096" fg:w="1"/><text x="87.1651%" y="783.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9151%" y="757" width="0.0793%" height="15" fill="rgb(244,146,41)" fg:x="1096" fg:w="1"/><text x="87.1651%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.9151%" y="741" width="0.0793%" height="15" fill="rgb(206,133,42)" fg:x="1096" fg:w="1"/><text x="87.1651%" y="751.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9151%" y="725" width="0.0793%" height="15" fill="rgb(220,206,16)" fg:x="1096" fg:w="1"/><text x="87.1651%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.9151%" y="709" width="0.0793%" height="15" fill="rgb(234,5,52)" fg:x="1096" fg:w="1"/><text x="87.1651%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.9151%" y="693" width="0.0793%" height="15" fill="rgb(206,81,46)" fg:x="1096" fg:w="1"/><text x="87.1651%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="86.9151%" y="677" width="0.0793%" height="15" fill="rgb(245,111,47)" fg:x="1096" fg:w="1"/><text x="87.1651%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (6 samples, 0.48%)</title><rect x="86.5979%" y="837" width="0.4758%" height="15" fill="rgb(227,198,45)" fg:x="1092" fg:w="6"/><text x="86.8479%" y="847.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.48%)</title><rect x="86.5979%" y="821" width="0.4758%" height="15" fill="rgb(223,141,47)" fg:x="1092" fg:w="6"/><text x="86.8479%" y="831.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="86.6772%" y="805" width="0.3965%" height="15" fill="rgb(234,124,3)" fg:x="1093" fg:w="5"/><text x="86.9272%" y="815.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="86.9944%" y="789" width="0.0793%" height="15" fill="rgb(218,189,15)" fg:x="1097" fg:w="1"/><text x="87.2444%" y="799.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="86.9944%" y="773" width="0.0793%" height="15" fill="rgb(253,91,25)" fg:x="1097" fg:w="1"/><text x="87.2444%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="86.9944%" y="757" width="0.0793%" height="15" fill="rgb(243,103,39)" fg:x="1097" fg:w="1"/><text x="87.2444%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="86.9944%" y="741" width="0.0793%" height="15" fill="rgb(252,94,6)" fg:x="1097" fg:w="1"/><text x="87.2444%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.9944%" y="725" width="0.0793%" height="15" fill="rgb(236,153,18)" fg:x="1097" fg:w="1"/><text x="87.2444%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9944%" y="709" width="0.0793%" height="15" fill="rgb(218,227,22)" fg:x="1097" fg:w="1"/><text x="87.2444%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.9944%" y="693" width="0.0793%" height="15" fill="rgb(209,53,33)" fg:x="1097" fg:w="1"/><text x="87.2444%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="86.9944%" y="677" width="0.0793%" height="15" fill="rgb(252,183,3)" fg:x="1097" fg:w="1"/><text x="87.2444%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.9944%" y="661" width="0.0793%" height="15" fill="rgb(249,138,54)" fg:x="1097" fg:w="1"/><text x="87.2444%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="86.9944%" y="645" width="0.0793%" height="15" fill="rgb(226,39,3)" fg:x="1097" fg:w="1"/><text x="87.2444%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="87.0738%" y="821" width="0.0793%" height="15" fill="rgb(237,129,38)" fg:x="1098" fg:w="1"/><text x="87.3238%" y="831.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="87.0738%" y="805" width="0.0793%" height="15" fill="rgb(218,214,54)" fg:x="1098" fg:w="1"/><text x="87.3238%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.0738%" y="789" width="0.0793%" height="15" fill="rgb(228,112,8)" fg:x="1098" fg:w="1"/><text x="87.3238%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.0738%" y="773" width="0.0793%" height="15" fill="rgb(219,128,11)" fg:x="1098" fg:w="1"/><text x="87.3238%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.0738%" y="757" width="0.0793%" height="15" fill="rgb(240,39,37)" fg:x="1098" fg:w="1"/><text x="87.3238%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.0738%" y="741" width="0.0793%" height="15" fill="rgb(215,199,42)" fg:x="1098" fg:w="1"/><text x="87.3238%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.0738%" y="725" width="0.0793%" height="15" fill="rgb(248,51,13)" fg:x="1098" fg:w="1"/><text x="87.3238%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.0738%" y="709" width="0.0793%" height="15" fill="rgb(225,196,0)" fg:x="1098" fg:w="1"/><text x="87.3238%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.0738%" y="693" width="0.0793%" height="15" fill="rgb(221,31,53)" fg:x="1098" fg:w="1"/><text x="87.3238%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.0738%" y="677" width="0.0793%" height="15" fill="rgb(211,79,37)" fg:x="1098" fg:w="1"/><text x="87.3238%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.0738%" y="661" width="0.0793%" height="15" fill="rgb(227,118,20)" fg:x="1098" fg:w="1"/><text x="87.3238%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.0738%" y="645" width="0.0793%" height="15" fill="rgb(225,142,40)" fg:x="1098" fg:w="1"/><text x="87.3238%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.0738%" y="629" width="0.0793%" height="15" fill="rgb(208,183,34)" fg:x="1098" fg:w="1"/><text x="87.3238%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0738%" y="613" width="0.0793%" height="15" fill="rgb(209,112,52)" fg:x="1098" fg:w="1"/><text x="87.3238%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.1531%" y="789" width="0.0793%" height="15" fill="rgb(236,9,32)" fg:x="1099" fg:w="1"/><text x="87.4031%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.1531%" y="773" width="0.0793%" height="15" fill="rgb(208,222,9)" fg:x="1099" fg:w="1"/><text x="87.4031%" y="783.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (95 samples, 7.53%)</title><rect x="79.7780%" y="853" width="7.5337%" height="15" fill="rgb(214,142,24)" fg:x="1006" fg:w="95"/><text x="80.0280%" y="863.50">&lt;tests::Ho..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (3 samples, 0.24%)</title><rect x="87.0738%" y="837" width="0.2379%" height="15" fill="rgb(244,48,51)" fg:x="1098" fg:w="3"/><text x="87.3238%" y="847.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="87.1531%" y="821" width="0.1586%" height="15" fill="rgb(253,171,44)" fg:x="1099" fg:w="2"/><text x="87.4031%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="87.1531%" y="805" width="0.1586%" height="15" fill="rgb(221,85,21)" fg:x="1099" fg:w="2"/><text x="87.4031%" y="815.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="87.2324%" y="789" width="0.0793%" height="15" fill="rgb(245,40,38)" fg:x="1100" fg:w="1"/><text x="87.4824%" y="799.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.2324%" y="773" width="0.0793%" height="15" fill="rgb(220,135,37)" fg:x="1100" fg:w="1"/><text x="87.4824%" y="783.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="87.2324%" y="757" width="0.0793%" height="15" fill="rgb(249,62,46)" fg:x="1100" fg:w="1"/><text x="87.4824%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.2324%" y="741" width="0.0793%" height="15" fill="rgb(232,81,15)" fg:x="1100" fg:w="1"/><text x="87.4824%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="87.2324%" y="725" width="0.0793%" height="15" fill="rgb(244,179,28)" fg:x="1100" fg:w="1"/><text x="87.4824%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.2324%" y="709" width="0.0793%" height="15" fill="rgb(220,4,32)" fg:x="1100" fg:w="1"/><text x="87.4824%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="87.2324%" y="693" width="0.0793%" height="15" fill="rgb(214,116,42)" fg:x="1100" fg:w="1"/><text x="87.4824%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="87.2324%" y="677" width="0.0793%" height="15" fill="rgb(226,94,31)" fg:x="1100" fg:w="1"/><text x="87.4824%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="87.2324%" y="661" width="0.0793%" height="15" fill="rgb(241,172,26)" fg:x="1100" fg:w="1"/><text x="87.4824%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="87.2324%" y="645" width="0.0793%" height="15" fill="rgb(206,38,39)" fg:x="1100" fg:w="1"/><text x="87.4824%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.3117%" y="853" width="0.0793%" height="15" fill="rgb(210,139,19)" fg:x="1101" fg:w="1"/><text x="87.5617%" y="863.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="87.3910%" y="837" width="0.1586%" height="15" fill="rgb(220,10,22)" fg:x="1102" fg:w="2"/><text x="87.6410%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.4703%" y="821" width="0.0793%" height="15" fill="rgb(225,218,36)" fg:x="1103" fg:w="1"/><text x="87.7203%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.4703%" y="805" width="0.0793%" height="15" fill="rgb(244,50,47)" fg:x="1103" fg:w="1"/><text x="87.7203%" y="815.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.5496%" y="837" width="0.0793%" height="15" fill="rgb(247,80,2)" fg:x="1104" fg:w="1"/><text x="87.7996%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.5496%" y="821" width="0.0793%" height="15" fill="rgb(234,70,38)" fg:x="1104" fg:w="1"/><text x="87.7996%" y="831.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.5496%" y="805" width="0.0793%" height="15" fill="rgb(238,170,25)" fg:x="1104" fg:w="1"/><text x="87.7996%" y="815.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.5496%" y="789" width="0.0793%" height="15" fill="rgb(252,23,6)" fg:x="1104" fg:w="1"/><text x="87.7996%" y="799.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.5496%" y="773" width="0.0793%" height="15" fill="rgb(209,98,49)" fg:x="1104" fg:w="1"/><text x="87.7996%" y="783.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="87.5496%" y="757" width="0.0793%" height="15" fill="rgb(213,29,25)" fg:x="1104" fg:w="1"/><text x="87.7996%" y="767.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="87.6289%" y="837" width="0.0793%" height="15" fill="rgb(235,71,32)" fg:x="1105" fg:w="1"/><text x="87.8789%" y="847.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="87.6289%" y="821" width="0.0793%" height="15" fill="rgb(227,75,49)" fg:x="1105" fg:w="1"/><text x="87.8789%" y="831.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="87.6289%" y="805" width="0.0793%" height="15" fill="rgb(220,19,24)" fg:x="1105" fg:w="1"/><text x="87.8789%" y="815.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="87.6289%" y="789" width="0.0793%" height="15" fill="rgb(249,67,15)" fg:x="1105" fg:w="1"/><text x="87.8789%" y="799.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="87.6289%" y="773" width="0.0793%" height="15" fill="rgb(233,197,44)" fg:x="1105" fg:w="1"/><text x="87.8789%" y="783.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="87.6289%" y="757" width="0.0793%" height="15" fill="rgb(245,206,23)" fg:x="1105" fg:w="1"/><text x="87.8789%" y="767.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="87.6289%" y="741" width="0.0793%" height="15" fill="rgb(205,164,14)" fg:x="1105" fg:w="1"/><text x="87.8789%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;()&gt;&gt; (1 samples, 0.08%)</title><rect x="87.6289%" y="725" width="0.0793%" height="15" fill="rgb(209,57,33)" fg:x="1105" fg:w="1"/><text x="87.8789%" y="735.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.6289%" y="709" width="0.0793%" height="15" fill="rgb(237,209,41)" fg:x="1105" fg:w="1"/><text x="87.8789%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (1 samples, 0.08%)</title><rect x="87.6289%" y="693" width="0.0793%" height="15" fill="rgb(252,93,6)" fg:x="1105" fg:w="1"/><text x="87.8789%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (1 samples, 0.08%)</title><rect x="87.6289%" y="677" width="0.0793%" height="15" fill="rgb(218,214,32)" fg:x="1105" fg:w="1"/><text x="87.8789%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.08%)</title><rect x="87.6289%" y="661" width="0.0793%" height="15" fill="rgb(243,144,9)" fg:x="1105" fg:w="1"/><text x="87.8789%" y="671.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="87.7082%" y="757" width="0.0793%" height="15" fill="rgb(254,62,38)" fg:x="1106" fg:w="1"/><text x="87.9582%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.7082%" y="741" width="0.0793%" height="15" fill="rgb(247,146,11)" fg:x="1106" fg:w="1"/><text x="87.9582%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="87.7082%" y="725" width="0.0793%" height="15" fill="rgb(213,96,14)" fg:x="1106" fg:w="1"/><text x="87.9582%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="87.7082%" y="709" width="0.0793%" height="15" fill="rgb(246,102,11)" fg:x="1106" fg:w="1"/><text x="87.9582%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="87.7082%" y="693" width="0.0793%" height="15" fill="rgb(241,182,16)" fg:x="1106" fg:w="1"/><text x="87.9582%" y="703.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="87.7082%" y="677" width="0.0793%" height="15" fill="rgb(225,28,43)" fg:x="1106" fg:w="1"/><text x="87.9582%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.7082%" y="661" width="0.0793%" height="15" fill="rgb(247,87,15)" fg:x="1106" fg:w="1"/><text x="87.9582%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="87.7082%" y="645" width="0.0793%" height="15" fill="rgb(225,211,30)" fg:x="1106" fg:w="1"/><text x="87.9582%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (2 samples, 0.16%)</title><rect x="87.7082%" y="821" width="0.1586%" height="15" fill="rgb(223,111,44)" fg:x="1106" fg:w="2"/><text x="87.9582%" y="831.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (2 samples, 0.16%)</title><rect x="87.7082%" y="805" width="0.1586%" height="15" fill="rgb(225,60,10)" fg:x="1106" fg:w="2"/><text x="87.9582%" y="815.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="87.7082%" y="789" width="0.1586%" height="15" fill="rgb(245,196,31)" fg:x="1106" fg:w="2"/><text x="87.9582%" y="799.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.7082%" y="773" width="0.1586%" height="15" fill="rgb(238,71,27)" fg:x="1106" fg:w="2"/><text x="87.9582%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.7875%" y="757" width="0.0793%" height="15" fill="rgb(212,77,40)" fg:x="1107" fg:w="1"/><text x="88.0375%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.7875%" y="741" width="0.0793%" height="15" fill="rgb(242,14,34)" fg:x="1107" fg:w="1"/><text x="88.0375%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="87.7875%" y="725" width="0.0793%" height="15" fill="rgb(227,221,15)" fg:x="1107" fg:w="1"/><text x="88.0375%" y="735.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="87.7875%" y="709" width="0.0793%" height="15" fill="rgb(230,80,41)" fg:x="1107" fg:w="1"/><text x="88.0375%" y="719.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="87.7875%" y="693" width="0.0793%" height="15" fill="rgb(221,65,43)" fg:x="1107" fg:w="1"/><text x="88.0375%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.7875%" y="677" width="0.0793%" height="15" fill="rgb(250,139,15)" fg:x="1107" fg:w="1"/><text x="88.0375%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.7875%" y="661" width="0.0793%" height="15" fill="rgb(236,101,33)" fg:x="1107" fg:w="1"/><text x="88.0375%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.7875%" y="645" width="0.0793%" height="15" fill="rgb(240,185,7)" fg:x="1107" fg:w="1"/><text x="88.0375%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.8668%" y="821" width="0.0793%" height="15" fill="rgb(230,219,29)" fg:x="1108" fg:w="1"/><text x="88.1168%" y="831.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="87.9461%" y="805" width="0.1586%" height="15" fill="rgb(250,208,42)" fg:x="1109" fg:w="2"/><text x="88.1961%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="88.0254%" y="789" width="0.0793%" height="15" fill="rgb(231,6,17)" fg:x="1110" fg:w="1"/><text x="88.2754%" y="799.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="88.1047%" y="757" width="0.2379%" height="15" fill="rgb(250,180,47)" fg:x="1111" fg:w="3"/><text x="88.3547%" y="767.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="88.1047%" y="741" width="0.2379%" height="15" fill="rgb(218,156,38)" fg:x="1111" fg:w="3"/><text x="88.3547%" y="751.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.2633%" y="725" width="0.0793%" height="15" fill="rgb(207,13,46)" fg:x="1113" fg:w="1"/><text x="88.5133%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.2633%" y="709" width="0.0793%" height="15" fill="rgb(221,30,24)" fg:x="1113" fg:w="1"/><text x="88.5133%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.2633%" y="693" width="0.0793%" height="15" fill="rgb(239,110,29)" fg:x="1113" fg:w="1"/><text x="88.5133%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="88.3426%" y="741" width="0.1586%" height="15" fill="rgb(223,212,28)" fg:x="1114" fg:w="2"/><text x="88.5926%" y="751.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="88.3426%" y="725" width="0.1586%" height="15" fill="rgb(206,148,43)" fg:x="1114" fg:w="2"/><text x="88.5926%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.4219%" y="709" width="0.0793%" height="15" fill="rgb(227,139,9)" fg:x="1115" fg:w="1"/><text x="88.6719%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.4219%" y="693" width="0.0793%" height="15" fill="rgb(244,64,31)" fg:x="1115" fg:w="1"/><text x="88.6719%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.5012%" y="725" width="0.0793%" height="15" fill="rgb(219,45,45)" fg:x="1116" fg:w="1"/><text x="88.7512%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.5012%" y="709" width="0.0793%" height="15" fill="rgb(205,112,40)" fg:x="1116" fg:w="1"/><text x="88.7512%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.5805%" y="709" width="0.0793%" height="15" fill="rgb(207,18,46)" fg:x="1117" fg:w="1"/><text x="88.8305%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.5805%" y="693" width="0.0793%" height="15" fill="rgb(219,65,15)" fg:x="1117" fg:w="1"/><text x="88.8305%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.5805%" y="677" width="0.0793%" height="15" fill="rgb(248,191,24)" fg:x="1117" fg:w="1"/><text x="88.8305%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.5805%" y="661" width="0.0793%" height="15" fill="rgb(251,155,16)" fg:x="1117" fg:w="1"/><text x="88.8305%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.6598%" y="677" width="0.0793%" height="15" fill="rgb(249,62,38)" fg:x="1118" fg:w="1"/><text x="88.9098%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="88.6598%" y="709" width="0.1586%" height="15" fill="rgb(252,214,17)" fg:x="1118" fg:w="2"/><text x="88.9098%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="88.6598%" y="693" width="0.1586%" height="15" fill="rgb(246,215,53)" fg:x="1118" fg:w="2"/><text x="88.9098%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.7391%" y="677" width="0.0793%" height="15" fill="rgb(232,148,8)" fg:x="1119" fg:w="1"/><text x="88.9891%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.7391%" y="661" width="0.0793%" height="15" fill="rgb(221,119,15)" fg:x="1119" fg:w="1"/><text x="88.9891%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.7391%" y="645" width="0.0793%" height="15" fill="rgb(239,69,36)" fg:x="1119" fg:w="1"/><text x="88.9891%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.7391%" y="629" width="0.0793%" height="15" fill="rgb(247,164,1)" fg:x="1119" fg:w="1"/><text x="88.9891%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.7391%" y="613" width="0.0793%" height="15" fill="rgb(216,221,53)" fg:x="1119" fg:w="1"/><text x="88.9891%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.7391%" y="597" width="0.0793%" height="15" fill="rgb(249,57,29)" fg:x="1119" fg:w="1"/><text x="88.9891%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="88.5012%" y="741" width="0.3965%" height="15" fill="rgb(227,23,6)" fg:x="1116" fg:w="5"/><text x="88.7512%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="88.5805%" y="725" width="0.3172%" height="15" fill="rgb(213,211,30)" fg:x="1117" fg:w="4"/><text x="88.8305%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.8184%" y="709" width="0.0793%" height="15" fill="rgb(254,202,30)" fg:x="1120" fg:w="1"/><text x="89.0684%" y="719.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.95%)</title><rect x="88.1047%" y="773" width="0.9516%" height="15" fill="rgb(248,213,0)" fg:x="1111" fg:w="12"/><text x="88.3547%" y="783.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.71%)</title><rect x="88.3426%" y="757" width="0.7137%" height="15" fill="rgb(248,55,48)" fg:x="1114" fg:w="9"/><text x="88.5926%" y="767.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="88.8977%" y="741" width="0.1586%" height="15" fill="rgb(217,221,51)" fg:x="1121" fg:w="2"/><text x="89.1477%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.9770%" y="725" width="0.0793%" height="15" fill="rgb(233,8,16)" fg:x="1122" fg:w="1"/><text x="89.2270%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.9770%" y="709" width="0.0793%" height="15" fill="rgb(220,23,39)" fg:x="1122" fg:w="1"/><text x="89.2270%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.9770%" y="693" width="0.0793%" height="15" fill="rgb(236,20,54)" fg:x="1122" fg:w="1"/><text x="89.2270%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="89.0563%" y="741" width="0.1586%" height="15" fill="rgb(213,22,0)" fg:x="1123" fg:w="2"/><text x="89.3063%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.2149%" y="709" width="0.0793%" height="15" fill="rgb(226,144,21)" fg:x="1125" fg:w="1"/><text x="89.4649%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="89.2942%" y="693" width="0.0793%" height="15" fill="rgb(240,32,26)" fg:x="1126" fg:w="1"/><text x="89.5442%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.2942%" y="677" width="0.0793%" height="15" fill="rgb(252,225,52)" fg:x="1126" fg:w="1"/><text x="89.5442%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.2942%" y="661" width="0.0793%" height="15" fill="rgb(227,113,38)" fg:x="1126" fg:w="1"/><text x="89.5442%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.3735%" y="677" width="0.0793%" height="15" fill="rgb(246,146,48)" fg:x="1127" fg:w="1"/><text x="89.6235%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="89.0563%" y="773" width="0.4758%" height="15" fill="rgb(229,83,50)" fg:x="1123" fg:w="6"/><text x="89.3063%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="89.0563%" y="757" width="0.4758%" height="15" fill="rgb(248,146,37)" fg:x="1123" fg:w="6"/><text x="89.3063%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="89.2149%" y="741" width="0.3172%" height="15" fill="rgb(230,102,37)" fg:x="1125" fg:w="4"/><text x="89.4649%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="89.2149%" y="725" width="0.3172%" height="15" fill="rgb(226,129,21)" fg:x="1125" fg:w="4"/><text x="89.4649%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.2942%" y="709" width="0.2379%" height="15" fill="rgb(241,215,13)" fg:x="1126" fg:w="3"/><text x="89.5442%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.3735%" y="693" width="0.1586%" height="15" fill="rgb(217,128,6)" fg:x="1127" fg:w="2"/><text x="89.6235%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.4528%" y="677" width="0.0793%" height="15" fill="rgb(248,48,54)" fg:x="1128" fg:w="1"/><text x="89.7028%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.4528%" y="661" width="0.0793%" height="15" fill="rgb(219,83,38)" fg:x="1128" fg:w="1"/><text x="89.7028%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.4528%" y="645" width="0.0793%" height="15" fill="rgb(252,210,52)" fg:x="1128" fg:w="1"/><text x="89.7028%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.4528%" y="629" width="0.0793%" height="15" fill="rgb(221,200,4)" fg:x="1128" fg:w="1"/><text x="89.7028%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.5321%" y="693" width="0.0793%" height="15" fill="rgb(216,58,11)" fg:x="1129" fg:w="1"/><text x="89.7821%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.5321%" y="677" width="0.0793%" height="15" fill="rgb(213,152,6)" fg:x="1129" fg:w="1"/><text x="89.7821%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6114%" y="661" width="0.0793%" height="15" fill="rgb(209,210,52)" fg:x="1130" fg:w="1"/><text x="89.8614%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.6907%" y="661" width="0.0793%" height="15" fill="rgb(216,26,42)" fg:x="1131" fg:w="1"/><text x="89.9407%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="89.5321%" y="741" width="0.3172%" height="15" fill="rgb(229,8,52)" fg:x="1129" fg:w="4"/><text x="89.7821%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="89.5321%" y="725" width="0.3172%" height="15" fill="rgb(234,11,12)" fg:x="1129" fg:w="4"/><text x="89.7821%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="89.5321%" y="709" width="0.3172%" height="15" fill="rgb(222,132,34)" fg:x="1129" fg:w="4"/><text x="89.7821%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.6114%" y="693" width="0.2379%" height="15" fill="rgb(246,51,18)" fg:x="1130" fg:w="3"/><text x="89.8614%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.6114%" y="677" width="0.2379%" height="15" fill="rgb(234,40,7)" fg:x="1130" fg:w="3"/><text x="89.8614%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="89.7700%" y="661" width="0.0793%" height="15" fill="rgb(240,11,8)" fg:x="1132" fg:w="1"/><text x="90.0200%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.7700%" y="645" width="0.0793%" height="15" fill="rgb(218,222,21)" fg:x="1132" fg:w="1"/><text x="90.0200%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.8493%" y="725" width="0.0793%" height="15" fill="rgb(238,59,21)" fg:x="1133" fg:w="1"/><text x="90.0993%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.8493%" y="709" width="0.0793%" height="15" fill="rgb(252,128,29)" fg:x="1133" fg:w="1"/><text x="90.0993%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.9286%" y="725" width="0.0793%" height="15" fill="rgb(245,61,34)" fg:x="1134" fg:w="1"/><text x="90.1786%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9286%" y="709" width="0.0793%" height="15" fill="rgb(246,36,52)" fg:x="1134" fg:w="1"/><text x="90.1786%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9286%" y="693" width="0.0793%" height="15" fill="rgb(243,48,49)" fg:x="1134" fg:w="1"/><text x="90.1786%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.9286%" y="677" width="0.0793%" height="15" fill="rgb(252,114,15)" fg:x="1134" fg:w="1"/><text x="90.1786%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.9286%" y="661" width="0.0793%" height="15" fill="rgb(243,228,39)" fg:x="1134" fg:w="1"/><text x="90.1786%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.9286%" y="645" width="0.0793%" height="15" fill="rgb(205,143,2)" fg:x="1134" fg:w="1"/><text x="90.1786%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.9286%" y="629" width="0.0793%" height="15" fill="rgb(224,122,19)" fg:x="1134" fg:w="1"/><text x="90.1786%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.9286%" y="613" width="0.0793%" height="15" fill="rgb(250,66,51)" fg:x="1134" fg:w="1"/><text x="90.1786%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.9286%" y="597" width="0.0793%" height="15" fill="rgb(224,134,48)" fg:x="1134" fg:w="1"/><text x="90.1786%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.9286%" y="581" width="0.0793%" height="15" fill="rgb(219,137,43)" fg:x="1134" fg:w="1"/><text x="90.1786%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.9286%" y="565" width="0.0793%" height="15" fill="rgb(207,44,47)" fg:x="1134" fg:w="1"/><text x="90.1786%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.9286%" y="549" width="0.0793%" height="15" fill="rgb(245,216,11)" fg:x="1134" fg:w="1"/><text x="90.1786%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.9286%" y="533" width="0.0793%" height="15" fill="rgb(236,168,30)" fg:x="1134" fg:w="1"/><text x="90.1786%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.0079%" y="725" width="0.0793%" height="15" fill="rgb(249,110,10)" fg:x="1135" fg:w="1"/><text x="90.2579%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.0079%" y="709" width="0.0793%" height="15" fill="rgb(226,10,48)" fg:x="1135" fg:w="1"/><text x="90.2579%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.0079%" y="693" width="0.0793%" height="15" fill="rgb(243,14,47)" fg:x="1135" fg:w="1"/><text x="90.2579%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="90.0872%" y="725" width="0.0793%" height="15" fill="rgb(208,184,14)" fg:x="1136" fg:w="1"/><text x="90.3372%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="90.0872%" y="709" width="0.0793%" height="15" fill="rgb(236,198,54)" fg:x="1136" fg:w="1"/><text x="90.3372%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.0872%" y="693" width="0.0793%" height="15" fill="rgb(241,186,5)" fg:x="1136" fg:w="1"/><text x="90.3372%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.1665%" y="709" width="0.0793%" height="15" fill="rgb(237,191,37)" fg:x="1137" fg:w="1"/><text x="90.4165%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.2458%" y="693" width="0.0793%" height="15" fill="rgb(216,223,24)" fg:x="1138" fg:w="1"/><text x="90.4958%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.2458%" y="677" width="0.0793%" height="15" fill="rgb(210,29,29)" fg:x="1138" fg:w="1"/><text x="90.4958%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.2458%" y="661" width="0.0793%" height="15" fill="rgb(243,36,45)" fg:x="1138" fg:w="1"/><text x="90.4958%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.2458%" y="645" width="0.0793%" height="15" fill="rgb(217,109,6)" fg:x="1138" fg:w="1"/><text x="90.4958%" y="655.50"></text></g><g><title>&lt;serde_json::number::N as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.2458%" y="629" width="0.0793%" height="15" fill="rgb(240,106,11)" fg:x="1138" fg:w="1"/><text x="90.4958%" y="639.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="90.2458%" y="709" width="0.1586%" height="15" fill="rgb(230,187,12)" fg:x="1138" fg:w="2"/><text x="90.4958%" y="719.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="90.3251%" y="693" width="0.0793%" height="15" fill="rgb(242,88,45)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="703.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="90.3251%" y="677" width="0.0793%" height="15" fill="rgb(240,181,21)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="687.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="90.3251%" y="661" width="0.0793%" height="15" fill="rgb(252,126,44)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="671.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="90.3251%" y="645" width="0.0793%" height="15" fill="rgb(230,157,48)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.3251%" y="629" width="0.0793%" height="15" fill="rgb(224,15,2)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.3251%" y="613" width="0.0793%" height="15" fill="rgb(215,1,6)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.3251%" y="597" width="0.0793%" height="15" fill="rgb(210,225,13)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.3251%" y="581" width="0.0793%" height="15" fill="rgb(214,25,30)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.3251%" y="565" width="0.0793%" height="15" fill="rgb(254,43,34)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.3251%" y="549" width="0.0793%" height="15" fill="rgb(210,6,40)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.3251%" y="533" width="0.0793%" height="15" fill="rgb(251,76,23)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.3251%" y="517" width="0.0793%" height="15" fill="rgb(214,7,14)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.3251%" y="501" width="0.0793%" height="15" fill="rgb(227,100,33)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.3251%" y="485" width="0.0793%" height="15" fill="rgb(211,49,7)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.3251%" y="469" width="0.0793%" height="15" fill="rgb(228,223,1)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.3251%" y="453" width="0.0793%" height="15" fill="rgb(245,92,22)" fg:x="1139" fg:w="1"/><text x="90.5751%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (12 samples, 0.95%)</title><rect x="89.5321%" y="757" width="0.9516%" height="15" fill="rgb(232,221,10)" fg:x="1129" fg:w="12"/><text x="89.7821%" y="767.50"></text></g><g><title>treediff::diff::diff (8 samples, 0.63%)</title><rect x="89.8493%" y="741" width="0.6344%" height="15" fill="rgb(252,175,23)" fg:x="1133" fg:w="8"/><text x="90.0993%" y="751.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="90.1665%" y="725" width="0.3172%" height="15" fill="rgb(234,229,25)" fg:x="1137" fg:w="4"/><text x="90.4165%" y="735.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="90.4044%" y="709" width="0.0793%" height="15" fill="rgb(254,127,20)" fg:x="1140" fg:w="1"/><text x="90.6544%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4837%" y="725" width="0.0793%" height="15" fill="rgb(211,151,37)" fg:x="1141" fg:w="1"/><text x="90.7337%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.5630%" y="725" width="0.1586%" height="15" fill="rgb(226,185,3)" fg:x="1142" fg:w="2"/><text x="90.8130%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.6423%" y="709" width="0.0793%" height="15" fill="rgb(223,38,29)" fg:x="1143" fg:w="1"/><text x="90.8923%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.6423%" y="693" width="0.0793%" height="15" fill="rgb(206,134,22)" fg:x="1143" fg:w="1"/><text x="90.8923%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="90.7216%" y="725" width="0.0793%" height="15" fill="rgb(243,211,4)" fg:x="1144" fg:w="1"/><text x="90.9716%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.7216%" y="709" width="0.0793%" height="15" fill="rgb(244,214,18)" fg:x="1144" fg:w="1"/><text x="90.9716%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7216%" y="693" width="0.0793%" height="15" fill="rgb(208,165,52)" fg:x="1144" fg:w="1"/><text x="90.9716%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="90.8803%" y="677" width="0.3172%" height="15" fill="rgb(245,165,39)" fg:x="1146" fg:w="4"/><text x="91.1303%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="90.8803%" y="661" width="0.3172%" height="15" fill="rgb(250,46,43)" fg:x="1146" fg:w="4"/><text x="91.1303%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="90.8803%" y="645" width="0.3172%" height="15" fill="rgb(242,86,47)" fg:x="1146" fg:w="4"/><text x="91.1303%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="90.9596%" y="629" width="0.2379%" height="15" fill="rgb(232,173,5)" fg:x="1147" fg:w="3"/><text x="91.2096%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.1182%" y="613" width="0.0793%" height="15" fill="rgb(208,117,14)" fg:x="1149" fg:w="1"/><text x="91.3682%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1182%" y="597" width="0.0793%" height="15" fill="rgb(205,144,47)" fg:x="1149" fg:w="1"/><text x="91.3682%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="91.1975%" y="661" width="0.0793%" height="15" fill="rgb(228,62,6)" fg:x="1150" fg:w="1"/><text x="91.4475%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.3561%" y="645" width="0.1586%" height="15" fill="rgb(238,32,51)" fg:x="1152" fg:w="2"/><text x="91.6061%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.3561%" y="629" width="0.1586%" height="15" fill="rgb(251,211,21)" fg:x="1152" fg:w="2"/><text x="91.6061%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.4354%" y="613" width="0.0793%" height="15" fill="rgb(244,43,23)" fg:x="1153" fg:w="1"/><text x="91.6854%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="91.5147%" y="597" width="0.0793%" height="15" fill="rgb(219,48,27)" fg:x="1154" fg:w="1"/><text x="91.7647%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="91.5147%" y="581" width="0.0793%" height="15" fill="rgb(251,72,17)" fg:x="1154" fg:w="1"/><text x="91.7647%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.5147%" y="565" width="0.0793%" height="15" fill="rgb(214,69,49)" fg:x="1154" fg:w="1"/><text x="91.7647%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="91.5147%" y="629" width="0.1586%" height="15" fill="rgb(242,96,45)" fg:x="1154" fg:w="2"/><text x="91.7647%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="91.5147%" y="613" width="0.1586%" height="15" fill="rgb(233,20,50)" fg:x="1154" fg:w="2"/><text x="91.7647%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.5940%" y="597" width="0.0793%" height="15" fill="rgb(247,82,43)" fg:x="1155" fg:w="1"/><text x="91.8440%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.95%)</title><rect x="90.8803%" y="709" width="0.9516%" height="15" fill="rgb(210,97,3)" fg:x="1146" fg:w="12"/><text x="91.1303%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.95%)</title><rect x="90.8803%" y="693" width="0.9516%" height="15" fill="rgb(217,113,26)" fg:x="1146" fg:w="12"/><text x="91.1303%" y="703.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.63%)</title><rect x="91.1975%" y="677" width="0.6344%" height="15" fill="rgb(207,166,18)" fg:x="1150" fg:w="8"/><text x="91.4475%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="91.2768%" y="661" width="0.5551%" height="15" fill="rgb(205,124,54)" fg:x="1151" fg:w="7"/><text x="91.5268%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="91.5147%" y="645" width="0.3172%" height="15" fill="rgb(211,140,29)" fg:x="1154" fg:w="4"/><text x="91.7647%" y="655.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.6733%" y="629" width="0.1586%" height="15" fill="rgb(228,83,33)" fg:x="1156" fg:w="2"/><text x="91.9233%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (18 samples, 1.43%)</title><rect x="90.4837%" y="757" width="1.4274%" height="15" fill="rgb(225,217,40)" fg:x="1141" fg:w="18"/><text x="90.7337%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 1.43%)</title><rect x="90.4837%" y="741" width="1.4274%" height="15" fill="rgb(221,229,30)" fg:x="1141" fg:w="18"/><text x="90.7337%" y="751.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.11%)</title><rect x="90.8010%" y="725" width="1.1102%" height="15" fill="rgb(210,1,48)" fg:x="1145" fg:w="14"/><text x="91.0510%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.8319%" y="709" width="0.0793%" height="15" fill="rgb(205,53,50)" fg:x="1158" fg:w="1"/><text x="92.0819%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.9905%" y="581" width="0.0793%" height="15" fill="rgb(211,25,54)" fg:x="1160" fg:w="1"/><text x="92.2405%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9905%" y="565" width="0.0793%" height="15" fill="rgb(205,28,13)" fg:x="1160" fg:w="1"/><text x="92.2405%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="91.9905%" y="613" width="0.1586%" height="15" fill="rgb(214,37,48)" fg:x="1160" fg:w="2"/><text x="92.2405%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.9905%" y="597" width="0.1586%" height="15" fill="rgb(226,141,8)" fg:x="1160" fg:w="2"/><text x="92.2405%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.0698%" y="581" width="0.0793%" height="15" fill="rgb(206,200,0)" fg:x="1161" fg:w="1"/><text x="92.3198%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="91.9905%" y="629" width="0.2379%" height="15" fill="rgb(238,152,34)" fg:x="1160" fg:w="3"/><text x="92.2405%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.1491%" y="613" width="0.0793%" height="15" fill="rgb(216,72,48)" fg:x="1162" fg:w="1"/><text x="92.3991%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1491%" y="597" width="0.0793%" height="15" fill="rgb(246,48,2)" fg:x="1162" fg:w="1"/><text x="92.3991%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1491%" y="581" width="0.0793%" height="15" fill="rgb(249,59,28)" fg:x="1162" fg:w="1"/><text x="92.3991%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.1491%" y="565" width="0.0793%" height="15" fill="rgb(253,198,14)" fg:x="1162" fg:w="1"/><text x="92.3991%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="91.9905%" y="661" width="0.3172%" height="15" fill="rgb(225,162,4)" fg:x="1160" fg:w="4"/><text x="92.2405%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="91.9905%" y="645" width="0.3172%" height="15" fill="rgb(231,126,49)" fg:x="1160" fg:w="4"/><text x="92.2405%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.2284%" y="629" width="0.0793%" height="15" fill="rgb(207,41,3)" fg:x="1163" fg:w="1"/><text x="92.4784%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.2284%" y="613" width="0.0793%" height="15" fill="rgb(212,223,36)" fg:x="1163" fg:w="1"/><text x="92.4784%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.2284%" y="597" width="0.0793%" height="15" fill="rgb(214,96,38)" fg:x="1163" fg:w="1"/><text x="92.4784%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.3077%" y="661" width="0.0793%" height="15" fill="rgb(246,104,47)" fg:x="1164" fg:w="1"/><text x="92.5577%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3077%" y="645" width="0.0793%" height="15" fill="rgb(227,212,36)" fg:x="1164" fg:w="1"/><text x="92.5577%" y="655.50"></text></g><g><title>engine::session::Session::close (64 samples, 5.08%)</title><rect x="87.3910%" y="853" width="5.0753%" height="15" fill="rgb(250,163,41)" fg:x="1102" fg:w="64"/><text x="87.6410%" y="863.50">engine..</text></g><g><title>engine::session::state::State::close (60 samples, 4.76%)</title><rect x="87.7082%" y="837" width="4.7581%" height="15" fill="rgb(250,130,17)" fg:x="1106" fg:w="60"/><text x="87.9582%" y="847.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (57 samples, 4.52%)</title><rect x="87.9461%" y="821" width="4.5202%" height="15" fill="rgb(206,42,32)" fg:x="1109" fg:w="57"/><text x="88.1961%" y="831.50">engin..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (55 samples, 4.36%)</title><rect x="88.1047%" y="805" width="4.3616%" height="15" fill="rgb(224,95,7)" fg:x="1111" fg:w="55"/><text x="88.3547%" y="815.50">engin..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (55 samples, 4.36%)</title><rect x="88.1047%" y="789" width="4.3616%" height="15" fill="rgb(242,96,42)" fg:x="1111" fg:w="55"/><text x="88.3547%" y="799.50">engin..</text></g><g><title>kernel::model::any_entity_changes (37 samples, 2.93%)</title><rect x="89.5321%" y="773" width="2.9342%" height="15" fill="rgb(237,194,4)" fg:x="1129" fg:w="37"/><text x="89.7821%" y="783.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (7 samples, 0.56%)</title><rect x="91.9112%" y="757" width="0.5551%" height="15" fill="rgb(245,142,29)" fg:x="1159" fg:w="7"/><text x="92.1612%" y="767.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="91.9112%" y="741" width="0.5551%" height="15" fill="rgb(247,66,43)" fg:x="1159" fg:w="7"/><text x="92.1612%" y="751.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="91.9112%" y="725" width="0.5551%" height="15" fill="rgb(220,153,30)" fg:x="1159" fg:w="7"/><text x="92.1612%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="91.9112%" y="709" width="0.5551%" height="15" fill="rgb(207,130,54)" fg:x="1159" fg:w="7"/><text x="92.1612%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="91.9112%" y="693" width="0.5551%" height="15" fill="rgb(242,49,39)" fg:x="1159" fg:w="7"/><text x="92.1612%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="91.9905%" y="677" width="0.4758%" height="15" fill="rgb(206,227,44)" fg:x="1160" fg:w="6"/><text x="92.2405%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3870%" y="661" width="0.0793%" height="15" fill="rgb(236,74,29)" fg:x="1165" fg:w="1"/><text x="92.6370%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.3870%" y="645" width="0.0793%" height="15" fill="rgb(222,52,23)" fg:x="1165" fg:w="1"/><text x="92.6370%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="92.3870%" y="629" width="0.0793%" height="15" fill="rgb(245,65,4)" fg:x="1165" fg:w="1"/><text x="92.6370%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="92.6249%" y="661" width="0.0793%" height="15" fill="rgb(205,120,32)" fg:x="1168" fg:w="1"/><text x="92.8749%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="92.6249%" y="645" width="0.0793%" height="15" fill="rgb(226,156,21)" fg:x="1168" fg:w="1"/><text x="92.8749%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="92.6249%" y="629" width="0.0793%" height="15" fill="rgb(240,117,11)" fg:x="1168" fg:w="1"/><text x="92.8749%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (3 samples, 0.24%)</title><rect x="92.7042%" y="661" width="0.2379%" height="15" fill="rgb(232,214,36)" fg:x="1169" fg:w="3"/><text x="92.9542%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="92.7042%" y="645" width="0.2379%" height="15" fill="rgb(252,121,45)" fg:x="1169" fg:w="3"/><text x="92.9542%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.7042%" y="629" width="0.2379%" height="15" fill="rgb(250,206,1)" fg:x="1169" fg:w="3"/><text x="92.9542%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="92.7042%" y="613" width="0.2379%" height="15" fill="rgb(213,40,16)" fg:x="1169" fg:w="3"/><text x="92.9542%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.7042%" y="597" width="0.2379%" height="15" fill="rgb(222,106,3)" fg:x="1169" fg:w="3"/><text x="92.9542%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="92.7042%" y="581" width="0.2379%" height="15" fill="rgb(238,140,8)" fg:x="1169" fg:w="3"/><text x="92.9542%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.7042%" y="565" width="0.2379%" height="15" fill="rgb(217,119,30)" fg:x="1169" fg:w="3"/><text x="92.9542%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="92.7042%" y="549" width="0.2379%" height="15" fill="rgb(228,189,17)" fg:x="1169" fg:w="3"/><text x="92.9542%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="92.7835%" y="533" width="0.1586%" height="15" fill="rgb(243,94,42)" fg:x="1170" fg:w="2"/><text x="93.0335%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.7835%" y="517" width="0.1586%" height="15" fill="rgb(228,105,42)" fg:x="1170" fg:w="2"/><text x="93.0335%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.7835%" y="501" width="0.1586%" height="15" fill="rgb(233,19,53)" fg:x="1170" fg:w="2"/><text x="93.0335%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="92.7835%" y="485" width="0.1586%" height="15" fill="rgb(240,22,26)" fg:x="1170" fg:w="2"/><text x="93.0335%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.7835%" y="469" width="0.1586%" height="15" fill="rgb(238,97,34)" fg:x="1170" fg:w="2"/><text x="93.0335%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.7835%" y="453" width="0.1586%" height="15" fill="rgb(210,177,8)" fg:x="1170" fg:w="2"/><text x="93.0335%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="92.7835%" y="437" width="0.1586%" height="15" fill="rgb(217,168,6)" fg:x="1170" fg:w="2"/><text x="93.0335%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.7835%" y="421" width="0.1586%" height="15" fill="rgb(223,34,43)" fg:x="1170" fg:w="2"/><text x="93.0335%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.7835%" y="405" width="0.1586%" height="15" fill="rgb(252,123,35)" fg:x="1170" fg:w="2"/><text x="93.0335%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="92.8628%" y="389" width="0.0793%" height="15" fill="rgb(243,162,1)" fg:x="1171" fg:w="1"/><text x="93.1128%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8628%" y="373" width="0.0793%" height="15" fill="rgb(250,83,22)" fg:x="1171" fg:w="1"/><text x="93.1128%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.8628%" y="357" width="0.0793%" height="15" fill="rgb(247,184,7)" fg:x="1171" fg:w="1"/><text x="93.1128%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.8628%" y="341" width="0.0793%" height="15" fill="rgb(254,212,7)" fg:x="1171" fg:w="1"/><text x="93.1128%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.40%)</title><rect x="92.6249%" y="709" width="0.3965%" height="15" fill="rgb(249,198,8)" fg:x="1168" fg:w="5"/><text x="92.8749%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (5 samples, 0.40%)</title><rect x="92.6249%" y="693" width="0.3965%" height="15" fill="rgb(230,74,12)" fg:x="1168" fg:w="5"/><text x="92.8749%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (5 samples, 0.40%)</title><rect x="92.6249%" y="677" width="0.3965%" height="15" fill="rgb(253,174,9)" fg:x="1168" fg:w="5"/><text x="92.8749%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="92.9421%" y="661" width="0.0793%" height="15" fill="rgb(222,191,12)" fg:x="1172" fg:w="1"/><text x="93.1921%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.9421%" y="645" width="0.0793%" height="15" fill="rgb(234,28,43)" fg:x="1172" fg:w="1"/><text x="93.1921%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.9421%" y="629" width="0.0793%" height="15" fill="rgb(232,13,38)" fg:x="1172" fg:w="1"/><text x="93.1921%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.9421%" y="613" width="0.0793%" height="15" fill="rgb(239,101,25)" fg:x="1172" fg:w="1"/><text x="93.1921%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.9421%" y="597" width="0.0793%" height="15" fill="rgb(237,214,49)" fg:x="1172" fg:w="1"/><text x="93.1921%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.9421%" y="581" width="0.0793%" height="15" fill="rgb(212,188,4)" fg:x="1172" fg:w="1"/><text x="93.1921%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.9421%" y="565" width="0.0793%" height="15" fill="rgb(208,167,23)" fg:x="1172" fg:w="1"/><text x="93.1921%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.9421%" y="549" width="0.0793%" height="15" fill="rgb(209,179,40)" fg:x="1172" fg:w="1"/><text x="93.1921%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.9421%" y="533" width="0.0793%" height="15" fill="rgb(233,144,24)" fg:x="1172" fg:w="1"/><text x="93.1921%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.9421%" y="517" width="0.0793%" height="15" fill="rgb(250,4,25)" fg:x="1172" fg:w="1"/><text x="93.1921%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.0214%" y="677" width="0.0793%" height="15" fill="rgb(236,222,29)" fg:x="1173" fg:w="1"/><text x="93.2714%" y="687.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (7 samples, 0.56%)</title><rect x="92.6249%" y="757" width="0.5551%" height="15" fill="rgb(228,152,14)" fg:x="1168" fg:w="7"/><text x="92.8749%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="92.6249%" y="741" width="0.5551%" height="15" fill="rgb(240,11,37)" fg:x="1168" fg:w="7"/><text x="92.8749%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="92.6249%" y="725" width="0.5551%" height="15" fill="rgb(240,96,5)" fg:x="1168" fg:w="7"/><text x="92.8749%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.0214%" y="709" width="0.1586%" height="15" fill="rgb(242,145,4)" fg:x="1173" fg:w="2"/><text x="93.2714%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.0214%" y="693" width="0.1586%" height="15" fill="rgb(229,118,33)" fg:x="1173" fg:w="2"/><text x="93.2714%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.1007%" y="677" width="0.0793%" height="15" fill="rgb(213,82,17)" fg:x="1174" fg:w="1"/><text x="93.3507%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1007%" y="661" width="0.0793%" height="15" fill="rgb(236,71,53)" fg:x="1174" fg:w="1"/><text x="93.3507%" y="671.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (9 samples, 0.71%)</title><rect x="92.6249%" y="773" width="0.7137%" height="15" fill="rgb(227,158,19)" fg:x="1168" fg:w="9"/><text x="92.8749%" y="783.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="93.1800%" y="757" width="0.1586%" height="15" fill="rgb(220,52,31)" fg:x="1175" fg:w="2"/><text x="93.4300%" y="767.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="93.1800%" y="741" width="0.1586%" height="15" fill="rgb(232,137,27)" fg:x="1175" fg:w="2"/><text x="93.4300%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="93.1800%" y="725" width="0.1586%" height="15" fill="rgb(208,155,6)" fg:x="1175" fg:w="2"/><text x="93.4300%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="93.1800%" y="709" width="0.1586%" height="15" fill="rgb(253,212,46)" fg:x="1175" fg:w="2"/><text x="93.4300%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="93.1800%" y="693" width="0.1586%" height="15" fill="rgb(220,55,4)" fg:x="1175" fg:w="2"/><text x="93.4300%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="93.1800%" y="677" width="0.1586%" height="15" fill="rgb(226,100,5)" fg:x="1175" fg:w="2"/><text x="93.4300%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="93.1800%" y="661" width="0.1586%" height="15" fill="rgb(247,200,51)" fg:x="1175" fg:w="2"/><text x="93.4300%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="93.1800%" y="645" width="0.1586%" height="15" fill="rgb(220,203,54)" fg:x="1175" fg:w="2"/><text x="93.4300%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="93.1800%" y="629" width="0.1586%" height="15" fill="rgb(230,187,54)" fg:x="1175" fg:w="2"/><text x="93.4300%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="93.1800%" y="613" width="0.1586%" height="15" fill="rgb(225,132,12)" fg:x="1175" fg:w="2"/><text x="93.4300%" y="623.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="93.1800%" y="597" width="0.1586%" height="15" fill="rgb(205,210,33)" fg:x="1175" fg:w="2"/><text x="93.4300%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="93.1800%" y="581" width="0.1586%" height="15" fill="rgb(238,192,7)" fg:x="1175" fg:w="2"/><text x="93.4300%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="93.1800%" y="565" width="0.1586%" height="15" fill="rgb(245,82,29)" fg:x="1175" fg:w="2"/><text x="93.4300%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="93.2593%" y="549" width="0.0793%" height="15" fill="rgb(234,222,39)" fg:x="1176" fg:w="1"/><text x="93.5093%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.2593%" y="533" width="0.0793%" height="15" fill="rgb(231,222,18)" fg:x="1176" fg:w="1"/><text x="93.5093%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.2593%" y="517" width="0.0793%" height="15" fill="rgb(216,61,10)" fg:x="1176" fg:w="1"/><text x="93.5093%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.2593%" y="501" width="0.0793%" height="15" fill="rgb(241,116,34)" fg:x="1176" fg:w="1"/><text x="93.5093%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.2593%" y="485" width="0.0793%" height="15" fill="rgb(225,32,22)" fg:x="1176" fg:w="1"/><text x="93.5093%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.2593%" y="469" width="0.0793%" height="15" fill="rgb(236,35,19)" fg:x="1176" fg:w="1"/><text x="93.5093%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.2593%" y="453" width="0.0793%" height="15" fill="rgb(231,198,28)" fg:x="1176" fg:w="1"/><text x="93.5093%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.2593%" y="437" width="0.0793%" height="15" fill="rgb(211,215,31)" fg:x="1176" fg:w="1"/><text x="93.5093%" y="447.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (1 samples, 0.08%)</title><rect x="93.3386%" y="629" width="0.0793%" height="15" fill="rgb(243,118,23)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (1 samples, 0.08%)</title><rect x="93.3386%" y="613" width="0.0793%" height="15" fill="rgb(228,104,45)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="623.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="93.3386%" y="597" width="0.0793%" height="15" fill="rgb(216,198,17)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.3386%" y="581" width="0.0793%" height="15" fill="rgb(249,39,23)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.3386%" y="565" width="0.0793%" height="15" fill="rgb(250,186,54)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.3386%" y="549" width="0.0793%" height="15" fill="rgb(243,110,14)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.3386%" y="533" width="0.0793%" height="15" fill="rgb(236,32,12)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.3386%" y="517" width="0.0793%" height="15" fill="rgb(211,92,33)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3386%" y="501" width="0.0793%" height="15" fill="rgb(254,154,8)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3386%" y="485" width="0.0793%" height="15" fill="rgb(241,107,40)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.3386%" y="469" width="0.0793%" height="15" fill="rgb(208,24,40)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.3386%" y="453" width="0.0793%" height="15" fill="rgb(252,158,9)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.3386%" y="437" width="0.0793%" height="15" fill="rgb(241,9,28)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.3386%" y="421" width="0.0793%" height="15" fill="rgb(210,199,32)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.3386%" y="405" width="0.0793%" height="15" fill="rgb(228,147,42)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.3386%" y="389" width="0.0793%" height="15" fill="rgb(248,202,26)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.3386%" y="373" width="0.0793%" height="15" fill="rgb(225,67,4)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.3386%" y="357" width="0.0793%" height="15" fill="rgb(234,87,25)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.3386%" y="341" width="0.0793%" height="15" fill="rgb(229,58,0)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.3386%" y="325" width="0.0793%" height="15" fill="rgb(211,218,3)" fg:x="1177" fg:w="1"/><text x="93.5886%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.4179%" y="533" width="0.0793%" height="15" fill="rgb(216,109,54)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.4179%" y="517" width="0.0793%" height="15" fill="rgb(252,156,40)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.4179%" y="501" width="0.0793%" height="15" fill="rgb(208,1,12)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.4179%" y="485" width="0.0793%" height="15" fill="rgb(214,179,53)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.4179%" y="469" width="0.0793%" height="15" fill="rgb(205,173,17)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.4179%" y="453" width="0.0793%" height="15" fill="rgb(243,26,15)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.4179%" y="437" width="0.0793%" height="15" fill="rgb(231,139,31)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.4179%" y="421" width="0.0793%" height="15" fill="rgb(208,163,22)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.4179%" y="405" width="0.0793%" height="15" fill="rgb(245,84,24)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.4179%" y="389" width="0.0793%" height="15" fill="rgb(238,140,36)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.4179%" y="373" width="0.0793%" height="15" fill="rgb(218,211,39)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.4179%" y="357" width="0.0793%" height="15" fill="rgb(242,59,29)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.4179%" y="341" width="0.0793%" height="15" fill="rgb(245,91,22)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.4179%" y="325" width="0.0793%" height="15" fill="rgb(206,13,6)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.4179%" y="309" width="0.0793%" height="15" fill="rgb(212,147,32)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.4179%" y="293" width="0.0793%" height="15" fill="rgb(254,64,12)" fg:x="1178" fg:w="1"/><text x="93.6679%" y="303.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="93.5765%" y="437" width="0.0793%" height="15" fill="rgb(212,104,54)" fg:x="1180" fg:w="1"/><text x="93.8265%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5765%" y="421" width="0.0793%" height="15" fill="rgb(254,77,46)" fg:x="1180" fg:w="1"/><text x="93.8265%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5765%" y="405" width="0.0793%" height="15" fill="rgb(219,55,26)" fg:x="1180" fg:w="1"/><text x="93.8265%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.5765%" y="389" width="0.0793%" height="15" fill="rgb(230,133,21)" fg:x="1180" fg:w="1"/><text x="93.8265%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.5765%" y="373" width="0.0793%" height="15" fill="rgb(247,110,50)" fg:x="1180" fg:w="1"/><text x="93.8265%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.5765%" y="357" width="0.0793%" height="15" fill="rgb(229,31,50)" fg:x="1180" fg:w="1"/><text x="93.8265%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="93.5765%" y="341" width="0.0793%" height="15" fill="rgb(250,13,40)" fg:x="1180" fg:w="1"/><text x="93.8265%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.5765%" y="325" width="0.0793%" height="15" fill="rgb(212,163,14)" fg:x="1180" fg:w="1"/><text x="93.8265%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.6558%" y="341" width="0.0793%" height="15" fill="rgb(211,190,39)" fg:x="1181" fg:w="1"/><text x="93.9058%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="93.6558%" y="325" width="0.0793%" height="15" fill="rgb(245,39,52)" fg:x="1181" fg:w="1"/><text x="93.9058%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="93.6558%" y="309" width="0.0793%" height="15" fill="rgb(216,76,3)" fg:x="1181" fg:w="1"/><text x="93.9058%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="93.6558%" y="389" width="0.1586%" height="15" fill="rgb(218,225,6)" fg:x="1181" fg:w="2"/><text x="93.9058%" y="399.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="93.6558%" y="373" width="0.1586%" height="15" fill="rgb(215,137,11)" fg:x="1181" fg:w="2"/><text x="93.9058%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="93.6558%" y="357" width="0.1586%" height="15" fill="rgb(234,223,14)" fg:x="1181" fg:w="2"/><text x="93.9058%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.7351%" y="341" width="0.0793%" height="15" fill="rgb(236,24,21)" fg:x="1182" fg:w="1"/><text x="93.9851%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7351%" y="325" width="0.0793%" height="15" fill="rgb(208,183,10)" fg:x="1182" fg:w="1"/><text x="93.9851%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.7351%" y="309" width="0.0793%" height="15" fill="rgb(254,9,3)" fg:x="1182" fg:w="1"/><text x="93.9851%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7351%" y="293" width="0.0793%" height="15" fill="rgb(225,112,10)" fg:x="1182" fg:w="1"/><text x="93.9851%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.7351%" y="277" width="0.0793%" height="15" fill="rgb(232,7,4)" fg:x="1182" fg:w="1"/><text x="93.9851%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7351%" y="261" width="0.0793%" height="15" fill="rgb(241,50,8)" fg:x="1182" fg:w="1"/><text x="93.9851%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.7351%" y="245" width="0.0793%" height="15" fill="rgb(209,164,32)" fg:x="1182" fg:w="1"/><text x="93.9851%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7351%" y="229" width="0.0793%" height="15" fill="rgb(222,99,11)" fg:x="1182" fg:w="1"/><text x="93.9851%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.7351%" y="213" width="0.0793%" height="15" fill="rgb(208,139,8)" fg:x="1182" fg:w="1"/><text x="93.9851%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.7351%" y="197" width="0.0793%" height="15" fill="rgb(210,220,31)" fg:x="1182" fg:w="1"/><text x="93.9851%" y="207.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="93.6558%" y="421" width="0.2379%" height="15" fill="rgb(253,192,40)" fg:x="1181" fg:w="3"/><text x="93.9058%" y="431.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="93.6558%" y="405" width="0.2379%" height="15" fill="rgb(218,174,11)" fg:x="1181" fg:w="3"/><text x="93.9058%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="93.8144%" y="389" width="0.0793%" height="15" fill="rgb(238,12,0)" fg:x="1183" fg:w="1"/><text x="94.0644%" y="399.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="93.8144%" y="373" width="0.0793%" height="15" fill="rgb(223,87,52)" fg:x="1183" fg:w="1"/><text x="94.0644%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.8144%" y="357" width="0.0793%" height="15" fill="rgb(206,198,52)" fg:x="1183" fg:w="1"/><text x="94.0644%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.8144%" y="341" width="0.0793%" height="15" fill="rgb(239,183,3)" fg:x="1183" fg:w="1"/><text x="94.0644%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8144%" y="325" width="0.0793%" height="15" fill="rgb(216,111,9)" fg:x="1183" fg:w="1"/><text x="94.0644%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.8144%" y="309" width="0.0793%" height="15" fill="rgb(221,6,16)" fg:x="1183" fg:w="1"/><text x="94.0644%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8144%" y="293" width="0.0793%" height="15" fill="rgb(205,110,11)" fg:x="1183" fg:w="1"/><text x="94.0644%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.8144%" y="277" width="0.0793%" height="15" fill="rgb(210,162,38)" fg:x="1183" fg:w="1"/><text x="94.0644%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8144%" y="261" width="0.0793%" height="15" fill="rgb(235,180,51)" fg:x="1183" fg:w="1"/><text x="94.0644%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.8144%" y="245" width="0.0793%" height="15" fill="rgb(205,214,28)" fg:x="1183" fg:w="1"/><text x="94.0644%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8144%" y="229" width="0.0793%" height="15" fill="rgb(211,57,51)" fg:x="1183" fg:w="1"/><text x="94.0644%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.8144%" y="213" width="0.0793%" height="15" fill="rgb(207,55,41)" fg:x="1183" fg:w="1"/><text x="94.0644%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.8937%" y="325" width="0.0793%" height="15" fill="rgb(245,45,35)" fg:x="1184" fg:w="1"/><text x="94.1437%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.8937%" y="309" width="0.0793%" height="15" fill="rgb(233,168,39)" fg:x="1184" fg:w="1"/><text x="94.1437%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.0523%" y="261" width="0.0793%" height="15" fill="rgb(216,61,7)" fg:x="1186" fg:w="1"/><text x="94.3023%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.0523%" y="245" width="0.0793%" height="15" fill="rgb(237,109,44)" fg:x="1186" fg:w="1"/><text x="94.3023%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (4 samples, 0.32%)</title><rect x="93.8937%" y="421" width="0.3172%" height="15" fill="rgb(240,92,7)" fg:x="1184" fg:w="4"/><text x="94.1437%" y="431.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="93.8937%" y="405" width="0.3172%" height="15" fill="rgb(252,17,32)" fg:x="1184" fg:w="4"/><text x="94.1437%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="93.8937%" y="389" width="0.3172%" height="15" fill="rgb(219,85,5)" fg:x="1184" fg:w="4"/><text x="94.1437%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="93.8937%" y="373" width="0.3172%" height="15" fill="rgb(213,50,52)" fg:x="1184" fg:w="4"/><text x="94.1437%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="93.8937%" y="357" width="0.3172%" height="15" fill="rgb(239,79,50)" fg:x="1184" fg:w="4"/><text x="94.1437%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="93.8937%" y="341" width="0.3172%" height="15" fill="rgb(249,49,7)" fg:x="1184" fg:w="4"/><text x="94.1437%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="93.9730%" y="325" width="0.2379%" height="15" fill="rgb(222,126,43)" fg:x="1185" fg:w="3"/><text x="94.2230%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.9730%" y="309" width="0.2379%" height="15" fill="rgb(230,157,52)" fg:x="1185" fg:w="3"/><text x="94.2230%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="93.9730%" y="293" width="0.2379%" height="15" fill="rgb(210,66,35)" fg:x="1185" fg:w="3"/><text x="94.2230%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.0523%" y="277" width="0.1586%" height="15" fill="rgb(220,96,16)" fg:x="1186" fg:w="2"/><text x="94.3023%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.1316%" y="261" width="0.0793%" height="15" fill="rgb(242,43,33)" fg:x="1187" fg:w="1"/><text x="94.3816%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.1316%" y="245" width="0.0793%" height="15" fill="rgb(248,128,51)" fg:x="1187" fg:w="1"/><text x="94.3816%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.1316%" y="229" width="0.0793%" height="15" fill="rgb(234,19,35)" fg:x="1187" fg:w="1"/><text x="94.3816%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.1316%" y="213" width="0.0793%" height="15" fill="rgb(232,120,30)" fg:x="1187" fg:w="1"/><text x="94.3816%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1316%" y="197" width="0.0793%" height="15" fill="rgb(209,184,13)" fg:x="1187" fg:w="1"/><text x="94.3816%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1316%" y="181" width="0.0793%" height="15" fill="rgb(222,153,0)" fg:x="1187" fg:w="1"/><text x="94.3816%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.1316%" y="165" width="0.0793%" height="15" fill="rgb(251,96,47)" fg:x="1187" fg:w="1"/><text x="94.3816%" y="175.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (11 samples, 0.87%)</title><rect x="93.4179%" y="597" width="0.8723%" height="15" fill="rgb(253,113,5)" fg:x="1178" fg:w="11"/><text x="93.6679%" y="607.50"></text></g><g><title>plugins_core::tools::contained_by (11 samples, 0.87%)</title><rect x="93.4179%" y="581" width="0.8723%" height="15" fill="rgb(241,96,1)" fg:x="1178" fg:w="11"/><text x="93.6679%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (11 samples, 0.87%)</title><rect x="93.4179%" y="565" width="0.8723%" height="15" fill="rgb(216,225,1)" fg:x="1178" fg:w="11"/><text x="93.6679%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.87%)</title><rect x="93.4179%" y="549" width="0.8723%" height="15" fill="rgb(227,108,0)" fg:x="1178" fg:w="11"/><text x="93.6679%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (10 samples, 0.79%)</title><rect x="93.4972%" y="533" width="0.7930%" height="15" fill="rgb(221,29,48)" fg:x="1179" fg:w="10"/><text x="93.7472%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.71%)</title><rect x="93.5765%" y="517" width="0.7137%" height="15" fill="rgb(222,55,16)" fg:x="1180" fg:w="9"/><text x="93.8265%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.71%)</title><rect x="93.5765%" y="501" width="0.7137%" height="15" fill="rgb(242,210,22)" fg:x="1180" fg:w="9"/><text x="93.8265%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.71%)</title><rect x="93.5765%" y="485" width="0.7137%" height="15" fill="rgb(223,142,30)" fg:x="1180" fg:w="9"/><text x="93.8265%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (9 samples, 0.71%)</title><rect x="93.5765%" y="469" width="0.7137%" height="15" fill="rgb(248,92,51)" fg:x="1180" fg:w="9"/><text x="93.8265%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (9 samples, 0.71%)</title><rect x="93.5765%" y="453" width="0.7137%" height="15" fill="rgb(249,201,12)" fg:x="1180" fg:w="9"/><text x="93.8265%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.63%)</title><rect x="93.6558%" y="437" width="0.6344%" height="15" fill="rgb(230,213,39)" fg:x="1181" fg:w="8"/><text x="93.9058%" y="447.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="94.2109%" y="421" width="0.0793%" height="15" fill="rgb(232,46,34)" fg:x="1188" fg:w="1"/><text x="94.4609%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.2109%" y="405" width="0.0793%" height="15" fill="rgb(226,194,19)" fg:x="1188" fg:w="1"/><text x="94.4609%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.2109%" y="389" width="0.0793%" height="15" fill="rgb(254,144,47)" fg:x="1188" fg:w="1"/><text x="94.4609%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="94.2109%" y="373" width="0.0793%" height="15" fill="rgb(254,168,3)" fg:x="1188" fg:w="1"/><text x="94.4609%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.2109%" y="357" width="0.0793%" height="15" fill="rgb(249,104,32)" fg:x="1188" fg:w="1"/><text x="94.4609%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.2902%" y="485" width="0.0793%" height="15" fill="rgb(213,143,0)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.2902%" y="469" width="0.0793%" height="15" fill="rgb(211,72,7)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.2902%" y="453" width="0.0793%" height="15" fill="rgb(249,86,4)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.2902%" y="437" width="0.0793%" height="15" fill="rgb(252,17,31)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.2902%" y="421" width="0.0793%" height="15" fill="rgb(238,169,43)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.2902%" y="405" width="0.0793%" height="15" fill="rgb(220,206,52)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.2902%" y="389" width="0.0793%" height="15" fill="rgb(214,176,19)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.2902%" y="373" width="0.0793%" height="15" fill="rgb(206,11,39)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.2902%" y="357" width="0.0793%" height="15" fill="rgb(234,191,6)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.2902%" y="341" width="0.0793%" height="15" fill="rgb(244,46,51)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.2902%" y="325" width="0.0793%" height="15" fill="rgb(212,184,35)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.2902%" y="309" width="0.0793%" height="15" fill="rgb(217,184,38)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.2902%" y="293" width="0.0793%" height="15" fill="rgb(218,88,44)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.2902%" y="277" width="0.0793%" height="15" fill="rgb(241,121,2)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.2902%" y="261" width="0.0793%" height="15" fill="rgb(232,92,4)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.2902%" y="245" width="0.0793%" height="15" fill="rgb(233,16,51)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.2902%" y="229" width="0.0793%" height="15" fill="rgb(205,138,9)" fg:x="1189" fg:w="1"/><text x="94.5402%" y="239.50"></text></g><g><title>kernel::model::entry::Entry::name (2 samples, 0.16%)</title><rect x="94.2902%" y="549" width="0.1586%" height="15" fill="rgb(212,133,44)" fg:x="1189" fg:w="2"/><text x="94.5402%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="94.2902%" y="533" width="0.1586%" height="15" fill="rgb(247,170,39)" fg:x="1189" fg:w="2"/><text x="94.5402%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="94.2902%" y="517" width="0.1586%" height="15" fill="rgb(236,183,8)" fg:x="1189" fg:w="2"/><text x="94.5402%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="94.2902%" y="501" width="0.1586%" height="15" fill="rgb(245,194,21)" fg:x="1189" fg:w="2"/><text x="94.5402%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.3695%" y="485" width="0.0793%" height="15" fill="rgb(244,142,33)" fg:x="1190" fg:w="1"/><text x="94.6195%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="94.3695%" y="469" width="0.0793%" height="15" fill="rgb(237,159,51)" fg:x="1190" fg:w="1"/><text x="94.6195%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.3695%" y="453" width="0.0793%" height="15" fill="rgb(223,134,40)" fg:x="1190" fg:w="1"/><text x="94.6195%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.3695%" y="437" width="0.0793%" height="15" fill="rgb(217,227,45)" fg:x="1190" fg:w="1"/><text x="94.6195%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="94.3695%" y="421" width="0.0793%" height="15" fill="rgb(205,171,8)" fg:x="1190" fg:w="1"/><text x="94.6195%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (14 samples, 1.11%)</title><rect x="93.4179%" y="629" width="1.1102%" height="15" fill="rgb(231,83,23)" fg:x="1178" fg:w="14"/><text x="93.6679%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (14 samples, 1.11%)</title><rect x="93.4179%" y="613" width="1.1102%" height="15" fill="rgb(226,65,0)" fg:x="1178" fg:w="14"/><text x="93.6679%" y="623.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="94.2902%" y="597" width="0.2379%" height="15" fill="rgb(218,127,49)" fg:x="1189" fg:w="3"/><text x="94.5402%" y="607.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="94.2902%" y="581" width="0.2379%" height="15" fill="rgb(238,61,34)" fg:x="1189" fg:w="3"/><text x="94.5402%" y="591.50"></text></g><g><title>plugins_core::finding::matches_description (3 samples, 0.24%)</title><rect x="94.2902%" y="565" width="0.2379%" height="15" fill="rgb(228,144,3)" fg:x="1189" fg:w="3"/><text x="94.5402%" y="575.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="94.4489%" y="549" width="0.0793%" height="15" fill="rgb(212,155,32)" fg:x="1191" fg:w="1"/><text x="94.6989%" y="559.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="94.4489%" y="533" width="0.0793%" height="15" fill="rgb(219,3,13)" fg:x="1191" fg:w="1"/><text x="94.6989%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.5282%" y="453" width="0.0793%" height="15" fill="rgb(225,41,39)" fg:x="1192" fg:w="1"/><text x="94.7782%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="94.5282%" y="597" width="0.1586%" height="15" fill="rgb(236,169,50)" fg:x="1192" fg:w="2"/><text x="94.7782%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="94.5282%" y="581" width="0.1586%" height="15" fill="rgb(253,211,17)" fg:x="1192" fg:w="2"/><text x="94.7782%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="94.5282%" y="565" width="0.1586%" height="15" fill="rgb(219,67,7)" fg:x="1192" fg:w="2"/><text x="94.7782%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.5282%" y="549" width="0.1586%" height="15" fill="rgb(236,198,21)" fg:x="1192" fg:w="2"/><text x="94.7782%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.5282%" y="533" width="0.1586%" height="15" fill="rgb(250,83,24)" fg:x="1192" fg:w="2"/><text x="94.7782%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.5282%" y="517" width="0.1586%" height="15" fill="rgb(249,175,20)" fg:x="1192" fg:w="2"/><text x="94.7782%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.5282%" y="501" width="0.1586%" height="15" fill="rgb(239,72,36)" fg:x="1192" fg:w="2"/><text x="94.7782%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="94.5282%" y="485" width="0.1586%" height="15" fill="rgb(225,33,12)" fg:x="1192" fg:w="2"/><text x="94.7782%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.5282%" y="469" width="0.1586%" height="15" fill="rgb(213,209,10)" fg:x="1192" fg:w="2"/><text x="94.7782%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.6075%" y="453" width="0.0793%" height="15" fill="rgb(233,156,7)" fg:x="1193" fg:w="1"/><text x="94.8575%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.6075%" y="437" width="0.0793%" height="15" fill="rgb(242,71,8)" fg:x="1193" fg:w="1"/><text x="94.8575%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.6868%" y="549" width="0.0793%" height="15" fill="rgb(223,170,53)" fg:x="1194" fg:w="1"/><text x="94.9368%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.6868%" y="533" width="0.0793%" height="15" fill="rgb(252,23,27)" fg:x="1194" fg:w="1"/><text x="94.9368%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.6868%" y="517" width="0.0793%" height="15" fill="rgb(220,23,37)" fg:x="1194" fg:w="1"/><text x="94.9368%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6868%" y="501" width="0.0793%" height="15" fill="rgb(208,60,20)" fg:x="1194" fg:w="1"/><text x="94.9368%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (4 samples, 0.32%)</title><rect x="94.5282%" y="629" width="0.3172%" height="15" fill="rgb(246,105,41)" fg:x="1192" fg:w="4"/><text x="94.7782%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="94.5282%" y="613" width="0.3172%" height="15" fill="rgb(229,80,14)" fg:x="1192" fg:w="4"/><text x="94.7782%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="94.6868%" y="597" width="0.1586%" height="15" fill="rgb(223,226,8)" fg:x="1194" fg:w="2"/><text x="94.9368%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="94.6868%" y="581" width="0.1586%" height="15" fill="rgb(212,227,24)" fg:x="1194" fg:w="2"/><text x="94.9368%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="94.6868%" y="565" width="0.1586%" height="15" fill="rgb(234,38,14)" fg:x="1194" fg:w="2"/><text x="94.9368%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7661%" y="549" width="0.0793%" height="15" fill="rgb(222,86,39)" fg:x="1195" fg:w="1"/><text x="95.0161%" y="559.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="94.8454%" y="629" width="0.0793%" height="15" fill="rgb(208,189,2)" fg:x="1196" fg:w="1"/><text x="95.0954%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.9247%" y="613" width="0.0793%" height="15" fill="rgb(229,19,19)" fg:x="1197" fg:w="1"/><text x="95.1747%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.9247%" y="597" width="0.0793%" height="15" fill="rgb(250,169,51)" fg:x="1197" fg:w="1"/><text x="95.1747%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.9247%" y="581" width="0.0793%" height="15" fill="rgb(209,182,25)" fg:x="1197" fg:w="1"/><text x="95.1747%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.9247%" y="565" width="0.0793%" height="15" fill="rgb(240,113,23)" fg:x="1197" fg:w="1"/><text x="95.1747%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.9247%" y="549" width="0.0793%" height="15" fill="rgb(224,93,33)" fg:x="1197" fg:w="1"/><text x="95.1747%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.9247%" y="533" width="0.0793%" height="15" fill="rgb(234,37,17)" fg:x="1197" fg:w="1"/><text x="95.1747%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.9247%" y="517" width="0.0793%" height="15" fill="rgb(219,199,15)" fg:x="1197" fg:w="1"/><text x="95.1747%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.9247%" y="501" width="0.0793%" height="15" fill="rgb(249,190,12)" fg:x="1197" fg:w="1"/><text x="95.1747%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.9247%" y="485" width="0.0793%" height="15" fill="rgb(254,188,20)" fg:x="1197" fg:w="1"/><text x="95.1747%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.9247%" y="469" width="0.0793%" height="15" fill="rgb(227,85,36)" fg:x="1197" fg:w="1"/><text x="95.1747%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.9247%" y="453" width="0.0793%" height="15" fill="rgb(214,186,36)" fg:x="1197" fg:w="1"/><text x="95.1747%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.9247%" y="437" width="0.0793%" height="15" fill="rgb(207,67,47)" fg:x="1197" fg:w="1"/><text x="95.1747%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="95.0040%" y="581" width="0.0793%" height="15" fill="rgb(224,140,32)" fg:x="1198" fg:w="1"/><text x="95.2540%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.0040%" y="565" width="0.0793%" height="15" fill="rgb(225,114,12)" fg:x="1198" fg:w="1"/><text x="95.2540%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.0040%" y="549" width="0.0793%" height="15" fill="rgb(209,199,39)" fg:x="1198" fg:w="1"/><text x="95.2540%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0040%" y="533" width="0.0793%" height="15" fill="rgb(216,181,6)" fg:x="1198" fg:w="1"/><text x="95.2540%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0040%" y="517" width="0.0793%" height="15" fill="rgb(210,39,50)" fg:x="1198" fg:w="1"/><text x="95.2540%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0040%" y="501" width="0.0793%" height="15" fill="rgb(239,154,53)" fg:x="1198" fg:w="1"/><text x="95.2540%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0040%" y="485" width="0.0793%" height="15" fill="rgb(235,123,22)" fg:x="1198" fg:w="1"/><text x="95.2540%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.0040%" y="469" width="0.0793%" height="15" fill="rgb(243,194,26)" fg:x="1198" fg:w="1"/><text x="95.2540%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0040%" y="453" width="0.0793%" height="15" fill="rgb(245,23,33)" fg:x="1198" fg:w="1"/><text x="95.2540%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.0040%" y="437" width="0.0793%" height="15" fill="rgb(213,191,38)" fg:x="1198" fg:w="1"/><text x="95.2540%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.0040%" y="421" width="0.0793%" height="15" fill="rgb(226,199,18)" fg:x="1198" fg:w="1"/><text x="95.2540%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0833%" y="533" width="0.0793%" height="15" fill="rgb(210,106,30)" fg:x="1199" fg:w="1"/><text x="95.3333%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0833%" y="517" width="0.0793%" height="15" fill="rgb(219,177,27)" fg:x="1199" fg:w="1"/><text x="95.3333%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0833%" y="501" width="0.0793%" height="15" fill="rgb(215,14,22)" fg:x="1199" fg:w="1"/><text x="95.3333%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="95.0040%" y="613" width="0.2379%" height="15" fill="rgb(240,24,8)" fg:x="1198" fg:w="3"/><text x="95.2540%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="95.0040%" y="597" width="0.2379%" height="15" fill="rgb(220,138,5)" fg:x="1198" fg:w="3"/><text x="95.2540%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="95.0833%" y="581" width="0.1586%" height="15" fill="rgb(254,39,11)" fg:x="1199" fg:w="2"/><text x="95.3333%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="95.0833%" y="565" width="0.1586%" height="15" fill="rgb(223,92,18)" fg:x="1199" fg:w="2"/><text x="95.3333%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.0833%" y="549" width="0.1586%" height="15" fill="rgb(231,216,35)" fg:x="1199" fg:w="2"/><text x="95.3333%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.1626%" y="533" width="0.0793%" height="15" fill="rgb(210,197,31)" fg:x="1200" fg:w="1"/><text x="95.4126%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.1626%" y="517" width="0.0793%" height="15" fill="rgb(233,78,6)" fg:x="1200" fg:w="1"/><text x="95.4126%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.1626%" y="501" width="0.0793%" height="15" fill="rgb(219,192,52)" fg:x="1200" fg:w="1"/><text x="95.4126%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.1626%" y="485" width="0.0793%" height="15" fill="rgb(240,140,47)" fg:x="1200" fg:w="1"/><text x="95.4126%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.1626%" y="469" width="0.0793%" height="15" fill="rgb(214,22,41)" fg:x="1200" fg:w="1"/><text x="95.4126%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.1626%" y="453" width="0.0793%" height="15" fill="rgb(216,28,18)" fg:x="1200" fg:w="1"/><text x="95.4126%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1626%" y="437" width="0.0793%" height="15" fill="rgb(219,204,4)" fg:x="1200" fg:w="1"/><text x="95.4126%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="95.2419%" y="581" width="0.0793%" height="15" fill="rgb(216,98,27)" fg:x="1201" fg:w="1"/><text x="95.4919%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="95.2419%" y="565" width="0.0793%" height="15" fill="rgb(208,139,37)" fg:x="1201" fg:w="1"/><text x="95.4919%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.2419%" y="549" width="0.0793%" height="15" fill="rgb(241,193,50)" fg:x="1201" fg:w="1"/><text x="95.4919%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="95.2419%" y="533" width="0.0793%" height="15" fill="rgb(227,24,47)" fg:x="1201" fg:w="1"/><text x="95.4919%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="95.2419%" y="517" width="0.0793%" height="15" fill="rgb(212,91,31)" fg:x="1201" fg:w="1"/><text x="95.4919%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="95.2419%" y="501" width="0.0793%" height="15" fill="rgb(253,174,34)" fg:x="1201" fg:w="1"/><text x="95.4919%" y="511.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="95.2419%" y="485" width="0.0793%" height="15" fill="rgb(219,214,52)" fg:x="1201" fg:w="1"/><text x="95.4919%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="95.2419%" y="613" width="0.3172%" height="15" fill="rgb(222,221,3)" fg:x="1201" fg:w="4"/><text x="95.4919%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="95.2419%" y="597" width="0.3172%" height="15" fill="rgb(209,130,23)" fg:x="1201" fg:w="4"/><text x="95.4919%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="95.3212%" y="581" width="0.2379%" height="15" fill="rgb(232,162,43)" fg:x="1202" fg:w="3"/><text x="95.5712%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.3212%" y="565" width="0.2379%" height="15" fill="rgb(245,34,38)" fg:x="1202" fg:w="3"/><text x="95.5712%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="95.3212%" y="549" width="0.2379%" height="15" fill="rgb(226,70,5)" fg:x="1202" fg:w="3"/><text x="95.5712%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="95.3212%" y="533" width="0.2379%" height="15" fill="rgb(238,97,25)" fg:x="1202" fg:w="3"/><text x="95.5712%" y="543.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="95.3212%" y="517" width="0.2379%" height="15" fill="rgb(246,1,22)" fg:x="1202" fg:w="3"/><text x="95.5712%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.4005%" y="501" width="0.1586%" height="15" fill="rgb(248,180,27)" fg:x="1203" fg:w="2"/><text x="95.6505%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.4798%" y="485" width="0.0793%" height="15" fill="rgb(223,147,15)" fg:x="1204" fg:w="1"/><text x="95.7298%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5591%" y="565" width="0.0793%" height="15" fill="rgb(220,142,50)" fg:x="1205" fg:w="1"/><text x="95.8091%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5591%" y="549" width="0.0793%" height="15" fill="rgb(209,24,8)" fg:x="1205" fg:w="1"/><text x="95.8091%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.5591%" y="533" width="0.0793%" height="15" fill="rgb(245,95,15)" fg:x="1205" fg:w="1"/><text x="95.8091%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.5591%" y="517" width="0.0793%" height="15" fill="rgb(254,132,39)" fg:x="1205" fg:w="1"/><text x="95.8091%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.5591%" y="501" width="0.0793%" height="15" fill="rgb(230,135,4)" fg:x="1205" fg:w="1"/><text x="95.8091%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5591%" y="485" width="0.0793%" height="15" fill="rgb(233,65,45)" fg:x="1205" fg:w="1"/><text x="95.8091%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.5591%" y="469" width="0.0793%" height="15" fill="rgb(238,156,12)" fg:x="1205" fg:w="1"/><text x="95.8091%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.5591%" y="453" width="0.0793%" height="15" fill="rgb(230,14,54)" fg:x="1205" fg:w="1"/><text x="95.8091%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.5591%" y="437" width="0.0793%" height="15" fill="rgb(242,41,37)" fg:x="1205" fg:w="1"/><text x="95.8091%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.5591%" y="421" width="0.0793%" height="15" fill="rgb(231,37,53)" fg:x="1205" fg:w="1"/><text x="95.8091%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.5591%" y="405" width="0.0793%" height="15" fill="rgb(235,181,47)" fg:x="1205" fg:w="1"/><text x="95.8091%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5591%" y="389" width="0.0793%" height="15" fill="rgb(253,41,16)" fg:x="1205" fg:w="1"/><text x="95.8091%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.5591%" y="581" width="0.1586%" height="15" fill="rgb(245,44,19)" fg:x="1205" fg:w="2"/><text x="95.8091%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6384%" y="565" width="0.0793%" height="15" fill="rgb(245,22,46)" fg:x="1206" fg:w="1"/><text x="95.8884%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.6384%" y="549" width="0.0793%" height="15" fill="rgb(207,84,51)" fg:x="1206" fg:w="1"/><text x="95.8884%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6384%" y="533" width="0.0793%" height="15" fill="rgb(212,36,12)" fg:x="1206" fg:w="1"/><text x="95.8884%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6384%" y="517" width="0.0793%" height="15" fill="rgb(240,188,18)" fg:x="1206" fg:w="1"/><text x="95.8884%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.6384%" y="501" width="0.0793%" height="15" fill="rgb(245,89,47)" fg:x="1206" fg:w="1"/><text x="95.8884%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.6384%" y="485" width="0.0793%" height="15" fill="rgb(216,24,14)" fg:x="1206" fg:w="1"/><text x="95.8884%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.6384%" y="469" width="0.0793%" height="15" fill="rgb(217,71,21)" fg:x="1206" fg:w="1"/><text x="95.8884%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.6384%" y="453" width="0.0793%" height="15" fill="rgb(251,142,29)" fg:x="1206" fg:w="1"/><text x="95.8884%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.6384%" y="437" width="0.0793%" height="15" fill="rgb(210,29,22)" fg:x="1206" fg:w="1"/><text x="95.8884%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.6384%" y="421" width="0.0793%" height="15" fill="rgb(248,174,36)" fg:x="1206" fg:w="1"/><text x="95.8884%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.6384%" y="405" width="0.0793%" height="15" fill="rgb(224,111,34)" fg:x="1206" fg:w="1"/><text x="95.8884%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.6384%" y="389" width="0.0793%" height="15" fill="rgb(245,177,23)" fg:x="1206" fg:w="1"/><text x="95.8884%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.6384%" y="373" width="0.0793%" height="15" fill="rgb(217,114,53)" fg:x="1206" fg:w="1"/><text x="95.8884%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6384%" y="357" width="0.0793%" height="15" fill="rgb(223,157,10)" fg:x="1206" fg:w="1"/><text x="95.8884%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="95.7177%" y="581" width="0.0793%" height="15" fill="rgb(217,134,44)" fg:x="1207" fg:w="1"/><text x="95.9677%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.7177%" y="565" width="0.0793%" height="15" fill="rgb(222,195,7)" fg:x="1207" fg:w="1"/><text x="95.9677%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.7177%" y="549" width="0.0793%" height="15" fill="rgb(235,153,27)" fg:x="1207" fg:w="1"/><text x="95.9677%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="95.7177%" y="533" width="0.0793%" height="15" fill="rgb(247,105,14)" fg:x="1207" fg:w="1"/><text x="95.9677%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.7177%" y="517" width="0.0793%" height="15" fill="rgb(250,6,2)" fg:x="1207" fg:w="1"/><text x="95.9677%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="95.7970%" y="533" width="0.0793%" height="15" fill="rgb(250,41,38)" fg:x="1208" fg:w="1"/><text x="96.0470%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7970%" y="517" width="0.0793%" height="15" fill="rgb(234,127,49)" fg:x="1208" fg:w="1"/><text x="96.0470%" y="527.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (5 samples, 0.40%)</title><rect x="95.5591%" y="613" width="0.3965%" height="15" fill="rgb(242,79,16)" fg:x="1205" fg:w="5"/><text x="95.8091%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="95.5591%" y="597" width="0.3965%" height="15" fill="rgb(236,15,0)" fg:x="1205" fg:w="5"/><text x="95.8091%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="95.7970%" y="581" width="0.1586%" height="15" fill="rgb(217,113,36)" fg:x="1208" fg:w="2"/><text x="96.0470%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="95.7970%" y="565" width="0.1586%" height="15" fill="rgb(239,12,4)" fg:x="1208" fg:w="2"/><text x="96.0470%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="95.7970%" y="549" width="0.1586%" height="15" fill="rgb(236,142,50)" fg:x="1208" fg:w="2"/><text x="96.0470%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="95.8763%" y="533" width="0.0793%" height="15" fill="rgb(244,108,52)" fg:x="1209" fg:w="1"/><text x="96.1263%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="95.8763%" y="517" width="0.0793%" height="15" fill="rgb(223,79,42)" fg:x="1209" fg:w="1"/><text x="96.1263%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.8763%" y="501" width="0.0793%" height="15" fill="rgb(245,34,19)" fg:x="1209" fg:w="1"/><text x="96.1263%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="95.9556%" y="597" width="0.0793%" height="15" fill="rgb(222,137,30)" fg:x="1210" fg:w="1"/><text x="96.2056%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.9556%" y="581" width="0.0793%" height="15" fill="rgb(213,216,50)" fg:x="1210" fg:w="1"/><text x="96.2056%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.0349%" y="517" width="0.0793%" height="15" fill="rgb(206,117,33)" fg:x="1211" fg:w="1"/><text x="96.2849%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.0349%" y="501" width="0.0793%" height="15" fill="rgb(234,122,47)" fg:x="1211" fg:w="1"/><text x="96.2849%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.0349%" y="485" width="0.0793%" height="15" fill="rgb(226,61,39)" fg:x="1211" fg:w="1"/><text x="96.2849%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.0349%" y="469" width="0.0793%" height="15" fill="rgb(229,174,28)" fg:x="1211" fg:w="1"/><text x="96.2849%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.0349%" y="453" width="0.0793%" height="15" fill="rgb(246,207,11)" fg:x="1211" fg:w="1"/><text x="96.2849%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.0349%" y="437" width="0.0793%" height="15" fill="rgb(245,212,19)" fg:x="1211" fg:w="1"/><text x="96.2849%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.0349%" y="421" width="0.0793%" height="15" fill="rgb(240,107,51)" fg:x="1211" fg:w="1"/><text x="96.2849%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.0349%" y="405" width="0.0793%" height="15" fill="rgb(238,67,13)" fg:x="1211" fg:w="1"/><text x="96.2849%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.0349%" y="389" width="0.0793%" height="15" fill="rgb(250,8,29)" fg:x="1211" fg:w="1"/><text x="96.2849%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="96.0349%" y="373" width="0.0793%" height="15" fill="rgb(227,44,9)" fg:x="1211" fg:w="1"/><text x="96.2849%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="96.0349%" y="357" width="0.0793%" height="15" fill="rgb(247,128,2)" fg:x="1211" fg:w="1"/><text x="96.2849%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="96.0349%" y="565" width="0.1586%" height="15" fill="rgb(239,11,50)" fg:x="1211" fg:w="2"/><text x="96.2849%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="96.0349%" y="549" width="0.1586%" height="15" fill="rgb(241,11,28)" fg:x="1211" fg:w="2"/><text x="96.2849%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.0349%" y="533" width="0.1586%" height="15" fill="rgb(220,15,14)" fg:x="1211" fg:w="2"/><text x="96.2849%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1142%" y="517" width="0.0793%" height="15" fill="rgb(226,97,9)" fg:x="1212" fg:w="1"/><text x="96.3642%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1142%" y="501" width="0.0793%" height="15" fill="rgb(240,221,24)" fg:x="1212" fg:w="1"/><text x="96.3642%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1142%" y="485" width="0.0793%" height="15" fill="rgb(238,199,31)" fg:x="1212" fg:w="1"/><text x="96.3642%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1142%" y="469" width="0.0793%" height="15" fill="rgb(222,15,37)" fg:x="1212" fg:w="1"/><text x="96.3642%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.1142%" y="453" width="0.0793%" height="15" fill="rgb(225,66,12)" fg:x="1212" fg:w="1"/><text x="96.3642%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1142%" y="437" width="0.0793%" height="15" fill="rgb(224,142,38)" fg:x="1212" fg:w="1"/><text x="96.3642%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1142%" y="421" width="0.0793%" height="15" fill="rgb(208,206,25)" fg:x="1212" fg:w="1"/><text x="96.3642%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1142%" y="405" width="0.0793%" height="15" fill="rgb(205,153,20)" fg:x="1212" fg:w="1"/><text x="96.3642%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1142%" y="389" width="0.0793%" height="15" fill="rgb(206,199,32)" fg:x="1212" fg:w="1"/><text x="96.3642%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="95.9556%" y="613" width="0.3172%" height="15" fill="rgb(246,135,31)" fg:x="1210" fg:w="4"/><text x="96.2056%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="96.0349%" y="597" width="0.2379%" height="15" fill="rgb(208,211,40)" fg:x="1211" fg:w="3"/><text x="96.2849%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="96.0349%" y="581" width="0.2379%" height="15" fill="rgb(210,219,1)" fg:x="1211" fg:w="3"/><text x="96.2849%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="96.1935%" y="565" width="0.0793%" height="15" fill="rgb(232,190,35)" fg:x="1213" fg:w="1"/><text x="96.4435%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.1935%" y="549" width="0.0793%" height="15" fill="rgb(211,9,18)" fg:x="1213" fg:w="1"/><text x="96.4435%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.1935%" y="533" width="0.0793%" height="15" fill="rgb(212,15,38)" fg:x="1213" fg:w="1"/><text x="96.4435%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1935%" y="517" width="0.0793%" height="15" fill="rgb(238,74,28)" fg:x="1213" fg:w="1"/><text x="96.4435%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1935%" y="501" width="0.0793%" height="15" fill="rgb(230,98,34)" fg:x="1213" fg:w="1"/><text x="96.4435%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1935%" y="485" width="0.0793%" height="15" fill="rgb(212,130,40)" fg:x="1213" fg:w="1"/><text x="96.4435%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1935%" y="469" width="0.0793%" height="15" fill="rgb(234,200,15)" fg:x="1213" fg:w="1"/><text x="96.4435%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.1935%" y="453" width="0.0793%" height="15" fill="rgb(216,227,29)" fg:x="1213" fg:w="1"/><text x="96.4435%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1935%" y="437" width="0.0793%" height="15" fill="rgb(226,47,50)" fg:x="1213" fg:w="1"/><text x="96.4435%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1935%" y="421" width="0.0793%" height="15" fill="rgb(232,146,36)" fg:x="1213" fg:w="1"/><text x="96.4435%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1935%" y="405" width="0.0793%" height="15" fill="rgb(234,162,39)" fg:x="1213" fg:w="1"/><text x="96.4435%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.1935%" y="389" width="0.0793%" height="15" fill="rgb(253,148,35)" fg:x="1213" fg:w="1"/><text x="96.4435%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1935%" y="373" width="0.0793%" height="15" fill="rgb(253,200,8)" fg:x="1213" fg:w="1"/><text x="96.4435%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="96.2728%" y="613" width="0.1586%" height="15" fill="rgb(220,107,20)" fg:x="1214" fg:w="2"/><text x="96.5228%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="96.2728%" y="597" width="0.1586%" height="15" fill="rgb(205,200,12)" fg:x="1214" fg:w="2"/><text x="96.5228%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.2728%" y="581" width="0.1586%" height="15" fill="rgb(219,123,42)" fg:x="1214" fg:w="2"/><text x="96.5228%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="96.3521%" y="565" width="0.0793%" height="15" fill="rgb(236,136,3)" fg:x="1215" fg:w="1"/><text x="96.6021%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (40 samples, 3.17%)</title><rect x="93.3386%" y="645" width="3.1721%" height="15" fill="rgb(213,112,27)" fg:x="1177" fg:w="40"/><text x="93.5886%" y="655.50">&lt;pl..</text></g><g><title>plugins_core::location::change_location (20 samples, 1.59%)</title><rect x="94.9247%" y="629" width="1.5860%" height="15" fill="rgb(229,181,47)" fg:x="1197" fg:w="20"/><text x="95.1747%" y="639.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="96.4314%" y="613" width="0.0793%" height="15" fill="rgb(243,123,15)" fg:x="1216" fg:w="1"/><text x="96.6814%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="96.4314%" y="597" width="0.0793%" height="15" fill="rgb(206,135,33)" fg:x="1216" fg:w="1"/><text x="96.6814%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.4314%" y="581" width="0.0793%" height="15" fill="rgb(232,190,44)" fg:x="1216" fg:w="1"/><text x="96.6814%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.5107%" y="565" width="0.0793%" height="15" fill="rgb(237,122,12)" fg:x="1217" fg:w="1"/><text x="96.7607%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.5107%" y="549" width="0.0793%" height="15" fill="rgb(245,157,35)" fg:x="1217" fg:w="1"/><text x="96.7607%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.5107%" y="533" width="0.0793%" height="15" fill="rgb(205,164,34)" fg:x="1217" fg:w="1"/><text x="96.7607%" y="543.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (2 samples, 0.16%)</title><rect x="96.5107%" y="629" width="0.1586%" height="15" fill="rgb(237,82,1)" fg:x="1217" fg:w="2"/><text x="96.7607%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="96.5107%" y="613" width="0.1586%" height="15" fill="rgb(220,167,39)" fg:x="1217" fg:w="2"/><text x="96.7607%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="96.5107%" y="597" width="0.1586%" height="15" fill="rgb(208,133,37)" fg:x="1217" fg:w="2"/><text x="96.7607%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.5107%" y="581" width="0.1586%" height="15" fill="rgb(243,161,51)" fg:x="1217" fg:w="2"/><text x="96.7607%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.5900%" y="565" width="0.0793%" height="15" fill="rgb(232,127,41)" fg:x="1218" fg:w="1"/><text x="96.8400%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.5900%" y="549" width="0.0793%" height="15" fill="rgb(237,20,11)" fg:x="1218" fg:w="1"/><text x="96.8400%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.5900%" y="533" width="0.0793%" height="15" fill="rgb(233,186,24)" fg:x="1218" fg:w="1"/><text x="96.8400%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.5900%" y="517" width="0.0793%" height="15" fill="rgb(210,39,6)" fg:x="1218" fg:w="1"/><text x="96.8400%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.5900%" y="501" width="0.0793%" height="15" fill="rgb(216,11,48)" fg:x="1218" fg:w="1"/><text x="96.8400%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.5900%" y="485" width="0.0793%" height="15" fill="rgb(222,13,18)" fg:x="1218" fg:w="1"/><text x="96.8400%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.5900%" y="469" width="0.0793%" height="15" fill="rgb(238,150,15)" fg:x="1218" fg:w="1"/><text x="96.8400%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.5900%" y="453" width="0.0793%" height="15" fill="rgb(235,57,5)" fg:x="1218" fg:w="1"/><text x="96.8400%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.7486%" y="581" width="0.1586%" height="15" fill="rgb(214,196,13)" fg:x="1220" fg:w="2"/><text x="96.9986%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.7486%" y="565" width="0.1586%" height="15" fill="rgb(217,219,39)" fg:x="1220" fg:w="2"/><text x="96.9986%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.7486%" y="549" width="0.1586%" height="15" fill="rgb(237,225,39)" fg:x="1220" fg:w="2"/><text x="96.9986%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.7486%" y="533" width="0.1586%" height="15" fill="rgb(221,88,26)" fg:x="1220" fg:w="2"/><text x="96.9986%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="96.7486%" y="517" width="0.1586%" height="15" fill="rgb(205,45,48)" fg:x="1220" fg:w="2"/><text x="96.9986%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="96.7486%" y="501" width="0.1586%" height="15" fill="rgb(234,216,37)" fg:x="1220" fg:w="2"/><text x="96.9986%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="96.7486%" y="485" width="0.1586%" height="15" fill="rgb(243,210,39)" fg:x="1220" fg:w="2"/><text x="96.9986%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="96.7486%" y="469" width="0.1586%" height="15" fill="rgb(232,86,47)" fg:x="1220" fg:w="2"/><text x="96.9986%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="96.7486%" y="453" width="0.1586%" height="15" fill="rgb(234,222,31)" fg:x="1220" fg:w="2"/><text x="96.9986%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="96.7486%" y="437" width="0.1586%" height="15" fill="rgb(211,202,13)" fg:x="1220" fg:w="2"/><text x="96.9986%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="96.7486%" y="421" width="0.1586%" height="15" fill="rgb(237,138,3)" fg:x="1220" fg:w="2"/><text x="96.9986%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="96.7486%" y="405" width="0.1586%" height="15" fill="rgb(225,74,1)" fg:x="1220" fg:w="2"/><text x="96.9986%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="96.7486%" y="389" width="0.1586%" height="15" fill="rgb(252,76,17)" fg:x="1220" fg:w="2"/><text x="96.9986%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="96.7486%" y="373" width="0.1586%" height="15" fill="rgb(217,109,21)" fg:x="1220" fg:w="2"/><text x="96.9986%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="96.9072%" y="581" width="0.0793%" height="15" fill="rgb(235,7,3)" fg:x="1222" fg:w="1"/><text x="97.1572%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="96.9072%" y="565" width="0.0793%" height="15" fill="rgb(238,16,13)" fg:x="1222" fg:w="1"/><text x="97.1572%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="96.9072%" y="549" width="0.0793%" height="15" fill="rgb(242,32,47)" fg:x="1222" fg:w="1"/><text x="97.1572%" y="559.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9865%" y="533" width="0.0793%" height="15" fill="rgb(241,38,43)" fg:x="1223" fg:w="1"/><text x="97.2365%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.9865%" y="517" width="0.0793%" height="15" fill="rgb(213,124,26)" fg:x="1223" fg:w="1"/><text x="97.2365%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9865%" y="501" width="0.0793%" height="15" fill="rgb(208,183,39)" fg:x="1223" fg:w="1"/><text x="97.2365%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.9865%" y="485" width="0.0793%" height="15" fill="rgb(222,116,36)" fg:x="1223" fg:w="1"/><text x="97.2365%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.9865%" y="469" width="0.0793%" height="15" fill="rgb(214,36,24)" fg:x="1223" fg:w="1"/><text x="97.2365%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.9865%" y="453" width="0.0793%" height="15" fill="rgb(254,64,37)" fg:x="1223" fg:w="1"/><text x="97.2365%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.9865%" y="437" width="0.0793%" height="15" fill="rgb(216,166,14)" fg:x="1223" fg:w="1"/><text x="97.2365%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.9865%" y="421" width="0.0793%" height="15" fill="rgb(242,144,17)" fg:x="1223" fg:w="1"/><text x="97.2365%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.9865%" y="405" width="0.0793%" height="15" fill="rgb(233,229,42)" fg:x="1223" fg:w="1"/><text x="97.2365%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.9865%" y="389" width="0.0793%" height="15" fill="rgb(221,204,47)" fg:x="1223" fg:w="1"/><text x="97.2365%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.9865%" y="373" width="0.0793%" height="15" fill="rgb(230,26,44)" fg:x="1223" fg:w="1"/><text x="97.2365%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.9865%" y="357" width="0.0793%" height="15" fill="rgb(242,209,3)" fg:x="1223" fg:w="1"/><text x="97.2365%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.9865%" y="341" width="0.0793%" height="15" fill="rgb(229,32,19)" fg:x="1223" fg:w="1"/><text x="97.2365%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.9865%" y="325" width="0.0793%" height="15" fill="rgb(211,49,50)" fg:x="1223" fg:w="1"/><text x="97.2365%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="97.0658%" y="533" width="0.0793%" height="15" fill="rgb(208,171,21)" fg:x="1224" fg:w="1"/><text x="97.3158%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.0658%" y="517" width="0.0793%" height="15" fill="rgb(240,86,9)" fg:x="1224" fg:w="1"/><text x="97.3158%" y="527.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (7 samples, 0.56%)</title><rect x="96.7486%" y="597" width="0.5551%" height="15" fill="rgb(207,169,47)" fg:x="1220" fg:w="7"/><text x="96.9986%" y="607.50"></text></g><g><title>plugins_core::tools::contained_by (4 samples, 0.32%)</title><rect x="96.9865%" y="581" width="0.3172%" height="15" fill="rgb(212,103,33)" fg:x="1223" fg:w="4"/><text x="97.2365%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="96.9865%" y="565" width="0.3172%" height="15" fill="rgb(209,86,21)" fg:x="1223" fg:w="4"/><text x="97.2365%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="96.9865%" y="549" width="0.3172%" height="15" fill="rgb(221,77,49)" fg:x="1223" fg:w="4"/><text x="97.2365%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.1451%" y="533" width="0.1586%" height="15" fill="rgb(244,188,21)" fg:x="1225" fg:w="2"/><text x="97.3951%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.1451%" y="517" width="0.1586%" height="15" fill="rgb(228,11,38)" fg:x="1225" fg:w="2"/><text x="97.3951%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="97.1451%" y="501" width="0.1586%" height="15" fill="rgb(222,158,25)" fg:x="1225" fg:w="2"/><text x="97.3951%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="97.1451%" y="485" width="0.1586%" height="15" fill="rgb(232,223,3)" fg:x="1225" fg:w="2"/><text x="97.3951%" y="495.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="97.1451%" y="469" width="0.1586%" height="15" fill="rgb(218,55,0)" fg:x="1225" fg:w="2"/><text x="97.3951%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.1451%" y="453" width="0.1586%" height="15" fill="rgb(223,130,7)" fg:x="1225" fg:w="2"/><text x="97.3951%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.1451%" y="437" width="0.1586%" height="15" fill="rgb(246,183,32)" fg:x="1225" fg:w="2"/><text x="97.3951%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (9 samples, 0.71%)</title><rect x="96.6693%" y="629" width="0.7137%" height="15" fill="rgb(233,194,27)" fg:x="1219" fg:w="9"/><text x="96.9193%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (9 samples, 0.71%)</title><rect x="96.6693%" y="613" width="0.7137%" height="15" fill="rgb(244,187,35)" fg:x="1219" fg:w="9"/><text x="96.9193%" y="623.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (1 samples, 0.08%)</title><rect x="97.3037%" y="597" width="0.0793%" height="15" fill="rgb(238,33,29)" fg:x="1227" fg:w="1"/><text x="97.5537%" y="607.50"></text></g><g><title>plugins_core::finding::matches_description (1 samples, 0.08%)</title><rect x="97.3037%" y="581" width="0.0793%" height="15" fill="rgb(235,216,15)" fg:x="1227" fg:w="1"/><text x="97.5537%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="97.3037%" y="565" width="0.0793%" height="15" fill="rgb(211,167,33)" fg:x="1227" fg:w="1"/><text x="97.5537%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.3037%" y="549" width="0.0793%" height="15" fill="rgb(235,74,3)" fg:x="1227" fg:w="1"/><text x="97.5537%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.3037%" y="533" width="0.0793%" height="15" fill="rgb(241,103,0)" fg:x="1227" fg:w="1"/><text x="97.5537%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.3037%" y="517" width="0.0793%" height="15" fill="rgb(223,138,54)" fg:x="1227" fg:w="1"/><text x="97.5537%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.3037%" y="501" width="0.0793%" height="15" fill="rgb(228,24,36)" fg:x="1227" fg:w="1"/><text x="97.5537%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.3037%" y="485" width="0.0793%" height="15" fill="rgb(215,14,8)" fg:x="1227" fg:w="1"/><text x="97.5537%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.3037%" y="469" width="0.0793%" height="15" fill="rgb(231,9,2)" fg:x="1227" fg:w="1"/><text x="97.5537%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.3830%" y="549" width="0.0793%" height="15" fill="rgb(215,150,51)" fg:x="1228" fg:w="1"/><text x="97.6330%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.3830%" y="533" width="0.0793%" height="15" fill="rgb(254,124,6)" fg:x="1228" fg:w="1"/><text x="97.6330%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.3830%" y="517" width="0.0793%" height="15" fill="rgb(216,111,25)" fg:x="1228" fg:w="1"/><text x="97.6330%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.3830%" y="501" width="0.0793%" height="15" fill="rgb(237,87,46)" fg:x="1228" fg:w="1"/><text x="97.6330%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.3830%" y="485" width="0.0793%" height="15" fill="rgb(216,183,42)" fg:x="1228" fg:w="1"/><text x="97.6330%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.3830%" y="469" width="0.0793%" height="15" fill="rgb(214,175,46)" fg:x="1228" fg:w="1"/><text x="97.6330%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.3830%" y="597" width="0.1586%" height="15" fill="rgb(247,223,23)" fg:x="1228" fg:w="2"/><text x="97.6330%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="97.3830%" y="581" width="0.1586%" height="15" fill="rgb(240,132,12)" fg:x="1228" fg:w="2"/><text x="97.6330%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.3830%" y="565" width="0.1586%" height="15" fill="rgb(245,123,48)" fg:x="1228" fg:w="2"/><text x="97.6330%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4623%" y="549" width="0.0793%" height="15" fill="rgb(245,156,12)" fg:x="1229" fg:w="1"/><text x="97.7123%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4623%" y="533" width="0.0793%" height="15" fill="rgb(212,48,35)" fg:x="1229" fg:w="1"/><text x="97.7123%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.4623%" y="517" width="0.0793%" height="15" fill="rgb(213,21,25)" fg:x="1229" fg:w="1"/><text x="97.7123%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4623%" y="501" width="0.0793%" height="15" fill="rgb(215,17,16)" fg:x="1229" fg:w="1"/><text x="97.7123%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.4623%" y="485" width="0.0793%" height="15" fill="rgb(235,160,36)" fg:x="1229" fg:w="1"/><text x="97.7123%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4623%" y="469" width="0.0793%" height="15" fill="rgb(248,141,20)" fg:x="1229" fg:w="1"/><text x="97.7123%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.4623%" y="453" width="0.0793%" height="15" fill="rgb(253,123,32)" fg:x="1229" fg:w="1"/><text x="97.7123%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.4623%" y="437" width="0.0793%" height="15" fill="rgb(214,72,40)" fg:x="1229" fg:w="1"/><text x="97.7123%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5416%" y="517" width="0.0793%" height="15" fill="rgb(234,122,41)" fg:x="1230" fg:w="1"/><text x="97.7916%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.5416%" y="501" width="0.0793%" height="15" fill="rgb(236,55,21)" fg:x="1230" fg:w="1"/><text x="97.7916%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (4 samples, 0.32%)</title><rect x="97.3830%" y="629" width="0.3172%" height="15" fill="rgb(222,162,54)" fg:x="1228" fg:w="4"/><text x="97.6330%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="97.3830%" y="613" width="0.3172%" height="15" fill="rgb(219,74,8)" fg:x="1228" fg:w="4"/><text x="97.6330%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="97.5416%" y="597" width="0.1586%" height="15" fill="rgb(222,106,42)" fg:x="1230" fg:w="2"/><text x="97.7916%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="97.5416%" y="581" width="0.1586%" height="15" fill="rgb(223,40,43)" fg:x="1230" fg:w="2"/><text x="97.7916%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.5416%" y="565" width="0.1586%" height="15" fill="rgb(229,216,28)" fg:x="1230" fg:w="2"/><text x="97.7916%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.5416%" y="549" width="0.1586%" height="15" fill="rgb(222,17,5)" fg:x="1230" fg:w="2"/><text x="97.7916%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.5416%" y="533" width="0.1586%" height="15" fill="rgb(212,51,2)" fg:x="1230" fg:w="2"/><text x="97.7916%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6209%" y="517" width="0.0793%" height="15" fill="rgb(243,213,35)" fg:x="1231" fg:w="1"/><text x="97.8709%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6209%" y="501" width="0.0793%" height="15" fill="rgb(218,68,26)" fg:x="1231" fg:w="1"/><text x="97.8709%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.6209%" y="485" width="0.0793%" height="15" fill="rgb(214,135,33)" fg:x="1231" fg:w="1"/><text x="97.8709%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.6209%" y="469" width="0.0793%" height="15" fill="rgb(248,7,20)" fg:x="1231" fg:w="1"/><text x="97.8709%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.6209%" y="453" width="0.0793%" height="15" fill="rgb(209,147,4)" fg:x="1231" fg:w="1"/><text x="97.8709%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.6209%" y="437" width="0.0793%" height="15" fill="rgb(251,48,10)" fg:x="1231" fg:w="1"/><text x="97.8709%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.6209%" y="421" width="0.0793%" height="15" fill="rgb(226,62,22)" fg:x="1231" fg:w="1"/><text x="97.8709%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.6209%" y="405" width="0.0793%" height="15" fill="rgb(218,5,25)" fg:x="1231" fg:w="1"/><text x="97.8709%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.6209%" y="389" width="0.0793%" height="15" fill="rgb(240,229,8)" fg:x="1231" fg:w="1"/><text x="97.8709%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.6209%" y="373" width="0.0793%" height="15" fill="rgb(219,123,53)" fg:x="1231" fg:w="1"/><text x="97.8709%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.6209%" y="357" width="0.0793%" height="15" fill="rgb(239,77,49)" fg:x="1231" fg:w="1"/><text x="97.8709%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6209%" y="341" width="0.0793%" height="15" fill="rgb(247,22,15)" fg:x="1231" fg:w="1"/><text x="97.8709%" y="351.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="97.7002%" y="629" width="0.0793%" height="15" fill="rgb(210,55,17)" fg:x="1232" fg:w="1"/><text x="97.9502%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="97.7002%" y="613" width="0.0793%" height="15" fill="rgb(228,130,51)" fg:x="1232" fg:w="1"/><text x="97.9502%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="97.7002%" y="597" width="0.0793%" height="15" fill="rgb(206,81,33)" fg:x="1232" fg:w="1"/><text x="97.9502%" y="607.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="97.7002%" y="581" width="0.0793%" height="15" fill="rgb(241,104,30)" fg:x="1232" fg:w="1"/><text x="97.9502%" y="591.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="97.7002%" y="565" width="0.0793%" height="15" fill="rgb(240,88,12)" fg:x="1232" fg:w="1"/><text x="97.9502%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.7795%" y="533" width="0.0793%" height="15" fill="rgb(249,116,19)" fg:x="1233" fg:w="1"/><text x="98.0295%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.7795%" y="517" width="0.0793%" height="15" fill="rgb(250,218,1)" fg:x="1233" fg:w="1"/><text x="98.0295%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.7795%" y="581" width="0.1586%" height="15" fill="rgb(233,220,16)" fg:x="1233" fg:w="2"/><text x="98.0295%" y="591.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="97.7795%" y="565" width="0.1586%" height="15" fill="rgb(248,195,9)" fg:x="1233" fg:w="2"/><text x="98.0295%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.7795%" y="549" width="0.1586%" height="15" fill="rgb(230,58,11)" fg:x="1233" fg:w="2"/><text x="98.0295%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8588%" y="533" width="0.0793%" height="15" fill="rgb(217,125,51)" fg:x="1234" fg:w="1"/><text x="98.1088%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8588%" y="517" width="0.0793%" height="15" fill="rgb(252,119,13)" fg:x="1234" fg:w="1"/><text x="98.1088%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8588%" y="501" width="0.0793%" height="15" fill="rgb(245,23,2)" fg:x="1234" fg:w="1"/><text x="98.1088%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8588%" y="485" width="0.0793%" height="15" fill="rgb(216,98,41)" fg:x="1234" fg:w="1"/><text x="98.1088%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.8588%" y="469" width="0.0793%" height="15" fill="rgb(228,181,52)" fg:x="1234" fg:w="1"/><text x="98.1088%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8588%" y="453" width="0.0793%" height="15" fill="rgb(238,203,39)" fg:x="1234" fg:w="1"/><text x="98.1088%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8588%" y="437" width="0.0793%" height="15" fill="rgb(214,56,7)" fg:x="1234" fg:w="1"/><text x="98.1088%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="97.7795%" y="613" width="0.2379%" height="15" fill="rgb(229,167,38)" fg:x="1233" fg:w="3"/><text x="98.0295%" y="623.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="97.7795%" y="597" width="0.2379%" height="15" fill="rgb(242,135,4)" fg:x="1233" fg:w="3"/><text x="98.0295%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.9381%" y="581" width="0.0793%" height="15" fill="rgb(211,228,4)" fg:x="1235" fg:w="1"/><text x="98.1881%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.9381%" y="565" width="0.0793%" height="15" fill="rgb(206,139,51)" fg:x="1235" fg:w="1"/><text x="98.1881%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.9381%" y="549" width="0.0793%" height="15" fill="rgb(236,70,25)" fg:x="1235" fg:w="1"/><text x="98.1881%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.9381%" y="533" width="0.0793%" height="15" fill="rgb(224,211,44)" fg:x="1235" fg:w="1"/><text x="98.1881%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="98.0174%" y="613" width="0.0793%" height="15" fill="rgb(226,160,45)" fg:x="1236" fg:w="1"/><text x="98.2674%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.0174%" y="597" width="0.0793%" height="15" fill="rgb(235,150,10)" fg:x="1236" fg:w="1"/><text x="98.2674%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="98.0174%" y="581" width="0.0793%" height="15" fill="rgb(253,222,52)" fg:x="1236" fg:w="1"/><text x="98.2674%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.0174%" y="565" width="0.0793%" height="15" fill="rgb(248,159,14)" fg:x="1236" fg:w="1"/><text x="98.2674%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.0174%" y="549" width="0.0793%" height="15" fill="rgb(252,161,4)" fg:x="1236" fg:w="1"/><text x="98.2674%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="98.0174%" y="533" width="0.0793%" height="15" fill="rgb(227,107,7)" fg:x="1236" fg:w="1"/><text x="98.2674%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.0174%" y="517" width="0.0793%" height="15" fill="rgb(248,227,35)" fg:x="1236" fg:w="1"/><text x="98.2674%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.0174%" y="501" width="0.0793%" height="15" fill="rgb(240,68,14)" fg:x="1236" fg:w="1"/><text x="98.2674%" y="511.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="98.0967%" y="613" width="0.0793%" height="15" fill="rgb(243,5,47)" fg:x="1237" fg:w="1"/><text x="98.3467%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="98.0967%" y="597" width="0.0793%" height="15" fill="rgb(225,134,14)" fg:x="1237" fg:w="1"/><text x="98.3467%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="98.0967%" y="581" width="0.0793%" height="15" fill="rgb(225,207,41)" fg:x="1237" fg:w="1"/><text x="98.3467%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.0967%" y="565" width="0.0793%" height="15" fill="rgb(207,214,21)" fg:x="1237" fg:w="1"/><text x="98.3467%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.0967%" y="549" width="0.0793%" height="15" fill="rgb(230,100,48)" fg:x="1237" fg:w="1"/><text x="98.3467%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="98.0967%" y="533" width="0.0793%" height="15" fill="rgb(231,155,51)" fg:x="1237" fg:w="1"/><text x="98.3467%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.0967%" y="517" width="0.0793%" height="15" fill="rgb(252,98,23)" fg:x="1237" fg:w="1"/><text x="98.3467%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.0967%" y="501" width="0.0793%" height="15" fill="rgb(216,151,14)" fg:x="1237" fg:w="1"/><text x="98.3467%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.1761%" y="485" width="0.0793%" height="15" fill="rgb(250,20,49)" fg:x="1238" fg:w="1"/><text x="98.4261%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.1761%" y="469" width="0.0793%" height="15" fill="rgb(217,134,33)" fg:x="1238" fg:w="1"/><text x="98.4261%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.3347%" y="389" width="0.0793%" height="15" fill="rgb(205,94,24)" fg:x="1240" fg:w="1"/><text x="98.5847%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.4140%" y="357" width="0.0793%" height="15" fill="rgb(244,96,26)" fg:x="1241" fg:w="1"/><text x="98.6640%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="98.1761%" y="565" width="0.3965%" height="15" fill="rgb(218,48,4)" fg:x="1238" fg:w="5"/><text x="98.4261%" y="575.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="98.1761%" y="549" width="0.3965%" height="15" fill="rgb(210,74,37)" fg:x="1238" fg:w="5"/><text x="98.4261%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="98.1761%" y="533" width="0.3965%" height="15" fill="rgb(240,170,7)" fg:x="1238" fg:w="5"/><text x="98.4261%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="98.1761%" y="517" width="0.3965%" height="15" fill="rgb(251,120,48)" fg:x="1238" fg:w="5"/><text x="98.4261%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="98.1761%" y="501" width="0.3965%" height="15" fill="rgb(219,149,25)" fg:x="1238" fg:w="5"/><text x="98.4261%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="98.2554%" y="485" width="0.3172%" height="15" fill="rgb(223,222,45)" fg:x="1239" fg:w="4"/><text x="98.5054%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.2554%" y="469" width="0.3172%" height="15" fill="rgb(216,18,1)" fg:x="1239" fg:w="4"/><text x="98.5054%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="98.2554%" y="453" width="0.3172%" height="15" fill="rgb(251,184,12)" fg:x="1239" fg:w="4"/><text x="98.5054%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="98.2554%" y="437" width="0.3172%" height="15" fill="rgb(222,116,37)" fg:x="1239" fg:w="4"/><text x="98.5054%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="98.3347%" y="421" width="0.2379%" height="15" fill="rgb(236,223,24)" fg:x="1240" fg:w="3"/><text x="98.5847%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.3347%" y="405" width="0.2379%" height="15" fill="rgb(229,38,32)" fg:x="1240" fg:w="3"/><text x="98.5847%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.4140%" y="389" width="0.1586%" height="15" fill="rgb(251,208,7)" fg:x="1241" fg:w="2"/><text x="98.6640%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.4140%" y="373" width="0.1586%" height="15" fill="rgb(207,226,43)" fg:x="1241" fg:w="2"/><text x="98.6640%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.4933%" y="357" width="0.0793%" height="15" fill="rgb(247,229,43)" fg:x="1242" fg:w="1"/><text x="98.7433%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5726%" y="421" width="0.0793%" height="15" fill="rgb(217,201,52)" fg:x="1243" fg:w="1"/><text x="98.8226%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="98.5726%" y="405" width="0.0793%" height="15" fill="rgb(228,68,39)" fg:x="1243" fg:w="1"/><text x="98.8226%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="98.5726%" y="389" width="0.0793%" height="15" fill="rgb(218,138,7)" fg:x="1243" fg:w="1"/><text x="98.8226%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="98.1761%" y="613" width="0.5551%" height="15" fill="rgb(230,78,37)" fg:x="1238" fg:w="7"/><text x="98.4261%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="98.1761%" y="597" width="0.5551%" height="15" fill="rgb(246,177,36)" fg:x="1238" fg:w="7"/><text x="98.4261%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="98.1761%" y="581" width="0.5551%" height="15" fill="rgb(231,190,6)" fg:x="1238" fg:w="7"/><text x="98.4261%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="98.5726%" y="565" width="0.1586%" height="15" fill="rgb(234,217,25)" fg:x="1243" fg:w="2"/><text x="98.8226%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="98.5726%" y="549" width="0.1586%" height="15" fill="rgb(249,131,38)" fg:x="1243" fg:w="2"/><text x="98.8226%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.5726%" y="533" width="0.1586%" height="15" fill="rgb(253,168,16)" fg:x="1243" fg:w="2"/><text x="98.8226%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.5726%" y="517" width="0.1586%" height="15" fill="rgb(232,181,39)" fg:x="1243" fg:w="2"/><text x="98.8226%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5726%" y="501" width="0.1586%" height="15" fill="rgb(216,167,0)" fg:x="1243" fg:w="2"/><text x="98.8226%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.5726%" y="485" width="0.1586%" height="15" fill="rgb(247,77,10)" fg:x="1243" fg:w="2"/><text x="98.8226%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5726%" y="469" width="0.1586%" height="15" fill="rgb(220,28,10)" fg:x="1243" fg:w="2"/><text x="98.8226%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="98.5726%" y="453" width="0.1586%" height="15" fill="rgb(251,163,49)" fg:x="1243" fg:w="2"/><text x="98.8226%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5726%" y="437" width="0.1586%" height="15" fill="rgb(249,148,50)" fg:x="1243" fg:w="2"/><text x="98.8226%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.6519%" y="421" width="0.0793%" height="15" fill="rgb(238,149,36)" fg:x="1244" fg:w="1"/><text x="98.9019%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6519%" y="405" width="0.0793%" height="15" fill="rgb(248,191,13)" fg:x="1244" fg:w="1"/><text x="98.9019%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.6519%" y="389" width="0.0793%" height="15" fill="rgb(233,73,17)" fg:x="1244" fg:w="1"/><text x="98.9019%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="98.7312%" y="613" width="0.0793%" height="15" fill="rgb(233,197,11)" fg:x="1245" fg:w="1"/><text x="98.9812%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="98.7312%" y="597" width="0.0793%" height="15" fill="rgb(245,42,8)" fg:x="1245" fg:w="1"/><text x="98.9812%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.7312%" y="581" width="0.0793%" height="15" fill="rgb(217,39,50)" fg:x="1245" fg:w="1"/><text x="98.9812%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="98.7312%" y="565" width="0.0793%" height="15" fill="rgb(250,23,13)" fg:x="1245" fg:w="1"/><text x="98.9812%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="98.7312%" y="549" width="0.0793%" height="15" fill="rgb(219,204,45)" fg:x="1245" fg:w="1"/><text x="98.9812%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="98.7312%" y="533" width="0.0793%" height="15" fill="rgb(248,54,16)" fg:x="1245" fg:w="1"/><text x="98.9812%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="98.7312%" y="517" width="0.0793%" height="15" fill="rgb(213,16,14)" fg:x="1245" fg:w="1"/><text x="98.9812%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.7312%" y="501" width="0.0793%" height="15" fill="rgb(245,18,44)" fg:x="1245" fg:w="1"/><text x="98.9812%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="98.7312%" y="485" width="0.0793%" height="15" fill="rgb(232,10,47)" fg:x="1245" fg:w="1"/><text x="98.9812%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="98.7312%" y="469" width="0.0793%" height="15" fill="rgb(237,185,33)" fg:x="1245" fg:w="1"/><text x="98.9812%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="98.7312%" y="453" width="0.0793%" height="15" fill="rgb(224,223,44)" fg:x="1245" fg:w="1"/><text x="98.9812%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="98.7312%" y="437" width="0.0793%" height="15" fill="rgb(238,98,11)" fg:x="1245" fg:w="1"/><text x="98.9812%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="98.7312%" y="421" width="0.0793%" height="15" fill="rgb(217,33,34)" fg:x="1245" fg:w="1"/><text x="98.9812%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="98.7312%" y="405" width="0.0793%" height="15" fill="rgb(232,193,38)" fg:x="1245" fg:w="1"/><text x="98.9812%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="98.7312%" y="389" width="0.0793%" height="15" fill="rgb(231,23,4)" fg:x="1245" fg:w="1"/><text x="98.9812%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (79 samples, 6.26%)</title><rect x="92.6249%" y="837" width="6.2649%" height="15" fill="rgb(218,154,4)" fg:x="1168" fg:w="79"/><text x="92.8749%" y="847.50">&lt;engine:..</text></g><g><title>kernel::plugins::mw::apply_middleware (79 samples, 6.26%)</title><rect x="92.6249%" y="821" width="6.2649%" height="15" fill="rgb(243,171,32)" fg:x="1168" fg:w="79"/><text x="92.8749%" y="831.50">kernel::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (79 samples, 6.26%)</title><rect x="92.6249%" y="805" width="6.2649%" height="15" fill="rgb(210,102,6)" fg:x="1168" fg:w="79"/><text x="92.8749%" y="815.50">kernel::..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (79 samples, 6.26%)</title><rect x="92.6249%" y="789" width="6.2649%" height="15" fill="rgb(205,134,8)" fg:x="1168" fg:w="79"/><text x="92.8749%" y="799.50">&lt;engine:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (70 samples, 5.55%)</title><rect x="93.3386%" y="773" width="5.5511%" height="15" fill="rgb(240,115,17)" fg:x="1177" fg:w="70"/><text x="93.5886%" y="783.50">kernel:..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (70 samples, 5.55%)</title><rect x="93.3386%" y="757" width="5.5511%" height="15" fill="rgb(213,62,14)" fg:x="1177" fg:w="70"/><text x="93.5886%" y="767.50">&lt;plugin..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (70 samples, 5.55%)</title><rect x="93.3386%" y="741" width="5.5511%" height="15" fill="rgb(249,149,16)" fg:x="1177" fg:w="70"/><text x="93.5886%" y="751.50">kernel:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (70 samples, 5.55%)</title><rect x="93.3386%" y="725" width="5.5511%" height="15" fill="rgb(220,195,22)" fg:x="1177" fg:w="70"/><text x="93.5886%" y="735.50">core::o..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (70 samples, 5.55%)</title><rect x="93.3386%" y="709" width="5.5511%" height="15" fill="rgb(211,106,49)" fg:x="1177" fg:w="70"/><text x="93.5886%" y="719.50">kernel:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (70 samples, 5.55%)</title><rect x="93.3386%" y="693" width="5.5511%" height="15" fill="rgb(214,176,52)" fg:x="1177" fg:w="70"/><text x="93.5886%" y="703.50">core::o..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (70 samples, 5.55%)</title><rect x="93.3386%" y="677" width="5.5511%" height="15" fill="rgb(212,121,30)" fg:x="1177" fg:w="70"/><text x="93.5886%" y="687.50">&lt;alloc:..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (70 samples, 5.55%)</title><rect x="93.3386%" y="661" width="5.5511%" height="15" fill="rgb(231,167,39)" fg:x="1177" fg:w="70"/><text x="93.5886%" y="671.50">&lt;engine..</text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (30 samples, 2.38%)</title><rect x="96.5107%" y="645" width="2.3791%" height="15" fill="rgb(233,93,22)" fg:x="1217" fg:w="30"/><text x="96.7607%" y="655.50">&lt;p..</text></g><g><title>plugins_core::location::change_location (14 samples, 1.11%)</title><rect x="97.7795%" y="629" width="1.1102%" height="15" fill="rgb(242,187,26)" fg:x="1233" fg:w="14"/><text x="98.0295%" y="639.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="98.8105%" y="613" width="0.0793%" height="15" fill="rgb(209,152,0)" fg:x="1246" fg:w="1"/><text x="99.0605%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="98.8105%" y="597" width="0.0793%" height="15" fill="rgb(208,174,22)" fg:x="1246" fg:w="1"/><text x="99.0605%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.8105%" y="581" width="0.0793%" height="15" fill="rgb(216,172,41)" fg:x="1246" fg:w="1"/><text x="99.0605%" y="591.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.8105%" y="565" width="0.0793%" height="15" fill="rgb(238,206,48)" fg:x="1246" fg:w="1"/><text x="99.0605%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8105%" y="549" width="0.0793%" height="15" fill="rgb(229,70,36)" fg:x="1246" fg:w="1"/><text x="99.0605%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.8105%" y="533" width="0.0793%" height="15" fill="rgb(230,152,25)" fg:x="1246" fg:w="1"/><text x="99.0605%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="98.8898%" y="821" width="0.0793%" height="15" fill="rgb(243,173,54)" fg:x="1247" fg:w="1"/><text x="99.1398%" y="831.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.0484%" y="789" width="0.0793%" height="15" fill="rgb(252,104,23)" fg:x="1249" fg:w="1"/><text x="99.2984%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.0484%" y="773" width="0.0793%" height="15" fill="rgb(224,24,50)" fg:x="1249" fg:w="1"/><text x="99.2984%" y="783.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0484%" y="757" width="0.0793%" height="15" fill="rgb(212,13,43)" fg:x="1249" fg:w="1"/><text x="99.2984%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.0484%" y="741" width="0.0793%" height="15" fill="rgb(243,34,26)" fg:x="1249" fg:w="1"/><text x="99.2984%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0484%" y="725" width="0.0793%" height="15" fill="rgb(239,209,5)" fg:x="1249" fg:w="1"/><text x="99.2984%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.0484%" y="709" width="0.0793%" height="15" fill="rgb(239,212,43)" fg:x="1249" fg:w="1"/><text x="99.2984%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0484%" y="693" width="0.0793%" height="15" fill="rgb(228,72,25)" fg:x="1249" fg:w="1"/><text x="99.2984%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.0484%" y="677" width="0.0793%" height="15" fill="rgb(205,82,49)" fg:x="1249" fg:w="1"/><text x="99.2984%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0484%" y="661" width="0.0793%" height="15" fill="rgb(221,205,24)" fg:x="1249" fg:w="1"/><text x="99.2984%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.0484%" y="645" width="0.0793%" height="15" fill="rgb(206,213,29)" fg:x="1249" fg:w="1"/><text x="99.2984%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.0484%" y="629" width="0.0793%" height="15" fill="rgb(228,180,8)" fg:x="1249" fg:w="1"/><text x="99.2984%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (5 samples, 0.40%)</title><rect x="98.8898%" y="837" width="0.3965%" height="15" fill="rgb(217,131,9)" fg:x="1247" fg:w="5"/><text x="99.1398%" y="847.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (4 samples, 0.32%)</title><rect x="98.9691%" y="821" width="0.3172%" height="15" fill="rgb(207,188,14)" fg:x="1248" fg:w="4"/><text x="99.2191%" y="831.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (3 samples, 0.24%)</title><rect x="99.0484%" y="805" width="0.2379%" height="15" fill="rgb(254,82,24)" fg:x="1249" fg:w="3"/><text x="99.2984%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.1277%" y="789" width="0.1586%" height="15" fill="rgb(209,29,48)" fg:x="1250" fg:w="2"/><text x="99.3777%" y="799.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1277%" y="773" width="0.1586%" height="15" fill="rgb(248,24,3)" fg:x="1250" fg:w="2"/><text x="99.3777%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.1277%" y="757" width="0.1586%" height="15" fill="rgb(209,134,11)" fg:x="1250" fg:w="2"/><text x="99.3777%" y="767.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1277%" y="741" width="0.1586%" height="15" fill="rgb(253,54,47)" fg:x="1250" fg:w="2"/><text x="99.3777%" y="751.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.1277%" y="725" width="0.1586%" height="15" fill="rgb(214,163,42)" fg:x="1250" fg:w="2"/><text x="99.3777%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1277%" y="709" width="0.1586%" height="15" fill="rgb(206,25,12)" fg:x="1250" fg:w="2"/><text x="99.3777%" y="719.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1277%" y="693" width="0.1586%" height="15" fill="rgb(240,49,44)" fg:x="1250" fg:w="2"/><text x="99.3777%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="99.1277%" y="677" width="0.1586%" height="15" fill="rgb(245,4,38)" fg:x="1250" fg:w="2"/><text x="99.3777%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1277%" y="661" width="0.1586%" height="15" fill="rgb(215,72,38)" fg:x="1250" fg:w="2"/><text x="99.3777%" y="671.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1277%" y="645" width="0.1586%" height="15" fill="rgb(215,123,24)" fg:x="1250" fg:w="2"/><text x="99.3777%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="99.1277%" y="629" width="0.1586%" height="15" fill="rgb(242,140,44)" fg:x="1250" fg:w="2"/><text x="99.3777%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.2070%" y="613" width="0.0793%" height="15" fill="rgb(243,36,26)" fg:x="1251" fg:w="1"/><text x="99.4570%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="99.2863%" y="805" width="0.0793%" height="15" fill="rgb(207,91,21)" fg:x="1252" fg:w="1"/><text x="99.5363%" y="815.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="99.3656%" y="789" width="0.0793%" height="15" fill="rgb(253,111,50)" fg:x="1253" fg:w="1"/><text x="99.6156%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="99.3656%" y="773" width="0.0793%" height="15" fill="rgb(228,163,27)" fg:x="1253" fg:w="1"/><text x="99.6156%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="99.3656%" y="757" width="0.0793%" height="15" fill="rgb(205,182,13)" fg:x="1253" fg:w="1"/><text x="99.6156%" y="767.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="99.3656%" y="741" width="0.0793%" height="15" fill="rgb(247,194,0)" fg:x="1253" fg:w="1"/><text x="99.6156%" y="751.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.4449%" y="773" width="0.0793%" height="15" fill="rgb(241,58,47)" fg:x="1254" fg:w="1"/><text x="99.6949%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4449%" y="757" width="0.0793%" height="15" fill="rgb(219,25,53)" fg:x="1254" fg:w="1"/><text x="99.6949%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4449%" y="741" width="0.0793%" height="15" fill="rgb(210,11,24)" fg:x="1254" fg:w="1"/><text x="99.6949%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4449%" y="725" width="0.0793%" height="15" fill="rgb(247,114,30)" fg:x="1254" fg:w="1"/><text x="99.6949%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4449%" y="709" width="0.0793%" height="15" fill="rgb(213,74,28)" fg:x="1254" fg:w="1"/><text x="99.6949%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.4449%" y="693" width="0.0793%" height="15" fill="rgb(208,210,48)" fg:x="1254" fg:w="1"/><text x="99.6949%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.4449%" y="677" width="0.0793%" height="15" fill="rgb(218,46,19)" fg:x="1254" fg:w="1"/><text x="99.6949%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.4449%" y="661" width="0.0793%" height="15" fill="rgb(242,194,21)" fg:x="1254" fg:w="1"/><text x="99.6949%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (3 samples, 0.24%)</title><rect x="99.4449%" y="789" width="0.2379%" height="15" fill="rgb(229,72,4)" fg:x="1254" fg:w="3"/><text x="99.6949%" y="799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.5242%" y="773" width="0.1586%" height="15" fill="rgb(231,58,6)" fg:x="1255" fg:w="2"/><text x="99.7742%" y="783.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.5242%" y="757" width="0.1586%" height="15" fill="rgb(252,78,15)" fg:x="1255" fg:w="2"/><text x="99.7742%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.6035%" y="741" width="0.0793%" height="15" fill="rgb(246,64,50)" fg:x="1256" fg:w="1"/><text x="99.8535%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6035%" y="725" width="0.0793%" height="15" fill="rgb(217,41,24)" fg:x="1256" fg:w="1"/><text x="99.8535%" y="735.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.6035%" y="709" width="0.0793%" height="15" fill="rgb(246,48,46)" fg:x="1256" fg:w="1"/><text x="99.8535%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.6035%" y="693" width="0.0793%" height="15" fill="rgb(210,188,31)" fg:x="1256" fg:w="1"/><text x="99.8535%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.6035%" y="677" width="0.0793%" height="15" fill="rgb(211,152,13)" fg:x="1256" fg:w="1"/><text x="99.8535%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (6 samples, 0.48%)</title><rect x="99.2863%" y="837" width="0.4758%" height="15" fill="rgb(225,3,9)" fg:x="1252" fg:w="6"/><text x="99.5363%" y="847.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.48%)</title><rect x="99.2863%" y="821" width="0.4758%" height="15" fill="rgb(209,228,2)" fg:x="1252" fg:w="6"/><text x="99.5363%" y="831.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (5 samples, 0.40%)</title><rect x="99.3656%" y="805" width="0.3965%" height="15" fill="rgb(238,228,1)" fg:x="1253" fg:w="5"/><text x="99.6156%" y="815.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.6828%" y="789" width="0.0793%" height="15" fill="rgb(211,198,35)" fg:x="1257" fg:w="1"/><text x="99.9328%" y="799.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.6828%" y="773" width="0.0793%" height="15" fill="rgb(248,76,52)" fg:x="1257" fg:w="1"/><text x="99.9328%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.6828%" y="757" width="0.0793%" height="15" fill="rgb(227,204,49)" fg:x="1257" fg:w="1"/><text x="99.9328%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.6828%" y="741" width="0.0793%" height="15" fill="rgb(254,148,46)" fg:x="1257" fg:w="1"/><text x="99.9328%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6828%" y="725" width="0.0793%" height="15" fill="rgb(252,97,43)" fg:x="1257" fg:w="1"/><text x="99.9328%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.6828%" y="709" width="0.0793%" height="15" fill="rgb(212,80,12)" fg:x="1257" fg:w="1"/><text x="99.9328%" y="719.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.7621%" y="789" width="0.0793%" height="15" fill="rgb(254,99,49)" fg:x="1258" fg:w="1"/><text x="100.0121%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="99.8414%" y="789" width="0.0793%" height="15" fill="rgb(206,194,15)" fg:x="1259" fg:w="1"/><text x="100.0914%" y="799.50"></text></g><g><title>all (1,261 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(226,19,53)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="1215.50"></text></g><g><title>simple-efc96132 (1,261 samples, 100.00%)</title><rect x="0.0000%" y="1189" width="100.0000%" height="15" fill="rgb(246,39,21)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="1199.50">simple-efc96132</text></g><g><title>_start (1,261 samples, 100.00%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(208,4,51)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="1183.50">_start</text></g><g><title>__libc_start_main (1,261 samples, 100.00%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(205,70,9)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="1167.50">__libc_start_main</text></g><g><title>main (1,261 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(238,107,40)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="1151.50">main</text></g><g><title>std::rt::lang_start_internal (1,261 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(251,94,20)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="1135.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,261 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(238,124,23)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="1119.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,261 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(236,18,23)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="1103.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,261 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(236,56,32)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="1087.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,261 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(244,115,51)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="1071.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,261 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(228,170,36)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="1055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,261 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(205,135,5)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,261 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(244,153,21)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="1023.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,261 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(241,51,45)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="1007.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,261 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(235,30,2)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="991.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,261 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(230,138,17)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="975.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,261 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(225,227,46)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="959.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,261 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(242,120,29)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="943.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,261 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(214,204,1)" fg:x="0" fg:w="1261"/><text x="0.2500%" y="927.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (270 samples, 21.41%)</title><rect x="78.5884%" y="901" width="21.4116%" height="15" fill="rgb(239,202,12)" fg:x="991" fg:w="270"/><text x="78.8384%" y="911.50">&lt;criterion::routine::Function&lt;M,F,..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (270 samples, 21.41%)</title><rect x="78.5884%" y="885" width="21.4116%" height="15" fill="rgb(221,101,34)" fg:x="991" fg:w="270"/><text x="78.8384%" y="895.50">criterion::bencher::Bencher&lt;M&gt;::it..</text></g><g><title>tests::evaluate_text_in_new_domain (270 samples, 21.41%)</title><rect x="78.5884%" y="869" width="21.4116%" height="15" fill="rgb(215,109,50)" fg:x="991" fg:w="270"/><text x="78.8384%" y="879.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (95 samples, 7.53%)</title><rect x="92.4663%" y="853" width="7.5337%" height="15" fill="rgb(229,199,13)" fg:x="1166" fg:w="95"/><text x="92.7163%" y="863.50">engine::se..</text></g><g><title>engine::users::model::username_to_key (3 samples, 0.24%)</title><rect x="99.7621%" y="837" width="0.2379%" height="15" fill="rgb(253,82,26)" fg:x="1258" fg:w="3"/><text x="100.0121%" y="847.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="99.7621%" y="821" width="0.2379%" height="15" fill="rgb(205,57,20)" fg:x="1258" fg:w="3"/><text x="100.0121%" y="831.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="99.7621%" y="805" width="0.2379%" height="15" fill="rgb(207,57,32)" fg:x="1258" fg:w="3"/><text x="100.0121%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.9207%" y="789" width="0.0793%" height="15" fill="rgb(235,173,42)" fg:x="1260" fg:w="1"/><text x="100.1707%" y="799.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.9207%" y="773" width="0.0793%" height="15" fill="rgb(230,147,10)" fg:x="1260" fg:w="1"/><text x="100.1707%" y="783.50"></text></g></svg></svg>